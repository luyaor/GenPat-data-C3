{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f28384510f19a50390233504b363457d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ac15b72a3462440ff76368cc339d9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "commitAfterChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected void initZipOutputStream(ZipOutputStream zOut)         throws IOException, BuildException", "signatureAfterChange": "      protected void initZipOutputStream(ZipOutputStream zOut)         throws IOException, BuildException", "diff": ["-            String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "-            InputStream in = this.getClass().getResourceAsStream(s);", "-            if ( in == null )", "-                throw new BuildException ( \"Could not find: \" + s );", "-            zipDir(null, zOut, \"META-INF/\");", "-            zipFile(in, zOut, \"META-INF/MANIFEST.MF\", System.currentTimeMillis());", "+            execManifest = null;", "-", "+        else {", "+            execManifest = new Manifest();", "+            execManifest.merge(manifest);", "+        }", "+        zipDir(null, zOut, \"META-INF/\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5da0e8975d2580241529cc35356dac4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "diff": ["+            String defaultManifest = \"/org/apache/tools/ant/defaultManifest.mf\";", "+            InputStream in = this.getClass().getResourceAsStream(defaultManifest);", "+            if ( in == null ) {", "+                throw new BuildException ( \"Could not find: \" + defaultManifest );", "+            }", "+            ", "+            Manifest manifest = new Manifest(in);", "-            jarStream = new JarOutputStream(new FileOutputStream(jarfile));", "+            jarStream = new JarOutputStream(new FileOutputStream(jarfile), manifest);"]}]}