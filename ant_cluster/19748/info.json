{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f907003302a9f070a5d4bc93442f8a23", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09bc5de6a3e93f14068b2815d7e1dba0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jlink/JlinkTask.java", "commitBeforeChange": "d60b6ca1eea0a3372c99965f3c15466328659908", "commitAfterChange": "c6c232893c39257745a8f7a618bcdb5c59791cae", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public  void execute() throws BuildException", "signatureAfterChange": "     public  void execute() throws BuildException", "diff": ["-        if ( outfile == null ) {", "-            throw new BuildException( \"outfile attribute is required! Please set.\" );", "+        if (outfile == null) {", "+            throw new BuildException(\"outfile attribute is required! \" ", "+                + \"Please set.\");", "-            throw new BuildException( \"addfiles or mergefiles required! Please set.\" );", "+            throw new BuildException(\"addfiles or mergefiles required! \" ", "+                + \"Please set.\");", "-        log( \"linking:     \" + outfile.getPath() );", "-        log( \"compression: \" + compress, Project.MSG_VERBOSE );", "+        log(\"linking:     \" + outfile.getPath());", "+        log(\"compression: \" + compress, Project.MSG_VERBOSE);", "-        linker .setOutfile( outfile.getPath() );", "-        linker .setCompression( compress );", "-        if (haveMergeFiles()){", "-            log( \"merge files: \" + mergefiles .toString(), Project .MSG_VERBOSE );", "-            linker .addMergeFiles( mergefiles .list() );", "+        linker.setOutfile(outfile.getPath());", "+        linker.setCompression(compress);", "+        if (haveMergeFiles()) {", "+            log(\"merge files: \" + mergefiles.toString(), Project.MSG_VERBOSE );", "+            linker.addMergeFiles( mergefiles.list() );", "-        if (haveAddFiles()){", "-            log( \"add files: \" + addfiles .toString(), Project .MSG_VERBOSE );", "-            linker .addAddFiles( addfiles .list() );", "+        if (haveAddFiles()) {", "+            log(\"add files: \" + addfiles.toString(), Project .MSG_VERBOSE);", "+            linker.addAddFiles(addfiles.list());", "-            linker .link();", "-        } catch( Exception ex ) {", "-            throw new BuildException( ex, location );", "+            linker.link();", "+        } catch(Exception ex) {", "+            throw new BuildException(ex, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af7d3ca002aba6621e46e89852359a7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "7da091a46f02f686fb6c2f960b2f6c261a7fbdf2", "commitAfterChange": "4a827ff185932f529e5ef867256e54f5aab798e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkExtension(final File file)", "signatureAfterChange": "     private void checkExtension(final File file)", "diff": ["-            final String message =", "-                \"File \" + file + \" does not exist\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"File \" + file + \" does not exist\");", "-            final String message =", "-                \"File \" + file + \" is not a file\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"File \" + file + \" is not a file\");", "-", "-            final String message = \"Setting property to \" + file", "-                + \" without verifying library satisfies extension\";", "-            getProject().log(message, Project.MSG_VERBOSE);", "+            getProject().log(\"Setting property to \" + file", "+                    + \" without verifying library satisfies extension\", Project.MSG_VERBOSE);", "-            getProject().log(\"Checking file \" + file", "-                + \" to see if it satisfies extension\", Project.MSG_VERBOSE);", "-            final Manifest manifest =", "-                ExtensionUtil.getManifest(file);", "-            final Extension[] extensions =", "-                Extension.getAvailable(manifest);", "+            getProject().log(\"Checking file \" + file + \" to see if it satisfies extension\",", "+                    Project.MSG_VERBOSE);", "+            final Manifest manifest = ExtensionUtil.getManifest(file);", "+            final Extension[] extensions = Extension.getAvailable(manifest);", "-", "-            getProject().log(\"File \" + file + \" skipped as it \"", "-                + \"does not satisfy extension\", Project.MSG_VERBOSE);", "-", "-            final String message =", "-                \"File \" + file + \" does not satisfy extension\";", "+            final String message = \"File \" + file + \" skipped as it \" + \"does not satisfy extension\";", "+            getProject().log(message, Project.MSG_VERBOSE);"]}]}