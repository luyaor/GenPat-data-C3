{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8803b5a3452e6f7c1fa89b99efe062c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "238256e3cd5a05a040d670ef3182ee57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ConfigException", "signatureAfterChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "diff": ["-         throws MalformedURLException, ConfigException {", "+         throws MalformedURLException, ExecutionException {", "-                        throw new ConfigException(\"Found more than one \"", "+                        throw new ExecutionException(\"Found more than one \"", "-                    throw new ConfigException(\"Unable to parse Ant library \"", "+                    throw new ExecutionException(\"Unable to parse Ant library \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501f4bf70f55accd5b62de000279f04f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries)          throws ConfigException", "signatureAfterChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries)          throws ExecutionException", "diff": ["-         throws ConfigException {", "+         throws ExecutionException {", "-                        throw new ConfigException(\"Could not find library, \"", "+                        throw new ExecutionException(\"Could not find library, \"", "-            throw new ConfigException(e);", "+            throw new ExecutionException(e);"]}]}