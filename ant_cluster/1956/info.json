{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bab1cf6566874d7aa0dcee82b082a85", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a61d00387415778c3746c3c811c682f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "11eb66160fc05b622bc3b8b68926b7e1fb5bc089", "commitAfterChange": "55ada84e847507662f8e884bca47fe2354d1f42f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          private DeweyDecimal getVersion()", "signatureAfterChange": "              private DeweyDecimal getVersion()", "diff": ["-    ", "+        ", "-        String versionString = p.getProperty(\"ant.version\");", "-        String v = versionString.substring(versionString.indexOf(\"Ant version\")+12, ", "-                versionString.indexOf(\"Ant version\")+17);", "-        char[] cs = v.toCharArray();", "-        int end = cs.length;", "-        for (int i = cs.length; i > 0; i--) {", "-            if (!Character.isLetter(cs[i-1])) {", "-                end = i;", "+        char[] versionString = p.getProperty(\"ant.version\").toCharArray();", "+        StringBuffer sb = new StringBuffer();", "+        boolean foundFirstDigit = false;", "+        for (int i=0; i<versionString.length; i++) {", "+            if (Character.isDigit(versionString[i])) {", "+                sb.append(versionString[i]);", "+                foundFirstDigit = true;", "+            }", "+            if  (versionString[i]=='.' && foundFirstDigit) {", "+                sb.append(versionString[i]);", "+            }", "+            if (Character.isLetter(versionString[i]) && foundFirstDigit) {", "-        v = v.substring(0, end);", "-        return new DeweyDecimal(v);", "+        return new DeweyDecimal(sb.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a041666300109061b8fc8df3439743f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "5e0218a9652cab04a824719dbb163e6dbccac3db", "commitAfterChange": "ddd4677c145ccc8e11755ea2aad6c53c3e15e9e3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private String[] parseUri(String uri)", "signatureAfterChange": "      private String parseUri(String uri)", "diff": ["-", "-    private String[] parseUri(String uri) {", "+    private String parseUri(String uri) {", "-        int indexOfPath = uri.indexOf(':', indexOfColon + 1);", "+        if (indexOfColon > -1 && indexOfColon < indexOfAt) {", "+            // user:password@host:/path notation", "+            setUsername(uri.substring(0, indexOfColon));", "+            setPassword(uri.substring(indexOfColon + 1, indexOfAt));", "+        } else {", "+            // no password, will require passphrase", "+            setUsername(uri.substring(0, indexOfAt));", "+        }", "-        String[] values = new String[4];", "-        values[0] = uri.substring(0, indexOfColon);", "-        values[1] = uri.substring(indexOfColon + 1, indexOfAt);", "-        values[2] = uri.substring(indexOfAt + 1, indexOfPath);", "-        values[3] = uri.substring(indexOfPath + 1);", "+        if (getUserInfo().getPassword() == null", "+            && getUserInfo().getPassphrase() == null) {", "+            throw new BuildException(\"neither password nor passphrase for user \"", "+                                     + getUserInfo().getName() + \" has been \"", "+                                     + \"given.  Can't authenticate.\");", "+        }", "-        return values;", "+        int indexOfPath = uri.indexOf(':', indexOfAt + 1);", "+        if (indexOfPath == -1) {", "+            throw new BuildException(\"no remote path in \" + uri);", "+        }", "+        ", "+        setHost(uri.substring(indexOfAt + 1, indexOfPath));", "+        return uri.substring(indexOfPath + 1);"]}]}