{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5c927bf15b11786f815ae3b8ec65a9b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0380f3f159426a385731736200570432", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "f292daba99b3d3955a157d1c43b7053e74df13da", "commitAfterChange": "1c3f4b1664951bb5e4c28de46b01dc50b0ee74bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static boolean matchPatternStart(String pattern, String str,                                                boolean isCaseSensitive)", "signatureAfterChange": "     public static boolean matchPatternStart(String pattern, String str,                                                boolean isCaseSensitive)", "diff": ["-        Vector patDirs = tokenizePath (pattern);", "-        Vector strDirs = tokenizePath (str);", "+        String[] patDirs = tokenizePathAsArray(pattern);", "+        String[] strDirs = tokenizePathAsArray(str);", "-        int patIdxEnd   = patDirs.size()-1;", "+        int patIdxEnd   = patDirs.length-1;", "-        int strIdxEnd   = strDirs.size()-1;", "+        int strIdxEnd   = strDirs.length-1;", "-            String patDir = (String)patDirs.elementAt(patIdxStart);", "+            String patDir = patDirs[patIdxStart];", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxStart),", "+            if (!match(patDir,strDirs[strIdxStart],"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c91bb22178d955e0ecced7164112182", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "ff703c26b39f59430562a6d123d1a9e5bcf358c4", "commitAfterChange": "4216b1a4ccd21fc290f2a5f1f9d96a83c18d051c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir)", "signatureAfterChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir)", "diff": ["-        Set s = new HashSet(nonOrphans);", "-        s.add(\"\");", "-        String[] excls = (String[]) s.toArray(new String[s.size()]);", "+        String[] excls = ", "+            (String[]) nonOrphans.toArray(new String[nonOrphans.size() + 1]);", "+        // want to keep toDir itself", "+        excls[nonOrphans.size()] = \"\";", "+        // ds returns the directories as it has visited them.", "+        // iterating through the array backwards means we are deleting", "+        // leaves before their parent nodes - thus making sure (well,", "+        // more likely) that the directories are empty when we try to", "+        // delete them."]}]}