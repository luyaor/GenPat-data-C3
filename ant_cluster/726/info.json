{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28ad46cab6fcb2cc69a2a989741a8b52", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf5e44a8619c3afdce70607e368977af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "       private AntClassLoader createLoader()", "signatureAfterChange": "      private AntClassLoader createLoader()", "diff": ["-", "+        // magic property ", "+        if (project.getProperty(REUSE_LOADER_REF) != null) {", "+            // Generate the 'reuse' name automatically from the reference.", "+            // This allows <taskdefs> that work on both ant1.4 and ant1.5.", "+            // ( in 1.4 it'll require the task/type to be in classpath if they", "+            //   are used togheter ).", "+            if (loaderId == null && classpathId != null) {", "+                loaderId = \"ant.loader.\" + classpathId;", "+            }", "+        }", "+        ", "+        // If a loader has been set ( either by loaderRef or magic property )", "+        if (loaderId != null) {", "+            Object reusedLoader = project.getReference(loaderId);", "+            if (reusedLoader != null) {", "+                if (reusedLoader instanceof AntClassLoader) {", "+                    return (AntClassLoader)reusedLoader;", "+                }", "+                // In future the reference object may be the <loader> type", "+                // if( reusedLoader instanceof Loader ) {", "+                //      return ((Loader)reusedLoader).getLoader(project);", "+                // }", "+            }", "+        }", "+       ", "+", "+", "+        // If the loader is new, record it for future uses by other", "+        // task/typedefs", "+        if (loaderId != null) {", "+            if (project.getReference(loaderId) == null) {", "+                project.addReference(loaderId, al);", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc0524b56e519148591517802101d38a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exit.java", "commitBeforeChange": "bdf630adb946df0b5a9cc58ec3aff200ef2c8e99", "commitAfterChange": "a8d3085b01b4e04df3eb81f913d51dc99f1cbf2e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            String text=null;", "-                throw new BuildException(message);", "+                text=message;", "-                throw new BuildException(\"No message\");", "+", "+                if(getProject().getProperty(ifCondition) != null) {", "+                    text=\"if=\"+ifCondition;", "+                }", "+                if (unlessCondition!=null && unlessCondition.length()>0", "+                        && getProject().getProperty(unlessCondition) == null) {", "+                    if (text == null) {", "+                        text = \"\";", "+                    } else {", "+                        text+=\" and \";", "+                    }", "+                    text+=\"unless=\"+unlessCondition;", "+                } else {", "+                    if(text==null) {", "+                        text = \"No message\";", "+                    }", "+                }", "+            throw new BuildException(text);"]}]}