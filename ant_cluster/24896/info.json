{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "382ded0ebb53b1745d1a90d7fe5ab326", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b0270c245474949c658f4a1873d872", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "e0c04a3b27b8a6637bb1af562df9b38644ee89b2", "commitAfterChange": "1f2eea24cabc5464b0d95392996cfd997cd8a2bc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        try {", "-            DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "-            String[] files = ds.getIncludedFiles();", "-            for (int i = 0; i < files.length; i++) {", "-                processFile(new File(srcDir.getAbsolutePath() + File.separator + files[i]));", "-                if (garbage_collect) {", "-                    System.gc();", "+        validateAttributes();", "+", "+        try {", "+            DirectoryScanner ds = null;", "+            String [] files =null;", "+            ArrayList filesList = new ArrayList();", "+", "+", "+            // deal with specified srcDir", "+            if (srcDir != null){", "+              ds = super.getDirectoryScanner(srcDir);", "+", "+              files = ds.getIncludedFiles();", "+              for (int i = 0; i < files.length; i++){", "+                filesList.add(new File(srcDir.getAbsolutePath() + File.separator + files[i]));", "+              }", "+            }", "+            // deal with the filesets", "+            for (int i = 0; i < filesets.size(); i++) {", "+                FileSet fs = (FileSet) filesets.elementAt(i);", "+                ds = fs.getDirectoryScanner(getProject());", "+                files =ds.getIncludedFiles();", "+                File fromDir = fs.getDir(getProject());", "+                for (int j = 0; j < files.length; j++){", "+                  filesList.add(new File(fromDir.getAbsolutePath() + File.separator + files[j]));", "+            // iterator through all the files and process them.", "+            for (Iterator i = filesList.iterator();i.hasNext();){", "+              File file = (File)i.next();", "+", "+              processFile(file);", "+              if (garbage_collect) {", "+                  System.gc();", "+              }", "+            }", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc14dc9ac350040363caf6be39febbf2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "b0f1f9cab707a5227a69d33ed613c5c988b00d4b", "commitAfterChange": "76c6de74b01f61acca8a153bf4dd38ce1926a248", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            DirectoryScanner ds = fs.getDirectoryScanner(project);", "-            String[] files = ds.getIncludedFiles();", "-            String[] dirs = ds.getIncludedDirectories();", "-            removeFiles(fs.getDir(project), files, dirs);", "+            try {", "+                DirectoryScanner ds = fs.getDirectoryScanner(project);", "+                String[] files = ds.getIncludedFiles();", "+                String[] dirs = ds.getIncludedDirectories();", "+                removeFiles(fs.getDir(project), files, dirs);", "+            } catch (BuildException be) {", "+                // directory doesn't exist or is not readable", "+                if (!quiet) {", "+                    throw be;", "+                } else {", "+                    log(be.getMessage(), Project.MSG_VERBOSE);", "+                }", "+            }", "-            DirectoryScanner ds = super.getDirectoryScanner(dir);", "-            String[] files = ds.getIncludedFiles();", "-            String[] dirs = ds.getIncludedDirectories();", "-            removeFiles(dir, files, dirs);", "+            try {", "+                DirectoryScanner ds = super.getDirectoryScanner(dir);", "+                String[] files = ds.getIncludedFiles();", "+                String[] dirs = ds.getIncludedDirectories();", "+                removeFiles(dir, files, dirs);", "+            } catch (BuildException be) {", "+                // directory doesn't exist or is not readable", "+                if (!quiet) {", "+                    throw be;", "+                } else {", "+                    log(be.getMessage(), Project.MSG_VERBOSE);", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc8b244e7264d0708585c1f57e5a5292", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "e160d8323df859e424047fd929fa01a3da0340a3", "commitAfterChange": "58d6ff11a8f8a336ebcce95385e4f8893e65db83", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "+", "+                ExtendedDirectoryScanner ds = new ExtendedDirectoryScanner();", "+                fs.setupDirectoryScanner(ds, getProject());", "+                ds.setFollowSymlinks(fs.isFollowSymlinks());", "+                ds.scan();", "-                    log(\"Skipping fileset for directory \"", "-                        + base + \". It is empty.\", Project.MSG_INFO);", "+                    int includedCount", "+                        = ((!\"dir\".equals(currentType))", "+                        ? ds.getIncludedFilesCount() : 0)", "+                        + ((!\"file\".equals(currentType))", "+                        ? ds.getIncludedDirsCount() : 0);", "+", "+                    log(\"Skipping fileset for directory \" + base + \". It is \"", "+                        + ((includedCount > 0) ? \"up to date.\" : \"empty.\"),", "+                        Project.MSG_INFO);", "-                    log(\"Skipping filelist for directory \"", "-                        + base + \". It is empty.\", Project.MSG_INFO);", "+                    ExtendedDirectoryScanner ds = new ExtendedDirectoryScanner();", "+                    ds.setBasedir(base);", "+                    ds.setIncludes(list.getFiles(getProject()));", "+                    ds.scan();", "+                    int includedCount", "+                        = ds.getIncludedFilesCount() + ds.getIncludedDirsCount();", "+", "+                    log(\"Skipping filelist for directory \" + base + \". It is \"", "+                        + ((includedCount > 0) ? \"up to date.\" : \"empty.\"),", "+                        Project.MSG_INFO);"]}]}