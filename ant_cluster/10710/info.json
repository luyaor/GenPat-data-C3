{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04ee2edb9e23024ec96d61759d96c7ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e084e6d5465ee98247376eb3461b0d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "2bcc3b328adcc97c10be2efba1077ccf28b92caa", "commitAfterChange": "4ad59f0fc5eb69936f4322c1394993d33299959b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void findRoles(final Class clz, Vector list)", "signatureAfterChange": "     private void findRoles(final Class clz, Vector list)", "diff": ["-     */", "-    private void findRoles(final Class clz, Vector list) {", "-\tfor (Enumeration e = roles.keys(); e.hasMoreElements();) {", "-\t    String role = (String) e.nextElement();", "-", "-\t    if (((Role) roles.get(role)).isImplementedBy(clz)) {", "-\t\tlist.addElement(role);", "-\t    }", "-\t}", "-\tif (parentTable != null) findRoles(clz, list);", "-    }", "+     */", "+    private void findRoles(final Class clz, Vector list) {", "+\tfor (Enumeration e = roles.keys(); e.hasMoreElements();) {", "+\t    String role = (String) e.nextElement();", "+", "+\t    if (((Role) roles.get(role)).isImplementedBy(clz)) {", "+\t\tlist.addElement(role);", "+\t    }", "+\t}", "+\tif (parentTable != null) parentTable.findRoles(clz, list);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a213e05d7154a60eb225a8c6372c01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void findRoles(final Class clz, Vector list)", "signatureAfterChange": "     private void findRoles(final Class clz, Vector list)", "diff": ["-     */", "-    private void findRoles(final Class clz, Vector list) {", "-\tfor (Enumeration e = roles.keys(); e.hasMoreElements();) {", "-\t    String role = (String) e.nextElement();", "-", "-\t    if (((Role) roles.get(role)).isImplementedBy(clz)) {", "-\t\tlist.addElement(role);", "-\t    }", "-\t}", "-\tif (parentTable != null) findRoles(clz, list);", "-    }", "+     */", "+    private void findRoles(final Class clz, Vector list) {", "+        for (Enumeration e = roles.keys(); e.hasMoreElements();) {", "+            String role = (String) e.nextElement();", "+", "+            if (((Role) roles.get(role)).isImplementedBy(clz)) {", "+                list.addElement(role);", "+            }", "+        }", "+        if (parentTable != null) parentTable.findRoles(clz, list);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f447981b917c1e6038acef4d43d63a7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "6885f5ccadd471cc33c19bdcca4271aa3086d3ca", "commitAfterChange": "8dfa7abd4d64b0cbef6166a28440f39f46d6efd1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void findRoles(final Class clz, Vector list)", "signatureAfterChange": "     private void findRoles(final Class clz, Vector list)", "diff": ["+     */", "+    private void findRoles(final Class clz, Vector list) {", "+\tfor (Enumeration e = roles.keys(); e.hasMoreElements();) {", "+\t    String role = (String) e.nextElement();", "+", "+\t    if (((Role) roles.get(role)).isImplementedBy(clz)) {", "+\t\tlist.addElement(role);", "+\t    }", "+\t}", "+\tif (parentTable != null) findRoles(clz, list);", "+    }", "-     */", "-    private void findRoles(final Class clz, Vector list) {", "-\tfor (Enumeration e = roles.keys(); e.hasMoreElements();) {", "-\t    String role = (String) e.nextElement();", "-", "-\t    if (((Role) roles.get(role)).isImplementedBy(clz)) {", "-\t\tlist.addElement(role);", "-\t    }", "-\t}", "-\tif (parentTable != null) parentTable.findRoles(clz, list);", "-    }"]}]}