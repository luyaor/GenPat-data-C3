{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3407de549a16a29f0799e553624e0d34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c4fdd82dede5fda5c70a3eb8fcca08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "ad48a0d3923fa8be67618640c8c2505084944d44", "commitAfterChange": "6422ae65b1c12e1f5979c9e172fe20023448a7e1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected static String formatTime(long millis)", "signatureAfterChange": "      protected static String formatTime(long millis)", "diff": ["-            return Long.toString(minutes) + \" minutes \" + Long.toString(seconds%60) + \" seconds\";", "+            return Long.toString(minutes) + \" minute\"", "+                + (minutes == 1 ? \" \" : \"s \")", "+                + Long.toString(seconds%60) + \" second\"", "+                + (seconds%60 == 1 ? \"\" : \"s\");", "-            return Long.toString(seconds) + \" seconds\";", "+            return Long.toString(seconds) + \" second\"", "+                + (seconds%60 == 1 ? \"\" : \"s\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d17462745d151a211f0b68a6bdade6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "44238fbb62419d41beec2afba160dc50acc5d59f", "commitAfterChange": "52f94cbb4ce1f66344062c083fcd50991e7be5bd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected static String formatTime(long millis)", "signatureAfterChange": "      protected static String formatTime(long millis)", "diff": ["+        Object[] args = {", "+            new Long(minutes),", "+            new Long(seconds % 60)", "+        };", "-        if (minutes > 0) {", "-            return Long.toString(minutes) + \" minute\"", "-                + (minutes == 1 ? \" \" : \"s \")", "-                + Long.toString(seconds%60) + \" second\"", "-                + (seconds%60 > 1 ? \"s\" : \"\");", "-        }", "-        else {", "-            return Long.toString(seconds) + \" second\"", "-                + (seconds%60 > 1 ? \"s\" : \"\");", "-        }", "-", "+        return MINUTE_SECONDS.format(args);"]}]}