{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1aa82b249d6b2e07d703b95e237408a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae4e90d21fe4a929ceb79d51e0dfde82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "3af551b1bbd21e0ff6d8bb1453dac216ce89e9da", "commitAfterChange": "7c2876282a38e560ee26eb15cf136629dc672c2e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        Vector savedFiles = (Vector) files.clone();", "+", "-            Enumeration e = filesets.elements();", "+            Vector files = new Vector();", "+            if (attachments != null) {", "+                Iterator iter = attachments.iterator();", "-            while (e.hasMoreElements()) {", "-                FileSet fs = (FileSet) e.nextElement();", "-", "-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-                String[] includedFiles = ds.getIncludedFiles();", "-                File baseDir = ds.getBasedir();", "-", "-                for (int j = 0; j < includedFiles.length; ++j) {", "-                    files.addElement(new File(baseDir, includedFiles[j]));", "+                while (iter.hasNext()) {", "+                    FileResource fr = (FileResource) iter.next();", "+                    files.addElement(fr.getFile());", "-            files = savedFiles;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8bc211dae3fc6aa777e12bb167516db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "e7ab62bc9179b392804835d02155e43d3d2cf5d6", "commitAfterChange": "2e6e170fb375181f4438e1de44808c7adab508a2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private URL[] buildClasspath( final File file, final File[] dependencies )         throws MalformedURLException", "signatureAfterChange": "     private String getRoleForName( final String name )         throws DeploymentException", "diff": ["-    private URL[] buildClasspath( final File file, final File[] dependencies )", "-        throws MalformedURLException", "-        final URL[] urls = new URL[ dependencies.length + 1 ];", "-", "-        for( int i = 0; i < dependencies.length; i++ )", "-            urls[ i ] = dependencies[ i ].toURL();", "-", "-        urls[ dependencies.length ] = file.toURL();", "-", "-        return urls;", "+     */", "+    private String getRoleForName( final String name )", "+        throws DeploymentException", "+    {", "+        final String role = m_roleManager.getRoleForName( name );", "+", "+        if( null == role )", "+        {", "+            final String message = REZ.getString( \"unknown-role4name.error\", name );", "+", "+        return role;"]}]}