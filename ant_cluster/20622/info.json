{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98b7e69ca888b5a02615e533487cb48a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206db15a2f991fd737f48745442bd405", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private static boolean containsTests(Class<?> testClass, boolean isJUnit4)", "signatureAfterChange": "      private static boolean containsTests(final Class<?> testClass, final boolean isJUnit4)", "diff": ["-    private static boolean containsTests(Class<?> testClass, boolean isJUnit4) {", "+    private static boolean containsTests(final Class<?> testClass, final boolean isJUnit4) {", "-        } catch (ClassNotFoundException e) {", "+        } catch (final ClassNotFoundException e) {", "-        } catch(ClassNotFoundException ex) {", "+        } catch(final ClassNotFoundException ex) {", "-        } catch(ClassNotFoundException ex) {", "+        } catch(final ClassNotFoundException ex) {", "-        for (Class<?> innerClass : testClass.getDeclaredClasses()) {", "+        for (final Class<?> innerClass : testClass.getDeclaredClasses()) {", "-        for (Method m : testClass.getMethods()) {", "+        for (final Method m : testClass.getMethods()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44ddb60c1a85aecbd86bdfe47001ab83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "      private static JUnitTaskMirror createMirror(JUnitTask task, ClassLoader loader)", "signatureAfterChange": "      private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader)", "diff": ["-    private static JUnitTaskMirror createMirror(JUnitTask task, ClassLoader loader) {", "+    private static JUnitTaskMirror createMirror(final JUnitTask task, final ClassLoader loader) {", "-        } catch (ClassNotFoundException e) {", "+        } catch (final ClassNotFoundException e) {", "-            Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");", "+            final Class c = loader.loadClass(JUnitTaskMirror.class.getName() + \"Impl\");", "-            Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});", "+            final Constructor cons = c.getConstructor(new Class[] {JUnitTask.class});", "-        } catch (Exception e) {", "+        } catch (final Exception e) {"]}]}