{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "059402bc3dc53226314afbba44a7c6ca", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5998dd05342fe679fa0c607b17955082", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b2b649d12de2918643d1aa910f194df3be345df9", "commitAfterChange": "781a2ed11e930ead82864bf494d4d3c0b3e945f8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public synchronized void setNewProperty(String ns, String name,                                             Object value)", "signatureAfterChange": "     public synchronized void setNewProperty(String ns, String name,                                             Object value)", "diff": ["-        LocalProperty local = threadLocalProperties.getLocalProperty(name);", "-        boolean localPropertySet =", "-            local != null && local.getValue() != null;", "-        boolean localProperty = local != null;", "-", "-        if ((properties.get(name) != null && !localProperty)", "-            || localPropertySet) {", "+        if (null != properties.get(name)) {", "-                        + \"\\\"\", Project.MSG_VERBOSE);", "+                + \"\\\"\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9934a5019ad555aa09f2d3c27cd081b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "f3709b2e5b64d2d62ec339119d59109da61fc32e", "commitAfterChange": "eb4293a5c60d218c2410b4a03bfb90b29fd7cf52", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void executeCommand(String cmd) throws BuildException", "signatureAfterChange": "         private ByteArrayOutputStream executeCommand(Session session, String cmd) throws BuildException", "diff": ["-", "-    private void executeCommand(String cmd) throws BuildException {", "+   ", "+    private ByteArrayOutputStream executeCommand(Session session, String cmd) throws BuildException {", "-        Session session = null;", "-            /* execute the command */", "-            session = openSession();", "+            /* execute the command */", "-                // completed successfully", "-                if (outputProperty != null) {", "-                    getProject().setProperty(outputProperty, out.toString());", "-                }", "+                //success", "-        } finally {", "-            if (session != null && session.isConnected()) {", "-                session.disconnect();", "-            }", "+        return out;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e8fd2d9bae6a72a017beed8acecae13", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "2f0ab79127f87f9b769a60af0e3aad9da0bf4734", "commitAfterChange": "3cb22aa1c607dcc42ccdf3249be2c26e3585c6f5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["-        // version needed to extract", "-        // general purpose bit flag", "-        // CheckStyle:MagicNumber OFF", "-        if (zipMethod == DEFLATED && raf == null) {", "-            // requires version 2 as we are going to store length info", "-            // in the data descriptor", "-            writeOut(ZipShort.getBytes(20));", "-", "-            // bit3 set to signal, we use a data descriptor", "-            writeOut(ZipShort.getBytes(8));", "-        } else {", "-            writeOut(ZipShort.getBytes(10));", "-            writeOut(ZERO);", "-        }", "-        // CheckStyle:MagicNumber ON", "+        writeVersionNeededToExtractAndGeneralPurposeBits(zipMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ead28de596a4532007deba51f04cf99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "35239662037885a84ef34cba2d0b901b6280e48f", "commitAfterChange": "e1f227ae3daabd921f4557a8bdd849ee8c23e221", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void runStatements(Reader reader, PrintStream out)         throws SQLException, IOException", "signatureAfterChange": "     protected void runStatements(Reader reader, PrintStream out)         throws SQLException, IOException", "diff": ["-            if ((delimiterType.equals(DelimiterType.NORMAL) && StringUtils.endsWith(sql, delimiter))", "-                    || (delimiterType.equals(DelimiterType.ROW) && line.equals(delimiter))) {", "-                execSQL(sql.substring(0, sql.length() - delimiter.length()), out);", "+            int lastDelimPos = lastDelimiterPosition(sql, line);", "+            if (lastDelimPos > -1) {", "+                execSQL(sql.substring(0, lastDelimPos), out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d8241fd53f6e1c26140d62a2e6599d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "2f0ab79127f87f9b769a60af0e3aad9da0bf4734", "commitAfterChange": "3cb22aa1c607dcc42ccdf3249be2c26e3585c6f5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void writeCentralFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeCentralFileHeader(ZipEntry ze) throws IOException", "diff": ["-        // version needed to extract", "-        // general purpose bit flag", "-        if (ze.getMethod() == DEFLATED && raf == null) {", "-            // requires version 2 as we are going to store length info", "-            // in the data descriptor", "-            writeOut(ZipShort.getBytes(20));", "-", "-            // bit3 set to signal, we use a data descriptor", "-            writeOut(ZipShort.getBytes(8));", "-        } else {", "-            writeOut(ZipShort.getBytes(10));", "-            writeOut(ZERO);", "-        }", "-        // CheckStyle:MagicNumber ON", "+        final int zipMethod = ze.getMethod();", "+        writeVersionNeededToExtractAndGeneralPurposeBits(zipMethod);", "-        writeOut(ZipShort.getBytes(ze.getMethod()));", "+        writeOut(ZipShort.getBytes(zipMethod));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb631122b270e7ddec577a9c69d13704", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MAudit.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected ArrayList getOptions()         throws TaskException", "signatureAfterChange": "      protected ArrayList getOptions()         throws TaskException", "diff": ["-        final Path sourcePath = getSourcePath();", "-        if( sourcePath != null )", "-        {", "-            classpath.addPath( sourcePath );", "-            setSourcePath( null );// prevent from using -sourcepath", "-        }", "+        classpath.addPath( getSourcePath() );", "-        if( getSourcePath() != null )", "-        {", "-            options.add( \"-sourcepath\" );", "-            options.add( PathUtil.formatPath( getSourcePath() ) );", "-        }", "+", "+        //if( getSourcePath() != null )", "+        //{", "+        //    options.add( \"-sourcepath\" );", "+        //    options.add( PathUtil.formatPath( getSourcePath() ) );", "+        //}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb8af9b64dcf6ca272b06061d8812cf1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelper.java", "commitBeforeChange": "4fc2dab7e2b955f5ada45d3b97647084a15e951f", "commitAfterChange": "df867b66e89d6dcfa962efed57cbbdf543d8d7bd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static void configure(Object target, AttributeList attrs,                                   Project project) throws BuildException", "signatureAfterChange": "     public static void configure(Object target, AttributeList attrs,                                   Project project) throws BuildException", "diff": ["-        TaskAdapter adapter=null;", "-            adapter=(TaskAdapter)target;", "-            target=adapter.getProxy();", "+            target=((TaskAdapter)target).getProxy();", "-        if( adapter != null )", "-            adapter.setIntrospectionHelper( ih );", "-        // XXX What's that ?", "-            String name=attrs.getName(i).toLowerCase(Locale.US);", "-                if (adapter!=null ) {", "-                    adapter.setAttribute( name, value );", "-                } else {", "-                    ih.setAttribute(project, target, ", "-                                    name, value);", "-                }", "+                ih.setAttribute(project, target, ", "+                                attrs.getName(i).toLowerCase(Locale.US), value);", "+", "-                // XXX Shuldn't it be 'name' ( i.e. lower-cased ) ?"]}]}