{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df17999f97aba197f1b60f816a61d05b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7475fc7183641fccfb95422630f5291f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckin.java", "commitBeforeChange": "88799e0669076c9b0cc114a1e191bf3370820984", "commitAfterChange": "e612a58418f0a8880e8eeb4d82aca14d67a9b7a5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void logOperationDescription(         Folder starteamrootFolder, java.io.File targetrootFolder)", "signatureAfterChange": "     protected void logOperationDescription(         Folder starteamrootFolder, java.io.File targetrootFolder)", "diff": ["-        Folder starteamrootFolder, java.io.File targetrootFolder) ", "-    {", "+        Folder starteamrootFolder, java.io.File targetrootFolder) {", "-            +\" Checkin from\" ", "-            + (null == getRootLocalFolder() ? \" (default): \" : \": \") ", "+            + \" Checkin from\"", "+            + (null == getRootLocalFolder() ? \" (default): \" : \": \")", "-        ", "+", "-        } ", "-        else {", "+        } else {", "-            log(\"  Items will be checked in in accordance with repository status and regardless of lock status.\");", "-        } ", "-        else {", "-            log(\"  Items will be checked in regardless of repository status only if locked.\" );", "+            log(\"  Items will be checked in in accordance with repository \"", "+                + \"status and regardless of lock status.\");", "+        } else {", "+            log(\"  Items will be checked in regardless of repository status \"", "+                + \"only if locked.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d7d7f8aa60b499d90f56596eaff4e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "127199510da5c3579a0814f19a2635e95bbca901", "commitAfterChange": "e05733aa9b6666651f4aa455e3ce0dc0158951b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Resource[] selectOutOfDateSources(ProjectComponent logTo,                                                     Resource[] source,                                                     FileNameMapper mapper,                                                     ResourceFactory targets)", "signatureAfterChange": "     public static Resource[] selectOutOfDateSources(ProjectComponent logTo,                                                     Resource[] source,                                                     FileNameMapper mapper,                                                     ResourceFactory targets)", "diff": ["-        long now = (new java.util.Date()).getTime();", "+        return selectOutOfDateSources(logTo, source, mapper, targets,", "+                                      FileUtils.newFileUtils()", "+                                      .getFileTimestampGranularity());", "+    }", "-        /*", "-          If we're on Windows, we have to munge the time up to 2 secs to", "-          be able to check file modification times.", "-          (Windows has a max resolution of two secs for modification times)", "-          Actually this is a feature of the FAT file system, NTFS does", "-          not have it, so if we could reliably passively test for an NTFS", "-          file systems we could turn this off...", "-        */", "-        if (Os.isFamily(\"windows\")) {", "-            now += 2000;", "-        }", "-                    } else if (!atarget.isDirectory() && atarget.getLastModified()", "-                               < source[counter].getLastModified()) {"]}]}