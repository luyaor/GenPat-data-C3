{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c543e1d07868f02c3383a28c06f4743", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6412491c2a8da5e3808829b11e4b71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "commitAfterChange": "b139901cab374b10e2f73a58769fb4ef1c2837bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(String[] args)", "signatureAfterChange": "      public static void main(String[] args)", "diff": ["-                 * uses -Dname=value. However, the JDK goes ahead", "-                 * and parses this out to args {\"-Dname\", \"value\"}", "+                 * uses -Dname=value. However, in some cases, the JDK", "+                 * goes ahead * and parses this out to args ", "+                 *   {\"-Dname\", \"value\"}", "+                 *", "+                 * I don't know how to predict when the JDK is going", "+                 * to help or not, so we simply look for the equals sign.", "-                String value = args[++i];", "+                String value = null;", "+                int posEq = name.indexOf(\"=\");", "+                if (posEq > 0) {", "+                    value = name.substring(posEq+1);", "+                    name = name.substring(0, posEq);", "+                } else if (i < args.length)", "+                    value = args[++i];", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "649d16cf7877c48f0ad704b1cc59b3d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "4c0eb6ca6a1bbbf253d0f6f248052680f04ba65e", "commitAfterChange": "9b76a8661bc018586fdbae7e359cee2e6cc2f4e3", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-                    canonBase = getCanonicalFile(basedir);", "+                    canonBase = basedir.getCanonicalFile();", "-                            ? getCanonicalPath(myfile)", "+                            ? myfile.getCanonicalPath()", "-                                         getCanonicalFile(myfile));", "+                                         myfile.getCanonicalFile());", "-                            myfile = currentPath.findFile(basedir, true,", "-                                                          fileLister);", "+                            myfile = currentPath.findFile(basedir, true);", "-                    File f = currentPath.findFile(basedir, false, fileLister);", "+                    File f = currentPath.findFile(basedir, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97ab0506e94cfc5e5f4823f86dffe816", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "54fec62b385b75dc3eb2919685dbddc032e316a1", "commitAfterChange": "a9353331a922b229316fa3da01f1b2df9fd75059", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["+                            dirsIncludedR.addElement(new Resource(name,", "+                                                                  true,", "+                                                                  file", "+                                                                  .lastModified(),", "+                                                                  true));", "+                            filesIncludedR.addElement(new Resource(name,", "+                                                                   true,", "+                                                                   file", "+                                                                   .lastModified(),", "+                                                                   false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87514cf5b060c6efc831dee38f8fc96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "ffeb30bccea8adf4b543ae90b214734bdcb95ced", "commitAfterChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "             public FTPFile getFile(FTPFile[] theFiles, String lastpathelement)", "signatureAfterChange": "             public FTPFile getFile(FTPFile[] theFiles, String lastpathelement)", "diff": ["-                     if (theFiles[fcount].getName().equals(lastpathelement)) {", "-                         return theFiles[fcount];", "-                     } else if (!isCaseSensitive()", "-                         && theFiles[fcount].getName().equalsIgnoreCase(lastpathelement)) {", "-                         return theFiles[fcount];", "-                     }", "+                    if (theFiles[fcount] != null) {", "+                        if (theFiles[fcount].getName().equals(lastpathelement)) {", "+                            return theFiles[fcount];", "+                        } else if (!isCaseSensitive()", "+                                && theFiles[fcount].getName().equalsIgnoreCase(", "+                                        lastpathelement)) {", "+                            return theFiles[fcount];", "+                        }", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f62390200cb835f2a7182c4f3bda3e07", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "00ec1c435af8d15b42cb779373026ceedea92e59", "commitAfterChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "       private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["-                                    line.setColumn(line.getColumn() +", "-                                                   tablength -", "-                                                   (line.getColumn()", "-                                                    % tablength));", "+                                    line.setColumn(line.getColumn()", "+                                        + tablength", "+                                        - (line.getColumn() % tablength));", "-                    log(destFile +", "-                        \" is not written, as the contents are identical\",", "-                        Project.MSG_DEBUG);", "+                    log(destFile + \" is not written, as the contents \"", "+                        + \"are identical\", Project.MSG_DEBUG);"]}]}