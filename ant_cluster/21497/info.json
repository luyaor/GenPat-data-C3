{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9044518a43e18e1990a5258dabcac75e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f75ced452110aa4a863cda76b1ee304", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/MappedResource.java", "commitBeforeChange": "f179a428596b5cdcd1185a3fcf92ec7475cd3cc3", "commitAfterChange": "a22e945b3cd393fb0b49c73ecb37518d69cef7de", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 16, "signatureBeforeChange": "          protected AppendableTouchableFileProviderMR(Resource r)", "signatureAfterChange": "      public Object as(Class clazz)", "diff": ["+    public Object as(Class clazz) {", "+        if (clazz == Appendable.class && isAppendable) {", "+            return new Appendable() {", "+                public OutputStream getAppendOutputStream() throws IOException {", "+                    return ((Appendable) wrapped.as(Appendable.class))", "+                        .getAppendOutputStream();", "+                }", "+            };", "+        }", "+        return super.as(clazz);", "+    }", "-", "-        protected AppendableTouchableFileProviderMR(Resource r) {", "-            super(r);", "-            if (!(r instanceof Appendable)) {", "-                throw new IllegalArgumentException(\"trying to wrap something \"", "-                                                   + \"that is not a \"", "-                                                   + \" Appendable\");", "-            }", "-            a = (Appendable) r;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e2de5dc718c36792da69f2570f5d4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/MappedResource.java", "commitBeforeChange": "392af32d32ba67ca2ea459cc86753c5e5aaad2a0", "commitAfterChange": "a82afc85230a405fa6614add40c768702e071d64", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public Object as(Class clazz)", "signatureAfterChange": "      public Object as(Class clazz)", "diff": ["-        if (clazz == Appendable.class && isAppendable) {", "-            return new Appendable() {", "-                public OutputStream getAppendOutputStream() throws IOException {", "-                    return ((Appendable) wrapped.as(Appendable.class))", "-                        .getAppendOutputStream();", "-                }", "-            };", "-        }", "-        if (clazz == Touchable.class && isTouchable) {", "-            return new Touchable() {", "-                public void touch(long modTime) {", "-                    ((Touchable) wrapped.as(Touchable.class)).touch(modTime);", "-                }", "-            };", "-        }", "-        return super.as(clazz);", "+        return wrapped.as(clazz);"]}]}