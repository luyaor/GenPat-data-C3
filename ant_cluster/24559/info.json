{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "586b19f016568b2e2d00022f394577c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20dc3ee9f3d4b03e8eca0789b64f2d03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "a679a5bbce605a1e4326d56030baeecb3a1bf4b7", "commitAfterChange": "47fa568d321d64f801f7108e842985b627608431", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 66, "signatureBeforeChange": "     private NestedCreator createAddTypeCreator(         Project project, Object parent, String elementName)         throws BuildException", "signatureAfterChange": "     private NestedCreator createAddTypeCreator(         Project project, Object parent, String elementName)         throws BuildException", "diff": ["+        Object rObject = addedObject;", "+        if (addedObject instanceof PreSetDef.PreSetDefinition) {", "+            rObject = ((PreSetDef.PreSetDefinition) addedObject).createObject(", "+                project);", "+        }", "+        final Object realObject = rObject;", "-                    method.invoke(parent, new Object[]{nestedObject});", "+                    method.invoke(parent, new Object[]{realObject});", "+", "+            public Object getRealObject() {", "+                return realObject;", "+            }", "+", "-                    method.invoke(parent, new Object[]{nestedObject});", "+                    method.invoke(parent, new Object[]{realObject});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758ffab357dc24f858d4d1b55829235e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "f587706860d8dbeea5521a18041a7b7acdf4c1f7", "commitAfterChange": "37820a501815a54bd1bb393d1cd1ea0bf2f6c273", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                        log(\"Opening PrintStream to output file \" + output, Project.MSG_VERBOSE);", "-                        out = new PrintStream(new BufferedOutputStream(", "-                                new FileOutputStream(output.getAbsolutePath(), append)));", "+                        log(\"Opening PrintStream to output Resource \" + output, Project.MSG_VERBOSE);", "+                        OutputStream os;", "+                        if (output instanceof FileProvider) {", "+                            os = new FileOutputStream(((FileProvider) output).getFile(), append);", "+                        } else {", "+                            os = output.getOutputStream();", "+                            if (append) {", "+                                log(\"Ignoring append=true for non-file resource \" + output, Project.MSG_WARN);", "+                            }", "+                        }", "+                        out = new PrintStream(new BufferedOutputStream(os));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd2d969a00d7e9dc80f32fa3876d410e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "3e12dead7d43c7883742264d24a9ed013c06a99d", "commitAfterChange": "06dc6c0eea11b763df082d9e0e929fd250b13ca1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-", "+        String effectiveInputEncoding = null;", "+        if (source instanceof StringResource) {", "+             effectiveInputEncoding = ((StringResource) source).getEncoding();", "+        } else {", "+            effectiveInputEncoding = inputEncoding;", "+        }", "-                if (inputEncoding == null) {", "+                if (effectiveInputEncoding == null) {", "-                                                inputEncoding);", "+                                                effectiveInputEncoding);", "-                   || (inputEncoding != null", "-                       && !inputEncoding.equals(outputEncoding))", "-                   || (inputEncoding == null && outputEncoding != null)) {", "+                   || (effectiveInputEncoding != null", "+                       && !effectiveInputEncoding.equals(outputEncoding))", "+                   || (effectiveInputEncoding == null && outputEncoding != null)) {", "-                if (inputEncoding == null) {", "+                if (effectiveInputEncoding == null) {", "-                                                inputEncoding);", "+                                                effectiveInputEncoding);"]}]}