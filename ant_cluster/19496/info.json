{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96fa9c80d651c86c1a7fe30aab822de4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7ed2c10db9e9920f65266cf07d24f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "eb2fdfacb52fcb36a21bea800834899133bf0858", "commitAfterChange": "9969e4d608937721c2c14287ac42e665c964a91d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-            return new ArchiveState(true, grabManifests(rcs));", "+            Resource[][] manifests = grabManifests(rcs);", "+            int count = 0;", "+            for (int i = 0; i < manifests.length; i++) {", "+                count += manifests[i].length;", "+            }", "+            log(\"found a total of \" + count + \" manifests in \"", "+                + manifests.length + \" resource collections\",", "+                Project.MSG_VERBOSE);", "+            return new ArchiveState(true, manifests);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5d27068fb849122917e1dd76d8b5017", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "4c30847da6c777e84a8bdce102ba4142e71a8343", "commitAfterChange": "13355064e679198a0b8212779599eb888739a9bd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (target.lastModified() > generatedFile.lastModified()) {", "-            log(\"Compiling \" + target + \" as it is newer than \" ", "-                + generatedFile, Project.MSG_VERBOSE);", "-", "+        boolean targetIsOutOfDate = ", "+            target.lastModified() > generatedFile.lastModified();", "+        boolean superGrammarIsOutOfDate = superGrammar != null &&", "+            (new File(superGrammar).lastModified() > generatedFile.lastModified());", "+        if (targetIsOutOfDate || superGrammarIsOutOfDate) {", "+            if (targetIsOutOfDate) {", "+                log(\"Compiling \" + target + \" as it is newer than \" ", "+                    + generatedFile, Project.MSG_VERBOSE);", "+            } else if (superGrammarIsOutOfDate) {", "+                log(\"Compiling \" + target + \" as \" + superGrammar", "+                    + \" is newer than \" + generatedFile, Project.MSG_VERBOSE);", "+            }"]}]}