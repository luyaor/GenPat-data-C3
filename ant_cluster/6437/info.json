{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b611fe8250d3a9469801a92a5cd111", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ed9603b5f2bc3456a65e3ffb3aeadf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "b8de4702c99eb699fc8f1ef6e85c2d6655bb3092", "commitAfterChange": "8854bf786818398c0e519f02de94efda5ba569ed", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        if (xslFile == null) {", "+            throw new BuildException(\"no stylesheet specified\", location);", "+        }", "+", "-        long styleSheetLastModified = 0;", "-        if (xslFile != null) {", "-            try {", "-                File file = project.resolveFile(xslFile, project.getBaseDir());", "-", "-                if (!file.exists()) {", "-                    file = project.resolveFile(xslFile, baseDir);", "-                    /*", "-                     * shouldn't throw out deprectaion warnings before we know,", "-                     * the wrong version has been used.", "-                     */", "-                    if (file.exists()) {", "-                        log(\"DEPRECATED - the style attribute should be relative to the project\\'s\");", "-                        log(\"             basedir, not the tasks\\'s basedir.\");", "-                    }", "-                }", "-                ", "-                // Create a new XSL processor with the specified stylesheet", "-                styleSheetLastModified = file.lastModified();", "-                log( \"Loading stylesheet \" + file, Project.MSG_INFO);", "-                liaison.setStylesheet( file.toString() );", "-                for(Enumeration e = params.elements();e.hasMoreElements();) {", "-                    Param p = (Param)e.nextElement();", "-                    liaison.addParam( p.getName(), p.getExpression() );", "-                }", "-            } catch (Exception ex) {", "-                log(\"Failed to read stylesheet \" + xslFile, Project.MSG_INFO);", "-                throw new BuildException(ex);", "+        File stylesheet = project.resolveFile(xslFile, project.getBaseDir());", "+        if (!stylesheet.exists()) {", "+            stylesheet = project.resolveFile(xslFile, baseDir);", "+            /*", "+             * shouldn't throw out deprecation warnings before we know,", "+             * the wrong version has been used.", "+             */", "+            if (stylesheet.exists()) {", "+                log(\"DEPRECATED - the style attribute should be relative to the project\\'s\");", "+                log(\"             basedir, not the tasks\\'s basedir.\");", "-            process(inFile, outFile, styleSheetLastModified);", "+            process(inFile, outFile, stylesheet);", "-            process( baseDir, list[i], destDir, styleSheetLastModified );", "+            process( baseDir, list[i], destDir, stylesheet );", "-                process( baseDir, list[i], destDir, styleSheetLastModified );", "+                process( baseDir, list[i], destDir, stylesheet );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3f524da689b049b22aa6162b4c59180", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "6309813d01620379a35da64c12c4de488efedc2d", "commitAfterChange": "4ab1950bd8ba0bf2335e09b07852d74e1b016f5a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void merge(Manifest other) throws ManifestException", "signatureAfterChange": "     public void merge(Manifest other) throws ManifestException", "diff": ["-        if (other.manifestVersion != null) {", "-            manifestVersion = other.manifestVersion;", "-        }", "-        mainSection.merge(other.mainSection);", "-        for (Enumeration e = other.sections.keys(); e.hasMoreElements();) {", "-            String sectionName = (String)e.nextElement();", "-            Section ourSection = (Section)sections.get(sectionName);", "-            Section otherSection = (Section)other.sections.get(sectionName);", "-            if (ourSection == null) {", "-                sections.put(sectionName, otherSection);", "-            }", "-            else {", "-                ourSection.merge(otherSection);", "-            }", "-        }", "+        merge(other, false);", "+    }"]}]}