{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "544c3f461f24d0b30ac281c8d4d3425b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c695ef7f6480fe0e3ab66880629fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "531e66cb1e7a5c8c495d724a0dc52ab65a77faf7", "commitAfterChange": "b6298168c94332a367ae3b8be896d4b30583ec2c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-        if (srcFile == null) {", "-            throw new BuildException(\"Source file not defined.\");", "+        if (srcFile == null && resource == null) {", "+            throw new BuildException(", "+                \"One of \\\"srcfile\\\" or \\\"resource\\\" is required.\");", "-        if (!srcFile.exists()) {", "-            throw new BuildException(\"Source file does not exist.\");", "-        }", "-", "-        if (!srcFile.isFile()) {", "-            throw new BuildException(\"Source file is not a file.\");", "-        }", "-", "-        FileInputStream fis = null;", "+", "+        if (srcFile != null ) {", "+            if (!srcFile.exists()) {", "+                throw new BuildException(\"Source file does not exist.\");", "+            }", "+", "+            if (!srcFile.isFile()) {", "+                throw new BuildException(\"Source file is not a file.\");", "+            }", "+", "+            try {", "+                bis = new BufferedInputStream(new FileInputStream(srcFile));", "+            } catch (IOException eyeOhEx) {", "+                throw new BuildException(eyeOhEx);", "+            }", "+        } else {", "+            ClassLoader cL = (classpath != null)", "+                ? getProject().createClassLoader(classpath)", "+                : LoadProperties.class.getClassLoader();", "+", "+            InputStream is = (cL == null)", "+                ? ClassLoader.getSystemResourceAsStream(resource)", "+                : cL.getResourceAsStream(resource);", "+", "+            if (is != null) {", "+                bis = new BufferedInputStream(is);", "+            } else { // do it like Property", "+                log(\"Unable to find resource \" + resource, Project.MSG_WARN);", "+                return;", "+            }", "+        }", "+", "-            final long len = srcFile.length();", "-", "-            //open up the file", "-            fis = new FileInputStream(srcFile);", "-            bis = new BufferedInputStream(fis);", "-                if (fis != null) {", "-                    fis.close();", "+                if (bis != null) {", "+                    bis.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5da00d9b7fe83ecc0990e0ba92c0351", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "commitAfterChange": "b92e6b644f97b87083602a8ce4029cce01725674", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["+            if (FileUtils.isAbsolutePath(includes[icounter])) {", "+                //skip abs. paths not under basedir, if set:", "+                if (basedir != null", "+                    && !SelectorUtils.matchPatternStart(includes[icounter],", "+                    basedir.getAbsolutePath(), isCaseSensitive())) {", "+                    continue;", "+                }", "+            } else if (basedir == null) {", "+                //skip non-abs. paths if basedir == null:", "+                continue;", "+            }", "-        if (newroots.containsKey(\"\")) {", "+        if (newroots.containsKey(\"\") && basedir != null) {", "-            try {", "-                canonBase = basedir.getCanonicalFile();", "-            } catch (IOException ex) {", "-                throw new BuildException(ex);", "+            if (basedir != null) {", "+                try {", "+                    canonBase = basedir.getCanonicalFile();", "+                } catch (IOException ex) {", "+                    throw new BuildException(ex);", "+                }", "+                if (basedir == null && !FileUtils.isAbsolutePath(currentelement)) {", "+                    continue;", "+                }", "-                        File canonFile = myfile.getCanonicalFile();", "-                        String path = FILE_UTILS.removeLeadingPath(canonBase,", "-                                                                  canonFile);", "+                        String path = (basedir == null)", "+                            ? myfile.getCanonicalPath()", "+                            : FILE_UTILS.removeLeadingPath(canonBase,", "+                            myfile.getCanonicalFile());", "-                            if (myfile != null) {", "-                                currentelement =", "-                                    FILE_UTILS.removeLeadingPath(basedir,", "-                                                                 myfile);", "+                            if (myfile != null && basedir != null) {", "+                                currentelement = FILE_UTILS.removeLeadingPath(", "+                                    basedir, myfile);", "-                        currentelement = FILE_UTILS.removeLeadingPath(basedir,", "-                                                                     f);", "+                        currentelement = (basedir == null)", "+                            ? f.getAbsolutePath()", "+                            : FILE_UTILS.removeLeadingPath(basedir, f);"]}]}