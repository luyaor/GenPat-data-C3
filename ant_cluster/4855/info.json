{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7257621f92fc725f1347491a5efd230a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f67a7b852f1b0092f4bcb223a16cbb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "c00d3f670bf0ede36467d3409170346af1a535d9", "commitAfterChange": "65b09851fd5134ce0a66954485bdff2db5783e40", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public synchronized void setNewProperty(String name, Object value)", "signatureAfterChange": "     public void setNewProperty(String name, Object value)", "diff": ["-    public synchronized void setNewProperty(String name, Object value) {", "+    public void setNewProperty(String name, Object value) {", "-        if (null != properties.get(name)) {", "-            project.log(\"Override ignored for property \\\"\" + name + \"\\\"\", Project.MSG_VERBOSE);", "-            return;", "-        }", "-//        boolean done = setPropertyHook(ns, name, value, false, false, true);", "-//        if (done) {", "-//            return;", "-//        }", "-        project.log(\"Setting project property: \" + name + \" -> \" + value, Project.MSG_DEBUG);", "-        if (name != null && value != null) {", "-            properties.put(name, value);", "+        synchronized (this) {", "+            if (properties.containsKey(name)) {", "+                project.log(\"Override ignored for property \\\"\" + name + \"\\\"\", Project.MSG_VERBOSE);", "+                return;", "+            }", "+            project.log(\"Setting project property: \" + name + \" -> \" + value, Project.MSG_DEBUG);", "+            if (name != null && value != null) {", "+                properties.put(name, value);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6e767852415275e673a158f74135a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "c00d3f670bf0ede36467d3409170346af1a535d9", "commitAfterChange": "65b09851fd5134ce0a66954485bdff2db5783e40", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public synchronized boolean setProperty(String name, Object value, boolean verbose)", "signatureAfterChange": "     public boolean setProperty(String name, Object value, boolean verbose)", "diff": ["-    public synchronized boolean setProperty(String name, Object value, boolean verbose) {", "-        for (Iterator iter = getDelegates(PropertySetter.class).iterator();", "-             iter.hasNext();) {", "+    public boolean setProperty(String name, Object value, boolean verbose) {", "+        for (Iterator iter = getDelegates(PropertySetter.class).iterator(); iter.hasNext();) {", "-        // user (CLI) properties take precedence", "-        if (null != userProperties.get(name)) {", "-            if (verbose) {", "-                project.log(\"Override ignored for user property \\\"\" + name", "-                        + \"\\\"\", Project.MSG_VERBOSE);", "+        synchronized (this) {", "+            // user (CLI) properties take precedence", "+            if (userProperties.containsKey(name)) {", "+                if (verbose) {", "+                    project.log(\"Override ignored for user property \\\"\" + name + \"\\\"\",", "+                            Project.MSG_VERBOSE);", "+                }", "+                return false;", "-            return false;", "+            if (verbose) {", "+                if (properties.containsKey(name)) {", "+                    project.log(\"Overriding previous definition of property \\\"\" + name + \"\\\"\",", "+                            Project.MSG_VERBOSE);", "+                }", "+                project.log(\"Setting project property: \" + name + \" -> \" + value, Project.MSG_DEBUG);", "+            }", "+            if (name != null && value != null) {", "+                properties.put(name, value);", "+            }", "+            return true;", "-", "-//        boolean done = setPropertyHook(ns, name, value, false, false, false);", "-//        if (done) {", "-//            return true;", "-//        }", "-", "-        if (null != properties.get(name) && verbose) {", "-            project.log(\"Overriding previous definition of property \\\"\" + name", "-                    + \"\\\"\", Project.MSG_VERBOSE);", "-        }", "-", "-        if (verbose) {", "-            project.log(\"Setting project property: \" + name + \" -> \"", "-                    + value, Project.MSG_DEBUG);", "-        }", "-        if (name != null && value != null) {", "-            properties.put(name, value);", "-        }", "-        return true;"]}]}