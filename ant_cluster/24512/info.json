{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1e7ebb1a5d5394f5ce1c49b19465e03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf1fe573a136c04d25597a37dae0f69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "c28ec7da7aefa85051bcb81e0eea06c74e17342a", "commitAfterChange": "50c1cfa5726c79d5184a0c9d258afb159a5e0899", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void processFile(File src) throws BuildException", "signatureAfterChange": "     private void processFile(File src) throws BuildException", "diff": ["-        File temp = null;", "-        FileInput in = null;", "-        FileOutput out = null;", "+        int repCountStart = replaceCount;", "+        logFilterChain(src.getPath());", "+", "-            in = new FileInput(src);", "-", "-            temp = FILE_UTILS.createTempFile(\"rep\", \".tmp\",", "+            File temp = FILE_UTILS.createTempFile(\"rep\", \".tmp\",", "-            out = new FileOutput(temp);", "+            try {", "+                FileInput in = new FileInput(src);", "+                try {", "+                    FileOutput out = new FileOutput(temp);", "+                    try {", "+                        out.setInputBuffer(buildFilterChain(in.getOutputBuffer()));", "-            int repCountStart = replaceCount;", "+                        while (in.readChunk()) {", "+                            if (processFilterChain()) {", "+                                out.process();", "+                            }", "+                        }", "-            logFilterChain(src.getPath());", "+                        flushFilterChain();", "-            out.setInputBuffer(buildFilterChain(in.getOutputBuffer()));", "-", "-            while (in.readChunk()) {", "-                if (processFilterChain()) {", "-                    out.process();", "+                        out.flush();", "+                    } finally {", "+                        out.close();", "+                    }", "+                } finally {", "+                    in.close();", "-            }", "-", "-            flushFilterChain();", "-", "-            out.flush();", "-            in.close();", "-            in = null;", "-            out.close();", "-            out = null;", "-", "-            boolean changes = (replaceCount != repCountStart);", "-            if (changes) {", "-                fileCount++;", "-                long origLastModified = src.lastModified();", "-                FILE_UTILS.rename(temp, src);", "-                if (preserveLastModified) {", "-                    FILE_UTILS.setFileLastModified(src, origLastModified);", "+                boolean changes = (replaceCount != repCountStart);", "+                if (changes) {", "+                    fileCount++;", "+                    long origLastModified = src.lastModified();", "+                    FILE_UTILS.rename(temp, src);", "+                    if (preserveLastModified) {", "+                        FILE_UTILS.setFileLastModified(src, origLastModified);", "+                    }", "-                temp = null;", "+            } finally {", "+                if (temp.isFile() && !temp.delete()) {", "+                    temp.deleteOnExit();", "+                }", "-        } finally {", "-            if (null != in) {", "-                in.closeQuietly();", "-            }", "-            if (null != out) {", "-                out.closeQuietly();", "-            }", "-            if (temp != null) {", "-                if (!temp.delete()) {", "-                    temp.deleteOnExit();", "-                }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d260f61d06047c42778cccdbc364ddfc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "778b198fb8709154142ead6d74bd5da3216eb76c", "commitAfterChange": "246b80980fe1ecee037440b49137b3203cd3095f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-", "-        Reader r = null;", "-        Writer w = null;", "-        BufferedWriter bw = null;", "-", "-            if (encoding == null) {", "-                r = new FileReader(f);", "-                w = new FileWriter(temp);", "-            } else {", "-                r = new InputStreamReader(new FileInputStream(f), encoding);", "-                w = new OutputStreamWriter(new FileOutputStream(temp),", "-                                           encoding);", "-            }", "+            InputStream is = new FileInputStream(f);", "+            try {", "+                Reader r = encoding != null ? new InputStreamReader(is, encoding) : new InputStreamReader(is);", "+                OutputStream os = new FileOutputStream(temp);", "+                try {", "+                    Writer w = encoding != null ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os);", "-            BufferedReader br = new BufferedReader(r);", "-            bw = new BufferedWriter(w);", "+                    BufferedReader br = new BufferedReader(r);", "+                    BufferedWriter bw = new BufferedWriter(w);", "-            r.close();", "-            r = null;", "-            w.close();", "-            w = null;", "-", "+                } finally {", "+                    os.close();", "+                }", "+            } finally {", "+                is.close();", "+            }", "-            FileUtils.close(r);", "-            FileUtils.close(bw);", "-            FileUtils.close(w);"]}]}