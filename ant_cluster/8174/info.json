{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97d6506dc21c4dc374ffee41d016b046", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a2af3a19af8738153ce5e7589058ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/property/ClassicPropertyResolver.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Object getPropertyValue( final String propertyName,                                        final TaskContext context )", "signatureAfterChange": "     protected Object getPropertyValue( final String propertyName,                                        final PropertyStore properties )         throws TaskException", "diff": ["-                                       final TaskContext context )", "+                                       final PropertyStore properties )", "+        throws TaskException", "-        Object propertyValue = context.getProperty( propertyName );", "-        if ( propertyValue == null )", "+        if( ! properties.isPropertySet( propertyName ) )", "-        else", "-        {", "-            return propertyValue;", "-        }", "+        return properties.getProperty( propertyName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd95d8361d38f5c62308a59a25c70d0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void setValue( final AttributeSetter setter,                            final Object object,                            final String value,                            final Context context )         throws Exception", "signatureAfterChange": "     private void setValue( final PropertyConfigurer setter,                            final Object object,                            final String value,                            final Context context )         throws Exception", "diff": ["-    private void setValue( final AttributeSetter setter,", "+    private void setValue( final PropertyConfigurer setter,", "+        // Check if the creator method must be used", "+        if( setter.useCreator() )", "+        {", "+            final String message = REZ.getString( \"must-be-element.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "-        Class clazz = setter.getType();", "-        if( clazz.isPrimitive() )", "-        {", "-            clazz = getComplexTypeFor( clazz );", "-        }", "-", "+        final Class clazz = setter.getType();", "-        setter.setAttribute( object, objValue );", "+        setter.setValue( object, objValue );"]}]}