{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "132466c00ef2761a9fedcd994e2ab811", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae39a80ba92e9579c8e5addf874eada", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java", "commitBeforeChange": "616fc9850d475bb426b01f957e9559c000c619e6", "commitAfterChange": "f2078ba20bea6666d82c9572e1626b55fdd55426", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static String getTestCaseName(Test t)", "signatureAfterChange": "     public static String getTestCaseName(Test t)", "diff": ["+        if (t != null && t.getClass().getName().equals(\"junit.framework.JUnit4TestCaseFacade\")) {", "+            // Self-describing as of JUnit 4 (#38811). But trim \"(ClassName)\".", "+            String name = t.toString();", "+            if (name.endsWith(\")\")) {", "+                int paren = name.lastIndexOf('(');", "+                return name.substring(0, paren);", "+            } else {", "+                return name;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ba59c73283c4ad262c9c373452362b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["+", "+        byte[] name = getBytes(ze.getName());", "+        if (createUnicodeExtraFields) {", "+            ze.addExtraField(new UnicodePathExtraField(ze.getName(), name));", "+            String comm = ze.getComment();", "+            if (comm != null && !\"\".equals(comm)) {", "+                byte[] commentB = getBytes(comm);", "+                ze.addExtraField(new UnicodeCommentExtraField(comm, commentB));", "+            }", "+        }", "+", "-        byte[] name = getBytes(ze.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f632f4a379d12e3fd476eef14984ba69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/SchemaValidate.java", "commitBeforeChange": "d51eb9c34fd2ceb50ebf5f7361579d1c8fb2a557", "commitAfterChange": "b69245c4223aa35cb2cc78726cc277cae45f0db4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void addSchema(SchemaLocation location)", "signatureAfterChange": "     public void addConfiguredSchema(SchemaLocation location)", "diff": ["-    public void addSchema(SchemaLocation location) {", "-        schemaLocations.add(location);", "+     */", "+    public void addConfiguredSchema(SchemaLocation location) {", "+        log(\"adding schema \"+location,Project.MSG_DEBUG);", "+        location.validateNamespace();", "+        SchemaLocation old=(SchemaLocation) schemaLocations.get(", "+                location.getNamespace());", "+        if(old!=null && !old.equals(location)) {", "+            throw new BuildException(ERROR_DUPLICATE_SCHEMA+location);", "+        }", "+        schemaLocations.put(location.getNamespace(), location);"]}]}