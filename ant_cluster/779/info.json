{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a25c169c7f7774c22d961df762adf53", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "521f5bd2e284c6924df897a2840de557", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/remote/Server.java", "commitBeforeChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "commitAfterChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void start()", "signatureAfterChange": "     public void start(boolean loop) throws IOException", "diff": ["-    public void start() {", "-        try {", "-            start(false);", "-        } catch (InterruptedException e){", "-        }", "-    }", "+    public void start(boolean loop) throws IOException {", "+        server = new ServerSocket(port);", "+        while (server != null) {", "+            client = server.accept();", "+            messenger = new Messenger(client.getInputStream(), client.getOutputStream());", "+            TestRunEvent evt = null;", "+            try {", "+                while ( (evt = messenger.read()) != null ) {", "+                    dispatcher.dispatchEvent(evt);", "+                }", "+            } catch (Exception e){", "+                e.printStackTrace();", "+                //@fixme this stacktrace might be normal when closing", "+                // the socket. So decompose the above in distinct steps", "+            }", "+            if (!loop){", "+                break;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b78b8fdc61f5d6ab529ee6f3600e264", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java", "commitBeforeChange": "ab271c2c606105627480b9abc937c25e5b3822fe", "commitAfterChange": "55641903fb9a4b029554bed4e14b7544d0829f5a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void stop()", "signatureAfterChange": "      public void stop()", "diff": ["-            inputThread.join();", "-        } catch (InterruptedException e) {}", "+            outputThread.join();", "+        } catch (InterruptedException e) {", "+            // ignore", "+        }", "-        } catch (InterruptedException e) {}", "+        } catch (InterruptedException e) {", "+            // ignore", "+        }", "+", "+        if (inputThread != null) {", "+            try {", "+                inputThread.join();", "+                if (closeInputOnStop) {", "+                    input.close();", "+                }", "+            } catch (InterruptedException e) {", "+                // ignore", "+            } catch (IOException e) {", "+                // ignore", "+            } ", "+        }", "+", "-        } catch (IOException e) {}", "+        } catch (IOException e) {", "+            // ignore", "+        }", "-        } catch (IOException e) {}", "+        } catch (IOException e) {", "+            // ignore", "+        }"]}]}