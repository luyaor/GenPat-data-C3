{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ad3e6bf8688eb97b68d0bfc1bf58ec8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d141bd1b21470249c53f965ef0b507", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "commitAfterChange": "15f44e67b5df552231f6afcaa71495b289c44b15", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-        final ProjectBuilder builder = embeddor.getProjectBuilder();", "-", "-        final Project project = builder.build( buildFile );", "-", "-        final ProjectManager manager = embeddor.getProjectManager();", "-        manager.addProjectListener( listener );", "+        final Project project = ", "+            embeddor.createProject( buildFile.toString(), null, null );", "-            final TaskContext context = new DefaultTaskContext();", "+            final ProjectManager manager = ", "+                embeddor.createProjectManager( project, m_defines );", "+            manager.addProjectListener( listener );", "-            //Add CLI m_defines", "-            addToContext( context, m_defines );", "-", "-            //Add system properties second so that they overide user-defined properties", "-            addToContext( context, System.getProperties() );", "-", "-            context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-            context.setProperty( Project.PROJECT_FILE, buildFile );", "-            //context.setProperty( Project.PROJECT, project.getName() );", "-", "-            doBuild( manager, project, context, m_targets );", "+            doBuild( manager, project, m_targets );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b94a3db9a72e5a458148602814963f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws Exception", "signatureAfterChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws Exception", "diff": ["-        // TODO - Add child role manager", "+        // TODO - Add child role manager and configurer", "+        // TODO - add project to properties, not services", "-", "-        final String[] names = project.getProjectNames();", "-        for( int i = 0; i < names.length; i++ )", "-        {", "-            final String name = names[ i ];", "-            final Project other = project.getProject( name );", "-            serviceManager.put( Project.ROLE + \"/\" + name, other );", "-        }", "-        //TODO: Put this in Execution Frame", "+        // Properties", "-", "-       // Create and configure the context", "-        final DefaultTaskContext context =", "-            new DefaultTaskContext( serviceManager, logger, store );", "-        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+        store.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-            new DefaultExecutionFrame( logger, context, typeManager );", "+            new DefaultExecutionFrame( logger, store, serviceManager );"]}]}