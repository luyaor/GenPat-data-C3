{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "feb2851cc7a2dcf0f205caadab1086f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b48fc1e094cd9b1cc4c01bdd6d00fe1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "fc7e960e14d08b836f9816357297c3f56e421e8b", "commitAfterChange": "c9ee19786b722aebf77cc88cfbe984e145f179a2", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public void executeTargets(Vector targetNames) throws BuildException", "signatureAfterChange": "     public void executeTargets(Vector targetNames) throws BuildException", "diff": ["+        BuildException thrownException = null;", "-            executeTarget((String) targetNames.elementAt(i));", "+            try {", "+                executeTarget((String) targetNames.elementAt(i));", "+            } catch (BuildException ex) {", "+                if (!(keepGoingMode)) {", "+                    throw ex; // Throw further", "+                }", "+                thrownException = ex;", "+            }", "+        }", "+        if (thrownException != null) {", "+            throw thrownException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1c1878a05f0895974ee5ed94ad5e71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/ResolvePropertyMap.java", "commitBeforeChange": "9ce605cca7a222eb605121e5921409353b2d0d6e", "commitAfterChange": "9caa9ff4403ffbe97b9eae43d7cd79003319535b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getProperty(String name)", "signatureAfterChange": "     public Object getProperty(String name)", "diff": ["+", "+        // if the property has already been set to the name it will", "+        // have in the end, then return the existing value to ensure", "+        // properties remain immutable", "+        String masterPropertyName = name;", "+        if (prefix != null) {", "+            masterPropertyName = prefix + name;", "+        }", "+        Object masterProperty = master.getProperty(masterPropertyName);", "+        if (masterProperty != null) {", "+            return masterProperty;", "+        }", "+"]}]}