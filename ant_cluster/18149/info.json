{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41b7c31aa3e03c72d8b4090936621aae", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "838112d250a6a9ece07f2c5d7adba8b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "d884406a09baca6c865a5281f08bb92000928541", "commitAfterChange": "84abb27b2f8c970557388bb60f09f1c3409d8f75", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-                Object attrValue = null;", "+                Object attrValue = PropertyHelper.getPropertyHelper(p).parseProperties(value);", "-                    attrValue = value;", "-                } else {", "-                    attrValue = PropertyHelper.getPropertyHelper(p).parseProperties(value);", "+                    for (Iterator attrs = ((MacroInstance) target).getMacroDef().getAttributes().iterator(); attrs.hasNext();) {", "+                        MacroDef.Attribute attr = (MacroDef.Attribute) attrs.next();", "+                        if (attr.getName().equals(name)) {", "+                            if (!attr.isDoubleExpanding()) {", "+                                attrValue = value;", "+                            }", "+                            break;", "+                        }", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d254b6d609a985f71ec2a458933bc49a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "780ad2d725a7f88a26d8ea33a804fa5c8becfc8f", "commitAfterChange": "31deeb980977afb1cfe3234eb17a1360aab49d5e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void initSubProject(ComponentHelper helper)", "signatureAfterChange": "     public void initSubProject(ComponentHelper helper)", "diff": ["+        }", "+", "+        // Add the restricted definitions", "+        for (Iterator i = helper.restrictedDefinitions.entrySet().iterator();", "+             i.hasNext();) {", "+            Map.Entry entry = (Map.Entry) i.next();", "+            restrictedDefinitions.put(", "+                entry.getKey(), new ArrayList((List) entry.getValue()));"]}]}