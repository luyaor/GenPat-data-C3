{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36b6ce6487dba68561d68c5d6aaf48c4", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eecc40e8c2f06e186cf19933b58469a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "a89ffe281a56c3c51e376d8927fe300423b43bc7", "commitAfterChange": "f9c551b16e64afb9541e8e5507b9ac1a8c2eb436", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void copyFile(File sourceFile, File destFile,                           FilterSetCollection filters, boolean overwrite,                           boolean preserveLastModified, String encoding)         throws IOException", "signatureAfterChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String encoding, Project project)         throws IOException", "diff": ["-    public void copyFile(File sourceFile, File destFile, ", "-                         FilterSetCollection filters, boolean overwrite, ", "-        ", "+     */", "+    public void copyFile(File sourceFile, File destFile,", "+                         FilterSetCollection filters, Vector filterChains,", "+                         boolean overwrite, boolean preserveLastModified,", "+                         String encoding, Project project)", "+        throws IOException {", "+", "-            if (filters != null && filters.hasFilters()) {", "+            final boolean filterSetsAvailable = (filters != null", "+                                                 && filters.hasFilters());", "+            final boolean filterChainsAvailable = (filterChains != null", "+                                                   && filterChains.size() > 0);", "+", "+            if (filterSetsAvailable || filterChainsAvailable) {", "-                    in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFile), encoding));", "-                    out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(destFile), encoding));", "+                    in = new BufferedReader(new InputStreamReader(", "+                            new FileInputStream(sourceFile), encoding));", "+                    out = new BufferedWriter(new OutputStreamWriter(", "+                            new FileOutputStream(destFile), encoding));", "+                }", "+", "+                if (filterChainsAvailable) {", "+                    ChainReaderHelper crh = new ChainReaderHelper();", "+                    crh.setBufferSize(8192);", "+                    crh.setPrimaryReader(in);", "+                    crh.setFilterChains(filterChains);", "+                    crh.setProject(project);", "+                    Reader rdr = crh.getAssembledReader();", "+                    in = new BufferedReader(rdr);", "-                        newline = filters.replaceTokens(line);", "+                        if (filterSetsAvailable) {", "+                            newline = filters.replaceTokens(line);", "+                        } else {", "+                            newline = line;", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871e4b0b3e3cddc421f09c449691f6b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "9a5aa0943a1a457adb8cf6425a9f1732e4a8e051", "commitAfterChange": "6885f5ccadd471cc33c19bdcca4271aa3086d3ca", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, boolean overwrite,                          boolean preserveLastModified, String encoding)         throws IOException", "signatureAfterChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String encoding, Project project)         throws IOException", "diff": ["+     */", "+    public void copyFile(File sourceFile, File destFile,", "+                         FilterSetCollection filters, Vector filterChains,", "+                         boolean overwrite, boolean preserveLastModified,", "+                         String encoding, Project project)", "+        throws IOException {", "-            if (filters != null && filters.hasFilters()) {", "+            final boolean filterSetsAvailable = (filters != null", "+                                                 && filters.hasFilters());", "+            final boolean filterChainsAvailable = (filterChains != null", "+                                                   && filterChains.size() > 0);", "+", "+            if (filterSetsAvailable || filterChainsAvailable) {", "-                    in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFile), encoding));", "-                    out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(destFile), encoding));", "+                    in = new BufferedReader(new InputStreamReader(", "+                            new FileInputStream(sourceFile), encoding));", "+                    out = new BufferedWriter(new OutputStreamWriter(", "+                            new FileOutputStream(destFile), encoding));", "+                }", "+", "+                if (filterChainsAvailable) {", "+                    ChainReaderHelper crh = new ChainReaderHelper();", "+                    crh.setBufferSize(8192);", "+                    crh.setPrimaryReader(in);", "+                    crh.setFilterChains(filterChains);", "+                    crh.setProject(project);", "+                    Reader rdr = crh.getAssembledReader();", "+                    in = new BufferedReader(rdr);", "-                        newline = filters.replaceTokens(line);", "+                        if (filterSetsAvailable) {", "+                            newline = filters.replaceTokens(line);", "+                        } else {", "+                            newline = line;", "+                        }"]}]}