{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffd48ecee40a14f4c399ca74ce046b71", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70ebf77c3fe900eafa7b12fb62a68fd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl.java", "commitBeforeChange": "f9bcdd7713370a79393e749e0e55fada438faa4a", "commitAfterChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "diff": ["-                new TaskHandler(this, (TaskContainer)task, wrapper, target).init(name, attrs);", "+                new TaskHandler(helperImpl, this, (TaskContainer)task, wrapper, target).init(name, attrs);", "-                new NestedElementHandler(this, task, wrapper, target).init(name, attrs);", "+                new NestedElementHandler(helperImpl, this, task, wrapper, target).init(name, attrs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c003df725d2ac4dcfade2bdcd98ae7e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl.java", "commitBeforeChange": "4fc2dab7e2b955f5ada45d3b97647084a15e951f", "commitAfterChange": "df867b66e89d6dcfa962efed57cbbdf543d8d7bd", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 24, "signatureBeforeChange": "          public void startElement(String name, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "diff": ["-", "+         */", "-                new TaskHandler(helper, this, (TaskContainer)task, wrapper, target).init(name, attrs);", "+                new TaskHandler(this, (TaskContainer)task, wrapper, target).init(name, attrs);", "-                new NestedElementHandler(helper, this, task, wrapper, target).init(name, attrs);", "+                new NestedElementHandler(this, task, wrapper, target).init(name, attrs);"]}]}