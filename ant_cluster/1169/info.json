{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "270952a84f77d002f1b1051bf8c76198", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f1b29bbddce32f0fa510979d9050ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "3e2cbab6ba443daf0abf6e02535fb6cc1df72e04", "commitAfterChange": "b33d33d754378862953b0243500d94eaaf983923", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void addPathFile(File pathComponent) throws IOException", "signatureAfterChange": "     protected void addPathFile(File pathComponent) throws IOException", "diff": ["-            ZipFile jarFile = null;", "-            InputStream manifestStream = null;", "+            JarFile jarFile = null;", "-                jarFile = new ZipFile(pathComponent);", "-                manifestStream = jarFile.getInputStream(new ZipEntry(\"META-INF/MANIFEST.MF\"));", "-", "-                if (manifestStream == null) {", "+                jarFile = new JarFile(pathComponent);", "+                Manifest manifest = jarFile.getManifest();", "+                if (manifest == null) {", "-                Reader manifestReader = new InputStreamReader(manifestStream, \"UTF-8\");", "-                org.apache.tools.ant.taskdefs.Manifest manifest", "-                        = new org.apache.tools.ant.taskdefs.Manifest(manifestReader);", "-                classpath = manifest.getMainSection().getAttributeValue(\"Class-Path\");", "-            } catch (org.apache.tools.ant.taskdefs.ManifestException e) {", "-                // ignore", "+                classpath = manifest.getMainAttributes()", "+                    .getValue(Attributes.Name.CLASS_PATH);", "-                FileUtils.close(manifestStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66910b2da91a80cf8bbe7ff1a0c8515c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "6c89d5a7b85b61086692c8037aa544dc85cf2e7e", "commitAfterChange": "20a1e91d17753399f8d18a5123f8e5e35e0409da", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-", "-                // XXX ideally would also enter includedDirectories to the archive", "-\t\tHashtable parentDirs = new Hashtable();", "-", "+                                ", "-                    String[] files = scanners[j].getIncludedFiles();", "-                    File thisBaseDir = scanners[j].getBasedir();", "-                    for (int i = 0; i < files.length; i++) {", "-                        File f = new File(thisBaseDir,files[i]);", "-                        String name = files[i].replace(File.separatorChar,'/');", "-                        // Look for & create parent dirs as needed.", "-                        int slashPos = -1;", "-                        while ((slashPos = name.indexOf((int)'/', slashPos + 1)) != -1) {", "-                            String dir = name.substring(0, slashPos);", "-                            if (!parentDirs.contains(dir)) {", "-                                parentDirs.put(dir, dir);", "-                                zipDir(new File(thisBaseDir, dir.replace('/', File.separatorChar)),", "-                                       zOut, dir + '/');", "-                            }", "-                        }", "-                        zipFile(f, zOut, name);", "-                    }", "+                    addFiles(scanners[j], zOut, \"\");", "+        }", "+    }"]}]}