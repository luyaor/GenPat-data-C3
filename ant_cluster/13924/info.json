{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04648740a7fc6f31826c7d0922b25fc6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970a18ecdaffd4d931a14987fefe4792", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private String macroSubs(String s, Map macroMapping)", "signatureAfterChange": "          private String macroSubs(String s, Map macroMapping)", "diff": ["+    ", "-        StringBuffer macroName = new StringBuffer();", "+        StringBuffer macroName = null;", "+        int state = STATE_NORMAL;", "-            if (s.charAt(i) == '$') {", "-                inMacro = true;", "-            } else {", "-                if (inMacro) {", "-                    if (s.charAt(i) == '{') {", "-                        continue;", "-                    } else if (s.charAt(i) == '}') {", "+            char ch = s.charAt(i);", "+            switch (state) {", "+                case STATE_NORMAL:", "+                    if (ch == '$') {", "+                        state = 1;", "+                    } else {", "+                        ret.append(ch);", "+                    }                    ", "+                    break;", "+                case STATE_EXPECT_BRACKET:", "+                    if (ch == '{') {", "+                        state = 2;", "+                        macroName = new StringBuffer();", "+                    } else {", "+                        state = 0;", "+                        ret.append('$');", "+                        ret.append(ch);", "+                    }", "+                    break;", "+                case STATE_EXPECT_NAME:", "+                    if (ch == '}') {", "+                        state = 0;", "-                        macroName = new StringBuffer();", "-                        inMacro = false;", "+                        macroName = null;", "-                } else {", "-                    ret.append(s.charAt(i));", "-                }", "+        }", "+        switch (state) {", "+            case STATE_NORMAL:", "+                break;", "+            case STATE_EXPECT_BRACKET:", "+                ret.append('$');", "+                break;", "+            case STATE_EXPECT_NAME:", "+                ret.append(\"${\");", "+                ret.append(macroName.toString());", "+                break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babe61a278a7b186a25d86acdd12605c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "2907030ab0cfd24783426d24bf06f7bbee19995f", "commitAfterChange": "b879b27c7274e2a54ad6a6e2a886311cb51ce771", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 68, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (version)", "+        if (version && doclet == null)", "-        if (author)", "+        if (author && doclet == null)", "+            if (serialwarn)                     ", "+                argList.addElement(\"-serialwarn\");", "-                argList.addElement(\"-doclet\");", "-                argList.addElement(doclet);", "-            }", "-            if (docletpath != null) {", "-                argList.addElement(\"-docletpath\");", "-                argList.addElement(docletpath);", "-            }", "+                if (doclet.getName() == null) {", "+                    throw new BuildException(\"The doclet name must be specified.\");", "+                }", "+                else {                ", "+                    argList.addElement(\"-doclet\");", "+                    argList.addElement(doclet.getName());", "+                    if (doclet.getPath() != null) {", "+                        argList.addElement(\"-docletpath\");", "+                        argList.addElement(doclet.getPath());", "+                    }", "+                    for (Enumeration e = doclet.getParams(); e.hasMoreElements();) {", "+                        DocletParam param = (DocletParam)e.nextElement();", "+                        if (param.getName() == null) {", "+                            throw new BuildException(\"Doclet parameters must have a name\");", "+                        }", "+                        ", "+                        argList.addElement(param.getName());", "+                        if (param.getValue() != null) {", "+                            argList.addElement(param.getValue());", "+                        }", "+                    }                        ", "+                }", "+            } ", "+            if (charset != null) {", "+                argList.addElement(\"-charset\");", "+                argList.addElement(charset);", "+            }"]}]}