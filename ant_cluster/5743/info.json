{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b0d7a327df422ea0ad5269b2869ba8c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d14ba7a5e210e39fefa541b603d6b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private TaskContext configureTask(BuildElement model)          throws ExecutionException, TaskException", "signatureAfterChange": "     private TaskContext configureTask(BuildElement model)          throws ExecutionException", "diff": ["-         throws ExecutionException, TaskException {", "+         throws ExecutionException {", "-            Object element = elementClass.newInstance();", "+            AntLibFactory libFactory = getLibFactory(antLibrary);", "+            Object element = libFactory.createTaskInstance(elementClass);", "+", "-            TaskContext taskContext = allocateTaskContext();", "+            TaskContext taskContext = new TaskContext(this, eventSupport);", "-                 + e.getMessage() + \") for task \" + taskType);", "+                 + e.getMessage() + \") for task \" + taskType,", "+                e, model.getLocation());", "+        } catch (ExecutionException e) {", "+            e.setLocation(model.getLocation());", "+            throw e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a601630961cd449df4c6e89ad52fa7f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private TaskContext configureTask(BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private TaskContext configureTask(BuildElement model)          throws ExecutionException", "diff": ["-        ImportInfo taskDefInfo = (ImportInfo)definitions.get(taskType);", "+        ImportInfo taskDefInfo = componentManager.getDefinition(taskType);", "-            AntLibFactory libFactory = getLibFactory(antLibrary);", "+            AntLibFactory libFactory", "+                 = componentManager.getLibFactory(antLibrary);", "-            TaskContext taskContext = new TaskContext(this, eventSupport);", "+            TaskContext taskContext = new TaskContext(this);", "+            task.validateComponent();", "-            e.setLocation(model.getLocation());", "+            e.setLocation(model.getLocation(), false);"]}]}