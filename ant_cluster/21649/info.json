{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5cdd2f913be9dbbcc128e191f743cb2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277516f6900798aa40083557c673ebe5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java", "commitBeforeChange": "7b722732fbbdb511be32f94588d43f55b0b51f65", "commitAfterChange": "8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void deployConverter( String name, String location, URL url )         throws DeploymentException", "signatureAfterChange": "      public void deployConverter( String name, String location, URL url )         throws DeploymentException", "diff": ["-                    handleConverter( converters[ i ], url );", "+                    final DefaultComponentFactory factory =", "+                        new DefaultComponentFactory( new URL[] { url } );", "+                    handleConverter( converters[ i ], url, factory );", "+        }", "+        catch( final Exception e )", "+        {", "+            throw new DeploymentException( \"Failed to deploy \" + name, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7849f87930966a5e2377d241451ca159", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecuteJavaTest.java", "commitBeforeChange": "650416f0890d8870ee2ec5b8f544f9920c414847", "commitAfterChange": "172370143af9627bc5d4a19dc34a5dcca27c7422", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testTimeOutForked() throws Exception", "signatureAfterChange": "     public void testTimeOutForked() throws Exception", "diff": ["+        //process doesn't die properly under this combination,", "+        //thus test fails.  No workaround?", "+        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "+            && Os.isFamily(\"dos\")) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991d6ffb426226b9381e0b95681a802c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "be938b1e8fe6d68aec358cb6982c7d70fe827886", "commitAfterChange": "ef420c53bf5756a4e14afb47a54cef25e01017a9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private ProjectEntry getProjectEntry( final Project project )         throws TaskException", "signatureAfterChange": "      private ProjectEntry getProjectEntry( final Project project )         throws TaskException", "diff": ["-            final ExecutionFrame frame = createExecutionFrame( project );", "-            entry = new ProjectEntry( project, frame );", "-            m_entrys.put( project, entry );", "+            try", "+            {", "+                final ExecutionFrame frame = createExecutionFrame( project );", "+                entry = new ProjectEntry( project, frame );", "+                m_entrys.put( project, entry );", "+            }", "+            catch( Exception e )", "+            {", "+                final String message = REZ.getString( \"bad-frame.error\" );", "+                throw new TaskException( message, e );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac04f08ceaca1a255016d450979bb7b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/BuildCmd.java", "commitBeforeChange": "bd8fc7d5c8f4bf00a3272db3ec0e00096d16eed0", "commitAfterChange": "435e9dc9b6090394172bf029f106b42b2db55a1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-            project.build();", "+            try {", "+                project.build();", "+            }", "+            catch(Throwable ex) {", "+                _context.getEventBus().postEvent(new ErrorEvent(_context, ex));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd5360a4447ef90f4a68cc5c3037b606", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public PropertyConfigurer getContentConfigurer()", "signatureAfterChange": "     public PropertyConfigurer getContentConfigurer() throws NoSuchPropertyException", "diff": ["-    public PropertyConfigurer getContentConfigurer()", "+    public PropertyConfigurer getContentConfigurer() throws NoSuchPropertyException", "-        return m_contentConfigurer;", "+        if( m_contentConfigurer != null )", "+        {", "+            return m_contentConfigurer;", "+        }", "+", "+        // Does not handle content", "+        final String message = REZ.getString( \"content-unsupported.error\", m_class.getName() );", "+        throw new NoSuchPropertyException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1dbcff5f1547e9f90fd606c72be1115", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "675cbea4cc19287cba32c4ec9701eb7e8c4586c2", "commitAfterChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Project createProject( final String location,                                   final String type,                                   final Parameters parameters )         throws Exception", "signatureAfterChange": "     public Project createProject( final String location,                                   final String type,                                   final Parameters parameters )         throws Exception", "diff": ["-        String projectType = type;", "-        if( null == projectType )", "+        try", "-            projectType = FileUtil.getExtension( location );", "-        }", "+            String projectType = type;", "+            if( null == projectType )", "+            {", "+                projectType = FileUtil.getExtension( location );", "+            }", "-        final ProjectBuilder builder = getProjectBuilder( projectType, parameters );", "-        return builder.build( location );", "+            final ProjectBuilder builder = getProjectBuilder( projectType, parameters );", "+            return builder.build( location );", "+        }", "+        catch( final Exception e )", "+        {", "+            final String message = REZ.getString( \"create-project.error\", location );", "+            throw new CascadingException( message, e );", "+        }"]}]}