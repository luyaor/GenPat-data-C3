{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce93a9f7dd179884a90bf372ac4b5bfe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4662f074e8b85f97a8c3c906c02d62d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean checkClass(String classname)", "signatureAfterChange": "     private boolean checkClass(String classname)", "diff": ["-                loader = new AntClassLoader(null, getProject(), ", "-                    classpath, false);", "+                loader = new AntClassLoader(null, getProject(), classpath, ", "+                                            false);", "-                        loader.findClass(classname);", "+                        requiredClass = loader.findClass(classname);", "-                        // class found but restricted name; this is actually", "-                        // the case we're looking for, so catch the exception", "-                        // and return", "+                        // class found but restricted name; this is", "+                        // actually the case we're looking for in JDK 1.3+,", "+                        // so catch the exception and return", "+                } else {", "+                    return false;", "-                return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834949e1cb716e9b23afed13961d48b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "538257ea859749802694e257143fce9d6efbd1b4", "commitAfterChange": "d605afdd5122d55bb5f39829944acbc2271f8474", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private boolean checkClass(String classname)", "signatureAfterChange": "     private boolean checkClass(String classname)", "diff": ["-                if (loader != null) {", "-                    try {", "-                        loader.findClass(classname);", "-                    } catch (SecurityException se) {", "-                        // class found but restricted name; this is", "-                        // actually the case we're looking for in JDK 1.3+,", "-                        // so catch the exception and return", "-                        return true;", "-                    }", "-                } else {", "-                    return false;", "+                try {", "+                    loader.findClass(classname);", "+                } catch (SecurityException se) {", "+                    // class found but restricted name; this is", "+                    // actually the case we're looking for in JDK 1.3+,", "+                    // so catch the exception and return", "+                    return true;"]}]}