{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb6e5147e82486ecc6848dee6a891853", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010a0e1a136bafa360ab0f13ec9ebfb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void mainQSort3(final Data data, final int loSt, final int hiSt,                             final int dSt)", "signatureAfterChange": "     private void mainQSort3(final Data dataShadow, final int loSt, final int hiSt,                             final int dSt)", "diff": ["-    private void mainQSort3(final Data data, final int loSt, final int hiSt,", "+    private void mainQSort3(final Data dataShadow, final int loSt, final int hiSt,", "-        final int[] stack_ll = data.stack_ll;", "-        final int[] stack_hh = data.stack_hh;", "-        final int[] stack_dd = data.stack_dd;", "-        final int[] fmap     = data.fmap;", "-        final byte[] block   = data.block;", "+        final int[] stack_ll = dataShadow.stack_ll;", "+        final int[] stack_hh = dataShadow.stack_hh;", "+        final int[] stack_dd = dataShadow.stack_dd;", "+        final int[] fmap     = dataShadow.fmap;", "+        final byte[] block   = dataShadow.block;", "-                if (mainSimpleSort(data, lo, hi, d)) {", "+                if (mainSimpleSort(dataShadow, lo, hi, d)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c8fcb7e28c34b1c0e8953c92626449", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/deployer/Deployer.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     Deployer createChildDeployer( ComponentManager componentManager )         throws ComponentException;", "signatureAfterChange": "     Deployer createChildDeployer( ServiceManager componentManager )         throws ServiceException;", "diff": ["-    Deployer createChildDeployer( ComponentManager componentManager )", "-        throws ComponentException;", "+    Deployer createChildDeployer( ServiceManager componentManager )", "+        throws ServiceException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef62d5b7be5ad94c89b6235e21ca3b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "feb7ea550f616abf040604172390fa25b8046e4f", "commitAfterChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void writeToFile(String from, boolean append, File to)          throws IOException", "signatureAfterChange": "     private void writeToFile(String from, boolean append, File to)         throws IOException", "diff": ["-    private void writeToFile(String from, boolean append, File to) ", "+    private void writeToFile(String from, boolean append, File to)", "-            int bytes_read;", "+            int bytesRead;", "-                bytes_read = in.read(buffer);", "-                if (bytes_read == -1) {", "+                bytesRead = in.read(buffer);", "+                if (bytesRead == -1) {", "-                out.write(buffer, 0, bytes_read);", "+                out.write(buffer, 0, bytesRead);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "267bf84b1541609ac73823aabd0e3711", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "      private void generateMTFValues()", "signatureAfterChange": "      private void generateMTFValues()", "diff": ["-        final int last          = this.last;", "-        final Data data         = this.data;", "-        final boolean[] inUse   = data.inUse;", "-        final byte[] block      = data.block;", "-        final int[] fmap        = data.fmap;", "-        final char[] sfmap      = data.sfmap;", "-        final int[] mtfFreq     = data.mtfFreq;", "-        final byte[] unseqToSeq = data.unseqToSeq;", "-        final byte[] yy         = data.generateMTFValues_yy;", "+        final int lastShadow          = this.last;", "+        final Data dataShadow         = this.data;", "+        final boolean[] inUse   = dataShadow.inUse;", "+        final byte[] block      = dataShadow.block;", "+        final int[] fmap        = dataShadow.fmap;", "+        final char[] sfmap      = dataShadow.sfmap;", "+        final int[] mtfFreq     = dataShadow.mtfFreq;", "+        final byte[] unseqToSeq = dataShadow.unseqToSeq;", "+        final byte[] yy         = dataShadow.generateMTFValues_yy;", "-        int nInUse = 0;", "+        int nInUseShadow = 0;", "-                unseqToSeq[i] = (byte) nInUse;", "-                nInUse++;", "+                unseqToSeq[i] = (byte) nInUseShadow;", "+                nInUseShadow++;", "-        this.nInUse = nInUse;", "+        this.nInUse = nInUseShadow;", "-        final int eob = nInUse + 1;", "+        final int eob = nInUseShadow + 1;", "-        for (int i = nInUse; --i >= 0;) {", "+        for (int i = nInUseShadow; --i >= 0;) {", "-        for (int i = 0; i <= last; i++) {", "+        for (int i = 0; i <= lastShadow; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "279d68c28e58681b28dae12f05b4660a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "7ffe5725b354fcb2af5eb239e2c7ab62adba41d6", "commitAfterChange": "bcc7e3dff34ce66d4f1af34c5d5fbb1603808210", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         private void executeInteger(String oldValue) throws BuildException", "signatureAfterChange": "         private void executeInteger(String oldValue) throws BuildException", "diff": ["-            int newValue  = DEFAULT_INT_VALUE;", "+            int newV  = DEFAULT_INT_VALUE;", "-                newValue = currentValue;", "+                newV = currentValue;", "-                    newValue = currentValue + operationValue;", "+                    newV = currentValue + operationValue;", "-                    newValue = currentValue - operationValue;", "+                    newV = currentValue - operationValue;", "-            this.newValue = fmt.format(newValue);", "+            this.newValue = fmt.format(newV);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dce612e209a8405a328b20228199d8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "c4eee4d986a90e301d41a08f87ffbe8c57e0ac63", "commitAfterChange": "c4e4dd9bb143278cd2553abe74ef28f00ed3ddbc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private void touch(File fromDir, String filename, long defaultTimestamp)", "signatureAfterChange": "      private void touch(File fromDir, String filename, long defaultTimestamp)", "diff": ["-        File file = fileUtils.resolveFile(fromDir, filename);", "+        File f = fileUtils.resolveFile(fromDir, filename);", "-            touch(file, defaultTimestamp);", "+            touch(f, defaultTimestamp);", "-                long modTime = (file.exists()) ? file.lastModified() : defaultTimestamp;", "+                long modTime = (f.exists()) ? f.lastModified() : defaultTimestamp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "384ccd9c5d8fc4b9db8842106fff8458", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "7ffe5725b354fcb2af5eb239e2c7ab62adba41d6", "commitAfterChange": "bcc7e3dff34ce66d4f1af34c5d5fbb1603808210", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private void executeString(String oldValue) throws BuildException", "signatureAfterChange": "         private void executeString(String oldValue) throws BuildException", "diff": ["-            String newValue  = DEFAULT_STRING_VALUE;", "+            String newV  = DEFAULT_STRING_VALUE;", "-                newValue = currentValue;", "+                newV = currentValue;", "-                newValue = currentValue + value;", "+                newV = currentValue + value;", "-            this.newValue = newValue;", "+            this.newValue = newV;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a648acac5abd31ee2455ffa8eae0821", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "ba37bf7991e099b567f8cd5a09178893ff55bb9c", "commitAfterChange": "784d54ca4803b0c8fcb6cd4753cc56f0822a1643", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public void setSource(File file)", "signatureAfterChange": "         public void setSource(File source)", "diff": ["-        public void setSource(File file) {", "-            this.file = file;", "+        public void setSource(File source) {", "+            this.source = source;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a80b175d12c05911037479d9a32896", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "8dc387005be32a690d9c1fbf0c53a66be8ca6e6c", "commitAfterChange": "7b6a46d13193059c7ea056ad646fe5620e2bb79d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            for (int i = 0; i < children.size(); ++i) {", "-                Object o = children.get(i);", "+            for (taskPosition = 0;", "+                 taskPosition < children.size();", "+                 ++taskPosition) {", "+                Object o = children.get(taskPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f815b9259fe5e204c433b2aa2f8e13", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/script/ScriptDef.java", "commitBeforeChange": "2b0c95d418b4f3646a6e8479123efd8b95147674", "commitAfterChange": "e142e5addaeb50f2c2a7c71c29747150b9fad463", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        Project project = getProject();", "-        synchronized (project) {", "+        Project p = getProject();", "+        synchronized (p) {", "-                (Map) project.getReference(MagicNames.SCRIPT_REPOSITORY);", "+                (Map) p.getReference(MagicNames.SCRIPT_REPOSITORY);", "-                project.addReference(MagicNames.SCRIPT_REPOSITORY,", "+                p.addReference(MagicNames.SCRIPT_REPOSITORY,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4763e4f463beeb13e1d1c4f419146f3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java", "commitBeforeChange": "db412627e12283e6f51b8e502074b096ac9ff0e1", "commitAfterChange": "36b05881a39e526f19a85765373399bf14bcb4d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static String getTestCaseName(Test t)", "signatureAfterChange": "     public static String getTestCaseName(Test t)", "diff": ["-            return \"unknown\";", "+            return UNKNOWN_TEST_CASE_NAME;", "-        if (t.getClass().getName().equals(\"junit.framework.JUnit4TestCaseFacade\")) {", "+        if (t.getClass().getName().equals(JUNIT_FRAMEWORK_JUNIT4_TEST_CASE_FACADE)) {", "-            } catch (Throwable e) {", "+            } catch (Throwable ignored) {", "-            } catch (Throwable e) {", "+            } catch (Throwable ignored) {", "-        return \"unknown\";", "+        return UNKNOWN_TEST_CASE_NAME;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494bb5ec66a3fb63f7d2f3e274802388", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/DependSet.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            FileList targetFL = (FileList)enumTargetLists.next();", "+            SimpleFileList targetFL = (SimpleFileList)enumTargetLists.next();", "-                FileList sourceFL = (FileList)enumSourceLists.next();", "+                SimpleFileList sourceFL = (SimpleFileList)enumSourceLists.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "512b2e569bab4d4ad8dc8436f1c2d5f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addDepends( final LibFileSet fileSet )", "signatureAfterChange": "     public void addDepends( final ExtensionAdapter extensionAdapter )", "diff": ["-    public void addDepends( final LibFileSet fileSet )", "-        m_dependencies.add( fileSet );", "+     */", "+    public void addDepends( final ExtensionAdapter extensionAdapter )", "+    {", "+        m_dependencies.add( extensionAdapter );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a1777a8e1d0a6eaa0ad3cbf9ea3dabb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/SignJarTest.java", "commitBeforeChange": "25e6c497c3d1b68f412ad7fc47fad735edee37d7", "commitAfterChange": "b02d774374b614d4520b6396e56f90d0d0c84257", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void NotestVerifyJarUnsigned()", "signatureAfterChange": "      public void testVerifyJarUnsigned()", "diff": ["-    public void NotestVerifyJarUnsigned() {", "-        expectBuildException(\"testVerifyJarUnsigned\",", "-                \"unsigned JAR file\");", "+    public void testVerifyJarUnsigned() {", "+        expectBuildExceptionContaining(\"testVerifyJarUnsigned\",", "+                \"unsigned JAR file\",", "+                VerifyJar.ERROR_NO_VERIFY);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65960c3d324e0f766ac44f574973c30c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "7ffe5725b354fcb2af5eb239e2c7ab62adba41d6", "commitAfterChange": "bcc7e3dff34ce66d4f1af34c5d5fbb1603808210", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      protected DescriptorHandler getDescriptorHandler(File srcDir)", "signatureAfterChange": "      protected DescriptorHandler getDescriptorHandler(File srcDir)", "diff": ["-        DescriptorHandler handler = new DescriptorHandler(getTask(), srcDir);", "+        DescriptorHandler h = new DescriptorHandler(getTask(), srcDir);", "-        registerKnownDTDs(handler);", "+        registerKnownDTDs(h);", "-            handler.registerDTD(dtdLocation.getPublicId(), dtdLocation.getLocation());", "+            h.registerDTD(dtdLocation.getPublicId(), dtdLocation.getLocation());", "-        return handler;", "+        return h;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661b23b38b389c2b3950fa1634863e45", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Deployer createChildDeployer( ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public Deployer createChildDeployer( final ServiceManager componentManager )         throws ServiceException", "diff": ["-    public Deployer createChildDeployer( ComponentManager componentManager )", "-        throws ComponentException", "+    public Deployer createChildDeployer( final ServiceManager componentManager )", "+        throws ServiceException", "-        child.compose( componentManager );", "+        child.service( componentManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863ed0dc639a35089c578fe61d9301a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/ant1/TaskAdapter.java", "commitBeforeChange": "aa4d22adfbe8573cba8dba31e2085056807e0efb", "commitAfterChange": "1c62c7f5df7c575e742b6c2ccf5880186a5ba977", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public TaskAdapter( final Task ant1Task )", "signatureAfterChange": "      public TaskAdapter( final Task task )", "diff": ["-    public TaskAdapter( final Task ant1Task )", "+    public TaskAdapter( final Task task )", "-        m_ant1Task = ant1Task;", "+        m_task = task;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffd50b3ef4cfaa1c974c5a2439d9c62", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void loadExtensions( final File file,                                  final ArrayList extensions )         throws TaskException", "signatureAfterChange": "     private static void loadExtensions( final File file,                                         final ArrayList extensions )         throws TaskException", "diff": ["-    private void loadExtensions( final File file,", "-                                 final ArrayList extensions )", "+    private static void loadExtensions( final File file,", "+                                        final ArrayList extensions )", "-            for( int j = 0; j < extension.length; j++ )", "+            for( int i = 0; i < extension.length; i++ )", "-                extensions.add( extension[ j ] );", "+                extensions.add( extension[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959f361ad3a04cb48b6ae1161a06755b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void validate()         throws BuildException", "signatureAfterChange": "     private void validate() throws BuildException", "diff": ["-    private void validate()", "-        throws BuildException", "-    {", "-        if( null == m_destfile )", "-        {", "+    private void validate() throws BuildException {", "+        if (null == destFile) {", "-            throw new BuildException( message );", "+            throw new BuildException(message);", "-        if( m_destfile.exists() && !m_destfile.isFile() )", "-        {", "-            final String message = m_destfile + \" is not a file.\";", "-            throw new BuildException( message );", "+        if (destFile.exists() && !destFile.isFile()) {", "+            final String message = destFile + \" is not a file.\";", "+            throw new BuildException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af0d05888dfd98d05e14baacf2cb710", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void fireMessageLogged(ModelElement element,                                   String message, int priority)", "signatureAfterChange": "     public void fireMessageLogged(Object source,                                   String message, int priority)", "diff": ["-    public void fireMessageLogged(ModelElement element,", "+    public void fireMessageLogged(Object source,", "-        BuildEvent event = new BuildEvent(element, message, priority);", "+        BuildEvent event = new BuildEvent(source, message, priority);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c57880ebe19f7fba2390b49fa72b3f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/Import.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void validateComponent() throws ExecutionException", "signatureAfterChange": "     public void validateComponent() throws ValidationException", "diff": ["-    public void validateComponent() throws ExecutionException {", "+    public void validateComponent() throws ValidationException {", "-                throw new ExecutionException(\"The \\\"ref\\\" attribute can only \"", "+                throw new ValidationException(\"The \\\"ref\\\" attribute can only \"", "-                throw new ExecutionException(\"You must specify a library \"", "+                throw new ValidationException(\"You must specify a library \"", "-                throw new ExecutionException(\"You may only specify an alias\"", "+                throw new ValidationException(\"You may only specify an alias\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5172a49d789edcd7904631cd0724a5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public String getWritableFiles()", "signatureAfterChange": "     public String getWritableFiles()", "diff": ["-        if (m_writablefiles == null) {", "+        if (writableFiles == null) {", "-        } else if (m_writablefiles.getValue().equals(WRITABLE_REPLACE)) {", "+        } else if (writableFiles.getValue().equals(WRITABLE_REPLACE)) {", "-        } else if (m_writablefiles.getValue().equals(WRITABLE_SKIP)) {", "+        } else if (writableFiles.getValue().equals(WRITABLE_SKIP)) {", "-            m_FailOnError = false;", "+            failOnError = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b43257b8ad7292988a1c480821a3aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      protected void setInternalWritableFiles(WritableFiles files)", "signatureAfterChange": "      protected void setInternalWritableFiles(final WritableFiles writableFiles)", "diff": ["-    protected void setInternalWritableFiles(WritableFiles files) {", "-        m_writablefiles = files;", "+    protected void setInternalWritableFiles(final WritableFiles writableFiles) {", "+        this.writableFiles = writableFiles;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae91c6fc84fed0cb883ba86e363994cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "51fe5cb2d9c5c0aae9a528b1af992bcf1d407b1a", "commitAfterChange": "3849918afcc50b3f87292c7a9f3ef2bbb73fd4bc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-                    printTargets(project, msgOutputLevel > Project.MSG_INFO);", "+                    printTargets(project, msgOutputLevel > Project.MSG_INFO,", "+                            msgOutputLevel > Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0706925bbcc71de78c539b09d2074e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/script/org/apache/ant/antlib/script/ScriptBase.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ScriptException", "diff": ["-    public void execute() throws ExecutionException {", "+    public void execute() throws ScriptException {", "-            ", "+", "-            ", "+", "-            ", "+", "-            ", "+", "-                if (te instanceof ExecutionException) {", "-                    throw (ExecutionException) te;", "+                if (te instanceof ScriptException) {", "+                    throw (ScriptException) te;", "-            throw new ExecutionException(t);", "+            throw new ScriptException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be68d54066728781384a6dba245be382", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "792d22a4a1243a181e33542159e2e4127b63a677", "commitAfterChange": "9e7f7bf7be75afb69a8c75d1accd0710e1fba334", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                    log(\"Entering \" + antFile + \"...\");", "+                    log(\"Entering \" + antFile + \"...\", Project.MSG_VERBOSE);", "-                    log(\"Exiting \" + antFile + \".\");", "+                    log(\"Exiting \" + antFile + \".\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1351c3d4a728e4fd39a24bfff19eca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "37ed344b385cde54ee62f2e66d347cb243dd6708", "commitAfterChange": "33107ab10098823c23924741100a6c3faf9fd267", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Class loadClass(String classname, boolean resolve) throws ClassNotFoundException", "signatureAfterChange": "     protected Class loadClass(String classname, boolean resolve) throws ClassNotFoundException", "diff": ["-                    project.log(\"Class \" + classname + \" loaded from system loader\", Project.MSG_VERBOSE);", "+                    project.log(\"Class \" + classname + \" loaded from system loader\", Project.MSG_DEBUG);", "-                    project.log(\"Class \" + classname + \" loaded from ant loader\", Project.MSG_VERBOSE);", "+                    project.log(\"Class \" + classname + \" loaded from ant loader\", Project.MSG_DEBUG);", "-                    project.log(\"Class \" + classname + \" loaded from ant loader\", Project.MSG_VERBOSE);", "+                    project.log(\"Class \" + classname + \" loaded from ant loader\", Project.MSG_DEBUG);", "-                    project.log(\"Class \" + classname + \" loaded from system loader\", Project.MSG_VERBOSE);", "+                    project.log(\"Class \" + classname + \" loaded from system loader\", Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5e4f5cf53cc30af2a45a119edaa831b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java", "commitBeforeChange": "a0ba302efe9a84e4735f08c631e01209496fe522", "commitAfterChange": "2ca7dca3a61c1dfaf641aaae01d923a018e418c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setEnd(final Date stop)", "signatureAfterChange": "     public void setEnd(final Date endDate)", "diff": ["-    public void setEnd(final Date stop) {", "-        m_stop = stop;", "+    public void setEnd(final Date endDate) {", "+        this.endDate = endDate;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da7c06f47201f78cadbf9a8466a4e931", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      private int sendMTFValues1(final int nGroups, final int alphaSize)", "signatureAfterChange": "      private int sendMTFValues1(final int nGroups, final int alphaSize)", "diff": ["-        final Data data       = this.data;", "-        final int[][] rfreq   = data.sendMTFValues_rfreq;", "-        final int[] fave      = data.sendMTFValues_fave;", "-        final short[] cost    = data.sendMTFValues_cost;", "-        final char[] sfmap    = data.sfmap;", "-        final byte[] selector = data.selector;", "-        final byte[][] len    = data.sendMTFValues_len;", "+        final Data dataShadow       = this.data;", "+        final int[][] rfreq   = dataShadow.sendMTFValues_rfreq;", "+        final int[] fave      = dataShadow.sendMTFValues_fave;", "+        final short[] cost    = dataShadow.sendMTFValues_cost;", "+        final char[] sfmap    = dataShadow.sfmap;", "+        final byte[] selector = dataShadow.selector;", "+        final byte[][] len    = dataShadow.sendMTFValues_len;", "-        final int nMTF = this.nMTF;", "+        final int nMTFShadow = this.nMTF;", "-                final int ge = Math.min(gs + G_SIZE - 1, nMTF - 1);", "+                final int ge = Math.min(gs + G_SIZE - 1, nMTFShadow - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddcf2e9865694816ae07794f7be9e075", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "93ee07ad351d8fc5216adc5b3028ef9ee1ec9f3d", "commitAfterChange": "3a2956ada2c086549a72cd36026efc6d3a54d63c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void handleChildren(Object parent,                                    RuntimeConfigurable parentWrapper)          throws BuildException", "signatureAfterChange": "     protected void handleChildren(Object parent,                                    RuntimeConfigurable parentWrapper)          throws BuildException", "diff": ["+     */", "+", "-            if (realChild instanceof Task) {", "+            if (parent instanceof TaskContainer) {", "+", "-            if (realChild instanceof Task) {", "+", "+            if (parent instanceof TaskContainer) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de20e0dc5995bb7648830533c59eecca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/ClasspathTestCollector.java", "commitBeforeChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "commitAfterChange": "283bade37c87f86c92763234e886a69eb55cb47d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Enumeration collectTests()", "signatureAfterChange": "      public Enumeration collectTests()", "diff": ["-            Vector included = null;", "+            ArrayList included = null;", "-                String testname = (String) included.elementAt(j);", "+                String testname = (String) included.get(j);", "-        log(\"Collected \" + collected.size() + \" testcases from \" + paths.length + \" paths.\");", "+        log(\"Collected \" + collected.size() + \" testcases from \" + paths.length + \" path(s).\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e308e5a05a5c7ccc36f4e4183922afbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void sendMTFValues2(final int nGroups, final int nSelectors)", "signatureAfterChange": "      private void sendMTFValues2(final int nGroups, final int nSelectors)", "diff": ["-        final Data data = this.data;", "-        byte[] pos = data.sendMTFValues2_pos;", "+        final Data dataShadow = this.data;", "+        byte[] pos = dataShadow.sendMTFValues2_pos;", "-            final byte ll_i = data.selector[i];", "+            final byte ll_i = dataShadow.selector[i];", "-            data.selectorMtf[i] = (byte) j;", "+            dataShadow.selectorMtf[i] = (byte) j;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e658d2c9fb5905734826f48d329d49b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CRC.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      void updateCRC(int inCh, int repeat)", "signatureAfterChange": "      void updateCRC(int inCh, int repeat)", "diff": ["-        int globalCrc = this.globalCrc;", "+        int globalCrcShadow = this.globalCrc;", "-            int temp = (globalCrc >> 24) ^ inCh;", "-            globalCrc = (globalCrc << 8) ^ crc32Table[(temp >= 0)", "+            int temp = (globalCrcShadow >> 24) ^ inCh;", "+            globalCrcShadow = (globalCrcShadow << 8) ^ crc32Table[(temp >= 0)", "-        this.globalCrc = globalCrc;", "+        this.globalCrc = globalCrcShadow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1201e84279885e534aa26d17f0042fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "37c58ae8ccb6542d350567e49d7458a4da3e054a", "commitAfterChange": "6a27d81a9fbed47b98678a84a9cb19448f2ded8d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private boolean parseCommandLineOptions( final String[] args )         throws Exception", "signatureAfterChange": "      private boolean parseCommandLineOptions( final String[] args )         throws Exception", "diff": ["-                    m_priority = Priority.INFO;", "+                    m_priority = BasicLogger.LEVEL_INFO;", "-                    m_priority = Priority.ERROR;", "+                    m_priority = BasicLogger.LEVEL_ERROR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f92432b31d87d64a8ab2a5492eac0b93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void spawn() throws IOException", "signatureAfterChange": "     public void spawn() throws IOException", "diff": ["-        ExecuteStreamHandler streamHandler = new PumpStreamHandler(dummyOut);", "-        streamHandler.setProcessErrorStream(process.getErrorStream());", "-        streamHandler.setProcessOutputStream(process.getInputStream());", "-        streamHandler.start();", "+        ExecuteStreamHandler handler = new PumpStreamHandler(dummyOut);", "+        handler.setProcessErrorStream(process.getErrorStream());", "+        handler.setProcessOutputStream(process.getInputStream());", "+        handler.start();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb5dd66833d124a1feceb55433ca3025", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java", "commitBeforeChange": "a0ba302efe9a84e4735f08c631e01209496fe522", "commitAfterChange": "2ca7dca3a61c1dfaf641aaae01d923a018e418c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setDir(final File dir)", "signatureAfterChange": "     public void setDir(final File inputDir)", "diff": ["-    public void setDir(final File dir) {", "-        m_dir = dir;", "+    public void setDir(final File inputDir) {", "+        this.inputDir = inputDir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb1c2dc13fc38e3e8dcf39b401ea04f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void setupObject( final Object object,                               final Parameters parameters )         throws Exception", "signatureAfterChange": "     private void setupObject( final Object object,                               final Parameters parameters )         throws Exception", "diff": ["-        if( object instanceof Composable )", "+        if( object instanceof Serviceable )", "-            ( (Composable)object ).compose( m_componentManager );", "+            ( (Serviceable)object ).service( m_serviceManager );"]}]}