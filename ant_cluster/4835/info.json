{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "646263879f9e8bcaab17541e3c43cdb5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a236910a75e380ab9d52c559c54385c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "c6753edecbdf78d519c1265040a581c6417d6210", "commitAfterChange": "910c937723c4710cb1309c939dbcd4b8c3e8b6ce", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void addProperties(Properties props)", "signatureAfterChange": "     protected void addProperties(Properties props)", "diff": ["-        resolveAllProperties(props);", "-        Enumeration e = props.keys();", "-        while (e.hasMoreElements()) {", "-            String propertyName = (String) e.nextElement();", "-            String propertyValue = props.getProperty(propertyName);", "-", "-            String v = getProject().replaceProperties(propertyValue);", "-", "-            if (prefix != null) {", "-                propertyName = prefix + propertyName;", "+        HashMap m = new HashMap(props);", "+        resolveAllProperties(m);", "+        for (Iterator it = m.keySet().iterator(); it.hasNext();) {", "+            Object k = it.next();", "+            if (k instanceof String) {", "+                String propertyName = (String) k;", "+                if (prefix != null) {", "+                    propertyName = prefix + propertyName;", "+                }", "+                addProperty(propertyName, m.get(k));", "-", "-            addProperty(propertyName, v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f375f12af09992c91e737308537ecfc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "c6753edecbdf78d519c1265040a581c6417d6210", "commitAfterChange": "910c937723c4710cb1309c939dbcd4b8c3e8b6ce", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 39, "signatureBeforeChange": "     private void resolveAllProperties(Properties props) throws BuildException", "signatureAfterChange": "     private void resolveAllProperties(Map props) throws BuildException", "diff": ["-    private void resolveAllProperties(Properties props) throws BuildException {", "-        for (Enumeration e = props.keys(); e.hasMoreElements();) {", "-            String propertyName = (String) e.nextElement();", "-            Stack referencesSeen = new Stack();", "-            resolve(props, propertyName, referencesSeen);", "-        }", "-    }", "+    private void resolveAllProperties(Map props) throws BuildException {", "+        PropertyHelper propertyHelper = (PropertyHelper) PropertyHelper.getPropertyHelper(", "+                getProject()).clone();", "+        propertyHelper.add(new PropertyResolver(props));", "+        for (Iterator it = props.keySet().iterator(); it.hasNext();) {", "+            Object k = it.next();", "+            if (k instanceof String) {", "+                Object value = propertyHelper.getProperty((String) k);", "+                props.put(k, value);"]}]}