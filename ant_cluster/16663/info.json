{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f5d5881245bfe3ae0b40fad296ffb2f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "790157f8c028a1a24daa37fdb94bdca0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/test/DefaultConfigurerTestCase.java", "commitBeforeChange": "42c6021a9e42f49f50a3f4a170590d15a9b8c3db", "commitAfterChange": "aaf5713fe7d7826fed7d88566f3df0e2c7c4bda3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void testReferenceConversion() throws Exception", "signatureAfterChange": "     public void testReferenceConversion() throws Exception", "diff": ["-        configure( test, config );", "+        try", "+        {", "+            configure( test, config );", "+        }", "+        catch( ConfigurationException e )", "+        {", "+            //Good should no longer work", "+            return;", "+        }", "+", "+        fail( \"-ref pattern on attributes no longer supported\" );", "-        final ConfigTestReferenceConversion expected = new ConfigTestReferenceConversion();", "-        expected.setPropA( new MyRole1Adaptor( refValue ) );", "-        assertEquals( expected, test );", "+        //final ConfigTestReferenceConversion expected = new ConfigTestReferenceConversion();", "+        //expected.setPropA( new MyRole1Adaptor( refValue ) );", "+        //assertEquals( expected, test );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd0c1bf0f474fc637f40a390faca5c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "1764b5fda8fe5b4166269d73a00f975b4c7fb75d", "commitAfterChange": "1e599c6651b3baafbf807462fe32a975b416f1d1", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "     public Object getReference(String key)", "signatureAfterChange": "     public Object getReference(String key)", "diff": ["-            Vector p = new Vector();", "-            PropertyHelper.getPropertyHelper(this).parsePropertyString(", "-                key, new Vector(), p);", "-            if (p.size() == 1) {", "-                log(\"Unresolvable reference \" + key", "-                    + \" might be a misuse of property expansion syntax.\",", "-                    MSG_WARN);", "+            try {", "+                if (PropertyHelper.getPropertyHelper(this).containsProperties(key)) {", "+                    log(\"Unresolvable reference \" + key", "+                            + \" might be a misuse of property expansion syntax.\", MSG_WARN);", "+                }", "+            } catch (Exception e) {", "+                //ignore"]}]}