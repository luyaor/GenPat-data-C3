{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdc09fb9a4f165067f38e455282af786", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e9fab3608eaae89ce2b123dc4a1a494", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Os.java", "commitBeforeChange": "a376c57ae162bb14f507c677767dfd8e6b3e7139", "commitAfterChange": "ab9f91736afcdd65e4ca1da6c627f4df71f5289a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        String osName = System.getProperty(\"os.name\").toLowerCase(Locale.US);", "-        String pathSep = System.getProperty(\"path.separator\");", "+        return isFamily(family);", "+    }", "-                return pathSep.equals(\";\");", "-                    && (!osName.startsWith(\"mac\") || osName.endsWith(\"x\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ab00a60fd1c0c9c7af0b16e4b6be7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Os.java", "commitBeforeChange": "3c83a073444415028bdcb5acec910d7de1a90825", "commitAfterChange": "82cc947b9811486570e9a00853bf3b2f9b4d4f10", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static boolean isFamily(String family)", "signatureAfterChange": "     public static boolean isFamily(String family)", "diff": ["-        if (family != null) {", "-            if (family.equals(\"windows\")) {", "-                return osName.indexOf(\"windows\") > -1;", "-            } else if (family.equals(\"os/2\")) {", "-                return osName.indexOf(\"os/2\") > -1;", "-            } else if (family.equals(\"netware\")) {", "-                return osName.indexOf(\"netware\") > -1;", "-            } else if (family.equals(\"dos\")) {", "-                return pathSep.equals(\";\") && !isFamily(\"netware\");", "-            } else if (family.equals(\"mac\")) {", "-                return osName.indexOf(\"mac\") > -1;", "-            } else if (family.equals(\"unix\")) {", "-                return pathSep.equals(\":\")", "-                    && (!isFamily(\"mac\") || osName.endsWith(\"x\"));", "-            }", "-            throw new BuildException(\"Don\\'t know how to detect os family \\\"\"", "-                                     + family + \"\\\"\");", "-        }", "-        return false;", "+        return isOs(family, null, null, null);"]}]}