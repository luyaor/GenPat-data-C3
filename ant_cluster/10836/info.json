{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9fdb1033ee47b44a812c99326ad430e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33659adab017135d367b9906ad82fbd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/runtime/ConverterDef.java", "commitBeforeChange": "af9fedaddcecbe135f7e3b6158799d524a7d2150", "commitAfterChange": "c171b4c9f2bf641be687e7d5edb9456d4ecd3930", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            m_converterRegistry.registerConverter( m_classname, m_sourceType, m_destinationType );", "+            final ConverterRegistry converterRegistry = (ConverterRegistry)getService( ConverterRegistry.class );", "+            converterRegistry.registerConverter( m_classname, m_sourceType, m_destinationType );", "-            m_typeManager.registerType( Converter.ROLE, m_classname, factory );", "+            final TypeManager typeManager = (TypeManager)getService( TypeManager.class );", "+            typeManager.registerType( Converter.ROLE, m_classname, factory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5aca8998b9f2093d3956e112e471e69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java", "commitBeforeChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "commitAfterChange": "43cbdfc52cca75f3089c7494d99b91cb9d562fc0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        final String role = m_roleManager.getRoleForName( typeName );", "+        final RoleManager roleManager = (RoleManager)getService( RoleManager.class );", "+        final String role = roleManager.getRoleForName( typeName );", "+        final TypeManager typeManager = (TypeManager)getService( TypeManager.class );", "-            m_typeManager.registerType( role, m_name, factory );", "+            typeManager.registerType( role, m_name, factory );"]}]}