{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a85e2a2e9daa8e21f02ba0f70e89e47b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cb4f9dc4b4259a08979315c2cf2acc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "6b5c48061a0409b564f51bcf0717e946a0a41556", "commitAfterChange": "de06c1b597ffcab2fd85890c0d110873a7e3b738", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void catFiles(File base, String[] files)", "signatureAfterChange": "     private void catFiles(File base, String[] files)", "diff": ["-                    byte[] buffer = new byte[8096];", "+                    byte[] buffer = new byte[8192];", "-        } else { // user specified encoding, assume line oriented input", "+        } else { // user specified encoding", "-            PrintWriter out = null;", "+            Writer out = null;", "-                    out = new PrintWriter(", "-                              new OutputStreamWriter(", "-                                  new LogOutputStream(this, Project.MSG_WARN)));", "+                    out = new OutputStreamWriter(", "+                              new LogOutputStream(this, Project.MSG_WARN));", "-                    out = new PrintWriter(", "-                              new OutputStreamWriter(", "-                                  new FileOutputStream(destinationFile", "-                                                       .getAbsolutePath(),", "-                                                       append),", "-                                  encoding));", "+                    out = new OutputStreamWriter(", "+                              new FileOutputStream(destinationFile", "+                                                   .getAbsolutePath(),", "+                                                   append),", "+                              encoding);", "-                    while ((line = in.readLine()) != null) {", "-                        // Log the line, using WARN so it displays in", "-                        // 'quiet' mode.", "-                        out.println(line);", "+                    char[] buffer = new char[4096];", "+                    while (true) {", "+                        int charsRead = in.read(buffer);", "+                        if (charsRead == -1) { // EOF", "+                            break;", "+                        }", "+                        ", "+                        // Write the read data.", "+                        out.write(buffer, 0, charsRead);", "+                    out.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35cda1201af70a8ccb9be12cb767f4af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "commitAfterChange": "86334974455a492f4b76331b6002a45289874ddf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 10, "signatureBeforeChange": "         public void endElement(String uri, String name, String qName) throws SAXException", "signatureAfterChange": "         public void endElement(String uri, String name, String qName) throws SAXException", "diff": ["-         */", "-        public void endElement(String uri, String name, String qName) throws SAXException {", "-", "-            finished();", "-            // Let parent resume handling SAX events", "-            parser.setContentHandler(parentHandler);", "+         */", "+        public void endElement(String uri, String name, String qName) throws SAXException {", "+            currentHandler.onEndElement(uri, name, context);", "+            AntHandler prev=(AntHandler)antHandlers.pop();", "+            //System.out.println(\"XXX pop \" + currentHandler + \" \" + prev);", "+            currentHandler=prev;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403c6a56c3397b9ac3eee36a7690799a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "             public void setDynamicAttribute(String name, String value) throws BuildException", "signatureAfterChange": "             public void setDynamicAttribute(String name, String value) throws BuildException", "diff": ["-                if (\"name\".equalsIgnoreCase(name)) {", "+                String nameLC = name != null", "+                    ? name.toLowerCase(Locale.ENGLISH) : null;", "+                if (\"name\".equals(nameLC)) {", "-                } else if (\"value\".equalsIgnoreCase(name)) {", "+                } else if (\"value\".equals(nameLC)) {", "-                    if (\"true\".equalsIgnoreCase(value)) {", "+                    String valueLC = value != null", "+                        ? value.toLowerCase(Locale.ENGLISH) : null;", "+                    if (\"true\".equals(valueLC)) {", "-                    } else if (\"false\".equalsIgnoreCase(value)) {", "+                    } else if (\"false\".equals(valueLC)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "714a8559d267e3a430f8986e04a6b19a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "     public static boolean toBoolean(String s)", "signatureAfterChange": "     public static boolean toBoolean(String s)", "diff": ["-        return (\"on\".equalsIgnoreCase(s)", "-                || \"true\".equalsIgnoreCase(s)", "-                || \"yes\".equalsIgnoreCase(s));", "+        String lc = s == null ? null : s.toLowerCase(Locale.ENGLISH);", "+        return (\"on\".equals(lc)", "+                || \"true\".equals(lc)", "+                || \"yes\".equals(lc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc0958a01ea9c03e964375ed9c3b31f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void useParameter(Parameter parameter)", "signatureAfterChange": "     public void useParameter(Parameter parameter)", "diff": ["+        String valueLC =", "+            value != null ? value.toLowerCase(Locale.ENGLISH) : null;", "-                (\"true\".equalsIgnoreCase(value))", "+                (\"true\".equals(valueLC))", "-                (\"true\".equalsIgnoreCase(value))", "+                (\"true\".equals(valueLC))", "-                (\"true\".equalsIgnoreCase(value))", "+                (\"true\".equals(valueLC))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8dd2a6bb13cdf8b2709c11ca32fd841", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "commitAfterChange": "9c6515959f5bf9016b0dd8c12691e1e7549b2dd0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public PropertyConfigurer getProperty( final String name )", "signatureAfterChange": "      private int getPropertyCount()", "diff": ["+", "+    private int getPropertyCount()", "+    {", "+        final int typedSize = ( null != m_typedPropertyConfigurer ) ? 1 : 0;", "+        final int contentSize = ( null != m_contentConfigurer ) ? 1 : 0;", "+        return m_adders.size() + m_setters.size() + contentSize + typedSize;", "-    public PropertyConfigurer getProperty( final String name )", "-        return (PropertyConfigurer)m_props.get( name );"]}]}