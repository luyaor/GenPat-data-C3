{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bbb6cbde634bead94408e1179b4e624", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff4b61b24af9852966a65e5a323510f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void test3()", "signatureAfterChange": "      @Test     public void test3() throws IOException", "diff": ["-    public void test3() {", "-        executeTarget(\"test3\");", "+    @Test", "+    public void test3() throws IOException {", "+        buildRule.executeTarget(\"test3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "429a74e28cc9b7490cf66676892a61f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void test2()", "signatureAfterChange": "      @Test     public void test2() throws IOException", "diff": ["-    public void test2() {", "-        executeTarget(\"test2\");", "+    @Test", "+    public void test2() throws IOException {", "+        buildRule.executeTarget(\"test2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5845e895982030468466ef32e05f77f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void test1()", "signatureAfterChange": "      @Test     public void test1() throws IOException", "diff": ["-    public void test1() {", "-        executeTarget(\"test1\");", "+    @Test", "+    public void test1() throws IOException {", "+        buildRule.executeTarget(\"test1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a283139576c96d2c8b78f2b185f23b21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testDefaultInlineHandler()", "signatureAfterChange": "      @Test     public void testDefaultInlineHandler() throws IOException", "diff": ["-", "-    public void testDefaultInlineHandler() {", "-        stdin();", "-        executeTarget(\"testDefaultInlineHandler\");", "-    }", "+", "+    @Test", "+    public void testDefaultInlineHandler() throws IOException {", "+        stdin();", "+        buildRule.executeTarget(\"testDefaultInlineHandler\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a420d450ee9ad85784a3992f4c6b9c90", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testGreedyInlineHandlerRefid()", "signatureAfterChange": "      @Test     public void testGreedyInlineHandlerRefid() throws IOException", "diff": ["-", "-    public void testGreedyInlineHandlerRefid() {", "-        stdin();", "-        executeTarget(\"testGreedyInlineHandlerRefid\");", "-    }", "+", "+    @Test", "+    public void testGreedyInlineHandlerRefid() throws IOException {", "+        stdin();", "+        buildRule.executeTarget(\"testGreedyInlineHandlerRefid\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2c1842eab9e431ae243b4b2a1f8c45b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testGreedyInlineHandlerClassname()", "signatureAfterChange": "      @Test     public void testGreedyInlineHandlerClassname() throws IOException", "diff": ["-", "-    public void testGreedyInlineHandlerClassname() {", "-        stdin();", "-        executeTarget(\"testGreedyInlineHandlerClassname\");", "-    }", "+", "+    @Test", "+    public void testGreedyInlineHandlerClassname() throws IOException {", "+        stdin();", "+        buildRule.executeTarget(\"testGreedyInlineHandlerClassname\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa8272a6791d2cdc7266d088bcf26374", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testGreedyInlineHandler()", "signatureAfterChange": "      @Test     public void testGreedyInlineHandler() throws IOException", "diff": ["-", "-    public void testGreedyInlineHandler() {", "-        stdin();", "-        executeTarget(\"testGreedyInlineHandler\");", "-    }", "+", "+    @Test", "+    public void testGreedyInlineHandler() throws IOException {", "+        stdin();", "+        buildRule.executeTarget(\"testGreedyInlineHandler\");", "+    }"]}]}