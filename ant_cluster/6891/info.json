{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0672b4d0d9dfea85033de1ce51d321a6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74bd0d5a5804c5eeac904bd63d28c6fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/Log.java", "commitBeforeChange": "eb278f795eee59165a03a7046586dc20b589f600", "commitAfterChange": "73e215e5193cbbeb05d181e309bd650355e5cbf4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( LogLevel.FATAL_ERROR == m_level )", "-        {", "-            getLogger().fatalError( m_message );", "-        }", "-        else if( LogLevel.ERROR == m_level )", "-        {", "-            getLogger().error( m_message );", "-        }", "-        else if( LogLevel.WARN == m_level )", "-        {", "-            getLogger().warn( m_message );", "-        }", "-        else if( LogLevel.INFO == m_level )", "-        {", "-            getLogger().info( m_message );", "-        }", "-        else", "-        {", "-            getLogger().debug( m_message );", "-        }", "+        LogLevel.log( getLogger(), m_message, m_level );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c996399de6138d00ea3173c655dc1a75", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/Log.java", "commitBeforeChange": "91c816cbbbdb2377d534312506fcaab9b4c73ad3", "commitAfterChange": "2fc87ac96aa2e6c603f4cbd0e00227d43960ad3a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["+     */", "-        getLogger().warn( m_message );", "+        if( LogLevel.FATAL_ERROR == m_level )", "+        {", "+            getLogger().fatalError( m_message );", "+        }", "+        else if( LogLevel.ERROR == m_level )", "+        {", "+            getLogger().error( m_message );", "+        }", "+        else if( LogLevel.WARN == m_level )", "+        {", "+            getLogger().warn( m_message );", "+        }", "+        else if( LogLevel.INFO == m_level )", "+        {", "+            getLogger().info( m_message );", "+        }", "+        else", "+        {", "+            getLogger().debug( m_message );", "+        }"]}]}