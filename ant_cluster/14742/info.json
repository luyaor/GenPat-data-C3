{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e116bd67cc145a5aea25dea00590479a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578658bf70065c70dc28abba400f673f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/type/DefaultTypeManager.java", "commitBeforeChange": "165ec8163b70ab6415e2ca549bd5d2a621a8e39b", "commitAfterChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Component lookup( final String role )         throws ComponentException", "signatureAfterChange": "      public TypeFactory getFactory( final String role )         throws TypeException", "diff": ["-", "-    public Component lookup( final String role )", "-        throws ComponentException", "-    {", "-        if( role.endsWith( \"Selector\" ) )", "-        {", "-           return createSelector( role );", "-        }", "-        else", "-        {", "-            throw new ComponentException( \"Unable to provide implementation for '\" + ", "-                                          role + \"'\" );", "-        }", "-    }", "+", "+    public TypeFactory getFactory( final String role )", "+        throws TypeException", "+    {", "+        return createFactory( role + \"Selector\" );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66985221a265ebb30fa632a19cc74675", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "1fbd2fe328a83e69ff72aa45c35414777f218279", "commitAfterChange": "c31f5ae25766b6bab90b1d0ac86eab2c7f66b804", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public static void closeStreams(Process process)", "signatureAfterChange": "     public static void closeStreams(Process process)", "diff": ["-        try {", "-            process.getInputStream().close();", "-        } catch (IOException eyeOhEx) {", "-        }", "-        try {", "-            process.getOutputStream().close();", "-        } catch (IOException eyeOhEx) {", "-        }", "-        try {", "-            process.getErrorStream().close();", "-        } catch (IOException eyeOhEx) {", "-        }", "+        FileUtils.close(process.getInputStream());", "+        FileUtils.close(process.getOutputStream());", "+        FileUtils.close(process.getErrorStream());"]}]}