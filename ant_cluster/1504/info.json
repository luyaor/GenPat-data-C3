{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aa2bb25bd307e5d1ce7f98679c0ae1c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "068fd31a8fea930fe1656fad40c631b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries)          throws ExecutionException", "signatureAfterChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-                                Map libraries)", "+                                Map libraries, Map libPathsMap)", "-                    configuring, libraries);", "+                    configuring, libraries, libPathsMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085825422fd926f60bed995a9586e1a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory.java", "commitBeforeChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "commitAfterChange": "5b320cdc202a575a067f3dacbd06bff3ebc43f83", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static JspCompilerAdapter resolveClassName(String className)         throws BuildException", "signatureAfterChange": "     private static JspCompilerAdapter resolveClassName(String className,                                                        AntClassLoader classloader)         throws BuildException", "diff": ["-    private static JspCompilerAdapter resolveClassName(String className)", "+    private static JspCompilerAdapter resolveClassName(String className,", "+                                                       AntClassLoader classloader)", "-            Class c = Class.forName(className);", "+            Class c = classloader.findClass(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a0e513d3980f0bbcdbc9ad027409ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main( final String[] args )", "signatureAfterChange": "     public static void main( final Map properties, final String[] args )", "diff": ["+     */", "+    public static void main( final Map properties, final String[] args )", "+    {", "-            main.execute( args );", "+            main.execute( properties, args );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f6837b4c134a6a980332a75e8d787e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/XmlPropertyTest.java", "commitBeforeChange": "f3eed91811c13007966599e1511dd57f2252ccff", "commitAfterChange": "86ffd422467bec1d81ff85e58eb75d1e589cc95c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testProperties()", "signatureAfterChange": "      private void testProperties(String target)", "diff": ["-    public void testProperties() {", "-        executeTarget(\"test\");", "+", "+    private void testProperties(String target) {", "+        executeTarget(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8afd37ea65f62121c2f7131cdbb10d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/launcher/Main.java", "commitBeforeChange": "cb412d5547ace06f83204cca0de52bb594e818b5", "commitAfterChange": "cc0bf7e707542ff4c331cb0988c585459e9a2a6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private final static File findInstallDir()         throws Exception", "signatureAfterChange": "     private final static File findInstallDir()         throws Exception", "diff": ["-            if( element.endsWith( \"ant.jar\" ) )", "+            if( element.endsWith( \"myrmidon-launcher.jar\" ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1f19519182b3ef1dea5624c74142c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/aspects/AbstractAspectHandler.java", "commitBeforeChange": "9012ef8405243cb0ea64e16414b003265a0fcce6", "commitAfterChange": "66bbf8cac07d3e8bbd3b335f184cb381b020de3d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void preConfigure()         throws TaskException", "signatureAfterChange": "      public void preConfigure( final Configuration taskModel )         throws TaskException", "diff": ["-    public void preConfigure()", "+    public void preConfigure( final Configuration taskModel )", "+        m_taskModel = taskModel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8ea270d96fc4f3ebabcf0f28a6d901", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/init/org/apache/ant/init/InitConfig.java", "commitBeforeChange": "bd2ddfd03df5d01d949d120c13a4b2383b9dc986", "commitAfterChange": "e503d4fa0e071937c2c69afe2ee9bc5c9b696efa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public InitConfig() throws InitException", "signatureAfterChange": "     public InitConfig(Class libraryClass) throws InitException", "diff": ["-    public InitConfig() throws InitException {", "+    public InitConfig(Class libraryClass) throws InitException {", "-            URL antLibURL = getAntLibURL();", "+            URL antLibURL = getAntLibURL(libraryClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2029bd5179f6b56f93b07bd709383090", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "cba6d868a87e2a4cd4406345201de39dcabcd3fd", "commitAfterChange": "28c651a95ac66940b0ea3830b955c012ea41ad66", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "     private void generateMissingPackageInfoClasses() throws IOException", "signatureAfterChange": "     private void generateMissingPackageInfoClasses(File dest) throws IOException", "diff": ["-    private void generateMissingPackageInfoClasses() throws IOException {", "+    private void generateMissingPackageInfoClasses(File dest) throws IOException {", "-            File pkgBinDir = new File(destDir, pkg.replace('/', File.separatorChar));", "+            File pkgBinDir = new File(dest, pkg.replace('/', File.separatorChar));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25b006285558dc858a620f54ec720632", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "8d275b78c2240031dca97d3eba6ba0f592987d62", "commitAfterChange": "4e4a3593518e23056df34ec915bda86ac510a0e1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "      private void setProperty(String name)", "signatureAfterChange": "      private void setProperty(String name, String value)", "diff": ["-    private void setProperty(String name) {", "+", "+    private void setProperty(String name, String value) {", "-            getProject().setNewProperty(name, \"true\");", "+            getProject().setNewProperty(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30b69613030ed12235765dddc18870b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "2f0ab79127f87f9b769a60af0e3aad9da0bf4734", "commitAfterChange": "3cb22aa1c607dcc42ccdf3249be2c26e3585c6f5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected String getString(byte[] bytes) throws ZipException", "signatureAfterChange": "     protected String getString(byte[] bytes, String enc)         throws ZipException", "diff": ["-        if (encoding == null) {", "+     */", "+    protected String getString(byte[] bytes, String enc)", "+        throws ZipException {", "+        if (enc == null) {", "-                return new String(bytes, encoding);", "+                return new String(bytes, enc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d530ec3e49218f576e57e077792e28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/smb/SmbFileSystem.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SmbFileSystem( FileName rootName )", "signatureAfterChange": "     public SmbFileSystem( final FileSystemProviderContext context,                           final FileName rootName )", "diff": ["-    public SmbFileSystem( FileName rootName )", "+    public SmbFileSystem( final FileSystemProviderContext context,", "+                          final FileName rootName )", "-        super( rootName );", "+        super( context, rootName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d36d1c9539bebbc2e702fe505b2e83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskMirrorImpl.java", "commitBeforeChange": "0c2d03d031ecacd79ea8d77cd88b8428e84a3c7c", "commitAfterChange": "44ecc125fa2df70025e742ba113dd793c0e27580", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void addVmExit(JUnitTest test, JUnitTaskMirror.JUnitResultFormatterMirror aFormatter,             OutputStream out, final String message)", "signatureAfterChange": "      public void addVmExit(JUnitTest test, JUnitTaskMirror.JUnitResultFormatterMirror aFormatter,             OutputStream out, String message, String testCase)", "diff": ["-            OutputStream out, final String message) {", "+            OutputStream out, String message, String testCase) {", "-        TestCase t = new VmExitErrorTest(message, test);", "+        TestCase t = new VmExitErrorTest(message, test, testCase);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "441bcb0d784cbf343cd0dae37fee63d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskMirrorImpl.java", "commitBeforeChange": "0c2d03d031ecacd79ea8d77cd88b8428e84a3c7c", "commitAfterChange": "44ecc125fa2df70025e742ba113dd793c0e27580", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "          VmExitErrorTest(String aMessage, JUnitTest anOriginalTest)", "signatureAfterChange": "          VmExitErrorTest(String aMessage, JUnitTest anOriginalTest, String aTestCase)", "diff": ["-        VmExitErrorTest(String aMessage, JUnitTest anOriginalTest) {", "+        VmExitErrorTest(String aMessage, JUnitTest anOriginalTest, String aTestCase) {", "+            testCase = aTestCase;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484bd1281df23413c06e5cd2830aa81a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "bb0594b899cd5b5f752bcaff0bb0c2387547a356", "commitAfterChange": "2f2302b85bf1c19702643bdfce307e8462e59159", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, File srcdir, String baseName)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, File srcdir, File descriptorDir, String baseName)", "diff": ["-    protected void addVendorFiles(Hashtable ejbFiles, File srcdir, String baseName) {", "+    protected void addVendorFiles(Hashtable ejbFiles, File srcdir, File descriptorDir, String baseName) {", "-        File weblogicDD = new File(srcdir,", "+        File weblogicDD = new File(descriptorDir,", "-        File weblogicCMPDD = new File(srcdir,", "+        File weblogicCMPDD = new File(descriptorDir,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495a4daf18559483ea1b8855fbcac355", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/service/AntServiceException.java", "commitBeforeChange": "533bf6eaf48c182cbf083afba17e7e8014f78c19", "commitAfterChange": "62562693ac733d0697b5a522972f36ea5570225c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AntServiceException()", "signatureAfterChange": "     public AntServiceException( final String message )", "diff": ["-     */", "-    public AntServiceException()", "-    {", "-        this( \"\", null );", "-    }", "+        super( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b47373cf387c2c80d702c3d4a9c8d6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private boolean handleChild(IntrospectionHelper ih,                                 Object parent, UnknownElement child,                                 RuntimeConfigurable childWrapper)", "signatureAfterChange": "     private boolean handleChild(         String parentUri,         IntrospectionHelper ih,         Object parent, UnknownElement child,         RuntimeConfigurable childWrapper)", "diff": ["-    private boolean handleChild(IntrospectionHelper ih,", "-                                Object parent, UnknownElement child,", "-                                RuntimeConfigurable childWrapper) {", "+    private boolean handleChild(", "+        String parentUri,", "+        IntrospectionHelper ih,", "+        Object parent, UnknownElement child,", "+        RuntimeConfigurable childWrapper) {", "-        if (ih.supportsNestedElement(childName)) {", "+        if (ih.supportsNestedElement(parentUri, childName)) {", "-                ih.getElementCreator(getProject(), parent, childName);", "+                ih.getElementCreator(getProject(), parentUri, parent, childName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4db3fe4b974c08968187c49a09dc112a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "481c5c51f381f28c27eeb44ea1acc2b87a4ff728", "commitAfterChange": "24f13ef07707ecf4f46a9d90fd434a8d35f14940", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private Object icreate()", "signatureAfterChange": "     private Object icreate(Project project)", "diff": ["-    private Object icreate() {", "-        Class c = getTypeClass();", "+    private Object icreate(Project project) {", "+        Class c = getTypeClass(project);", "-        Object o = createAndSet(c);", "+        Object o = createAndSet(project, c);", "-        TypeAdapter adapterObject = (TypeAdapter) createAndSet(adapterClass);", "+        TypeAdapter adapterObject = (TypeAdapter) createAndSet(", "+            project, adapterClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de1b5ae581588bca560322cab0cff5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "4464369821e5824727322622259f6ffd3ab8880b", "commitAfterChange": "1d3ca73f3c02e7a06c94f677057b04c3c238027e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "      private void accountForIncludedDir(String name, File file, boolean fast,                                        String[] children)", "signatureAfterChange": "      private void accountForIncludedDir(String name, File file, boolean fast,                                        String[] children,                                        Stack directoryNamesFollowed)", "diff": ["-                                       String[] children) {", "+                                       String[] children,", "+                                       Stack directoryNamesFollowed) {", "-            scandir(file, name + File.separator, fast, children);", "+            scandir(file, name + File.separator, fast, children,", "+                    directoryNamesFollowed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4aba6448e1995d4ceda993bd221d82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "6f4f0c60756a92b3a5dbc1c123904be0db030ad3", "commitAfterChange": "8c9b19d0a2849ba712c6859ed7b7d3537cef33fb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "     private void addTimeout(JUnitTest test, JUnitResultFormatter formatter,                             OutputStream out)", "signatureAfterChange": "     private void addVmExit(JUnitTest test, JUnitResultFormatter formatter,                            OutputStream out, final String message)", "diff": ["-    private void addTimeout(JUnitTest test, JUnitResultFormatter formatter,", "-                            OutputStream out) {", "+    private void addVmExit(JUnitTest test, JUnitResultFormatter formatter,", "+                           OutputStream out, final String message) {", "-        //create a special test class that asserts a timout occurred,", "+        //create a special test class that asserts an error", "-                throw new AssertionFailedError(\"Timeout occurred\");", "+                throw new AssertionFailedError(message);", "-        formatter.addError(t, new AssertionFailedError(\"Timeout occurred\"));", "+        formatter.addError(t, new AssertionFailedError(message));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b07fcb3027542e6397a2c533131796", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "1523b24a93d8e4b849afd938ab7eaffcb6031969", "commitAfterChange": "ce1af4647df3f1fab5344250d1751b334e774d77", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void addNestedElement(Reflector reflector, Object element,                                   BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void addNestedElement(AntLibFactory factory, Reflector reflector,                                   Object element, BuildElement model)          throws ExecutionException", "diff": ["-    private void addNestedElement(Reflector reflector, Object element,", "-                                  BuildElement model)", "+    private void addNestedElement(AntLibFactory factory, Reflector reflector,", "+                                  Object element, BuildElement model)", "-            typeInstance = createTypeInstance(nestedType, null, model);", "+            typeInstance = createTypeInstance(nestedType, factory, model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557eb9437a2e404147335d13da54addb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TokenizedPath.java", "commitBeforeChange": "be9a9286654ae67726b1c9c8512f0ae41c63dc6c", "commitAfterChange": "4ecea70e9b75546d922e43fde8f61550094119ee", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static File findFile(File base, final String[] pathElements,                                  final boolean cs)", "signatureAfterChange": "     private static File findFile(File base, final String[] pathElements,                                  final boolean cs, FileLister fileLister)", "diff": ["-                                 final boolean cs) {", "+                                 final boolean cs, FileLister fileLister) {", "-            String[] files = base.list();", "+            String[] files = fileLister.list(base);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "580965b7177a6d5a7b00d24f542c6e02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/convert/AbstractConverter.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( final Class destination, final Object original )         throws Exception", "signatureAfterChange": "     public Object convert( final Class destination, final Object original, Context context )         throws Exception", "diff": ["-    public Object convert( final Class destination, final Object original )", "+    public Object convert( final Class destination, final Object original, Context context )", "-        return convert( original );", "+        return convert( original, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "729ed77a219196620ca79e0d14bad24c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "05f8f8bd0222ad18fdc6cbeaa798ac06ff40be04", "commitAfterChange": "77024a43a293e7911609d3c3192e773f082688ce", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public void merge(Manifest other, boolean overwriteMain)          throws ManifestException", "signatureAfterChange": "     public void merge(Manifest other, boolean overwriteMain,                       boolean mergeClassPaths)          throws ManifestException", "diff": ["+     */", "+    public void merge(Manifest other, boolean overwriteMain,", "+                      boolean mergeClassPaths)", "+         throws ManifestException {", "-                 mainSection.merge(other.mainSection);", "+                 mainSection.merge(other.mainSection, mergeClassPaths);", "-                     ourSection.merge(otherSection);", "+                     ourSection.merge(otherSection, mergeClassPaths);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cb180b1e0ee755d1e3ef4740aac17f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/JAXPUtils.java", "commitBeforeChange": "7d38166d02b60e2b2c8c5d422cf3f6d522d74d9f", "commitAfterChange": "21660b7678a4317e417e236d2cd36d12ec102434", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static SAXParser newSAXParser() throws BuildException", "signatureAfterChange": "     private static SAXParser newSAXParser(SAXParserFactory factory)          throws BuildException", "diff": ["-    private static SAXParser newSAXParser() throws BuildException {", "+    private static SAXParser newSAXParser(SAXParserFactory factory)", "+         throws BuildException {", "-            return getParserFactory().newSAXParser();", "+            return factory.newSAXParser();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dea2f6abdb0137da436410f9d07cbdd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/RoutingLogger.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public RoutingLogger( final int logLevel,                           final ProjectListenerSupport listenerSupport )", "signatureAfterChange": "     public RoutingLogger( final Logger logger,                           final ProjectListenerSupport listenerSupport )", "diff": ["-    public RoutingLogger( final int logLevel,", "+    public RoutingLogger( final Logger logger,", "-        super( null, logLevel );", "+        m_logger = logger;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c49a4dd7f7bcc06b89220edcdb9c45", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/DisplayErrorCmd.java", "commitBeforeChange": "558d9767bdce2626cd3d5feae2b2daa7d471e440", "commitAfterChange": "aa078695e8f5e69cb5562c6e353c0e8aa87cf2dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public DisplayErrorCmd(String message)", "signatureAfterChange": "     public DisplayErrorCmd(AppContext context, String message)", "diff": ["-    public DisplayErrorCmd(String message) {", "-        this(message, null);", "+    public DisplayErrorCmd(AppContext context, String message) {", "+        this(context, message, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "844a94ef0b01dfa4d31678328c31202f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected static boolean matchPatternStart(String pattern, String str)", "signatureAfterChange": "     protected static boolean matchPatternStart(String pattern, String str,                                                boolean isCaseSensitive)", "diff": ["+     */", "+    protected static boolean matchPatternStart(String pattern, String str,", "+                                               boolean isCaseSensitive) {", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxStart))) {", "+            if (!match(patDir,(String)strDirs.elementAt(strIdxStart), isCaseSensitive)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86d5bff14d47319b195e80b6cfe593b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TokenizedPath.java", "commitBeforeChange": "be9a9286654ae67726b1c9c8512f0ae41c63dc6c", "commitAfterChange": "4ecea70e9b75546d922e43fde8f61550094119ee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public File findFile(File base, final boolean cs)", "signatureAfterChange": "     public File findFile(File base, final boolean cs, FileLister fileLister)", "diff": ["-    public File findFile(File base, final boolean cs) {", "+    public File findFile(File base, final boolean cs, FileLister fileLister) {", "-        return findFile(base, tokens, cs);", "+        return findFile(base, tokens, cs, fileLister);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897270031f025c2802d2d39720ce4336", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/AbstractCommand.java", "commitBeforeChange": "558d9767bdce2626cd3d5feae2b2daa7d471e440", "commitAfterChange": "aa078695e8f5e69cb5562c6e353c0e8aa87cf2dd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractCommand()", "signatureAfterChange": "     protected AbstractCommand(AppContext context)", "diff": ["-    protected AbstractCommand() {", "-    }", "+    protected AbstractCommand(AppContext context) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935f86490cb7096d86154a6595e3473b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java", "commitBeforeChange": "cae2d444f7e933d5d55072f4b546b27ce174a720", "commitAfterChange": "981df1db07d35bc2a71c961631d8e069d7fa0c86", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void createProjectReference(String referenceName, Project model)          throws ExecutionException", "signatureAfterChange": "     public void createProjectReference(String referenceName, Project model,                                         Map initialData)          throws ExecutionException", "diff": ["-    public void createProjectReference(String referenceName, Project model)", "+    public void createProjectReference(String referenceName, Project model, ", "+                                       Map initialData)", "-        frame.createProjectReference(referenceName, model);     ", "+        frame.createProjectReference(referenceName, model, initialData);     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f88f2865f644a097ab8821c5c4f09e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "1a3090627d25c1ede9407003e24d7e76ca48f293", "commitAfterChange": "3aa4a41c64bfb3e23a9e1582757a208901f20c94", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void executeTask( Configuration taskModel, final ExecutionFrame frame )         throws TaskException", "signatureAfterChange": "      private void executeTask( final Configuration model,                               final ExecutionFrame frame )         throws TaskException", "diff": ["-    private void executeTask( Configuration taskModel, final ExecutionFrame frame )", "+    private void executeTask( final Configuration model,", "+                              final ExecutionFrame frame )", "-        taskModel = getAspectManager().preCreate( taskModel );", "+        Configuration taskModel = getAspectManager().preCreate( model );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95d9e2ae7de4b52e2ee561937f9725be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "e64c186c50b3ef61f4fce8cbc9a9e9c169c84e19", "commitAfterChange": "d4be9171f872a91dda1f3fd2dcf9249f6ee2fa88", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 20, "signatureBeforeChange": "            public void sendString(String s)", "signatureAfterChange": "       public void sendString(String s, boolean echoString)", "diff": ["-      public void sendString(String s)", "+       */", "+      public void sendString(String s, boolean echoString)", "-          log(s, Project.MSG_INFO);", "+          if (echoString)", "+              log(s, Project.MSG_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96c458ae19e3591f812d393a2be35176", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/factories/VfsManager.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void addProvider( final String[] urlSchemes,                              final String providerName,                              final boolean ignoreIfNotPresent )         throws FileSystemException", "signatureAfterChange": "     private void addProvider( final TypeFactory factory,                               final String[] urlSchemes,                               final String providerName,                               final boolean ignoreIfNotPresent )         throws FileSystemException", "diff": ["-    public void addProvider( final String[] urlSchemes,", "-                             final String providerName,", "-                             final boolean ignoreIfNotPresent )", "+    private void addProvider( final TypeFactory factory,", "+                              final String[] urlSchemes,", "+                              final String providerName,", "+                              final boolean ignoreIfNotPresent )", "-        if( ignoreIfNotPresent && ! m_typeFactory.canCreate( providerName ) )", "+        if( ignoreIfNotPresent && !factory.canCreate( providerName ) )", "-            provider = (FileSystemProvider)m_typeFactory.create( providerName );", "+            provider = (FileSystemProvider)factory.create( providerName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b7b23a1ab177f428680d28a60fc28f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "596d7e465f62f4783ed3ac41870098d56d018322", "commitAfterChange": "f4fc4080573cc5711f0e2b888fe9d0af6720eaca", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void execSQL(String sql) throws SQLException", "signatureAfterChange": "     protected void execSQL(String sql, PrintStream out) throws SQLException", "diff": ["-    protected void execSQL(String sql) throws SQLException {", "+    protected void execSQL(String sql, PrintStream out) throws SQLException {", "-                printResults();", "+                printResults(out);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac8f9be60c54d0589546005a4fd7422", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "b5072a8c35da484e6b629acbe636b046784593b2", "commitAfterChange": "12c0f4b50aa1c00cc0e7689578f60ccfbe273875", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void configureElement( final Object object,                            final Configuration configuration,                            final TaskContext context )         throws ConfigurationException", "signatureAfterChange": "      public void configureElement( final Object object,                                   final Class clazz,                                   final Configuration configuration,                                   final TaskContext context )         throws ConfigurationException", "diff": ["-                           final Configuration configuration,", "-                           final TaskContext context )", "+", "+    public void configureElement( final Object object,", "+                                  final Class clazz,", "+                                  final Configuration configuration,", "+                                  final TaskContext context )", "-            configureObject( object, configuration, context );", "+            configureObject( object, clazz, configuration, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b40642b2e405011189ab18dcbdb05c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/aspect/DefaultAspectManager.java", "commitBeforeChange": "66bbf8cac07d3e8bbd3b335f184cb381b020de3d", "commitAfterChange": "2c4c47e8e69e34c0bcc943e8b46e6171477d8fe8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void preConfigure()         throws TaskException", "signatureAfterChange": "      public void preConfigure( final Configuration taskModel )         throws TaskException", "diff": ["-    public void preConfigure()", "+    public void preConfigure( final Configuration taskModel )", "-            aspects[ i ].preConfigure();", "+            aspects[ i ].preConfigure( taskModel );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b289aa876319231a00cd5c22f60bbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/ChangeLog.java", "commitBeforeChange": "ea33b6b4691ce6030349ce998517658582ec6c01", "commitAfterChange": "bec70759081189ba786d031c7720429f7da35ef0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void loadUserlist()         throws TaskException", "signatureAfterChange": "     private void loadUserlist( final Properties userList )         throws TaskException", "diff": ["-    private void loadUserlist()", "+    private void loadUserlist( final Properties userList )", "-        if( null != m_users )", "+        if( null != m_usersFile )", "-                m_userList.load( new FileInputStream( m_users ) );", "+                userList.load( new FileInputStream( m_usersFile ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb6350474869e1a3598000ec27ace7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "13b0b1e1483fba654cec28d39ce925cd68f561c0", "commitAfterChange": "ececc5c3e332b97f962b94a475408606433ee0e6", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "     public boolean tryHardToDelete(File f)", "signatureAfterChange": "     public boolean tryHardToDelete(File f, boolean runGC)", "diff": ["+     */", "+    public boolean tryHardToDelete(File f, boolean runGC) {", "-            if (ON_WINDOWS) {", "+            if (runGC) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abed5a90736597572491be693c4607dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected void doConfigure( final Tasklet tasklet, final Configuration task )         throws AntException", "signatureAfterChange": "      protected void doConfigure( final Tasklet tasklet,                                  final Configuration task,                                 final TaskletContext context )         throws AntException", "diff": ["-    protected void doConfigure( final Tasklet tasklet, final Configuration task )", "+    protected void doConfigure( final Tasklet tasklet, ", "+                                final Configuration task,", "+                                final TaskletContext context )", "-        try { m_configurer.configure( tasklet, task, m_context ); }", "+        try { m_configurer.configure( tasklet, task, context ); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b04088c84fa6c1417f1f02b8d8a58576", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "80e8b2977b7343df0b7fb1b6da7fa34dbd7e0b40", "commitAfterChange": "4a1038e342b54a6684ba10135604d94fb8c5b765", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public ZipFile(File f, String encoding) throws IOException", "signatureAfterChange": "     public ZipFile(File f, String encoding,                    boolean mustNotBeEmpty) throws IOException", "diff": ["+     */", "+    public ZipFile(File f, String encoding,", "+                   boolean mustNotBeEmpty) throws IOException {", "-            populateFromCentralDirectory();", "+            populateFromCentralDirectory(mustNotBeEmpty);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b42602ca3246843b7bb41e63ed744e4c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "0c2d03d031ecacd79ea8d77cd88b8428e84a3c7c", "commitAfterChange": "44ecc125fa2df70025e742ba113dd793c0e27580", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message)", "signatureAfterChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message, String testCase)", "diff": ["-                           String message) {", "+                           String message, String testCase) {", "-                        delegate.addVmExit(test, formatter, out, message);", "+                        delegate.addVmExit(test, formatter, out, message, testCase);", "-                delegate.addVmExit(test, f, getDefaultOutput(), message);", "+                delegate.addVmExit(test, f, getDefaultOutput(), message, testCase);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbf657526e225d025b65773db3b83b45", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 35, "signatureBeforeChange": "      public Creator getElementCreator(         Project project, Object parent, String elementName)", "signatureAfterChange": "      public Creator getElementCreator(         Project project, String parentUri, Object parent, String elementName)", "diff": ["-        Project project, Object parent, String elementName) {", "-        NestedCreator nc = getNestedCreator(project, parent, elementName);", "+        Project project, String parentUri, Object parent, String elementName) {", "+        NestedCreator nc = getNestedCreator(", "+            project, parentUri, parent, elementName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a51d91ad5bd8f0cb87684b7ae0216b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/ValidatorErrorHandler.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected ValidatorErrorHandler( final boolean warn )", "signatureAfterChange": "      protected ValidatorErrorHandler( final boolean warn, final TaskContext context )", "diff": ["-    protected ValidatorErrorHandler( final boolean warn )", "+    protected ValidatorErrorHandler( final boolean warn, final TaskContext context )", "+        m_context = context;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6261c60bfa1b5a5fc47bdee694fb82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "80e8b2977b7343df0b7fb1b6da7fa34dbd7e0b40", "commitAfterChange": "4a1038e342b54a6684ba10135604d94fb8c5b765", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void populateFromCentralDirectory()         throws IOException", "signatureAfterChange": "     private void populateFromCentralDirectory(boolean mustNotBeEmpty)         throws IOException", "diff": ["-    private void populateFromCentralDirectory()", "+    private void populateFromCentralDirectory(boolean mustNotBeEmpty)", "-        if (sig != cfhSig) {", "+        if (mustNotBeEmpty && sig != cfhSig) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1d8554822683fad41c0d10a02a504a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/ConverterRegistry.java", "commitBeforeChange": "414575a432489206adb9cbaf9496cc51b320239a", "commitAfterChange": "362616390fb06104b98d1ddcab5e2bc8d998a793", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     void registerConverterInfo( String className, ConverterInfo info );", "signatureAfterChange": "     void registerConverter( String className, String source, String destination );", "diff": ["-    void registerConverterInfo( String className, ConverterInfo info );", "+    void registerConverter( String className, String source, String destination );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e2866369bec8ee5e280d353791665e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "1896560c9e81eb0e371a6c3c6163379cee4535ae", "commitAfterChange": "8741512d8c2e4cad30f0c6e6134d9a793f00d4b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public TarEntry(String name)", "signatureAfterChange": "     public TarEntry(String name, boolean preserveLeadingSlashes)", "diff": ["+     */", "+    public TarEntry(String name, boolean preserveLeadingSlashes) {", "-        name = normalizeFileName(name);", "+        name = normalizeFileName(name, preserveLeadingSlashes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b90decff1e9a376d644d62de5413a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "d74af2e5e460db3525fda70a410b9efd954696fb", "commitAfterChange": "4d3eebbdb62bd31f6577324ebed20ee1a267028a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected final void debug( final String key )", "signatureAfterChange": "      protected final void debug( final String key, final String taskName )", "diff": ["-    protected final void debug( final String key )", "+    protected final void debug( final String key, final String taskName )", "-            final String message = REZ.getString( key );", "+            final String message = REZ.getString( key, taskName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1483b75c17235db116b6da5b9f56f0d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void loadDefinitions(InputStream is)         throws BuildException", "signatureAfterChange": "     private void loadDefinitions(ClassLoader cl, InputStream is)         throws BuildException", "diff": ["-    public void loadDefinitions(InputStream is)", "+    private void loadDefinitions(ClassLoader cl, InputStream is)", "-        evaluateDescriptor(null, processAliases(), is);", "+        evaluateDescriptor(cl, processAliases(), is);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2c470ef23f0e0fca93cab86e8ccb00c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "fca57f83a2f6e6194cf2e223068f7f3bb714a676", "commitAfterChange": "8a21be498479cb838b88fc0f77547e82ed1c5334", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarFile, Hashtable files) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarFile, Hashtable files,                              String publicId) throws BuildException", "diff": ["-    protected void writeJar(String baseName, File jarFile, Hashtable files) throws BuildException {", "+    protected void writeJar(String baseName, File jarFile, Hashtable files, ", "+                            String publicId) throws BuildException {", "-        super.writeJar(baseName, genericJarFile, files);", "+        super.writeJar(baseName, genericJarFile, files, publicId);", "-            buildWeblogicJar(genericJarFile, jarFile);", "+            buildWeblogicJar(genericJarFile, jarFile, publicId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e417d4bd13a6570d5feb471b0edeecb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "a371839efdf087709c3ed7ff84aac7d510c252e6", "commitAfterChange": "167457767564b9b4a38709fa74171aff794f612b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext context )         throws TaskException", "signatureAfterChange": "      protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext taskContext )         throws TaskException", "diff": ["-                                      final TaskContext context )", "+                                      final TaskContext taskContext )", "+            final TaskContextAdapter context = new TaskContextAdapter( taskContext );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed9c6c2e456bb554be7484194db20ed0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected static boolean matchPath(String pattern, String str)", "signatureAfterChange": "     protected static boolean matchPath(String pattern, String str, boolean isCaseSensitive)", "diff": ["+     */", "+    protected static boolean matchPath(String pattern, String str, boolean isCaseSensitive) {", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxStart))) {", "+            if (!match(patDir,(String)strDirs.elementAt(strIdxStart), isCaseSensitive)) {", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxEnd))) {", "+            if (!match(patDir,(String)strDirs.elementAt(strIdxEnd), isCaseSensitive)) {", "-                    if (!match(subPat,subStr)) {", "+                    if (!match(subPat,subStr, isCaseSensitive)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efa1cdb0d3e6e1658b440dac437de697", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "d93d7b09161b9fed366062f9fc095e46e772a69e", "commitAfterChange": "575148a6633379d3f2c61d0cc838050b68929852", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "       public void testDefaultMapper() throws Exception", "signatureAfterChange": "      public void testDefaultMapper(String target) throws Exception", "diff": ["+", "+    public void testDefaultMapper(String target) throws Exception {", "-        expectFileContains(\"testDefaultMapper\",", "+        expectFileContains(target,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80861426585c8e59dbef39eae3caf52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/impl/DefaultExecManager.java", "commitBeforeChange": "0fb624e936ea10bcdbbe1e29e69761a87489fdbb", "commitAfterChange": "6679566ccaa583f1868dbd7b08c17bdf580c0ec5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int execute( final ExecMetaData metaData,                         final InputStream input,                         final OutputStream output,                         final OutputStream error,                         final long timeout )         throws IOException, ExecException", "signatureAfterChange": "     public int execute( final ExecMetaData command,                         final InputStream input,                         final OutputStream output,                         final OutputStream error,                         final long timeout )         throws IOException, ExecException", "diff": ["-    public int execute( final ExecMetaData metaData,", "+    public int execute( final ExecMetaData command,", "+        final ExecMetaData metaData = prepareExecMetaData( command );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f672a739f49eee6c2427ab6424406c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "18e098d81f228e4e36bbbbf98ed41203556a422c", "commitAfterChange": "915d5575a32fce57094e880f4d24e9cd3628b1cd", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private boolean handleLongName(String name,                                    Map<String, String> paxHeaders,                                    String paxHeaderName, byte linkType)         throws IOException", "signatureAfterChange": "     private boolean handleLongName(String name,                                    Map<String, String> paxHeaders,                                    String paxHeaderName, byte linkType, String fieldName)         throws IOException", "diff": ["-                                   String paxHeaderName, byte linkType)", "+                                   String paxHeaderName, byte linkType, String fieldName)", "-                throw new RuntimeException(paxHeaderName + \" '\" + name", "+                throw new RuntimeException(fieldName + \" '\" + name"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f25c0d0259a9b6dafb6e441b5c3ca5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ManifestTest.java", "commitBeforeChange": "fa3f35098e3076f1e6208ce50f02ba319b6b5a03", "commitAfterChange": "bbf5ec8b4491c5579e05094382117ce98205bc96", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private Manifest getManifest() throws IOException, ManifestException", "signatureAfterChange": "     private Manifest getManifest(String filename) throws IOException, ManifestException", "diff": ["-    private Manifest getManifest() throws IOException, ManifestException {", "-        FileReader r = new FileReader(\"src/etc/testcases/taskdefs/mftest.mf\");", "+    private Manifest getManifest(String filename) throws IOException, ManifestException {", "+        FileReader r = new FileReader(filename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fde4af9f7221d004198524b30cab2594", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "126daf8b31f6c01d1c6891581195db9956142970", "commitAfterChange": "a898d14776143b295b706a5e38a2f979e753356d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static int launch(JUnitTest t, boolean haltError,                               boolean stackfilter, boolean haltFail,                               boolean showOut, Properties props)", "signatureAfterChange": "     private static int launch(JUnitTest t, boolean haltError,                               boolean stackfilter, boolean haltFail,                               boolean showOut, boolean logTestListenerEvents,                               Properties props)", "diff": ["-                              boolean showOut, Properties props) {", "+                              boolean showOut, boolean logTestListenerEvents,", "+                              Properties props) {", "-            new JUnitTestRunner(t, haltError, stackfilter, haltFail, showOut);", "+            new JUnitTestRunner(t, haltError, stackfilter, haltFail, showOut,", "+                                logTestListenerEvents);"]}]}