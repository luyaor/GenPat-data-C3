{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bc542adeed53eeb01b285e51d81c866", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a5c67a7a01d8e91c47d6fe14495d04", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void testLogfilePlacement()", "signatureAfterChange": "      @Test     public void testLogfilePlacement()", "diff": ["+    @Test", "-            getProject().resolveFile(\"test1.log\"),", "-            getProject().resolveFile(\"test2.log\"),", "-            getProject().resolveFile(\"ant/test3.log\"),", "-            getProject().resolveFile(\"ant/test4.log\")", "+            buildRule.getProject().resolveFile(\"test1.log\"),", "+            buildRule.getProject().resolveFile(\"test2.log\"),", "+            buildRule.getProject().resolveFile(\"ant/test3.log\"),", "+            buildRule.getProject().resolveFile(\"ant/test4.log\")", "-        executeTarget(\"testLogfilePlacement\");", "+        buildRule.executeTarget(\"testLogfilePlacement\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "431129ed53b3e29affc8811e137a5327", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testTranscoding() throws IOException", "signatureAfterChange": "      @Test     public void testTranscoding() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testTranscoding\");", "-        File f1 = getProject().resolveFile(\"copy/expected/utf-8\");", "-        File f2 = new File(getOutputDir(), \"copytest1.tmp\");", "-        assertTrue(FILE_UTILS.contentEquals(f1, f2));", "+        buildRule.executeTarget(\"testTranscoding\");", "+        File f1 = buildRule.getProject().resolveFile(\"copy/expected/utf-8\");", "+        File f2 = new File(buildRule.getProject().getProperty(\"output\"), \"copytest1.tmp\");", "+        assertEquals(FileUtilities.getFileContents(f1), FileUtilities.getFileContents(f2));"]}]}