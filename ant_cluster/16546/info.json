{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaa5665508de6a24e7737fbc68ca19e8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ceec0048a0d5564decacb420878ab5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToClassConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return Class.forName( (String)original ); }", "+        try { return Class.forName( (String)object ); }", "-            throw new ConverterException( \"Error converting to class type\", e );", "+            final String message = REZ.getString( \"convert.bad-class.error\", object );", "+            throw new ConverterException( message, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bafd3711993cf9eb5a9e96db58b04e46", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToFileConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-            return taskContext.resolveFile( (String)original );", "+            return taskContext.resolveFile( (String)object );", "-            throw new ConverterException( \"Error resolving file during conversion\", te );", "+            final String message = REZ.getString( \"convert.bad-file.error\", object );", "+            throw new ConverterException( message, te );"]}]}