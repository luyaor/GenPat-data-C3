{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64cf6d5bf64693d77883c05b8dc6dac8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004ab162227152379a2881902f008a64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws BuildException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Java java = ( Java )( getJspc().getProject() ).createTask( \"java\" );", "+            Java java = (Java)( getJspc().getProject() ).createTask( \"java\" );", "-                java.createArg().setValue( args[i] );", "+                java.createArg().setValue( args[ i ] );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error running jsp compiler: \",", "-                    ex );", "+                throw new TaskException( \"Error running jsp compiler: \",", "+                                         ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02209a72300f749cb7707fcf5ee603ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovReport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "          protected void createEnhancedXMLReport()             throws BuildException", "signatureAfterChange": "          protected void createEnhancedXMLReport()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( \"Need a 'classpath' element.\" );", "+                throw new TaskException( \"Need a 'classpath' element.\" );", "-                throw new BuildException( \"Coverage path is invalid. It does not contain any existing path.\" );", "+                throw new TaskException( \"Coverage path is invalid. It does not contain any existing path.\" );", "-                throw new BuildException( \"Error while performing enhanced XML report from file \" + tofile, e );", "+                throw new TaskException( \"Error while performing enhanced XML report from file \" + tofile, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06e5f816eccb5ed5086cf674d83fdf97", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No expression to match.\" );", "+            throw new TaskException( \"No expression to match.\" );", "-            throw new BuildException( \"Nothing to replace expression with.\" );", "+            throw new TaskException( \"Nothing to replace expression with.\" );", "-            throw new BuildException( \"You cannot supply the 'file' attribute and filesets at the same time.\" );", "+            throw new TaskException( \"You cannot supply the 'file' attribute and filesets at the same time.\" );", "-                    Project.MSG_ERR );", "+                     Project.MSG_ERR );", "-                Project.MSG_ERR );", "+                 Project.MSG_ERR );", "-            FileSet fs = ( FileSet )( filesets.elementAt( i ) );", "+            FileSet fs = (FileSet)( filesets.elementAt( i ) );", "-                File f = new File( files[j] );", "+                File f = new File( files[ j ] );", "-                            Project.MSG_ERR );", "+                             Project.MSG_ERR );", "-                        Project.MSG_ERR );", "+                         Project.MSG_ERR );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093adad0304af339660b0d4ca65059e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0de451a7681b9cb764d7e310bed6c6c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void convert( String srcName, String destName )         throws BuildException", "signatureAfterChange": "     private void convert( String srcName, String destName )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"file \" + srcFile", "-                 + \" would overwrite its self\" );", "+            throw new TaskException( \"file \" + srcFile", "+                                     + \" would overwrite its self\" );", "-                throw new BuildException( \"cannot create parent directory \"", "-                     + parentName );", "+                throw new TaskException( \"cannot create parent directory \"", "+                                         + parentName );", "-             = new sun.tools.native2ascii.Main();", "+            = new sun.tools.native2ascii.Main();", "-            throw new BuildException( \"conversion failed\" );", "+            throw new TaskException( \"conversion failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "115e1f98b1022a4131948adaf67fb368", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws BuildException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Java java = ( Java )( getJspc().getProject() ).createTask( \"java\" );", "+            Java java = (Java)( getJspc().getProject() ).createTask( \"java\" );", "-                java.createArg().setValue( args[i] );", "+                java.createArg().setValue( args[ i ] );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error running jsp compiler: \",", "-                    ex );", "+                throw new TaskException( \"Error running jsp compiler: \",", "+                                         ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1434b5e2dc5006a910a9e829ebd8b3b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Script.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            for( Enumeration e = beans.keys(); e.hasMoreElements();  )", "+            for( Enumeration e = beans.keys(); e.hasMoreElements(); )", "-                String key = ( String )e.nextElement();", "+                String key = (String)e.nextElement();", "-                if( te instanceof BuildException )", "+                if( te instanceof TaskException )", "-                    throw ( BuildException )te;", "+                    throw (TaskException)te;", "-            throw new BuildException( \"Error\", t );", "+            throw new TaskException( \"Error\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1674b8e00eabe6160220bdc7cbd2f568", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void writeFile()         throws BuildException", "signatureAfterChange": "      private void writeFile()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{", "-                OutputStream.class,", "-                String.class}", "-                 );", "+                                            new Class[]{", "+                                                OutputStream.class,", "+                                                String.class}", "+                );", "-            throw new BuildException( \"Error\", t );", "+            throw new TaskException( \"Error\", t );", "-            throw new BuildException( \"Error\", iae );", "+            throw new TaskException( \"Error\", iae );", "-            throw new BuildException( \"Error\", ioe );", "+            throw new TaskException( \"Error\", ioe );", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bea83bd4de81a302392dc191e751a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Invalid home directory. Must point to JProbe home directory\" );", "+            throw new TaskException( \"Invalid home directory. Must point to JProbe home directory\" );", "-            throw new BuildException( \"Cannot find Coverage directory: \" + home );", "+            throw new TaskException( \"Cannot find Coverage directory: \" + home );", "-            throw new BuildException( \"Snapshot directory does not exists :\" + snapshotDir );", "+            throw new TaskException( \"Snapshot directory does not exists :\" + snapshotDir );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1942b573c6419f4690b090941a73d8af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static CompilerAdapter resolveClassName( String className )         throws BuildException", "signatureAfterChange": "     private static CompilerAdapter resolveClassName( String className )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            return ( CompilerAdapter )o;", "+            return (CompilerAdapter)o;", "-            throw new BuildException( className + \" can\\'t be found.\", cnfe );", "+            throw new TaskException( className + \" can\\'t be found.\", cnfe );", "-            throw new BuildException( className + \" isn\\'t the classname of \"", "-                 + \"a compiler adapter.\", cce );", "+            throw new TaskException( className + \" isn\\'t the classname of \"", "+                                     + \"a compiler adapter.\", cce );", "-            throw new BuildException( className + \" caused an interesting \"", "-                 + \"exception.\", t );", "+            throw new TaskException( className + \" caused an interesting \"", "+                                     + \"exception.\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af6c2c84216bb9ae2e54381381466ca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Counter.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No counter specified to retrieve\" );", "+            throw new TaskException( \"No counter specified to retrieve\" );", "-            throw new BuildException( \"Cannot both set the value of the property and retrieve the value of the property.\" );", "+            throw new TaskException( \"Cannot both set the value of the property and retrieve the value of the property.\" );", "-                            throw new BuildException( \"Perforce error. Could not retrieve counter value.\" );", "+                            throw new TaskException( \"Perforce error. Could not retrieve counter value.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0a96d57348c2f9802fcb2bf709f526", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void executeEjbc( SAXParser saxParser )         throws BuildException", "signatureAfterChange": "     private void executeEjbc( SAXParser saxParser )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            iasdescriptor,", "-            dest,", "-            getClasspath().toString(),", "-            saxParser );", "+                                            iasdescriptor,", "+                                            dest,", "+                                            getClasspath().toString(),", "+                                            saxParser );", "-                 + \"descriptor file: \" + e.getMessage();", "-            throw new BuildException( msg, e );", "+                + \"descriptor file: \" + e.getMessage();", "+            throw new TaskException( msg, e );", "-                 + \"descriptor file: \" + e.getMessage();", "-            throw new BuildException( msg, e );", "+                + \"descriptor file: \" + e.getMessage();", "+            throw new TaskException( msg, e );", "-                 + \"utility: \" + e.getMessage();", "-            throw new BuildException( msg, e );", "+                + \"utility: \" + e.getMessage();", "+            throw new TaskException( msg, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "249e9115a7977b36c70d9239992fc134", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateSetup()         throws BuildException", "signatureAfterChange": "     private void validateSetup()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must specify a path to convert\" );", "+            throw new TaskException( \"You must specify a path to convert\" );", "-            throw new BuildException( \"You must specify a property\" );", "+            throw new TaskException( \"You must specify a property\" );", "-            throw new BuildException( \"You must specify at least one of targetOS, dirSep, or pathSep\" );", "+            throw new TaskException( \"You must specify at least one of targetOS, dirSep, or pathSep\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1397bf3d41241a379924e6d3835abf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'tofile' attribute must be set.\" );", "+            throw new TaskException( \"'tofile' attribute must be set.\" );", "-            throw new BuildException( \"Invalid home directory. Must point to JProbe home directory\" );", "+            throw new TaskException( \"Invalid home directory. Must point to JProbe home directory\" );", "-            throw new BuildException( \"Cannot find Coverage directory: \" + home );", "+            throw new TaskException( \"Cannot find Coverage directory: \" + home );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348e2e0bf8b3c262bd4972fab71c59a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static RmicAdapter resolveClassName( String className )         throws BuildException", "signatureAfterChange": "     private static RmicAdapter resolveClassName( String className )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            return ( RmicAdapter )o;", "+            return (RmicAdapter)o;", "-            throw new BuildException( className + \" can\\'t be found.\", cnfe );", "+            throw new TaskException( className + \" can\\'t be found.\", cnfe );", "-            throw new BuildException( className + \" isn\\'t the classname of \"", "-                 + \"a rmic adapter.\", cce );", "+            throw new TaskException( className + \" isn\\'t the classname of \"", "+                                     + \"a rmic adapter.\", cce );", "-            throw new BuildException( className + \" caused an interesting \"", "-                 + \"exception.\", t );", "+            throw new TaskException( className + \" caused an interesting \"", "+                                     + \"exception.\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37cef2c02ef5a8dfbde97dee135685e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Javac13.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{( new String[]{} ).getClass()} );", "-            int result = ( ( Integer )compile.invoke", "+                                          new Class[]{( new String[]{} ).getClass()} );", "+            int result = ( (Integer)compile.invoke", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting modern compiler\", ex );", "+                throw new TaskException( \"Error starting modern compiler\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39c0d8bbb07033143841a68cdf4bc59d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"destination directory \" + destinationDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"destination directory \" + destinationDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"src directory \" + sourceDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"src directory \" + sourceDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"package attribute must be present.\" );", "+            throw new TaskException( \"package attribute must be present.\" );", "-        Java helperTask = ( Java )project.createTask( \"java\" );", "+        Java helperTask = (Java)project.createTask( \"java\" );", "-        String[] args = new String[12];", "+        String[] args = new String[ 12 ];", "-        args[j++] = \"-d\";", "-        args[j++] = destinationDirectory.getAbsolutePath().trim();", "-        args[j++] = \"-docroot\";", "-        args[j++] = sourceDirectory.getAbsolutePath().trim();", "-        args[j++] = \"-keepgenerated\";//TODO: Parameterise ??", "+        args[ j++ ] = \"-d\";", "+        args[ j++ ] = destinationDirectory.getAbsolutePath().trim();", "+        args[ j++ ] = \"-docroot\";", "+        args[ j++ ] = sourceDirectory.getAbsolutePath().trim();", "+        args[ j++ ] = \"-keepgenerated\";//TODO: Parameterise ??", "-        args[j++] = \"-compilerclass\";", "-        args[j++] = \"sun.tools.javac.Main\";", "+        args[ j++ ] = \"-compilerclass\";", "+        args[ j++ ] = \"sun.tools.javac.Main\";", "-        args[j++] = \"-classpath\";", "-        args[j++] = compileClasspath.toString();", "+        args[ j++ ] = \"-classpath\";", "+        args[ j++ ] = compileClasspath.toString();", "-            jspFile = new File( ( String )filesToDo.elementAt( i ) );", "-            args[j] = \"-package\";", "+            jspFile = new File( (String)filesToDo.elementAt( i ) );", "+            args[ j ] = \"-package\";", "-                args[j + 1] = destinationPackage + \".\" + \"_\" + parents;", "+                args[ j + 1 ] = destinationPackage + \".\" + \"_\" + parents;", "-                args[j + 1] = destinationPackage;", "+                args[ j + 1 ] = destinationPackage;", "-            args[j + 2] = sourceDirectory + File.separator + ( String )filesToDo.elementAt( i );", "+            args[ j + 2 ] = sourceDirectory + File.separator + (String)filesToDo.elementAt( i );", "-                arg += \" \" + args[x];", "+                arg += \" \" + args[ x ];", "-                log( files[i] + \" failed to compile\", Project.MSG_WARN );", "+                log( files[ i ] + \" failed to compile\", Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c3f621b392bc3d97943d118bfff3d05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void checkConfiguration( String descriptorFileName,                                        SAXParser saxParser )         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration( String descriptorFileName,                                        SAXParser saxParser )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                 + \" descriptor should be prepended with the JAR \"", "-                 + \"name or it should be specified using the \"", "-                 + \"attribute \\\"basejarname\\\" in the \\\"ejbjar\\\" task.\";", "-            throw new BuildException( msg );", "+                + \" descriptor should be prepended with the JAR \"", "+                + \"name or it should be specified using the \"", "+                + \"attribute \\\"basejarname\\\" in the \\\"ejbjar\\\" task.\";", "+            throw new TaskException( msg );", "-            getIasDescriptorName() );", "+                                       getIasDescriptorName() );", "-                 + iasDescriptor + \") was not found.\";", "-            throw new BuildException( msg );", "+                + iasDescriptor + \") was not found.\";", "+            throw new TaskException( msg );", "-                 + \"directory (it was set to \" + iashome + \").\";", "-            throw new BuildException( msg );", "+                + \"directory (it was set to \" + iashome + \").\";", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "408753414ce3dc001e8d5490e840028c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void validate()", "signatureAfterChange": "     public void validate()", "diff": ["-            throw new BuildException( \"Attribute \\\"from\\\" is required.\" );", "+            throw new TaskException( \"Attribute \\\"from\\\" is required.\" );", "-            throw new BuildException( \"Attribute \\\"toList\\\", \\\"ccList\\\" or \\\"bccList\\\" is required.\" );", "+            throw new TaskException( \"Attribute \\\"toList\\\", \\\"ccList\\\" or \\\"bccList\\\" is required.\" );", "-            throw new BuildException( \"FileSet, \\\"message\\\", or \\\"messageFile\\\" is required.\" );", "+            throw new TaskException( \"FileSet, \\\"message\\\", or \\\"messageFile\\\" is required.\" );", "-            throw new BuildException( \"Only one of \\\"message\\\" or \\\"messageFile\\\" may be specified.\" );", "+            throw new TaskException( \"Only one of \\\"message\\\" or \\\"messageFile\\\" may be specified.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f84327c969c452ab0f86530c0d727a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Counter.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No counter specified to retrieve\" );", "+            throw new TaskException( \"No counter specified to retrieve\" );", "-            throw new BuildException( \"Cannot both set the value of the property and retrieve the value of the property.\" );", "+            throw new TaskException( \"Cannot both set the value of the property and retrieve the value of the property.\" );", "-                            throw new BuildException( \"Perforce error. Could not retrieve counter value.\" );", "+                            throw new TaskException( \"Perforce error. Could not retrieve counter value.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d0f93eed1a4164eae474f667fee560", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void checkConfiguration()         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"basedir attribute must be set!\" );", "+            throw new TaskException( \"basedir attribute must be set!\" );", "-            throw new BuildException( \"basedir does not exist!\" );", "+            throw new TaskException( \"basedir does not exist!\" );", "-            throw new BuildException( \"cabfile attribute must be set!\" );", "+            throw new TaskException( \"cabfile attribute must be set!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b0f28456da7a8f52b1cc5e253bf511", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void checkConfiguration( String descriptorFileName,                                        SAXParser saxParser )         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration( String descriptorFileName,                                        SAXParser saxParser )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                 + \" descriptor should be prepended with the JAR \"", "-                 + \"name or it should be specified using the \"", "-                 + \"attribute \\\"basejarname\\\" in the \\\"ejbjar\\\" task.\";", "-            throw new BuildException( msg );", "+                + \" descriptor should be prepended with the JAR \"", "+                + \"name or it should be specified using the \"", "+                + \"attribute \\\"basejarname\\\" in the \\\"ejbjar\\\" task.\";", "+            throw new TaskException( msg );", "-            getIasDescriptorName() );", "+                                       getIasDescriptorName() );", "-                 + iasDescriptor + \") was not found.\";", "-            throw new BuildException( msg );", "+                + iasDescriptor + \") was not found.\";", "+            throw new TaskException( msg );", "-                 + \"directory (it was set to \" + iashome + \").\";", "-            throw new BuildException( msg );", "+                + \"directory (it was set to \" + iashome + \").\";", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49679e460ecd152a8ce29051438e069d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void executeWLS6()", "signatureAfterChange": "      private void executeWLS6()", "diff": ["-            throw new BuildException( \"BEA home \" + beaHome.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"BEA home \" + beaHome.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"Server config file \" + configFile + \" not found.\" );", "+            throw new TaskException( \"Server config file \" + configFile + \" not found.\" );", "-            throw new BuildException( \"You must supply a management password to start the server\" );", "+            throw new TaskException( \"You must supply a management password to start the server\" );", "-        Java weblogicServer = ( Java )project.createTask( \"java\" );", "+        Java weblogicServer = (Java)project.createTask( \"java\" );", "-            throw new BuildException( \"Execution of weblogic server failed\" );", "+            throw new TaskException( \"Execution of weblogic server failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e19bcef717d5f20ae21728b8951cba5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Mkdir.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"dir attribute is required\" );", "+            throw new TaskException( \"dir attribute is required\" );", "-            throw new BuildException( \"Unable to create directory as a file already exists with that name: \" + dir.getAbsolutePath() );", "+            throw new TaskException( \"Unable to create directory as a file already exists with that name: \" + dir.getAbsolutePath() );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f25736fc523e4cd42bcff3ef3a7541b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void doOneJar( File jarSource, File jarTarget )         throws BuildException", "signatureAfterChange": "      private void doOneJar( File jarSource, File jarTarget )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"The signjar task is only available on JDK versions 1.2 or greater\" );", "+            throw new TaskException( \"The signjar task is only available on JDK versions 1.2 or greater\" );", "-            throw new BuildException( \"alias attribute must be set\" );", "+            throw new TaskException( \"alias attribute must be set\" );", "-            throw new BuildException( \"storepass attribute must be set\" );", "+            throw new TaskException( \"storepass attribute must be set\" );", "-        final ExecTask cmd = ( ExecTask )project.createTask( \"exec\" );", "+        final ExecTask cmd = (ExecTask)project.createTask( \"exec\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "505df8037079e8a46b6da3751f17eed4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public int executeInVM( CommandlineJava commandline )         throws BuildException", "signatureAfterChange": "     public int executeInVM( CommandlineJava commandline )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5429348806e2db1bec141b62936c1b9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Javac13.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{( new String[]{} ).getClass()} );", "-            int result = ( ( Integer )compile.invoke", "+                                          new Class[]{( new String[]{} ).getClass()} );", "+            int result = ( (Integer)compile.invoke", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting modern compiler\", ex );", "+                throw new TaskException( \"Error starting modern compiler\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57abba0195da28fda549fb9c4581d75b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jlink/JlinkTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"outfile attribute is required! Please set.\" );", "+            throw new TaskException( \"outfile attribute is required! Please set.\" );", "-            throw new BuildException( \"addfiles or mergefiles required! Please set.\" );", "+            throw new TaskException( \"addfiles or mergefiles required! Please set.\" );", "-            throw new BuildException( \"Error\", ex);", "+            throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c095984a9ffad1f370ce4f16c7f472e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Unpack.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void validate()         throws BuildException", "signatureAfterChange": "      private void validate()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No Src for gunzip specified\" );", "+            throw new TaskException( \"No Src for gunzip specified\" );", "-            throw new BuildException( \"Src doesn't exist\" );", "+            throw new TaskException( \"Src doesn't exist\" );", "-            throw new BuildException( \"Cannot expand a directory\" );", "+            throw new TaskException( \"Cannot expand a directory\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca8523d4fbcdb1c130eca74c3332109", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/DDCreator.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"descriptors directory \" + descriptorDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"descriptors directory \" + descriptorDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"dest directory \" + generatedFilesDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"dest directory \" + generatedFilesDirectory.getPath() +", "+                                     \" is not valid\" );", "-            args += \" \" + files[i];", "+            args += \" \" + files[ i ];", "-        Java ddCreatorTask = ( Java )project.createTask( \"java\" );", "+        Java ddCreatorTask = (Java)project.createTask( \"java\" );", "-            throw new BuildException( \"Execution of ddcreator helper failed\" );", "+            throw new TaskException( \"Execution of ddcreator helper failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef9a286a3cc052a022cddad3fd64f21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a2b89d9c431f3b97cb91ac56eda792", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void checkConfiguration()         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"no executable specified\" );", "+            throw new TaskException( \"no executable specified\" );", "-            throw new BuildException( \"The directory you specified does not exist\" );", "+            throw new TaskException( \"The directory you specified does not exist\" );", "-            throw new BuildException( \"The directory you specified is not a directory\" );", "+            throw new TaskException( \"The directory you specified is not a directory\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630037232e098da60d71a5a57b534ca4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"srcdir attribute must be set!\" );", "+                throw new TaskException( \"srcdir attribute must be set!\" );", "-                throw new BuildException( \"The cache, if specified, must point to a directory\" );", "+                throw new TaskException( \"The cache, if specified, must point to a directory\" );", "-                    \" classes:\", Project.MSG_DEBUG );", "-                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements();  )", "+                     \" classes:\", Project.MSG_DEBUG );", "+                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                    Hashtable affectedClasses = ( Hashtable )affectedClassMap.get( className );", "-                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements();  )", "+                    Hashtable affectedClasses = (Hashtable)affectedClassMap.get( className );", "+                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements(); )", "-                        String affectedClass = ( String )e2.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )affectedClasses.get( affectedClass );", "+                        String affectedClass = (String)e2.nextElement();", "+                        ClassFileInfo info = (ClassFileInfo)affectedClasses.get( affectedClass );", "-                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                        String className = ( String )e.nextElement();", "+                        String className = (String)e.nextElement();", "-                        Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                        Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                            File classpathFile = ( File )e2.nextElement();", "+                            File classpathFile = (File)e2.nextElement();", "-                File srcDir = ( File )resolveFile( srcPathList[i] );", "+                File srcDir = (File)resolveFile( srcPathList[ i ] );", "-                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )classFileInfoMap.get( className );", "+                        ClassFileInfo info = (ClassFileInfo)classFileInfoMap.get( className );", "-                            Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                            Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                                File classpathFile = ( File )e2.nextElement();", "+                                File classpathFile = (File)e2.nextElement();", "-                                        \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "+                                         \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7072eed70dd98eb2b145279c62f85d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/DDCreator.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"descriptors directory \" + descriptorDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"descriptors directory \" + descriptorDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"dest directory \" + generatedFilesDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"dest directory \" + generatedFilesDirectory.getPath() +", "+                                     \" is not valid\" );", "-            args += \" \" + files[i];", "+            args += \" \" + files[ i ];", "-        Java ddCreatorTask = ( Java )project.createTask( \"java\" );", "+        Java ddCreatorTask = (Java)project.createTask( \"java\" );", "-            throw new BuildException( \"Execution of ddcreator helper failed\" );", "+            throw new TaskException( \"Execution of ddcreator helper failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e77983c0988aa2eba37976a1af77b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/Main.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void runBuild( ClassLoader coreLoader )         throws BuildException", "signatureAfterChange": "     private void runBuild( ClassLoader coreLoader )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                    throw new BuildException( noParserMessage, ncdfe );", "+                    throw new TaskException( noParserMessage, ncdfe );", "-                    throw new BuildException( noParserMessage, cnfe );", "+                    throw new TaskException( noParserMessage, cnfe );", "-                    throw new BuildException( noParserMessage, npe );", "+                    throw new TaskException( noParserMessage, npe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8179430a7fedfb458df7cb9fcece6f06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Rpm.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                Project.MSG_WARN );", "+                                                  Project.MSG_WARN );", "-                    throw new BuildException( \"Error\", e );", "+                    throw new TaskException( \"Error\", e );", "-                    throw new BuildException( \"Error\", e );", "+                    throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87753d1547c800cf5d471fe65e033cfe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public int executeInVM( CommandlineJava commandline )         throws BuildException", "signatureAfterChange": "     public int executeInVM( CommandlineJava commandline )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b47e61604b42732ef51eac7b13c258", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'metamatahome' must point to Metamata home directory.\" );", "+            throw new TaskException( \"'metamatahome' must point to Metamata home directory.\" );", "-            if( !jars[i].exists() )", "+            if( !jars[ i ].exists() )", "-                throw new BuildException( jars[i] + \" does not exist. Check your metamata installation.\" );", "+                throw new TaskException( jars[ i ] + \" does not exist. Check your metamata installation.\" );", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a3b0a63c82e9b1a1f71dc999cdcd0b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void validate()", "signatureAfterChange": "     public void validate()", "diff": ["-            throw new BuildException( \"Attribute \\\"from\\\" is required.\" );", "+            throw new TaskException( \"Attribute \\\"from\\\" is required.\" );", "-            throw new BuildException( \"Attribute \\\"toList\\\", \\\"ccList\\\" or \\\"bccList\\\" is required.\" );", "+            throw new TaskException( \"Attribute \\\"toList\\\", \\\"ccList\\\" or \\\"bccList\\\" is required.\" );", "-            throw new BuildException( \"FileSet, \\\"message\\\", or \\\"messageFile\\\" is required.\" );", "+            throw new TaskException( \"FileSet, \\\"message\\\", or \\\"messageFile\\\" is required.\" );", "-            throw new BuildException( \"Only one of \\\"message\\\" or \\\"messageFile\\\" may be specified.\" );", "+            throw new TaskException( \"Only one of \\\"message\\\" or \\\"messageFile\\\" may be specified.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aeccbb13f99b07e85a49ea99bc5e5f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/StyleBook.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"TargetDirectory attribute not set.\" );", "+            throw new TaskException( \"TargetDirectory attribute not set.\" );", "-            throw new BuildException( \"SkinDirectory attribute not set.\" );", "+            throw new TaskException( \"SkinDirectory attribute not set.\" );", "-            throw new BuildException( \"book attribute not set.\" );", "+            throw new TaskException( \"book attribute not set.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b0f129b5c7b64a60d3339ecfb7f1c49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Rpm.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                Project.MSG_WARN );", "+                                                  Project.MSG_WARN );", "-                    throw new BuildException( \"Error\", e );", "+                    throw new TaskException( \"Error\", e );", "-                    throw new BuildException( \"Error\", e );", "+                    throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b63019c28e7a369b7d2a30141acccf7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"base attribute must be set!\" );", "+            throw new TaskException( \"base attribute must be set!\" );", "-            throw new BuildException( \"base does not exist!\" );", "+            throw new TaskException( \"base does not exist!\" );", "-                new String[]{classname.replace( '.', File.separatorChar ) + \".class\"},", "-                adapter.getMapper() );", "+                     new String[]{classname.replace( '.', File.separatorChar ) + \".class\"},", "+                     adapter.getMapper() );", "-                \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir,", "-                Project.MSG_INFO );", "+                 \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir,", "+                 Project.MSG_INFO );", "-                throw new BuildException( FAIL_MSG );", "+                throw new TaskException( FAIL_MSG );", "-                    Project.MSG_WARN );", "+                     Project.MSG_WARN );", "-                        ( String )compileList.elementAt( j ),", "-                        adapter );", "+                                       (String)compileList.elementAt( j ),", "+                                       adapter );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9042a5317104dc33daecd1f05a08435d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private int run( String[] command )         throws BuildException", "signatureAfterChange": "     private int run( String[] command )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( dir.getAbsolutePath() + \" is not a valid directory\");", "+                throw new TaskException( dir.getAbsolutePath() + \" is not a valid directory\" );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", io );", "+            throw new TaskException( \"Error\", io );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9138d06e68afbdaae9f2860c4d6558f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jlink/JlinkTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"outfile attribute is required! Please set.\" );", "+            throw new TaskException( \"outfile attribute is required! Please set.\" );", "-            throw new BuildException( \"addfiles or mergefiles required! Please set.\" );", "+            throw new TaskException( \"addfiles or mergefiles required! Please set.\" );", "-            throw new BuildException( \"Error\", ex);", "+            throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94c00180ec57277ef4edf89c069388d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void doOneJar( File jarSource, File jarTarget )         throws BuildException", "signatureAfterChange": "      private void doOneJar( File jarSource, File jarTarget )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"The signjar task is only available on JDK versions 1.2 or greater\" );", "+            throw new TaskException( \"The signjar task is only available on JDK versions 1.2 or greater\" );", "-            throw new BuildException( \"alias attribute must be set\" );", "+            throw new TaskException( \"alias attribute must be set\" );", "-            throw new BuildException( \"storepass attribute must be set\" );", "+            throw new TaskException( \"storepass attribute must be set\" );", "-        final ExecTask cmd = ( ExecTask )project.createTask( \"exec\" );", "+        final ExecTask cmd = (ExecTask)project.createTask( \"exec\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961e085449257ae7682e705d27413f1f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void checkConfiguration()         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"basedir attribute must be set!\" );", "+            throw new TaskException( \"basedir attribute must be set!\" );", "-            throw new BuildException( \"basedir does not exist!\" );", "+            throw new TaskException( \"basedir does not exist!\" );", "-            throw new BuildException( \"cabfile attribute must be set!\" );", "+            throw new TaskException( \"cabfile attribute must be set!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2682cadf075616aea52d51a0c0ee57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No expression to match.\" );", "+            throw new TaskException( \"No expression to match.\" );", "-            throw new BuildException( \"Nothing to replace expression with.\" );", "+            throw new TaskException( \"Nothing to replace expression with.\" );", "-            throw new BuildException( \"You cannot supply the 'file' attribute and filesets at the same time.\" );", "+            throw new TaskException( \"You cannot supply the 'file' attribute and filesets at the same time.\" );", "-                    Project.MSG_ERR );", "+                     Project.MSG_ERR );", "-                Project.MSG_ERR );", "+                 Project.MSG_ERR );", "-            FileSet fs = ( FileSet )( filesets.elementAt( i ) );", "+            FileSet fs = (FileSet)( filesets.elementAt( i ) );", "-                File f = new File( files[j] );", "+                File f = new File( files[ j ] );", "-                            Project.MSG_ERR );", "+                             Project.MSG_ERR );", "-                        Project.MSG_ERR );", "+                         Project.MSG_ERR );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ecc21f94b99882b87b838f879ef166c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static CompilerAdapter resolveClassName( String className )         throws BuildException", "signatureAfterChange": "     private static CompilerAdapter resolveClassName( String className )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            return ( CompilerAdapter )o;", "+            return (CompilerAdapter)o;", "-            throw new BuildException( className + \" can\\'t be found.\", cnfe );", "+            throw new TaskException( className + \" can\\'t be found.\", cnfe );", "-            throw new BuildException( className + \" isn\\'t the classname of \"", "-                 + \"a compiler adapter.\", cce );", "+            throw new TaskException( className + \" isn\\'t the classname of \"", "+                                     + \"a compiler adapter.\", cce );", "-            throw new BuildException( className + \" caused an interesting \"", "-                 + \"exception.\", t );", "+            throw new TaskException( className + \" caused an interesting \"", "+                                     + \"exception.\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1505bff34ff53db5646b09b123f5524", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void writeFile()         throws BuildException", "signatureAfterChange": "      private void writeFile()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{", "-                OutputStream.class,", "-                String.class}", "-                 );", "+                                            new Class[]{", "+                                                OutputStream.class,", "+                                                String.class}", "+                );", "-            throw new BuildException( \"Error\", t );", "+            throw new TaskException( \"Error\", t );", "-            throw new BuildException( \"Error\", iae );", "+            throw new TaskException( \"Error\", iae );", "-            throw new BuildException( \"Error\", ioe );", "+            throw new TaskException( \"Error\", ioe );", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a65a6c714b43365d4de0a46657fa3938", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovReport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "          protected void createEnhancedXMLReport()             throws BuildException", "signatureAfterChange": "          protected void createEnhancedXMLReport()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( \"Need a 'classpath' element.\" );", "+                throw new TaskException( \"Need a 'classpath' element.\" );", "-                throw new BuildException( \"Coverage path is invalid. It does not contain any existing path.\" );", "+                throw new TaskException( \"Coverage path is invalid. It does not contain any existing path.\" );", "-                throw new BuildException( \"Error while performing enhanced XML report from file \" + tofile, e );", "+                throw new TaskException( \"Error while performing enhanced XML report from file \" + tofile, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab8a530e58a8fb9db82c255619c8bbdf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"base attribute must be set!\" );", "+            throw new TaskException( \"base attribute must be set!\" );", "-            throw new BuildException( \"base does not exist!\" );", "+            throw new TaskException( \"base does not exist!\" );", "-                new String[]{classname.replace( '.', File.separatorChar ) + \".class\"},", "-                adapter.getMapper() );", "+                     new String[]{classname.replace( '.', File.separatorChar ) + \".class\"},", "+                     adapter.getMapper() );", "-                \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir,", "-                Project.MSG_INFO );", "+                 \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir,", "+                 Project.MSG_INFO );", "-                throw new BuildException( FAIL_MSG );", "+                throw new TaskException( FAIL_MSG );", "-                    Project.MSG_WARN );", "+                     Project.MSG_WARN );", "-                        ( String )compileList.elementAt( j ),", "-                        adapter );", "+                                       (String)compileList.elementAt( j ),", "+                                       adapter );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad192c6fa37c3e8796bd11cd9cd16b1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            String name = ( String )iter.nextElement();", "+            String name = (String)iter.nextElement();", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );", "-            throw new BuildException( \"Outputdir not a directory.\" );", "+            throw new TaskException( \"Outputdir not a directory.\" );", "-            throw new BuildException( \"Javacchome not set.\" );", "+            throw new TaskException( \"Javacchome not set.\" );", "-            \"/JavaCC.zip\" );", "+                                               \"/JavaCC.zip\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b088864056b2e04d55c2d0bffb6713aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validateSetup()         throws BuildException", "signatureAfterChange": "     private void validateSetup()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must specify a path to convert\" );", "+            throw new TaskException( \"You must specify a path to convert\" );", "-            throw new BuildException( \"You must specify a property\" );", "+            throw new TaskException( \"You must specify a property\" );", "-            throw new BuildException( \"You must specify at least one of targetOS, dirSep, or pathSep\" );", "+            throw new TaskException( \"You must specify at least one of targetOS, dirSep, or pathSep\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5aa46645ce5d33f8dfc7bcec5fb3105", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            String name = ( String )iter.nextElement();", "+            String name = (String)iter.nextElement();", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );", "-            throw new BuildException( \"Outputdir not a directory.\" );", "+            throw new TaskException( \"Outputdir not a directory.\" );", "-            throw new BuildException( \"Javacchome not set.\" );", "+            throw new TaskException( \"Javacchome not set.\" );", "-            \"/JavaCC.zip\" );", "+                                               \"/JavaCC.zip\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80c7b0c1ebee50c58c7a7c601560f2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Mkdir.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"dir attribute is required\" );", "+            throw new TaskException( \"dir attribute is required\" );", "-            throw new BuildException( \"Unable to create directory as a file already exists with that name: \" + dir.getAbsolutePath() );", "+            throw new TaskException( \"Unable to create directory as a file already exists with that name: \" + dir.getAbsolutePath() );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a6a0347db6e873afe3cf7ee1876a9c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Invalid home directory. Must point to JProbe home directory\" );", "+            throw new TaskException( \"Invalid home directory. Must point to JProbe home directory\" );", "-            throw new BuildException( \"Cannot find Coverage directory: \" + home );", "+            throw new TaskException( \"Cannot find Coverage directory: \" + home );", "-            throw new BuildException( \"Snapshot directory does not exists :\" + snapshotDir );", "+            throw new TaskException( \"Snapshot directory does not exists :\" + snapshotDir );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc761b59fd35b69a50dc7f1827e76527", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static CompilerAdapter resolveClassName( String className )         throws BuildException", "signatureAfterChange": "     private static CompilerAdapter resolveClassName( String className )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            return ( CompilerAdapter )o;", "+            return (CompilerAdapter)o;", "-            throw new BuildException( className + \" can\\'t be found.\", cnfe );", "+            throw new TaskException( className + \" can\\'t be found.\", cnfe );", "-            throw new BuildException( className + \" isn\\'t the classname of \"", "-                 + \"a compiler adapter.\", cce );", "+            throw new TaskException( className + \" isn\\'t the classname of \"", "+                                     + \"a compiler adapter.\", cce );", "-            throw new BuildException( className + \" caused an interesting \"", "-                 + \"exception.\", t );", "+            throw new TaskException( className + \" caused an interesting \"", "+                                     + \"exception.\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a0550b1246c3bdbae983d55b7c9325", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                File fromDir = ( File )e.nextElement();", "-                File toDir = ( File )completeDirMap.get( fromDir );", "+                File fromDir = (File)e.nextElement();", "+                File toDir = (File)completeDirMap.get( fromDir );", "-                        \" to \" + toDir, verbosity );", "+                         \" to \" + toDir, verbosity );", "-                         + \" to \" + toDir", "-                         + \" due to \" + ioe.getMessage();", "-                    throw new BuildException( msg, ioe );", "+                        + \" to \" + toDir", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new TaskException( msg, ioe );", "-                destDir.getAbsolutePath() );", "+                 destDir.getAbsolutePath() );", "-                String fromFile = ( String )e.nextElement();", "-                String toFile = ( String )fileCopyMap.get( fromFile );", "+                String fromFile = (String)e.nextElement();", "+                String toFile = (String)fileCopyMap.get( fromFile );", "-                            \" to \" + toFile, verbosity );", "+                             \" to \" + toFile, verbosity );", "-                             + \" to \" + toFile", "-                             + \" due to \" + ioe.getMessage();", "-                        throw new BuildException( msg, ioe );", "+                            + \" to \" + toFile", "+                            + \" due to \" + ioe.getMessage();", "+                        throw new TaskException( msg, ioe );", "-                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();  )", "+                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements(); )", "-                                executionFilters.addFilterSet( ( FilterSet )filterEnum.nextElement() );", "+                                executionFilters.addFilterSet( (FilterSet)filterEnum.nextElement() );", "-                                forceOverwrite );", "+                                                     forceOverwrite );", "-                                throw new BuildException( \"Unable to delete file \"", "-                                     + f.getAbsolutePath() );", "+                                throw new TaskException( \"Unable to delete file \"", "+                                                         + f.getAbsolutePath() );", "-                                 + toFile", "-                                 + \" due to \" + ioe.getMessage();", "-                            throw new BuildException( msg, ioe );", "+                                + toFile", "+                                + \" due to \" + ioe.getMessage();", "+                            throw new TaskException( msg, ioe );", "-                File d = new File( ( String )e.nextElement() );", "+                File d = new File( (String)e.nextElement() );", "-                FileSet fs = ( FileSet )e.nextElement();", "+                FileSet fs = (FileSet)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f6e3742e224be8794acbd49290c400", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private int run( String[] command )         throws BuildException", "signatureAfterChange": "     private int run( String[] command )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( dir.getAbsolutePath() + \" is not a valid directory\");", "+                throw new TaskException( dir.getAbsolutePath() + \" is not a valid directory\" );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", io );", "+            throw new TaskException( \"Error\", io );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c90bee7c4160096053c0aa5f2348cabb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void runBuild( ClassLoader coreLoader )         throws BuildException", "signatureAfterChange": "     private void runBuild( ClassLoader coreLoader )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                    throw new BuildException( noParserMessage, ncdfe );", "+                    throw new TaskException( noParserMessage, ncdfe );", "-                    throw new BuildException( noParserMessage, cnfe );", "+                    throw new TaskException( noParserMessage, cnfe );", "-                    throw new BuildException( noParserMessage, npe );", "+                    throw new TaskException( noParserMessage, npe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94703248cf00bddd64212187bf9b4ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"srcdir attribute must be set!\" );", "+                throw new TaskException( \"srcdir attribute must be set!\" );", "-                throw new BuildException( \"The cache, if specified, must point to a directory\" );", "+                throw new TaskException( \"The cache, if specified, must point to a directory\" );", "-                    \" classes:\", Project.MSG_DEBUG );", "-                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements();  )", "+                     \" classes:\", Project.MSG_DEBUG );", "+                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                    Hashtable affectedClasses = ( Hashtable )affectedClassMap.get( className );", "-                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements();  )", "+                    Hashtable affectedClasses = (Hashtable)affectedClassMap.get( className );", "+                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements(); )", "-                        String affectedClass = ( String )e2.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )affectedClasses.get( affectedClass );", "+                        String affectedClass = (String)e2.nextElement();", "+                        ClassFileInfo info = (ClassFileInfo)affectedClasses.get( affectedClass );", "-                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                        String className = ( String )e.nextElement();", "+                        String className = (String)e.nextElement();", "-                        Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                        Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                            File classpathFile = ( File )e2.nextElement();", "+                            File classpathFile = (File)e2.nextElement();", "-                File srcDir = ( File )resolveFile( srcPathList[i] );", "+                File srcDir = (File)resolveFile( srcPathList[ i ] );", "-                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )classFileInfoMap.get( className );", "+                        ClassFileInfo info = (ClassFileInfo)classFileInfoMap.get( className );", "-                            Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                            Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                                File classpathFile = ( File )e2.nextElement();", "+                                File classpathFile = (File)e2.nextElement();", "-                                        \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "+                                         \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cead001bb6d20520cba3ae1f60e026ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Script.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            for( Enumeration e = beans.keys(); e.hasMoreElements();  )", "+            for( Enumeration e = beans.keys(); e.hasMoreElements(); )", "-                String key = ( String )e.nextElement();", "+                String key = (String)e.nextElement();", "-                if( te instanceof BuildException )", "+                if( te instanceof TaskException )", "-                    throw ( BuildException )te;", "+                    throw (TaskException)te;", "-            throw new BuildException( \"Error\", t );", "+            throw new TaskException( \"Error\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22261dece201b474a4e5e9664b1e65d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void executeWLS6()", "signatureAfterChange": "      private void executeWLS6()", "diff": ["-            throw new BuildException( \"BEA home \" + beaHome.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"BEA home \" + beaHome.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"Server config file \" + configFile + \" not found.\" );", "+            throw new TaskException( \"Server config file \" + configFile + \" not found.\" );", "-            throw new BuildException( \"You must supply a management password to start the server\" );", "+            throw new TaskException( \"You must supply a management password to start the server\" );", "-        Java weblogicServer = ( Java )project.createTask( \"java\" );", "+        Java weblogicServer = (Java)project.createTask( \"java\" );", "-            throw new BuildException( \"Execution of weblogic server failed\" );", "+            throw new TaskException( \"Execution of weblogic server failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9939d8fd7b66ab251d03ce4d53b2164", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                File fromDir = ( File )e.nextElement();", "-                File toDir = ( File )completeDirMap.get( fromDir );", "+                File fromDir = (File)e.nextElement();", "+                File toDir = (File)completeDirMap.get( fromDir );", "-                        \" to \" + toDir, verbosity );", "+                         \" to \" + toDir, verbosity );", "-                         + \" to \" + toDir", "-                         + \" due to \" + ioe.getMessage();", "-                    throw new BuildException( msg, ioe );", "+                        + \" to \" + toDir", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new TaskException( msg, ioe );", "-                destDir.getAbsolutePath() );", "+                 destDir.getAbsolutePath() );", "-                String fromFile = ( String )e.nextElement();", "-                String toFile = ( String )fileCopyMap.get( fromFile );", "+                String fromFile = (String)e.nextElement();", "+                String toFile = (String)fileCopyMap.get( fromFile );", "-                            \" to \" + toFile, verbosity );", "+                             \" to \" + toFile, verbosity );", "-                             + \" to \" + toFile", "-                             + \" due to \" + ioe.getMessage();", "-                        throw new BuildException( msg, ioe );", "+                            + \" to \" + toFile", "+                            + \" due to \" + ioe.getMessage();", "+                        throw new TaskException( msg, ioe );", "-                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();  )", "+                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements(); )", "-                                executionFilters.addFilterSet( ( FilterSet )filterEnum.nextElement() );", "+                                executionFilters.addFilterSet( (FilterSet)filterEnum.nextElement() );", "-                                forceOverwrite );", "+                                                     forceOverwrite );", "-                                throw new BuildException( \"Unable to delete file \"", "-                                     + f.getAbsolutePath() );", "+                                throw new TaskException( \"Unable to delete file \"", "+                                                         + f.getAbsolutePath() );", "-                                 + toFile", "-                                 + \" due to \" + ioe.getMessage();", "-                            throw new BuildException( msg, ioe );", "+                                + toFile", "+                                + \" due to \" + ioe.getMessage();", "+                            throw new TaskException( msg, ioe );", "-                File d = new File( ( String )e.nextElement() );", "+                File d = new File( (String)e.nextElement() );", "-                FileSet fs = ( FileSet )e.nextElement();", "+                FileSet fs = (FileSet)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5042f2fb42616b6ee7f335960fb550", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Unpack.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void validate()         throws BuildException", "signatureAfterChange": "      private void validate()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No Src for gunzip specified\" );", "+            throw new TaskException( \"No Src for gunzip specified\" );", "-            throw new BuildException( \"Src doesn't exist\" );", "+            throw new TaskException( \"Src doesn't exist\" );", "-            throw new BuildException( \"Cannot expand a directory\" );", "+            throw new TaskException( \"Cannot expand a directory\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6a0fb62a8934e0581c920b97e4545d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"destination directory \" + destinationDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"destination directory \" + destinationDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"src directory \" + sourceDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"src directory \" + sourceDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"package attribute must be present.\" );", "+            throw new TaskException( \"package attribute must be present.\" );", "-        Java helperTask = ( Java )project.createTask( \"java\" );", "+        Java helperTask = (Java)project.createTask( \"java\" );", "-        String[] args = new String[12];", "+        String[] args = new String[ 12 ];", "-        args[j++] = \"-d\";", "-        args[j++] = destinationDirectory.getAbsolutePath().trim();", "-        args[j++] = \"-docroot\";", "-        args[j++] = sourceDirectory.getAbsolutePath().trim();", "-        args[j++] = \"-keepgenerated\";//TODO: Parameterise ??", "+        args[ j++ ] = \"-d\";", "+        args[ j++ ] = destinationDirectory.getAbsolutePath().trim();", "+        args[ j++ ] = \"-docroot\";", "+        args[ j++ ] = sourceDirectory.getAbsolutePath().trim();", "+        args[ j++ ] = \"-keepgenerated\";//TODO: Parameterise ??", "-        args[j++] = \"-compilerclass\";", "-        args[j++] = \"sun.tools.javac.Main\";", "+        args[ j++ ] = \"-compilerclass\";", "+        args[ j++ ] = \"sun.tools.javac.Main\";", "-        args[j++] = \"-classpath\";", "-        args[j++] = compileClasspath.toString();", "+        args[ j++ ] = \"-classpath\";", "+        args[ j++ ] = compileClasspath.toString();", "-            jspFile = new File( ( String )filesToDo.elementAt( i ) );", "-            args[j] = \"-package\";", "+            jspFile = new File( (String)filesToDo.elementAt( i ) );", "+            args[ j ] = \"-package\";", "-                args[j + 1] = destinationPackage + \".\" + \"_\" + parents;", "+                args[ j + 1 ] = destinationPackage + \".\" + \"_\" + parents;", "-                args[j + 1] = destinationPackage;", "+                args[ j + 1 ] = destinationPackage;", "-            args[j + 2] = sourceDirectory + File.separator + ( String )filesToDo.elementAt( i );", "+            args[ j + 2 ] = sourceDirectory + File.separator + (String)filesToDo.elementAt( i );", "-                arg += \" \" + args[x];", "+                arg += \" \" + args[ x ];", "-                log( files[i] + \" failed to compile\", Project.MSG_WARN );", "+                log( files[ i ] + \" failed to compile\", Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3eb4add8b4348a6dbb2996bcd64a89c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static RmicAdapter resolveClassName( String className )         throws BuildException", "signatureAfterChange": "     private static RmicAdapter resolveClassName( String className )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            return ( RmicAdapter )o;", "+            return (RmicAdapter)o;", "-            throw new BuildException( className + \" can\\'t be found.\", cnfe );", "+            throw new TaskException( className + \" can\\'t be found.\", cnfe );", "-            throw new BuildException( className + \" isn\\'t the classname of \"", "-                 + \"a rmic adapter.\", cce );", "+            throw new TaskException( className + \" isn\\'t the classname of \"", "+                                     + \"a rmic adapter.\", cce );", "-            throw new BuildException( className + \" caused an interesting \"", "-                 + \"exception.\", t );", "+            throw new TaskException( className + \" caused an interesting \"", "+                                     + \"exception.\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c215f61ef5c6f1860b0d4a34836966", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void executeEjbc( SAXParser saxParser )         throws BuildException", "signatureAfterChange": "     private void executeEjbc( SAXParser saxParser )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            iasdescriptor,", "-            dest,", "-            getClasspath().toString(),", "-            saxParser );", "+                                            iasdescriptor,", "+                                            dest,", "+                                            getClasspath().toString(),", "+                                            saxParser );", "-                 + \"descriptor file: \" + e.getMessage();", "-            throw new BuildException( msg, e );", "+                + \"descriptor file: \" + e.getMessage();", "+            throw new TaskException( msg, e );", "-                 + \"descriptor file: \" + e.getMessage();", "-            throw new BuildException( msg, e );", "+                + \"descriptor file: \" + e.getMessage();", "+            throw new TaskException( msg, e );", "-                 + \"utility: \" + e.getMessage();", "-            throw new BuildException( msg, e );", "+                + \"utility: \" + e.getMessage();", "+            throw new TaskException( msg, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e88d6f224b434800e10fca457737e33e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'metamatahome' must point to Metamata home directory.\" );", "+            throw new TaskException( \"'metamatahome' must point to Metamata home directory.\" );", "-            if( !jars[i].exists() )", "+            if( !jars[ i ].exists() )", "-                throw new BuildException( jars[i] + \" does not exist. Check your metamata installation.\" );", "+                throw new TaskException( jars[ i ] + \" does not exist. Check your metamata installation.\" );", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f00e32aa9869a8a0c1b6e63c9d14c23b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void checkConfiguration()         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"no executable specified\" );", "+            throw new TaskException( \"no executable specified\" );", "-            throw new BuildException( \"The directory you specified does not exist\" );", "+            throw new TaskException( \"The directory you specified does not exist\" );", "-            throw new BuildException( \"The directory you specified is not a directory\" );", "+            throw new TaskException( \"The directory you specified is not a directory\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ca42b62b63a928640fd7fb3d3a948a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void convert( String srcName, String destName )         throws BuildException", "signatureAfterChange": "     private void convert( String srcName, String destName )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"file \" + srcFile", "-                 + \" would overwrite its self\" );", "+            throw new TaskException( \"file \" + srcFile", "+                                     + \" would overwrite its self\" );", "-                throw new BuildException( \"cannot create parent directory \"", "-                     + parentName );", "+                throw new TaskException( \"cannot create parent directory \"", "+                                         + parentName );", "-             = new sun.tools.native2ascii.Main();", "+            = new sun.tools.native2ascii.Main();", "-            throw new BuildException( \"conversion failed\" );", "+            throw new TaskException( \"conversion failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac9e8038c2f717233b9ae6d3560da18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static CompilerAdapter resolveClassName( String className )         throws BuildException", "signatureAfterChange": "     private static CompilerAdapter resolveClassName( String className )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            return ( CompilerAdapter )o;", "+            return (CompilerAdapter)o;", "-            throw new BuildException( className + \" can\\'t be found.\", cnfe );", "+            throw new TaskException( className + \" can\\'t be found.\", cnfe );", "-            throw new BuildException( className + \" isn\\'t the classname of \"", "-                 + \"a compiler adapter.\", cce );", "+            throw new TaskException( className + \" isn\\'t the classname of \"", "+                                     + \"a compiler adapter.\", cce );", "-            throw new BuildException( className + \" caused an interesting \"", "-                 + \"exception.\", t );", "+            throw new TaskException( className + \" caused an interesting \"", "+                                     + \"exception.\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdbf1104ad6d23a5a57c4626246269c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/StyleBook.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"TargetDirectory attribute not set.\" );", "+            throw new TaskException( \"TargetDirectory attribute not set.\" );", "-            throw new BuildException( \"SkinDirectory attribute not set.\" );", "+            throw new TaskException( \"SkinDirectory attribute not set.\" );", "-            throw new BuildException( \"book attribute not set.\" );", "+            throw new TaskException( \"book attribute not set.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee498652569057d1de2b1f1008a89d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'tofile' attribute must be set.\" );", "+            throw new TaskException( \"'tofile' attribute must be set.\" );", "-            throw new BuildException( \"Invalid home directory. Must point to JProbe home directory\" );", "+            throw new TaskException( \"Invalid home directory. Must point to JProbe home directory\" );", "-            throw new BuildException( \"Cannot find Coverage directory: \" + home );", "+            throw new TaskException( \"Cannot find Coverage directory: \" + home );"]}]}