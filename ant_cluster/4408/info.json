{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b7cf34c6ed1a775e41e9b69470fa109", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f9dd9e14fdf6f3aa3026b6887a37a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "007e5e2034ecd772345540300195ae11d2bb590d", "commitAfterChange": "eff18a7fed54e12f6bb3e92a9cf74376c527cc56", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int execute()         throws IOException, TaskException", "signatureAfterChange": "     public int execute()         throws IOException, TaskException", "diff": ["-        CommandLauncher launcher = vmLauncher != null ? vmLauncher : shellLauncher;", "-        if( !useVMLauncher )", "+        CommandLauncher launcher = c_vmLauncher != null ? c_vmLauncher : c_shellLauncher;", "+        if( !m_useVMLauncher )", "-            launcher = shellLauncher;", "+            launcher = c_shellLauncher;", "-        final Process process = launcher.exec( project, getCommandline(), getEnvironment(), workingDirectory );", "+        final Process process = launcher.exec( m_project, getCommandline(), getEnvironment(), m_workingDirectory );", "-            streamHandler.setProcessInputStream( process.getOutputStream() );", "-            streamHandler.setProcessOutputStream( process.getInputStream() );", "-            streamHandler.setProcessErrorStream( process.getErrorStream() );", "+            m_streamHandler.setProcessInputStream( process.getOutputStream() );", "+            m_streamHandler.setProcessOutputStream( process.getInputStream() );", "+            m_streamHandler.setProcessErrorStream( process.getErrorStream() );", "-        streamHandler.start();", "+        m_streamHandler.start();", "-        processDestroyer.add( process );", "+        c_processDestroyer.add( process );", "-        if( watchdog != null )", "-            watchdog.start( process );", "+        if( m_watchdog != null )", "+            m_watchdog.start( process );", "-        processDestroyer.remove( process );", "+        c_processDestroyer.remove( process );", "-        if( watchdog != null )", "-            watchdog.stop();", "-        streamHandler.stop();", "-        if( watchdog != null )", "-            watchdog.checkException();", "+        if( m_watchdog != null )", "+            m_watchdog.stop();", "+        m_streamHandler.stop();", "+        if( m_watchdog != null )", "+            m_watchdog.checkException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973bed70badb2491893ec332cf159b4c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "007e5e2034ecd772345540300195ae11d2bb590d", "commitAfterChange": "eff18a7fed54e12f6bb3e92a9cf74376c527cc56", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int execute()         throws IOException, TaskException", "signatureAfterChange": "     public int execute()         throws IOException, TaskException", "diff": ["-        CommandLauncher launcher = vmLauncher != null ? vmLauncher : shellLauncher;", "-        if( !useVMLauncher )", "+        CommandLauncher launcher = c_vmLauncher != null ? c_vmLauncher : c_shellLauncher;", "+        if( !m_useVMLauncher )", "-            launcher = shellLauncher;", "+            launcher = c_shellLauncher;", "-        final Process process = launcher.exec( project, getCommandline(), getEnvironment(), workingDirectory );", "+        final Process process = launcher.exec( m_project, getCommandline(), getEnvironment(), m_workingDirectory );", "-            streamHandler.setProcessInputStream( process.getOutputStream() );", "-            streamHandler.setProcessOutputStream( process.getInputStream() );", "-            streamHandler.setProcessErrorStream( process.getErrorStream() );", "+            m_streamHandler.setProcessInputStream( process.getOutputStream() );", "+            m_streamHandler.setProcessOutputStream( process.getInputStream() );", "+            m_streamHandler.setProcessErrorStream( process.getErrorStream() );", "-        streamHandler.start();", "+        m_streamHandler.start();", "-        processDestroyer.add( process );", "+        c_processDestroyer.add( process );", "-        if( watchdog != null )", "-            watchdog.start( process );", "+        if( m_watchdog != null )", "+            m_watchdog.start( process );", "-        processDestroyer.remove( process );", "+        c_processDestroyer.remove( process );", "-        if( watchdog != null )", "-            watchdog.stop();", "-        streamHandler.stop();", "-        if( watchdog != null )", "-            watchdog.checkException();", "+        if( m_watchdog != null )", "+            m_watchdog.stop();", "+        m_streamHandler.stop();", "+        if( m_watchdog != null )", "+            m_watchdog.checkException();"]}]}