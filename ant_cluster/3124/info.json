{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33cbc478f0757e2b5d4d32f74694c2c4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60830cb9fd7add0dd527afd6445746a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/JspcTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testNoTld() throws Exception", "signatureAfterChange": "       @Test     public void testNoTld() throws Exception", "diff": ["-     */", "+    @Test", "-//         expectBuildExceptionContaining(\"testNoTld\",", "-//                 \"Jasper found an error in a file\",", "-//                 \"Java returned: 9\");", "-         expectBuildExceptionContaining(\"testNoTld\",", "-                 \"not found\",", "-                 \"Java returned: 9\");", "+        try {", "+            buildRule.executeTarget(\"testNoTld\");", "+            fail(\"Not found\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"Java returned: 9\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af047fef818bc4a341451a23de62dc19", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void test1()", "signatureAfterChange": "      @Test     public void test1()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"test1\",", "-                \"it is required to fail :-)\",", "-                \"No message\");", "+        try {", "+            buildRule.executeTarget(\"test1\");", "+            fail(\"it is required to fail :-)\") ;", "+        } catch (BuildException ex) {", "+            assertEquals(\"No message\", ex.getMessage());", "+        }"]}]}