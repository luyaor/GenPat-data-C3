{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6ee8dcb4462d05e3214d0e34fb03338", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0240bd5b5afc6feeee6c8bfb33122c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "a5ae6a2bfec933af410de9ad415789bfde653666", "commitAfterChange": "f3e3462d86183541ed6f0c9b8a1c3c963d0d6ce1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "diff": ["+        URL  url = null;", "+        String buildFileName = null;", "-//         } else if (source instanceof InputStream) {", "-//         } else if (source instanceof URL) {", "-//         } else if (source instanceof InputSource) {", "+            buildFile = new File(buildFile.getAbsolutePath());", "+            context.setBuildFile(buildFile);", "+            buildFileName = buildFile.toString();", "+//         } else if (source instanceof InputStream ) {", "+        } else if (source instanceof URL) {", "+            if (handler.getCurrentAntHandler() != elementHandler) {", "+                throw new BuildException(", "+                    \"Source \" + source.getClass().getName()", "+                    + \" not supported by this plugin for \"", "+                    + \" non task xml\");", "+            }", "+            url = (URL) source;", "+            buildFileName = url.toString();", "+//         } else if (source instanceof InputSource ) {", "-                + \" not supported by this plugin\");", "+                                     + \" not supported by this plugin\");", "-        FileInputStream inputStream = null;", "+        InputStream inputStream = null;", "-        buildFile = new File(buildFile.getAbsolutePath());", "-        context.setBuildFile(buildFile);", "-            String uri = fu.toURI(buildFile.getAbsolutePath());", "+            String uri = null;", "+            if (buildFile != null) {", "+                uri = fu.toURI(buildFile.getAbsolutePath());", "+                inputStream = new FileInputStream(buildFile);", "+            } else {", "+                inputStream = url.openStream();", "+                uri = url.toString(); // ?? OK ??", "+            }", "-            inputStream = new FileInputStream(buildFile);", "-            inputSource.setSystemId(uri);", "-            project.log(\"parsing buildfile \" + buildFile", "-                + \" with URI = \" + uri, Project.MSG_VERBOSE);", "+            if (uri != null) {", "+                inputSource.setSystemId(uri);", "+            }", "+            project.log(\"parsing buildfile \" + buildFileName", "+                        + \"with URI = \" + uri, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22b89425d224bae2de316a73f53c0cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "commitAfterChange": "86334974455a492f4b76331b6002a45289874ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-        if( ! (source instanceof File) )", "-            throw new BuildException( \"Only File source supported by default plugin\" );", "-        File buildFile=(File)source;", "+        AntXmlContext context=new AntXmlContext();", "+        if(source instanceof File) {", "+            context.buildFile=(File)source;", "+//         } else if( source instanceof InputStream ) {", "+//         } else if( source instanceof URL ) {", "+//         } else if( source instanceof InputSource ) {", "+        } else {", "+            throw new BuildException( \"Source \" + source.getClass().getName() +", "+                                      \" not supported by this plugin\" );", "+        }", "+", "-        this.project = project;", "-        this.buildFile = new File(buildFile.getAbsolutePath());", "-        buildFileParent = new File(this.buildFile.getParent());", "+        context.project = project;", "+        context.buildFile = new File(context.buildFile.getAbsolutePath());", "+        context.buildFileParent = new File(context.buildFile.getParent());", "-            SAXParser saxParser = getParserFactory().newSAXParser();", "+            /**", "+             * SAX 2 style parser used to parse the given file. ", "+             */", "+            org.xml.sax.XMLReader parser;", "+    ", "+            if (parserFactory == null) {", "+                parserFactory = SAXParserFactory.newInstance();", "+            }", "+", "+            SAXParser saxParser = parserFactory.newSAXParser();", "-            String uri = \"file:\" + buildFile.getAbsolutePath().replace('\\\\', '/');", "+            String uri = \"file:\" + context.buildFile.getAbsolutePath().replace('\\\\', '/');", "-            inputStream = new FileInputStream(buildFile);", "+            inputStream = new FileInputStream(context.buildFile);", "-            project.log(\"parsing buildfile \" + buildFile + \" with URI = \" + uri, Project.MSG_VERBOSE);", "-            DefaultHandler hb = new RootHandler();", "+            project.log(\"parsing buildfile \" + context.buildFile + \" with URI = \" + uri, Project.MSG_VERBOSE);", "+", "+            DefaultHandler hb = new RootHandler(context);", "+", "-                new Location(buildFile.toString(), exc.getLineNumber(), exc.getColumnNumber());", "+                new Location(context.buildFile.toString(), exc.getLineNumber(), exc.getColumnNumber());"]}]}