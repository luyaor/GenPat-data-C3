{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea35863640e2cb7884fe2cc2c244f332", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4473f4303e17c09d1f4fd2d7ad26cda", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "3b1f2fca74ade338347b53d7f450d5dc1bdea0c9", "commitAfterChange": "585ca2b4d92ac5cc3bacfc5aa5ebeeee3fe8659a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected static File[] grabFiles(FileScanner[] scanners)", "signatureAfterChange": "      protected static File[] grabFiles(FileScanner[] scanners)", "diff": ["-        Vector files = new Vector ();", "-        for (int i = 0; i < scanners.length; i++) {", "+        return grabFiles(scanners, grabFileNames(scanners));", "+    }", "-            String[] ifiles = scanners[i].getIncludedFiles();", "-            for (int j = 0; j < ifiles.length; j++)", "-                files.addElement(new File(thisBaseDir, ifiles[j]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58783b419c3df247be832a32b2cf0c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/Ilasm.java", "commitBeforeChange": "92f62e7eb8c10fe5aa19d817d6d9367dc59397e9", "commitAfterChange": "77ee46ba7a31a04ce8697925985e8f9f1a59d52e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute()              throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["-        //get dependencies list.", "-        DirectoryScanner scanner = super.getDirectoryScanner(srcDir);", "-        String[] dependencies = scanner.getIncludedFiles();", "-        log(\"assembling \" + dependencies.length + \" file\" + ((dependencies.length == 1) ? \"\" : \"s\"));", "-        String baseDir = scanner.getBasedir().toString();", "-        //add to the command", "-        for (int i = 0; i < dependencies.length; i++) {", "-            String targetFile = dependencies[i];", "-            targetFile = baseDir + File.separator + targetFile;", "-            executeOneFile(targetFile);", "-        }", "+        NetCommand command = buildIlasmCommand();", "+", "+        addFilesAndExecute(command);"]}]}