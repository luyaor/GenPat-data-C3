{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c378b3d76796de7523d9bb01cb7ef3e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73191ddadc59d8375571a761218fa57d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "e7e85f299e908cfbfca277f8dea203a99009bafd", "commitAfterChange": "27f9f065c82441f9e1f902ebcecb1b3249a0412e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["+        if (file.equals(tarFile)) {", "+            // If the archive is built for the first time and it is", "+            // matched by a resource collection, then it hasn't been", "+            // found in check (it hasn't been there) but will be", "+            // included now.", "+            //", "+            // for some strange reason the old code would simply skip", "+            // the entry and not fail, do the same now for backwards", "+            // compatibility reasons.  Without this, the which4j build", "+            // fails in Gump", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9659a8069ceebc9303e4dab5b0e68e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "2c40937c5271c08ddaa12937621f26f11df750f6", "commitAfterChange": "cc4f5d1d67c4842debbe269960e8341efc90786e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addFileSet(FileSet fs)", "signatureAfterChange": "     public void addFileSet(FileSet fs)", "diff": ["+", "+        // this one is here because the changes to support ResourceCollections", "+        // have broken Magic's JUnitTestTask.", "+        //", "+        // The task adds a FileSet to a BatchTest instance using the", "+        // Java API and without telling the FileSet about its project", "+        // instance.  The original code would pass in project on the", "+        // call to getDirectoryScanner - which is now hidden deep into", "+        // Resources.iterator() and not reachable.", "+        if (fs.getProject() == null) {", "+            fs.setProject(project);", "+        }"]}]}