{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f6a87f942d0b1db6e970ade8cba5102", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5c18af6ecb71184a84f108c0bc50fd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "1c4c6da22620b4aa3ec84a3acc9d6c1f3eeda54d", "commitAfterChange": "3f78457877d6713f35dc7b5d2838f4818f4f16dc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "    void flushHeaders() throws IOException", "signatureAfterChange": "    void flushHeaders() throws IOException", "diff": ["-    // XXX Should I care about order here?", "-    Enumeration e = headers.keys();", "-    while (e.hasMoreElements()) {", "-      String name = (String) e.nextElement();", "-      String value = (String) headers.get(name);", "+    // RFC 822 s4.1:", "+    //   \"Header fields are NOT required to occur in any particular order,", "+    //    except that the message body MUST occur AFTER the headers\"", "+    // (the same section specifies a reccommended order, which we ignore)", "+   for (int i = 0; i < headersKeys.size(); i++) {", "+      String name = (String) headersKeys.elementAt(i);", "+      String value = (String) headersValues.elementAt(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8158f7047df835ec1f3397444a0598a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "743a75153a9d68eb97a9d686c9ed46d059d13480", "commitAfterChange": "baf4809c2c0eea1949cfabefe6b954f30150f1c2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            Iterator it = children.iterator();", "-            while (it.hasNext()) {", "-                Object o = it.next();", "+            for (int i = 0; i < children.size(); ++i) {", "+                Object o = children.get(i);"]}]}