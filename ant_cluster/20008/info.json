{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa692999d99e0b1d34e57a9640d6e4c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0140130d54715a0054e0278a8e333521", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void process( File inFile, File outFile, File stylesheet )         throws TaskException", "signatureAfterChange": "      private void processFile( final File in, final File out )         throws TaskException", "diff": ["+", "+    private void processFile( final File in, final File out )", "+        throws TaskException", "+    {", "+        final long styleSheetLastModified = m_stylesheet.lastModified();", "+        try", "+        {", "+            if( m_force ||", "+                in.lastModified() > out.lastModified() ||", "+                styleSheetLastModified > out.lastModified() )", "+            {", "+                ensureDirectoryFor( out );", "+", "+                final String notice = \"Processing \" + in + \" to \" + out;", "+                getLogger().info( notice );", "+                transform( in, out );", "+            }", "+        }", "+        catch( final Exception e )", "+        {", "+            // If failed to process document, must delete target document,", "+            // or it will not attempt to process it the second time", "+            final String message = \"Failed to process \" + in;", "+            getLogger().info( message );", "+            if( out != null )", "+            {", "+                out.delete();", "+            }", "+", "+            throw new TaskException( e.getMessage(), e );", "+        }", "+    }", "-", "-    private void process( File inFile, File outFile, File stylesheet )", "-        throws TaskException", "-    {", "-        try", "-        {", "-            final long styleSheetLastModified = stylesheet.lastModified();", "-            getLogger().debug( \"In file \" + inFile + \" time: \" + inFile.lastModified() );", "-            getLogger().debug( \"Out file \" + outFile + \" time: \" + outFile.lastModified() );", "-            getLogger().debug( \"Style file \" + m_xslFile + \" time: \" + styleSheetLastModified );", "-", "-            if( m_force ||", "-                inFile.lastModified() > outFile.lastModified() ||", "-                styleSheetLastModified > outFile.lastModified() )", "-            {", "-                ensureDirectoryFor( outFile );", "-                getLogger().info( \"Processing \" + inFile + \" to \" + outFile );", "-                configureLiaison( stylesheet );", "-                m_liaison.transform( inFile, outFile );", "-            }", "-        }", "-        catch( Exception ex )", "-        {", "-            getLogger().info( \"Failed to process \" + inFile );", "-            if( outFile != null )", "-            {", "-                outFile.delete();", "-            }", "-            throw new TaskException( \"Error\", ex );", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d75f37648a9b72b89446f10fc5cfe55", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void process( File baseDir, String xmlFile, File destDir,                           File stylesheet )         throws TaskException", "signatureAfterChange": "     private void process( final File baseDir, final String xmlFile, final File destDir )         throws TaskException", "diff": ["+     */", "+    private void process( final File baseDir, final String xmlFile, final File destDir )", "+        final String filename = FileUtil.removeExtension( xmlFile );", "+", "+        final File in = new File( baseDir, xmlFile );", "+        final File out = new File( destDir, filename + m_targetExtension );", "+", "+        processFile( in, out );", "+    }", "-     */", "-    private void process( File baseDir, String xmlFile, File destDir,", "-                          File stylesheet )", "-        throws TaskException", "-    {", "-", "-        String fileExt = m_targetExtension;", "-        File outFile = null;", "-        File inFile = null;", "-", "-        try", "-        {", "-            long styleSheetLastModified = stylesheet.lastModified();", "-            inFile = new File( baseDir, xmlFile );", "-            int dotPos = xmlFile.lastIndexOf( '.' );", "-            if( dotPos > 0 )", "-            {", "-                outFile = new File( destDir, xmlFile.substring( 0, xmlFile.lastIndexOf( '.' ) ) + fileExt );", "-            }", "-            else", "-            {", "-                outFile = new File( destDir, xmlFile + fileExt );", "-            }", "-            if( m_force ||", "-                inFile.lastModified() > outFile.lastModified() ||", "-                styleSheetLastModified > outFile.lastModified() )", "-            {", "-                ensureDirectoryFor( outFile );", "-                getLogger().info( \"Processing \" + inFile + \" to \" + outFile );", "-", "-                configureLiaison( stylesheet );", "-                m_liaison.transform( inFile, outFile );", "-            }", "-        }", "-        catch( Exception ex )", "-        {", "-            // If failed to process document, must delete target document,", "-            // or it will not attempt to process it the second time", "-            getLogger().info( \"Failed to process \" + inFile );", "-            if( outFile != null )", "-            {", "-                outFile.delete();", "-            }", "-", "-            throw new TaskException( \"Error\", ex );", "-        }", "-", "-    }//-- processXML"]}]}