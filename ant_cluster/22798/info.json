{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6116568ecb9394a676b1255800ad49e0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f116565e8443559c4698b8d95540106", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/ResolvePropertyMap.java", "commitBeforeChange": "c92f8f160a3197e8f3df74ceb588f581d08404c0", "commitAfterChange": "169becaf5138b6db5f5ec8d9822b110199dc9d6b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getProperty(String name)", "signatureAfterChange": "     public Object getProperty(String name)", "diff": ["+", "+            String recursiveCallKey = name;", "+            if (prefix != null && !expandingLHS && !prefixValues) {", "+                // only look up unprefixed properties inside the map", "+                // if prefixValues is true or we are expanding the key", "+                // itself", "+                recursiveCallKey = prefix + name;", "+            }", "+", "-            return parseProperties.parseProperties((String) map.get(name));", "+            return parseProperties.parseProperties((String) map.get(recursiveCallKey));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1c1878a05f0895974ee5ed94ad5e71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/ResolvePropertyMap.java", "commitBeforeChange": "9ce605cca7a222eb605121e5921409353b2d0d6e", "commitAfterChange": "9caa9ff4403ffbe97b9eae43d7cd79003319535b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getProperty(String name)", "signatureAfterChange": "     public Object getProperty(String name)", "diff": ["+", "+        // if the property has already been set to the name it will", "+        // have in the end, then return the existing value to ensure", "+        // properties remain immutable", "+        String masterPropertyName = name;", "+        if (prefix != null) {", "+            masterPropertyName = prefix + name;", "+        }", "+        Object masterProperty = master.getProperty(masterPropertyName);", "+        if (masterProperty != null) {", "+            return masterProperty;", "+        }", "+"]}]}