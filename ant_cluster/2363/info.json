{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7461a152a08d45fbb2716b09c99ddfb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "200f6a792e1a6f524f5cc1f11d85aedd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        final ClassLoader loader = getClass().getClassLoader();", "-        final DefaultTypeFactory factory = new DefaultTypeFactory( loader );", "-        factory.addNameClassMapping( \"my-type1\", MyType1.class.getName() );", "-        factory.addNameClassMapping( \"my-type2\", MyType2.class.getName() );", "-        getTypeManager().registerType( DataType.class, \"my-type1\", factory );", "-        getTypeManager().registerType( DataType.class, \"my-type2\", factory );", "+        registerType( DataType.class, \"my-type1\", MyType1.class );", "+        registerType( DataType.class, \"my-type2\", MyType2.class );", "-        final ConfigTest6 test = new ConfigTest6();", "+        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "-        m_configurer.configure( test, config, m_adaptor );", "+        m_configurer.configure( test, config, m_context );", "-        final ConfigTest6 expected = new ConfigTest6();", "+        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        assertEquals( expected, test );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fd931007d4bd8b7f20350d837d5241", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        final ClassLoader loader = getClass().getClassLoader();", "-        final DefaultTypeFactory factory = new DefaultTypeFactory( loader );", "-        factory.addNameClassMapping( \"my-type1\", MyType1.class.getName() );", "-        factory.addNameClassMapping( \"my-type2\", MyType2.class.getName() );", "-        getTypeManager().registerType( DataType.class, \"my-type1\", factory );", "-        getTypeManager().registerType( DataType.class, \"my-type2\", factory );", "+        registerType( DataType.class, \"my-type1\", MyType1.class );", "+        registerType( DataType.class, \"my-type2\", MyType2.class );", "-        final ConfigTest6 test = new ConfigTest6();", "+        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "-        m_configurer.configure( test, config, m_adaptor );", "+        m_configurer.configure( test, config, m_context );", "-        final ConfigTest6 expected = new ConfigTest6();", "+        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        assertEquals( expected, test );", "+    }"]}]}