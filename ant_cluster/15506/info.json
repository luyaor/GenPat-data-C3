{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "daa8396c844f2bf0b2ba24b9068ceabe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db46ec7cd51b38f26fa82bdccdaf324", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/RedirectorElement.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected void dieOnCircularReference(Stack stk, Project p)", "+    protected void dieOnCircularReference(Stack<Object> stk, Project p)", "-            Vector[] v = new Vector[]", "-                {inputFilterChains, outputFilterChains, errorFilterChains};", "-            for (int i = 0; i < v.length; i++) {", "-                if (v[i] != null) {", "-                    for (Iterator fci = v[i].iterator(); fci.hasNext();) {", "-                        FilterChain fc = (FilterChain) fci.next();", "+            @SuppressWarnings(\"unchecked\")", "+            final List<? extends List<FilterChain>> filterChainLists = Arrays", "+                    .<List<FilterChain>> asList(inputFilterChains, outputFilterChains,", "+                            errorFilterChains);", "+            for (List<FilterChain> filterChains : filterChainLists) {", "+                if (filterChains != null) {", "+                    for (FilterChain fc : filterChains) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbc73ee016f698c1e1bbf52b8ce19447", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Description.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static Vector findElementInTarget(Project project,                                               Target t, String name)", "signatureAfterChange": "      private static List<Task> findElementInTarget(Project project,                                               Target t, String name)", "diff": ["-    private static Vector findElementInTarget(Project project,", "+    private static List<Task> findElementInTarget(Project project,", "-        Task[] tasks = t.getTasks();", "-        Vector elems = new Vector();", "-        for (int i = 0; i < tasks.length; i++) {", "-            if (name.equals(tasks[i].getTaskName())) {", "-                elems.addElement(tasks[i]);", "+        final List<Task> elems = new ArrayList<Task>();", "+        for (Task task : t.getTasks()) {", "+            if (name.equals(task.getTaskName())) {", "+                elems.add(task);"]}]}