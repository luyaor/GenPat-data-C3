{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32717fb795a504d8e00ad2a790cae332", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a2b91f241613642bf8ab1040280be7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSLabel.java", "commitBeforeChange": "fb47a21d21a0c42e6cb789776d7a6c2d42df3202", "commitAfterChange": "753f33937fab2726887a2f1b0fb02d1db3827fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Commandline buildCmdLine()", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-        // Get the path to the soscmd(.exe)", "-        commandLine.setExecutable(getSosCommand());", "+", "-        // SOS server address is required", "-        if (getSosServerPath() == null) {", "-            throw new BuildException(\"sosserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_SOS_SERVER);", "-        commandLine.createArgument().setValue(getSosServerPath());", "-        // Login info is required", "-        if (getUsername() == null) {", "-            throw new BuildException(\"username attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_USERNAME);", "-        commandLine.createArgument().setValue(getUsername());", "-        // The SOS class knows that the SOS server needs the password flag,", "-        // even if there is no password ,so we send a \" \"", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PASSWORD);", "-        commandLine.createArgument().setValue(getPassword());", "-        // VSS Info is required", "-        if (getVssServerPath() == null) {", "-            throw new BuildException(\"vssserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_VSS_SERVER);", "-        commandLine.createArgument().setValue(getVssServerPath());", "-        // SS project path is required", "-        if (getProjectPath() == null) {", "-            throw new BuildException(\"projectpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PROJECT);", "-        commandLine.createArgument().setValue(getProjectPath());", "+", "+        getRequiredAttributes();", "+", "-", "-        // The following options are optional."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9382802161b59696f4abfff85b9fe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "cf2fcaff65289fb09eedaf4f3003aedb57a6aee1", "commitAfterChange": "1ddaea8055b242a63505cf20bc65708000ca5009", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute()", "diff": ["-    public void execute() throws BuildException {", "-        long savedMillis = millis;", "-", "-        if (file == null && filesets.size() == 0 && filelists.size() == 0) {", "-            throw", "-                new BuildException(\"Specify at least one source - a file, filelist or \"", "-                                   + \"a fileset.\");", "-", "-", "-        try {", "-            if (dateTime != null) {", "-                /*", "-                 * The initial version used DateFormat.SHORT for the", "-                 * time format, which ignores seconds.  If we want", "-                 * seconds as well, we need DateFormat.MEDIUM, which", "-                 * in turn would break all old build files.", "-                 *", "-                 * First try to parse with DateFormat.SHORT and if", "-                 * that fails with MEDIUM - throw an exception if both", "-                 * fail.", "-                 */", "-                DateFormat df =", "-                    DateFormat.getDateTimeInstance(DateFormat.SHORT,", "-                                                   DateFormat.SHORT,", "-                                                   Locale.US);", "-                try {", "-                    setMillis(df.parse(dateTime).getTime());", "-                } catch (ParseException pe) {", "-                    df =", "-                        DateFormat.getDateTimeInstance(DateFormat.SHORT,", "-                                                       DateFormat.MEDIUM,", "-                                                       Locale.US);", "-                        setMillis(df.parse(dateTime).getTime());", "-                    } catch (ParseException pe2) {", "-                        throw new BuildException(pe2.getMessage(), pe,", "-                                                 getLocation());", "-", "-                if (millis < 0) {", "-                    throw new BuildException(\"Date of \" + dateTime", "-                                             + \" results in negative \"", "-                                             + \"milliseconds value \"", "-                                             + \"relative to epoch \"", "-                                             + \"(January 1, 1970, \"", "-                                             + \"00:00:00 GMT).\");", "-                }", "-", "-            touch();", "-        } finally {", "-            millis = savedMillis;", "+    public void execute() {", "+        checkConfiguration();", "+        touch();", "+    }"]}]}