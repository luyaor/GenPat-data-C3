{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4ca9f1609e7715dfaccfeae81fcd7a8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5643697e52df5eecff5b3c3de4fa4ea9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "739311eb354d0463260406ec3642395e5483d3da", "commitAfterChange": "68fb37b1a2632d9da411ffa8d6b942fb8536fc82", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void moveGeneratedFile (File baseDir, File sourceBaseFile,                                     String classname,                                     RmicAdapter adapter)         throws BuildException", "signatureAfterChange": "     private void moveGeneratedFile (File baseDir, File sourceBaseFile,                                     String classname,                                     RmicAdapter adapter)         throws BuildException", "diff": ["-        String stubFileName = classname.replace('.', File.separatorChar)", "-            + adapter.getStubClassSuffix()+\".java\";", "-        File oldStubFile = new File(baseDir, stubFileName);", "-        File newStubFile = new File(sourceBaseFile, stubFileName);", "-        try {", "-            project.copyFile(oldStubFile, newStubFile, filtering);", "-            oldStubFile.delete();", "-        } catch (IOException ioe) {", "-            String msg = \"Failed to copy \" + oldStubFile + \" to \" +", "-                newStubFile + \" due to \" + ioe.getMessage();", "-            throw new BuildException(msg, ioe, location);", "-        }", "-        if (!\"1.2\".equals(stubVersion)) {", "-            String skelFileName = classname.replace('.', File.separatorChar)", "-                + adapter.getSkelClassSuffix()+\".java\";", "-            File oldSkelFile = new File(baseDir, skelFileName);", "-            File newSkelFile = new File(sourceBaseFile, skelFileName);", "+", "+        String classFileName = ", "+            classname.replace('.', File.separatorChar) + \".class\";", "+        String[] generatedFiles = ", "+            adapter.getMapper().mapFileName(classFileName);", "+", "+        for (int i=0; i<generatedFiles.length; i++) {", "+            String sourceFileName = ", "+                classFileName.substring(0, classFileName.length()-6) + \".java\";", "+            File oldFile = new File(baseDir, sourceFileName);", "+            File newFile = new File(sourceBaseFile, sourceFileName);", "-                project.copyFile(oldSkelFile, newSkelFile, filtering);", "-                oldSkelFile.delete();", "+                project.copyFile(oldFile, newFile, filtering);", "+                oldFile.delete();", "-                String msg = \"Failed to copy \" + oldSkelFile + \" to \" +", "-                    newSkelFile + \" due to \" + ioe.getMessage();", "+                String msg = \"Failed to copy \" + oldFile + \" to \" +", "+                    newFile + \" due to \" + ioe.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8736f05789089dd3748726a9efc3d342", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "948ce9bca757a323b0e07ce25a10a76f759898ba", "commitAfterChange": "003b013e23a3ddefa411b4340f52f43df5ea0870", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        if (token == null) {", "+            throw new BuildException(\"replace token must not be null\");", "+        }", "+", "+        if (src == null && dir == null) {", "+            throw new BuildException(\"Either the file or the dir attribute must be specified\");", "+        }", "+        ", "-        ", "-        if (src == null || token == null ) {", "-            project.log(\"File and token must not be null\");", "-            return;            ", "+", "+        if (src != null) {", "+            processFile(src);", "-        if (dest == null) {", "-            throw new BuildException(\"Error creating temp file.\");", "+        if (dir != null) {", "+\t    DirectoryScanner ds = super.getDirectoryScanner(dir);", "+            String[] srcs = ds.getIncludedFiles();", "+", "+            for(int i=0; i<srcs.length; i++) {", "+                File file = new File(dir,srcs[i]); ", "+                processFile(file);", "+            }", "-                ", "+    }", "-            BufferedWriter bw = new BufferedWriter(new FileWriter(dest));", "-            dest.renameTo(src);"]}]}