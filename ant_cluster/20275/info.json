{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d834829abe396c056ab49b091d7cc3cc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0991384c645a6917a86fcfb1e66ce0e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java", "commitBeforeChange": "0e949f7027d4c0e0bd7aaad33cdbf45939a9a761", "commitAfterChange": "0f4ea3d22b1f1b89a5a4e2619e685be3134efa78", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void configure( Configuration configuration ) throws ConfigurationException", "signatureAfterChange": "      protected final String getClassname()", "diff": ["-     */", "-    public void configure( Configuration configuration ) throws ConfigurationException", "-        m_typeDef = createTypeDefinition();", "-        // Configure attributes", "-        final String[] attrs = configuration.getAttributeNames();", "-        for( int i = 0; i < attrs.length; i++ )", "-        {", "-            final String name = attrs[ i ];", "-            final String value = configuration.getAttribute( name );", "-            if( name.equalsIgnoreCase( \"lib\" ) )", "-            {", "-                m_lib = (File)convert( File.class, value );", "-            }", "-            else", "-            {", "-                configure( m_typeDef, name, value );", "-            }", "-        }", "-        // Configure nested elements", "-        final Configuration[] elements = configuration.getChildren();", "-        for( int i = 0; i < elements.length; i++ )", "-        {", "-            Configuration element = elements[ i ];", "-            configure( m_typeDef, element );", "-        }", "+", "+    protected final String getClassname()", "+    {", "+        return m_classname;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b2aa17dab392246780626bbc9ce68b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/Property.java", "commitBeforeChange": "4d3eebbdb62bd31f6577324ebed20ee1a267028a", "commitAfterChange": "939efc95cd3110f457e05cad08486548ce5aba2e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "     public void set( final DataType value )         throws TaskException", "diff": ["-    public void configure( final Configuration configuration )", "-        throws ConfigurationException", "-    {", "-        final String[] attributes = configuration.getAttributeNames();", "-        for( int i = 0; i < attributes.length; i++ )", "-        {", "-            final String name = attributes[ i ];", "-            final String value = configuration.getAttribute( name );", "-            configure( this, name, value );", "-        }", "-", "-        final Configuration[] children = configuration.getChildren();", "-        for( int i = 0; i < children.length; i++ )", "-        {", "-            try", "-            {", "-                final String typeName = children[ i ].getName();", "-                final DataType value = (DataType)newInstance( DataType.class, typeName );", "-                configure( value, children[ i ] );", "-                setValue( value );", "-            }", "-            catch( final Exception e )", "-            {", "-                final String message = REZ.getString( \"property.no-set.error\" );", "-                throw new ConfigurationException( message, e );", "-            }", "-        }", "-    }", "+     */", "+    public void set( final DataType value )", "+        throws TaskException", "+    {", "+        setValue( value );", "+    }"]}]}