{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de5a914db16679b7a7275233449459a9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "391bb0d57c5dea689532f8874ef90d3c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ParallelTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testDemux()", "signatureAfterChange": "     @Test     public void testDemux()", "diff": ["+    @Test", "-        Project p = getProject();", "+        Project p = buildRule.getProject();", "-        PrintStream out = System.out;", "-        PrintStream err = System.err;", "-        System.setOut(new PrintStream(new DemuxOutputStream(p, false)));", "-        System.setErr(new PrintStream(new DemuxOutputStream(p, true)));", "+        synchronized (System.out) {", "+            PrintStream out = System.out;", "+            PrintStream err = System.err;", "+            System.setOut(new PrintStream(new DemuxOutputStream(p, false)));", "+            System.setErr(new PrintStream(new DemuxOutputStream(p, true)));", "-        try {", "-            p.executeTarget(\"testDemux\");", "-        } finally {", "-            System.setOut(out);", "-            System.setErr(err);", "+            try {", "+                p.executeTarget(\"testDemux\");", "+            } finally {", "+                System.setOut(out);", "+                System.setErr(err);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9cbbeabc998172b4c002212bdfee03d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/UnknownElementTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void XtestTaskFinishedEvent()", "signatureAfterChange": "     @Test     @Ignore(\"Previously disabled through naming convention\")     public void XtestTaskFinishedEvent()", "diff": ["+    @Test", "+    @Ignore(\"Previously disabled through naming convention\")", "-        getProject().addBuildListener(new BuildListener() {", "+        buildRule.getProject().addBuildListener(new BuildListener() {", "-        executeTarget(\"echo\");", "+        buildRule.executeTarget(\"echo\");"]}]}