{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61c44dc0724ed0204c132291d6d33fca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a8c320a5abe540e6d5be11a216336c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConcatTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testfixlastline()         throws IOException", "signatureAfterChange": "     @Test     public void testfixlastline()         throws IOException", "diff": ["+    @Test", "-        expectFileContains(", "-            \"testfixlastline\", \"concat.line4\",", "-            \"end of line\" + System.getProperty(\"line.separator\")", "-            + \"This has\");", "+        buildRule.executeTarget(\"testfixlastline\");", "+        assertContains(\"end of line\" + System.getProperty(\"line.separator\") + \"This has\",", "+                FileUtilities.getFileContents(buildRule.getProject(), \"concat.line4\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adb3c42a3b777a72ac7a1754ba5c586f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConcatTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testfixlastlineeol()         throws IOException", "signatureAfterChange": "     @Test     public void testfixlastlineeol()         throws IOException", "diff": ["+    @Test", "-        expectFileContains(", "-            \"testfixlastlineeol\", \"concat.linecr\",", "-            \"end of line\\rThis has\");", "+        buildRule.executeTarget(\"testfixlastlineeol\");", "+        assertContains(\"end of line\\rThis has\", FileUtilities.getFileContents(buildRule.getProject(), \"concat.linecr\"));", "+    }"]}]}