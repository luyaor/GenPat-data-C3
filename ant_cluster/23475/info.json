{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9c38342bce5e7a78025ef9505876222", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fca9f77c9dafb3ffff7ce2119e9faa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "9936be269812cd80ee92432d1ccf3bfb69537e5a", "commitAfterChange": "56e61f039f54d015e60e3e2ecaaeaa8e666d8cef", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setParent(ClassLoader parent)", "signatureAfterChange": "     private void setParent(ClassLoader parent)", "diff": ["-    public void setParent(ClassLoader parent) {", "+    private void setParent(ClassLoader parent) {", "+        // ClassLoader.parent is private and there is", "+        // no accessor to set it, there is an accessor", "+        // to get it, but it is final.", "+        // This method setParent sets the parent of", "+        // this classloader, and that is the way that the", "+        // class behaves - so use a bit of reflection", "+        // to set the field.", "+        if (parentField == null) {", "+            return; // Unable to get access to the parent field", "+        }", "+        try {", "+            parentField.set(this, parent);", "+        } catch (Throwable t) {", "+            // Ignore - unable to set the parent", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6e311979f8ca9c19dfa90a17a4327e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "986b213cec2bfff8af1e561c43211c46f84f11cd", "commitAfterChange": "65c82879ee9fbf59f8c95ac2fdd23051297f7463", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      protected XSLTLiaison getLiaison()", "signatureAfterChange": "      protected XSLTLiaison getLiaison()", "diff": ["-                        resolveProcessor(\"xslp\");", "+                        resolveProcessor(\"xalan\");", "-                            resolveProcessor(\"xalan\");", "+                            resolveProcessor(\"adaptx\");", "-                            e3.printStackTrace();", "-                            e2.printStackTrace();", "-                            throw new BuildException(e1);", "+                            try {", "+                                resolveProcessor(\"xslp\");", "+                            } catch (Throwable e4) {", "+                                e4.printStackTrace();", "+                                e3.printStackTrace();", "+                                e2.printStackTrace();", "+                                throw new BuildException(e1);", "+                            }"]}]}