{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fc38f9997c2962f342d1296fc4a8ed1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2dc63c8ec8b0483ae438aa7a697e34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarFile, Hashtable files,                             String publicId) throws BuildException", "signatureAfterChange": "      protected void writeJar(String baseName, File jarfile, Hashtable ejbFiles, String publicId)  \tthrows BuildException", "diff": ["+", "+    protected void writeJar(String baseName, File jarfile, Hashtable ejbFiles, String publicId) ", "+\tthrows BuildException {", "+", "+\t// create the generic jar first", "+\tFile genericJarFile = super.getVendorOutputJarFile(baseName);\t", "+\tsuper.writeJar(baseName, genericJarFile, ejbFiles, publicId);", "+\t     ", "+\t// GenIC call on generic jar", "+\taddGenICGeneratedFiles(genericJarFile, ejbFiles);", "+", "+\t// create the real jar", "+\tsuper.writeJar(baseName, getVendorOutputJarFile(baseName), ejbFiles, publicId);", "+", "+\tif ( !keepgeneric ) {", "+\t    log(\"Deleting generic JAR \" + genericJarFile.toString(), Project.MSG_VERBOSE);", "+\t    genericJarFile.delete();\t     ", "+\t}", "+    }", "-     */", "-    protected void writeJar(String baseName, File jarFile, Hashtable files,", "-                            String publicId) throws BuildException {", "-        // need to create a generic jar first.", "-        File genericJarFile = super.getVendorOutputJarFile(baseName);", "-", "-        super.writeJar(baseName, genericJarFile, files, publicId);", "-", "-        // todo ? if (alwaysRebuild || isRebuildRequired(genericJarFile, jarFile))", "-        buildJOnASJar(baseName, genericJarFile, jarFile, files, publicId);", "-", "-        if (!keepGeneric) {", "-            log(\"deleting generic jar \" + genericJarFile.toString(),", "-                Project.MSG_VERBOSE);", "-            genericJarFile.delete();", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a905bf5b16a9e513358d0b555cb888f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "8d02bfc707ffeb41a31153bba6adbccebb06106b", "commitAfterChange": "764d1e985b968dda43e19fd1db74f47d564f1f81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\tFile baseFile = project.resolveFile(base);", "+        File baseFile = project.resolveFile(base);", "-\t// XXX", "-\t// need to provide an input stream that we read in from!", "+        // XXX", "+        // need to provide an input stream that we read in from!", "-\tsun.rmi.rmic.Main compiler = new sun.rmi.rmic.Main(System.out, \"rmic\");", "-  \t    int argCount = 5;", "+        sun.rmi.rmic.Main compiler = new sun.rmi.rmic.Main(System.out, \"rmic\");", "+            int argCount = 5;", "-        \tString stubFileName = classname.replace('.', '/') + \"_Stub.java\";", "+                String stubFileName = classname.replace('.', '/') + \"_Stub.java\";", "-                project.copyFile(oldStubFile, newStubFile);", "+                project.copyFile(oldStubFile, newStubFile, filtering);", "-                String msg = \"Failed to copy \" + oldStubFile + \" to \" + ", "+                String msg = \"Failed to copy \" + oldStubFile + \" to \" +", "-            \t    project.copyFile(oldSkelFile, newSkelFile);", "-            \t    oldSkelFile.delete();", "+                    project.copyFile(oldSkelFile, newSkelFile, filtering);", "+                    oldSkelFile.delete();", "-                    String msg = \"Failed to copy \" + oldSkelFile + \" to \" + ", "+                    String msg = \"Failed to copy \" + oldSkelFile + \" to \" +"]}]}