{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6a0381037a43fc39b6faaada5133864", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767b26298ec48190d107dbcd4e08277c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "a1d12934e3aae0967e603dfad26253dab108be77", "commitAfterChange": "6af38183767fe6db8bcada1ad9d50a5f571c82f7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["+                    Class junit4TestAdapterCacheClass = null;", "+                        junit4TestAdapterCacheClass = Class.forName(\"org.apache.tools.ant.taskdefs.optional.junit.CustomJUnit4TestAdapterCache\");", "-                            formalParams = new Class[] {Class.class, JUnit4TestAdapterCache.class};", "-                            actualParams = new Object[] {testClass, CustomJUnit4TestAdapterCache.getInstance()};", "+                            formalParams = new Class[] {Class.class, Class.forName(\"junit.framework.JUnit4TestAdapterCache\")};", "+                            actualParams = new Object[] {testClass, junit4TestAdapterCacheClass.getMethod(\"getInstance\").invoke(null)};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83f09505fd2fb322d469901d0259fad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void start(String[] args)", "signatureAfterChange": "     private void start(String[] args)", "diff": ["+            System.out.println(\"Library URL is \" + libraryURL);", "-            config.setSystemConfigArea(new URL(antHome, \"conf/\"));", "+            if (antHome.getProtocol().equals(\"file\")) {", "+                File systemConfigArea = new File(antHome.getFile(), \"conf\");", "+                config.setSystemConfigArea(systemConfigArea);", "+            }", "-            config.setUserConfigArea(InitUtils.getFileURL(userConfigArea));", "+            config.setUserConfigArea(userConfigArea);", "-            URL commonJarLib = new URL(libraryURL, \"common\");", "+            URL commonJarLib = new URL(libraryURL, \"common/\");", "-                 = new URLClassLoader(LoaderUtils.getLoaderURLs(commonJarLib,", "+                 = new URLClassLoader(LoaderUtils.getLocationURLs(commonJarLib,", "-                 = LoaderUtils.getLoaderURLs(new URL(libraryURL, \"parser\"),", "+                 = LoaderUtils.getLocationURLs(new URL(libraryURL, \"parser/\"),", "-                 = LoaderUtils.getLoaderURLs(new URL(libraryURL, \"antcore\"),", "+                 = LoaderUtils.getLocationURLs(new URL(libraryURL, \"antcore/\"),", "-            URL cliJarLib = new URL(libraryURL, \"cli\");", "+            URL cliJarLib = new URL(libraryURL, \"cli/\");", "-                 = new URLClassLoader(LoaderUtils.getLoaderURLs(cliJarLib,", "+                 = new URLClassLoader(LoaderUtils.getLocationURLs(cliJarLib,"]}]}