{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f09f4c05b02141343b798f7c7d326a24", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57336d5e4cafc4fddc763fd0042b8f21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["-        Vector<ResourceCollection> vfss = new Vector<ResourceCollection>();", "+        final Vector<ResourceCollection> vfss = new Vector<ResourceCollection>();", "-            FileSet fs = (FileSet) getImplicitFileSet().clone();", "+            final FileSet fs = (FileSet) getImplicitFileSet().clone();", "-            ResourceCollection rc = resources.elementAt(i);", "+            final ResourceCollection rc = resources.elementAt(i);", "-        ResourceCollection[] fss = new ResourceCollection[vfss.size()];", "+        final ResourceCollection[] fss = new ResourceCollection[vfss.size()];", "-            ArchiveState state = getResourcesToAdd(fss, zipFile, false);", "+            final ArchiveState state = getResourcesToAdd(fss, zipFile, false);", "-            File parent = zipFile.getParentFile();", "+            final File parent = zipFile.getParentFile();", "-            Resource[][] addThem = state.getResourcesToAdd();", "+            final Resource[][] addThem = state.getResourcesToAdd();", "-            String action = doUpdate ? \"Updating \" : \"Building \";", "+            final String action = doUpdate ? \"Updating \" : \"Building \";", "-                    ZipFileSet oldFiles = new ZipFileSet();", "+                    final ZipFileSet oldFiles = new ZipFileSet();", "-                        PatternSet.NameEntry ne = oldFiles.createExclude();", "+                        final PatternSet.NameEntry ne = oldFiles.createExclude();", "-                    DirectoryScanner ds =", "+                    final DirectoryScanner ds =", "-                    String[] f = ds.getIncludedFiles();", "+                    final String[] f = ds.getIncludedFiles();", "-                        String[] d = ds.getIncludedDirectories();", "-                        Resource[] dr = new Resource[d.length];", "+                        final String[] d = ds.getIncludedDirectories();", "+                        final Resource[] dr = new Resource[d.length];", "-                        Resource[] tmp = r;", "+                        final Resource[] tmp = r;", "-        } catch (IOException ioe) {", "+        } catch (final IOException ioe) {", "-                } catch (IOException e) {", "+                } catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afcd2df5b81eaca9160bbebad0a5d648", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(final String[] args)", "diff": ["-    private void processArgs(String[] args) {", "+    private void processArgs(final String[] args) {", "-        ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "-        ", "+        final ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "+", "-            String arg = args[i];", "+            final String arg = args[i];", "-                    File logFile = new File(args[i + 1]);", "+                    final File logFile = new File(args[i + 1]);", "-                } catch (IOException ioe) {", "-                    String msg = \"Cannot write on the specified log file. \"", "+                } catch (final IOException ioe) {", "+                    final String msg = \"Cannot write on the specified log file. \"", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    String msg = \"You must specify a log file when \"", "+                } catch (final ArrayIndexOutOfBoundsException aioobe) {", "+                    final String msg = \"You must specify a log file when \"", "-                String msg = \"Ant's Main method is being handed \"", "+                final String msg = \"Ant's Main method is being handed \"", "-                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "-                    int newI = processor.readArguments(args, i);", "+                for (final ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    final int newI = processor.readArguments(args, i);", "-                    String msg = \"Unknown argument: \" + arg;", "+                    final String msg = \"Unknown argument: \" + arg;", "-                    Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "+                    final Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "-                        ProjectHelper helper = it.next();", "+                        final ProjectHelper helper = it.next();", "-                Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "+                final Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "-                    ProjectHelper helper = it.next();", "+                    final ProjectHelper helper = it.next();", "-            File whatYouMeant = new File(buildFile, \"build.xml\");", "+            final File whatYouMeant = new File(buildFile, \"build.xml\");"]}]}