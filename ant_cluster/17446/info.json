{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b960cb9bff495388cf2b884811b660b9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d3b3b4aab6e869bd8d43a3f46ebac92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void loadLib(String libLocation, boolean importAll,                         boolean autoImport)          throws ExecutionException", "signatureAfterChange": "     public void loadLib(String libLocation, boolean importAll,                         boolean autoImport)          throws ExecutionException", "diff": ["-            libManager.configLibraries(frame.getInitConfig(), librarySpecs,", "-                antLibraries, libPathsMap);", "+            Map newLibraries = libManager.configLibraries(frame.getInitConfig(),", "+                librarySpecs, antLibraries, libPathsMap);", "-            Iterator i = librarySpecs.keySet().iterator();", "+            antLibraries.putAll(newLibraries);", "+            Iterator i = antLibraries.keySet().iterator();", "-                boolean doAuto = autoImport ", "-                    && libraryId.startsWith(Constants.ANT_LIB_PREFIX);", "+                boolean doAuto = autoImport", "+                     && libraryId.startsWith(Constants.ANT_LIB_PREFIX);", "+                addAspects((AntLibrary) antLibraries.get(libraryId));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880054488d12adda39254adb3e23ceab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfig.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void merge(AntConfig otherConfig)", "signatureAfterChange": "     public void merge(AntConfig otherConfig)", "diff": ["-        // merge by", "-        List currentLibraryLocations = libraryLocations;", "-        libraryLocations = new ArrayList();", "-        libraryLocations.addAll(otherConfig.libraryLocations);", "-        libraryLocations.addAll(currentLibraryLocations);", "-", "-        Iterator i = otherConfig.libPaths.keySet().iterator();", "-        while (i.hasNext()) {", "-            String libraryId = (String) i.next();", "-            List currentList = getLibraryPathList(libraryId);", "-            List combined = new ArrayList();", "-            combined.addAll(otherConfig.getLibraryPathList(libraryId));", "-            combined.addAll(currentList);", "-            libPaths.put(libraryId, combined);", "-        }", "-", "-    }", "+        tasks.addAll(otherConfig.tasks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a692bb00a4101c41a87ee4bf044347", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected ExecutionFrame(Map standardLibs, InitConfig initConfig,                              AntConfig config) throws ConfigException", "signatureAfterChange": "     protected ExecutionFrame(Map standardLibs, InitConfig initConfig,                              AntConfig config) throws ExecutionException", "diff": ["-                             AntConfig config) throws ConfigException {", "+                             AntConfig config) throws ExecutionException {", "-", "-        antLibraries = new HashMap(standardLibs);", "-", "-        try {", "-            // go through the libraries and import all standard ant libraries", "-            for (Iterator i = antLibraries.keySet().iterator(); i.hasNext(); ) {", "-                String libraryId = (String)i.next();", "-                if (libraryId.startsWith(ANT_LIB_PREFIX)) {", "-                    // standard library - import whole library", "-                    importLibrary(libraryId);", "-                }", "-            }", "-        } catch (ExecutionException e) {", "-            throw new ConfigException(e);", "-        }", "-", "+        componentManager.setStandardLibraries(standardLibs);"]}]}