{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5e320e76e4d54ce62782572dbcd11da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39983d4331c0f3745d24accc2dbeb4f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "de47901582d1675358fd4b55e68c0fdc241dfd53", "commitAfterChange": "b5b99c769a21d3602ee35948cf004925f03464ba", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        Message savedMessage = message;", "+        Vector savedFiles = (Vector) files.clone();", "-            if( encoding.equals( MIME ) || ( encoding.equals( AUTO ) && !autoFound ) )", "+            if( encoding.equals( MIME ) ", "+                || ( encoding.equals( AUTO ) && !autoFound ) )", "-                    mailer = (Mailer)Class.forName( \"org.apache.tools.ant.taskdefs.email.MimeMailer\" ).newInstance();", "+                    mailer = ", "+                        (Mailer) Class.forName( \"org.apache.tools.ant.taskdefs.email.MimeMailer\" )", "+                        .newInstance();", "-            if( encoding.equals( UU ) || ( encoding.equals( AUTO ) && !autoFound ) )", "+            if( encoding.equals( UU ) ", "+                || ( encoding.equals( AUTO ) && !autoFound ) )", "-                    mailer = (Mailer)Class.forName( \"org.apache.tools.ant.taskdefs.email.UUMailer\" ).newInstance();", "+                    mailer = ", "+                        (Mailer)Class.forName( \"org.apache.tools.ant.taskdefs.email.UUMailer\" )", "+                        .newInstance();", "-            if( encoding.equals( PLAIN ) || ( encoding.equals( AUTO ) && !autoFound ) )", "+            if( encoding.equals( PLAIN ) ", "+                || ( encoding.equals( AUTO ) && !autoFound ) )", "-                throw new BuildException( \"Failed to initialise encoding: \" + encoding );", "+                throw new BuildException( \"Failed to initialise encoding: \" ", "+                                          + encoding );", "-                throw new BuildException( \"At least one of to,cc or bcc must be supplied\" );", "+                throw new BuildException( \"At least one of to,cc or bcc must \"", "+                                          + \"be supplied\" );", "-                    throw new BuildException( \"The mime type can only be specified in one location\" );", "+                    throw new BuildException( \"The mime type can only be \"", "+                                              + \"specified in one location\" );", "-            log( \"Sent email with \" + count + \" attachment\" + ( count == 1?\"\":\"s\" ), Project.MSG_INFO );", "+            log( \"Sent email with \" + count + \" attachment\" ", "+                 + ( count == 1?\"\":\"s\" ), Project.MSG_INFO );", "+        } finally {", "+            message = savedMessage;", "+            files = savedFiles;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55065dc4a886caf9207dd683961adae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java", "commitBeforeChange": "0dbe0a8b0c5ce8ec9fbe5e3fb122cf73674308f3", "commitAfterChange": "07680bb2e3534cad36a726dba2f4cb06fd9ec683", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Element createDocument()", "signatureAfterChange": "     protected Element createDocument()", "diff": ["+            File file = files[i];", "-                log(\"Parsing file: '\" + files[i] + \"'\", Project.MSG_VERBOSE);", "-                //XXX there seems to be a bug in xerces 1.3.0 that doesn't like file object", "-                // will investigate later. It does not use the given directory but", "-                // the vm dir instead ? Works fine with crimson.", "-                Document testsuiteDoc", "-                    = builder.parse(\"file:///\" + files[i].getAbsolutePath());", "-                Element elem = testsuiteDoc.getDocumentElement();", "-                // make sure that this is REALLY a testsuite.", "-                if (TESTSUITE.equals(elem.getNodeName())) {", "-                    addTestSuite(rootElement, elem);", "-                    generatedId++;", "+                log(\"Parsing file: '\" + file + \"'\", Project.MSG_VERBOSE);", "+                if(file.length()>0) {", "+                    Document testsuiteDoc", "+                            = builder.parse(\"file:///\" + file.getAbsolutePath());", "+                    Element elem = testsuiteDoc.getDocumentElement();", "+                    // make sure that this is REALLY a testsuite.", "+                    if (TESTSUITE.equals(elem.getNodeName())) {", "+                        addTestSuite(rootElement, elem);", "+                        generatedId++;", "+                    } else {", "+                        //wrong root element name", "+                        // issue a warning.", "+                        log(\"the file \" + file", "+                                + WARNING_INVALID_ROOT_ELEMENT,", "+                                Project.MSG_WARN);", "+                    }", "-                    // issue a warning.", "-                    log(\"the file \" + files[i]", "-                        + \" is not a valid testsuite XML document\",", "-                        Project.MSG_WARN);", "+                    log(\"the file \" + file", "+                            + WARNING_EMPTY_FILE,", "+                            Project.MSG_WARN);", "-                log(\"The file \" + files[i] + \" is not a valid XML document. \"", "-                    + \"It is possibly corrupted.\", Project.MSG_WARN);", "+                log(\"The file \" + file + WARNING_IS_POSSIBLY_CORRUPTED, Project.MSG_WARN);", "-                log(\"Error while accessing file \" + files[i] + \": \"", "+                log(\"Error while accessing file \" + file + \": \""]}]}