{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed4476a8f6900d979b446c20f85872e1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c815e6030e76b1244860dee128b1200f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "d16eabe443005885baa17713017934136b8b22cf", "commitAfterChange": "6d857af2bf5078df3560a1092405b8f3245abb19", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void addCommandsToList(final ListIterator listIterator)", "signatureAfterChange": "     private void addCommandsToList(final ListIterator listIterator)", "diff": ["-        if (haveBootclasspath(true)) {", "-            listIterator.add(\"-Xbootclasspath:\" + bootclasspath.toString());", "-        } else if (cloneBootclasspath()) {", "-            listIterator.add(\"-Xbootclasspath:\"", "-                             + Path.systemBootClasspath.toString());", "+        Path bcp = calculateBootclasspath(true);", "+        if (bcp.size() > 0) {", "+            listIterator.add(\"-Xbootclasspath:\" + bcp.toString());", "-", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2d66f4d22722f3a294e720887550cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "11997bb5b8f7ad45ff7bbf461311325e0003e014", "commitAfterChange": "6a65262ae702364e448ed94837199c40eac8eefd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Path getCompileClasspath()", "signatureAfterChange": "     protected Path getCompileClasspath()", "diff": ["-        if (attributes.getClasspath() == null) {", "-            if (attributes.getIncludeantruntime()) {", "-                classpath.addExisting(Path.systemClasspath);", "-            }", "+        ", "+        Path cp = attributes.getClasspath();", "+        if (cp == null) {", "+            cp = new Path(attributes.getProject());", "+        }", "+        if (attributes.getIncludeantruntime()) {", "+            classpath.addExisting(cp.concatSystemClasspath(\"last\"));", "-            if (attributes.getIncludeantruntime()) {", "-                classpath.addExisting(attributes.getClasspath()", "-                                      .concatSystemClasspath(\"last\"));", "-            } else {", "-                classpath.addExisting(attributes.getClasspath()", "-                                      .concatSystemClasspath(\"ignore\"));", "-            }", "+            classpath.addExisting(cp.concatSystemClasspath(\"ignore\"));"]}]}