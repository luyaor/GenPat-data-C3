{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "461421fa960e69cdaa57b3f0a21b63ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69acce661bb6c1502f8387e7a6cb782a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "a8814a50b17bf53d80ecae3e5e58d56979d9366f", "commitAfterChange": "72252a914825c9fb084ea32f3b59f32442ee47ba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void execute()              throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["+        if(protocol!=null) {", "+            command.addArgument(\"/protocol:\"+protocol);", "+        }", "+        if(parseableErrors) {", "+            command.addArgument(\"/parseableErrors\");", "+        }", "+        long destLastModified = -1;", "-            if (srcFile.exists() && destFile.exists()", "-                && srcFile.lastModified() <= destFile.lastModified()) {", "+            if ( destFile.exists() ) {", "+                destLastModified = destFile.lastModified();", "+            }", "+            if (srcFile.exists()", "+                && srcFile.lastModified() <= destLastModified) {", "+        //add in any extra files.", "+        //this is an error in mono, but we do not warn on it as they may fix that outside", "+        //the ant build cycle.", "+        Iterator it=schemas.iterator();", "+        while ( it.hasNext() ) {", "+            Schema schema = (Schema) it.next();", "+            //get date, mark for a rebuild if we are newer", "+            long schemaTimestamp;", "+            schemaTimestamp=schema.getTimestamp();", "+            if(schemaTimestamp>destLastModified) {", "+                rebuild=true;", "+            }", "+            command.addArgument(schema.evaluate());", "+        }", "+        //conditionally compile"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d882ff00428ef62273acc6e0b94401c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/ElementNavigator.java", "commitBeforeChange": "113069f80d96fff735116abb27b70951799106fc", "commitAfterChange": "9996345251656eb38c5326fa7e5f394bc5f43882", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public boolean eventPosted(EventObject event)", "signatureAfterChange": "         public boolean eventPosted(EventObject event)", "diff": ["+            else if(event instanceof RefreshDisplayEvent && model != null) {", "+                _tree.updateUI();", "+            }", "+            }", "+            else if(event instanceof DeleteElementEvent && model != null) {", "+                _tree.updateUI();", "-                    _tree.setModel(new ElementTreeModel(project));", "-                    _selections = new ElementTreeSelectionModel();", "-                    _selections.addTreeSelectionListener(", "-                        new SelectionForwarder());", "-                    _tree.setSelectionModel(_selections);", "+                    boolean updateModel = false;", "+                    TreeModel testModel = _tree.getModel();", "+                    ", "+                    // Set the model if's not an ElementTreeModel", "+                    if (testModel instanceof ElementTreeModel) {", "+                        ElementTreeModel etm = (ElementTreeModel) testModel;", "+                        ACSProjectElement currentProject = ", "+                            (ACSProjectElement) etm.getRoot();", "+                        ", "+                        // Set the model if the project is wrong", "+                        if (currentProject != project) {", "+                            updateModel = true;", "+                        }", "+                    } else {", "+                        updateModel = true;", "+                    }", "+", "+                    // Should we update the tree model", "+                    if (updateModel) {", "+                        _tree.setModel(new ElementTreeModel(project));", "+                        _selections = new ElementTreeSelectionModel();", "+                        _selections.addTreeSelectionListener(", "+                            new SelectionForwarder());", "+                        _tree.setSelectionModel(_selections);", "+                    }"]}]}