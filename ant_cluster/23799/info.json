{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a54672fa6a59eab976423ab488c0717", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088d8436f852dad78e72319b6b1ef075", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "5c1e42a954c9a3212c5263e1fdb012ab48515807", "commitAfterChange": "3c6126f29bd3b99708ba5fc606c9afca2c3384a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (baseDir == null) {", "-            throw new BuildException(\"basedir attribute must be set!\", ", "-                                     location);", "-        }", "-        if (!baseDir.exists()) {", "-            throw new BuildException(\"basedir does not exist!\", location);", "+        if (baseDir != null) {", "+            if (!baseDir.exists()) {", "+                throw new BuildException(\"basedir does not exist!\", location);", "+            }", "+            ", "+            // add the main fileset to the list of filesets to process.", "+            TarFileSet mainFileSet = new TarFileSet(fileset);", "+            mainFileSet.setDir(baseDir);", "+            mainFileSet.setDefaultexcludes(useDefaultExcludes);", "+            filesets.addElement(mainFileSet);", "-        DirectoryScanner ds = super.getDirectoryScanner(baseDir);", "+        // check if tr is out of date with respect to each", "+        // fileset", "+        boolean upToDate = true;", "+        for (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "+            TarFileSet fs = (TarFileSet)e.nextElement();", "+            String[] files = fs.getFiles(project);", "+            ", "+            if (!archiveIsUpToDate(files)) {", "+                upToDate = false;", "+                break;", "+            }", "+        }", "-        String[] files = ds.getIncludedFiles();", "-", "-        if (archiveIsUpToDate(files)) {", "+        if (upToDate) {", "-", "-            for (int i = 0; i < files.length; i++) {", "-                File f = new File(baseDir,files[i]);", "-                String name = files[i].replace(File.separatorChar,'/');", "-                tarFile(f, tOut, name);", "+        ", "+            for (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "+                TarFileSet fs = (TarFileSet)e.nextElement();", "+                String[] files = fs.getFiles(project);", "+                for (int i = 0; i < files.length; i++) {", "+                    File f = new File(baseDir,files[i]);", "+                    String name = files[i].replace(File.separatorChar,'/');", "+                    tarFile(f, tOut, name, fs);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54623caa096668fda69f94846c38f059", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient.java", "commitBeforeChange": "de5c81da9e9750acda2fa942394aef201e6b4b7c", "commitAfterChange": "fc42e57c2cf638019efdfadb5592b3ba4c4c21da", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException ", "-    {", "-        try", "-        {", "-            if ( ejbjarfile == null ||", "-                 ejbjarfile.isDirectory()) ", "-            {", "-                throw new BuildException(\"invalid ejb jar file.\");", "+    public void execute() throws BuildException {", "+        if ( ejbjarfile == null ||", "+             ejbjarfile.isDirectory()) {", "+            throw new BuildException(\"invalid ejb jar file.\");", "+        } // end of if ()", "+", "+        if ( clientjarfile == null ||", "+             clientjarfile.isDirectory()) {", "+            log(\"invalid or missing client jar file.\",Project.MSG_VERBOSE);", "+            String ejbjarname = ejbjarfile.getAbsolutePath();", "+            //clientname = ejbjarfile+client.jar", "+            String clientname = ejbjarname.substring(0,ejbjarname.lastIndexOf(\".\"));", "+            clientname = clientname + \"client.jar\";", "+            clientjarfile = new File(clientname);", "+", "+        } // end of if ()", "+", "+        if ( mode == null ) {", "+            log(\"mode is null default mode  is java\");", "+            setMode(JAVA_MODE);", "+        } // end of if ()", "+", "+        log(\"client jar file is \" + clientjarfile);", "+", "+        if ( mode.equalsIgnoreCase(FORK_MODE)) {", "+            executeFork();", "+        } // end of if ()", "+        else {            ", "+            executeJava();", "+        } // end of else                       ", "+    }", "-            if ( clientjarfile == null ||", "-                 clientjarfile.isDirectory()) ", "-            {", "-                log(\"invalid or missing client jar file.\",Project.MSG_VERBOSE);", "-                String ejbjarname = ejbjarfile.getAbsolutePath();", "-                //clientname = ejbjarfile+client.jar", "-                String clientname = ejbjarname.substring(0,ejbjarname.lastIndexOf(\".\"));", "-                clientname = clientname + \"client.jar\";", "-                clientjarfile = new File(clientname);", "-            } // end of if ()", "-            log(\"client jar file is \" + clientjarfile);", "-            if ( debug ) ", "-            {", "-        catch (Exception e) ", "-        {"]}]}