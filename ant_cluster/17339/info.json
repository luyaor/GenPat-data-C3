{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c1bb3fe01fee8b715e16ca4ba8e85b2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68ca1b1093dc7d98de1fdd35bc8e2e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void overrideProperties() throws BuildException", "signatureAfterChange": "     private void overrideProperties() throws BuildException", "diff": ["-        Set set = new HashSet();", "+        Set<String> set = new HashSet<String>();", "-            Property p = (Property) properties.get(i);", "+            Property p = properties.get(i);", "-        Enumeration e = properties.elements();", "+        Enumeration<Property> e = properties.elements();", "-            Property p = (Property) e.nextElement();", "+            Property p = e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9770c302218e741f7724b7830bdab85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void updateRestrictedDefinition(AntTypeDefinition def)", "signatureAfterChange": "     private void updateRestrictedDefinition(AntTypeDefinition def)", "diff": ["-        List list = null;", "+        List<AntTypeDefinition> list = null;", "-            list = (List) restrictedDefinitions.get(name);", "+            list = restrictedDefinitions.get(name);", "-                list = new ArrayList();", "+                list = new ArrayList<AntTypeDefinition>();", "-            for (Iterator i = list.iterator(); i.hasNext();) {", "-                AntTypeDefinition current = (AntTypeDefinition) i.next();", "+            for (Iterator<AntTypeDefinition> i = list.iterator(); i.hasNext();) {", "+                AntTypeDefinition current = i.next();"]}]}