{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82f855fbe271c36f61e5d36d31a86917", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c45e6ccdcaed18814f57a743d6575d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/ScannerUtil.java", "commitBeforeChange": "7c59613e550be20653ba5a61017ce1d0e2c954b5", "commitAfterChange": "b8d1f622efe9d04a17f06877e8ed73bb97283ea6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public static void setupDirectoryScanner( final FileSet set,                                               final FileScanner scanner,                                               final TaskContext context )         throws TaskException", "signatureAfterChange": "      public static void setupDirectoryScanner( final FileSet set,                                               final FileScanner scanner,                                               final TaskContext context )         throws TaskException", "diff": ["-            set.getDir() + \" with \" + set.getPatternSet();", "+            set.getDir() + \" with \" + set;", "-        scanner.setIncludes( PatternUtil.getIncludePatterns( set.getPatternSet(), context ) );", "-        scanner.setExcludes( PatternUtil.getExcludePatterns( set.getPatternSet(), context ) );", "-        if( set.useDefaultExcludes() )", "+        scanner.setIncludes( PatternUtil.getIncludePatterns( set, context ) );", "+        scanner.setExcludes( PatternUtil.getExcludePatterns( set, context ) );", "+        if( set.includeDefaultExcludes() )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e38ed1a1a4dba39046a0f7fcb135bb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/RegisterConverter.java", "commitBeforeChange": "a44c5e5b95f895c6e7b3f7115f5ca471c7578cdf", "commitAfterChange": "2f95bc4704ce4e95b45dba43fccfdb61926619c1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          public void execute()         throws AntException", "signatureAfterChange": "          public void execute()         throws AntException", "diff": ["-                m_engine.getTskDeployer().deployConverter( m_classname, url.toString(), url ); ", "+                m_tskDeployer.deployConverter( m_classname, url.toString(), url ); ", "-                m_engine.getConverterEngine().getInfoRegistry().register( m_classname, info ); ", "-                m_engine.getConverterEngine().getRegistry().register( m_classname, locator ); ", "+                m_converterEngine.getInfoRegistry().register( m_classname, info ); ", "+                m_converterEngine.getRegistry().register( m_classname, locator ); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc59cf0735b7143c2dcfd1752c804920", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/ScannerUtil.java", "commitBeforeChange": "7c59613e550be20653ba5a61017ce1d0e2c954b5", "commitAfterChange": "b8d1f622efe9d04a17f06877e8ed73bb97283ea6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public static void setupDirectoryScanner( final FileSet set,                                               final FileScanner scanner,                                               final TaskContext context )         throws TaskException", "signatureAfterChange": "      public static void setupDirectoryScanner( final FileSet set,                                               final FileScanner scanner,                                               final TaskContext context )         throws TaskException", "diff": ["-            set.getDir() + \" with \" + set.getPatternSet();", "+            set.getDir() + \" with \" + set;", "-        scanner.setIncludes( PatternUtil.getIncludePatterns( set.getPatternSet(), context ) );", "-        scanner.setExcludes( PatternUtil.getExcludePatterns( set.getPatternSet(), context ) );", "-        if( set.useDefaultExcludes() )", "+        scanner.setIncludes( PatternUtil.getIncludePatterns( set, context ) );", "+        scanner.setExcludes( PatternUtil.getExcludePatterns( set, context ) );", "+        if( set.includeDefaultExcludes() )"]}]}