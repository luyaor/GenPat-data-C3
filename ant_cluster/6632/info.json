{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6040505ef47ef606a4a570f06aa56811", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562223124976f15872f473ab3d4801c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "1225a5a849faa66e73a1262180dd002332b162b0", "commitAfterChange": "90a6d8155086ee0d0a1911584a56eb7b33fb3d0f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void doLink(String resource, String link) throws BuildException", "signatureAfterChange": "     private void doLink(String res, String lnk) throws BuildException", "diff": ["-", "-    private void doLink(String resource, String link) throws BuildException {", "-", "-        if (resource == null) {", "-            handleError(\"Must define the resource to symlink to!\");", "-            return;", "-        }", "-        if (link == null) {", "-            handleError(\"Must define the link name for symlink!\");", "-            return;", "-        }", "-        File linkfil = new File(link);", "-", "-        String[] cmd = new String[] {\"ln\", \"-s\", resource, link};", "-", "-        try {", "-            if (overwrite && linkfil.exists()) {", "+    private void doLink(String res, String lnk) throws BuildException {", "+        File linkfil = new File(lnk);", "+        if (overwrite && linkfil.exists()) {", "+            try {", "+            } catch (FileNotFoundException fnfe) {", "+                handleError(\"Symlink disappeared before it was deleted: \" + lnk);", "+            } catch (IOException ioe) {", "+                handleError(\"Unable to overwrite preexisting link: \" + lnk);", "-        } catch (FileNotFoundException fnfe) {", "-            handleError(\"Symlink disappeared before it was deleted: \" + link);", "-        } catch (IOException ioe) {", "-            handleError(\"Unable to overwrite preexisting link: \" + link);", "-        log(cmd[0] + \" \" + cmd[1] + \" \" + cmd[2] + \" \" + cmd[3]);", "+        String[] cmd = new String[] {\"ln\", \"-s\", res, lnk};", "+        log(Commandline.toString(cmd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d17462745d151a211f0b68a6bdade6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "44238fbb62419d41beec2afba160dc50acc5d59f", "commitAfterChange": "52f94cbb4ce1f66344062c083fcd50991e7be5bd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected static String formatTime(long millis)", "signatureAfterChange": "      protected static String formatTime(long millis)", "diff": ["+        Object[] args = {", "+            new Long(minutes),", "+            new Long(seconds % 60)", "+        };", "-        if (minutes > 0) {", "-            return Long.toString(minutes) + \" minute\"", "-                + (minutes == 1 ? \" \" : \"s \")", "-                + Long.toString(seconds%60) + \" second\"", "-                + (seconds%60 > 1 ? \"s\" : \"\");", "-        }", "-        else {", "-            return Long.toString(seconds) + \" second\"", "-                + (seconds%60 > 1 ? \"s\" : \"\");", "-        }", "-", "+        return MINUTE_SECONDS.format(args);"]}]}