{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8eaeac443c6257b6d446b020442ee17", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98fe5df0f2a5dbc5b56ce6d81fba95b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void executeTargets( final String[] targets ) throws Exception", "signatureAfterChange": "     public void executeTargets( final String[] targets ) throws Exception", "diff": ["+        Map embeddorParameters = new HashMap( m_embeddorParameters );", "+        setupPaths( embeddorParameters );", "+", "-            Thread.currentThread().setContextClassLoader( m_sharedClassLoader );", "+            embeddorParameters.put( \"myrmidon.shared.classloader\", m_sharedClassLoader );", "-        checkHomeDir();", "-", "-        final Embeddor embeddor = prepareEmbeddor();", "+        final Embeddor embeddor = prepareEmbeddor( embeddorParameters );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1f2ea4f079b9a7a47f1d10ca774d195", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Union.java", "commitBeforeChange": "4bad7aa79d384ef8dfbff97b2c04621ef7eb3c34", "commitAfterChange": "43953950aa6f381b7b0f2b1ff7ab4190bc61535f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Collection getCollection(boolean asString)", "signatureAfterChange": "     protected Collection getCollection(boolean asString)", "diff": ["+        // (LinkedHashSet better, but JDK 1.4+)", "+        Set _union = new HashSet(rc.size() * 2);", "-                if (!(union.contains(o))) {", "+                if (_union.add(o)) {"]}]}