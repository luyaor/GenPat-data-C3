{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98d846382c0548bfa7ba5e8869977180", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105439593d52a2a8b53fedf4904c4223", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            log( \"Replaced \" + replaceCount + \" occurrences in \" + fileCount + \" files.\", Project.MSG_INFO );", "+            getLogger().info( \"Replaced \" + replaceCount + \" occurrences in \" + fileCount + \" files.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12196af7f81c542e19e8c0a9e3baf352", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void waitForString( String s, Integer timeout )", "signatureAfterChange": "         public void waitForString( String s, Integer timeout )", "diff": ["-                log( sb.toString(), Project.MSG_INFO );", "+                getLogger().info( sb.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1946777409513ef9263a83019aa36f98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void generateClient( File sourceJar )", "signatureAfterChange": "     private void generateClient( File sourceJar )", "diff": ["-        log( \"generate client for \" + sourceJar, Project.MSG_INFO );", "+        getLogger().info( \"generate client for \" + sourceJar );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25df4e0ac53da0ed5ca2b927c8c27f38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Add.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void execP4Add( StringBuffer list )", "signatureAfterChange": "      private void execP4Add( StringBuffer list )", "diff": ["-        log( \"Execing add \" + P4CmdOpts + \" \" + addCmd + list, Project.MSG_INFO );", "+        getLogger().info( \"Execing add \" + P4CmdOpts + \" \" + addCmd + list );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f45772ca92fa22b5f9bb3404db2817", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Add.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void execP4Add( StringBuffer list )", "signatureAfterChange": "      private void execP4Add( StringBuffer list )", "diff": ["-        log( \"Execing add \" + P4CmdOpts + \" \" + addCmd + list, Project.MSG_INFO );", "+        getLogger().info( \"Execing add \" + P4CmdOpts + \" \" + addCmd + list );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "559376f42af35f43217c9a5ecec93c49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean createEmptyZip( File zipFile )         throws TaskException", "signatureAfterChange": "     protected boolean createEmptyZip( File zipFile )         throws TaskException", "diff": ["-        log( \"Note: creating empty \" + archiveType + \" archive \" + zipFile, Project.MSG_INFO );", "+        getLogger().info( \"Note: creating empty \" + archiveType + \" archive \" + zipFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66df2f2327ffbe2c7d7a82a00c95c5dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void waitForString( String s, Integer timeout )", "signatureAfterChange": "         public void waitForString( String s, Integer timeout )", "diff": ["-                log( sb.toString(), Project.MSG_INFO );", "+                getLogger().info( sb.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9148942520ec882026a55d4a7b8af7c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            log( \"Replaced \" + replaceCount + \" occurrences in \" + fileCount + \" files.\", Project.MSG_INFO );", "+            getLogger().info( \"Replaced \" + replaceCount + \" occurrences in \" + fileCount + \" files.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e773dc11d812f097fc4748f3af3500", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean createEmptyZip( File zipFile )         throws TaskException", "signatureAfterChange": "     protected boolean createEmptyZip( File zipFile )         throws TaskException", "diff": ["-        log( \"Note: creating empty \" + archiveType + \" archive \" + zipFile, Project.MSG_INFO );", "+        getLogger().info( \"Note: creating empty \" + archiveType + \" archive \" + zipFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e273785d7227034e99f25d1823b4e0d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void generateClient( File sourceJar )", "signatureAfterChange": "     private void generateClient( File sourceJar )", "diff": ["-        log( \"generate client for \" + sourceJar, Project.MSG_INFO );", "+        getLogger().info( \"generate client for \" + sourceJar );"]}]}