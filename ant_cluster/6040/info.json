{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "becb74cbe191a7784239f79d56c8ae25", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057436e8674125143188880a04c8ae37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "742f2da5b7f3ecf59c5dc2c01c740c535c36e148", "commitAfterChange": "5e93b0b89f8ecfdf99eeed637b5a3d0773000cea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        String osname = System.getProperty(\"os.name\").toLowerCase();", "-", "-        // for NetWare, piggy-back on Windows, since here and in the", "-        // apply code, the same assumptions can be made as with windows -", "-        // that \\\\ is an OK separator, and do comparisons case-insensitive.", "-        onWindows = ( (osname.indexOf(\"windows\") >= 0) ||", "-                      (osname.indexOf(\"netware\") >= 0)  );", "-", "-        // Determine the from/to char mappings for dir sep", "-//        char fromDirSep = onWindows ? '\\\\' : '/';", "-//        char toDirSep   = dirSep.charAt(0);", "+        // for NetWare and OS/2, piggy-back on Windows, since here and", "+        // in the apply code, the same assumptions can be made as with", "+        // windows - that \\\\ is an OK separator, and do comparisons", "+        // case-insensitive.", "+        onWindows = Os.isFamily(\"dos\");", "-//            elem = elem.replace( fromDirSep, toDirSep );", "-", "-              rslt.append( pathSep );", "+                rslt.append( pathSep );", "-//            rslt.append( elem );", "-            StringTokenizer stDirectory = new StringTokenizer(elem, fromDirSep, true);", "+            StringTokenizer stDirectory = ", "+                new StringTokenizer(elem, fromDirSep, true);", "-              token = stDirectory.nextToken();", "+                token = stDirectory.nextToken();", "-              if (fromDirSep.equals(token)) {", "-                rslt.append( dirSep ); ", "-              }", "-              else {", "-                rslt.append( token );", "-              }", "+                if (fromDirSep.equals(token)) {", "+                    rslt.append( dirSep ); ", "+                }", "+                else {", "+                    rslt.append( token );", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5fb1848286f3bbf67e74de719528042", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "a376c57ae162bb14f507c677767dfd8e6b3e7139", "commitAfterChange": "ab9f91736afcdd65e4ca1da6c627f4df71f5289a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected boolean isValidOs()", "signatureAfterChange": "      protected boolean isValidOs()", "diff": ["-        // XXX if OS=unix", "-        return System.getProperty(\"path.separator\").equals(\":\") ", "-            && (!System.getProperty(\"os.name\").startsWith(\"Mac\") ", "-                 || System.getProperty(\"os.name\").endsWith(\"X\"))", "-            && super.isValidOs();", "+        return Os.isFamily(\"unix\") && super.isValidOs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83aab1db6ae7c446bc756306912e424", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "0b1e459d5ce8a519a6419a713c57693c68d4a6d2", "commitAfterChange": "d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private String getJavaExecutableName()", "signatureAfterChange": "      private String getJavaExecutableName()", "diff": ["-        String os = System.getProperty(\"os.name\").toLowerCase();", "-        boolean dosBased = ", "-            os.indexOf(\"windows\") >= 0 || os.indexOf(\"os/2\") >= 0;", "-\tString extension =  dosBased? \".exe\" : \"\";", "+\tString extension =  (new Os(\"dos\")).eval() ? \".exe\" : \"\";"]}]}