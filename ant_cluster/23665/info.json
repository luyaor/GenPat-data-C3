{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07eba2142607f4548113b08c81581fb7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c4f1bc882d1dc35c3738e58adfe7034", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "795c7c88da1e29ec6f17b63f2e4fa396b27fabda", "commitAfterChange": "602c461fed47f591c6a79feadc6edcf0c9b6b54d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static void printTargets(Project project)", "signatureAfterChange": "     private static void printTargets(Project project, boolean printSubTargets)", "diff": ["-    private static void printTargets(Project project) {", "+    private static void printTargets(Project project, boolean printSubTargets) {", "-        String defaultTarget = project.getDefaultTarget();", "-        if (defaultTarget != null && !\"\".equals(defaultTarget)) { // shouldn't need to check but...", "-            Vector defaultName = new Vector();", "-            Vector defaultDesc = null;", "-            defaultName.addElement(defaultTarget);", "-", "-            int indexOfDefDesc = topNames.indexOf(defaultTarget);", "-            if (indexOfDefDesc >= 0) {", "-                defaultDesc = new Vector();", "-                defaultDesc.addElement(topDescriptions.elementAt(indexOfDefDesc));", "-            }", "-            printTargets(defaultName, defaultDesc, \"Default target:\", maxLength);", "-", "+        printTargets(topNames, topDescriptions, \"Main targets:\", maxLength);", "+        ", "+        if( printSubTargets ) {", "+            printTargets(subNames, null, \"Subtargets:\", 0);", "-        printTargets(topNames, topDescriptions, \"Main targets:\", maxLength);", "-        printTargets(subNames, null, \"Subtargets:\", 0);", "+        String defaultTarget = project.getDefaultTarget();", "+        if (defaultTarget != null && !\"\".equals(defaultTarget)) { // shouldn't need to check but...", "+            System.out.println( \"Default target: \" + defaultTarget );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2664d2ddb70f32bb91e6395a61e428a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "c5d224e2fabd860332b84182429505a5f2a2ee54", "commitAfterChange": "6f8402d926c54252e54ac79efa3f5480ab7323c3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "signatureAfterChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "diff": ["-        StringBuffer referenceList = new StringBuffer(REFERENCE_OPTION);", "-        boolean firstEntry = true;", "-                if (!firstEntry) {", "-                    referenceList.append(getReferenceDelimiter());", "-                } else if (isWindows) {", "-                    referenceList.append('\\\"');", "-                }", "-                referenceList.append(file.toString());", "-                firstEntry = false;", "+                if (isWindows) command.addArgument('\"'+REFERENCE_OPTION+file.toString()+'\"');", "+                else command.addArgument(REFERENCE_OPTION+file.toString());", "-        // hack: This means we've added at least one reference that's", "-        // a managed binary", "-        if (!firstEntry) {", "-            //add it all to an argument", "-            if (isWindows) {", "-                command.addArgument(referenceList.toString() + '\\\"');", "-            } else {", "-                command.addArgument(referenceList.toString());", "-            }", "-        }", "-        ", "+"]}]}