{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "faf6adb96924e9c3eb98f7a575c6b6df", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d251fab3ed7c5350418632fc6364b787", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["-        if (warningsProperty != null && !Project.toBoolean(warningsProperty)) {", "+        if (warningsProperty != null) {", "+            attributes.log(\"!! the build.compiler.warnings property is deprecated. !!\",", "+                           Project.MSG_WARN);", "+            attributes.log(\"!! Use the nowarn attribute instead. !!\",", "+                           Project.MSG_WARN);", "+            if (!Project.toBoolean(warningsProperty)) {", "+                cmd.createArgument().setValue(\"-nowarn\");", "+            }", "+        } if (attributes.getNowarn()) {", "+            /* ", "+             * FIXME later", "+             *", "+             * let the magic property win over the attribute for backwards ", "+             * compatibility", "+             */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2590cf5266a04f6c57619b5b616cd2c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd)", "diff": ["-            cmd.createArgument().setValue(memoryParameterPrefix+\"ms\"+memoryInitialSize);", "+            if (!attributes.isForkedJavac()) {", "+                attributes.log(\"Since fork is false, ignoring memoryInitialSize setting.\",", "+                               Project.MSG_WARN);", "+            } else {", "+                cmd.createArgument().setValue(memoryParameterPrefix+\"ms\"+memoryInitialSize);", "+            }", "-            cmd.createArgument().setValue(memoryParameterPrefix+\"mx\"+memoryMaximumSize);", "+            if (!attributes.isForkedJavac()) {", "+                attributes.log(\"Since fork is false, ignoring memoryMaximumSize setting.\",", "+                               Project.MSG_WARN);", "+            } else {", "+                cmd.createArgument().setValue(memoryParameterPrefix+\"mx\"+memoryMaximumSize);", "+            }"]}]}