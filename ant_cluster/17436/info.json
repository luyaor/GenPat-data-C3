{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55dcd6eb02c7d809bcdc8aef7dc13684", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd8db02d826573a2d32c2e9ac62e6983", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java", "commitBeforeChange": "bbdd61de1fc1d3f7a84cb56e231fecc0baa61f32", "commitAfterChange": "737d0434c862c289ce80c962c4ceace7395f4360", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                SetProxy sp = new SetProxy();", "+                sp.setProxyHost(proxy);", "+                if (port != null) {", "+                    sp.setProxyPort(Integer.parseInt(port));", "+                }", "+                sp.setProxyUser(user);", "+                sp.setProxyPassword(password);", "+                sp.applyWebProxySettings();", "+", "-                    System.getProperties().put(\"http.proxyHost\", proxy);", "-                    System.getProperties().put(\"http.proxyPort\", port);", "-                    System.getProperties().put(\"http.proxyHost\", \"\");", "-                    System.getProperties().put(\"http.proxyPort\", \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d911b28955c5b33ca140faea8dd76cef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/RegisterConverter.java", "commitBeforeChange": "7b722732fbbdb511be32f94588d43f55b0b51f65", "commitAfterChange": "8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-    ", "+", "-        ", "+", "-        ", "+", "-                                    \"parameters when supplying a name\" );", "+                                     \"parameters when supplying a name\" );", "-            try ", "-            { ", "-                m_tskDeployer.deployConverter( m_classname, url.toString(), url ); ", "+            try", "+            {", "+                m_tskDeployer.deployConverter( m_classname, url.toString(), url );", "-                throw new TaskException( \"Failed deploying \" + m_classname + ", "-                                        \" from \" + url, de );", "+                throw new TaskException( \"Failed deploying \" + m_classname +", "+                                         \" from \" + url, de );", "-            final DefaultConverterInfo info = ", "-                new DefaultConverterInfo( m_sourceType, m_destinationType );", "-            final DefaultLocator locator = new DefaultLocator( m_classname, url );", "+            final ConverterInfo info = new ConverterInfo( m_sourceType, m_destinationType );", "+            m_converterRegistry.registerConverterInfo( m_classname, info );", "-            try", "+            final DefaultComponentFactory factory =", "+                new DefaultComponentFactory( new URL[] { url } );", "+", "+            factory.addNameClassMapping( m_classname, m_classname );", "+            try { m_typeManager.registerType( Converter.ROLE, m_classname, factory ); }", "+            catch( final Exception e )", "-                m_converterEngine.getInfoRegistry().register( m_classname, info ); ", "-                m_converterEngine.getRegistry().register( m_classname, locator ); ", "-            }", "-            catch( final RegistryException re )", "-            {", "-                throw new TaskException( \"Error registering resource\", re );", "+                throw new TaskException( \"Failed to register converter \" + m_classname, e );"]}]}