{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dafb2e6fd2a33c84ca8f0d2b7f8631e1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "465fd350437963b9c3b66f4a029aabc8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/xml/ParseContext.java", "commitBeforeChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "commitAfterChange": "97738f8eed83efec11fb1850db98ce94c37f9630", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parse(URL source, String[] rootElementNames,                       ElementHandler rootElementHandler)          throws XMLParseException", "signatureAfterChange": "     public void parse(URL source, String[] rootElementNames,                       ElementHandler rootElementHandler)          throws XMLParseException", "diff": ["-            SAXParser saxParser = parserFactory.newSAXParser();", "+            SAXParser saxParser = null;", "+            ", "+            Thread thread = Thread.currentThread();", "+            ClassLoader currentContextLoader = thread.getContextClassLoader();", "+            try {", "+                ClassLoader thisLoader = this.getClass().getClassLoader();", "+                thread.setContextClassLoader(thisLoader);", "+                saxParser = parserFactory.newSAXParser();", "+            } finally {", "+                thread.setContextClassLoader(currentContextLoader);", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "925a792d1e1d0447df30feb9a82ca603", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "a341406b2811a02d05b05d734ef402d6735fe919", "commitAfterChange": "7ee8e30cd0293a64436b6b639606ff3ba8ab25ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void initializeProject()", "signatureAfterChange": "      private void initializeProject()", "diff": ["+        Hashtable typedefs = project.getDataTypeDefinitions();", "+        Enumeration e = typedefs.keys();", "+        while (e.hasMoreElements()) {", "+            String typeName = (String) e.nextElement();", "+            Class typeClass = (Class) typedefs.get(typeName);", "+            p1.addDataTypeDefinition(typeName, typeClass);", "+        }", "+", "-        Enumeration e = prop1.keys();", "+        e = prop1.keys();"]}]}