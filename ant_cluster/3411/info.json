{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caa4f97cf4467b789a0c2021cfeb21b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f077dce8d65b296394c75afeacd5c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "1296855c2f3fd08f04ccf92c0cbe45a9f2319b5c", "commitAfterChange": "b0003afe366c593c70d5af9b037ae55dee28df1e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private Object createAndSet(Project project, Class c)", "signatureAfterChange": "     private Object createAndSet(Project project, Class c)", "diff": ["-            java.lang.reflect.Constructor ctor = null;", "-            boolean noArg = false;", "-            // DataType can have a \"no arg\" constructor or take a single", "-            // Project argument.", "-            try {", "-                ctor = c.getConstructor(new Class[0]);", "-                noArg = true;", "-            } catch (NoSuchMethodException nse) {", "-                ctor = c.getConstructor(new Class[] {Project.class});", "-                noArg = false;", "-            }", "-            Object o = ctor.newInstance(", "-                ((noArg) ? new Object[0] : new Object[] {project}));", "-", "-            project.setProjectReference(o);", "+            Object o = innerCreateAndSet(c, project);", "-        } catch (java.lang.reflect.InvocationTargetException ex) {", "+        } catch (InvocationTargetException ex) {", "-       } catch (Throwable t) {", "+        } catch (NoSuchMethodException nsme) {", "+            throw new BuildException(\"Could not create type \" + name", "+                    + \" as the class \" + c +\" has no compatible constructor\" );", "+        } catch (InstantiationException nsme) {", "+            throw new BuildException(\"Could not create type \" +", "+                    name", "+                    + \" as the class \" + c + \" is abstract\");", "+        } catch(IllegalAccessException e) {", "+            throw new BuildException(\"Could not create type \" +", "+                    name", "+                    + \" as the constructor \" + c + \" is not accessible\");", "+        } catch (Throwable t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03af6d6f55363211305a89f61c96fe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Untar.java", "commitBeforeChange": "559859ef43a7d03b5f17ff1121f9d3e7a5c79656", "commitAfterChange": "1f4fe213e2f3268419fb74d79bfb3ff4a3de77fe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        Method setLastModified = null;", "-        Long[] times = null;", "-        // 1.0 is ruled out anyway, so this ensures 1.2 or above", "-        if (project.getJavaVersion() != Project.JAVA_1_1) {", "-            try {", "-                setLastModified = ", "-                    java.io.File.class.getMethod(\"setLastModified\", ", "-                                                 new Class[] {Long.TYPE});", "-", "-                times = new Long[1];", "-            } catch (Exception e) {", "-                project.log(\"File.setLastModified(long) not found\",", "-                            Project.MSG_VERBOSE);", "-            }", "-        }", "+        Touch touch = new Touch();", "+        touch.setProject(project);", "+        touch.setTarget(target);", "-                throw new BuildException(\"No source specified\");", "+                throw new BuildException(\"No source specified\", location);", "-                throw new BuildException(\"source doesn't exist\");", "+                throw new BuildException(\"source \"+srcF+\" doesn't exist\",", "+                                         location);", "-                throw new BuildException(\"No destination specified\");", "+                throw new BuildException(\"No destination specified\", location);", "-", "-                    project.log(\"expand-file \" + te.getName() , \"untar\", Project.MSG_VERBOSE );", "+                    project.log(\"expand-file \" + te.getName() , \"untar\", ", "+                                Project.MSG_VERBOSE );", "-                    if (setLastModified != null) {", "-                        times[0] = new Long(te.getModTime().getTime());", "-                        try {", "-                            setLastModified.invoke(f, times);", "-                        } catch (Exception e) {", "-                            project.log(\"cannot invoke File.setLastModified(long)\",", "-                                        Project.MSG_VERBOSE);", "-                            setLastModified = null;", "-                        }", "+                    if (project.getJavaVersion() != Project.JAVA_1_1) {", "+                        touch.setFile(f.getAbsolutePath());", "+                        touch.setMillis(te.getModTime().getTime());", "+                        touch.touch();"]}]}