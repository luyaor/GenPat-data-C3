{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "764757d15e25075f9dfca126abf7d368", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538b4e5d71b5ee1c3466ab69937364ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = selectorsList.iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectorsList) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19a5ae6f0766c052ca46fe10c8dcf50", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p) {", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p) {", "-            for (Iterator i = selectorsList.iterator(); i.hasNext(); ) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectorsList) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);"]}]}