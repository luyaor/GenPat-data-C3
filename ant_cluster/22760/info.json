{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a920ff9a1875f7f8d99249fd2e9672b6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7de540cedf7acf9c679f2399dc5b489", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarUtils.java", "commitBeforeChange": "0e9021fe5fa6e5db953921c85ccc68bd25327b28", "commitAfterChange": "38f4bc677b4265c9b0a21b929be067514afd3d5d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static long parseOctal(final byte[] buffer, final int offset, final int length)", "signatureAfterChange": "     public static long parseOctal(final byte[] buffer, final int offset, final int length)", "diff": ["-        // Must have trailing NUL or space", "-        byte trailer;", "-        trailer = buffer[end-1];", "-        if (trailer == 0 || trailer == ' '){", "+        // Trim all trailing NULs and spaces.", "+        // The ustar and POSIX tar specs require a trailing NUL or", "+        // space but some implementations use the extra digit for big", "+        // sizes/uids/gids ...", "+        byte trailer = buffer[end - 1];", "+        while (start < end && (trailer == 0 || trailer == ' ')) {", "-        } else {", "-            throw new IllegalArgumentException(", "-                    exceptionMessage(buffer, offset, length, end-1, trailer));", "+            trailer = buffer[end - 1];", "-        // May have additional NUL or space", "-        trailer = buffer[end-1];", "-        if (trailer == 0 || trailer == ' '){", "-            end--;", "+        if (start == end) {", "+            throw new IllegalArgumentException(", "+                    exceptionMessage(buffer, offset, length, start, trailer));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71f362cffd95146d094df9f757f6788", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void transform(Node root, String xslname, String htmlname) throws TransformerException", "signatureAfterChange": "     protected void transform(Node root, String xslname, String htmlname) throws SAXException", "diff": ["-    protected void transform(Node root, String xslname, String htmlname) throws TransformerException {", "+    protected void transform(Node root, String xslname, String htmlname) throws SAXException {", "-            StreamSource xsl_source = getXSLStreamSource(xslname);", "-            Transformer transformer = tfactory.newTransformer(xsl_source);", "+            XSLTInputSource xsl_source = getXSLStreamSource(xslname);", "+            XSLTProcessor processor = XSLTProcessorFactory.getProcessor();", "-            transformer.transform( new DOMSource(root), new StreamResult(htmlfile));", "+            processor.process( new XSLTInputSource(root), xsl_source, new XSLTResultTarget(htmlfile.getAbsolutePath()) );", "-            task.log(\"Transform time: \" + dt + \"ms\");", "+            task.log(\"Transform time for \" + xslname + \": \" + dt + \"ms\");", "-            throw new TransformerException(e.getMessage());", "+            throw new SAXException(e.getMessage());"]}]}