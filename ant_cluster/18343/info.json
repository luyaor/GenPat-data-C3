{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbab3cd1caa0db12676598ab7756e1e2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7252e5a733a8995ec2199b8270bfb6e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FilterChain.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "signatureAfterChange": "      @Override \tprotected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "+    @Override", "+\tprotected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator<Object> i = filterReaders.iterator(); i.hasNext(); ) {", "+            for (Iterator<Object> i = filterReaders.iterator(); i.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d7e6709407286c8d3edec3f7cf23625", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/DataType.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void dieOnCircularReference(final Stack stack,                                           final Project project)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(final Stack<Object> stack,                                           final Project project)         throws BuildException", "diff": ["-    protected void dieOnCircularReference(final Stack stack,", "+    protected void dieOnCircularReference(final Stack<Object> stack,", "-            IdentityStack id = IdentityStack.getInstance(stack);", "+            IdentityStack<Object> id = IdentityStack.getInstance(stack);"]}]}