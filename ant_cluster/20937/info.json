{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce4ac702bb6ea07ac141ada9dd519652", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad716c66699c57bfa3c9939c6f1eaa3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Ear.java", "commitBeforeChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "commitAfterChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected void zipFile( File file, ZipOutputStream zOut, String vPath )         throws IOException, TaskException", "signatureAfterChange": "      protected void zipFile( File file, ZipOutputStream zOut, String vPath )         throws IOException, TaskException", "diff": ["-            if( deploymentDescriptor == null || !deploymentDescriptor.equals( file ) || descriptorAdded )", "+            if( m_appxml == null ||", "+                !m_appxml.equals( file ) ||", "+                m_descriptorAdded )", "-                final String message = \"Warning: selected \" + archiveType +", "+                final String message = \"Warning: selected \" + m_archiveType +", "-                    \"(please use appxml attribute to \" + archiveType + \" task)\";", "+                    \"(please use appxml attribute to \" + m_archiveType + \" task)\";", "-                descriptorAdded = true;", "+                m_descriptorAdded = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1411ea7d27b024141bc9cf69836ebe0d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-                getLogger().debug( \"Loading \" + driver + \" using AntClassLoader with classpath \" + classpath );", "+                getContext().debug( \"Loading \" + driver + \" using AntClassLoader with classpath \" + classpath );", "-                getLogger().debug( \"Loading \" + driver + \" using system loader.\" );", "+                getContext().debug( \"Loading \" + driver + \" using system loader.\" );", "-            getLogger().debug( \"connecting to \" + url );", "+            getContext().debug( \"connecting to \" + url );", "-                    getLogger().debug( \"Opening PrintStream to output file \" + output );", "+                    getContext().debug( \"Opening PrintStream to output file \" + output );", "-                        getLogger().debug( \"Commiting transaction\" );", "+                        getContext().debug( \"Commiting transaction\" );", "-        getLogger().info( goodSql + \" of \" + totalSql +", "+        getContext().info( goodSql + \" of \" + totalSql +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276def22ac2dd41c9533812a67cbded2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void stop()", "signatureAfterChange": "     public void stop()", "diff": ["-        Enumeration keys = auditedFiles.keys();", "+        Iterator keys = auditedFiles.keys();", "-        while( keys.hasMoreElements() )", "+        while( keys.hasNext() )", "-            String filepath = (String)keys.nextElement();", "-            Vector v = (Vector)auditedFiles.get( filepath );", "+            String filepath = (String)keys.next();", "+            ArrayList v = (ArrayList)auditedFiles.get( filepath );", "-                MAudit.Violation violation = (MAudit.Violation)v.elementAt( i );", "+                MAudit.Violation violation = (MAudit.Violation)v.get( i );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c60e74a7c4cd5ff8c87980fd6b3cca9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "         public void write( PrintWriter writer )             throws IOException", "signatureAfterChange": "         public void write( PrintWriter writer )             throws IOException", "diff": ["-                    Vector attrList = (Vector)object;", "-                    for( Enumeration e2 = attrList.elements(); e2.hasMoreElements(); )", "+                    ArrayList attrList = (ArrayList)object;", "+                    for( Iterator e2 = attrList.iterator(); e2.hasNext(); )", "-                        Attribute attribute = (Attribute)e2.nextElement();", "+                        Attribute attribute = (Attribute)e2.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38afa59c1fab26926c8fd165eb427e33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Ear.java", "commitBeforeChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "commitAfterChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected void zipFile( File file, ZipOutputStream zOut, String vPath )         throws IOException, TaskException", "signatureAfterChange": "      protected void zipFile( File file, ZipOutputStream zOut, String vPath )         throws IOException, TaskException", "diff": ["-            if( deploymentDescriptor == null || !deploymentDescriptor.equals( file ) || descriptorAdded )", "+            if( m_appxml == null ||", "+                !m_appxml.equals( file ) ||", "+                m_descriptorAdded )", "-                final String message = \"Warning: selected \" + archiveType +", "+                final String message = \"Warning: selected \" + m_archiveType +", "-                    \"(please use appxml attribute to \" + archiveType + \" task)\";", "+                    \"(please use appxml attribute to \" + m_archiveType + \" task)\";", "-                descriptorAdded = true;", "+                m_descriptorAdded = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "488a89c0397471f0683284633205cc9e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "4a63f3b33824d1af6537636e50dc9f0bf73221aa", "commitAfterChange": "0380eac20a5d2f2fef36091bc8a51135eb916c27", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-        if( optionsFile != null )", "+        if( m_optionsFile != null )", "-            optionsFile.delete();", "-            optionsFile = null;", "+            m_optionsFile.delete();", "+            m_optionsFile = null;", "-        if( cleanup )", "+        if( m_cleanup )", "-            String name = target.getName();", "+            String name = m_target.getName();", "-            final File sunjj = new File( target.getParent(), name );", "+            final File sunjj = new File( m_target.getParent(), name );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a62efb5e84545c3890fc04959de334b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-                getLogger().debug( \"Loading \" + driver + \" using AntClassLoader with classpath \" + classpath );", "+                getContext().debug( \"Loading \" + driver + \" using AntClassLoader with classpath \" + classpath );", "-                getLogger().debug( \"Loading \" + driver + \" using system loader.\" );", "+                getContext().debug( \"Loading \" + driver + \" using system loader.\" );", "-            getLogger().debug( \"connecting to \" + url );", "+            getContext().debug( \"connecting to \" + url );", "-                    getLogger().debug( \"Opening PrintStream to output file \" + output );", "+                    getContext().debug( \"Opening PrintStream to output file \" + output );", "-                        getLogger().debug( \"Commiting transaction\" );", "+                        getContext().debug( \"Commiting transaction\" );", "-        getLogger().info( goodSql + \" of \" + totalSql +", "+        getContext().info( goodSql + \" of \" + totalSql +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5118f247e4fb4904300a91b3ac61aa68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void write( PrintWriter writer )         throws IOException, TaskException", "signatureAfterChange": "     public void write( PrintWriter writer )         throws IOException, TaskException", "diff": ["-        writer.println( ATTRIBUTE_MANIFEST_VERSION + \": \" + manifestVersion );", "-        String signatureVersion = mainSection.getAttributeValue( ATTRIBUTE_SIGNATURE_VERSION );", "+        writer.println( ATTRIBUTE_MANIFEST_VERSION + \": \" + m_manifestVersion );", "+        String signatureVersion = m_mainSection.getAttributeValue( ATTRIBUTE_SIGNATURE_VERSION );", "-            mainSection.removeAttribute( ATTRIBUTE_SIGNATURE_VERSION );", "+            m_mainSection.removeAttribute( ATTRIBUTE_SIGNATURE_VERSION );", "-        mainSection.write( writer );", "+        m_mainSection.write( writer );", "-                mainSection.addAttribute( new Attribute( ATTRIBUTE_SIGNATURE_VERSION, signatureVersion ) );", "+                m_mainSection.addAttribute( new Attribute( ATTRIBUTE_SIGNATURE_VERSION, signatureVersion ) );", "-        for( Enumeration e = sections.elements(); e.hasMoreElements(); )", "+        for( Enumeration e = m_sections.elements(); e.hasMoreElements(); )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513e4c54113def88163cbee4aa4446d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/file/Copy.java", "commitBeforeChange": "3bdfc1df4a3f1c9a8b034c24343517a2af4bc362", "commitAfterChange": "a6d997380d162ef16df244217c35992826886778", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void scan( File fromDir, File toDir, String[] files, String[] dirs )         throws TaskException", "signatureAfterChange": "     protected void scan( File fromDir, File toDir, String[] files, String[] dirs )         throws TaskException", "diff": ["-        if( mapperElement != null )", "+        if( m_mapperElement != null )", "-            mapper = mapperElement.getImplementation();", "+            mapper = m_mapperElement.getImplementation();", "-        else if( flatten )", "+        else if( m_flatten )", "-        buildMap( fromDir, toDir, files, mapper, fileCopyMap );", "+        buildMap( fromDir, toDir, files, mapper, m_fileCopyMap );", "-        if( includeEmpty )", "+        if( m_includeEmpty )", "-            buildMap( fromDir, toDir, dirs, mapper, dirCopyMap );", "+            buildMap( fromDir, toDir, dirs, mapper, m_dirCopyMap );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53f01fb7eabb21891cb2280e05d0f7f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      String vectorToList( Vector v )", "signatureAfterChange": "      String vectorToList( ArrayList v )", "diff": ["-    String vectorToList( Vector v )", "+    String vectorToList( ArrayList v )", "-        Enumeration e = v.elements();", "-        while( e.hasMoreElements() )", "+        Iterator e = v.iterator();", "+        while( e.hasNext() )", "-            buf.append( e.nextElement() );", "-            if( e.hasMoreElements() )", "+            buf.append( e.next() );", "+            if( e.hasNext() )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5705cefef9ce2c9d7b0029098856d4b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "4a63f3b33824d1af6537636e50dc9f0bf73221aa", "commitAfterChange": "0380eac20a5d2f2fef36091bc8a51135eb916c27", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-        if( optionsFile != null )", "+        if( m_optionsFile != null )", "-            optionsFile.delete();", "-            optionsFile = null;", "+            m_optionsFile.delete();", "+            m_optionsFile = null;", "-        if( cleanup )", "+        if( m_cleanup )", "-            String name = target.getName();", "+            String name = m_target.getName();", "-            final File sunjj = new File( target.getParent(), name );", "+            final File sunjj = new File( m_target.getParent(), name );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57270f7dadd6183e996d12f1c4c21361", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      String vectorToList( Vector v )", "signatureAfterChange": "      String vectorToList( ArrayList v )", "diff": ["-    String vectorToList( Vector v )", "+    String vectorToList( ArrayList v )", "-        Enumeration e = v.elements();", "-        while( e.hasMoreElements() )", "+        Iterator e = v.iterator();", "+        while( e.hasNext() )", "-            buf.append( e.nextElement() );", "-            if( e.hasMoreElements() )", "+            buf.append( e.next() );", "+            if( e.hasNext() )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ee683cc6a6b6118fc1be347f3f348f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJWorkspaceScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Vector findMatchingProjects()", "signatureAfterChange": "     public ArrayList findMatchingProjects()", "diff": ["-    public Vector findMatchingProjects()", "+    public ArrayList findMatchingProjects()", "-        Vector matchingProjects = new Vector();", "+        ArrayList matchingProjects = new ArrayList();", "-                    matchingProjects.addElement( project );", "+                    matchingProjects.add( project );", "-            matchingProjects = new Vector();", "+            matchingProjects = new ArrayList();", "-                matchingProjects.addElement( projects[ i ] );", "+                matchingProjects.add( projects[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a490a3e74f67c803d6fc1fef01d42a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/file/Copy.java", "commitBeforeChange": "3bdfc1df4a3f1c9a8b034c24343517a2af4bc362", "commitAfterChange": "a6d997380d162ef16df244217c35992826886778", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void scan( File fromDir, File toDir, String[] files, String[] dirs )         throws TaskException", "signatureAfterChange": "     protected void scan( File fromDir, File toDir, String[] files, String[] dirs )         throws TaskException", "diff": ["-        if( mapperElement != null )", "+        if( m_mapperElement != null )", "-            mapper = mapperElement.getImplementation();", "+            mapper = m_mapperElement.getImplementation();", "-        else if( flatten )", "+        else if( m_flatten )", "-        buildMap( fromDir, toDir, files, mapper, fileCopyMap );", "+        buildMap( fromDir, toDir, files, mapper, m_fileCopyMap );", "-        if( includeEmpty )", "+        if( m_includeEmpty )", "-            buildMap( fromDir, toDir, dirs, mapper, dirCopyMap );", "+            buildMap( fromDir, toDir, dirs, mapper, m_dirCopyMap );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d84bac0d536aa05c66b701cbf012300", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJWorkspaceScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Vector findMatchingProjects()", "signatureAfterChange": "     public ArrayList findMatchingProjects()", "diff": ["-    public Vector findMatchingProjects()", "+    public ArrayList findMatchingProjects()", "-        Vector matchingProjects = new Vector();", "+        ArrayList matchingProjects = new ArrayList();", "-                    matchingProjects.addElement( project );", "+                    matchingProjects.add( project );", "-            matchingProjects = new Vector();", "+            matchingProjects = new ArrayList();", "-                matchingProjects.addElement( projects[ i ] );", "+                matchingProjects.add( projects[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f4243c40a2cc7224745117dbcf05193", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MMetricsStreamHandler.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public static MetricsElement parse( String line )         throws ParseException", "signatureAfterChange": "      public static MetricsElement parse( String line )         throws ParseException", "diff": ["-        final Vector metrics = new Vector();", "+        final ArrayList metrics = new ArrayList();", "-            metrics.addElement( token );", "+            metrics.add( token );", "-        metrics.addElement( line );", "+        metrics.add( line );", "-        String name = (String)metrics.elementAt( 0 );", "-        metrics.removeElementAt( 0 );", "+        String name = (String)metrics.get( 0 );", "+        metrics.remove( 0 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98812bff0d3ae5c0dda978da1e73685c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f735f5f44df9fa52266e7b8b7f2741c2b7560d22", "commitAfterChange": "400ba5d1981259cc07b41f08cd1b53f048f8ef52", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void delFile( FTPClient ftp, String filename )         throws IOException, TaskException", "signatureAfterChange": "     protected void delFile( FTPClient ftp, String filename )         throws IOException, TaskException", "diff": ["-        if( verbose )", "+        if( m_verbose )", "-        if( !ftp.deleteFile( resolveFile( filename ) ) )", "+        if( !ftp.deleteFile( remoteResolveFile( filename ) ) )", "-            if( skipFailedTransfers == true )", "+            if( m_skipFailedTransfers == true )", "-                skipped++;", "+                m_skipped++;", "-            getLogger().debug( \"File \" + filename + \" deleted from \" + server );", "-            transferred++;", "+            getLogger().debug( \"File \" + filename + \" deleted from \" + m_server );", "+            m_transferred++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3fcf7d448caa8f9f8f52a405d91f1ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "         public void write( PrintWriter writer )             throws IOException", "signatureAfterChange": "         public void write( PrintWriter writer )             throws IOException", "diff": ["-                    Vector attrList = (Vector)object;", "-                    for( Enumeration e2 = attrList.elements(); e2.hasMoreElements(); )", "+                    ArrayList attrList = (ArrayList)object;", "+                    for( Iterator e2 = attrList.iterator(); e2.hasNext(); )", "-                        Attribute attribute = (Attribute)e2.nextElement();", "+                        Attribute attribute = (Attribute)e2.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e4223b7b9ae50d88de59651ed66c70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public String addAttributeAndCheck( Attribute attribute )             throws ManifestException, TaskException", "signatureAfterChange": "         public String addAttributeAndCheck( Attribute attribute )             throws ManifestException, TaskException", "diff": ["-                warnings.addElement( \"\\\"\" + ATTRIBUTE_NAME + \"\\\" attributes should not occur in the \" +", "+                warnings.add( \"\\\"\" + ATTRIBUTE_NAME + \"\\\" attributes should not occur in the \" +", "-                warnings.addElement( \"Manifest attributes should not start with \\\"\" +", "+                warnings.add( \"Manifest attributes should not start with \\\"\" +", "-                    Vector classpathAttrs = (Vector)attributes.get( attributeName );", "+                    ArrayList classpathAttrs = (ArrayList)attributes.get( attributeName );", "-                        classpathAttrs = new Vector();", "+                        classpathAttrs = new ArrayList();", "-                    classpathAttrs.addElement( attribute );", "+                    classpathAttrs.add( attribute );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabc242c019f2391442a3321d4ec2549", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f735f5f44df9fa52266e7b8b7f2741c2b7560d22", "commitAfterChange": "400ba5d1981259cc07b41f08cd1b53f048f8ef52", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void delFile( FTPClient ftp, String filename )         throws IOException, TaskException", "signatureAfterChange": "     protected void delFile( FTPClient ftp, String filename )         throws IOException, TaskException", "diff": ["-        if( verbose )", "+        if( m_verbose )", "-        if( !ftp.deleteFile( resolveFile( filename ) ) )", "+        if( !ftp.deleteFile( remoteResolveFile( filename ) ) )", "-            if( skipFailedTransfers == true )", "+            if( m_skipFailedTransfers == true )", "-                skipped++;", "+                m_skipped++;", "-            getLogger().debug( \"File \" + filename + \" deleted from \" + server );", "-            transferred++;", "+            getLogger().debug( \"File \" + filename + \" deleted from \" + m_server );", "+            m_transferred++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7368c1329086f5ee7f6780cf96f87f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void stop()", "signatureAfterChange": "     public void stop()", "diff": ["-        Enumeration keys = auditedFiles.keys();", "+        Iterator keys = auditedFiles.keys();", "-        while( keys.hasMoreElements() )", "+        while( keys.hasNext() )", "-            String filepath = (String)keys.nextElement();", "-            Vector v = (Vector)auditedFiles.get( filepath );", "+            String filepath = (String)keys.next();", "+            ArrayList v = (ArrayList)auditedFiles.get( filepath );", "-                MAudit.Violation violation = (MAudit.Violation)v.elementAt( i );", "+                MAudit.Violation violation = (MAudit.Violation)v.get( i );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d988b6f5e51df0dcadeffb22e38196d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MMetricsStreamHandler.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public static MetricsElement parse( String line )         throws ParseException", "signatureAfterChange": "      public static MetricsElement parse( String line )         throws ParseException", "diff": ["-        final Vector metrics = new Vector();", "+        final ArrayList metrics = new ArrayList();", "-            metrics.addElement( token );", "+            metrics.add( token );", "-        metrics.addElement( line );", "+        metrics.add( line );", "-        String name = (String)metrics.elementAt( 0 );", "-        metrics.removeElementAt( 0 );", "+        String name = (String)metrics.get( 0 );", "+        metrics.remove( 0 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da63fe7bd6f4686c164e1bd75d7bf3e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public String addAttributeAndCheck( Attribute attribute )             throws ManifestException, TaskException", "signatureAfterChange": "         public String addAttributeAndCheck( Attribute attribute )             throws ManifestException, TaskException", "diff": ["-                warnings.addElement( \"\\\"\" + ATTRIBUTE_NAME + \"\\\" attributes should not occur in the \" +", "+                warnings.add( \"\\\"\" + ATTRIBUTE_NAME + \"\\\" attributes should not occur in the \" +", "-                warnings.addElement( \"Manifest attributes should not start with \\\"\" +", "+                warnings.add( \"Manifest attributes should not start with \\\"\" +", "-                    Vector classpathAttrs = (Vector)attributes.get( attributeName );", "+                    ArrayList classpathAttrs = (ArrayList)attributes.get( attributeName );", "-                        classpathAttrs = new Vector();", "+                        classpathAttrs = new ArrayList();", "-                    classpathAttrs.addElement( attribute );", "+                    classpathAttrs.add( attribute );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5cb448b75e6c39c01676fbe931226ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void write( PrintWriter writer )         throws IOException, TaskException", "signatureAfterChange": "     public void write( PrintWriter writer )         throws IOException, TaskException", "diff": ["-        writer.println( ATTRIBUTE_MANIFEST_VERSION + \": \" + manifestVersion );", "-        String signatureVersion = mainSection.getAttributeValue( ATTRIBUTE_SIGNATURE_VERSION );", "+        writer.println( ATTRIBUTE_MANIFEST_VERSION + \": \" + m_manifestVersion );", "+        String signatureVersion = m_mainSection.getAttributeValue( ATTRIBUTE_SIGNATURE_VERSION );", "-            mainSection.removeAttribute( ATTRIBUTE_SIGNATURE_VERSION );", "+            m_mainSection.removeAttribute( ATTRIBUTE_SIGNATURE_VERSION );", "-        mainSection.write( writer );", "+        m_mainSection.write( writer );", "-                mainSection.addAttribute( new Attribute( ATTRIBUTE_SIGNATURE_VERSION, signatureVersion ) );", "+                m_mainSection.addAttribute( new Attribute( ATTRIBUTE_SIGNATURE_VERSION, signatureVersion ) );", "-        for( Enumeration e = sections.elements(); e.hasMoreElements(); )", "+        for( Enumeration e = m_sections.elements(); e.hasMoreElements(); )"]}]}