{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0385c3562b62afed1bd1fc03a1e7956b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e93f44bab7cf87e839a6e67ca175a28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean isValidRdbms( Connection conn )", "signatureAfterChange": "     protected boolean isValidRdbms( Connection conn )", "diff": ["-                getLogger().debug( \"RDBMS = \" + theVendor );", "+                getContext().debug( \"RDBMS = \" + theVendor );", "-                    getLogger().debug( \"Not the required RDBMS: \" + rdbms );", "+                    getContext().debug( \"Not the required RDBMS: \" + rdbms );", "-                getLogger().debug( \"Version = \" + theVersion );", "+                getContext().debug( \"Version = \" + theVersion );", "-                    getLogger().debug( \"Not the required version: \\\"\" + version + \"\\\"\" );", "+                    getContext().debug( \"Not the required version: \\\"\" + version + \"\\\"\" );", "-            getLogger().error( \"Failed to obtain required RDBMS information\" );", "+            getContext().error( \"Failed to obtain required RDBMS information\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "195f3f17a84edded1fa7b2eb125ef0b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void scan()         throws TaskException", "signatureAfterChange": "     private void scan()         throws TaskException", "diff": ["-                getLogger().info( \"Warning: targets file not specified. generating file: \" + targets.getName() );", "+                getContext().info( \"Warning: targets file not specified. generating file: \" + targets.getName() );", "-                getLogger().info( \"Specified targets file doesn't exist. generating file: \" + targets.getName() );", "+                getContext().info( \"Specified targets file doesn't exist. generating file: \" + targets.getName() );", "-                getLogger().info( \"You should consider using iControl to create a target file.\" );", "+                getContext().info( \"You should consider using iControl to create a target file.\" );", "-                        getLogger().warn( message );", "+                        getContext().warn( message );", "-                                    getLogger().info( \"Control file \" + controlFile.getAbsolutePath() + \" has been updated. Instrumenting all files...\" );", "+                                    getContext().info( \"Control file \" + controlFile.getAbsolutePath() + \" has been updated. Instrumenting all files...\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c136a2c4b3c82d12e168f83ec18837d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/text/FixCRLF.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void processFile( String file )         throws TaskException", "signatureAfterChange": "      private void processFile( String file )         throws TaskException", "diff": ["-                getLogger().debug( \"destFile exists\" );", "+                getContext().debug( \"destFile exists\" );", "-                    getLogger().debug( destFile + \" is being written\" );", "+                    getContext().debug( destFile + \" is being written\" );", "-                    getLogger().debug( destFile + \" is not written, as the contents are identical\" );", "+                    getContext().debug( destFile + \" is not written, as the contents are identical\" );", "-                getLogger().debug( \"destFile does not exist\" );", "+                getContext().debug( \"destFile does not exist\" );", "-                getLogger().error( \"Error closing \" + srcFile );", "+                getContext().error( \"Error closing \" + srcFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f4ecb9ea58fca3760c6b7df0a100a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/text/FixCRLF.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void processFile( String file )         throws TaskException", "signatureAfterChange": "      private void processFile( String file )         throws TaskException", "diff": ["-                getLogger().debug( \"destFile exists\" );", "+                getContext().debug( \"destFile exists\" );", "-                    getLogger().debug( destFile + \" is being written\" );", "+                    getContext().debug( destFile + \" is being written\" );", "-                    getLogger().debug( destFile + \" is not written, as the contents are identical\" );", "+                    getContext().debug( destFile + \" is not written, as the contents are identical\" );", "-                getLogger().debug( \"destFile does not exist\" );", "+                getContext().debug( \"destFile does not exist\" );", "-                getLogger().error( \"Error closing \" + srcFile );", "+                getContext().error( \"Error closing \" + srcFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5234866b7c06939166226cb7738c71e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        getLogger().debug( \"compiling \" + compileList.size() + \" files\" );", "+        getContext().debug( \"compiling \" + compileList.size() + \" files\" );", "-            getLogger().info( \"Compiling \" + compileList.size() +", "+            getContext().info( \"Compiling \" + compileList.size() +", "-                    getLogger().error( FAIL_MSG );", "+                    getContext().error( FAIL_MSG );", "-                getLogger().info( \"there were no files to compile\" );", "+                getContext().info( \"there were no files to compile\" );", "-                getLogger().debug( \"all files are up to date\" );", "+                getContext().debug( \"all files are up to date\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5a9630c84bd78d65dfadcc2e6583e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        getLogger().debug( \"compiling \" + compileList.size() + \" files\" );", "+        getContext().debug( \"compiling \" + compileList.size() + \" files\" );", "-            getLogger().info( \"Compiling \" + compileList.size() +", "+            getContext().info( \"Compiling \" + compileList.size() +", "-                    getLogger().error( FAIL_MSG );", "+                    getContext().error( FAIL_MSG );", "-                getLogger().info( \"there were no files to compile\" );", "+                getContext().info( \"there were no files to compile\" );", "-                getLogger().debug( \"all files are up to date\" );", "+                getContext().debug( \"all files are up to date\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a275479f22b836a5b74674e7e1d52af8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean isValidRdbms( Connection conn )", "signatureAfterChange": "     protected boolean isValidRdbms( Connection conn )", "diff": ["-                getLogger().debug( \"RDBMS = \" + theVendor );", "+                getContext().debug( \"RDBMS = \" + theVendor );", "-                    getLogger().debug( \"Not the required RDBMS: \" + rdbms );", "+                    getContext().debug( \"Not the required RDBMS: \" + rdbms );", "-                getLogger().debug( \"Version = \" + theVersion );", "+                getContext().debug( \"Version = \" + theVersion );", "-                    getLogger().debug( \"Not the required version: \\\"\" + version + \"\\\"\" );", "+                    getContext().debug( \"Not the required version: \\\"\" + version + \"\\\"\" );", "-            getLogger().error( \"Failed to obtain required RDBMS information\" );", "+            getContext().error( \"Failed to obtain required RDBMS information\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3ce6d1ceebfb1ef2ca3c18489a480d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Label.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        getLogger().info( \"P4Label exec:\" );", "+        getContext().info( \"P4Label exec:\" );", "-        getLogger().info( \"Created Label \" + m_name + \" (\" + m_description + \")\" );", "+        getContext().info( \"Created Label \" + m_name + \" (\" + m_description + \")\" );", "-            getLogger().info( \"Modifying lock status to 'locked'\" );", "+            getContext().info( \"Modifying lock status to 'locked'\" );", "-            getLogger().debug( labelSpec );", "+            getContext().debug( labelSpec );", "-            getLogger().debug( \"Now locking label...\" );", "+            getContext().debug( \"Now locking label...\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f34f3660e1729744c732be74d070cce2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Label.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        getLogger().info( \"P4Label exec:\" );", "+        getContext().info( \"P4Label exec:\" );", "-        getLogger().info( \"Created Label \" + m_name + \" (\" + m_description + \")\" );", "+        getContext().info( \"Created Label \" + m_name + \" (\" + m_description + \")\" );", "-            getLogger().info( \"Modifying lock status to 'locked'\" );", "+            getContext().info( \"Modifying lock status to 'locked'\" );", "-            getLogger().debug( labelSpec );", "+            getContext().debug( labelSpec );", "-            getLogger().debug( \"Now locking label...\" );", "+            getContext().debug( \"Now locking label...\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac15eb1a80fdc56b5a8d144a80ea98d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void scan()         throws TaskException", "signatureAfterChange": "     private void scan()         throws TaskException", "diff": ["-                getLogger().info( \"Warning: targets file not specified. generating file: \" + targets.getName() );", "+                getContext().info( \"Warning: targets file not specified. generating file: \" + targets.getName() );", "-                getLogger().info( \"Specified targets file doesn't exist. generating file: \" + targets.getName() );", "+                getContext().info( \"Specified targets file doesn't exist. generating file: \" + targets.getName() );", "-                getLogger().info( \"You should consider using iControl to create a target file.\" );", "+                getContext().info( \"You should consider using iControl to create a target file.\" );", "-                        getLogger().warn( message );", "+                        getContext().warn( message );", "-                                    getLogger().info( \"Control file \" + controlFile.getAbsolutePath() + \" has been updated. Instrumenting all files...\" );", "+                                    getContext().info( \"Control file \" + controlFile.getAbsolutePath() + \" has been updated. Instrumenting all files...\" );"]}]}