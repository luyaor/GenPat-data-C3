{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fc876ecd268f1deb22701ce35b83899", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "434e01175f36495fc65d3fcaee39f1bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsFileSelectedTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testNotSelector()", "signatureAfterChange": "      @Test     public void testNotSelector()", "diff": ["+", "+    @Test", "-        expectBuildExceptionContaining(", "-            \"not.selector\", \"checking for use as a selector (not allowed)\",", "-            \"fileset doesn't support the nested \\\"isfile\");", "+        try {", "+            buildRule.executeTarget(\"not.selector\");", "+            fail(\"Exception should have been thrown: checking for use as a selector (not allowed)\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"fileset doesn't support the nested \\\"isfile\",", "+                    ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28d183a4261cc9688c57df010e5ff2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/AddTypeTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testConditionConditionTask()", "signatureAfterChange": "          @Test     public void testConditionConditionTask()", "diff": ["+    ", "+    @Test", "-        expectBuildExceptionContaining(", "-            \"condition.condition.task\", \"task masking condition\",", "-            \"doesn't support the nested\");", "+        try {", "+            buildRule.executeTarget(\"condition.condition.task\");", "+            fail(\"Build exception expected: Task masking condition\");", "+        } catch (BuildException ex) {", "+             AntAssert.assertContains(\"doesn't support the nested\", ex.getMessage());", "+        }"]}]}