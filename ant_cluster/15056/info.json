{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d242965ddc52d0440352159c37816c3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ea1a0d896201c9eb0eab8b01b39633", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/impl/Environment.java", "commitBeforeChange": "0fb624e936ea10bcdbbe1e29e69761a87489fdbb", "commitAfterChange": "6679566ccaa583f1868dbd7b08c17bdf580c0ec5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static String getEnvironmentText()         throws IOException, ExecException", "signatureAfterChange": "     private String getEnvironmentText()         throws IOException, ExecException", "diff": ["-    private static String getEnvironmentText()", "+    private String getEnvironmentText()", "+        final String[] command = getEnvCommand();", "+        final File workingDirectory = new File( \".\" );", "+        final ExecMetaData metaData = new ExecMetaData( command, null, workingDirectory, false );", "+", "-        final Execute exe = new Execute();", "-        exe.setOutput( output );", "-        exe.setError( output );", "-", "-        exe.setCommandline( getEnvCommand() );", "-", "-        // Make sure we do not recurse forever", "-        exe.setNewenvironment( true );", "-", "-        try", "+        final int retval = m_execManager.execute( metaData, null, output, output, 0 );", "+        if( retval != 0 )", "-            final int retval = exe.execute();", "-            if( retval != 0 )", "-            {", "-                // Just try to use what we got", "-            }", "-        }", "-        catch( final TaskException te )", "-        {", "-            throw new ExecException( te.getMessage(), te );", "+            // Just try to use what we got"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a55bd795b9f1d0642cabf2448cca74d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private void setupDefaultParameters()", "signatureAfterChange": "     public static void main( final String[] args )", "diff": ["+        final Map properties = new HashMap();", "+        properties.put( \"myrmidon.home\", new File( \".\" ) );", "+        main( properties, args );", "+    }", "-    private void setupDefaultParameters()", "-    {", "-        //System property set up by launcher", "-        m_parameters.setParameter( \"myrmidon.home\", System.getProperty( \"myrmidon.home\", \".\" ) );", "-", "-        m_parameters.setParameter( \"filename\", \"build.ant\" );", "-        m_parameters.setParameter( \"log.level\", \"WARN\" );", "-        m_parameters.setParameter( \"listener\", \"default\" );", "-        m_parameters.setParameter( \"incremental\", \"false\" );", "-    }"]}]}