{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9858f322b530ec68fcc852eb995bce5b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b0a1d687df031606e75c885cde9a83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected static boolean matchPath( String pattern, String str, boolean isCaseSensitive )", "signatureAfterChange": "     protected static boolean matchPath( String pattern, String str, boolean isCaseSensitive )", "diff": ["-        Vector patDirs = new Vector();", "+        ArrayList patDirs = new ArrayList();", "-            patDirs.addElement( st.nextToken() );", "+            patDirs.add( st.nextToken() );", "-        Vector strDirs = new Vector();", "+        ArrayList strDirs = new ArrayList();", "-            strDirs.addElement( st.nextToken() );", "+            strDirs.add( st.nextToken() );", "-            String patDir = (String)patDirs.elementAt( patIdxStart );", "+            String patDir = (String)patDirs.get( patIdxStart );", "-            if( !match( patDir, (String)strDirs.elementAt( strIdxStart ), isCaseSensitive ) )", "+            if( !match( patDir, (String)strDirs.get( strIdxStart ), isCaseSensitive ) )", "-                if( !patDirs.elementAt( i ).equals( \"**\" ) )", "+                if( !patDirs.get( i ).equals( \"**\" ) )", "-            String patDir = (String)patDirs.elementAt( patIdxEnd );", "+            String patDir = (String)patDirs.get( patIdxEnd );", "-            if( !match( patDir, (String)strDirs.elementAt( strIdxEnd ), isCaseSensitive ) )", "+            if( !match( patDir, (String)strDirs.get( strIdxEnd ), isCaseSensitive ) )", "-                if( !patDirs.elementAt( i ).equals( \"**\" ) )", "+                if( !patDirs.get( i ).equals( \"**\" ) )", "-                if( patDirs.elementAt( i ).equals( \"**\" ) )", "+                if( patDirs.get( i ).equals( \"**\" ) )", "-                    String subPat = (String)patDirs.elementAt( patIdxStart + j + 1 );", "-                    String subStr = (String)strDirs.elementAt( strIdxStart + i + j );", "+                    String subPat = (String)patDirs.get( patIdxStart + j + 1 );", "+                    String subStr = (String)strDirs.get( strIdxStart + i + j );", "-            if( !patDirs.elementAt( i ).equals( \"**\" ) )", "+            if( !patDirs.get( i ).equals( \"**\" ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b4a1932c526f7892c1be2884decbd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected static boolean matchPath( String pattern, String str, boolean isCaseSensitive )", "signatureAfterChange": "     protected static boolean matchPath( String pattern, String str, boolean isCaseSensitive )", "diff": ["-        Vector patDirs = new Vector();", "+        ArrayList patDirs = new ArrayList();", "-            patDirs.addElement( st.nextToken() );", "+            patDirs.add( st.nextToken() );", "-        Vector strDirs = new Vector();", "+        ArrayList strDirs = new ArrayList();", "-            strDirs.addElement( st.nextToken() );", "+            strDirs.add( st.nextToken() );", "-            String patDir = (String)patDirs.elementAt( patIdxStart );", "+            String patDir = (String)patDirs.get( patIdxStart );", "-            if( !match( patDir, (String)strDirs.elementAt( strIdxStart ), isCaseSensitive ) )", "+            if( !match( patDir, (String)strDirs.get( strIdxStart ), isCaseSensitive ) )", "-                if( !patDirs.elementAt( i ).equals( \"**\" ) )", "+                if( !patDirs.get( i ).equals( \"**\" ) )", "-            String patDir = (String)patDirs.elementAt( patIdxEnd );", "+            String patDir = (String)patDirs.get( patIdxEnd );", "-            if( !match( patDir, (String)strDirs.elementAt( strIdxEnd ), isCaseSensitive ) )", "+            if( !match( patDir, (String)strDirs.get( strIdxEnd ), isCaseSensitive ) )", "-                if( !patDirs.elementAt( i ).equals( \"**\" ) )", "+                if( !patDirs.get( i ).equals( \"**\" ) )", "-                if( patDirs.elementAt( i ).equals( \"**\" ) )", "+                if( patDirs.get( i ).equals( \"**\" ) )", "-                    String subPat = (String)patDirs.elementAt( patIdxStart + j + 1 );", "-                    String subStr = (String)strDirs.elementAt( strIdxStart + i + j );", "+                    String subPat = (String)patDirs.get( patIdxStart + j + 1 );", "+                    String subStr = (String)strDirs.get( strIdxStart + i + j );", "-            if( !patDirs.elementAt( i ).equals( \"**\" ) )", "+            if( !patDirs.get( i ).equals( \"**\" ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ca77ae4acc8800fdfd7793253f0491", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "f292daba99b3d3955a157d1c43b7053e74df13da", "commitAfterChange": "1c3f4b1664951bb5e4c28de46b01dc50b0ee74bd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static boolean matchPath(String pattern, String str,             boolean isCaseSensitive)", "signatureAfterChange": "     public static boolean matchPath(String pattern, String str,             boolean isCaseSensitive)", "diff": ["-        Vector patDirs = tokenizePath (pattern);", "-        Vector strDirs = tokenizePath (str);", "+        String[] patDirs = tokenizePathAsArray(pattern);", "+        String[] strDirs = tokenizePathAsArray(str);", "-        int patIdxEnd   = patDirs.size()-1;", "+        int patIdxEnd   = patDirs.length-1;", "-        int strIdxEnd   = strDirs.size()-1;", "+        int strIdxEnd   = strDirs.length-1;", "-            String patDir = (String)patDirs.elementAt(patIdxStart);", "+            String patDir = patDirs[patIdxStart];", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxStart),", "+            if (!match(patDir,strDirs[strIdxStart],", "-                if (!patDirs.elementAt(i).equals(\"**\")) {", "+                if (!patDirs[i].equals(\"**\")) {", "-            String patDir = (String)patDirs.elementAt(patIdxEnd);", "+            String patDir = patDirs[patIdxEnd];", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxEnd),", "+            if (!match(patDir,strDirs[strIdxEnd],", "-                if (!patDirs.elementAt(i).equals(\"**\")) {", "+                if (!patDirs[i].equals(\"**\")) {", "-                if (patDirs.elementAt(i).equals(\"**\")) {", "+                if (patDirs[i].equals(\"**\")) {", "-                    String subPat = (String)patDirs.elementAt(patIdxStart+j+1);", "-                    String subStr = (String)strDirs.elementAt(strIdxStart+i+j);", "+                    String subPat = patDirs[patIdxStart+j+1];", "+                    String subStr = strDirs[strIdxStart+i+j];", "-            if (!patDirs.elementAt(i).equals(\"**\")) {", "+            if (!patDirs[i].equals(\"**\")) {"]}]}