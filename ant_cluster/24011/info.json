{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3776b075dafc5a8a9c17da5fd81bd17f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ffad40e0bb67cb17e79713d668d607e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "179bc428c9da672a95511cdfe407058c888532e1", "commitAfterChange": "49c2480ab253ca2b0109bb0d9b8ac8432519a9ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException, ServiceException", "signatureAfterChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException, ServiceException", "diff": ["-        // Create and configure the context", "-        final DefaultTaskContext context =", "-            new DefaultTaskContext( m_baseContext, serviceManager );", "-        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-", "+        // Create and configure the context", "+        final DefaultTaskContext context =", "+            new DefaultTaskContext( m_baseContext, serviceManager, logger );", "+        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc20deff0c72f31147ee98a9169ada5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "commitAfterChange": "43cbdfc52cca75f3089c7494d99b91cb9d562fc0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "signatureAfterChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "diff": ["-        final TaskContext context = new DefaultTaskContext( m_baseContext );", "-        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-", "+        // Create and configure the context", "+        final DefaultTaskContext context =", "+            new DefaultTaskContext( m_baseContext, componentManager );", "+        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+", "-            frame.compose( componentManager );"]}]}