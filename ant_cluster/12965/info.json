{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2040b188c9d8f88d71061d33f48a73c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "671fba23a958a13c57084c49447c2bd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "e2cc34fa963ffa74a7e6dc7fa60d8ba32042b83c", "commitAfterChange": "7b867a10d26f96911855430e79c668df0e053cef", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void buildTarget( final DefaultProject project, final Configuration target )         throws Exception", "signatureAfterChange": "     private void buildTarget( final DefaultProject project, final Configuration target )         throws Exception", "diff": ["-    protected void buildTarget( final DefaultProject project, final Configuration target )", "+    private void buildTarget( final DefaultProject project, final Configuration target )", "-                                    target.getLocation() );", "+                                 target.getLocation() );", "+        }", "+", "+        if( !validName( name ) )", "+        {", "+            throw new Exception( \"Target with an invalid name at \" +", "+                                 target.getLocation() );           ", "-        final DefaultTarget defaultTarget = new DefaultTarget( condition );", "+        String[] dependencies = null;", "+            final ArrayList dependsList = new ArrayList();", "-                defaultTarget.addDependency( dependency );", "+                dependsList.add( dependency );", "+                //defaultTarget.addDependency( dependency );", "+", "+            dependencies = (String[])dependsList.toArray( new String[ 0 ] );", "-        //add all the targets from element", "-        final Configuration[] tasks = target.getChildren();", "-        for( int i = 0; i < tasks.length; i++ )", "-        {", "-            getLogger().debug( \"Parsed task: \" + tasks[ i ].getName() );", "-            defaultTarget.addTask( tasks[ i ] );", "-        }", "+        final Target defaultTarget =", "+            new Target( condition, target.getChildren(), dependencies );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a5500cd9ffb4a51e52409f843c42ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DOMElementWriter.java", "commitBeforeChange": "c098b9c80d5ef451dfd683510c9f6c28489a8685", "commitAfterChange": "313479bb3569061c2598d90274930c4957d36364", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String encodedata(final String value)", "signatureAfterChange": "     public String encodedata(final String value)", "diff": ["+        final StringWriter out = new StringWriter();", "+        try {", "+            encodedata(out, value);", "+        } catch (IOException ex) {", "+            throw new RuntimeException(ex);", "+        }", "+        return out.toString();", "+    }", "-        StringBuffer sb = new StringBuffer(len);", "-        for (int i = 0; i < len; ++i) {", "-            final char c = value.charAt(i);", "-            if (isLegalCharacter(c)) {", "-                sb.append(c);", "-", "-        return sb.substring(0).replace(\"]]>\", \"]]]]><![CDATA[>\");"]}]}