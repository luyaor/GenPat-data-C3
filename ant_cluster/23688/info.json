{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db63ab789631541244d4df7337518e43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439f40745a262b07172ec85c0331b8a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Condition.java", "commitBeforeChange": "2941067384b5af577d0d3f98a6503af84f5692b7", "commitAfterChange": "07c3b5de55282058c5a6353f9231803f37b769e8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean evaluate( final TaskContext context )         throws TaskException", "signatureAfterChange": "      public boolean evaluate( final TaskContext context )         throws TaskException", "diff": ["-        try", "+        final Object resolved = context.resolveValue( getCondition() );", "+        if( null != resolved )", "-            final Object resolved = context.resolveValue( getCondition() );", "-            if( null != resolved )", "+            final Object object = context.getProperty( resolved.toString() );", "+            if( object != null && !object.toString().equals( \"false\" ) )", "-                final Object object = context.get( resolved );", "-                final String string = object.toString();", "-                if( null == string || string.equals( \"false\" ) )", "-                {", "-                    result = false;", "-                }", "-                else", "-                {", "-                    result = true;", "-                }", "+                result = true;", "-        catch( final ContextException ce )", "-        {", "-            // Unknown property", "-            result = false;", "-        }", "-        /*", "-                catch( final PropertyException pe )", "-                {", "-                    final String message = REZ.getString( \"condition.no-resolve.error\", m_condition );", "-                    throw new ContextException( message, pe );", "-                }", "-        */", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9be7319cc63c6f364dec3ba004bf32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java", "commitBeforeChange": "f3e9ec622f89b35e9ccfb3fcfa30ab010381bc0f", "commitAfterChange": "c4fc48f69dc1a3abe436e42c103e6b53eb92d918", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final Reader getAssembledReader() throws BuildException", "signatureAfterChange": "     public final Reader getAssembledReader() throws BuildException", "diff": ["-                                if (project != null &&", "-                                        instream instanceof BaseFilterReader) {", "-                                    ((BaseFilterReader)", "-                                        instream).setProject(project);", "-                                }", "+                                setProjectOnObject(instream);", "-                } else if (o instanceof ChainableReader &&", "-                           o instanceof Reader) {", "-                    if (project != null && o instanceof BaseFilterReader) {", "-                        ((BaseFilterReader) o).setProject(project);", "-                    }", "+                } else if (o instanceof ChainableReader) {", "+                    setProjectOnObject(o);", "+                    setProjectOnObject(instream);"]}]}