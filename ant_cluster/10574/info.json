{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "351d242439e38f728b8b3e83f90e75ca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27369df5c0354fc28ac5804d7765c9f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/NetCommand.java", "commitBeforeChange": "41c047f603dc46b74b7058e2c1dd0d3001cd29ab", "commitAfterChange": "c1080f1b8a8469dc79a8f5f86b287544b0ad0b6b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void prepareExecutor() throws BuildException", "signatureAfterChange": "     protected void prepareExecutor()", "diff": ["-    protected void prepareExecutor() throws BuildException {", "+    protected void prepareExecutor() {", "-                                                          Project.MSG_INFO, Project.MSG_WARN);", "+                   Project.MSG_INFO, Project.MSG_WARN);", "-        /* do nothing with env variables. REVISIT: SDK command line?", "-           String[] environment = env.getVariables();", "-           exe.setEnvironment(environment);", "-        */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc9f31d0ac616794f400765877ee560", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "30c0d31cc4e6eba6ffc9ead619b6f9f1d5181af3", "commitAfterChange": "813c2482279195999531f86dce204164523a071b", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 71, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkAttributes() throws BuildException", "diff": ["-    protected void checkConfiguration() throws BuildException {", "+    protected void checkAttributes() throws BuildException {", "+        }", "+        ", "+        if (this.isConfigurationSet) {", "+            try {", "+                Class.forName(\"org.apache.commons.net.ftp.FTPClientConfig\");", "+            } catch (ClassNotFoundException e) {", "+                throw new BuildException(", "+                 \"commons-net.jar >= 1.4.0 is required for at least one of the attributes specified.\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97150bd54a3118b5a5ec081df362ba6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "commitAfterChange": "af0505dd8ad69538cef3c64f9674c27c1d1775fb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  public void read(BufferedReader reader) throws IOException", "signatureAfterChange": "                  public String read(BufferedReader reader) throws IOException", "diff": ["-        public void read(BufferedReader reader) throws IOException {", "+        public String read(BufferedReader reader) throws IOException {", "-                    return;", "+                    return null;", "-                    if (name == null && attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                        throw new IOException(\"The \" + ATTR_NAME + \" header may not occur in the main section \");", "+                    if (attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "+                        return attribute.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e518b6af440bed038432571f6918ebb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/ScriptRunner.java", "commitBeforeChange": "c921aed139423ca20385db1fbce548c872e9d8bb", "commitAfterChange": "09ce03634e93c676d483b537b8e00e8f4b068e4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void throwBuildException(BSFException be)", "signatureAfterChange": "     private BuildException getBuildException(BSFException be)", "diff": ["-    private void throwBuildException(BSFException be) {", "+    private BuildException getBuildException(BSFException be) {", "-        if (te != null) {", "-            if  (te instanceof BuildException) {", "-                throw (BuildException) te;", "-            } else {", "-                t = te;", "-            }", "+        if (te instanceof BuildException) {", "+            return (BuildException) te;", "-        throw new BuildException(t);", "+        return new BuildException(te == null ? t : te);"]}]}