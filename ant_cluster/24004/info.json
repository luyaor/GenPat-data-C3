{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2efc9a863ec15dac18ccad1ce41d67f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "204dfa3b3680cdf97c82d6a576e54e2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private int run(String[] args)             throws LaunchException, MalformedURLException", "signatureAfterChange": "     private int run(final String[] args)             throws LaunchException, MalformedURLException", "diff": ["-    private int run(String[] args)", "+    private int run(final String[] args)", "-        String antHomeProperty = System.getProperty(ANTHOME_PROPERTY);", "+        final String antHomeProperty = System.getProperty(ANTHOME_PROPERTY);", "-        File sourceJar = Locator.getClassSource(getClass());", "-        File jarDir = sourceJar.getParentFile();", "+        final File sourceJar = Locator.getClassSource(getClass());", "+        final File jarDir = sourceJar.getParentFile();", "-        List<String> libPaths = new ArrayList<String>();", "+        final List<String> libPaths = new ArrayList<String>();", "-        List<String> argList = new ArrayList<String>();", "+        final List<String> argList = new ArrayList<String>();", "-            newArgs = (String[]) argList.toArray(new String[argList.size()]);", "+            newArgs = argList.toArray(new String[argList.size()]);", "-        URL[] libURLs    = getLibPathURLs(", "+        final URL[] libURLs    = getLibPathURLs(", "-        URL[] systemURLs = getSystemURLs(jarDir);", "-        URL[] userURLs   = noUserLib ? new URL[0] : getUserURLs();", "+        final URL[] systemURLs = getSystemURLs(jarDir);", "+        final URL[] userURLs   = noUserLib ? new URL[0] : getUserURLs();", "-        File toolsJAR = Locator.getToolsJar();", "+        final File toolsJAR = Locator.getToolsJar();", "-        URL[] jars = getJarArray(", "+        final URL[] jars = getJarArray(", "-        StringBuffer baseClassPath", "+        final StringBuffer baseClassPath", "-        URLClassLoader loader = new URLClassLoader(jars, Launcher.class.getClassLoader());", "+        final URLClassLoader loader = new URLClassLoader(jars, Launcher.class.getClassLoader());", "-            AntMain main = (AntMain) mainClass.newInstance();", "+            final AntMain main = (AntMain) mainClass.newInstance();", "-        } catch (InstantiationException ex) {", "+        } catch (final InstantiationException ex) {", "-            File mainJar = Locator.getClassSource(mainClass);", "+            final File mainJar = Locator.getClassSource(mainClass);", "-        } catch (ClassNotFoundException cnfe) {", "+        } catch (final ClassNotFoundException cnfe) {", "-        } catch (Throwable t) {", "+        } catch (final Throwable t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cb3beb361685157519893ecbbad3b31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            Properties props = new Properties();", "+            final Properties props = new Properties();", "-                    Provider p = (Provider) Class.forName(", "+                    final Provider p = (Provider) Class.forName(", "-                } catch (Exception e) {", "+                } catch (final Exception e) {", "-            MimeMessage msg = new MimeMessage(sesh);", "-            MimeMultipart attachments = new MimeMultipart();", "+            final MimeMessage msg = new MimeMessage(sesh);", "+            final MimeMultipart attachments = new MimeMultipart();", "-            StringDataSource sds = new StringDataSource();", "+            final StringDataSource sds = new StringDataSource();", "-                for (Iterator iter = headers.iterator(); iter.hasNext();) {", "-                    Header h = (Header) iter.next();", "+                for (final Iterator iter = headers.iterator(); iter.hasNext();) {", "+                    final Header h = (Header) iter.next();", "-            PrintStream out = new PrintStream(sds.getOutputStream());", "+            final PrintStream out = new PrintStream(sds.getOutputStream());", "-            MimeBodyPart textbody = new MimeBodyPart();", "+            final MimeBodyPart textbody = new MimeBodyPart();", "-            Enumeration e = files.elements();", "+            final Enumeration e = files.elements();", "-                File file = (File) e.nextElement();", "+                final File file = (File) e.nextElement();", "-                FileDataSource fileData = new FileDataSource(file);", "-                DataHandler fileDataHandler = new DataHandler(fileData);", "+                final FileDataSource fileData = new FileDataSource(file);", "+                final DataHandler fileDataHandler = new DataHandler(fileData);", "-                Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "+                final Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "-            } catch (SendFailedException sfe) {", "+            } catch (final SendFailedException sfe) {", "-        } catch (MessagingException e) {", "+        } catch (final MessagingException e) {", "-        } catch (IOException e) {", "+        } catch (final IOException e) {"]}]}