{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b063541adc17995dd70b2317a1e4c50", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b79f2b3f88081eea72c1282b700f38c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/ExecuteWatchdog.java", "commitBeforeChange": "bc26bb7cdcb37a5b579734985586e9cb1c7bc899", "commitAfterChange": "007e5e2034ecd772345540300195ae11d2bb590d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void run()", "signatureAfterChange": "     public synchronized void run()", "diff": ["-            final long until = System.currentTimeMillis() + timeout;", "+            final long until = System.currentTimeMillis() + m_timeout;", "-            while( watch && until > ( now = System.currentTimeMillis() ) )", "+            while( m_watch && until > ( now = System.currentTimeMillis() ) )", "-                process.exitValue();", "+                m_process.exitValue();", "-                if( watch )", "+                if( m_watch )", "-                    killedProcess = true;", "-                    process.destroy();", "+                    m_killedProcess = true;", "+                    m_process.destroy();", "-            caught = e;", "+            m_caught = e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9fac5e7ffe9caa54bac48968176a4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/ExecuteWatchdog.java", "commitBeforeChange": "bc26bb7cdcb37a5b579734985586e9cb1c7bc899", "commitAfterChange": "007e5e2034ecd772345540300195ae11d2bb590d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void run()", "signatureAfterChange": "     public synchronized void run()", "diff": ["-            final long until = System.currentTimeMillis() + timeout;", "+            final long until = System.currentTimeMillis() + m_timeout;", "-            while( watch && until > ( now = System.currentTimeMillis() ) )", "+            while( m_watch && until > ( now = System.currentTimeMillis() ) )", "-                process.exitValue();", "+                m_process.exitValue();", "-                if( watch )", "+                if( m_watch )", "-                    killedProcess = true;", "-                    process.destroy();", "+                    m_killedProcess = true;", "+                    m_process.destroy();", "-            caught = e;", "+            m_caught = e;"]}]}