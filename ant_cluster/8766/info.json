{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10dd694a426e7807ffb83daae29e25e8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e8585c8c2c35059f0b39b896f85502", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultPropertyConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object createValue( final Object parent )         throws ConfigurationException", "signatureAfterChange": "     public Object createValue( ConfigurationState state )         throws ConfigurationException", "diff": ["-     */", "-    public Object createValue( final Object parent )", "+    public Object createValue( ConfigurationState state )", "+        if( null == m_createMethod )", "+        {", "+            return null;", "+        }", "+", "+        final DefaultConfigurationState defState = (DefaultConfigurationState)state;", "+", "+        // Make sure there isn't a pending object for this property", "+        if( defState.getCreatedObject( m_propIndex ) != null )", "+        {", "+            final String message = REZ.getString( \"pending-property-value.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "-            if( null != m_createMethod )", "-            {", "-                return m_createMethod.invoke( parent, null );", "-            }", "-            else", "-            {", "-                return m_type.newInstance();", "-            }", "+            // Create the value", "+            final Object object = m_createMethod.invoke( defState.getObject(), null );", "+            defState.setCreatedObject( m_propIndex, object );", "+            return object;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "579a4e095fe929c71d8ba90c150fcf61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultPropertyConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setValue( final Object parent, final Object child )         throws ConfigurationException", "signatureAfterChange": "     public void addValue( ConfigurationState state, Object value )         throws ConfigurationException", "diff": ["-    public void setValue( final Object parent, final Object child )", "+    public void addValue( ConfigurationState state, Object value )", "+        final DefaultConfigurationState defState = (DefaultConfigurationState)state;", "+", "+        // Make sure the supplied object is the pending object", "+        final Object pending = defState.getCreatedObject( m_propIndex );", "+        if( pending != null && pending != value )", "+        {", "+        }", "+", "+        // Make sure the creator method was called, if necessary", "+        if( pending == null && m_createMethod != null  )", "+        {", "+            final String message = REZ.getString( \"must-be-element.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "+        defState.setCreatedObject( m_propIndex, null );", "+", "+        // Check the property count", "+        if( defState.getPropCount( m_propIndex ) >= m_maxCount )", "+        {", "+            final String message = REZ.getString( \"too-many-values.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+        defState.incPropCount( m_propIndex );", "+", "+            // Add the value", "-                m_addMethod.invoke( parent, new Object[]{child} );", "+                m_addMethod.invoke( defState.getObject(), new Object[]{ value } );"]}]}