{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c1b5558932460d84a36b7d1b2f35c39", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d152e6e0b2da36ee46bb3c01b0721c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Console.java", "commitBeforeChange": "14440efdc9c9554d9aa53d6d08e78ea80d799215", "commitAfterChange": "8f1c8244496bf51623d91f0bf9ac9148f0e92df7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Console(AppContext context)", "signatureAfterChange": "     public Console()", "diff": ["-    public Console(AppContext context) {", "-        super(context);", "+    public Console() {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ac719090c6c3253d2308f534dc591e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "3d3f26df41af8589e7f9bc8331ed2d3398e4a7b9", "commitAfterChange": "1d63aeddfa4d52f665ca097f5842dc6fd0f291cd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-", "-", "-                project.init();", "-", "-                // resolve properties", "-                PropertyHelper propertyHelper", "-                    = (PropertyHelper) PropertyHelper.getPropertyHelper(project);", "-                HashMap props = new HashMap(definedProps);", "-                new ResolvePropertyMap(project, propertyHelper,", "-                                       propertyHelper.getExpanders())", "-                    .resolveAllProperties(props, null, false);", "-", "-                // set user-define properties", "-                for (Iterator e = props.entrySet().iterator(); e.hasNext(); ) {", "-                    Map.Entry ent = (Map.Entry) e.next();", "-                    String arg = (String) ent.getKey();", "-                    Object value = ent.getValue();", "-                    project.setUserProperty(arg, String.valueOf(value));", "-                }", "-", "-                project.setUserProperty(MagicNames.ANT_FILE,", "-                                        buildFile.getAbsolutePath());", "-                project.setUserProperty(MagicNames.ANT_FILE_TYPE,", "-                                        MagicNames.ANT_FILE_TYPE_FILE);", "+                setProperties(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ea27a2fd693d766e955e39aa62e4796", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "1a02a5f570c6b91a6efc7233b47ad45feeee8b75", "commitAfterChange": "e0bed0aa143b567e005e51e811e5622e5103eacd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void enableProperties()         throws ConfigurationException", "signatureAfterChange": "     private void enableProperties()         throws ConfigurationException", "diff": ["-        final Map creators = findCreators();", "-        final Set elemNames = new HashSet();", "-        elemNames.addAll( creators.keySet() );", "-        elemNames.addAll( adders.keySet() );", "-        final Iterator iterator = elemNames.iterator();", "+        final Iterator iterator = adders.keySet().iterator();", "-            final Method createMethod = (Method)creators.get( propName );", "-            Class type;", "-            if( createMethod != null && addMethod != null )", "-            {", "-                // Make sure the add method is more general than the create", "-                // method", "-                type = createMethod.getReturnType();", "-                final Class addType = addMethod.getParameterTypes()[ 0 ];", "-                if( !addType.isAssignableFrom( type ) )", "-                {", "-                    final String message =", "-                        REZ.getString( \"incompatible-element-types.error\",", "-                                       m_class.getName(),", "-                                       propName );", "-                    throw new ConfigurationException( message );", "-                }", "-            }", "-            else if( createMethod != null )", "-            {", "-                type = createMethod.getReturnType();", "-            }", "-            else", "-            {", "-                type = addMethod.getParameterTypes()[ 0 ];", "-            }", "-", "+            final Class type = addMethod.getParameterTypes()[ 0 ];", "-                                               createMethod,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9330eb0c0c792a1b8832893d6b32ebb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Properties getProperties()", "signatureAfterChange": "     public Properties getProperties()", "diff": ["+        final Properties result = new Properties();", "+        result.putAll(getPropertyMap());", "+        return result;", "+    }", "-            return getRef().getProperties();", "-        Hashtable props = getEffectiveProperties();", "-        Set names = getPropertyNames(props);", "-        FileNameMapper m = null;", "-        Mapper myMapper = getMapper();", "-        if (myMapper != null) {", "-            m = myMapper.getImplementation();", "-        }", "-        Properties properties = new Properties();", "-        for (Iterator iter = names.iterator(); iter.hasNext();) {", "-            String name = (String) iter.next();", "-            String value = (String) props.get(name);", "-                properties.setProperty(name, value);", "-        return properties;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23e99de28980d6bf0c1cb1ce8b481eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/ModelElement.java", "commitBeforeChange": "69d9b9a49622889f44d6792faf00f886857828d6", "commitAfterChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAspects(Map aspects)", "signatureAfterChange": "     public void addAspectAttributes(Map aspectAttributes)", "diff": ["-    public void setAspects(Map aspects) {", "-        aspectMaps = new HashMap();", "-        for (Iterator i = aspects.keySet().iterator(); i.hasNext();) {", "-            String aspectName = (String) i.next();", "-            int separator = aspectName.indexOf(\":\");", "-            if (separator != -1) {", "-                String prefix = aspectName.substring(0, separator);", "-                String name = aspectName.substring(separator + 1);", "-                if (prefix.length() != 0 && name.length() != 0) {", "-                    Map prefixMap = (Map) aspectMaps.get(prefix);", "-                    if (prefixMap == null) {", "-                        prefixMap = new HashMap();", "-                        aspectMaps.put(prefix, prefixMap);", "-                    }", "-                    prefixMap.put(name, aspects.get(aspectName));", "-                }", "-            }", "-        }", "+    public void addAspectAttributes(Map aspectAttributes) {", "+        aspectValues.addAttributes(aspectAttributes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41dee5801473d6aa6d4c9424fb88a83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/ActionManager.java", "commitBeforeChange": "3ddbc0b6c9ac6420db40ac98fd25c9960a28880b", "commitAfterChange": "821004a5407db28a7482cff8f928d92b7615ea36", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public AntAction(String id)", "signatureAfterChange": "         public void eventPosted(EventObject event)", "diff": ["+         */", "+        public void eventPosted(EventObject event) {", "+            _mapper.applyEvent(event);", "-        public AntAction(String id) {", "-            _id = id;", "-            putValue(NAME, getString(id, \"name\"));", "-            putValue(SHORT_DESCRIPTION, getString(id, \"shortDescription\"));", "-            putValue(PARENT_MENU_NAME, getString(id, PARENT_MENU_NAME));", "-            putValue(SEPARATOR, getString(id, SEPARATOR));", "-", "-            String accelerator = getString(id, ACCELERATOR);", "-", "-            if(accelerator != null) {", "-                putValue(ACCELERATOR, KeyStroke.getKeyStroke(accelerator));", "-            }", "-", "-            String iconName = getString(id, \"icon\");", "-            if(iconName != null) {", "-                try {", "-                    URL imageLoc = ", "-                        AntAction.class.getResource(\"resources/\" + iconName);", "-                    if(imageLoc != null) {", "-                        putValue(SMALL_ICON, new ImageIcon(imageLoc));", "-                    }", "-                }", "-                catch(Exception ex) {", "-                    // XXX log me.", "-                    ex.printStackTrace();", "-                }", "-            }", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec9f2e6e8115d2116713ea52e57cddc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b2b649d12de2918643d1aa910f194df3be345df9", "commitAfterChange": "781a2ed11e930ead82864bf494d4d3c0b3e945f8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Hashtable getProperties()", "signatureAfterChange": "     public Hashtable getProperties()", "diff": ["-        Hashtable ret = new Hashtable(properties);", "-        Map locals = threadLocalProperties.getProps();", "-        for (Iterator i = locals.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry e = (Map.Entry) i.next();", "-            List l = (List) e.getValue();", "-            if (l != null && l.size() > 0) {", "-                LocalProperty p = (LocalProperty) l.get(l.size() - 1);", "-                if (p.getValue() == null) {", "-                    if (ret.get(e.getKey()) != null) {", "-                        ret.remove(e.getKey());", "-                    }", "-                } else {", "-                    ret.put(e.getKey(), p.getValue());", "-                }", "-            }", "-        }", "-        return ret;", "-", "+        return new Hashtable(properties);"]}]}