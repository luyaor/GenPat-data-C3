{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "047ddd2e982128eaea6226719b420c21", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9aeb649828db455da142667254a0126", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public static Manifest getDefaultManifest() throws BuildException", "signatureAfterChange": "     public static Manifest getDefaultManifest() throws BuildException", "diff": ["-            String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "-            InputStream in = Manifest.class.getResourceAsStream(s);", "+            String defManifest = \"/org/apache/tools/ant/defaultManifest.mf\";", "+            InputStream in = Manifest.class.getResourceAsStream(defManifest);", "-                throw new BuildException(\"Could not find default manifest: \" + s);", "+                throw new BuildException(\"Could not find default manifest: \" ", "+                    + defManifest);", "-        }", "-        catch (ManifestException e) {", "+        } catch (ManifestException e) {", "-        }", "-        catch (IOException e) {", "+        } catch (IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1c887ee3921379144cd0209a9e57e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "7e7fa2f905e691ba00568bc670cc80060c224fd4", "commitAfterChange": "590936af269c77bda5fb410fd81e19958062efe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Manifest getDefaultManifest() throws IOException", "signatureAfterChange": "              private Manifest getDefaultManifest()", "diff": ["-", "-    private Manifest getDefaultManifest() throws IOException {", "-        String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "-        InputStream in = this.getClass().getResourceAsStream(s);", "-        if (in == null) {", "-            throw new BuildException(\"Could not find: \" + s);", "+        ", "+    private Manifest getDefaultManifest() {", "+        try {", "+            String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "+            InputStream in = this.getClass().getResourceAsStream(s);", "+            if (in == null) {", "+                throw new BuildException(\"Could not find default manifest: \" + s);", "+            }", "+            return new Manifest(in);", "-        return new Manifest(in);", "+        catch (ManifestException e) {", "+            throw new BuildException(\"Default manifest is invalid !!\");", "+        }", "+        catch (IOException e) {", "+            throw new BuildException(\"Unable to read default manifest\", e);", "+        }"]}]}