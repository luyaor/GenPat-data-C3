{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6655a0daf72a2ec5a825b9dd077d3ec5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3303aca9ceb800b25156d3cc08eca7a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "1885612e5d6666e09a655fbe4f1ee888e2e26f69", "commitAfterChange": "9585ec663a4244b8b75bdfe173c115189cbd08c4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private boolean testIfAllows()", "signatureAfterChange": "          public boolean eval() throws BuildException", "diff": ["-    private boolean testIfAllows() {", "-        PropertyHelper propertyHelper = PropertyHelper.getPropertyHelper(getProject());", "-        Object o = propertyHelper.parseProperties(ifCondition);", "-        if (!propertyHelper.testIfCondition(o)) {", "-            return false;", "-        if (if_ != null && !if_.eval()) {", "-            return false;", "+", "+        public boolean eval() throws BuildException {", "+            PropertyHelper propertyHelper = PropertyHelper.getPropertyHelper(getProject());", "+            Object o = propertyHelper.parseProperties(condition);", "+            return propertyHelper.testIfCondition(o);", "-        return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e314b06bbabf8bf9c769dc896262cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "1885612e5d6666e09a655fbe4f1ee888e2e26f69", "commitAfterChange": "9585ec663a4244b8b75bdfe173c115189cbd08c4", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private boolean testUnlessAllows()", "signatureAfterChange": "          public boolean eval() throws BuildException", "diff": ["-    private boolean testUnlessAllows() {", "-        PropertyHelper propertyHelper = PropertyHelper.getPropertyHelper(getProject());", "-        Object o = propertyHelper.parseProperties(unlessCondition);", "-        if (!propertyHelper.testUnlessCondition(o)) {", "-            return false;", "-        if (unless != null && unless.eval()) {", "-            return false;", "+", "+        public boolean eval() throws BuildException {", "+            PropertyHelper propertyHelper = PropertyHelper.getPropertyHelper(getProject());", "+            Object o = propertyHelper.parseProperties(condition);", "+            return propertyHelper.testUnlessCondition(o);", "-        return true;"]}]}