{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bd57fb39d0d867414a46238cd48894f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcab4bc9efcf043e4b208d2aeae3f93f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void setProject(Project project) throws ConfigException", "signatureAfterChange": "     protected void setProject(Project project) throws ExecutionException", "diff": ["-    protected void setProject(Project project) throws ConfigException {", "+    protected void setProject(Project project) throws ExecutionException {", "-        URL projectURL = project.getSourceURL();", "-        if (projectURL.getProtocol().equals(\"file\")) {", "-            File projectFile = new File(projectURL.getFile());", "-            String base = project.getBase();", "-            if (base == null) {", "-                base = \".\";", "-            }", "-            baseDir = new File(projectFile.getParentFile(), base);", "-        } else {", "-            baseDir = new File(\".\");", "-        }", "-", "-            ExecutionFrame referencedFrame", "-                 = new ExecutionFrame(standardLibs, initConfig, config);", "-            referencedFrame.setProject(referencedProject);", "+            ExecutionFrame referencedFrame = createFrame(referencedProject);", "-            for (Iterator j = eventSupport.getListeners(); j.hasNext(); ) {", "-                BuildListener listener = (BuildListener)j.next();", "-                referencedFrame.addBuildListener(listener);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1a35093b915c62f50905475fe4d516", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setProject(Project project) throws ConfigException", "signatureAfterChange": "     protected void setProject(Project project) throws ConfigException", "diff": ["-    public void setProject(Project project) throws ConfigException {", "-        try {", "-            this.project = project;", "-            baseURL = new URL(project.getSourceURL(), project.getBase());", "-        } catch (MalformedURLException e) {", "-            throw new ConfigException(\"Unable to determine project base dir\",", "-                e, project.getLocation());", "+    protected void setProject(Project project) throws ConfigException {", "+        this.project = project;", "+        URL projectURL = project.getSourceURL();", "+        if (projectURL.getProtocol().equals(\"file\")) {", "+            File projectFile = new File(projectURL.getFile());", "+            String base = project.getBase();", "+            if (base == null) {", "+                base = \".\";", "+            }", "+            baseDir = new File(projectFile.getParentFile(), base);", "+        } else {", "+            baseDir = new File(\".\");", "-                 = new ExecutionFrame(antLibraries);", "+                 = new ExecutionFrame(standardLibs, initConfig, config);"]}]}