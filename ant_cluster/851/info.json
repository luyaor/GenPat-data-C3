{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e77fc875f77f9c0ab0fd8def5099149", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ea922e187e2d2fb152b3d8502a251d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarInputStream.java", "commitBeforeChange": "23bbf085727756cfbad92aaa345e10c7370d3486", "commitAfterChange": "75110026aa35fe98da6c696598361977c3c46c48", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int read(byte[] buf, int offset, int numToRead) throws IOException", "signatureAfterChange": "     public int read(byte[] buf, int offset, int numToRead) throws IOException", "diff": ["-        if (this.entryOffset >= this.entrySize) {", "+        if (entryOffset >= entrySize) {", "-        if ((numToRead + this.entryOffset) > this.entrySize) {", "-            numToRead = (int) (this.entrySize - this.entryOffset);", "+        if ((numToRead + entryOffset) > entrySize) {", "+            numToRead = (int) (entrySize - entryOffset);", "-        if (this.readBuf != null) {", "-            int sz = (numToRead > this.readBuf.length) ? this.readBuf.length", "+        if (readBuf != null) {", "+            int sz = (numToRead > readBuf.length) ? readBuf.length", "-            System.arraycopy(this.readBuf, 0, buf, offset, sz);", "+            System.arraycopy(readBuf, 0, buf, offset, sz);", "-            if (sz >= this.readBuf.length) {", "-                this.readBuf = null;", "+            if (sz >= readBuf.length) {", "+                readBuf = null;", "-                int newLen = this.readBuf.length - sz;", "+                int newLen = readBuf.length - sz;", "-                System.arraycopy(this.readBuf, sz, newBuf, 0, newLen);", "+                System.arraycopy(readBuf, sz, newBuf, 0, newLen);", "-                this.readBuf = newBuf;", "+                readBuf = newBuf;", "-            byte[] rec = this.buffer.readRecord();", "+            byte[] rec = buffer.readRecord();", "-                this.readBuf = new byte[recLen - sz];", "+                readBuf = new byte[recLen - sz];", "-                System.arraycopy(rec, sz, this.readBuf, 0, recLen - sz);", "+                System.arraycopy(rec, sz, readBuf, 0, recLen - sz);", "-        this.entryOffset += totalRead;", "+        entryOffset += totalRead;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1d05fc89b1cd62dcd5a47f7500ef18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private boolean binaryEquals(File f1, File f2) throws IOException", "signatureAfterChange": "     private int binaryCompare(Resource r1, Resource r2) throws IOException", "diff": ["-    private boolean binaryEquals(File f1, File f2) throws IOException {", "-        if (f1.length() != f2.length()) {", "-            // different size =>false", "-            return false;", "-        }", "-", "+    private int binaryCompare(Resource r1, Resource r2) throws IOException {", "-            in1 = new BufferedInputStream(new FileInputStream(f1));", "-            in2 = new BufferedInputStream(new FileInputStream(f2));", "+            in1 = new BufferedInputStream(r1.getInputStream());", "+            in2 = new BufferedInputStream(r2.getInputStream());", "-            int expectedByte = in1.read();", "-            while (expectedByte != -1) {", "-                if (expectedByte != in2.read()) {", "-                    return false;", "+            for (int b1 = in1.read(); b1 != -1; b1 = in1.read()) {", "+                int b2 = in2.read();", "+                if (b1 != b2) {", "+                    return b1 > b2 ? 1 : -1;", "-                expectedByte = in1.read();", "-            if (in2.read() != -1) {", "-                return false;", "-            }", "-            return true;", "+            return in2.read() == -1 ? 0 : -1;"]}]}