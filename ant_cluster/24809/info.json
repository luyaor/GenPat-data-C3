{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c681ac0890557081713d2f534376e51a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339ed1bfd3cf6c84090b5613426806df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void determineDependencies()         throws IOException, TaskException", "signatureAfterChange": "     private void determineDependencies()         throws IOException, TaskException", "diff": ["-        for( Enumeration e = getClassFiles( destPath ).elements(); e.hasMoreElements(); )", "+        for( Iterator e = getClassFiles( destPath ).iterator(); e.hasNext(); )", "-            ClassFileInfo info = (ClassFileInfo)e.nextElement();", "+            ClassFileInfo info = (ClassFileInfo)e.next();", "-            Vector dependencyList = null;", "+            ArrayList dependencyList = null;", "-                    dependencyList = (Vector)dependencyMap.get( info.className );", "+                    dependencyList = (ArrayList)dependencyMap.get( info.className );", "-            for( Enumeration depEnum = dependencyList.elements(); depEnum.hasMoreElements(); )", "+            for( Iterator depEnum = dependencyList.iterator(); depEnum.hasNext(); )", "-                String dependentClass = (String)depEnum.nextElement();", "+                String dependentClass = (String)depEnum.next();", "-                Vector dependencyList = (Vector)dependencyMap.get( className );", "+                ArrayList dependencyList = (ArrayList)dependencyMap.get( className );", "-                for( Enumeration e2 = dependencyList.elements(); e2.hasMoreElements(); )", "+                for( Iterator e2 = dependencyList.iterator(); e2.hasNext(); )", "-                    String dependency = (String)e2.nextElement();", "+                    String dependency = (String)e2.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "945aec10908a27b01c3dc4f4abd5f857", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void determineDependencies()         throws IOException, TaskException", "signatureAfterChange": "     private void determineDependencies()         throws IOException, TaskException", "diff": ["-        for( Enumeration e = getClassFiles( destPath ).elements(); e.hasMoreElements(); )", "+        for( Iterator e = getClassFiles( destPath ).iterator(); e.hasNext(); )", "-            ClassFileInfo info = (ClassFileInfo)e.nextElement();", "+            ClassFileInfo info = (ClassFileInfo)e.next();", "-            Vector dependencyList = null;", "+            ArrayList dependencyList = null;", "-                    dependencyList = (Vector)dependencyMap.get( info.className );", "+                    dependencyList = (ArrayList)dependencyMap.get( info.className );", "-            for( Enumeration depEnum = dependencyList.elements(); depEnum.hasMoreElements(); )", "+            for( Iterator depEnum = dependencyList.iterator(); depEnum.hasNext(); )", "-                String dependentClass = (String)depEnum.nextElement();", "+                String dependentClass = (String)depEnum.next();", "-                Vector dependencyList = (Vector)dependencyMap.get( className );", "+                ArrayList dependencyList = (ArrayList)dependencyMap.get( className );", "-                for( Enumeration e2 = dependencyList.elements(); e2.hasMoreElements(); )", "+                for( Iterator e2 = dependencyList.iterator(); e2.hasNext(); )", "-                    String dependency = (String)e2.nextElement();", "+                    String dependency = (String)e2.next();"]}]}