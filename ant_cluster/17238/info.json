{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df788ec30c55562ddc2daf660ca7c44b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0852a9d9f5ebafcc54e0b91ad40aed07", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected synchronized Class loadClass(String classname, boolean resolve)             throws ClassNotFoundException", "signatureAfterChange": "     protected synchronized Class<?> loadClass(String classname, boolean resolve)             throws ClassNotFoundException", "diff": ["-    protected synchronized Class loadClass(String classname, boolean resolve)", "+    protected synchronized Class<?> loadClass(String classname, boolean resolve)", "-        Class theClass = findLoadedClass(classname);", "+        Class<?> theClass = findLoadedClass(classname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfd77d95168974d7821f537578b44ce1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected Class getImplementationClass() throws ClassNotFoundException", "signatureAfterChange": "     protected Class<? extends FileNameMapper> getImplementationClass() throws ClassNotFoundException", "diff": ["-    protected Class getImplementationClass() throws ClassNotFoundException {", "+    protected Class<? extends FileNameMapper> getImplementationClass() throws ClassNotFoundException {", "-        return Class.forName(cName, true, loader);", "+        return Class.forName(cName, true, loader).asSubclass(FileNameMapper.class);"]}]}