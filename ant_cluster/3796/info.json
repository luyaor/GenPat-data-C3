{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39f68fdd5b60656aa3ccbeda07d68af5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd8572b3a1c3f752cd26909f9896d34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "cb2daf1d8338e80c1588a97c243341940d00fcc8", "commitAfterChange": "39cc96663f1c8fe0df6249e2f8210f405f858e78", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public String diagnoseCreationFailure(String componentName, String type)", "signatureAfterChange": "     public String diagnoseCreationFailure(String componentName, String type)", "diff": ["-            boolean isAntlib=componentName.indexOf(ANTLIB_PREFIX)==0;", "+            boolean isAntlib = componentName.indexOf(ANTLIB_PREFIX) == 0;", "-            out.println(\"Action: Check that any custom tasks/types have been declared\");", "-            out.println(\"Action: Check that any <presetdef>/<macrodefs> declarations have taken place\");", "-            if(isAntlib) {", "+            out.println(\"Action: Check that any custom tasks/types have been declared.\");", "+            out.println(\"Action: Check that any <presetdef>/<macrodef> declarations have taken place.\");", "+            if (isAntlib) {", "-                out.println(\"Action: check that the implementing library exists \"", "+                out.println(\"Action: Check that the implementing library exists \"", "-                    out.println(\"        This looks like one of Ant's optional components\");", "-                    out.println(\"Action: check that the appropriate optional JAR exists \"", "+                    out.println(\"        This looks like one of Ant's optional components.\");", "+                    out.println(\"Action: Check that the appropriate optional JAR exists \"", "-                    out.println(\"Action: check that the component has been correctly declared\");", "-                    out.println(\"        And that the implementing JAR is in ANT_HOME/lib or in\");", "+                    out.println(\"Action: Check that the component has been correctly declared\");", "+                    out.println(\"        and that the implementing JAR is in ANT_HOME/lib or in\");", "-                if(optional) {", "+                if (optional) {", "-                    out.println(\"       This class may be in a separate JAR, that is not installed.\");", "+                    out.println(\"       This class may be in a separate JAR that is not installed.\");", "-                out.println(\"Action: determine what extra JAR files are needed, and place them\");", "-                out.println(\"        In ANT_HOME/lib or\");", "+                out.println(\"Action: Determine what extra JAR files are needed, and place them\");", "+                out.println(\"        in ANT_HOME/lib or\");", "-                    out.println(\"       \"+ ncdfe.getMessage());", "-                    out.println(\"Action: determine what extra JAR files are needed, and place them\");", "-                    out.println(\"        In ANT_HOME/lib or\");", "+                    out.println(\"       \" + ncdfe.getMessage());", "+                    out.println(\"Action: Determine what extra JAR files are needed, and place them\");", "+                    out.println(\"        in ANT_HOME/lib or\");", "-            if(definitions) {", "-                out.println(\"It may just be a typing error in the build file \" +", "+            if (definitions) {", "+                out.println(\"It may just be a typographical error in the build file \" +", "-                if(antTask) {", "+                if (antTask) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dfe1d4172db6e09c15db6794e994736", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "7bf41207e0b3bef0fe3f8d1a88ca7b872e69f0e9", "commitAfterChange": "9ae85e523be191767f8d56d68a8f33651acd4f0b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public String diagnoseCreationFailure(String componentName, String type)", "signatureAfterChange": "     public String diagnoseCreationFailure(String componentName, String type)", "diff": ["+        String antHomeLib;", "+        boolean probablyIDE=false;", "+        String anthome = System.getProperty(MagicNames.ANT_HOME);", "+        if(anthome!=null) {", "+            File antHomeLibDir = new File(anthome,\"lib\");", "+            antHomeLib=antHomeLibDir.getAbsolutePath();", "+        } else {", "+            //running under an IDE that doesn't set ANT_HOME", "+            probablyIDE=true;", "+            antHomeLib = \"ANT_HOME\" +File.separatorChar +\"lib\";", "+        }", "+        StringBuffer dirListingText = new StringBuffer();", "+        final String tab = \"        -\";", "+        dirListingText.append(tab);", "+        dirListingText.append(antHomeLib);", "+        dirListingText.append('\\n');", "+        if(probablyIDE) {", "+            dirListingText.append(tab);", "+            dirListingText.append(\"the IDE Ant configuration dialogs\");", "+        } else {", "+            dirListingText.append(tab);", "+            dirListingText.append(libDir);", "+            dirListingText.append('\\n');", "+            dirListingText.append(tab);", "+            dirListingText.append(", "+                    \"a directory added on the command line with the -lib argument\");", "+        }", "+", "+        String dirListing=dirListingText.toString();", "+        ", "-                out.println(\"Action: Check that the implementing library exists \"", "-                        + \"in ANT_HOME/lib or in \");", "-                out.println(\"        \" + libDir);", "+                out.println(\"Action: Check that the implementing library exists in one of:\");", "+                out.println(dirListing);", "-                    out.println(\"Action: Check that the appropriate optional JAR exists \"", "-                            + \"in ANT_HOME/lib or in \");", "-                    out.println(\"        \" + libDir);", "+                    out.println(\"Action: Check that the appropriate optional JAR exists in\");", "+                    out.println(dirListing);", "-                    out.println(\"        and that the implementing JAR is in ANT_HOME/lib or in\");", "-                    out.println(\"        \" + libDir);", "+                    out.println(\"        and that the implementing JAR is in one of:\");", "+                    out.println(dirListing);", "-                    out.println(\"       It is not enough to have Ant's optional JAR, you need the JAR\");", "-                    out.println(\"       files that it depends upon.\");", "-                    out.println(\"Ant's optional task dependencies are listed in the manual.\");", "+                    out.println(\"       It is not enough to have Ant's optional JARs\");", "+                    out.println(\"       you need the JAR files that the optional tasks depend upon.\");", "+                    out.println(\"       Ant's optional task dependencies are listed in the manual.\");", "-                out.println(\"Action: Determine what extra JAR files are needed, and place them\");", "-                out.println(\"        in ANT_HOME/lib or\");", "-                out.println(\"        in \" + libDir);", "+                out.println(\"Action: Determine what extra JAR files are needed, and place them in one of:\");", "+                out.println(dirListing);", "-                    out.println(\"Action: Determine what extra JAR files are needed, and place them\");", "-                    out.println(\"        in ANT_HOME/lib or\");", "-                    out.println(\"        in \" + libDir);", "+                    out.println(\"Action: Determine what extra JAR files are needed, and place them in:\");", "+                    out.println(dirListing);"]}]}