{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c09694e0c9479bfb041b359ad47352a6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0392b4f9fca896d692cd150fc439e3d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java", "commitBeforeChange": "76cfa5be6880fe04efad01f9b9acbeb2e41825cd", "commitAfterChange": "6c9e00f717f85949fa52914e1203785bb7c22182", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     public boolean isSelected(Resource r)", "diff": ["+     */", "+    public boolean isSelected(Resource r) {", "-        if (file.isDirectory()) {", "+        if (r.isDirectory()) {", "-            in = new BufferedReader(new InputStreamReader(", "-                    new FileInputStream(file)));", "-", "+            in = new BufferedReader(new InputStreamReader(r.getInputStream()));", "+        } catch (Exception e) {", "+            throw new BuildException(\"Could not get InputStream from \"", "+                    + r.toLongString(), e);", "+        }", "+        try {", "-            throw new BuildException(\"Could not read file \" + filename);", "+            throw new BuildException(\"Could not read \" + r.toLongString());", "-                    throw new BuildException(\"Could not close file \"", "-                                             + filename);", "+                    throw new BuildException(\"Could not close \"", "+                                             + r.toLongString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c28595abf048133ebcdb883d2b04b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java", "commitBeforeChange": "edad691d59acabb7c361ab72665ea4afdf77fb01", "commitAfterChange": "76cfa5be6880fe04efad01f9b9acbeb2e41825cd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     public boolean isSelected(Resource r)", "diff": ["+     */", "+    public boolean isSelected(Resource r) {", "-        if (file.isDirectory()) {", "+        if (r.isDirectory()) {", "-            in = new BufferedReader(new InputStreamReader(", "-                    new FileInputStream(file)));", "+            in = new BufferedReader(new InputStreamReader(r.getInputStream()));", "+        } catch (Exception e) {", "+            throw new BuildException(\"Could not get InputStream from \"", "+                    + r.toLongString(), e);", "+        }", "+        try {", "-            throw new BuildException(\"Could not read file \" + filename);", "+            throw new BuildException(\"Could not read \" + r.toLongString());", "-            if (in != null) {", "-                try {", "-                    in.close();", "-                } catch (Exception e) {", "-                    throw new BuildException(\"Could not close file \"", "-                                             + filename);", "-                }", "-            }", "+            FileUtils.close(in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5564f4fa86ad0f253f9c0200a3f7e53c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ClasspathUtils.java", "commitBeforeChange": "052d19e952abee3ced0456b7412ec51fe8baa51b", "commitAfterChange": "b404a282b25f5b01eeb1646495eb2f36f675ebe9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ClassLoader getClassLoaderForPath(Project p, Reference ref,                                                      boolean reverseLoader)", "signatureAfterChange": "     public static ClassLoader getClassLoaderForPath(         Project p, Reference ref, boolean reverseLoader)", "diff": ["-    public static ClassLoader getClassLoaderForPath(Project p, Reference ref, ", "-                                                    boolean reverseLoader) {", "+    public static ClassLoader getClassLoaderForPath(", "+        Project p, Reference ref, boolean reverseLoader) {", "+            ", "-        if (!(path instanceof Path)){", "-            throw new BuildException (\"The specified classpathref \" + pathId + ", "-                \" does not reference a Path.\");", "-        }        ", "-        return getClassLoaderForPath((Path)path, pathId, reverseLoader);", "+        if (!(path instanceof Path)) {", "+            throw new BuildException(", "+                \"The specified classpathref \"", "+                    + pathId", "+                    + \" does not reference a Path.\");", "+        }", "+        String loaderId = LOADER_ID_PREFIX + pathId;", "+        return getClassLoaderForPath(p, (Path) path, loaderId, reverseLoader);"]}]}