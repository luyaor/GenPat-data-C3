{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed526ad09c7f34db455ca4dc53d2eb79", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a0550b1246c3bdbae983d55b7c9325", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                File fromDir = ( File )e.nextElement();", "-                File toDir = ( File )completeDirMap.get( fromDir );", "+                File fromDir = (File)e.nextElement();", "+                File toDir = (File)completeDirMap.get( fromDir );", "-                        \" to \" + toDir, verbosity );", "+                         \" to \" + toDir, verbosity );", "-                         + \" to \" + toDir", "-                         + \" due to \" + ioe.getMessage();", "-                    throw new BuildException( msg, ioe );", "+                        + \" to \" + toDir", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new TaskException( msg, ioe );", "-                destDir.getAbsolutePath() );", "+                 destDir.getAbsolutePath() );", "-                String fromFile = ( String )e.nextElement();", "-                String toFile = ( String )fileCopyMap.get( fromFile );", "+                String fromFile = (String)e.nextElement();", "+                String toFile = (String)fileCopyMap.get( fromFile );", "-                            \" to \" + toFile, verbosity );", "+                             \" to \" + toFile, verbosity );", "-                             + \" to \" + toFile", "-                             + \" due to \" + ioe.getMessage();", "-                        throw new BuildException( msg, ioe );", "+                            + \" to \" + toFile", "+                            + \" due to \" + ioe.getMessage();", "+                        throw new TaskException( msg, ioe );", "-                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();  )", "+                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements(); )", "-                                executionFilters.addFilterSet( ( FilterSet )filterEnum.nextElement() );", "+                                executionFilters.addFilterSet( (FilterSet)filterEnum.nextElement() );", "-                                forceOverwrite );", "+                                                     forceOverwrite );", "-                                throw new BuildException( \"Unable to delete file \"", "-                                     + f.getAbsolutePath() );", "+                                throw new TaskException( \"Unable to delete file \"", "+                                                         + f.getAbsolutePath() );", "-                                 + toFile", "-                                 + \" due to \" + ioe.getMessage();", "-                            throw new BuildException( msg, ioe );", "+                                + toFile", "+                                + \" due to \" + ioe.getMessage();", "+                            throw new TaskException( msg, ioe );", "-                File d = new File( ( String )e.nextElement() );", "+                File d = new File( (String)e.nextElement() );", "-                FileSet fs = ( FileSet )e.nextElement();", "+                FileSet fs = (FileSet)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9939d8fd7b66ab251d03ce4d53b2164", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                File fromDir = ( File )e.nextElement();", "-                File toDir = ( File )completeDirMap.get( fromDir );", "+                File fromDir = (File)e.nextElement();", "+                File toDir = (File)completeDirMap.get( fromDir );", "-                        \" to \" + toDir, verbosity );", "+                         \" to \" + toDir, verbosity );", "-                         + \" to \" + toDir", "-                         + \" due to \" + ioe.getMessage();", "-                    throw new BuildException( msg, ioe );", "+                        + \" to \" + toDir", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new TaskException( msg, ioe );", "-                destDir.getAbsolutePath() );", "+                 destDir.getAbsolutePath() );", "-                String fromFile = ( String )e.nextElement();", "-                String toFile = ( String )fileCopyMap.get( fromFile );", "+                String fromFile = (String)e.nextElement();", "+                String toFile = (String)fileCopyMap.get( fromFile );", "-                            \" to \" + toFile, verbosity );", "+                             \" to \" + toFile, verbosity );", "-                             + \" to \" + toFile", "-                             + \" due to \" + ioe.getMessage();", "-                        throw new BuildException( msg, ioe );", "+                            + \" to \" + toFile", "+                            + \" due to \" + ioe.getMessage();", "+                        throw new TaskException( msg, ioe );", "-                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();  )", "+                            for( Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements(); )", "-                                executionFilters.addFilterSet( ( FilterSet )filterEnum.nextElement() );", "+                                executionFilters.addFilterSet( (FilterSet)filterEnum.nextElement() );", "-                                forceOverwrite );", "+                                                     forceOverwrite );", "-                                throw new BuildException( \"Unable to delete file \"", "-                                     + f.getAbsolutePath() );", "+                                throw new TaskException( \"Unable to delete file \"", "+                                                         + f.getAbsolutePath() );", "-                                 + toFile", "-                                 + \" due to \" + ioe.getMessage();", "-                            throw new BuildException( msg, ioe );", "+                                + toFile", "+                                + \" due to \" + ioe.getMessage();", "+                            throw new TaskException( msg, ioe );", "-                File d = new File( ( String )e.nextElement() );", "+                File d = new File( (String)e.nextElement() );", "-                FileSet fs = ( FileSet )e.nextElement();", "+                FileSet fs = (FileSet)e.nextElement();"]}]}