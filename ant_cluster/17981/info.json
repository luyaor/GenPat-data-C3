{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00998823c71783d87d281ae5a3453939", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e729f3b39e868da8ca14dbeffd6c1e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "bc41ca3c90547e235875442009e703ccf4c93244", "commitAfterChange": "23bebfbdc21ac3706aaa3d84210c900c867d0f21", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        helper.parse(getProject(), importedFile);", "+        try {", "+            helper.parse(getProject(), importedFile);", "+        } catch (BuildException ex) {", "+            Location exLocation = ex.getLocation();", "+            if (exLocation == null) {", "+                throw ex;", "+            }", "+            throw new BuildException(", "+                \"Error executing import file\"", "+                + System.getProperty(\"line.separator\")", "+                + exLocation.toString()", "+                + \" \" + ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c90fe14e44b27d972e419c2080722b49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void execute( final List clOptions )         throws Exception", "signatureAfterChange": "      protected void execute( final String[] args )         throws Exception", "diff": ["-     */", "-    protected void execute( final List clOptions )", "+    protected void execute( final String[] args )", "+        final CLOptionDescriptor[] options = createCLOptions();", "+        final CLArgsParser parser = new CLArgsParser( args, options );", "+", "+        if( null != parser.getErrorString() )", "+        {", "+            System.err.println( \"Error: \" + parser.getErrorString() );", "+            return;", "+        }", "+        ", "+        final List clOptions = parser.getArguments();", "-        for( int i = 0; i < size; i++ ) ", "+        for( int i = 0; i < size; i++ )", "-                ", "+", "-            case HELP_OPT: usage(); return;", "+            case HELP_OPT: usage( options ); return;", "-            case LOG_LEVEL_OPT: logLevel = option.getArgument(); break; ", "+            case LOG_LEVEL_OPT: logLevel = option.getArgument(); break;", "-            case DEFINE_OPT: ", "+            case DEFINE_OPT:", "-        //if ant home not set then use system property ant.home ", "+        //if ant home not set then use system property ant.home", "-        ", "+", "-        //handle listener.. ", "-        final ProjectListener listener = createListener( listenerName ); ", "+        //handle listener..", "+        final ProjectListener listener = createListener( listenerName );", "-        antEngine.init();", "+        antEngine.initialize();", "-            ", "+", "-            ", "+"]}]}