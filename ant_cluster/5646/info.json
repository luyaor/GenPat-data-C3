{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bfce232051fc984cae4cd8653f15b98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211c8556af554c23371a50f0fccaeb6b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEncodingHelper.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static final String decodeName(byte[] name, String encoding)", "signatureAfterChange": "     static final String decodeName(byte[] name, String encoding)         throws java.nio.charset.CharacterCodingException", "diff": ["-    static final String decodeName(byte[] name, String encoding) {", "+    static final String decodeName(byte[] name, String encoding)", "+        throws java.nio.charset.CharacterCodingException {", "-        return cs.decode(ByteBuffer.wrap(name)).toString();", "+        return cs.newDecoder()", "+            .onMalformedInput(CodingErrorAction.REPORT)", "+            .onUnmappableCharacter(CodingErrorAction.REPORT)", "+            .decode(ByteBuffer.wrap(name)).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f09c32324f6eabad8cf3e12099f189d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/MoveTest.java", "commitBeforeChange": "6349d0355599f611acde9234257aff085f862d66", "commitAfterChange": "48b5c5c2b5eb3eb13e0ce4d014a5649f7d989e33", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testDirectoryRetaining() throws IOException", "signatureAfterChange": "     public void testDirectoryRetaining() throws IOException", "diff": ["+        assertTrue(getProject().resolveFile(\"E/1\").exists());", "+        assertTrue(!getProject().resolveFile(\"A/1\").exists());"]}]}