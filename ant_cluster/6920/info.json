{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d3a535d27f663384bbd59c51722a8b0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a8e6297682199c59e3ebd3a2e2a060", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "a40f5fbc661d21426b9e147021c9bff6af807813", "commitAfterChange": "7fe0839f2206a6214201acee122871c89eeb2af4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testSymbolicLinkUtilsMethods() throws Exception", "signatureAfterChange": "      public void testSymbolicLinkUtilsMethods() throws Exception", "diff": ["-            //apparently OS X knows a symlink is a symlink even if the target is missing:", "-            boolean mac = Os.isFamily(Os.FAMILY_MAC);", "-", "+            // it is not possible to find out that symbolic links pointing", "+            // to inexistent files or directories are symbolic links", "+            // it used to be possible to detect this on Mac", "+            // this is not true under Snow Leopard and JDK 1.5", "+            // Removing special handling of MacOS until someone shouts", "+            // Antoine", "-            assertTrue(su.isSymbolicLink(f.getAbsolutePath()) == mac);", "-            assertTrue(su.isSymbolicLink(f.getParentFile(), f.getName()) == mac);", "+            assertTrue(su.isSymbolicLink(f.getAbsolutePath()) == false);", "+            assertTrue(su.isSymbolicLink(f.getParentFile(), f.getName()) == false);", "-            assertTrue(su.isSymbolicLink(f.getAbsolutePath()) == mac);", "-            assertTrue(su.isSymbolicLink(f.getParentFile(), f.getName()) == mac);", "+            assertTrue(su.isSymbolicLink(f.getAbsolutePath()) == false);", "+            assertTrue(su.isSymbolicLink(f.getParentFile(), f.getName()) == false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdee264998ef58af11221ae4dee164a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/DateSelectorTest.java", "commitBeforeChange": "40e298139fafbe0b8a5694c0175d6e43b254acf8", "commitAfterChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "     public void testSelectionBehaviour()", "diff": ["-            SimpleDateFormat formatter = new SimpleDateFormat();", "-            Date d = formatter.parse(\"11/21/2001 4:55 AM\",new ParsePosition(0));"]}]}