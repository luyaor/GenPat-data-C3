{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2ebd994ae561b11da853aa43465fa72", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a869f17de4519e778f027fb439df61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "6585a8aa207d2adf2f5f92ab52482b312302b3fe", "commitAfterChange": "70802b2319e95db5b1f4bcab9247da14856a3bd8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+", "+                // this is the wrong test if the remote OS is OpenVMS,", "+                // but there doesn't seem to be a way to detect it.", "+                int ec = channel.getExitStatus();", "+                if (ec != 0) {", "+                    String msg = \"Remote command failed with exit status \" + ec;", "+                    if (getFailonerror()) {", "+                        throw new BuildException(msg);", "+                    } else {", "+                        log(msg, Project.MSG_ERR);", "+                    }", "+                }", "+        } catch (BuildException e) {", "+            throw e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75076f59121f03e42cf3677aab0b4b02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "c13dba6d524fe74b1518e3442429ba6e97592edd", "commitAfterChange": "e438a9bf89f863be3d231d0a1a275ca0b8550ed0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        toExecute.setExecutable(\"patch\");", "+        toExecute.setExecutable(PATCH);", "-            exe.execute();", "+            int returncode = exe.execute();", "+            if (Execute.isFailure(returncode)) {", "+                String msg = \"'\" + PATCH + \"' failed with exit code \"", "+                    + returncode;", "+                if (failOnError) {", "+                    throw new BuildException(msg);", "+                } else {", "+                    log(msg, Project.MSG_ERR);", "+                }", "+            }"]}]}