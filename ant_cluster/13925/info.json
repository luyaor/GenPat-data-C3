{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7389c69a3aed523e53918240c3d2734e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6205e67070ced5331627afdb39b04245", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkHomeDir() throws Exception", "signatureAfterChange": "     private void checkHomeDir() throws Exception", "diff": ["-        final String home = m_embeddorParameters.getParameter( \"myrmidon.home\" );", "-        final File homeDir = ( new File( home ) ).getAbsoluteFile();", "-        if( !homeDir.isDirectory() )", "+        if( m_homeDir == null )", "-            final String message = REZ.getString( \"home-not-dir.error\", homeDir );", "-            throw new Exception( message );", "+            m_homeDir = new File( \".\" ).getAbsoluteFile();", "+        checkDirectory( m_homeDir, \"home-dir.name\" );", "+        m_embeddorParameters.setParameter( \"myrmidon.home\", m_homeDir.getAbsolutePath() );", "-            final String message = REZ.getString( \"homedir.notice\", homeDir );", "+            final String message = REZ.getString( \"homedir.notice\", m_homeDir );", "+", "+        String path = m_embeddorParameters.getParameter( \"myrmidon.lib.path\", \"lib\" );", "+        File dir = resolveDirectory( m_homeDir, path, \"task-lib-dir.name\" );", "+        m_embeddorParameters.setParameter( \"myrmidon.lib.path\", dir.getAbsolutePath() );", "+", "+        path = m_embeddorParameters.getParameter( \"myrmidon.ext.path\", \"ext\" );", "+        dir = resolveDirectory( m_homeDir, path, \"ext-dir.name\" );", "+        m_embeddorParameters.setParameter( \"myrmidon.ext.path\", dir.getAbsolutePath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a761df4a6edcb275a2c93a143cab18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void checkHomeDir() throws Exception", "signatureAfterChange": "     private void setupPaths(  Map parameters ) throws Exception", "diff": ["-    private void checkHomeDir() throws Exception", "+    private void setupPaths(  Map parameters ) throws Exception", "-        m_embeddorParameters.setParameter( \"myrmidon.home\", m_homeDir.getAbsolutePath() );", "+        parameters.put( \"myrmidon.home\", m_homeDir );", "-        String path = m_embeddorParameters.getParameter( \"myrmidon.lib.path\", \"lib\" );", "-        File dir = resolveDirectory( m_homeDir, path, \"task-lib-dir.name\" );", "-        m_embeddorParameters.setParameter( \"myrmidon.lib.path\", dir.getAbsolutePath() );", "+        // Build the lib path", "+        String path = (String)parameters.get( \"myrmidon.lib.path\" );", "+        File[] dirs = buildPath( m_homeDir, path, \"lib\", \"lib-dir.name\" );", "+        parameters.put( \"myrmidon.lib.path\", dirs );", "-        path = m_embeddorParameters.getParameter( \"myrmidon.ext.path\", \"ext\" );", "-        dir = resolveDirectory( m_homeDir, path, \"ext-dir.name\" );", "-        m_embeddorParameters.setParameter( \"myrmidon.ext.path\", dir.getAbsolutePath() );", "+        // Build the antlib search path", "+        path = (String)parameters.get( \"myrmidon.antlib.path\" );", "+        dirs = buildPath( m_homeDir, path, \"ext\", \"task-lib-dir.name\" );", "+        parameters.put( \"myrmidon.antlib.path\", dirs );", "+", "+        // Build the extension search path", "+        path = (String)parameters.get( \"myrmidon.ext.path\" );", "+        dirs = buildPath( m_homeDir, path, \"ext\", \"ext-dir.name\" );", "+        parameters.put( \"myrmidon.ext.path\", dirs );"]}]}