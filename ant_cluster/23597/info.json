{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c3317ed3ca2466f8a1e31514f22ad59", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef35897882a8a977e65839670137b3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "d2eddd7e4d3a7509fbebf87e11c1186073316be6", "commitAfterChange": "34c0080c09ba7c72241296abc4eb83e2ed9fd569", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "-        if (srcDir.equals(destDir) && (extension == null)){", "-            throw new BuildException(\"The ext attribut must be set if\"", "+        if (srcDir.equals(destDir) && extension == null && mapper == null){", "+            throw new BuildException(\"The ext attribute or a mapper must be set if\"", "+        FileNameMapper m = null;", "+        if (mapper == null) {", "+            if (extension == null) {", "+                m = new IdentityMapper();", "+            } else {", "+                m = new ExtMapper();", "+            }", "+        } else {", "+            m = mapper.getImplementation();", "+        }", "+        ", "-        log(\"Converting files from \" + srcDir + \" to \" + destDir);", "+        SourceFileScanner sfs = new SourceFileScanner(this);", "+        files = sfs.restrict(files, srcDir, destDir, m);", "+        int count = files.length;", "+        if (count == 0) {", "+            return;", "+        }", "+        String message = \"Converting \"+ count + \" file\"", "+            + (count != 1 ? \"s\" : \"\") + \" from \";", "+        log(message + srcDir + \" to \" + destDir);", "-            convert(files[i]);", "+            convert(files[i], m.mapFileName(files[i])[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f4c51c99dfbd7669163b2c8ff3770c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "cf3d817333eb1f45c382561f258acd52fdf3d3a9", "commitAfterChange": "8339c7f3e8a6ef73c3b8f53fdef7ae42734020df", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public URL getResource(String name)", "signatureAfterChange": "     public URL getResource(String name)", "diff": ["-        // try and load from this loader if the parent eitehr didn't find it or", "-        // wasn;t consulted.", "-        if (url == null) {", "+        if (url != null) {", "+            project.log(\"Resource \" + name + \" loaded from system loader\", ", "+                        Project.MSG_DEBUG);", "+", "+        } else {", "+            // try and load from this loader if the parent either didn't find ", "+            // it or wasn't consulted.", "+                    if (url != null) {", "+                        project.log(\"Resource \" + name ", "+                                    + \" loaded from ant loader\", ", "+                                    Project.MSG_DEBUG);", "+                    }", "-                    // ignore path elements which ar einvalid relative to the project", "+                    // ignore path elements which are invalid relative to the project", "+            if (url != null) {", "+                project.log(\"Resource \" + name + \" loaded from system loader\", ", "+                            Project.MSG_DEBUG);", "+            }", "+        }", "+", "+        if (url == null) {", "+            project.log(\"Couldn't load Resource \" + name, Project.MSG_WARN);"]}]}