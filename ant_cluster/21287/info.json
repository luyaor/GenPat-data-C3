{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94cd8f9fb97592ac2c648c946b54d76f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be681632798c96761d2399f09c31608a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarInputStream.java", "commitBeforeChange": "a7b657bd9ae901100575a7434347e3d26090ec8f", "commitAfterChange": "63664a8786c82ffef4f09c1bec3d3e7db8cbcfb8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public TarEntry getNextEntry() throws IOException", "signatureAfterChange": "     public TarEntry getNextEntry() throws IOException", "diff": ["+        if (this.currEntry != null && this.currEntry.isGNULongNameEntry()) {", "+            // read in the name", "+            StringBuffer longName = new StringBuffer();", "+            byte[] buffer = new byte[256];", "+            int length = 0;", "+            while ((length = read(buffer)) >= 0) {", "+                longName.append(new String(buffer, 0, length));", "+            }", "+            getNextEntry();", "+            this.currEntry.setName(longName.toString());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ea9850bae0a5f5b5bc9f48d3d2bd18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "12f19c932133ae8e0eaae97b14eb718262cb0843", "commitAfterChange": "8b613e7fb2924211824146110e777f7cdc5a120f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private InputStream getResourceStream(File file, String resourceName)", "signatureAfterChange": "     private InputStream getResourceStream(File file, String resourceName)", "diff": ["+     */", "-                ZipFile zipFile = new ZipFile(file);", "+                ZipFile zipFile = null;", "+                try {", "+                    zipFile = new ZipFile(file);", "-                ZipEntry entry = zipFile.getEntry(resourceName);", "-                if (entry != null) {", "-                    return zipFile.getInputStream(entry);", "+                    ZipEntry entry = zipFile.getEntry(resourceName);", "+                    if (entry != null) {", "+                        // we need to read the entry out of the zip file into", "+                        // a baos and then ", "+                        ByteArrayOutputStream baos = new ByteArrayOutputStream();", "+                        byte[] buffer = new byte[BUFFER_SIZE];", "+                        int bytesRead;", "+                        InputStream stream = zipFile.getInputStream(entry);", "+                        while ((bytesRead = stream.read(buffer, 0, BUFFER_SIZE)) != -1) {", "+                            baos.write(buffer, 0, bytesRead);", "+                        }", "+                        return new ByteArrayInputStream(baos.toByteArray());   ", "+                    }", "+                }", "+                finally {", "+                    if (zipFile != null) {", "+                        zipFile.close();", "+                    }"]}]}