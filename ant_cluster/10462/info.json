{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05e75981a8c68b32756a34f926ff9274", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57336d5e4cafc4fddc763fd0042b8f21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["-        Vector<ResourceCollection> vfss = new Vector<ResourceCollection>();", "+        final Vector<ResourceCollection> vfss = new Vector<ResourceCollection>();", "-            FileSet fs = (FileSet) getImplicitFileSet().clone();", "+            final FileSet fs = (FileSet) getImplicitFileSet().clone();", "-            ResourceCollection rc = resources.elementAt(i);", "+            final ResourceCollection rc = resources.elementAt(i);", "-        ResourceCollection[] fss = new ResourceCollection[vfss.size()];", "+        final ResourceCollection[] fss = new ResourceCollection[vfss.size()];", "-            ArchiveState state = getResourcesToAdd(fss, zipFile, false);", "+            final ArchiveState state = getResourcesToAdd(fss, zipFile, false);", "-            File parent = zipFile.getParentFile();", "+            final File parent = zipFile.getParentFile();", "-            Resource[][] addThem = state.getResourcesToAdd();", "+            final Resource[][] addThem = state.getResourcesToAdd();", "-            String action = doUpdate ? \"Updating \" : \"Building \";", "+            final String action = doUpdate ? \"Updating \" : \"Building \";", "-                    ZipFileSet oldFiles = new ZipFileSet();", "+                    final ZipFileSet oldFiles = new ZipFileSet();", "-                        PatternSet.NameEntry ne = oldFiles.createExclude();", "+                        final PatternSet.NameEntry ne = oldFiles.createExclude();", "-                    DirectoryScanner ds =", "+                    final DirectoryScanner ds =", "-                    String[] f = ds.getIncludedFiles();", "+                    final String[] f = ds.getIncludedFiles();", "-                        String[] d = ds.getIncludedDirectories();", "-                        Resource[] dr = new Resource[d.length];", "+                        final String[] d = ds.getIncludedDirectories();", "+                        final Resource[] dr = new Resource[d.length];", "-                        Resource[] tmp = r;", "+                        final Resource[] tmp = r;", "-        } catch (IOException ioe) {", "+        } catch (final IOException ioe) {", "-                } catch (IOException e) {", "+                } catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1529fc0efaf3b77eff53d0acaee522a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": "     private void parsePackages(Vector<String> pn, Path sp)", "signatureAfterChange": "     private void parsePackages(final Vector<String> pn, final Path sp)", "diff": ["-    private void parsePackages(Vector<String> pn, Path sp) {", "-        HashSet<String> addedPackages = new HashSet<String>();", "+    private void parsePackages(final Vector<String> pn, final Path sp) {", "+        final HashSet<String> addedPackages = new HashSet<String>();", "+\t\tfinal", "-            PatternSet ps = new PatternSet();", "+            final PatternSet ps = new PatternSet();", "-                Enumeration<PackageName> e = packageNames.elements();", "+                final Enumeration<PackageName> e = packageNames.elements();", "-                    PackageName p = e.nextElement();", "+                    final PackageName p = e.nextElement();", "-            Enumeration<PackageName> e = excludePackageNames.elements();", "+            final Enumeration<PackageName> e = excludePackageNames.elements();", "-                PackageName p = e.nextElement();", "+                final PackageName p = e.nextElement();", "-            String[] pathElements = sourcePath.list();", "+            final String[] pathElements = sourcePath.list();", "-                File dir = new File(pathElements[i]);", "+                final File dir = new File(pathElements[i]);", "-                    DirSet ds = new DirSet();", "+                    final DirSet ds = new DirSet();", "-        Enumeration<DirSet> e = dirSets.elements();", "+        final Enumeration<DirSet> e = dirSets.elements();", "-            DirSet ds = e.nextElement();", "-            File baseDir = ds.getDir(getProject());", "+            final DirSet ds = e.nextElement();", "+            final File baseDir = ds.getDir(getProject());", "-            DirectoryScanner dsc = ds.getDirectoryScanner(getProject());", "-            String[] dirs = dsc.getIncludedDirectories();", "+            final DirectoryScanner dsc = ds.getDirectoryScanner(getProject());", "+            final String[] dirs = dsc.getIncludedDirectories();", "-                File pd = new File(baseDir, dirs[i]);", "-                String[] files = pd.list(new FilenameFilter () {", "-                        @Override", "-\t\t\t\t\t\tpublic boolean accept(File dir1, String name) {", "+                final File pd = new File(baseDir, dirs[i]);", "+                final String[] files = pd.list(new FilenameFilter () {", "+\t\t\t\t\t\tpublic boolean accept(final File dir1, final String name) {", "-                        String packageName =", "+                        final String packageName ="]}]}