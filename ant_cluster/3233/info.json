{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "805b7bda9b6d602fa1b70d9be42df6b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ac989f87bed644a87bf958d6831bf4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ExtraFieldUtils.java", "commitBeforeChange": "6c0ab4d9acff26999595b59c4e710ed235e8fefd", "commitAfterChange": "6cd0de1022faed419783119405f458e44a1ac663", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static ZipExtraField[] parse(byte[] data) throws ZipException", "signatureAfterChange": "     public static ZipExtraField[] parse(byte[] data, boolean local)         throws ZipException", "diff": ["-    public static ZipExtraField[] parse(byte[] data) throws ZipException {", "+    public static ZipExtraField[] parse(byte[] data, boolean local)", "+        throws ZipException {", "-                ze.parseFromLocalFileData(data, start + WORD, length);", "+                if (local", "+                    || !(ze instanceof CentralDirectoryParsingZipExtraField)) {", "+                    ze.parseFromLocalFileData(data, start + WORD, length);", "+                } else {", "+                    ((CentralDirectoryParsingZipExtraField) ze)", "+                        .parseFromCentralDirectoryData(data, start + WORD,", "+                                                       length);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe63993f39412b270db8651c7358752", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "cca008dd0001628eefae7a0ebffba4815a6909f1", "commitAfterChange": "021fdf251c92ecb3981724d83c0265dc770280b3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog)         throws BuildException", "signatureAfterChange": "     private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog,                                  File casesFile)         throws BuildException", "diff": ["-    private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog)", "+    private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog, ", "+                                File casesFile)", "-        if(perm != null) {", "-            log(\"Permissions ignored when running in forked mode!\", Project.MSG_WARN);", "+        if (perm != null) {", "+            log(\"Permissions ignored when running in forked mode!\",", "+                Project.MSG_WARN);", "-        cmd.createArgument().setValue(test.getName());", "+        if (casesFile == null) {", "+            cmd.createArgument().setValue(test.getName());", "+        } else {", "+            log(\"Running multiple tests in the same VM\", Project.MSG_VERBOSE);", "+            cmd.createArgument().setValue(\"testsfile=\" + casesFile);", "+        }", "+        "]}]}