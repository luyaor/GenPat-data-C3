{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b96ee4db0422f6346b385589fcc3e97", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a773da16fd5e5749d06f45128edf65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Object createComponent( final String component, final Class clazz )         throws Exception", "signatureAfterChange": "     private Object createComponent( final String component, final Class clazz )         throws Exception", "diff": ["-                throw new Exception( \"Object \" + component + \" is not an instance of \" +", "-                                     clazz );", "+                final String message = REZ.getString( \"bad-type.error\", component, clazz.getName() );", "+                throw new Exception( message );", "-            throw new Exception( \"Non-public constructor for \" + clazz + \" \" + component );", "+            final String message = REZ.getString( \"bad-ctor.error\", clazz.getName(), component );", "+            throw new Exception( message );", "-            throw new Exception( \"Error instantiating class for \" + clazz + \" \" + component );", "+            final String message =", "+                REZ.getString( \"no-instantiate.error\", clazz.getName(), component );", "+            throw new Exception( message );", "-            throw new Exception( \"Could not find the class for \" + clazz +", "-                                 \" (\" + component + \")\" );", "+            final String message =", "+                REZ.getString( \"no-class.error\", clazz.getName(), component );", "+            throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637b36888ae81d50cab395fa1d703faf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamList.java", "commitBeforeChange": "837f7ef785e24137608ba41f850d605b23bccff4", "commitAfterChange": "23e61358c8ed2aa3fe63c1f67082150047f1df9e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void visit(Folder starteamFolder, java.io.File targetFolder)             throws BuildException", "signatureAfterChange": "     protected void visit(Folder starteamFolder, java.io.File targetFolder)             throws BuildException", "diff": ["-            if (null == getRootLocalFolder()) {", "-                log(\"Folder: \" + starteamFolder.getName() + \" (Default folder: \" + targetFolder + \")\");", "-            } else {", "-                log(\"Folder: \" + starteamFolder.getName() + \" (Local folder: \" + targetFolder + \")\");", "+            if (null != getRootLocalFolder()) {", "+                starteamFolder.setAlternatePathFragment(", "+                    targetFolder.getAbsolutePath());", "+", "-            Hashtable localFiles = listLocalFiles(targetFolder);", "+            Folder[] subFolders = starteamFolder.getSubFolders();", "+            Item[] files = starteamFolder.getItems(getTypeNames().FILE);", "+            ", "+            UnmatchedFileMap ufm = ", "+                new UnmatchedListingMap().init(", "+                    targetFolder.getAbsoluteFile(), starteamFolder);", "+", "+            log(\"\");", "+            log(\"Listing StarTeam folder \" + ", "+                starteamFolder.getFolderHierarchy()); ", "+            log(\" against local folder \" + ", "+                targetFolder.getAbsolutePath());", "+", "-            Item[] files = starteamFolder.getItems(\"File\");", "-                delistLocalFile(localFiles, localFile);", "-", "-", "+                ufm.removeControlledItem(localFile);", "-            Folder[] subFolders = starteamFolder.getSubFolders();", "-                delistLocalFile(localFiles, targetSubfolder);", "+                ufm.removeControlledItem(targetSubfolder);", "+            }", "+            if (this.listUncontrolled) {", "+                ufm.processUncontrolledItems();"]}]}