{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bedc65c9e3b1a95a88d09396b0793670", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3128069be65bb7fe01b28551e7a123a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "cbef49e344857a1cf7c35737b67d3c732f901710", "commitAfterChange": "b839a3ed0f3a0ad050579c33f2ede3e8b8542fea", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private InputStream getResourceStream(File file, String resourceName)", "signatureAfterChange": "     private InputStream getResourceStream(File file, String resourceName)", "diff": ["-                ZipFile zipFile = null;", "-                try {", "+                // is the zip file in the cache", "+                ZipFile zipFile = (ZipFile)zipFiles.get(file);", "+                if (zipFile == null) {", "-        ", "-                    ZipEntry entry = zipFile.getEntry(resourceName);", "-                    if (entry != null) {", "-                        // we need to read the entry out of the zip file into", "-                        // a baos and then ", "-                        ByteArrayOutputStream baos = new ByteArrayOutputStream();", "-                        byte[] buffer = new byte[BUFFER_SIZE];", "-                        int bytesRead;", "-                        InputStream stream = zipFile.getInputStream(entry);", "-                        while ((bytesRead = stream.read(buffer, 0, BUFFER_SIZE)) != -1) {", "-                            baos.write(buffer, 0, bytesRead);", "-                        }", "-                        return new ByteArrayInputStream(baos.toByteArray());   ", "-                    }", "+                    zipFiles.put(file, zipFile);                    ", "-                finally {", "-                    if (zipFile != null) {", "-                        zipFile.close();", "-                    }", "+                ZipEntry entry = zipFile.getEntry(resourceName);", "+                if (entry != null) {", "+                    return zipFile.getInputStream(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d260f61d06047c42778cccdbc364ddfc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "778b198fb8709154142ead6d74bd5da3216eb76c", "commitAfterChange": "246b80980fe1ecee037440b49137b3203cd3095f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-", "-        Reader r = null;", "-        Writer w = null;", "-        BufferedWriter bw = null;", "-", "-            if (encoding == null) {", "-                r = new FileReader(f);", "-                w = new FileWriter(temp);", "-            } else {", "-                r = new InputStreamReader(new FileInputStream(f), encoding);", "-                w = new OutputStreamWriter(new FileOutputStream(temp),", "-                                           encoding);", "-            }", "+            InputStream is = new FileInputStream(f);", "+            try {", "+                Reader r = encoding != null ? new InputStreamReader(is, encoding) : new InputStreamReader(is);", "+                OutputStream os = new FileOutputStream(temp);", "+                try {", "+                    Writer w = encoding != null ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os);", "-            BufferedReader br = new BufferedReader(r);", "-            bw = new BufferedWriter(w);", "+                    BufferedReader br = new BufferedReader(r);", "+                    BufferedWriter bw = new BufferedWriter(w);", "-            r.close();", "-            r = null;", "-            w.close();", "-            w = null;", "-", "+                } finally {", "+                    os.close();", "+                }", "+            } finally {", "+                is.close();", "+            }", "-            FileUtils.close(r);", "-            FileUtils.close(bw);", "-            FileUtils.close(w);"]}]}