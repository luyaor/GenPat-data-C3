{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52b1c8ffcada8c835c509ff2b006a002", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c38ed4bd4566b197c35c4981b38ad43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/image/Scale.java", "commitBeforeChange": "b92ed0aefc86a7ccc53d5e2ce5724ba5fedf5fa7", "commitAfterChange": "a0406cafe6a8019f43e573018ad38f7095db879f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public PlanarImage performScale(PlanarImage image)", "signatureAfterChange": "      public PlanarImage performScale(PlanarImage image)", "diff": ["+", "-        if (keep_proportions) {", "+", "+        if(\"width\".equals(proportions)){", "+        else if(\"height\".equals(proportions)){", "+            x_fl = y_fl;", "+        }", "+        else if(\"fit\".equals(proportions)){", "+            x_fl = y_fl = Math.min(x_fl,y_fl);", "+        }", "+        else if(\"cover\".equals(proportions)){", "+            x_fl = y_fl = Math.max(x_fl,y_fl);", "+        }", "+", "-        log(\"\\tScaling to \" + x_fl + \"% x \" + y_fl + \"%\");", "+        log(\"\\tScaling to \" + (x_fl*100) + \"% x \" + (y_fl*100)+ \"%\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a251a57afa4a94f6b07318bff13ae2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java", "commitBeforeChange": "401473f8de76542db1ada7cfe12a5f7c1cc326d9", "commitAfterChange": "5a6247d496855302f131c8b8a0bb74e652ea050a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["+                } else if (CS_KEY.equalsIgnoreCase(paramname)) {", "+                    setCaseSensitive(Project", "+                                     .toBoolean(parameters[i].getValue()));", "+                } else if (ML_KEY.equalsIgnoreCase(paramname)) {", "+                    setMultiLine(Project.toBoolean(parameters[i].getValue()));", "+                } else if (SL_KEY.equalsIgnoreCase(paramname)) {", "+                    setSingleLine(Project.toBoolean(parameters[i].getValue()));"]}]}