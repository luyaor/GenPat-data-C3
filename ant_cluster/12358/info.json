{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9644df65ca5b94a3fc4f58e1e1c0ce9a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1007f2bc189bd6e16b568505498e76a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java", "commitBeforeChange": "444a953257a1f383b6e417326194b7556b85ea58", "commitAfterChange": "9d3c394c5d1c57194e8e49cd62837855411cb98f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["-        sb.append(suite.getName());", "-        sb.append(newLine);", "+        int antThreadID = suite.getThread();", "-        try {", "-            out.write(sb.toString().getBytes());", "-            out.flush();", "-        } catch (IOException ioex) {", "-            throw new BuildException(\"Unable to write summary output\", ioex);", "+        sb.append(suite.getName());", "+        /* only write thread id in multi-thread mode so default old way doesn't change output */", "+        if (antThreadID > 0) {", "+            sb.append(\" in thread \");", "+            sb.append(antThreadID);", "+        sb.append(newLine);", "+        writeOutputLine(sb.toString().getBytes());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f58fff67ae89f06b06c71022f015ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "1fb0f64b965c5296015b4d367771a2bc27e34148", "commitAfterChange": "a29e1aaf138cf3bc63dd4adf70604c95ff8ca64f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addText(Project project, Object element, String text)", "signatureAfterChange": "     public void addText(Project project, Object element, String text)", "diff": ["-           String msg = getElementName(project, element) +", "-           //String msg = \"Class \" + element.getClass().getName() +", "-                \" doesn't support nested text data.\";", "-            throw new BuildException(msg);", "+            // Element doesn't handle text content", "+            if ( text.trim().length() == 0 ) {", "+                // Only whitespace - ignore", "+                return;", "+            }", "+            else {", "+                // Not whitespace - fail", "+                String msg = getElementName(project, element) +", "+                    \" doesn't support nested text data.\";", "+                throw new BuildException(msg);", "+            }"]}]}