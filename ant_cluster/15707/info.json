{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0230c1dea3432c80be9ce8011fdcb5d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7270acb3366b8964b93c0c6310f2ebbd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory.java", "commitBeforeChange": "98bf0fac4e5d2c67d9bfd940a84c9a47bcd86506", "commitAfterChange": "ff38a6188bef2e1d3b6cace965f0075ea2c34bc5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static RmicAdapter getRmic( String rmicType, Task task )          throws BuildException", "signatureAfterChange": "     public static RmicAdapter getRmic( String rmicType, Task task )          throws BuildException", "diff": ["-        } if ( rmicType.equalsIgnoreCase(\"kaffe\") ) {", "+        } else if ( rmicType.equalsIgnoreCase(\"kaffe\") ) {", "+        } else if ( rmicType.equalsIgnoreCase(\"weblogic\") ) {", "+            return new WLRmic();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c8f6998b6d494511212b2131507bdb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory.java", "commitBeforeChange": "8e5f6ab8286b2d565aefb5ab2675d8f3b5e8c762", "commitAfterChange": "f3a629c22722a0508dbc8dcc17f19debf99239d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static JspCompilerAdapter getCompiler(String compilerType, Task task,                                                  AntClassLoader loader)         throws BuildException", "signatureAfterChange": "     public static JspCompilerAdapter getCompiler(String compilerType, Task task,                                                  AntClassLoader loader)         throws BuildException", "diff": ["-        /* If I've done things right, this should be the extent of the", "-         * conditional statements required.", "-         */", "+", "-            return new JasperC();", "+            //tomcat4.0 gets the old mangler", "+            return new JasperC(new JspNameMangler());", "+        }", "+        if (compilerType.equalsIgnoreCase(\"jasper41\")) {", "+            //tomcat4.1 gets the new one", "+            return new JasperC(new Jasper41Mangler());"]}]}