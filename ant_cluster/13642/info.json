{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a9dcb995476ae94b0434ae9640a44a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2306a62881389bad3855656eb134d141", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "69eba07e72da7b69d2ef95717c1e91d7b9b75b00", "commitAfterChange": "d3e00e275a0cb053f2a7020c1c45f94804fc9065", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void resolveLocalFileHeaderData(Map entriesWithoutEFS)         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(Map entriesWithoutUTF8Flag)         throws IOException", "diff": ["-    private void resolveLocalFileHeaderData(Map entriesWithoutEFS)", "+    private void resolveLocalFileHeaderData(Map entriesWithoutUTF8Flag)", "-            if (entriesWithoutEFS.containsKey(ze)) {", "+            if (entriesWithoutUTF8Flag.containsKey(ze)) {", "-                                                 entriesWithoutEFS.get(ze));", "+                                                 entriesWithoutUTF8Flag.get(ze));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c312846070bfb65258dd5ab3af81b24f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void resolveLocalFileHeaderData()         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(Map entriesWithoutEFS)         throws IOException", "diff": ["-    private void resolveLocalFileHeaderData()", "+    private void resolveLocalFileHeaderData(Map entriesWithoutEFS)", "+", "+            if (entriesWithoutEFS.containsKey(ze)) {", "+                setNameAndCommentFromExtraFields(ze,", "+                                                 (NameAndComment)", "+                                                 entriesWithoutEFS.get(ze));", "+            }"]}]}