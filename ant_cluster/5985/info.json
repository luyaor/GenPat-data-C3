{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d39891dc32372a948884e035ac11978f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f36c64b9f7c3244a3a1e71b9ae7ff3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public URL getResource(String name)", "signatureAfterChange": "     public URL getResource(String name)", "diff": ["-        if (isSystemFirst(name)) {", "-            url = super.getResource(name);", "+        if (isParentFirst(name)) {", "+            url = (parent == null) ? super.getResource(name) : parent.getResource(name);", "-            project.log(\"Resource \" + name + \" loaded from system loader\", ", "-                        Project.MSG_DEBUG);", "+            log(\"Resource \" + name + \" loaded from parent loader\", ", "+                Project.MSG_DEBUG);", "-            String[] pathElements = classpath.list();", "-            for (int i = 0; i < pathElements.length && url == null; ++i) {", "-                try {", "-                    File pathComponent = project.resolveFile((String)pathElements[i]);", "-                    url = getResourceURL(pathComponent, name);", "-                    if (url != null) {", "-                        project.log(\"Resource \" + name ", "-                                    + \" loaded from ant loader\", ", "-                                    Project.MSG_DEBUG);", "-                    }", "-                }", "-                catch (BuildException e) {", "-                    // ignore path elements which are invalid relative to the project", "+            for (Enumeration e = pathComponents.elements(); e.hasMoreElements() && url == null; ) {", "+                File pathComponent = (File)e.nextElement();", "+                url = getResourceURL(pathComponent, name);", "+                if (url != null) {", "+                    log(\"Resource \" + name ", "+                        + \" loaded from ant loader\", ", "+                        Project.MSG_DEBUG);", "-        if (url == null && !isSystemFirst(name)) {", "+        if (url == null && !isParentFirst(name)) {", "-            url = super.getResource(name);", "+            ", "+            url = (parent == null) ? super.getResource(name) : parent.getResource(name);", "-                project.log(\"Resource \" + name + \" loaded from system loader\", ", "-                            Project.MSG_DEBUG);", "+                log(\"Resource \" + name + \" loaded from parent loader\", ", "+                    Project.MSG_DEBUG);", "-            project.log(\"Couldn't load Resource \" + name, Project.MSG_WARN);", "+            log(\"Couldn't load Resource \" + name, Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "622e8bc88c6066e45f15233ac84d9251", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private Class findClass(String name, Path path) throws ClassNotFoundException", "signatureAfterChange": "     private Class findClassInComponents(String name) throws ClassNotFoundException", "diff": ["-    private Class findClass(String name, Path path) throws ClassNotFoundException {", "+    private Class findClassInComponents(String name) throws ClassNotFoundException {", "-            String[] pathElements = path.list();", "-            for (int i = 0; i < pathElements.length && stream == null; ++i) {", "+            for (Enumeration e = pathComponents.elements(); e.hasMoreElements(); ) {", "+                File pathComponent = (File)e.nextElement();", "-                    File pathComponent = project.resolveFile((String)pathElements[i]);", "+                    if (stream != null) {", "+                        return getClassFromStream(stream, name);", "+                    }", "-                catch (BuildException e) {", "-                    // ignore invalid paths ", "+                catch (IOException ioe) {", "+                    log(\"Exception reading component \" + pathComponent , Project.MSG_VERBOSE);", "-        ", "-            if (stream == null) {", "-                throw new ClassNotFoundException();", "-            }", "-                ", "-            return getClassFromStream(stream, name);", "-        }", "-        catch (IOException ioe) {", "-            ioe.printStackTrace();", "+            "]}]}