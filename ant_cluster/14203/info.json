{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f07e0f0b41007fb3e4441aa6711c0cba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322e3d8c1e3fdee183c64199fc44eb74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                        FilterSet executionFilterSet = new FilterSet();", "+                        FilterSetCollection executionFilters = new FilterSetCollection();", "-                            executionFilterSet.addFilterSet(project.getGlobalFilterSet());", "+                            executionFilters.addFilterSet(project.getGlobalFilterSet());", "-                            executionFilterSet.addFilterSet((FilterSet)filterEnum.nextElement());", "+                            executionFilters.addFilterSet((FilterSet)filterEnum.nextElement());", "-                        getFileUtils().copyFile(f, d, executionFilterSet,", "+                        getFileUtils().copyFile(f, d, executionFilters,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84c26553c756f6e34929d0952d65c48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/Log4jListener.java", "commitBeforeChange": "f993e95b3201e777c399c932ba6398b1fc4e2b9f", "commitAfterChange": "060243e8bfa9d86b481e6d7ea445754243b4ff13", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-            Category cat = Category.getInstance(Project.class.getName());", "+            Logger log = Logger.getLogger(Project.class.getName());", "-                cat.info(\"Build finished.\");", "+                log.info(\"Build finished.\");", "-                cat.error(\"Build finished with error.\", event.getException());", "+                log.error(\"Build finished with error.\", event.getException());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1dbdb35a43a8ebae8867a8f73c38cd4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void doFileOperations()", "signatureAfterChange": "     protected void doFileOperations()", "diff": ["-                    FilterSet executionFilterSet = new FilterSet();", "+                    FilterSetCollection executionFilters = new FilterSetCollection();", "-                        executionFilterSet.addFilterSet(project.getGlobalFilterSet());", "+                        executionFilters.addFilterSet(project.getGlobalFilterSet());", "-                        executionFilterSet.addFilterSet((FilterSet)filterEnum.nextElement());", "+                        executionFilters.addFilterSet((FilterSet)filterEnum.nextElement());", "-                    fileUtils.copyFile(fromFile, toFile, executionFilterSet,", "+                    fileUtils.copyFile(fromFile, toFile, executionFilters,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0bf15f97edaa5873928a0764e5fd54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/Log4jListener.java", "commitBeforeChange": "f993e95b3201e777c399c932ba6398b1fc4e2b9f", "commitAfterChange": "060243e8bfa9d86b481e6d7ea445754243b4ff13", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void taskFinished(BuildEvent event)", "signatureAfterChange": "     public void taskFinished(BuildEvent event)", "diff": ["-            Category cat = Category.getInstance(task.getClass().getName());", "+            Logger log = Logger.getLogger(task.getClass().getName());", "-                cat.info(\"Task \\\"\" + task.getTaskName() + \"\\\" finished.\");", "+                log.info(\"Task \\\"\" + task.getTaskName() + \"\\\" finished.\");", "-                cat.error(\"Task \\\"\" + task.getTaskName()", "+                log.error(\"Task \\\"\" + task.getTaskName()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec55a2cee9412911b28083e9666634ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/MatchingTask.java", "commitBeforeChange": "432a0ae47a43a7e8c6a8c2678289b88b8aa18960", "commitAfterChange": "158172592212491498d6a30ceab0a1b806fde59e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setExcludesfile( final File excludesfile )         throws TaskException", "signatureAfterChange": "     public void addExclude( final Pattern pattern )", "diff": ["-     */", "-    public void setExcludesfile( final File excludesfile )", "-        throws TaskException", "-    {", "-        m_fileset.setExcludesfile( excludesfile );", "-    }", "+    public void addExclude( final Pattern pattern )", "+        m_fileset.addExclude( pattern );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eddb9246cbb00b0d341599fb505aa13a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/MatchingTask.java", "commitBeforeChange": "432a0ae47a43a7e8c6a8c2678289b88b8aa18960", "commitAfterChange": "158172592212491498d6a30ceab0a1b806fde59e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setExcludesfile( final File excludesfile )         throws TaskException", "signatureAfterChange": "     public void addExclude( final Pattern pattern )", "diff": ["-     */", "-    public void setExcludesfile( final File excludesfile )", "-        throws TaskException", "-    {", "-        m_fileset.setExcludesfile( excludesfile );", "-    }", "+    public void addExclude( final Pattern pattern )", "+        m_fileset.addExclude( pattern );"]}]}