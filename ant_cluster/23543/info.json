{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7ca84ebf4e62696fcb8569a9ece2596", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bff61fb105c69d203f0c9ff43903b4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "ad4c56763e91150e9a6cadce4e62f50e7276311e", "commitAfterChange": "b31472d21fcd29fc5104562036e9dd98da76f9de", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public InputStream getResourceAsStream(String name)", "signatureAfterChange": "     public InputStream getResourceAsStream(String name)", "diff": ["+", "+        InputStream resourceStream = null;", "+        if (isSystemFirst(name)) {", "+            resourceStream = loadBaseResource(name);", "+            if (resourceStream == null) {", "+                resourceStream = loadResource(name);", "+            }", "+        }", "+        else {", "+            resourceStream = loadResource(name);", "+            if (resourceStream == null) {", "+                resourceStream = loadBaseResource(name);", "+            }", "+        }", "+            ", "+        return resourceStream;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56b6d01c7b8085f33598b2b20c35a71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void addAllFiles(final File anOutputDir, String aCurrentDirOrFile, Hashtable someFiles)", "signatureAfterChange": "     private void addAllFiles(File file, String rootDir, Hashtable hashtable)", "diff": ["-     */", "-    private void addAllFiles(final File anOutputDir, String aCurrentDirOrFile, Hashtable someFiles) {", "-        File aFile = new File(anOutputDir, aCurrentDirOrFile);", "-        if (aFile.isDirectory()) {", "-            String aCurrentDir = \"\";", "-            if (aCurrentDirOrFile.length() > 0) {", "-                aCurrentDir = aCurrentDirOrFile + '/';", "-            }", "-            File theFiles[] = aFile.listFiles();", "-            for (int i = 0; i < theFiles.length; i++) {", "-                addAllFiles(anOutputDir, aCurrentDir + theFiles[i].getName(), someFiles);", "-            }", "-        } else {", "-            // is a file", "-            someFiles.put(aCurrentDirOrFile, aFile);", "-        }", "+    private void addAllFiles(File file, String rootDir, Hashtable hashtable) {", "+        if ( !file.exists() ) {", "+\t    throw new IllegalArgumentException();", "+\t}", "+\t", "+\tString newRootDir;", "+        if ( file.isDirectory() ) {", "+\t    File files[] = file.listFiles();\t", "+\t    for (int i = 0; i < files.length; i++) {", "+\t\tif ( rootDir.length() > 0 ) {", "+\t\t    newRootDir = rootDir + File.separator + files[i].getName();", "+\t\t} else {", "+\t\t    newRootDir = files[i].getName();\t\t     ", "+\t\t}", "+\t\taddAllFiles(files[i], newRootDir, hashtable);", "+\t    }", "+        } else {", "+            hashtable.put(rootDir, file);"]}]}