{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c6d9ff375c93f8d395755f75a8811f0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8973baab61f38c82941b0bb10653738f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/PathTest.java", "commitBeforeChange": "e71c461e8c35bd5c1990c4f972c05f15a6fadd07", "commitAfterChange": "060b4735dc02b5827bcea5ce1226b3baa4538ca3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testEmptyElementIfIsReference()", "signatureAfterChange": "      public void testEmptyElementIfIsReference()", "diff": ["+        Path another = new Path(project, \"/a:/a\");", "+        project.addReference(\"dummyref\", another);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf28e8d1871467d64eef4dd6da03f00d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "          protected void doCompose( final Tasklet tasklet,                                final Configuration task,                               final ComponentManager componentManager )         throws AntException", "signatureAfterChange": "          protected void doCompose( final Tasklet tasklet,                                final Configuration task,                               final ComponentManager componentManager )         throws AntException", "diff": ["+", "+        final DefaultComponentManager subComponentManager = ", "+            new DefaultComponentManager( componentManager );", "+", "+        subComponentManager.put( \"org.apache.ant.configuration.Configurer\", m_configurer );", "+", "-            try { ((Composer)tasklet).compose( componentManager ); }", "+            try { ((Composer)tasklet).compose( subComponentManager ); }"]}]}