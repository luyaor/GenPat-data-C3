{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02a1cf840a0d6ff849507b311ec46bac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ed1ec13c26f121661b04b9b147c8bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/PropertyFileCLITest.java", "commitBeforeChange": "3f4cb68defbf5f5b4c642c2e5cebded4172707d1", "commitAfterChange": "fb2d2b20ba111990c473116f488661b5dd7c86c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testPropertyResolution() throws Exception", "signatureAfterChange": "      public void testPropertyResolution() throws Exception", "diff": ["-        File props = File.createTempFile(\"propertyfilecli\", \".properties\");", "-        props.deleteOnExit();", "-        FileWriter fw = new FileWriter(props);", "-        fw.write(\"w=world\\nmessage=Hello, ${w}\\n\");", "-        fw.close();", "-        File build = File.createTempFile(\"propertyfilecli\", \".xml\");", "-        build.deleteOnExit();", "-        fw = new FileWriter(build);", "-        fw.write(\"<project><echo>${message}</echo></project>\");", "-        fw.close();", "-        PrintStream sysOut = System.out;", "-        StringBuffer sb = new StringBuffer();", "+        FileUtils fu = FileUtils.getFileUtils();", "+        File props = fu.createTempFile(\"propertyfilecli\", \".properties\",", "+                                       null, true, true);", "+        File build = fu.createTempFile(\"propertyfilecli\", \".xml\", null, true,", "+                                       true);", "+        File log = fu.createTempFile(\"propertyfilecli\", \".log\", null, true,", "+                                     true);", "+        FileWriter fw = null;", "+        FileReader fr = null;", "-            PrintStream out =", "-                new PrintStream(new BuildFileTest.AntOutputStream(sb));", "-            System.setOut(out);", "+            fw = new FileWriter(props);", "+            fw.write(\"w=world\\nmessage=Hello, ${w}\\n\");", "+            fw.close();", "+            fw = new FileWriter(build);", "+            fw.write(\"<project><echo>${message}</echo></project>\");", "+            fw.close();", "+            fw = null;", "-                    \"-f\", build.getAbsolutePath()", "+                    \"-f\", build.getAbsolutePath(),", "+                    \"-l\", log.getAbsolutePath()", "+            String l = FileUtils.safeReadFully(fr = new FileReader(log));", "+            assertTrue(\"expected log to contain 'Hello, world' but was \" + l,", "+                       l.indexOf(\"Hello, world\") > -1);", "-            System.setOut(sysOut);", "+            FileUtils.close(fw);", "+            FileUtils.close(fr);", "-        String log = sb.toString();", "-        assertTrue(\"expected log to contain 'Hello, world' but was \" + log,", "-                   log.indexOf(\"Hello, world\") > -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2a82f29844f91617d751a17a0a9990", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "5b362efc980668c8bd04aa2ea6405174bd443f16", "commitAfterChange": "d93d7b09161b9fed366062f9fc095e46e772a69e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void validateAttributes() throws BuildException", "signatureAfterChange": "     protected void validateAttributes() throws BuildException", "diff": ["-        if (file == null && filesets.size() == 0) {", "+        if (file == null && rcs.size() == 0) {", "-                \"Specify at least one source--a file or a fileset.\");", "+                \"Specify at least one source--a file or a resource collection.\");", "-            throw new BuildException(\"Use a fileset to copy directories.\");", "+            throw new BuildException(\"Use a resource collection to copy directories.\");", "-        if (destFile != null && filesets.size() > 0) {", "-            if (filesets.size() > 1) {", "+        if (destFile != null && rcs.size() > 0) {", "+            if (rcs.size() > 1) {", "-                FileSet fs = (FileSet) filesets.elementAt(0);", "-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-                String[] srcFiles = ds.getIncludedFiles();", "-", "-                if (srcFiles.length == 0) {", "+\t\tResourceCollection rc = (ResourceCollection) rcs.elementAt(0);", "+\t\tif (!rc.isFilesystemOnly()) {", "+\t\t    throw new BuildException(\"Only FileSystem resources are\"", "+\t\t\t\t\t     + \" supported.\");", "+\t\t}", "+\t\tif (rc.size() == 0) {", "-                } else if (srcFiles.length == 1) {", "+                } else if (rc.size() == 1) {", "+\t\t    FileResource r = (FileResource) rc.iterator().next();", "-                        file = new File(ds.getBasedir(), srcFiles[0]);", "-                        filesets.removeElementAt(0);", "+                        file = r.getFile();", "+                        rcs.removeElementAt(0);"]}]}