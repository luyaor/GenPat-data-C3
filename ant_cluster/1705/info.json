{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b4ee104afc73a06439a65c5332ab3b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357a7207b7ab7b138af35f22a357422c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "6cd0de1022faed419783119405f458e44a1ac663", "commitAfterChange": "f21a51dfd3ecb9fa8813f5612a5f87d437de2450", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void writeCentralFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeCentralFileHeader(ZipEntry ze) throws IOException", "diff": ["-        writeVersionNeededToExtractAndGeneralPurposeBits(zipMethod);", "+        final boolean encodable = zipEncoding.canEncode(ze.getName());", "+        writeVersionNeededToExtractAndGeneralPurposeBits(zipMethod,", "+                                                         !encodable", "+                                                         && fallbackToUTF8);", "-        ByteBuffer name = this.zipEncoding.encode(ze.getName());", "+        ByteBuffer name;", "+        if (!encodable && fallbackToUTF8) {", "+            name = ZipEncodingHelper.UTF8_ZIP_ENCODING.encode(ze.getName());", "+        } else {", "+            name = zipEncoding.encode(ze.getName());", "+        }", "-        ByteBuffer commentB = this.zipEncoding.encode(comm);", "+        ByteBuffer commentB;", "+        if (!encodable && fallbackToUTF8) {", "+            commentB = ZipEncodingHelper.UTF8_ZIP_ENCODING.encode(comm);", "+        } else {", "+            commentB = zipEncoding.encode(comm);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397844fd0a7590ad2aba3ea1e771924a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "6cd0de1022faed419783119405f458e44a1ac663", "commitAfterChange": "f21a51dfd3ecb9fa8813f5612a5f87d437de2450", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["-        boolean encodable = this.zipEncoding.canEncode(ze.getName());", "-        ByteBuffer name = this.zipEncoding.encode(ze.getName());", "+        boolean encodable = zipEncoding.canEncode(ze.getName());", "+        ByteBuffer name;", "+        if (!encodable && fallbackToUTF8) {", "+            name = ZipEncodingHelper.UTF8_ZIP_ENCODING.encode(ze.getName());", "+        } else {", "+            name = zipEncoding.encode(ze.getName());", "+        }", "-        if (createUnicodeExtraFields) {", "+        if (createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER) {", "-            /*            if (!encodable) { -- FIXME decide what to*/", "+            if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS", "+                || !encodable) {", "-            /* } */", "+            }", "-                /*            if (!commentEncodable) { -- FIXME decide what to*/", "+                if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS", "+                    || !commentEncodable) {", "-                /* } */", "+                }", "-        writeVersionNeededToExtractAndGeneralPurposeBits(zipMethod);", "+        writeVersionNeededToExtractAndGeneralPurposeBits(zipMethod,", "+                                                         !encodable", "+                                                         && fallbackToUTF8);"]}]}