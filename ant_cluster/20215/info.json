{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4a2f9d17305c5bb7d91772ede343a95", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e779b62805d933103f76469c3c76ef5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected String[] getParameters()         throws TaskException", "signatureAfterChange": "     protected String[] getParameters()         throws TaskException", "diff": ["-        Vector params = new Vector();", "-        params.addElement( \"-jp_function=\" + function );", "+        ArrayList params = new ArrayList();", "+        params.add( \"-jp_function=\" + function );", "-            params.addElement( \"-jp_vm=\" + vm );", "+            params.add( \"-jp_vm=\" + vm );", "-            params.addElement( \"-jp_java_exe=\" + resolveFile( javaExe.getPath() ) );", "+            params.add( \"-jp_java_exe=\" + resolveFile( javaExe.getPath() ) );", "-        params.addElement( \"-jp_working_dir=\" + workingDir.getPath() );", "-        params.addElement( \"-jp_snapshot_dir=\" + snapshotDir.getPath() );", "-        params.addElement( \"-jp_record_from_start=\" + recordFromStart );", "-        params.addElement( \"-jp_warn=\" + warnLevel );", "+        params.add( \"-jp_working_dir=\" + workingDir.getPath() );", "+        params.add( \"-jp_snapshot_dir=\" + snapshotDir.getPath() );", "+        params.add( \"-jp_record_from_start=\" + recordFromStart );", "+        params.add( \"-jp_warn=\" + warnLevel );", "-            params.addElement( \"-jp_output_file=\" + seedName );", "+            params.add( \"-jp_output_file=\" + seedName );", "-        params.addElement( \"-jp_filter=\" + filters.toString() );", "+        params.add( \"-jp_filter=\" + filters.toString() );", "-            params.addElement( \"-jp_trigger=\" + triggers.toString() );", "+            params.add( \"-jp_trigger=\" + triggers.toString() );", "-            params.addElement( \"-jp_final_snapshot=\" + finalSnapshot );", "+            params.add( \"-jp_final_snapshot=\" + finalSnapshot );", "-        params.addElement( \"-jp_exit_prompt=\" + exitPrompt );", "-        //params.addElement(\"-jp_append=\" + append);", "-        params.addElement( \"-jp_track_natives=\" + trackNatives );", "+        params.add( \"-jp_exit_prompt=\" + exitPrompt );", "+        //params.add(\"-jp_append=\" + append);", "+        params.add( \"-jp_track_natives=\" + trackNatives );", "-            params.addElement( vmargs[ i ] );", "+            params.add( vmargs[ i ] );", "-            params.addElement( \"-classpath \" + classpath.toString() );", "+            params.add( \"-classpath \" + classpath.toString() );", "-            params.addElement( cmdlJava.getClassname() );", "+            params.add( cmdlJava.getClassname() );", "-            params.addElement( args[ i ] );", "+            params.add( args[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a605cc78612809156f00e6485b1bf417", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected String[] getParameters()         throws TaskException", "signatureAfterChange": "     protected String[] getParameters()         throws TaskException", "diff": ["-        Vector params = new Vector();", "-        params.addElement( \"-jp_function=\" + function );", "+        ArrayList params = new ArrayList();", "+        params.add( \"-jp_function=\" + function );", "-            params.addElement( \"-jp_vm=\" + vm );", "+            params.add( \"-jp_vm=\" + vm );", "-            params.addElement( \"-jp_java_exe=\" + resolveFile( javaExe.getPath() ) );", "+            params.add( \"-jp_java_exe=\" + resolveFile( javaExe.getPath() ) );", "-        params.addElement( \"-jp_working_dir=\" + workingDir.getPath() );", "-        params.addElement( \"-jp_snapshot_dir=\" + snapshotDir.getPath() );", "-        params.addElement( \"-jp_record_from_start=\" + recordFromStart );", "-        params.addElement( \"-jp_warn=\" + warnLevel );", "+        params.add( \"-jp_working_dir=\" + workingDir.getPath() );", "+        params.add( \"-jp_snapshot_dir=\" + snapshotDir.getPath() );", "+        params.add( \"-jp_record_from_start=\" + recordFromStart );", "+        params.add( \"-jp_warn=\" + warnLevel );", "-            params.addElement( \"-jp_output_file=\" + seedName );", "+            params.add( \"-jp_output_file=\" + seedName );", "-        params.addElement( \"-jp_filter=\" + filters.toString() );", "+        params.add( \"-jp_filter=\" + filters.toString() );", "-            params.addElement( \"-jp_trigger=\" + triggers.toString() );", "+            params.add( \"-jp_trigger=\" + triggers.toString() );", "-            params.addElement( \"-jp_final_snapshot=\" + finalSnapshot );", "+            params.add( \"-jp_final_snapshot=\" + finalSnapshot );", "-        params.addElement( \"-jp_exit_prompt=\" + exitPrompt );", "-        //params.addElement(\"-jp_append=\" + append);", "-        params.addElement( \"-jp_track_natives=\" + trackNatives );", "+        params.add( \"-jp_exit_prompt=\" + exitPrompt );", "+        //params.add(\"-jp_append=\" + append);", "+        params.add( \"-jp_track_natives=\" + trackNatives );", "-            params.addElement( vmargs[ i ] );", "+            params.add( vmargs[ i ] );", "-            params.addElement( \"-classpath \" + classpath.toString() );", "+            params.add( \"-classpath \" + classpath.toString() );", "-            params.addElement( cmdlJava.getClassname() );", "+            params.add( cmdlJava.getClassname() );", "-            params.addElement( args[ i ] );", "+            params.add( args[ i ] );"]}]}