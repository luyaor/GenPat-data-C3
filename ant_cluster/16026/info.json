{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0245e3ff9d8000e3c667b1e072df8a1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "254432035b09c2773d4951c42a831fa6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void executeProject( BuildListener listener )", "signatureAfterChange": "     public void executeProject( BuildListener logger )", "diff": ["- */", "-public void executeProject( BuildListener listener ) {", "-\tThrowable error = null;", "-\ttry {", "-\t\tif (!isProjectInitialized()) {", "-\t\t\tproject = new Project();", "-\t\t}", "-\t\tproject.addBuildListener( listener );", "-\t\t// Chris: HACK: replace when Ant-Refactoring is finished!", "-//\t\tproject.fireBuildStarted();", "-\t\tif (!isProjectInitialized()) {", "-\t\t\tinitProject();", "-\t\t}", "-\t\tproject.executeTarget(target);", "-\t} catch (RuntimeException exc) {", "-\t\terror = exc;", "-\t\tthrow exc;", "-\t} catch (Error err) {", "-\t\terror = err;", "-\t\tthrow err;", "-\t} finally {", "-\t\t// Chris: HACK: replace when Ant-Refactoring is finished!", "-//\t\tproject.fireBuildFinished(error);", "-\t\tproject.removeBuildListener( listener );", "-\t}", "-}", "+     */", "+    public void executeProject( BuildListener logger ) {", "+        Throwable error;", "+        projectLogger = logger;", "+        try {", "+            buildThread = new Thread( this );", "+            buildThread.setPriority(Thread.MIN_PRIORITY);", "+            buildThread.start();", "+        } catch (RuntimeException exc) {", "+            error = exc;", "+            throw exc;", "+        } catch (Error err) {", "+            error = err;", "+            throw err;", "+        } ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45cc2b28402fba5c7ad2842775b3964d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 23, "signatureBeforeChange": " public static VAJBuildInfo parse(String data)", "signatureAfterChange": "     public static VAJBuildInfo parse(String data)", "diff": ["- */", "-public static VAJBuildInfo parse(String data) {", "-\tVAJBuildInfo result = new VAJBuildInfo();", "-\ttry {", "-\t\tjava.util.StringTokenizer tok = new java.util.StringTokenizer( data, \"|\" );", "-\t\tresult.setOutputMessageLevel( tok.nextToken() );", "-\t\tresult.setBuildFileName( tok.nextToken() );", "-\t\tresult.setTarget( tok.nextToken() );", "-\t\twhile( tok.hasMoreTokens() ) {", "-\t\t\tresult.projectTargets.addElement( tok.nextToken() );", "-\t\t}", "-\t} catch ( Throwable t ) {", "-\t}", "-\treturn result;", "-}", "+     */", "+    public static VAJBuildInfo parse(String data) {", "+        VAJBuildInfo result = new VAJBuildInfo();", "+", "+        try {", "+            StringTokenizer tok = new StringTokenizer( data, \"|\" );", "+            result.setOutputMessageLevel( tok.nextToken() );", "+            result.setBuildFileName( tok.nextToken() );", "+            result.setTarget( tok.nextToken() );", "+            while( tok.hasMoreTokens() ) {", "+                result.projectTargets.addElement( tok.nextToken() );", "+            }", "+        } catch ( Throwable t ) {", "+            // if parsing the info fails, just return", "+            // an empty VAJBuildInfo", "+        }", "+        return result;", "+    }"]}]}