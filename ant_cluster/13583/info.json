{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e03c72694e151a83c7d542d1c04493aa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c64071ea679290be768c0f59db0c21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/LineContainsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testLineContains() throws IOException", "signatureAfterChange": "      @Test     public void testLineContains() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testLineContains\");", "-        File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(),\"expected/linecontains.test\");", "-        File result = new File(getProject().getProperty(\"output\"),\"linecontains.test\");", "-        assertTrue(FILE_UTILS.contentEquals(expected, result));", "+        buildRule.executeTarget(\"testLineContains\");", "+        File expected = buildRule.getProject().resolveFile(\"expected/linecontains.test\");", "+        File result = new File(buildRule.getProject().getProperty(\"output\"),\"linecontains.test\");", "+        assertEquals(FileUtilities.getFileContents(expected), FileUtilities.getFileContents(result));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1653d86147d0e88255b3a56c58ec714", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/ReplaceTokensTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testReplaceTokens() throws IOException", "signatureAfterChange": "      @Test     public void testReplaceTokens() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testReplaceTokens\");", "-        File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(),\"expected/replacetokens.test\");", "-        File result = new File(getProject().getProperty(\"output\"), \"replacetokens.test\");", "-        assertTrue(FILE_UTILS.contentEquals(expected, result));", "+        buildRule.executeTarget(\"testReplaceTokens\");", "+        File expected = buildRule.getProject().resolveFile(\"expected/replacetokens.test\");", "+        File result = new File(buildRule.getProject().getProperty(\"output\"), \"replacetokens.test\");", "+       assertEquals(FileUtilities.getFileContents(expected), FileUtilities.getFileContents(result));"]}]}