{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c8ea4b4e90e8e97eddf5e70945de3fc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b39af2067e6a10ec01e4b37401dfcd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "2f92f5e232e603548fc2def696fa1ab278fb11a8", "commitAfterChange": "543344b83993d92a562a4db14717a1a8f27f499d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "diff": ["+        String cpString = null;", "+            } else if (args[i].equals(\"-cp\")) {", "+                if (i == args.length - 1) {", "+                    throw new LaunchException(\"The -cp argument must \"", "+                        + \"be followed by a classpath expression\");", "+                }", "+                if (cpString != null) {", "+                    throw new LaunchException(\"The -cp argument must \"", "+                        + \"not be repeated\");", "+                }", "+                cpString = args[++i];", "-        if (libPaths.size() == 0) {", "+        if (libPaths.size() == 0 && cpString == null) {", "+", "+        if (cpString != null) {", "+            addPath(cpString, false, libPathURLs);", "+        }", "+", "-            StringTokenizer myTokenizer", "-                = new StringTokenizer(libPath, System.getProperty(\"path.separator\"));", "-            while (myTokenizer.hasMoreElements()) {", "-                String elementName = myTokenizer.nextToken();", "-                File element = new File(elementName);", "-                if (elementName.indexOf(\"%\") != -1 && !element.exists()) {", "-                    continue;", "-                }", "-                if (element.isDirectory()) {", "-                    // add any jars in the directory", "-                    URL[] dirURLs = Locator.getLocationURLs(element);", "-                    for (int j = 0; j < dirURLs.length; ++j) {", "-                        libPathURLs.add(dirURLs[j]);", "-                    }", "-                }", "-", "-                libPathURLs.add(element.toURL());", "-            }", "+            addPath(libPath, true, libPathURLs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e81ad6d3d94b8aa7fba342a7766dbb13", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "a7d38cf2639a85056062bdc2c3da1067cb84644a", "commitAfterChange": "f027ced8e7799c021f5678ba73fba07faca9de8f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (source == null && filesets.size() == 0) {", "-            throw new BuildException(\"src attribute and/or filesets must be \"", "+        if (source == null && resources.size() == 0) {", "+            throw new BuildException(\"src attribute and/or resources must be \"", "-        if (filesets.size() > 0) {", "-            for (int j = 0, size = filesets.size(); j < size; j++) {", "-                FileSet fs = (FileSet) filesets.elementAt(j);", "-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-                File fromDir = fs.getDir(getProject());", "+\tIterator iter = resources.iterator();", "+\twhile (iter.hasNext()) {", "+\t    Resource r = (Resource) iter.next();", "+\t    if (!r.isExists()) {", "+\t\tcontinue;", "+\t    }", "-                String[] files = ds.getIncludedFiles();", "-                for (int i = 0; i < files.length; ++i) {", "-                    File file = new File(fromDir, files[i]);", "-                    expandFile(FILE_UTILS, file, dest);", "-                }", "-            }", "-        }", "+\t    if (r instanceof FileResource) {", "+\t\texpandFile(FILE_UTILS, ((FileResource) r).getFile(), dest);", "+\t    } else {", "+\t\texpandResource(r, dest);", "+\t    }", "+\t}"]}]}