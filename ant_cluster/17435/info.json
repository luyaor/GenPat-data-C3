{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0444be1b1dc991cb31e79ce14cdb9eca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82dcffa6f04f4e1bc5bb626dfe11967a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/launcher/AntLoader.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final static void main( final String[] args )          throws Exception", "signatureAfterChange": "     public final static void main( final String[] args )          throws Exception", "diff": ["-    { ", "-        final URL archive = new URL( \"file:lib/myrmidon.jar\" );", "-        c_classLoader = new AntLoader( new URL[] { archive } );", "-        ", "+    {        ", "+            //actually try to discover the install directory based on where", "+            // the ant.jar is", "+            final File installDirectory = findInstallDir();", "+            System.setProperty( \"ant.home\", installDirectory.toString() );", "+", "+            //setup classloader appropriately for myrmidon jar", "+            final File archive = ", "+                new File( installDirectory, \"lib\" + File.separator + \"myrmidon.jar\" );", "+            final AntClassLoader classLoader = ", "+                new AntClassLoader( new URL[] { archive.toURL() } );", "+", "-            final Class clazz = c_classLoader.loadClass( \"org.apache.ant.Main\" );", "+            final Class clazz = classLoader.loadClass( \"org.apache.ant.Main\" );", "+        catch( final InvocationTargetException ite ) ", "+        {", "+            System.err.println( \"Error: \" + ite.getTargetException().getMessage() );", "+            ite.getTargetException().printStackTrace();", "+        }", "+            System.err.println( \"Error: \" + throwable.getMessage() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c59f16514473b80c8969b118721e792", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "0bf139178affc6edbd26010b96cd727bd1396c84", "commitAfterChange": "722f6306c7ce1bcfed6c1baacb939978cd48fc6b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["-                                     ", "+", "-                if (!destFile.delete()) {", "-                    throw new BuildException(\"Unable to delete \" + destFile);", "+                // Compare the destination with the temp file", "+                System.out.println(\"destFile exists\");", "+                if ( ! filesEqual(destFile, tmpFile)) {", "+                    System.out.println(\"destFile exists: files not equal\");", "+                    log(destFile + \" is being written\", Project.MSG_VERBOSE);", "+                    if (!destFile.delete()) {", "+                        throw new BuildException(\"Unable to delete \"", "+                                                 + destFile);", "+                    }", "+                    if (!tmpFile.renameTo(destFile)) {", "+                        throw new BuildException(", "+                                \"Failed to transform \" + srcFile", "+                                + \" to \" + destFile", "+                                + \". Couldn't rename temporary file: \"", "+                                + tmpFile);", "+                    }", "+", "+                } else { // destination is equal to temp file", "+                    System.out.println(\"destFile exists: files equal\");", "+                    log(destFile +", "+                        \" is not written, as the contents are identical\",", "+                        Project.MSG_VERBOSE);", "+                    if (!tmpFile.delete()) {", "+                        throw new BuildException(\"Unable to delete \"", "+                                                 + destFile);", "+                    }", "+                }", "+            } else { // destFile does not exist - write the temp file", "+                System.out.println(\"destFile does not exist\");", "+                if (!tmpFile.renameTo(destFile)) {", "+                    throw new BuildException(", "+                            \"Failed to transform \" + srcFile", "+                            + \" to \" + destFile", "+                            + \". Couldn't rename temporary file: \"", "+                            + tmpFile);", "-                                     ", "-            if (!tmpFile.renameTo(destFile)) {", "-                throw new BuildException(\"Failed to transform \" + srcFile", "-                                         + \" to \" + destFile", "-                                         + \". Couldn't rename temporary file: \" + tmpFile);", "-            } else {", "-                tmpFile = null;", "-            }", "+", "+            tmpFile = null;"]}]}