{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3afaaaf1695523ab1bb62064d02f767b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cdb8791836bcd4c510c4bd906b0d4dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void service( final ServiceManager serviceManager )         throws ServiceException", "signatureAfterChange": "     public void setRootExecutionFrame( final ExecutionFrame frame ) throws Exception", "diff": ["-    public void service( final ServiceManager serviceManager )", "-        throws ServiceException", "+    public void setRootExecutionFrame( final ExecutionFrame frame ) throws Exception", "-        m_serviceManager = serviceManager;", "-        m_typeManager = (TypeManager)serviceManager.lookup( TypeManager.ROLE );", "-        m_executor = (Executor)serviceManager.lookup( Executor.ROLE );", "-        m_deployer = (Deployer)serviceManager.lookup( Deployer.ROLE );", "+        m_baseStore = frame.getProperties();", "+        m_serviceManager = frame.getServiceManager();", "+        m_typeManager = (TypeManager)m_serviceManager.lookup( TypeManager.ROLE );", "+        m_executor = (Executor)m_serviceManager.lookup( Executor.ROLE );", "+        m_deployer = (Deployer)m_serviceManager.lookup( Deployer.ROLE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40982aa6e5a971cb668288cfae3176f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentNotFoundException, ComponentNotAccessibleException", "signatureAfterChange": "     public void compose( final ComponentManager componentManager )         throws ComponentNotFoundException, ComponentNotAccessibleException", "diff": ["-        final ConverterEngine converterEngine = (ConverterEngine)componentManager.", "-            lookup( \"org.apache.ant.convert.ConverterEngine\" );", "-", "-        m_converterInfoRegistry = converterEngine.getConverterRegistry();", "-        m_converterRegistry = converterEngine.getLocatorRegistry();", "-", "-        m_taskletRegistry = taskletEngine.getLocatorRegistry();", "+        final ConverterEngine converterEngine = taskletEngine.getConverterEngine();", "+", "+        m_converterInfoRegistry = converterEngine.getInfoRegistry();", "+        m_converterRegistry = converterEngine.getRegistry();", "+", "+        m_taskletRegistry = taskletEngine.getRegistry();", "+        ", "+        m_dataTypeRegistry = taskletEngine.getDataTypeEngine().getRegistry();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6eee75f379883032c0b9f3c55018e649", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "a984179d1f7d092e4e0c671a0b4e714cf7a88142", "commitAfterChange": "1dd390137b8f8e921f129269855d1fe5621473a6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["+                        int stLength = startToken.length();", "+                        int etLength = endToken.length();", "-                                startIndex = line.indexOf(startToken, endIndex + 1);", "+                                startIndex = line.indexOf(startToken, endIndex + etLength);", "-                                    startIndex + 1 >= line.length()) {", "+                                    startIndex + stLength >= line.length()) {", "-                                endIndex = line.indexOf(endToken, startIndex + 1);", "+                                endIndex = line.indexOf(endToken, startIndex + stLength);", "-                                String matches = line.substring(startIndex + 1,", "+                                String matches = line.substring(startIndex + stLength,", "-                                    //If there is a white space or = or :, then", "-                                    //it isn't to be treated as a valid key.", "+                                //If there is a white space or = or :, then", "+                                //it isn't to be treated as a valid key.", "-                                    + line.substring(endIndex + 1);", "-                                endIndex = startIndex + replace.length() + 1;", "-                                if (endIndex + 1 >= line.length()) {", "+                                    + line.substring(endIndex + etLength);", "+                                endIndex = startIndex + replace.length() + etLength;", "+                                if (endIndex + etLength >= line.length()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb9c8de77549ab1f10a404f340bc4a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public void service( final ServiceManager serviceManager )         throws ServiceException", "diff": ["-    public void compose( final ComponentManager componentManager )", "-        throws ComponentException", "+    public void service( final ServiceManager serviceManager )", "+        throws ServiceException", "-        m_converterRegistry = (ConverterRegistry)componentManager.lookup( ConverterRegistry.ROLE );", "-        m_typeManager = (TypeManager)componentManager.lookup( TypeManager.ROLE );", "-        m_roleManager = (RoleManager)componentManager.lookup( RoleManager.ROLE );", "-        m_classLoaderManager = (ClassLoaderManager)componentManager.lookup( ClassLoaderManager.ROLE );", "-        m_ServiceManager = (ServiceManager)componentManager.lookup( ServiceManager.ROLE );", "+        m_converterRegistry = (ConverterRegistry)serviceManager.lookup( ConverterRegistry.ROLE );", "+        m_typeManager = (TypeManager)serviceManager.lookup( TypeManager.ROLE );", "+        m_roleManager = (RoleManager)serviceManager.lookup( RoleManager.ROLE );", "+        m_classLoaderManager = (ClassLoaderManager)serviceManager.lookup( ClassLoaderManager.ROLE );", "+        m_serviceManager = (AntServiceManager)serviceManager.lookup( AntServiceManager.ROLE );"]}]}