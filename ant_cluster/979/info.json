{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b8091959a6385bc78a95286af45bcaf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71a719edbfbf0f345643708762cd5014", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/EchoPropertiesTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "       public void testReadBadFileNoFail()", "signatureAfterChange": "      @Test     public void testReadBadFileNoFail()", "diff": ["-", "+    @Test", "-        expectLog( \"testReadBadFileNoFail\", \"srcfile is a directory!\" );", "+        buildRule.executeTarget(\"testReadBadFileNoFail\");", "+        assertContains(\"srcfile is a directory!\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c5c3bd00cd165a4f7ec32bf02ffc92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/PropertyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void test4()", "signatureAfterChange": "      @Test     public void test4()", "diff": ["+    @Test", "-        expectLog(\"test4\", \"http.url is http://localhost:999\");", "+    \tbuildRule.executeTarget(\"test4\");", "+    \tassertContains(\"http.url is http://localhost:999\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af8565391e3ed4981745ae78c7753528", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/PropertyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testThisIsNotACircularReference()", "signatureAfterChange": "      @Test     public void testThisIsNotACircularReference()", "diff": ["+    @Test", "-        expectLog(\"thisIsNotACircularReference\", \"b is A/A/A\");", "+    \tbuildRule.executeTarget(\"thisIsNotACircularReference\");", "+        assertContains(\"b is A/A/A\", buildRule.getLog());"]}]}