{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8d5c62675c261eb17f98c0d891b8772", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbed20a6984ea268ad10a678e55113d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutionFrame.java", "commitBeforeChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "commitAfterChange": "43cbdfc52cca75f3089c7494d99b91cb9d562fc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void contextualize( final Context context )", "signatureAfterChange": "      public void contextualize( final Context context ) throws ContextException", "diff": ["-    public void contextualize( final Context context )", "+    public void contextualize( final Context context ) throws ContextException", "-    }", "+        try", "+        {", "+            m_typeManager = (TypeManager)m_context.getService( TypeManager.class );", "+        }", "+        catch( TaskException te )", "+        {", "+            throw new ContextException(te.getMessage(), te);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffbfb88d66552f452aced1796abe8ad3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/selftest/ConfigurationTest.java", "commitBeforeChange": "65256f43dc603a14267a300f68ce7a123500d6e7", "commitAfterChange": "101185acab050a2a015c53e2c56adbe2c81b27e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-        final Object object = resolve( message );", "+        final Object object;", "+        try", "+        {", "+            object = resolveValue( message );", "+        }", "+        catch( final TaskException te )", "+        {", "+            throw new ConfigurationException( te.getMessage(), te );", "+        }"]}]}