{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92a47f8b4e84b418b342a2fe42079538", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859c0bea96d9eb9e35b3b3db539b982d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "33e7d8090195b478dc77ed9c167a9f320d4dce2a", "commitAfterChange": "91df263ee0ffb14084460bb849c6f9584418edf7", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public synchronized void add(ResourceCollection c)", "signatureAfterChange": "     public void add(ResourceCollection c)", "diff": ["-    public synchronized void add(ResourceCollection c) {", "-        if (rc == null) {", "-            rc = c;", "-            return;", "+    public void add(ResourceCollection c) {", "+        synchronized (this) {", "+            if (rc == null) {", "+                rc = new Resources();", "+                rc.setProject(getProject());", "+                rc.setCache(true);", "+            }", "-        if (!(rc instanceof Resources)) {", "-            Resources newRc = new Resources();", "-            newRc.setProject(getProject());", "-            newRc.setCache(true);", "-            newRc.add(rc);", "-            rc = newRc;", "-        }", "-        ((Resources) rc).add(c);", "+        rc.add(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b3bf9d76a0863cd80d2744e63b0a33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "cf12b9b863b658fec3fa94eecd4c0e7df3b8e986", "commitAfterChange": "05988f712e1b2011194e635b8ffe5b57aebd8bf1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public synchronized boolean isFilesystemOnly()", "signatureAfterChange": "     public synchronized boolean isFilesystemOnly()", "diff": ["-        if (rc == null) {", "-            throw new BuildException(ONE_NESTED_MESSAGE);", "-        }", "-        //first the easy way, if child is filesystem-only, return true:", "-        if (rc.isFilesystemOnly()) {", "-            return true;", "-        }", "-        /* now check each Resource in case the child only", "-           lets through files from any children IT may have: */", "-        for (Iterator i = getCollection().iterator(); i.hasNext();) {", "-            if (!(i.next() instanceof FileResource)) {", "-                return false;", "-            }", "-        }", "-        return true;", "+        return w.isFilesystemOnly();"]}]}