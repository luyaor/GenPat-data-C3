{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c46d98e1ca11632b436021f6dd8f3843", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cfc9aac01eac0305d4beaf5e51f9e33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "fae798e81a62a4aee31a0d2b5d0957d22bb9fa13", "commitAfterChange": "95ea95ce56b27a68660a04bcfa8abde2add0dcf3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void transform() throws BuildException", "signatureAfterChange": "     public void transform() throws BuildException", "diff": ["-", "-        XSLTProcess xsltTask = new XSLTProcess();", "-        xsltTask.bindToOwner(task);", "-        for (Iterator i = params.iterator(); i.hasNext();) {", "-            XSLTProcess.Param param = (XSLTProcess.Param) i.next();", "-            XSLTProcess.Param newParam = xsltTask.createParam();", "-            newParam.setProject(task.getProject());", "-            newParam.setName(param.getName());", "-            newParam.setExpression(param.getExpression());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e9fd861e904bb01dfec110d0abd87e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "commitAfterChange": "ff41336fc19f549bc995898f4543da6d7e9d9bf9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private static Vector addVMSLogicals(Vector environment, BufferedReader in)         throws IOException", "signatureAfterChange": "     private static Map getVMSLogicals(BufferedReader in)         throws IOException", "diff": ["-    private static Vector addVMSLogicals(Vector environment, BufferedReader in)", "+    private static Map getVMSLogicals(BufferedReader in)", "-        for (Iterator i = logicals.keySet().iterator(); i.hasNext();) {", "-            String logical = (String) i.next();", "-            environment.add(logical + \"=\" + logicals.get(logical));", "-        }", "-        return environment;", "+        return logicals;"]}]}