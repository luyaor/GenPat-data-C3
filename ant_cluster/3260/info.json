{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86bdbd60fb46e9e1bfb76f5aa31d7df5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14a900be0b81518e2edf1dbb4885522b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "435e9dc9b6090394172bf029f106b42b2db55a1d", "commitAfterChange": "a9cc5fd794d793374e83ef922a0d32b3a9d5afdb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected Main(String[] args) throws BuildException", "signatureAfterChange": "      protected Main(String[] args) throws BuildException", "diff": ["+        String searchForThis = null;", "+", "-                } else if (i < args.length)", "+                } else if (i < args.length-1)", "+            } else if (arg.equals(\"-find\")) {", "+                // eat up next arg if present, default to build.xml", "+                if (i < args.length-1) {", "+                    searchForThis = args[++i];", "+                } else {", "+                    searchForThis = DEFAULT_BUILD_FILENAME;", "+                }", "-        // then search for it", "-            buildFile = findBuildFile(DEFAULT_BUILD_FILENAME);", "+            // but -find then search for it", "+            if (searchForThis != null) {", "+                buildFile = findBuildFile(\".\", searchForThis);", "+            } else {", "+                buildFile = new File(DEFAULT_BUILD_FILENAME);", "+            }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9420a9663a463c941648689837c6e271", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "commitAfterChange": "b92e6b644f97b87083602a8ce4029cce01725674", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static String[] tokenizePathAsArray(String path)", "signatureAfterChange": "     private static String[] tokenizePathAsArray(String path)", "diff": ["+        String root = null;", "+        if (FileUtils.isAbsolutePath(path)) {", "+            String[] s = FILE_UTILS.dissect(path);", "+            root = s[0];", "+            path = s[1];", "+        }", "-        String[] l = new String[count];", "-        count = 0;", "+        String[] l = new String[count + ((root == null) ? 0 : 1)];", "+", "+        if (root != null) {", "+            l[0] = root;", "+            count = 1;", "+        } else {", "+            count = 0;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a80b2bb79d477f31c00777273bc87e3c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "dad211c19fbf676be2462650e380439c0cae4982", "commitAfterChange": "91ee1ced95e8b60187ccaaa4f032015605c26e07", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void run(String[] args)             throws LaunchException, MalformedURLException", "signatureAfterChange": "     private int run(String[] args)             throws LaunchException, MalformedURLException", "diff": ["-    private void run(String[] args)", "+    private int run(String[] args)", "+        String mainClassname = MAIN_CLASS;", "+            } else if (args[i].equals(\"-main\")) {", "+                if (i == args.length - 1) {", "+                    throw new LaunchException(\"The -main argument must \"", "+                            + \"be followed by a library location\");", "+                }", "+                mainClassname = args[++i];", "+        int exitCode=0;", "-            mainClass = loader.loadClass(MAIN_CLASS);", "+            mainClass = loader.loadClass(mainClassname);", "-            System.out.println(", "-                \"Incompatible version of org.apache.tools.ant detected\");", "+            System.err.println(", "+                \"Incompatible version of \"+mainClassname+\" detected\");", "-            System.out.println(", "+            System.err.println(", "+            exitCode=-1;", "-            t.printStackTrace();", "+            t.printStackTrace(System.err);", "+            exitCode=-1;", "+        return exitCode;", "+        "]}]}