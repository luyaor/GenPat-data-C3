{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db6ea73d926aa18113f37504c8175e72", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736cb9ff8dc0e02d9118affa5ce7c937", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "532f474417f8c3274f3260cdcbd367c5e89eab0c", "commitAfterChange": "bab6532e4101808a8aad01dda7f3cdafefecca26", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            File file = new File(antFile);", "-            if (!file.isAbsolute()) {", "-                antFile = (new File(dir, antFile)).getAbsolutePath();", "-                file = (new File(antFile)) ;", "-                if( ! file.isFile() ) {", "-                  throw new BuildException(\"Build file \" + file + \" not found.\");", "-                }", "-            }", "+            File file = FileUtils.newFileUtils().resolveFile(dir, antFile);", "+            antFile = file.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b111889d43d973815345a9b351f2f618", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "271e0fe6fc223253e2c24c0f0f0c4fc4d9b58410", "commitAfterChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "          protected static final File createTmpFile()", "signatureAfterChange": "      protected final File createTmpFile()", "diff": ["-    ", "-    protected static final File createTmpFile(){", "-        // must be compatible with JDK 1.1 !!!!", "-        final long rand = (new Random(System.currentTimeMillis())).nextLong();", "-        File file = new File(\"metamata\" + rand + \".tmp\");", "-        return file;", "+", "+    protected final File createTmpFile() {", "+        return FileUtils.newFileUtils().createTempFile(\"metamata\", \".tmp\", getProject().getBaseDir());"]}]}