{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bc8198e51765c8237267a698b93ab80", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bec00209ed17ac416d897a671147b9c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java", "commitBeforeChange": "98dab91716a8b04de88022107ddf740215154c71", "commitAfterChange": "df3ce6106dd8870ddbbb29b89426526409c97556", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          protected void execP4Command(String command, P4OutputHandler handler) throws BuildException", "signatureAfterChange": "     protected void execP4Command(String command, P4Handler handler) throws BuildException", "diff": ["-    protected void execP4Command(String command, P4OutputHandler handler) throws BuildException {", "-        execP4Command(command, null, handler);", "-    }", "+    protected void execP4Command(String command, P4Handler handler) throws BuildException {", "+            Commandline commandline = new Commandline();", "+            commandline.setExecutable(\"p4\");", "+            //Check API for these - it's how CVS does it...", "+            commandline.createArgument().setValue(P4Port);", "+            commandline.createArgument().setValue(P4User);", "+            commandline.createArgument().setValue(P4Client);", "+            commandline.createArgument().setLine(command);", "+", "+\t        log(\"Execing \"+commandline.getCommandline(), Project.MSG_VERBOSE);", "+", "+            if(handler == null ) handler = new SimpleP4OutputHandler(this);", "+", "+            Execute exe = new Execute(handler, null);", "+", "+            exe.setAntRun(project);", "+            exe.setCommandline(commandline.getCommandline());", "+            try{", "+             exe.execute();", "+            }catch(IOException e) {", "+                throw new BuildException(e);", "+            } finally {", "+                try{", "+                    handler.stop();", "+                }catch(Exception e) {}", "+", "+            ", "+    \t\t", "+\t    }catch(Exception e) {", "+\t        throw new BuildException(\"Problem exec'ing P4 command: \"+e.getMessage());", "+\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc68480f34a2de0b0172544594b6323", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "a2c15cb080a27a1535b6770628ac0a19655d1885", "commitAfterChange": "0f1c5dd88eba7cb386d894c0bf8aa34c883b4051", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public String getLabel()", "signatureAfterChange": "      private Commandline buildPCLICommand()         throws TaskException", "diff": ["-     */", "-    public String getLabel()", "-    {", "-        return label;", "-    }", "+    private Commandline buildPCLICommand()", "+        final Commandline cmd = new Commandline();", "+        cmd.setExecutable( getExecutable( PCLI_EXE ) );", "+", "+        cmd.createArgument().setValue( \"lvf\" );", "+        cmd.createArgument().setValue( \"-z\" );", "+        cmd.createArgument().setValue( \"-aw\" );", "+        if( m_workspace != null )", "+            cmd.createArgument().setValue( \"-sp\" + m_workspace );", "+        cmd.createArgument().setValue( \"-pr\" + m_repository );", "+", "+        if( m_pvcsProject != null )", "+            cmd.createArgument().setValue( m_pvcsProject );", "+        }", "+", "+        if( !m_pvcsProjects.isEmpty() )", "+        {", "+            Iterator e = m_pvcsProjects.iterator();", "+            while( e.hasNext() )", "+            {", "+                final PvcsProject project = (PvcsProject)e.next();", "+                final String name = project.getName();", "+                if( name == null || ( name.trim() ).equals( \"\" ) )", "+                {", "+                    final String message = \"name is a required attribute of pvcsproject\";", "+                    throw new TaskException( message );", "+                }", "+                cmd.createArgument().setValue( name );", "+            }", "+        }", "+        return cmd;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2cb658826887409dbd013ed5d87348c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "a2c15cb080a27a1535b6770628ac0a19655d1885", "commitAfterChange": "0f1c5dd88eba7cb386d894c0bf8aa34c883b4051", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public String getLabel()", "signatureAfterChange": "      private Commandline buildPCLICommand()         throws TaskException", "diff": ["-     */", "-    public String getLabel()", "-    {", "-        return label;", "-    }", "+    private Commandline buildPCLICommand()", "+        final Commandline cmd = new Commandline();", "+        cmd.setExecutable( getExecutable( PCLI_EXE ) );", "+", "+        cmd.createArgument().setValue( \"lvf\" );", "+        cmd.createArgument().setValue( \"-z\" );", "+        cmd.createArgument().setValue( \"-aw\" );", "+        if( m_workspace != null )", "+            cmd.createArgument().setValue( \"-sp\" + m_workspace );", "+        cmd.createArgument().setValue( \"-pr\" + m_repository );", "+", "+        if( m_pvcsProject != null )", "+            cmd.createArgument().setValue( m_pvcsProject );", "+        }", "+", "+        if( !m_pvcsProjects.isEmpty() )", "+        {", "+            Iterator e = m_pvcsProjects.iterator();", "+            while( e.hasNext() )", "+            {", "+                final PvcsProject project = (PvcsProject)e.next();", "+                final String name = project.getName();", "+                if( name == null || ( name.trim() ).equals( \"\" ) )", "+                {", "+                    final String message = \"name is a required attribute of pvcsproject\";", "+                    throw new TaskException( message );", "+                }", "+                cmd.createArgument().setValue( name );", "+            }", "+        }", "+        return cmd;", "+    }"]}]}