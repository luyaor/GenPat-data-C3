{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57030adc9083c38e60a79b99e60bf944", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2625993d7c193be6a86bac6d6d1c2c66", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/junit/JUnitReportTest.java", "commitBeforeChange": "78bb53594a0d7a72c73c07eb84b60b1d42357ff7", "commitAfterChange": "d95378821a72fafbd608fc101ed6578f6b492940", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testSpecialSignsInHtmlPath() throws Exception", "signatureAfterChange": "     public void testSpecialSignsInHtmlPath() throws Exception", "diff": ["-        if (! new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/optional/junitreport/test/html# $%\ufffd&-!report/index.html\").exists()) {", "-            fail(\"No index.html present. Not generated?\");", "-        }", "+        File reportFile = new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/optional/junitreport/test/html# $%\ufffd&-!report/index.html\");", "+        // tests one the file object", "+        assertTrue(\"No index.html present. Not generated?\", reportFile.exists() );", "+        assertTrue(\"Cant read the report file.\", reportFile.canRead() );", "+        assertTrue(\"File shouldnt be empty.\", reportFile.length() > 0 );", "+        // conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report", "+        URL reportUrl = new URL( FileUtils.getFileUtils().toURI(reportFile.getAbsolutePath()) );", "+        InputStream reportStream = reportUrl.openStream();", "+        assertTrue(\"This shouldnt be an empty stream.\", reportStream.available() > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450ab0d8e0e378832f05dc9e86600cd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/junit/JUnitReportTest.java", "commitBeforeChange": "78bb53594a0d7a72c73c07eb84b60b1d42357ff7", "commitAfterChange": "d95378821a72fafbd608fc101ed6578f6b492940", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testSpecialSignsInSrcPath() throws Exception", "signatureAfterChange": "     public void testSpecialSignsInSrcPath() throws Exception", "diff": ["-        if (! new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html\").exists()) {", "-            fail(\"No index.html present. Not generated?\");", "-        }", "+        File reportFile = new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/optional/junitreport/test/html/index.html\");", "+        // tests one the file object", "+        assertTrue(\"No index.html present. Not generated?\", reportFile.exists() );", "+        assertTrue(\"Cant read the report file.\", reportFile.canRead() );", "+        assertTrue(\"File shouldnt be empty.\", reportFile.length() > 0 );", "+        // conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report", "+        URL reportUrl = new URL( FileUtils.getFileUtils().toURI(reportFile.getAbsolutePath()) );", "+        InputStream reportStream = reportUrl.openStream();", "+        assertTrue(\"This shouldnt be an empty stream.\", reportStream.available() > 0);"]}]}