{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab75aa8a45a61caea12ea494ecece8be", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7214154c89f547f165dc143f640dadf7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/ProjectEntry.java", "commitBeforeChange": "50fb7f5643cba98640e7d4ce2b00736e9d42cbab", "commitAfterChange": "6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean isTargetCompleted( final String target )", "signatureAfterChange": "      public TargetState getTargetState( final Target target )", "diff": ["-    public boolean isTargetCompleted( final String target )", "+    public TargetState getTargetState( final Target target )", "-        return m_targetsCompleted.contains( target );", "+        TargetState state = (TargetState)m_targetState.get( target );", "+        if( state == null )", "+        {", "+            state = TargetState.NOT_STARTED;", "+        }", "+        return state;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1997ffcafa01d96cd944c65d787e928", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Execute.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private ExecMetaData buildExecMetaData( final ExecManager execManager )         throws ExecException", "signatureAfterChange": "     private ExecMetaData buildExecMetaData( final TaskContext context,                                             final ExecManager execManager )         throws ExecException", "diff": ["-    private ExecMetaData buildExecMetaData( final ExecManager execManager )", "+    private ExecMetaData buildExecMetaData( final TaskContext context,", "+                                            final ExecManager execManager )", "+        // Build the command line", "+        // Build the environment", "+        // Determine the working directory", "+        File workingDir = m_workingDirectory;", "+        if( workingDir == null )", "+        {", "+            workingDir = context.getBaseDirectory();", "+        }", "+", "-                                 m_workingDirectory );", "+                                 workingDir );"]}]}