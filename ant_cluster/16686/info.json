{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3425f763fdeb91557fbd8d32b436c357", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d5dfe83f68b002e67b244f934b2a68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "cef89916a4e6249472ae37937bdcf0efda71ad70", "commitAfterChange": "8ed3f9be41ae27a62b0b77994f073da327cb92da", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected void validate()              throws BuildException", "signatureAfterChange": "      protected void validate()              throws BuildException", "diff": ["+        if(destFile.isDirectory() ) {", "+            throw new BuildException(", "+                \"destination file is a directory\");", "+        }        ", "+        if(srcFile!=null) {", "+            if(!srcFile.exists() ) {", "+                throw new BuildException(", "+                    \"source file does not exist\");", "+            }", "+            if(srcFile.isDirectory() ) {", "+                throw new BuildException(", "+                    \"source file is a directory\");", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0f144ce554e73417c211020dbc56ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "6a2d05b7a8541f09b4ac41d92d54ce3cc80e2036", "commitAfterChange": "55811ba73b5aed3169e1d003a069a4f83f161d1d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Javac()", "signatureAfterChange": "     public Javac()", "diff": ["-        if (JavaEnvUtils.getJavaVersion() != JavaEnvUtils.JAVA_1_1 &&", "-            JavaEnvUtils.getJavaVersion() != JavaEnvUtils.JAVA_1_2) {", "-            facade = new FacadeTaskHelper(\"modern\");", "+        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "+            facade = new FacadeTaskHelper(\"javac1.1\");", "+        } else if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)) {", "+            facade = new FacadeTaskHelper(\"javac1.2\");", "+        } else if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)) {", "+            facade = new FacadeTaskHelper(\"javac1.3\");", "+        } else if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_4)) {", "+            facade = new FacadeTaskHelper(\"javac1.4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1e9b1bdcc6185b7b3302e8b1257f89a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "e2ec6a3988643fe6f3c8fabd5b8656e4209eaa1d", "commitAfterChange": "42c6021a9e42f49f50a3f4a170590d15a9b8c3db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultTaskContext( final TaskContext parent,                                final ServiceManager serviceManager,                                final Logger logger )         throws TaskException", "signatureAfterChange": "     public DefaultTaskContext( final ServiceManager serviceManager,                                final Logger logger,                                final PropertyStore store )         throws TaskException", "diff": ["-    public DefaultTaskContext( final TaskContext parent,", "-                               final ServiceManager serviceManager,", "-                               final Logger logger )", "+    public DefaultTaskContext( final ServiceManager serviceManager,", "+                               final Logger logger,", "+                               final PropertyStore store )", "-        m_parent = parent;", "+        m_store = store;", "+", "+        if( null == m_serviceManager )", "+        {", "+            throw new NullPointerException( \"serviceManager\" );", "+        }", "+        if( null == m_logger )", "+        {", "+            throw new NullPointerException( \"logger\" );", "+        }", "+        if( null == m_store )", "+        {", "+            throw new NullPointerException( \"store\" );", "+        }"]}]}