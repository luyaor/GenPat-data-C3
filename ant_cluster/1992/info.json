{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1afae198088577ebbd287b64a6bb2473", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1040e225a735797b1b3b9ae9aaa8f8a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "fd287b3a808daed93021646efdcf52a31957e35a", "commitAfterChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(String[] args)", "signatureAfterChange": "      public static void main(String[] args)", "diff": ["-            } else if (arg.equals(\"-buildfile\") || arg.equals(\"-file\") || arg.equals(\"-f\")) {", "+            } else if (arg.equals(\"-logfile\") || arg.equals(\"-l\") || arg.equals(\"l\")) {", "+                try {", "+                    File logFile = new File(args[i+1]);", "+                    i++;", "+                    out = new PrintStream(new FileOutputStream(logFile));", "+                    System.setOut(out);", "+                    System.setErr(out);", "+                } catch (IOException ioe) {", "+                    String msg = \"Cannot write on the specified log file. \" +", "+                        \"Make sure the path exists and you have write permissions.\";", "+                    System.out.println(msg);", "+                    return;", "+                } catch (ArrayIndexOutOfBoundsException aioobe) {", "+                    String msg = \"You must specify a log file when \" +", "+                        \"using the -log argument\";", "+                    System.out.println(msg);", "+                    return;", "+                }", "+            } else if (arg.equals(\"-buildfile\") || arg.equals(\"-file\") || arg.equals(\"-f\") || arg.equals(\"f\")) {", "+        ", "+        return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3bb085bafca2e372fcc7eeb3a2cb06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "d3bb8dc2f627e27c2ae1fe8d72955c56d77c2c86", "commitAfterChange": "0dfb55090cb515fb26dc0fef5adf87ac76f398f6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                 * look like much, passing 'this' in the above method allows", "-                 * the parser to call us back when it finds interesting things.", "+                 * look like much, we use a SAXParser and an inner class to", "+                 * get hold of all the classfile names for the descriptor.", "-                /* Now that we've parsed the deployment descriptor we have the", "-                 * bean name, so we can figure out all the .xml filenames and", "-                 * add them to the set of files for the jar.", "+                /* Now try to locate all of the deployment descriptors for the", "+                 * jar, and if they exist, add them to the list of files.", "-                // Lastly for the jarfiles", "+                // Lastly create File object for the Jar files. If we are using", "+                // a flat destination dir, then we need to redefine baseName!", "+                if (this.flatdestdir) {", "+                    int startName = baseName.lastIndexOf(File.separator);", "+                    int endName   = baseName.length();", "+                    baseName = baseName.substring(startName, endName);", "+                }", "+"]}]}