{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00b9d1074c031d72c52849b46a9c8c12", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38fe32e2ea42fd2b57c5e6a575b2c066", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2d15e8d8b3af5f74bf06989fe1c5cce6e07e3471", "commitAfterChange": "257dadeaf0fb8588b80fa71b24ee3aca38ea19b7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testFromURI()", "signatureAfterChange": "     public void testFromURI()", "diff": ["-            assertEqualsIgnoreDriveCase(\"SYS:\\\\foo\", fu.fromURI(\"file:///sys:/foo\"));", "+            assertEqualsIgnoreDriveCase(\"SYS:\\\\foo\", FILE_UTILS.fromURI(\"file:///sys:/foo\"));", "-            assertEqualsIgnoreDriveCase(\"C:\\\\foo\", fu.fromURI(\"file:///c:/foo\"));", "+            assertEqualsIgnoreDriveCase(\"C:\\\\foo\", FILE_UTILS.fromURI(\"file:///c:/foo\"));", "-        assertEqualsIgnoreDriveCase(localize(\"/foo\"), fu.fromURI(\"file:///foo\"));", "+        assertEqualsIgnoreDriveCase(localize(\"/foo\"), FILE_UTILS.fromURI(\"file:///foo\"));", "-                     fu.fromURI(\"file:./foo\"));", "-        assertEqualsIgnoreDriveCase(localize(\"/foo bar\"), fu.fromURI(\"file:///foo%20bar\"));", "-        assertEqualsIgnoreDriveCase(localize(\"/foo#bar\"), fu.fromURI(\"file:///foo%23bar\"));", "+                     FILE_UTILS.fromURI(\"file:./foo\"));", "+        assertEqualsIgnoreDriveCase(localize(\"/foo bar\"), FILE_UTILS.fromURI(\"file:///foo%20bar\"));", "+        assertEqualsIgnoreDriveCase(localize(\"/foo#bar\"), FILE_UTILS.fromURI(\"file:///foo%23bar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6da30a58e04124041cb955d09bb83b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2d15e8d8b3af5f74bf06989fe1c5cce6e07e3471", "commitAfterChange": "257dadeaf0fb8588b80fa71b24ee3aca38ea19b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void testContentEquals() throws IOException", "signatureAfterChange": "     public void testContentEquals() throws IOException", "diff": ["-        assertTrue(\"Non existing files\", fu.contentEquals(new File(System.getProperty(\"root\"), \"foo\"),", "+        assertTrue(\"Non existing files\", FILE_UTILS.contentEquals(new File(System.getProperty(\"root\"), \"foo\"),", "-                   !fu.contentEquals(new File(System.getProperty(\"root\"), \"foo\"), new File(System.getProperty(\"root\"), \"build.xml\")));", "+                   !FILE_UTILS.contentEquals(new File(System.getProperty(\"root\"), \"foo\"), new File(System.getProperty(\"root\"), \"build.xml\")));", "-                   !fu.contentEquals(new File(System.getProperty(\"root\"), \"src\"), new File(System.getProperty(\"root\"), \"src\")));", "+                   !FILE_UTILS.contentEquals(new File(System.getProperty(\"root\"), \"src\"), new File(System.getProperty(\"root\"), \"src\")));", "-                   fu.contentEquals(new File(System.getProperty(\"root\"), \"build.xml\"),", "+                   FILE_UTILS.contentEquals(new File(System.getProperty(\"root\"), \"build.xml\"),", "-                   !fu.contentEquals(new File(System.getProperty(\"root\"), \"build.xml\"),", "+                   !FILE_UTILS.contentEquals(new File(System.getProperty(\"root\"), \"build.xml\"),"]}]}