{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64b5a268ebf0b099452930fbddb3b465", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0474c4c6fe4fbd398917147bf4f422f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/bytecode/ClassFile.java", "commitBeforeChange": "de92c9e60ee18cfaa42022505d56e5de4a5240bb", "commitAfterChange": "6a659a85b774c74ac519a7916aac9451ecd034cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ClassFile(InputStream is) throws IOException", "signatureAfterChange": "     public ClassFile(InputStream is) throws IOException", "diff": ["+     */", "-        int this_class = dis.readShort();", "-        fullname = ((ClassCPInfo) constantPool.getEntry(this_class)).getClassName().replace('/', '.');", "+        int thisClass = dis.readShort();", "+        fullname = ((ClassCPInfo) constantPool.getEntry(", "+                        thisClass)).getClassName().replace('/', '.');", "-            int attributes_count = dis.readUnsignedShort();", "-            for (int j = 0; j < attributes_count; j++) {", "+            int attributesCount = dis.readUnsignedShort();", "+            for (int j = 0; j < attributesCount; j++) {", "-        int method_count = dis.readShort();", "-        methods = new MethodInfo[method_count];", "-        for (int i = 0; i < method_count; i++) {", "+        int methodCount = dis.readShort();", "+        methods = new MethodInfo[methodCount];", "+        for (int i = 0; i < methodCount; i++) {", "-        int attributes_count = dis.readUnsignedShort();", "-        for (int j = 0; j < attributes_count; j++) {", "-            int attr_id = dis.readShort();", "+        int attributesCount = dis.readUnsignedShort();", "+        for (int j = 0; j < attributesCount; j++) {", "+            int attrId = dis.readShort();", "-            String attr_name = Utils.getUTF8Value(constantPool, attr_id);", "-            if (AttributeInfo.SOURCE_FILE.equals(attr_name)) {", "-                int name_index = dis.readShort();", "-                sourceFile = ((Utf8CPInfo) constantPool.getEntry(name_index)).getValue();", "+            String attrName = Utils.getUTF8Value(constantPool, attrId);", "+            if (AttributeInfo.SOURCE_FILE.equals(attrName)) {", "+                int nameIndex = dis.readShort();", "+                sourceFile = ((Utf8CPInfo) constantPool.getEntry(nameIndex)).getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3938f30195f9ceda4874925fb5e5cdde", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/bytecode/MethodInfo.java", "commitBeforeChange": "08f1fb49e458c04980a50ea10f6a6ad441923907", "commitAfterChange": "c1b263f4737e2ffcbe70fecb82b7c2ffea17e5bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void read(DataInputStream dis) throws IOException", "signatureAfterChange": "      public void read(ConstantPool constantPool, DataInputStream dis) throws IOException", "diff": ["-\t", "-\tpublic void read(DataInputStream dis) throws IOException {", "-\t\taccess_flags = dis.readShort();", "-\t\tname_index = dis.readShort();", "-\t\tdescriptor_index = dis.readShort();", "-\t\tAttributeInfoList attrlist = new AttributeInfoList(constantPool);", "-\t\tattrlist.read(dis);", "-\t\tcode = (Code)attrlist.getAttribute(AttributeInfo.CODE);", "-\t\tsynthetic = attrlist.getAttribute(AttributeInfo.SYNTHETIC) != null;", "-\t\tdeprecated = attrlist.getAttribute(AttributeInfo.DEPRECATED) != null;", "-\t\texceptions = (Exceptions)attrlist.getAttribute(AttributeInfo.EXCEPTIONS);", "-\t}", "+", "+    public void read(ConstantPool constantPool, DataInputStream dis) throws IOException {", "+        access_flags = dis.readShort();", "+", "+        int name_index = dis.readShort();", "+        name =  Utils.getUTF8Value(constantPool, name_index);", "+", "+        int descriptor_index = dis.readShort();", "+        descriptor = Utils.getUTF8Value(constantPool, descriptor_index);", "+", "+        int attributes_count = dis.readUnsignedShort();", "+        for (int i = 0; i < attributes_count; i++) {", "+            int attr_id = dis.readShort();", "+            String attr_name = Utils.getUTF8Value(constantPool, attr_id);", "+            int len = dis.readInt();", "+            if (AttributeInfo.CODE.equals(attr_name)) {", "+                readCode(constantPool, dis);", "+            } else {", "+                dis.skipBytes(len);", "+            }", "+        }", "+", "+    }"]}]}