{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c26d9832f436a0441ced6d09f482be05", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27a40d0decc4f8a7e228d1600247d02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExtensionName( final String extensionName )", "signatureAfterChange": "     public void addExtension( final ExtensionAdapter extensionAdapter )         throws TaskException", "diff": ["-     */", "-    public void setExtensionName( final String extensionName )", "-    {", "-        m_extensionName = extensionName;", "-    }", "+    public void addExtension( final ExtensionAdapter extensionAdapter )", "+        throws TaskException", "+        if( null != m_extension )", "+        {", "+            final String message = REZ.getString( \"manifest.multi-extension.error\" );", "+            throw new TaskException( message );", "+        }", "+        else", "+        {", "+            m_extension = extensionAdapter.toExtension();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff2be3092e270c7b643e2813d4de6d84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "50fb7f5643cba98640e7d4ce2b00736e9d42cbab", "commitAfterChange": "6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private URL extractURL( final File file ) throws ProjectException", "signatureAfterChange": "     private String extractURL( final File file ) throws ProjectException", "diff": ["-    private URL extractURL( final File file ) throws ProjectException", "+     */", "+    private String extractURL( final File file ) throws ProjectException", "+        if( ! file.isFile() )", "+        {", "+            final String message = REZ.getString( \"ant.no-project-file.error\" );", "+            throw new ProjectException( message );", "+        }", "+", "-            return file.toURL();", "+            return file.getCanonicalFile().toURL().toString();", "-        catch( MalformedURLException e )", "+        catch( Exception e )"]}]}