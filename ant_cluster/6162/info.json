{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "603beea934afe6460d412e4d5505cbe6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018889c96281e8534876654c42be0da2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/dotnet/Ilasm.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void executeOneFile( final String targetFile )         throws TaskException", "signatureAfterChange": "     public void executeOneFile( final String targetFile )         throws TaskException", "diff": ["-        final Commandline cmd = exe.getCommandline();", "-        cmd.setExecutable( EXE_NAME );", "-        addArgument( cmd, getDebugParameter() );", "-        addArgument( cmd, getTargetTypeParameter() );", "-        addArgument( cmd, getListingParameter() );", "-        addArgument( cmd, getOutputFileParameter() );", "-        addArgument( cmd, getResourceFileParameter() );", "-        addArgument( cmd, getVerboseParameter() );", "-        addArgument( cmd, getKeyfileParameter() );", "-        addArgument( cmd, getExtraOptionsParameter() );", "-        addArgument( cmd, targetFile );", "+        exe.setExecutable( EXE_NAME );", "+        addArgument( exe, getDebugParameter() );", "+        addArgument( exe, getTargetTypeParameter() );", "+        addArgument( exe, getListingParameter() );", "+        addArgument( exe, getOutputFileParameter() );", "+        addArgument( exe, getResourceFileParameter() );", "+        addArgument( exe, getVerboseParameter() );", "+        addArgument( exe, getKeyfileParameter() );", "+        addArgument( exe, getExtraOptionsParameter() );", "+        addArgument( exe, targetFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d253e9f88864093110466e31c6846bb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/java/ExecuteJava.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int executeForked( final TaskContext context )         throws TaskException", "signatureAfterChange": "     public int executeForked( final TaskContext context )         throws TaskException", "diff": ["-        final Commandline command = exe.getCommandline();", "-            command.setExecutable( m_jvm );", "+            exe.setExecutable( m_jvm );", "-            command.setExecutable( getJavaExecutableName() );", "+            exe.setExecutable( getJavaExecutableName() );", "-        command.addArguments( m_vmArgs );", "+        exe.addArguments( m_vmArgs );", "-            command.addArgument( \"-Xmx\" + m_maxMemory );", "+            exe.addArgument( \"-Xmx\" + m_maxMemory );", "-        command.addArguments( props );", "+        exe.addArguments( props );", "-            command.addArgument( \"-classpath\" );", "-            command.addArgument( PathUtil.formatPath( classpath ) );", "+            exe.addArgument( \"-classpath\" );", "+            exe.addArgument( PathUtil.formatPath( classpath ) );", "-            command.addArgument( \"-jar\" );", "-            command.addArgument( m_jar );", "+            exe.addArgument( \"-jar\" );", "+            exe.addArgument( m_jar );", "-            command.addArgument( m_className );", "+            exe.addArgument( m_className );", "-        command.addArguments( m_args );", "+        exe.addArguments( m_args );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87644e6cc0044e75124da740ee3fe91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "a6c07f5d48d70ab32702b755c352ac8e86678365", "commitAfterChange": "1b72f9a64919a7aa775038eaf63d8c4c96109ee3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static String[] getProcEnvCommand()", "diff": ["-            String[] cmd = {\"cmd\", \"/c\", \"set\" };", "-            return cmd;", "+            return new String[] {\"cmd\", \"/c\", \"set\" };", "-            if (!Os.isFamily(\"win9x\")) {", "-                // Windows XP/2000/NT", "-                String[] cmd = {\"cmd\", \"/c\", \"set\" };", "-                return cmd;", "-            } else {", "+            if (Os.isFamily(\"win9x\")) {", "-                String[] cmd = {\"command.com\", \"/c\", \"set\" };", "-                return cmd;", "+                return new String[] {\"command.com\", \"/c\", \"set\" };", "+            } else {", "+                // Windows XP/2000/NT/2003", "+                return new String[] {\"cmd\", \"/c\", \"set\" };", "-            String[] cmd = {\"env\"};", "-            return cmd;", "+            return new String[] {\"env\"};", "-            String[] cmd = {\"show\", \"logical\"};", "-            return cmd;", "+            return new String[] {\"show\", \"logical\"};", "-            String[] cmd = null;", "-            return cmd;", "+            return null;"]}]}