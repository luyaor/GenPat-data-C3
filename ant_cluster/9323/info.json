{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a97a6a3162002aa413332087c5d8e196", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b4cef5b2e789de4cd1ab82331d33d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void writeRun() throws IOException", "signatureAfterChange": "      private void writeRun() throws IOException", "diff": ["-        if (last < allowableBlockSize) {", "-            inUse[currentChar] = true;", "-            for (int i = 0; i < runLength; i++) {", "-                mCrc.updateCRC((char) currentChar);", "-            }", "+        final int last = this.last;", "+", "+        if (last < this.allowableBlockSize) {", "+            final int currentChar = this.currentChar;", "+            final Data data = this.data;", "+            data.inUse[currentChar] = true;", "+            final byte ch = (byte) currentChar;", "+", "+            int runLength = this.runLength;", "+            this.crc.updateCRC(currentChar, runLength);", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                data.block[last + 2] = ch;", "+                this.last = last + 1;", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                data.block[last + 2] = ch;", "+                data.block[last + 3] = ch;", "+                this.last = last + 2;", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                {", "+                    final byte[] block = data.block;", "+                    block[last + 2] = ch;", "+                    block[last + 3] = ch;", "+                    block[last + 4] = ch;", "+                    this.last = last + 3;", "+                }", "+", "-                inUse[runLength - 4] = true;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) (runLength - 4);", "+                {", "+                    runLength -= 4;", "+                    data.inUse[runLength] = true;", "+                    final byte[] block = data.block;", "+                    block[last + 2] = ch;", "+                    block[last + 3] = ch;", "+                    block[last + 4] = ch;", "+                    block[last + 5] = ch;", "+                    block[last + 6] = (byte) runLength;", "+                    this.last = last + 5;", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0033385926b33b474d8d4b82c2f184", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void writeRun() throws IOException", "signatureAfterChange": "      private void writeRun() throws IOException", "diff": ["-        final int last = this.last;", "+        final int lastShadow = this.last;", "-        if (last < this.allowableBlockSize) {", "-            final int currentChar = this.currentChar;", "-            final Data data = this.data;", "-            data.inUse[currentChar] = true;", "-            final byte ch = (byte) currentChar;", "+        if (lastShadow < this.allowableBlockSize) {", "+            final int currentCharShadow = this.currentChar;", "+            final Data dataShadow = this.data;", "+            dataShadow.inUse[currentCharShadow] = true;", "+            final byte ch = (byte) currentCharShadow;", "-            int runLength = this.runLength;", "-            this.crc.updateCRC(currentChar, runLength);", "+            int runLengthShadow = this.runLength;", "+            this.crc.updateCRC(currentCharShadow, runLengthShadow);", "-            switch (runLength) {", "+            switch (runLengthShadow) {", "-                data.block[last + 2] = ch;", "-                this.last = last + 1;", "+                dataShadow.block[lastShadow + 2] = ch;", "+                this.last = lastShadow + 1;", "-                data.block[last + 2] = ch;", "-                data.block[last + 3] = ch;", "-                this.last = last + 2;", "+                dataShadow.block[lastShadow + 2] = ch;", "+                dataShadow.block[lastShadow + 3] = ch;", "+                this.last = lastShadow + 2;", "-                    final byte[] block = data.block;", "-                    block[last + 2] = ch;", "-                    block[last + 3] = ch;", "-                    block[last + 4] = ch;", "-                    this.last = last + 3;", "+                    final byte[] block = dataShadow.block;", "+                    block[lastShadow + 2] = ch;", "+                    block[lastShadow + 3] = ch;", "+                    block[lastShadow + 4] = ch;", "+                    this.last = lastShadow + 3;", "-                    runLength -= 4;", "-                    data.inUse[runLength] = true;", "-                    final byte[] block = data.block;", "-                    block[last + 2] = ch;", "-                    block[last + 3] = ch;", "-                    block[last + 4] = ch;", "-                    block[last + 5] = ch;", "-                    block[last + 6] = (byte) runLength;", "-                    this.last = last + 5;", "+                    runLengthShadow -= 4;", "+                    dataShadow.inUse[runLengthShadow] = true;", "+                    final byte[] block = dataShadow.block;", "+                    block[lastShadow + 2] = ch;", "+                    block[lastShadow + 3] = ch;", "+                    block[lastShadow + 4] = ch;", "+                    block[lastShadow + 5] = ch;", "+                    block[lastShadow + 6] = (byte) runLengthShadow;", "+                    this.last = lastShadow + 5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b336a65659702724b6a73ad32836c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "      private void writeRun()         throws IOException", "signatureAfterChange": "      private void writeRun()         throws IOException", "diff": ["-        if( last < allowableBlockSize )", "+        if( m_last < m_allowableBlockSize )", "-            m_inUse[ currentChar ] = true;", "-            for( int i = 0; i < runLength; i++ )", "+            m_inUse[ m_currentChar ] = true;", "+            for( int i = 0; i < m_runLength; i++ )", "-                m_crc.updateCRC( (char)currentChar );", "+                m_crc.updateCRC( (char)m_currentChar );", "-            switch( runLength )", "+            switch( m_runLength )", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "-                    m_inUse[ runLength - 4 ] = true;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)currentChar;", "-                    last++;", "-                    block[ last + 1 ] = (char)( runLength - 4 );", "+                    m_inUse[ m_runLength - 4 ] = true;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)m_currentChar;", "+                    m_last++;", "+                    m_block[ m_last + 1 ] = (char)( m_runLength - 4 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f062c4c395e57867c25114ff233bd0b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void writeRun() throws IOException", "signatureAfterChange": "      private void writeRun() throws IOException", "diff": ["-        final int lastShadow = this.last;", "-", "-        if (lastShadow < this.allowableBlockSize) {", "-            final int currentCharShadow = this.currentChar;", "-            final Data dataShadow = this.data;", "-            dataShadow.inUse[currentCharShadow] = true;", "-            final byte ch = (byte) currentCharShadow;", "-", "-            int runLengthShadow = this.runLength;", "-            this.crc.updateCRC(currentCharShadow, runLengthShadow);", "-", "-            switch (runLengthShadow) {", "+        if (last < allowableBlockSize) {", "+            inUse[currentChar] = true;", "+            for (int i = 0; i < runLength; i++) {", "+                mCrc.updateCRC((char) currentChar);", "+            }", "+            switch (runLength) {", "-                dataShadow.block[lastShadow + 2] = ch;", "-                this.last = lastShadow + 1;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "-", "-                dataShadow.block[lastShadow + 2] = ch;", "-                dataShadow.block[lastShadow + 3] = ch;", "-                this.last = lastShadow + 2;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "-", "-                {", "-                    final byte[] block = dataShadow.block;", "-                    block[lastShadow + 2] = ch;", "-                    block[lastShadow + 3] = ch;", "-                    block[lastShadow + 4] = ch;", "-                    this.last = lastShadow + 3;", "-                }", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "-", "-                {", "-                    runLengthShadow -= 4;", "-                    dataShadow.inUse[runLengthShadow] = true;", "-                    final byte[] block = dataShadow.block;", "-                    block[lastShadow + 2] = ch;", "-                    block[lastShadow + 3] = ch;", "-                    block[lastShadow + 4] = ch;", "-                    block[lastShadow + 5] = ch;", "-                    block[lastShadow + 6] = (byte) runLengthShadow;", "-                    this.last = lastShadow + 5;", "-                }", "+                inUse[runLength - 4] = true;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) currentChar;", "+                last++;", "+                block[last + 1] = (char) (runLength - 4);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a608a0034edd49b3f9027407947c6c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "228fb9839c21a0a853598e114faca72c8e9340e7", "commitAfterChange": "9922008d657c72235c402343fd88847b044014ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void writeRun() throws IOException", "signatureAfterChange": "      private void writeRun() throws IOException", "diff": ["-        if (last < allowableBlockSize) {", "-            inUse[currentChar] = true;", "-            for (int i = 0; i < runLength; i++) {", "-                mCrc.updateCRC((char) currentChar);", "-            }", "-            switch (runLength) {", "+        final int lastShadow = this.last;", "+", "+        if (lastShadow < this.allowableBlockSize) {", "+            final int currentCharShadow = this.currentChar;", "+            final Data dataShadow = this.data;", "+            dataShadow.inUse[currentCharShadow] = true;", "+            final byte ch = (byte) currentCharShadow;", "+", "+            int runLengthShadow = this.runLength;", "+            this.crc.updateCRC(currentCharShadow, runLengthShadow);", "+", "+            switch (runLengthShadow) {", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                dataShadow.block[lastShadow + 2] = ch;", "+                this.last = lastShadow + 1;", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                dataShadow.block[lastShadow + 2] = ch;", "+                dataShadow.block[lastShadow + 3] = ch;", "+                this.last = lastShadow + 2;", "-            case 3:", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+", "+            case 3: {", "+                final byte[] block = dataShadow.block;", "+                block[lastShadow + 2] = ch;", "+                block[lastShadow + 3] = ch;", "+                block[lastShadow + 4] = ch;", "+                this.last = lastShadow + 3;", "+            }", "-            default:", "-                inUse[runLength - 4] = true;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) (runLength - 4);", "+", "+            default: {", "+                runLengthShadow -= 4;", "+                dataShadow.inUse[runLengthShadow] = true;", "+                final byte[] block = dataShadow.block;", "+                block[lastShadow + 2] = ch;", "+                block[lastShadow + 3] = ch;", "+                block[lastShadow + 4] = ch;", "+                block[lastShadow + 5] = ch;", "+                block[lastShadow + 6] = (byte) runLengthShadow;", "+                this.last = lastShadow + 5;", "+            }", "+"]}]}