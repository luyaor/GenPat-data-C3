{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4e04125391b0d37011d44b4c9cdbc15", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84dd80ed6e7c819e26fb265c183a3d93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": "     public Task getThreadTask(Thread thread)", "signatureAfterChange": "     public Task getThreadTask(final Thread thread)", "diff": ["-    public Task getThreadTask(Thread thread) {", "-        synchronized(threadTasks) {", "-            Task task = (Task) threadTasks.get(thread);", "+    public Task getThreadTask(final Thread thread) {", "+        synchronized (threadTasks) {", "+            Task task = threadTasks.get(thread);", "-                    task = (Task) threadGroupTasks.get(group);", "+                    task = threadGroupTasks.get(group);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aeedd014048bf48b22c87932a333a6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Sort.java", "commitBeforeChange": "a4c55d35b99bdf699a35eefb78a1833c348c0a46", "commitAfterChange": "4baba959d28fc3516e8aa944bce79ca9608095a3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["-            if (comp.v != null && comp.v.size() > 0) {", "-                for (Iterator i = comp.v.iterator(); i.hasNext();) {", "-                    Object o = i.next();", "-                    if (o instanceof DataType) {", "-                        stk.push(o);", "-                        invokeCircularReferenceCheck((DataType) o, stk, p);", "-                    }", "-                }", "-            }", "+            DataType.invokeCircularReferenceCheck(comp, stk, p);"]}]}