{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2b0f38c7789032fe3da1204fb629766", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131f1d04e5a115ce007e27041eecb640", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testFilterChain() throws IOException", "signatureAfterChange": "      @Test     public void testFilterChain() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testFilterChain\");", "-        File tmp  = new File(getOutputDir(), \"copy.filterchain.tmp\");", "-        File check  = new File(getProjectDir(), \"expected/copy.filterset.filtered\");", "+        buildRule.executeTarget(\"testFilterChain\");", "+        File tmp  = new File(buildRule.getProject().getProperty(\"output\"), \"copy.filterchain.tmp\");", "+        File check  = new File(buildRule.getProject().getBaseDir(), \"expected/copy.filterset.filtered\");", "-        assertTrue(FILE_UTILS.contentEquals(tmp, check));", "+        assertEquals(FileUtilities.getFileContents(tmp), FileUtilities.getFileContents(check));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63eab31a93123d503bc6fbb3bf7c2bb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MoveTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testFilterChain() throws IOException", "signatureAfterChange": "      @Test     public void testFilterChain() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testFilterChain\");", "-        File tmp  = new File(getOutputDir(), \"move.filterchain.tmp\");", "-        File check  = new File(getProjectDir(), \"expected/copy.filterset.filtered\");", "+        buildRule.executeTarget(\"testFilterChain\");", "+        File tmp  = new File(buildRule.getProject().getProperty(\"output\"), \"move.filterchain.tmp\");", "+        File check  = new File(buildRule.getProject().getBaseDir(), \"expected/copy.filterset.filtered\");", "-        assertTrue(FILE_UTILS.contentEquals(tmp, check));", "+        assertEquals(FileUtilities.getFileContents(check), FileUtilities.getFileContents(tmp));"]}]}