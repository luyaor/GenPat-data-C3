{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c302037624a200ff8527fdca265d6cd0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cf3dac80a048a6100a12d96c0a2e90a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "1a702111eaa72f11467bcfb976ceb2910c1c913a", "commitAfterChange": "3396e7c32132e8bff2d50196131cf641ed8d1fb2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void writePropertyFile(Properties properties,                                    File propertyfile,                                    String comment)         throws BuildException", "signatureAfterChange": "      private void writePropertyFile(Properties properties,                                    File propertyfile,                                    String comment)         throws BuildException", "diff": ["-        BufferedOutputStream bos = null;", "+        FileOutputStream fos = null;", "-            bos = new BufferedOutputStream(new FileOutputStream(propertyfile));", "+            fos = new FileOutputStream(propertyfile);", "+            properties.store(fos, comment);", "-            // Properties.store is not available in JDK 1.1", "-            Method m =", "-                Properties.class.getMethod(\"store\",", "-                                           new Class[] {", "-                                               OutputStream.class,", "-                                               String.class});", "-            m.invoke(properties, new Object[] {bos, comment});", "-", "-        } catch (NoSuchMethodException nsme) {", "-            properties.save(bos, comment);", "-        } catch (InvocationTargetException ite) {", "-            Throwable t = ite.getTargetException();", "-            throw new BuildException(t, location);", "-        } catch (IllegalAccessException iae) {", "-            // impossible", "-            throw new BuildException(iae, location);", "-            throw new BuildException(ioe, location);", "+            throw new BuildException(ioe, getLocation());", "-            if (bos != null) {", "+            if (fos != null) {", "-                    bos.close();", "+                    fos.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7878ae4dfc59bd6d887673e89871a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "88c40c7306a8920dc569e3e3111ad42737cb0ecd", "commitAfterChange": "33693452f183ef18791a93941930b17bb8e1568f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void writeFile() throws BuildException", "signatureAfterChange": "      private void writeFile() throws BuildException", "diff": ["-", "-            // Properties.store is not available in JDK 1.1", "-            Method m =", "-                Properties.class.getMethod(\"store\",", "-                                           new Class[] {", "-                                               OutputStream.class,", "-                                               String.class});", "-            m.invoke(properties, new Object[] {bos, comment});", "-", "-        } catch (NoSuchMethodException nsme) {", "-            properties.save(bos, comment);", "-        } catch (InvocationTargetException ite) {", "-            Throwable t = ite.getTargetException();", "-            throw new BuildException(t, getLocation());", "-        } catch (IllegalAccessException iae) {", "-            // impossible", "-            throw new BuildException(iae, getLocation());", "+            properties.store(bos, comment);", "-    }"]}]}