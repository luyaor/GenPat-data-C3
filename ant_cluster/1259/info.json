{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ca04050fc2c0a84f70060879cfc2895", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080016f9b032369534405d287043806a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "b73026d50f2f0f71e50d1616649ff97fe9a1d200", "commitAfterChange": "fa9401b00e45852c2692e01439c9de8b4592a992", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      private void qSort3( int loSt, int hiSt, int dSt )", "signatureAfterChange": "      private void qSort3( int loSt, int hiSt, int dSt )", "diff": ["-            unLo = ltLo = lo;", "-            unHi = gtHi = hi;", "+            unLo = lo;", "+            ltLo = lo;", "+            unHi = hi;", "+            gtHi = hi;", "-                    n = ( (int)m_block[ m_zptr[ unLo ] + d + 1 ] ) - med;", "+                    n = m_block[ m_zptr[ unLo ] + d + 1 ] - med;", "-                    n = ( (int)m_block[ m_zptr[ unHi ] + d + 1 ] ) - med;", "+                    n = m_block[ m_zptr[ unHi ] + d + 1 ] - med;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5807cde5e731d7562f85433761372a0d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/Simple8BitZipEncoding.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["+        @Override", "-            return \"0x\" + Integer.toHexString(0xffff & (int) unicode)", "-                + \"->0x\" + Integer.toHexString(0xff & (int) code);", "+            return \"0x\" + Integer.toHexString(0xffff & unicode)", "+                + \"->0x\" + Integer.toHexString(0xff & code);", "+        }"]}]}