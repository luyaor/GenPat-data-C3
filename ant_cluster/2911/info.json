{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7ad8b3de265467586cf7e76fb9b6ca8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8181f94c9408aea792f5c41aa34a56dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "677491b9276e57da76218487af18cfda70aa28af", "commitAfterChange": "a05d1f12196d34b23d4ab80c3598f6fb63410ac5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void finish() throws IOException", "signatureAfterChange": "     public void finish() throws IOException", "diff": ["-        cdOffset = new ZipLong(written);", "+        cdOffset = written;", "-        cdLength = new ZipLong(written - cdOffset.getValue());", "+        cdLength = written - cdOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11e24047e7f8a9069c30abf967fe345", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java", "commitBeforeChange": "32c1f6a73f867f491cfaeac14e2ca2aab167f1ec", "commitAfterChange": "8de81028e45c54b750a0024bf64eaa0ea9e369ea", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static String[] parseTestMethodNamesList(String methodNames)                                             throws IllegalArgumentException", "signatureAfterChange": "     public static String[] parseTestMethodNamesList(String methodNames)                                             throws IllegalArgumentException", "diff": ["-                        result[wordIndex++] = new String(methodNames.substring(wordStartIndex, i));", "+                        result[wordIndex++] = methodNames.substring(wordStartIndex, i);", "-                        result[wordIndex++] = new String(methodNames.substring(wordStartIndex, i));", "+                        result[wordIndex++] = methodNames.substring(wordStartIndex, i);", "-                result[wordIndex++] = new String(methodNames.substring(wordStartIndex, chars.length));", "+                result[wordIndex++] = methodNames.substring(wordStartIndex, chars.length);"]}]}