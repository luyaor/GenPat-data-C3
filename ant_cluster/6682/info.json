{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfaf248b6ec6a7078d1994fb6fa8eb39", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5c0ca2f30a8d4a0d06c769526932e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "c51cce56b802399a1712e67544a3224da62b7c49", "commitAfterChange": "36e5ac64fd1e76c49877ce8bb5596589a2c55ddf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": "         private void runTransaction(PrintStream out)             throws IOException, SQLException", "signatureAfterChange": "         private void runTransaction(PrintStream out)             throws IOException, SQLException", "diff": ["-            if (tSrcFile != null) {", "-                log(\"Executing file: \" + tSrcFile.getAbsolutePath(),", "+            if (tSrcResource != null) {", "+                log(\"Executing resource: \" + tSrcResource.toString(),", "-                Reader reader =", "-                    (encoding == null) ? new FileReader(tSrcFile)", "-                                       : new InputStreamReader(", "-                                             new FileInputStream(tSrcFile),", "-                                             encoding);", "+                InputStream is = null;", "+                Reader reader = null;", "+                    is = tSrcResource.getInputStream();", "+                    reader =", "+                        (encoding == null) ? new InputStreamReader(is)", "+                        : new InputStreamReader(is, encoding);", "-                    reader.close();", "+                    FileUtils.close(is);", "+                    FileUtils.close(reader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d5777658def92fe18572a962caa4c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "fdade0537c4628290168a365b9a14d28c3e32b72", "commitAfterChange": "9af46a2ca05b7e2da738a1688ff679445f2c1a6e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 48, "signatureBeforeChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "signatureAfterChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "diff": ["-            createClassLoader();", "+            if (splitJunit) {", "+                classLoader = (AntClassLoader) delegate.getClass().getClassLoader();", "+            } else {", "+                createClassLoader();", "+            }", "-            runner = new JUnitTestRunner(test, test.getHaltonerror(),", "+            runner = delegate.newJUnitTestRunner(test, test.getHaltonerror(),", "-                SummaryJUnitResultFormatter f =", "-                    new SummaryJUnitResultFormatter();", "+                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "+                    delegate.newSummaryJUnitResultFormatter();"]}]}