{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca7d8d057824932e2297c97955afaa98", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c751c77d5c0d0ff84252f8ecd7e3fa3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void setAttribute( final ObjectConfigurer configurer,                                final Object object,                                final String name,                                final String value,                                final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void setAttribute( final ConfigurationState state,                                final String name,                                final String value,                                final Context context )         throws CascadingException", "diff": ["-    private void setAttribute( final ObjectConfigurer configurer,", "-                               final Object object,", "+    private void setAttribute( final ConfigurationState state,", "-        throws ConfigurationException", "+        throws CascadingException", "-        if( DEBUG )", "-        {", "-            final String message = REZ.getString( \"configure-attribute.notice\",", "-                                                  name,", "-                                                  value );", "-            getLogger().debug( message );", "-        }", "-", "-        if( name.endsWith( \"-ref\" ) )", "+        if( name.toLowerCase().endsWith( \"-ref\" ) )", "-            setReference( configurer, object, refName, value, context );", "+            setReference( state, refName, value, context );", "-            // Locate the configurer for this attribute", "-            final PropertyConfigurer propConfigurer = configurer.getProperty( name );", "-            if( null == propConfigurer )", "-            {", "-                final String message = REZ.getString( \"unknown-property.error\", name );", "-                throw new ConfigurationException( message );", "-            }", "-", "-            try", "-            {", "-                setValue( propConfigurer, object, value, context );", "-            }", "-            catch( final Exception e )", "-            {", "-                final String message = REZ.getString( \"bad-set-property.error\", name );", "-                throw new ConfigurationException( message, e );", "-            }", "+            final PropertyConfigurer propConfigurer =", "+                state.getConfigurer().getProperty( name );", "+            setValue( propConfigurer, state, value, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df74f06590ab2adb5bc8e887376bf1e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void configureElement( final ObjectConfigurer configurer,                                    final Object object,                                    final Configuration childConfig,                                    final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void configureElement( final ObjectConfigurer configurer,                                    final Object object,                                    final Configuration element,                                    final Context context )         throws ConfigurationException", "diff": ["-     */", "-    private void configureElement( final ObjectConfigurer configurer,", "-                                   final Object object,", "-                                   final Configuration childConfig,", "-                                   final Context context )", "-        throws ConfigurationException", "-    {", "-        final String childName = childConfig.getName();", "-", "-        if( DEBUG )", "-        {", "-            final String message =", "-                REZ.getString( \"configure-subelement.notice\", childName );", "-            getLogger().debug( message );", "-        }", "-", "-        // Locate the configurer for the child element", "-        final ElementConfigurer childConfigurer = configurer.getElement( childName );", "-        if( null == childConfigurer )", "-        {", "-            final String message = REZ.getString( \"unknown-subelement.error\", childName );", "-            throw new ConfigurationException( message );", "-        }", "-", "-        try", "-        {", "-            // Create the child element", "-            final Object child = childConfigurer.createElement( object );", "-", "-            // Configure the child element", "-            configure( child, childConfig, context );", "-", "-            // Set the child element", "-            childConfigurer.addElement( object, child );", "-        }", "-        catch( final ConfigurationException ce )", "-        {", "-            final String message =", "-                REZ.getString( \"bad-configure-subelement.error\", childName );", "-            throw new ConfigurationException( message, ce );", "-        }", "-    }", "+     */", "+    private void configureElement( final ObjectConfigurer configurer,", "+                                   final Object object,", "+                                   final Configuration element,", "+                                   final Context context )", "+        throws ConfigurationException", "+    {", "+        final String elementName = element.getName();", "+", "+        if( DEBUG )", "+        {", "+            final String message =", "+                REZ.getString( \"configure-subelement.notice\", elementName );", "+            getLogger().debug( message );", "+        }", "+", "+        if( elementName.endsWith( \"-ref\" ) )", "+        {", "+            // A reference", "+            configureReference( configurer, object, element, context );", "+        }", "+        else", "+        {", "+            // An inline object", "+            configureInline( configurer, object, element, context );", "+        }", "+    }"]}]}