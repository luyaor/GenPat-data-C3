{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45573ec56a414224988f464e28c59652", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "074db4fec80c31ba50291f56f9fd7783", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "8c8d8c5f27e49e1fc7a40cc29a1293b7e9344107", "commitAfterChange": "9ec1930ae7761d9f977d737ea678282f0d1b06e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void readFile() throws BuildException", "signatureAfterChange": "      private void readFile() throws BuildException", "diff": ["-                FileInputStream fis = new FileInputStream(m_propertyfile);", "-                BufferedInputStream bis = new BufferedInputStream(fis);", "-                m_properties.load(bis);", "-                if (fis != null) {", "-                    fis.close();", "+                FileInputStream fis = null;", "+                try {", "+                    fis = new FileInputStream(m_propertyfile);", "+                    BufferedInputStream bis = new BufferedInputStream(fis);", "+                    m_properties.load(bis);", "+                } finally {", "+                    if (fis != null) {", "+                        fis.close();", "+                    }", "-                FileOutputStream out = new FileOutputStream(m_propertyfile.getAbsolutePath());", "-                out.flush();", "-                out.close();", "+                FileOutputStream out = null;", "+                try {", "+                    out = new FileOutputStream(m_propertyfile.getAbsolutePath());", "+                    out.flush();", "+                } finally {", "+                    if (out != null) {", "+                        out.close();", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e677bbca1ab7f5f096daf21ea77c1381", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void massagePCLI(File in, File out)          throws FileNotFoundException, IOException", "signatureAfterChange": "     private void massagePCLI(File in, File out)          throws FileNotFoundException, IOException", "diff": ["-        BufferedReader inReader = new BufferedReader(new FileReader(in));", "-        BufferedWriter outWriter = new BufferedWriter(new FileWriter(out));", "-        String s = null;", "-        while ((s = inReader.readLine()) != null) {", "-            String sNormal = s.replace('\\\\', '/');", "-            outWriter.write(sNormal);", "-            outWriter.newLine();", "+        BufferedReader inReader = null;", "+        BufferedWriter outWriter = null;", "+        try {", "+            inReader = new BufferedReader(new FileReader(in));", "+            outWriter = new BufferedWriter(new FileWriter(out));", "+            String s = null;", "+            while ((s = inReader.readLine()) != null) {", "+                String sNormal = s.replace('\\\\', '/');", "+                outWriter.write(sNormal);", "+                outWriter.newLine();", "+            }", "+        } finally {", "+            if (inReader != null) {", "+                inReader.close();", "+            }", "+            if (outWriter != null) {", "+                outWriter.close();", "+            }", "-        inReader.close();", "-        outWriter.close();"]}]}