{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "917e48596cd3b67c4ff369089144da91", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af17c20597499c0cc30b126fa502286", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "b131c2950dc47a53c9b2e18829b15c1821d82e9c", "commitAfterChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void configureLiaison( File stylesheet )         throws TaskException", "signatureAfterChange": "     protected void configureLiaison( File stylesheet )         throws TaskException", "diff": ["-                m_liaison.addParam( param.getName(), param.getExpression() );", "+", "+                final String expression = param.getExpression();", "+                if( expression == null )", "+                {", "+                    throw new TaskException( \"Expression attribute is missing.\" );", "+                }", "+", "+                final String name = param.getName();", "+                if( name == null )", "+                {", "+                    throw new TaskException( \"Name attribute is missing.\" );", "+                }", "+", "+                m_liaison.addParam( name, expression );", "-            throw new TaskException( \"Error\", e );", "+            throw new TaskException( e.getMessage(), e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27a40d0decc4f8a7e228d1600247d02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setExtensionName( final String extensionName )", "signatureAfterChange": "     public void addExtension( final ExtensionAdapter extensionAdapter )         throws TaskException", "diff": ["-     */", "-    public void setExtensionName( final String extensionName )", "-    {", "-        m_extensionName = extensionName;", "-    }", "+    public void addExtension( final ExtensionAdapter extensionAdapter )", "+        throws TaskException", "+        if( null != m_extension )", "+        {", "+            final String message = REZ.getString( \"manifest.multi-extension.error\" );", "+            throw new TaskException( message );", "+        }", "+        else", "+        {", "+            m_extension = extensionAdapter.toExtension();", "+        }", "+    }"]}]}