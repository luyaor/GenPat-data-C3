{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c9cab0b11783d2a1e66bbe510344dff", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d302cef6942ee32b8ffb8bb7d0993b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java", "commitBeforeChange": "32c1f6a73f867f491cfaeac14e2ca2aab167f1ec", "commitAfterChange": "8de81028e45c54b750a0024bf64eaa0ea9e369ea", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     JUnitTaskMirror.JUnitResultFormatterMirror createFormatter(ClassLoader loader)             throws BuildException", "signatureAfterChange": "     JUnitTaskMirror.JUnitResultFormatterMirror createFormatter(ClassLoader loader)             throws BuildException", "diff": ["-        } catch (Exception e) {", "+        } catch (NoSuchFieldException e) {", "+        } catch (IllegalAccessException e) {", "+            throw new BuildException(e);", "-            } catch (Exception e) {", "+            } catch (NoSuchMethodException e) {", "+            } catch (IllegalAccessException e) {", "+                throw new BuildException(e);", "+            } catch (InvocationTargetException e) {", "+                throw new BuildException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af669f8a39bb4be214e54c471272df5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "ff8b6709bcf07f12efecc3625f5e1665e7ddf34d", "commitAfterChange": "0fdacdfc1a598078da48d77a24f2b7479e9bffb3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void configureObject( final Object object,                                   final Configuration configuration,                                   final Context context )         throws ConfigurationException, InvocationTargetException", "signatureAfterChange": "     private void configureObject( final Object object,                                   final Configuration configuration,                                   final Context context )         throws ConfigurationException", "diff": ["-        throws ConfigurationException, InvocationTargetException", "+        throws ConfigurationException", "+                catch( final ConfigurationException ce )", "+                {", "+                    ce.fillInStackTrace();", "+                    throw ce;", "+                }", "+                catch( final ConfigurationException ce )", "+                {", "+                    ce.fillInStackTrace();", "+                    throw ce;", "+                }", "+                }", "+                catch( final ConfigurationException ce )", "+                {", "+                    ce.fillInStackTrace();", "+                    throw ce;"]}]}