{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93f8631a12d567610e176b23f619202c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35e243a19fe4b862ab1d54c46f996571", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void close()", "signatureAfterChange": "     public void dispose()", "diff": ["-    public void close()", "-        // TODO - implement this", "+     */", "+    public void dispose()", "+    {", "+        // Dispose the providers (making sure we only dispose each provider", "+        // once", "+        final Set providers = new HashSet();", "+        providers.addAll( m_providers.values() );", "+        for( Iterator iterator = providers.iterator(); iterator.hasNext(); )", "+        {", "+            Object provider = iterator.next();", "+            if( provider instanceof Disposable )", "+            {", "+                Disposable disposable = (Disposable)provider;", "+                disposable.dispose();", "+            }", "+        }", "+        m_providers.clear();", "+", "+        m_fileReplicator.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf458eb6ce2d12b137800cbd5063b3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "e7ab62bc9179b392804835d02155e43d3d2cf5d6", "commitAfterChange": "2e6e170fb375181f4438e1de44808c7adab508a2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void dispose()", "signatureAfterChange": "     public void dispose()", "diff": ["-        m_extensionManager = null;", "-        m_aspectManager = null;", "-        m_roleManager = null;", "-        m_converterRegistry = null;", "-        m_converter = null;", "-        m_executor = null;", "+        // Dispose any disposable components", "+        for( Iterator iterator = m_components.iterator(); iterator.hasNext(); )", "+        {", "+            Component component = (Component)iterator.next();", "+            if( component instanceof Disposable )", "+            {", "+                ( (Disposable)component ).dispose();", "+            }", "+        }", "+", "+        // Ditch everything", "+        m_components = null;", "-        m_configurer = null;", "-        m_binDir = null;", "-        m_libDir = null;"]}]}