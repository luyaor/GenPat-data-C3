{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3737de16a20307fc7aabd752c7fd6f17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450c8d432a7ec4a7edfed8bcfd405bf0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "0b8da0cb291c01903a2b1858b85d21f116494e05", "commitAfterChange": "f1ca327fe83b0932fe8240cbcf3b86d550dce2d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( Class destination, final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "     public Object convert( final Class destination,                            final Object original,                            final Context context )         throws ConverterException", "diff": ["-    public Object convert( Class destination, final Object original, final Context context )", "+    public Object convert( final Class destination,", "+                           final Object original,", "+                           final Context context )", "-        //TODO: Start searching inheritance hierarchy for converter", "-        final String name = m_registry.getConverterName( originalClass.getName(),", "-                                                         destination.getName() );", "-", "-        if( null == name )", "-        {", "-            final String message =", "-                REZ.getString( \"no-converter.notice\",", "-                               originalClass.getName(),", "-                               destination.getName() );", "-            throw new ConverterException( message );", "-        }", "+        //Searching inheritance hierarchy for converter", "+        final String name = getConverterName( originalClass, destination );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b5d42973d7185ef09b8dd08473b72c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private String extractRootPrefix( final String uri,                                       final StringBuffer name )         throws FileSystemException", "signatureAfterChange": "     protected abstract String extractRootPrefix( final String uri,                                                  final StringBuffer name )         throws FileSystemException;", "diff": ["-    private String extractRootPrefix( final String uri,", "-                                      final StringBuffer name )", "-        throws FileSystemException", "-    {", "-        // TODO - split this into sub-classes", "-        if( m_windowsNames )", "-        {", "-            return extractWindowsRootPrefix( uri, name );", "-        }", "-        else", "-        {", "-            // Looking for <sep>", "-            if( name.length() == 0 || name.charAt( 0 ) != '/' )", "-            {", "-                final String message = REZ.getString( \"not-absolute-file-name.error\", uri );", "-                throw new FileSystemException( message );", "-            }", "+    protected abstract String extractRootPrefix( final String uri,", "+                                                 final StringBuffer name )", "+        throws FileSystemException;", "-            // TODO - this isn't always true", "-            return \"/\";", "-        }", "-    }"]}]}