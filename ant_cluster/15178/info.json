{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0095412038c623946d4c3d6a050b216", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447d51012631ddbe1fc3eda4101787e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "37e1a669340af86ea163020ac3cec13cbd881b29", "commitAfterChange": "ce8272e144b8168b864015d2dd304410ebb236fc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void createFrameStructure() throws IOException, SAXException", "signatureAfterChange": "     protected OutputStream getOutputStream() throws IOException", "diff": ["-", "-    protected void createFrameStructure() throws IOException, SAXException{", "-        InputStream in = null;", "-        if (styleDir == null) {", "-            in = getResourceAsStream(\"html/index.html\");", "-        } else {", "-            in = new FileInputStream(new File(styleDir, \"index.html\"));", "-        }", "-        OutputStream out = new FileOutputStream( new File(toDir, \"index.html\") );", "-        copy(in, out);", "-    }", "+    /** get the appropriate stream based on the format (frames/noframes) */", "+    protected OutputStream getOutputStream() throws IOException {", "+        if (caller.FRAMES.equals(caller.format)){", "+            // dummy output for the framed report", "+            // it's all done by extension...", "+            return new ByteArrayOutputStream();", "+        } else {", "+            return new FileOutputStream(new File(caller.toDir, \"junit-noframes.html\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "999479238d53873ad87df473ab1c3d84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "e7fb9570418c8f963123c259470373667ac8a84e", "commitAfterChange": "f5b5a8b53cad568d5a5ab97ed35c91f698fb1c8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "        public InputStream getInputStream() throws IOException", "signatureAfterChange": "          public InputStream getInputStream() throws IOException", "diff": ["-      public InputStream getInputStream() throws IOException {", "-        if (data == null && out == null) {", "-          throw new IOException(\"No data\");", "-        } else {", "-          if (out != null) {", "-            data = (data != null) ? data.concat(out.toString(charset)) : out.toString(charset);", "-            out = null;", "-          }", "-          return new ByteArrayInputStream(data.getBytes(charset));", "+        public InputStream getInputStream() throws IOException {", "+            if (data == null && out == null) {", "+                throw new IOException(\"No data\");", "+            }", "+            if (out != null) {", "+                String encodedOut = out.toString(charset);", "+                data = (data != null) ? data.concat(encodedOut) : encodedOut;", "+                out = null;", "+            }", "+            return new ByteArrayInputStream(data.getBytes(charset));", "-      }"]}]}