{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec967bb6ab27b3b2a97024d1faaa72dc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1147e1bf04c94a0e89b3e9d754506a27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public synchronized void setLogError(boolean logError)", "signatureAfterChange": "     public void setLogError(boolean logError)", "diff": ["-    public synchronized void setLogError(boolean logError) {", "-        this.logError = logError;", "+    public void setLogError(boolean logError) {", "+        synchronized (errMutex) {", "+            this.logError = logError;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8f76a0894a506dd852fcaab4e6901a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public synchronized void setAppendProperties(boolean appendProperties)", "signatureAfterChange": "     public void setAppendProperties(boolean appendProperties)", "diff": ["-    public synchronized void setAppendProperties(boolean appendProperties) {", "-        this.appendProperties = appendProperties;", "+    public void setAppendProperties(boolean appendProperties) {", "+        synchronized (outMutex) {", "+            this.appendProperties = appendProperties;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cc25eecae3855e209778b7c709d8c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b361fabe04c2d8e6dec41af36a728575d1399e90", "commitAfterChange": "bf283617dbb972d27c295814d9bdce53886c621d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void copyInheritedProperties(Project other)", "signatureAfterChange": "     public void copyInheritedProperties(Project other)", "diff": ["-        Enumeration e = inheritedProperties.keys();", "-        while (e.hasMoreElements()) {", "-            String arg = e.nextElement().toString();", "-            if (other.getUserProperty(arg) != null) {", "-                continue;", "+        //avoid concurrent modification:", "+        synchronized (inheritedProperties) {", "+            Enumeration e = inheritedProperties.keys();", "+            while (e.hasMoreElements()) {", "+                String arg = e.nextElement().toString();", "+                if (other.getUserProperty(arg) != null) {", "+                    continue;", "+                }", "+                Object value = inheritedProperties.get(arg);", "+                other.setInheritedProperty(arg, value.toString());", "-            Object value = inheritedProperties.get(arg);", "-            other.setInheritedProperty(arg, value.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37690913e223b5fdb1b52d70123100a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "ea41c72f7adfce4ad48caded93962140650f2746", "commitAfterChange": "a65cadb437afdc85fcc77d9c58293c66e456ff46", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public synchronized void addBuildListener(BuildListener listener)", "signatureAfterChange": "     public void addBuildListener(BuildListener listener)", "diff": ["-    public synchronized void addBuildListener(BuildListener listener) {", "-        // If the listeners already has this listener, do nothing", "-        if (listeners.contains(listener)) {", "-            return;", "+    public void addBuildListener(BuildListener listener) {", "+        synchronized (listenersLock) {", "+            // If the listeners already has this listener, do nothing", "+            if (listeners.contains(listener)) {", "+                return;", "+            }", "+            // copy on write semantics", "+            Vector newListeners = getBuildListeners();", "+            newListeners.addElement(listener);", "+            listeners = newListeners;", "-        // create a new Vector to avoid ConcurrentModificationExc when", "-        // the listeners get added/removed while we are in fire", "-        Vector newListeners = getBuildListeners();", "-        newListeners.addElement(listener);", "-        listeners = newListeners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3957b86be3c876b14d08ee33153080bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "cc47289e1e7aeb9411a95082d2132db128dfc262", "commitAfterChange": "379895a0223302a557295f9c61e7de414104cab5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static boolean removeDefaultExclude(String s)", "signatureAfterChange": "     public static boolean removeDefaultExclude(String s)", "diff": ["+        synchronized (defaultExcludes) {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a36835c06a339a3ee1cd4e2c05d758c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void setInputStream(InputStream inputStream)", "signatureAfterChange": "void setInputStream(InputStream inputStream)", "diff": ["-    /*public*/ void setInputStream(InputStream inputStream) {", "-        this.inputStream = inputStream;", "+    /* public */void setInputStream(InputStream inputStream) {", "+        synchronized (inMutex) {", "+            this.inputStream = inputStream;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f110aad97d444f95d7f227f2025b806", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public synchronized void setErrorProperty(String errorProperty)", "signatureAfterChange": "     public void setErrorProperty(String errorProperty)", "diff": ["-    public synchronized void setErrorProperty(String errorProperty) {", "-        if (errorProperty == null", "-         || !(errorProperty.equals(this.errorProperty))) {", "-            this.errorProperty = errorProperty;", "-            errorBaos = null;", "+    public void setErrorProperty(String errorProperty) {", "+        synchronized (errMutex) {", "+            if (errorProperty == null", "+                    || !(errorProperty.equals(this.errorProperty))) {", "+                this.errorProperty = errorProperty;", "+                errorBaos = null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46cef4ffc920711132bceb898aade473", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public synchronized InputStream getInputStream()", "signatureAfterChange": "     public InputStream getInputStream()", "diff": ["-    public synchronized InputStream getInputStream() {", "-        return inputStream;", "+    public InputStream getInputStream() {", "+        synchronized (inMutex) {", "+            return inputStream;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dae477ddc805530ad260132504731d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public synchronized void setOutputProperty(String outputProperty)", "signatureAfterChange": "     public void setOutputProperty(String outputProperty)", "diff": ["-    public synchronized void setOutputProperty(String outputProperty) {", "+    public void setOutputProperty(String outputProperty) {", "-         || !(outputProperty.equals(this.outputProperty))) {", "-            this.outputProperty = outputProperty;", "-            baos = null;", "+                || !(outputProperty.equals(this.outputProperty))) {", "+            synchronized (outMutex) {", "+                this.outputProperty = outputProperty;", "+                baos = null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5125748b0f9455249fb2d02a701f11e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "ab5fb066bd93c7713f4628ba564ab6e91890f811", "commitAfterChange": "b456160d70409bf1b5b6a2cfd211a4d012378f00", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public List getRestrictedDefinitions(String componentName)", "signatureAfterChange": "     public List getRestrictedDefinitions(String componentName)", "diff": ["-        return (List) restrictedDefinitions.get(componentName);", "+        synchronized (restrictedDefinitions) {", "+            return (List) restrictedDefinitions.get(componentName);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ea28faf47cc65255c9f8d4546b83c2e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/LocalPropertyStack.java", "commitBeforeChange": "33d20f43659475bf234aa1c22ca9bbbd2a3b9d1e", "commitAfterChange": "1388e372a9eb6cc6c463fbda928a10afd17b6d0a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void exitScope()", "signatureAfterChange": "     public void exitScope()", "diff": ["-        stack.removeFirst().clear();", "+        synchronized (LOCK) {", "+            stack.removeFirst().clear();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60afe799cb8a6d87f3c70c84b3077603", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "cc47289e1e7aeb9411a95082d2132db128dfc262", "commitAfterChange": "379895a0223302a557295f9c61e7de414104cab5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static String[] getDefaultExcludes()", "signatureAfterChange": "     public static String[] getDefaultExcludes()", "diff": ["+        synchronized (defaultExcludes) {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a75c3c1f8ea6d0000be1d16ed3ed311", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public synchronized OutputStream getErrorStream()", "signatureAfterChange": "     public OutputStream getErrorStream()", "diff": ["-    public synchronized OutputStream getErrorStream() {", "-        return errorStream;", "+    public OutputStream getErrorStream() {", "+        synchronized (errMutex) {", "+            return errorStream;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7065abb2bf8e05d7015a8b46f1834c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     protected synchronized void handleOutput(String output)", "signatureAfterChange": "     protected void handleOutput(String output)", "diff": ["-    protected synchronized void handleOutput(String output) {", "-        if (outPrintStream == null) {", "-            outPrintStream = new PrintStream(outputStream);", "+    protected void handleOutput(String output) {", "+        synchronized (outMutex) {", "+            if (outPrintStream == null) {", "+                outPrintStream = new PrintStream(outputStream);", "+            }", "+            outPrintStream.print(output);", "-        outPrintStream.print(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "844c1a06bfb6df7e8e33f2648a6f7943", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public synchronized void setOutputFilterChains(Vector outputFilterChains)", "signatureAfterChange": "     public void setOutputFilterChains(Vector outputFilterChains)", "diff": ["-    public synchronized void setOutputFilterChains(Vector outputFilterChains) {", "-        this.outputFilterChains = outputFilterChains;", "+    public void setOutputFilterChains(Vector outputFilterChains) {", "+        synchronized (outMutex) {", "+            this.outputFilterChains = outputFilterChains;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89e7870763c8e7c5847c7c9f6ee3fe59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/LocalPropertyStack.java", "commitBeforeChange": "33d20f43659475bf234aa1c22ca9bbbd2a3b9d1e", "commitAfterChange": "1388e372a9eb6cc6c463fbda928a10afd17b6d0a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void enterScope()", "signatureAfterChange": "     public void enterScope()", "diff": ["-        stack.addFirst(new HashMap<String, Object>());", "+        synchronized (LOCK) {", "+            stack.addFirst(new ConcurrentHashMap<String, Object>());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be648b1329c099af8f0ae6647850384", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     protected synchronized int handleInput(byte[] buffer, int offset,                                            int length) throws IOException", "signatureAfterChange": "     protected int handleInput(byte[] buffer, int offset, int length)             throws IOException", "diff": ["-    protected synchronized int handleInput(byte[] buffer, int offset,", "-                                           int length) throws IOException {", "-        if (inputStream == null) {", "-            return managingTask.getProject().defaultInput(buffer, offset,", "-                                                          length);", "-        } else {", "+    protected int handleInput(byte[] buffer, int offset, int length)", "+            throws IOException {", "+        synchronized (inMutex) {", "+            if (inputStream == null) {", "+                return managingTask.getProject().defaultInput(buffer, offset,", "+                        length);", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94d5265433a984ab28f5c3cbda36e911", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "cc47289e1e7aeb9411a95082d2132db128dfc262", "commitAfterChange": "379895a0223302a557295f9c61e7de414104cab5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static boolean addDefaultExclude(String s)", "signatureAfterChange": "     public static boolean addDefaultExclude(String s)", "diff": ["+        synchronized (defaultExcludes) {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9837beb97ec2b10039f5e2ed76a358b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "ea41c72f7adfce4ad48caded93962140650f2746", "commitAfterChange": "a65cadb437afdc85fcc77d9c58293c66e456ff46", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public synchronized void removeBuildListener(BuildListener listener)", "signatureAfterChange": "     public void removeBuildListener(BuildListener listener)", "diff": ["-    public synchronized void removeBuildListener(BuildListener listener) {", "-        // create a new Vector to avoid ConcurrentModificationExc when", "-        // the listeners get added/removed while we are in fire", "-        Vector newListeners = getBuildListeners();", "-        newListeners.removeElement(listener);", "-        listeners = newListeners;", "+    public void removeBuildListener(BuildListener listener) {", "+        synchronized (listenersLock) {", "+            // copy on write semantics", "+            Vector newListeners = getBuildListeners();", "+            newListeners.removeElement(listener);", "+            listeners = newListeners;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990e48d87832e3a1c3660123957abfad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b361fabe04c2d8e6dec41af36a728575d1399e90", "commitAfterChange": "bf283617dbb972d27c295814d9bdce53886c621d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void copyUserProperties(Project other)", "signatureAfterChange": "     public void copyUserProperties(Project other)", "diff": ["-        Enumeration e = userProperties.keys();", "-        while (e.hasMoreElements()) {", "-            Object arg = e.nextElement();", "-            if (inheritedProperties.containsKey(arg)) {", "-                continue;", "+        //avoid concurrent modification:", "+        synchronized (userProperties) {", "+            Enumeration e = userProperties.keys();", "+            while (e.hasMoreElements()) {", "+                Object arg = e.nextElement();", "+                if (inheritedProperties.containsKey(arg)) {", "+                    continue;", "+                }", "+                Object value = userProperties.get(arg);", "+                other.setUserProperty(arg.toString(), value.toString());", "-            Object value = userProperties.get(arg);", "-            other.setUserProperty(arg.toString(), value.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba7c03008b8e62660cd3f15058bcd04", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public synchronized void setInputString(String inputString)", "signatureAfterChange": "     public void setInputString(String inputString)", "diff": ["-    public synchronized void setInputString(String inputString) {", "-        this.inputString = inputString;", "+    public void setInputString(String inputString) {", "+        synchronized (inMutex) {", "+            this.inputString = inputString;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5037af3db4212f5ca53b6c79934dff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/LocalPropertyStack.java", "commitBeforeChange": "33d20f43659475bf234aa1c22ca9bbbd2a3b9d1e", "commitAfterChange": "1388e372a9eb6cc6c463fbda928a10afd17b6d0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public LocalPropertyStack copy()", "signatureAfterChange": "     public LocalPropertyStack copy()", "diff": ["-        LocalPropertyStack ret = new LocalPropertyStack();", "-        ret.stack.addAll(stack);", "-        return ret;", "+        synchronized (LOCK) {", "+            LocalPropertyStack ret = new LocalPropertyStack();", "+            ret.stack.addAll(stack);", "+            return ret;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd78ae6450c385320eb86d766c5f75d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     protected synchronized void handleErrorFlush(String output)", "signatureAfterChange": "     protected void handleErrorFlush(String output)", "diff": ["-    protected synchronized void handleErrorFlush(String output) {", "-        if (errorPrintStream == null) {", "-            errorPrintStream = new PrintStream(errorStream);", "+    protected void handleErrorFlush(String output) {", "+        synchronized (errMutex) {", "+            if (errorPrintStream == null) {", "+                errorPrintStream = new PrintStream(errorStream);", "+            }", "+            errorPrintStream.print(output);", "-        errorPrintStream.print(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be17dfb9e3d105fc2ea814458bab03d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     protected synchronized void handleFlush(String output)", "signatureAfterChange": "     protected void handleFlush(String output)", "diff": ["-    protected synchronized void handleFlush(String output) {", "-        if (outPrintStream == null) {", "-            outPrintStream = new PrintStream(outputStream);", "+    protected void handleFlush(String output) {", "+        synchronized (outMutex) {", "+            if (outPrintStream == null) {", "+                outPrintStream = new PrintStream(outputStream);", "+            }", "+            outPrintStream.print(output);", "+            outPrintStream.flush();", "-        outPrintStream.print(output);", "-        outPrintStream.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23233781d6c5e667a9b8a0802a51e91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void close() throws IOException", "signatureAfterChange": "          public void close() throws IOException", "diff": ["-            if (!closed && !(append && appendProperties)) {", "-                setPropertyFromBAOS(this, property);", "-                closed = true;", "+            synchronized (outMutex) {", "+                if (!closed && !(appendOut && appendProperties)) {", "+                    setPropertyFromBAOS(this, property);", "+                    closed = true;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7076aa0fae417f62d45a8eba6867ac8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public synchronized void setInputFilterChains(Vector inputFilterChains)", "signatureAfterChange": "     public void setInputFilterChains(Vector inputFilterChains)", "diff": ["-    public synchronized void setInputFilterChains(Vector inputFilterChains) {", "-        this.inputFilterChains = inputFilterChains;", "+    public void setInputFilterChains(Vector inputFilterChains) {", "+        synchronized (inMutex) {", "+            this.inputFilterChains = inputFilterChains;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39ed2c3c4e20422cfbad135f3568180", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b361fabe04c2d8e6dec41af36a728575d1399e90", "commitAfterChange": "bf283617dbb972d27c295814d9bdce53886c621d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Hashtable getProperties()", "signatureAfterChange": "     public Hashtable getProperties()", "diff": ["-        return new Hashtable(properties);", "+        //avoid concurrent modification:", "+        synchronized (properties) {", "+            return new Hashtable(properties);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7875038e21d929a5c86ffbfc37193c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b361fabe04c2d8e6dec41af36a728575d1399e90", "commitAfterChange": "bf283617dbb972d27c295814d9bdce53886c621d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public Hashtable getUserProperties()", "signatureAfterChange": "     public Hashtable getUserProperties()", "diff": ["-        return new Hashtable(userProperties);", "+        //avoid concurrent modification:", "+        synchronized (userProperties) {", "+            return new Hashtable(userProperties);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f00aebcfb582d7109141ba554292a2a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     protected synchronized void handleErrorOutput(String output)", "signatureAfterChange": "     protected void handleErrorOutput(String output)", "diff": ["-    protected synchronized void handleErrorOutput(String output) {", "-        if (errorPrintStream == null) {", "-            errorPrintStream = new PrintStream(errorStream);", "+    protected void handleErrorOutput(String output) {", "+        synchronized (errMutex) {", "+            if (errorPrintStream == null) {", "+                errorPrintStream = new PrintStream(errorStream);", "+            }", "+            errorPrintStream.print(output);", "-        errorPrintStream.print(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f28aa4b9b05ed2962fce8fcb38dfdf31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e03db74846d20974a3aae9cd7054948e5cd502cf", "commitAfterChange": "ea41c72f7adfce4ad48caded93962140650f2746", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "     public Task getThreadTask(Thread thread)", "signatureAfterChange": "     public Task getThreadTask(Thread thread)", "diff": ["-        Task task = (Task) threadTasks.get(thread);", "-        if (task == null) {", "-            ThreadGroup group = thread.getThreadGroup();", "-            while (task == null && group != null) {", "-                task = (Task) threadGroupTasks.get(group);", "-                group = group.getParent();", "+        synchronized(threadTasks) {", "+            Task task = (Task) threadTasks.get(thread);", "+            if (task == null) {", "+                ThreadGroup group = thread.getThreadGroup();", "+                while (task == null && group != null) {", "+                    task = (Task) threadGroupTasks.get(group);", "+                    group = group.getParent();", "+                }", "+            return task;", "-        return task;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4eb02bfa61e36d11a29c8cda8322658", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e03db74846d20974a3aae9cd7054948e5cd502cf", "commitAfterChange": "ea41c72f7adfce4ad48caded93962140650f2746", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "     public synchronized void registerThreadTask(Thread thread, Task task)", "signatureAfterChange": "     public void registerThreadTask(Thread thread, Task task)", "diff": ["-    public synchronized void registerThreadTask(Thread thread, Task task) {", "-        if (task != null) {", "-            threadTasks.put(thread, task);", "-            threadGroupTasks.put(thread.getThreadGroup(), task);", "-        } else {", "-            threadTasks.remove(thread);", "-            threadGroupTasks.remove(thread.getThreadGroup());", "+    public void registerThreadTask(Thread thread, Task task) {", "+        synchronized(threadTasks) {", "+            if (task != null) {", "+                threadTasks.put(thread, task);", "+                threadGroupTasks.put(thread.getThreadGroup(), task);", "+            } else {", "+                threadTasks.remove(thread);", "+                threadGroupTasks.remove(thread.getThreadGroup());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7cbcefc7f2976dc48e7f5b8038089ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public synchronized OutputStream getOutputStream()", "signatureAfterChange": "     public OutputStream getOutputStream()", "diff": ["-    public synchronized OutputStream getOutputStream() {", "-        return outputStream;", "+    public OutputStream getOutputStream() {", "+        synchronized (outMutex) {", "+            return outputStream;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab1ddb24c67cf4a286171b01c540f4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public synchronized void setErrorFilterChains(Vector errorFilterChains)", "signatureAfterChange": "     public void setErrorFilterChains(Vector errorFilterChains)", "diff": ["-    public synchronized void setErrorFilterChains(Vector errorFilterChains) {", "-        this.errorFilterChains = errorFilterChains;", "+    public void setErrorFilterChains(Vector errorFilterChains) {", "+        synchronized (errMutex) {", "+            this.errorFilterChains = errorFilterChains;", "+        }"]}]}