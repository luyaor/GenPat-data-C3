{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57323a0c30927233070cd44eb61c8f86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e79fc5e865d1dfb085afbe3fd13550", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "33b7e4299233528015cc4b40713098fb6342b05e", "commitAfterChange": "787728897a6052af385456788bc4e578ba170ba5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static Vector tokenizePath(String path)", "signatureAfterChange": "    public static Vector tokenizePath (String path)", "diff": ["-     */", "-    public static Vector tokenizePath(String path) {", "-        Vector ret = new Vector();", "-        StringTokenizer st = new StringTokenizer(path, File.separator);", "-        while (st.hasMoreTokens()) {", "-            ret.addElement(st.nextToken());", "-        }", "-        return ret;", "-    }", "+    */", "+   public static Vector tokenizePath (String path) {", "+     return tokenizePath(path, File.separator);", "+   }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4855c5865c1413f37d560bcbb291e52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/CompositeMapper.java", "commitBeforeChange": "01ca57a3170fe917f71d809eedfb4c3c059d38aa", "commitAfterChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public String[] mapFileName(String sourceFileName)", "signatureAfterChange": "     public String[] mapFileName(String sourceFileName)", "diff": ["-        HashSet results = new HashSet();", "-        LinkedList sortedResults = new LinkedList();", "+        LinkedHashSet results = new LinkedHashSet();", "-                        if (!results.contains(mapped[i])) {", "-                            results.add(mapped[i]);", "-                            sortedResults.addLast(mapped[i]);", "-                        }", "+                        results.add(mapped[i]);", "-            : (String[]) sortedResults.toArray(new String[results.size()]);", "+            : (String[]) results.toArray(new String[results.size()]);"]}]}