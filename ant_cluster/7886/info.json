{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07141c747af8076ae2fe60e9ac7b7c29", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ebe05413460d81a2d96b45545dae74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "fd2eebcccff567bb945e4712e990a06c36478ccf", "commitAfterChange": "af102bbd3d062facf9d1b393aefbc7e2c49f25a1", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": "     private void evaluatePackages(Commandline toExecute, Path sourcePath,                                    Vector packages)", "signatureAfterChange": "     private void evaluatePackages(Commandline toExecute, Path sourcePath,                                    Vector packages)", "diff": ["+        FileSet fs = new FileSet();", "+        fs.setDefaultexcludes(useDefaultExcludes);", "+", "+        Enumeration e = packages.elements();", "+        while (e.hasMoreElements()) {", "+            String pkg = (String)e.nextElement();", "+            pkg = pkg.replace('.','/');", "+            if (pkg.endsWith(\"*\")) {", "+                pkg += \"*\";", "+            }", "+", "+            fs.createInclude().setName(pkg);", "+        } // while", "+", "-            Vector foundPackages = findPackages(source);", "+            fs.setDir(source);", "-            Enumeration e = foundPackages.elements();", "-            while (e.hasMoreElements()) {", "-                String pack = (String) e.nextElement();", "-                for (int i = 0; i < packages.size(); i++) {", "-                    if (matches(pack, (String) packages.elementAt(i))) {", "-                        if (!addedPackages.contains(pack)) {", "-                            toExecute.createArgument().setValue(pack);", "-                            addedPackages.addElement(pack);", "+            DirectoryScanner ds = fs.getDirectoryScanner(project);", "+            String[] packageDirs = ds.getIncludedDirectories();", "+", "+            for (int i=0; i<packageDirs.length; i++) {", "+                File pd = new File(source, packageDirs[i]);", "+                String[] files = pd.list(new FilenameFilter () {", "+                    public boolean accept(File dir1, String name) {", "+                        if (name.endsWith(\".java\")) {", "+                            return true;", "-                        break;", "+                        return false;\t// ignore dirs", "+                    }", "+                });", "+", "+                if (files.length > 0) {", "+                    String pkgDir = packageDirs[i].replace('/','.').replace('\\\\','.');", "+                    if (!addedPackages.contains(pkgDir)) {", "+                        toExecute.createArgument().setValue(pkgDir);", "+                        addedPackages.addElement(pkgDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797f29d72727163ec2b96dc6fab7b508", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "7f76769aba1d44cd44eb56ebadbbbe9068859c68", "commitAfterChange": "0ae47a0947c94f5e56a518702e90355fe23bf1ff", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void scan() throws BuildException", "signatureAfterChange": "     private void scan() throws BuildException", "diff": ["-        if( controlFile != null ) {", "-            if( controlFile.exists() ) {", "-                controlFileTime = controlFile.lastModified();", "-                fileset.setDir( instrumentDir );", "-                ds = fileset.getDirectoryScanner( project );", "-                files = ds.getIncludedFiles();", "-                for( int i = 0; i < files.length; i++ ) {", "-                    File srcFile = new File(srcDir, files[i]);", "-                    if( files[i].endsWith( \".class\" ) ) {", "-                        if( controlFileTime > srcFile.lastModified() ) {", "-                            if( !dirty ) {", "-                                log( \"Control file \" + controlFile.getAbsolutePath() + \" has been updated. Instrumenting all files...\" );", "+        try {", "+            if( controlFile != null ) {", "+                if( controlFile.exists() && instrumentDir.exists() ) {", "+                    controlFileTime = controlFile.lastModified();", "+                    fileset.setDir( instrumentDir );", "+                    ds = fileset.getDirectoryScanner( project );", "+                    files = ds.getIncludedFiles();", "+                    for( int i = 0; i < files.length; i++ ) {", "+                        File srcFile = new File(srcDir, files[i]);", "+                        if( files[i].endsWith( \".class\" ) ) {", "+                            if( controlFileTime > srcFile.lastModified() ) {", "+                                if( !dirty ) {", "+                                    log( \"Control file \" + controlFile.getAbsolutePath() + \" has been updated. Instrumenting all files...\" );", "+                                }", "+                                dirty = true;", "+                                instrumentall = true;", "-                            dirty = true;", "-                            instrumentall = true;", "+        } catch( Throwable t ) {", "+            System.out.println( \"FATAL\" );", "+            t.printStackTrace();"]}]}