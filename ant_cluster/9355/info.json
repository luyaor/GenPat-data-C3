{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19021d65728b977b78ac3ede3004f342", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f6055c44d8e509c4232dd4859b4152e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "cd466ddf6c6ab04afb63921f8ae25817e9a914a3", "commitAfterChange": "ce89090b466c00d8a218ff572a4cfe92eebc9d96", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public FileNameMapper getImplementation() throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation() throws BuildException", "diff": ["-        if (type == null && classname == null) {", "-            throw new BuildException(\"one of the attributes type or classname is required\");", "+        if (type == null && classname == null && container == null) {", "+            throw new BuildException(", "+                \"nested mapper or \"", "+                + \"one of the attributes type or classname is required\");", "+        }", "+", "+        if (container != null) {", "+            if (type != null || classname != null ||", "+                to != null || from != null) {", "+                throw new BuildException(", "+                    \"for nested mappers, type, classname, to and from\" +", "+                    \" attributes are not allowed\");", "+            }", "+            if (chained != null) {", "+                container.setChained(chained.booleanValue());", "+            }", "+            return container;", "-            throw new BuildException(\"must not specify both type and classname attribute\");", "+            throw new BuildException(", "+                \"must not specify both type and classname attribute\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe69d2cc16737dc08e998028567d057", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "c873f165a416016928b2a63d1300520e7821920e", "commitAfterChange": "fdae4b3eaec0822c0ab1138b9ef8c4de28b2b0b8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (command == null) {", "-            throw new BuildException(\"Command is required.\");", "+        if (command == null && commandResource == null) {", "+            throw new BuildException(\"Command or commandFile is required.\");", "+        /* called once */", "+        if (command != null) {", "+            executeCommand(command);", "+        } else { // read command resource and execute for each command", "+            try {", "+                BufferedReader br = new BufferedReader(new InputStreamReader(commandResource.getInputStream()));", "+                String cmd;", "+                while((cmd = br.readLine()) != null) {", "+                    log(\"cmd : \"+cmd, Project.MSG_INFO);", "+                    executeCommand(cmd);", "+                }", "+                FileUtils.close(br);", "+            } catch (IOException e) {", "+                throw new BuildException(e);", "+            }", "+        }", "+    }", "-            // execute the command", "-            final ChannelExec channel = (ChannelExec) session.openChannel(\"exec\");", "-            channel.setCommand(command);", "-"]}]}