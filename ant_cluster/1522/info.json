{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65745d0468879768e679dec09a9d5e0a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e285ac94f5a5c7dd982338fe0ff533", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "179bc428c9da672a95511cdfe407058c888532e1", "commitAfterChange": "49c2480ab253ca2b0109bb0d9b8ac8432519a9ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Object get( final String key )", "signatureAfterChange": "     public void error( final String message )", "diff": ["-     */", "-    private Object get( final String key )", "-    {", "-        final Object data = m_contextData.get( key );", "-        if( null != data )", "-        {", "-            //            if( data instanceof Resolvable )", "-            //            {", "-            //                return ( (Resolvable)data ).resolve( this );", "-            //            }", "-            return data;", "-        }", "-", "-        // If data was null, check the parent", "-        if( null == m_parent )", "-        {", "-            // There was no parent, and no data", "-            return null;", "-        }", "-", "-        return m_parent.getProperty( key );", "+     */", "+    public void error( final String message )", "+    {", "+        m_logger.error( message );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cb869a3d249cf8f4949a767091c4c85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/api/DefaultTaskContext.java", "commitBeforeChange": "21a88b996ae1899e19a7062eeb3fe214cb2cbe4f", "commitAfterChange": "80712682289dee8200289b46365bdb5066d1d2f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Object resolveValue( final String property )         throws TaskException", "signatureAfterChange": "     public DefaultTaskContext( final Map contextData )", "diff": ["+     */", "+    public DefaultTaskContext( final Map contextData )", "+    {", "+        this( contextData );", "+    }", "-     */", "-    public Object resolveValue( final String property )", "-        throws TaskException", "-    {", "-        try { return PropertyUtil.resolveProperty( property, this, false ); }", "-        catch( final PropertyException pe )", "-        {", "-            throw new TaskException( \"Error resolving \" + property + \" due to \" + pe.getMessage(),", "-                                     pe );", "-        }"]}]}