{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42efca4dd5beea82ec399e5237a11539", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447d444f8d59ef288fea98f170349b67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "ab271c2c606105627480b9abc937c25e5b3822fe", "commitAfterChange": "55641903fb9a4b029554bed4e14b7544d0829f5a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected ExecuteStreamHandler createHandler() throws BuildException", "signatureAfterChange": "     protected ExecuteStreamHandler createHandler() throws BuildException", "diff": ["+        InputStream inputStream = null; ", "+", "+        if (input != null) {", "+            try {", "+                inputStream = new FileInputStream(input);", "+            } catch (FileNotFoundException fne) {", "+                throw new BuildException(\"Cannot read from \" + input, fne,", "+                                         getLocation());", "+            }", "+        }", "-        return new PumpStreamHandler(outputStream, errorStream, true, true);         ", "+        return new PumpStreamHandler(outputStream, errorStream, inputStream, ", "+                                     true, true, true);         "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e987b11d42e5146912581152087a0caa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "5004c56586ce562a13bc34b2b178343ff327c97e", "commitAfterChange": "86b741b60f9b79a540ddec1c61cd330baf565386", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-       AntTelnetClient telnet = new AntTelnetClient();", "+       AntTelnetClient telnet = null;", "+       try {", "+           telnet = new AntTelnetClient();", "+       } finally {", "+           if (telnet != null) {", "+               try {", "+                   telnet.disconnect();", "+               } catch (IOException e) {", "+                   throw new BuildException(\"Error disconnecting from \" ", "+                                            + server);", "+               }", "+           }", "+       }"]}]}