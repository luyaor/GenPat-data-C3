{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e57323a26672c4ff5c11bbb5be8b6d5f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adcc74695202a10622de8a67bfbb6e80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testMissingDirBail()", "signatureAfterChange": "      @Test     public void testMissingDirBail()", "diff": ["+    @Test", "-        expectBuildException(\"testMissingDirBail\", \"not-there doesn't exist\");", "-        assertTrue(getBuildException().getMessage().endsWith(\" does not exist.\"));", "+        try {", "+            buildRule.executeTarget(\"testMissingDirBail\");", "+            fail(\"not-there doesn't exist\");", "+        } catch (BuildException ex) {", "+            assertTrue(ex.getMessage().endsWith(\" does not exist.\"));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3be7d498f2ed4ee44c65d56fb3a0ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testMissingFileBail()", "signatureAfterChange": "      @Test     public void testMissingFileBail()", "diff": ["+    @Test", "-        expectBuildException(\"testMissingFileBail\", \"not-there doesn't exist\");", "-        assertTrue(getBuildException().getMessage()", "-                   .startsWith(\"Warning: Could not find file \"));", "+        try {", "+            buildRule.executeTarget(\"testMissingFileBail\");", "+            fail(\"not-there doesn't exist\");", "+        } catch (BuildException ex) {", "+            assertTrue(ex.getMessage()", "+                    .startsWith(\"Warning: Could not find file \"));", "+        }"]}]}