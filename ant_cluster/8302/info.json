{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c0624e7ccd3cab94006e2d96a11f68e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1007f2bc189bd6e16b568505498e76a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java", "commitBeforeChange": "444a953257a1f383b6e417326194b7556b85ea58", "commitAfterChange": "9d3c394c5d1c57194e8e49cd62837855411cb98f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["-        sb.append(suite.getName());", "-        sb.append(newLine);", "+        int antThreadID = suite.getThread();", "-        try {", "-            out.write(sb.toString().getBytes());", "-            out.flush();", "-        } catch (IOException ioex) {", "-            throw new BuildException(\"Unable to write summary output\", ioex);", "+        sb.append(suite.getName());", "+        /* only write thread id in multi-thread mode so default old way doesn't change output */", "+        if (antThreadID > 0) {", "+            sb.append(\" in thread \");", "+            sb.append(antThreadID);", "+        sb.append(newLine);", "+        writeOutputLine(sb.toString().getBytes());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb7d3b97c1ff8a5b443954faf0a1820", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java", "commitBeforeChange": "444a953257a1f383b6e417326194b7556b85ea58", "commitAfterChange": "9d3c394c5d1c57194e8e49cd62837855411cb98f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+", "+        /* class name needed with multi-threaded execution because", "+           results line may not appear immediately below start line.", "+           only write thread id, class name in multi-thread mode so", "+           the line still looks as much like the old line as possible. */", "+        if (suite.getThread() > 0) {", "+            sb.append(\", Thread: \");", "+            sb.append(suite.getThread());", "+            sb.append(\", Class: \");", "+            sb.append(suite.getName());", "+        }", "-            out.write(sb.toString().getBytes());", "-            out.flush();", "-        } catch (IOException ioex) {", "-            throw new BuildException(\"Unable to write summary output\", ioex);", "+            writeOutputLine(sb.toString().getBytes());"]}]}