{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4116c3e7bf1850f294574624715cffbe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be3304d2a4393acd96059c85a44445b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java", "commitBeforeChange": "028ba47c8246f510012ef061d879d05240b90c71", "commitAfterChange": "efd287b871106edf3efb9e1b96aeea16b85f0549", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testCompilerAdapter()", "signatureAfterChange": "      public void testCompilerAdapter()", "diff": ["-        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "-            || JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)) {", "-            javac.setCompiler(\"javac1.1\");", "-        } else {", "-            javac.setCompiler(\"javac1.4\");", "-        }", "+        javac.setCompiler(\"javac1.4\");", "-        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "-            || JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)) {", "-            assertTrue(adapter instanceof Javac12);", "-        } else {", "-            assertTrue(adapter instanceof Javac13);", "-        }", "+        assertTrue(adapter instanceof Javac13);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a1f121989fe5441808705d4621d5dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "028ba47c8246f510012ef061d879d05240b90c71", "commitAfterChange": "efd287b871106edf3efb9e1b96aeea16b85f0549", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task,                                               Path classpath)         throws BuildException", "signatureAfterChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task,                                               Path classpath)         throws BuildException", "diff": ["-            boolean isClassicCompilerSupported = true;", "-            //as new versions of java come out, add them to this test", "-            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "-                && !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)) {", "-                isClassicCompilerSupported = false;", "-            }", "-", "-                if (isClassicCompilerSupported) {", "-                    return new Javac12();", "-                } else {", "-                    task.log(\"This version of java does \"", "-                                             + \"not support the classic \"", "-                                             + \"compiler; upgrading to modern\",", "-                                             Project.MSG_WARN);", "-                    compilerType = \"modern\";", "-                }", "+                task.log(\"This version of java does \"", "+                                         + \"not support the classic \"", "+                                         + \"compiler; upgrading to modern\",", "+                                         Project.MSG_WARN);", "+                compilerType = \"modern\";", "-                    if (isClassicCompilerSupported) {", "-                        task.log(\"Modern compiler not found - looking for \"", "-                                 + \"classic compiler\", Project.MSG_WARN);", "-                        return new Javac12();", "-                    } else {", "-                        throw new BuildException(\"Unable to find a javac \"", "-                                                 + \"compiler;\\n\"", "-                                                 + MODERN_COMPILER", "-                                                 + \" is not on the \"", "-                                                 + \"classpath.\\n\"", "-                                                 + \"Perhaps JAVA_HOME does not\"", "-                                                 + \" point to the JDK.\\n\"", "-                                + \"It is currently set to \\\"\"", "-                                + JavaEnvUtils.getJavaHome()", "-                                + \"\\\"\");", "-                    }", "+                    throw new BuildException(\"Unable to find a javac \"", "+                                             + \"compiler;\\n\"", "+                                             + MODERN_COMPILER", "+                                             + \" is not on the \"", "+                                             + \"classpath.\\n\"", "+                                             + \"Perhaps JAVA_HOME does not\"", "+                                             + \" point to the JDK.\\n\"", "+                            + \"It is currently set to \\\"\"", "+                            + JavaEnvUtils.getJavaHome()", "+                            + \"\\\"\");"]}]}