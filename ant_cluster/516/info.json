{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f5baf5f67811bea75ed61cfbc75287a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bfade5bc1cb3d5e8fd2a900d81b4603", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "40ec44ea426fd1d89340260acd04b0438b8ad7f0", "commitAfterChange": "5800b026fac0179cb373c1c85261c04bf2b54e8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     \r     public boolean eval() throws BuildException", "signatureAfterChange": "\r     \r     public boolean eval() throws BuildException", "diff": ["-        String actual = getVersion();\r", "+        float actual = getVersion();\r", "-            \r", "-            if (Float.valueOf(actual).compareTo(Float.valueOf(atLeast)) >= 0) {\r", "+            if (actual >= Versions.getVersion(atLeast)) {\r", "-            if (Float.valueOf(actual).compareTo(Float.valueOf(exactly)) == 0) {\r", "+            if (actual == Versions.getVersion(exactly)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed208b073ce23dd64d71a4ef27d84d57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "979cf1d7ca80e0af7e3fb5bdb4dc1679ffd15219", "commitAfterChange": "4c4ad3483de60ef46e02f3b4f217e78422ac5ab4", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void add(Delegate delegate)", "signatureAfterChange": "     public void add(Delegate delegate)", "diff": ["-        synchronized (Delegate.class) {", "-            Hashtable newDelegates = (Hashtable) delegates.clone();", "+        synchronized (delegates) {", "-                List list = (List) newDelegates.get(key);", "+                List list = (List) delegates.get(key);", "-                    newDelegates.put(key, list);", "-                }", "-                if (list.contains(delegate)) {", "+                } else {", "+                    list = new ArrayList(list);", "+                delegates.put(key, Collections.unmodifiableList(list));", "-            delegates = newDelegates;"]}]}