{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16e4c2cc6099dbb9784f8ec14634c8b4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499cca829c1f4eadedb56119867d1ae8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "5d14cd4e493bf7a67181ecab056a00297a7f251c", "commitAfterChange": "21eb88b560f2395f35fcfae3be3c65fcababeb36", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "signatureAfterChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "diff": ["+        final char fileSeparator = File.separatorChar;", "+                        }", "+                        if (forwardSlash && fileSeparator != '/') {", "+                            name = name.replace(fileSeparator, '/');", "+            if (forwardSlash && fileSeparator != '/') {", "+                result[srcIndex + i] = ", "+                    result[srcIndex + i].replace(fileSeparator, '/');", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6933afe9780de14aee95be0fa1c4ddc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/depend/bcel/DependencyVisitor.java", "commitBeforeChange": "ffd2a2d7c25b78eb5f50c182312acb9dcf01ccda", "commitAfterChange": "5722812dbe0cfda11a528c3e6c32b2b2b67b7960", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitConstantNameAndType(ConstantNameAndType obj)", "signatureAfterChange": "     public void visitConstantNameAndType(ConstantNameAndType obj)", "diff": ["-            addClass(classname);", "-            int index = classname.lastIndexOf(\".\");", "-            if (index != -1) {", "-                classname = classname.substring(0, index) + \"$\" +", "-                            classname.substring(index + 1);", "+            // does the class have a package structure", "+            int index = classname.lastIndexOf(\".\");            ", "+            if (index > 0) {", "+                char start;", "+                // check if the package structure is more than 1 level deep", "+                int index2 = classname.lastIndexOf(\".\", index -1);", "+                if (index2 != -1) {", "+                    // class name has more than 1 package level 'com.company.Class'", "+                    start = classname.charAt(index2 + 1);", "+                }", "+                else {", "+                    // class name has only 1 package level 'package.Class'", "+                    start = classname.charAt(0);", "+                }", "+                // Check to see if it's an inner class 'com.company.Class$Inner'", "+                if ((start > 0x40) && (start < 0x5B)) {", "+                    // first letter of the previous segment of the class name 'Class'", "+                    // is upper case ascii. so according to the spec it's an inner class", "+                    classname = classname.substring(0, index) + \"$\" +", "+                            classname.substring(index + 1);                            ", "+                    addClass(classname);", "+                }", "+                else {", "+                    // Add the class in dotted notation 'com.company.Class'                       ", "+                    addClass(classname);", "+                }                    ", "+            }", "+            else {               ", "+                // Add a class with no package 'Class'"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfef0128f83cbecc2794310fc7e4404", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "01acc18c4e2d73d13a23c4f602219d5bfe2a04ba", "commitAfterChange": "33bc8da11841b4c56234262bd17649990f09d751", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private String getJavaExecutableName()", "signatureAfterChange": "      private String getJavaExecutableName()", "diff": ["-        // Look for java in the java.home/../bin directory.  Unfortunately", "+        File jExecutable = null;", "+", "+        // On AIX using IBM's JDK 1.2 the java executable is in", "+        // the java.home/../sh directory", "+        if (Os.isName(\"aix\")) {", "+            jExecutable = new File(System.getProperty(\"java.home\") +", "+                                   \"/../sh/java\" + extension);", "+        }", "+        ", "+        if (jExecutable == null || !jExecutable.exists()) {", "+            // Look for java in the java.home/../bin directory.  ", "+            jExecutable = new File(System.getProperty(\"java.home\") +", "+                                   \"/../bin/java\" + extension);", "+        }", "+", "+        // Unfortunately", "-        java.io.File jExecutable = ", "-            new java.io.File(System.getProperty(\"java.home\") +", "-                             \"/../bin/java\" + extension );"]}]}