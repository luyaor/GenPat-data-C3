{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d847283107fb5f6eebaae5d02d923722", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2176d25fae784b4898fe761f5a6fd3c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java", "commitBeforeChange": "16bd34a356699a332ad7f6b5fc4597fb358735ca", "commitAfterChange": "28dca40128af0c97acd366354a3c96403c72b376", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setProcessOutputStream( InputStream is )         throws TaskException, IOException", "signatureAfterChange": "     public void setProcessOutputStream( final InputStream input )         throws TaskException, IOException", "diff": ["-     */", "-    public void setProcessOutputStream( InputStream is )", "-        throws TaskException, IOException", "-    {", "-", "-        String buffer = \"\";", "-        try", "-        {", "-            BufferedReader reader = new BufferedReader( new InputStreamReader( is ) );", "-            buffer = reader.readLine();", "-            if( buffer != null )", "-            {", "-                log( \"buffer:\" + buffer, Project.MSG_DEBUG );", "-                String taskstring = buffer.substring( buffer.indexOf( ' ' ) ).trim();", "-                taskstring = taskstring.substring( 0, taskstring.lastIndexOf( ' ' ) ).trim();", "-                setTask( taskstring );", "-                log( \"task is \" + getTask(), Project.MSG_DEBUG );", "-            }// end of if ()", "-        }", "-        catch( NullPointerException npe )", "-        {", "-            log( \"error procession stream , null pointer exception\", Project.MSG_ERR );", "-            npe.printStackTrace();", "-            throw new TaskException( npe.getClass().getName() );", "-        }// end of catch", "-        catch( Exception e )", "-        {", "-            log( \"error procession stream \" + e.getMessage(), Project.MSG_ERR );", "-            throw new TaskException( e.getMessage() );", "-        }// end of try-catch", "-", "+     */", "+    public void setProcessOutputStream( final InputStream input )", "+        throws TaskException, IOException", "+    {", "+        try", "+        {", "+            final BufferedReader reader =", "+                new BufferedReader( new InputStreamReader( input ) );", "+            final String buffer = reader.readLine();", "+            if( buffer != null )", "+            {", "+                getLogger().debug( \"buffer:\" + buffer );", "+                String taskstring = buffer.substring( buffer.indexOf( ' ' ) ).trim();", "+                taskstring = taskstring.substring( 0, taskstring.lastIndexOf( ' ' ) ).trim();", "+                setTask( taskstring );", "+                getLogger().debug( \"task is \" + m_task );", "+            }", "+        }", "+        catch( final NullPointerException npe )", "+        {", "+            getLogger().error( \"error procession stream , null pointer exception\", npe );", "+            throw new TaskException( npe.getClass().getName(), npe );", "+        }", "+        catch( final Exception e )", "+        {", "+            getLogger().error( \"error procession stream \" + e.getMessage() );", "+            throw new TaskException( e.getMessage(), e );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65455ad9851af6c28a4d591878ff8728", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java", "commitBeforeChange": "16bd34a356699a332ad7f6b5fc4597fb358735ca", "commitAfterChange": "28dca40128af0c97acd366354a3c96403c72b376", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setProcessOutputStream( InputStream is )         throws TaskException, IOException", "signatureAfterChange": "     public void setProcessOutputStream( final InputStream input )         throws TaskException, IOException", "diff": ["-     */", "-    public void setProcessOutputStream( InputStream is )", "-        throws TaskException, IOException", "-    {", "-", "-        String buffer = \"\";", "-        try", "-        {", "-            BufferedReader reader = new BufferedReader( new InputStreamReader( is ) );", "-            buffer = reader.readLine();", "-            if( buffer != null )", "-            {", "-                log( \"buffer:\" + buffer, Project.MSG_DEBUG );", "-                String taskstring = buffer.substring( buffer.indexOf( ' ' ) ).trim();", "-                taskstring = taskstring.substring( 0, taskstring.lastIndexOf( ' ' ) ).trim();", "-                setTask( taskstring );", "-                log( \"task is \" + getTask(), Project.MSG_DEBUG );", "-            }// end of if ()", "-        }", "-        catch( NullPointerException npe )", "-        {", "-            log( \"error procession stream , null pointer exception\", Project.MSG_ERR );", "-            npe.printStackTrace();", "-            throw new TaskException( npe.getClass().getName() );", "-        }// end of catch", "-        catch( Exception e )", "-        {", "-            log( \"error procession stream \" + e.getMessage(), Project.MSG_ERR );", "-            throw new TaskException( e.getMessage() );", "-        }// end of try-catch", "-", "+     */", "+    public void setProcessOutputStream( final InputStream input )", "+        throws TaskException, IOException", "+    {", "+        try", "+        {", "+            final BufferedReader reader =", "+                new BufferedReader( new InputStreamReader( input ) );", "+            final String buffer = reader.readLine();", "+            if( buffer != null )", "+            {", "+                getLogger().debug( \"buffer:\" + buffer );", "+                String taskstring = buffer.substring( buffer.indexOf( ' ' ) ).trim();", "+                taskstring = taskstring.substring( 0, taskstring.lastIndexOf( ' ' ) ).trim();", "+                setTask( taskstring );", "+                getLogger().debug( \"task is \" + m_task );", "+            }", "+        }", "+        catch( final NullPointerException npe )", "+        {", "+            getLogger().error( \"error procession stream , null pointer exception\", npe );", "+            throw new TaskException( npe.getClass().getName(), npe );", "+        }", "+        catch( final Exception e )", "+        {", "+            getLogger().error( \"error procession stream \" + e.getMessage() );", "+            throw new TaskException( e.getMessage(), e );", "+        }", "+    }"]}]}