{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99f1615b6be91c4740e41ca5f7105b4a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f57ad0304628399b91a1ac2ed0ace8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/LoadFileCmd.java", "commitBeforeChange": "18b63a1b1afc269c237e2bc05de803544e49ad45", "commitAfterChange": "8785091ee1c92874c44324f0429765539987b048", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void run()", "diff": ["-    public void execute() {", "+    public void run() {", "-            String message = _context.getResources().getMessage(", "+            String message = getContext().getResources().getMessage(", "-            _context.getEventBus().", "-                postEvent(new ErrorEvent(_context, message));", "+            getContext().getEventBus().", "+                postEvent(new ErrorEvent(getContext(), message));", "-                ProjectProxy project = new ProjectProxy(_context, _file);", "-                _context.setProject(project);", "+                ProjectProxy project = new ProjectProxy(getContext(), _file);", "+                getContext().setProject(project);", "-                String message = _context.getResources().getMessage(", "+                String message = getContext().getResources().getMessage(", "-                _context.getEventBus().", "-                    postEvent(new ErrorEvent(_context, message, ex));", "+                getContext().getEventBus().", "+                    postEvent(new ErrorEvent(getContext(), message, ex));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "992d35eac29d07da8ee68c10ab11f6fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "1523b24a93d8e4b849afd938ab7eaffcb6031969", "commitAfterChange": "ce1af4647df3f1fab5344250d1751b334e774d77", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model)          throws ExecutionException", "diff": ["-            Object typeInstance = null;", "-            if (libFactory == null) {", "-                typeInstance = typeClass.newInstance();", "-            } else {", "-                typeInstance = libFactory.createTypeInstance(typeClass);", "-            }", "+            Object typeInstance = libFactory.createTypeInstance(typeClass);", "-                configureElement(typeInstance, model);", "+                configureElement(libFactory, typeInstance, model);", "-                configureElement(typeInstance, model);", "+                configureElement(libFactory, typeInstance, model);", "+        } catch (RuntimeException e) {", "+            throw new ExecutionException(e.getClass().getName() + \": \"", "+                 + e.getMessage(), e, model.getLocation());"]}]}