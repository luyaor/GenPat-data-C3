{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f30772474d0638d104481d9c00f20ed0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8264eb918e3589dab167db6a732bcb92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        Path savedPath = path;", "+        Union savedPath = path;", "-                path = new Path(getProject()).createPath();", "-                Object obj = refid.getReferencedObject(getProject());", "-", "-                if (obj instanceof Path) {", "-                    path.setRefid(refid);", "-                } else if (obj instanceof FileSet) {", "-                    path.addFileset((FileSet) obj);", "-                } else if (obj instanceof DirSet) {", "-                    path.addDirset((DirSet) obj);", "-                } else if (obj instanceof FileList) {", "-                    path.addFilelist((FileList) obj);", "-                } else {", "-                    throw new BuildException(\"'refid' does not refer to a \"", "-                         + \"path, fileset, dirset, or filelist.\");", "+                Object o = refid.getReferencedObject(getProject());", "+                if (!(o instanceof ResourceCollection)) {", "+                    throw new BuildException(\"refid '\" + refid.getRefId()", "+                        + \"' does not refer to a resource collection.\");", "+                getPath().add((ResourceCollection) o);", "-                log(\"Set property \" + property + \" = \" + value,", "-                    Project.MSG_VERBOSE);", "-                getProject().setNewProperty(property, value);", "+                if (property == null) {", "+                    log(value);", "+                } else {", "+                    log(\"Set property \" + property + \" = \" + value,", "+                        Project.MSG_VERBOSE);", "+                    getProject().setNewProperty(property, value);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5af1edeae4df50aa86bec0292d5e497", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java", "commitBeforeChange": "8d226e312c364e3465737658341d24cf795c3393", "commitAfterChange": "bc34bb06ca8b29568e31990be726d04559ca2972", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        final String typeName = getTypeName();", "-        final RoleManager roleManager = (RoleManager)getService( RoleManager.class );", "-        final String role = roleManager.getRoleForName( typeName );", "+        final String shorthand = getRoleShorthand();", "-        final ClassLoader classLoader = createClassLoader();", "-        final DefaultTypeFactory factory = new DefaultTypeFactory( classLoader );", "-        factory.addNameClassMapping( m_name, m_className );", "-", "-        final TypeManager typeManager = (TypeManager)getService( TypeManager.class );", "-            typeManager.registerType( role, m_name, factory );", "+            // Locate the deployer, and use it to deploy the type", "+            final Deployer deployer = (Deployer)getService( Deployer.class );", "+            final TypeDeployer typeDeployer = deployer.createDeployer( m_lib );", "+            typeDeployer.deployType( shorthand, m_name, m_className );", "-        catch( final TypeException te )", "+        catch( DeploymentException e )", "-            final String message = REZ.getString( \"typedef.no-register.error\" );", "-            throw new TaskException( message, te );", "+            throw new TaskException( e.getMessage(), e );"]}]}