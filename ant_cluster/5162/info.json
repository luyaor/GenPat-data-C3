{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "590aefcf64952dcb3258ed07d74a3559", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52567a7c75c2eb36315210ebcfacac5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "149ce34431423cd116e5d7175ff281c30565aa6a", "commitAfterChange": "5460755b447223e93e926e11a08e4df4f0e0ddb5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private boolean handleChild(IntrospectionHelper ih,                                 Object parent, UnknownElement child,                                 String childTag,                                 RuntimeConfigurable childWrapper)", "signatureAfterChange": "     private boolean handleChild(IntrospectionHelper ih,                                 Object parent, UnknownElement child,                                 RuntimeConfigurable childWrapper)", "diff": ["-                                String childTag,", "-        if (ih.supportsNestedElement(childTag)) {", "-            Object realChild", "-                = ih.createElement(getProject(), parent, childTag);", "+        // backwards compatibility - element names of nested", "+        // elements have been all lower-case in Ant, except for", "+        // TaskContainers", "+        String childName = child.getTag().toLowerCase(Locale.US);", "+        if (ih.supportsNestedElement(childName)) {", "+            IntrospectionHelper.Creator creator =", "+                ih.getElementCreator(getProject(), parent, childName);", "+            creator.setPolyType(childWrapper.getPolyType());", "+            Object realChild=creator.create();", "+            childWrapper.setCreator(creator);", "-                childTask.setTaskName(childTag);", "-                childTask.setTaskType(childTag);", "+                childTask.setTaskName(childName);", "+                childTask.setTaskType(childName);", "+                childTask.setLocation(child.getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65d61828db44628e34947a644e3dc2f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ExpandProperties.java", "commitBeforeChange": "4b329724cccfa43eeb36cdbd81184bc7b1afa906", "commitAfterChange": "314d4d7ba7942ae0427800f340ff045f9f0b084e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-                queuedData = project.replaceProperties(queuedData);", "+                GetProperty getProperty;", "+                if (propertySet == null) {", "+                    getProperty = PropertyHelper.getPropertyHelper(project);", "+                } else {", "+                    final Properties props = propertySet.getProperties();", "+                    getProperty = new GetProperty() {", "+                        ", "+                        public Object getProperty(String name) {", "+                            return props.getProperty(name);", "+                        }", "+                    };", "+                }", "+                queuedData = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)", "+                        .getExpanders(), getProperty).parseProperties(queuedData).toString();"]}]}