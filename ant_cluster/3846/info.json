{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2890e65c9ea91808324353fb17f2d8b5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206d89a9385a67e183863735d55b519f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected ParsedUri parseURI( String uri ) throws FileSystemException", "signatureAfterChange": "     protected ParsedUri parseUri( final FileObject baseFile,                                   final String uriStr )         throws FileSystemException", "diff": ["-    protected ParsedUri parseURI( String uri ) throws FileSystemException", "+    protected ParsedUri parseUri( final FileObject baseFile,", "+                                  final String uriStr )", "+        throws FileSystemException", "-        return m_parser.parseUri( uri );", "+        // Parse the URI", "+        final ParsedZipUri uri = m_parser.parseZipUri( uriStr );", "+", "+        // Make the URI canonical", "+", "+        // Resolve the Zip file name", "+        final String fileName = uri.getZipFileName();", "+        final FileObject file = getContext().resolveFile( baseFile, fileName );", "+        uri.setZipFile( file );", "+", "+        // Rebuild the root URI", "+        final String rootUri = m_parser.buildRootUri( uri );", "+        uri.setRootUri( rootUri );", "+", "+        return uri;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35a7a6245947799137aef2ba6994e149", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "a8912559283684c24c7796d4b08f3a7a816b955b", "commitAfterChange": "e2e5aeee3a875756d0cc4ff3128fbc42d91b3edc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void execute( final Project project,                           final String targetName,                           final ProjectEntry entry )         throws TaskException", "signatureAfterChange": "     private void execute( final Project project,                           final String targetName,                           final ProjectEntry entry )         throws TaskException", "diff": ["+        final int index = targetName.indexOf( \"->\" );", "+        if( -1 != index )", "+        {", "+            final String name = targetName.substring( 0, index );", "+            final String otherTargetName = targetName.substring( index + 2 );", "+", "+            final Project otherProject = getProject( name, project );", "+            final ProjectEntry otherEntry = getProjectEntry( otherProject );", "+", "+            //Execute target in referenced project ", "+            execute( otherProject, otherTargetName, otherEntry );", "+            return;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382c9a154c123712e15b48f2e734f3b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "af97c64cb1b6bea8dd0d7aa333a51c7613cbe5e9", "commitAfterChange": "3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 35, "signatureBeforeChange": "         public void onStartElement(String uri, String propType, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String propType, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "diff": ["-", "+            RuntimeConfigurable2 parentWrapper=context.currentWrapper();", "+            RuntimeConfigurable2 wrapper=null;", "+                Object element;", "+                Object parent=parentWrapper.getProxy();", "+                if (parent instanceof TaskAdapter) {", "+                    parent = ((TaskAdapter) parent).getProxy();", "+                }", "+                ", "-                    uc.setProject(context.project);", "+                    uc.setProject(context.getProject());", "-                    element = ih.createElement(context.project, parent, elementName);", "+                    element = ih.createElement(context.getProject(), parent, elementName);", "+            context.pushWrapper( wrapper );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3841ba39538de5f0990a75cea1f7691", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/ConverterDef.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            throw new TaskException( \"Must specify classname parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-classname.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the source-type parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-source.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the destination-type parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-destination.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the lib parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-lib.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Failed to register converter \" + m_classname, e );", "+            final String message = REZ.getString( \"converterdef.no-register.error\", m_classname );", "+            throw new TaskException( message, e );"]}]}