{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5293eb4a9521bbdc1db904ce38aca65", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8948f1b8297ecc93810e7a4a98700a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/remote/TestRunner.java", "commitBeforeChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "commitAfterChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected Test[] getSuites() throws Exception", "signatureAfterChange": "     protected Map getSuites() throws Exception", "diff": ["-    protected Test[] getSuites() throws Exception {", "+    protected Map getSuites() throws Exception {", "-        final Vector suites = new Vector(count);", "+        final Map suites = new HashMap();", "-            String classname = (String) testClassNames.elementAt(i);", "+            String classname = (String) testClassNames.get(i);", "-                    suites.addElement(test);", "+                    suites.put(classname, test);", "-        Test[] array = new Test[suites.size()];", "-        suites.copyInto(array);", "-        return array;", "+        return suites;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f07f9589e86e7256ad9eeac45ee494", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "e2ec6a3988643fe6f3c8fabd5b8656e4209eaa1d", "commitAfterChange": "42c6021a9e42f49f50a3f4a170590d15a9b8c3db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private TaskContext createBaseContext()         throws TaskException", "signatureAfterChange": "      private PropertyStore createBaseStore()         throws Exception", "diff": ["-    private TaskContext createBaseContext()", "-        throws TaskException", "+    private PropertyStore createBaseStore()", "+        throws Exception", "-        final TaskContext context = new DefaultTaskContext( null, null, null );", "+        final DefaultPropertyStore store = new DefaultPropertyStore();", "-            context.setProperty( names[ i ], value );", "+            store.setProperty( names[ i ], value );", "-        addToContext( context, System.getProperties() );", "+        addToStore( store, System.getProperties() );", "-        return context;", "+        return store;"]}]}