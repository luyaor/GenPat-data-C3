{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd46f19b88c9e749faa87aca80dd3f16", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c942ece6438124b3b5c34289a38f7d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "8a86b8228ff5523912422a5792c5788bc95ff228", "commitAfterChange": "3d67036913aeb416479a16d21f2792575f7b7202", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void add12ArgIfNotEmpty(String key, String value)", "signatureAfterChange": "     private void addArgIfNotEmpty(String key, String value)", "diff": ["-    private void add12ArgIfNotEmpty(String key, String value) {", "-        if (!javadoc1) {", "-            if (value != null && value.length() != 0) {", "-                cmd.createArgument().setValue(key);", "-                cmd.createArgument().setValue(value);", "-            } else {", "-                log(\"Warning: Leaving out empty argument '\" + key + \"'\",", "-                    Project.MSG_WARN);", "-            }", "-        }", "-    }", "+    private void addArgIfNotEmpty(String key, String value) {", "+        if (value != null && value.length() != 0) {", "+            cmd.createArgument().setValue(key);", "+            cmd.createArgument().setValue(value);", "+        } else {", "+            log(\"Warning: Leaving out empty argument '\" + key + \"'\",", "+                Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ff1850f03f9b76ffde1df3fd77234a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "8efca5a58020f66fafe94ec85550c80516e60837", "commitAfterChange": "c012d33f03aa6d0fa3d52fdac1e4b42851e927ee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void tearDown()", "signatureAfterChange": "      public void tearDown()", "diff": ["-        if (supportsSymlinks && !testfail) {", "-            executeTarget(\"teardown\");", "-        }", "+        executeTarget(\"teardown\");"]}]}