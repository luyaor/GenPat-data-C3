{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc771722ea500b914b2a24f9016c2943", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277c0374abc6ea4c5f3b170f23b8a64c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java", "commitBeforeChange": "1b72f9a64919a7aa775038eaf63d8c4c96109ee3", "commitAfterChange": "1b510286c2028c6d9ab28e190e06adb510b93791", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       public void off_testFailOnError()", "signatureAfterChange": "       public void off_testFailOnError()", "diff": ["-      try {", "-        expectLogContaining(\"testFailOnError\", \"Unable to process image stream\");", "-      }", "-      catch (RuntimeException re){", "-        assertTrue(\"Run time exception should say 'Unable to process image stream'. :\" + re.toString(),re.toString().indexOf(\"Unable to process image stream\") > -1);", "-      }", "+        try {", "+            expectLogContaining(\"testFailOnError\", ", "+                                \"Unable to process image stream\");", "+        }", "+        catch (RuntimeException re){", "+            assertTrue(\"Run time exception should say \"", "+                       + \"'Unable to process image stream'. :\" ", "+                       + re.toString(),", "+                       re.toString()", "+                       .indexOf(\"Unable to process image stream\") > -1);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6196184e268bbb2965c4e55e562b1d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient.java", "commitBeforeChange": "00ec1c435af8d15b42cb779373026ceedea92e59", "commitAfterChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void executeJava() throws BuildException", "signatureAfterChange": "     protected void executeJava() throws BuildException", "diff": ["-            if ( version == BorlandDeploymentTool.BES)  {", "-                throw new BuildException(\"java mode is supported only for previous version <=\"+BorlandDeploymentTool.BAS);", "+            if (version == BorlandDeploymentTool.BES)  {", "+                throw new BuildException(\"java mode is supported only for \"", "+                    + \"previous version <=\" + BorlandDeploymentTool.BAS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ed889f79aa7da819bf412d7bffdc85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public String read(BufferedReader reader) throws ManifestException, IOException", "signatureAfterChange": "         public String read(BufferedReader reader)               throws ManifestException, IOException", "diff": ["-        public String read(BufferedReader reader) throws ManifestException, IOException {", "+        public String read(BufferedReader reader) ", "+             throws ManifestException, IOException {", "-                            // a continuation on the first line is a continuation of the name - concatenate", "-                            // this line and the name", "+                            // a continuation on the first line is a ", "+                            // continuation of the name - concatenate this ", "+                            // line and the name", "+                        } else {", "+                            throw new ManifestException(\"Can't start an \" ", "+                                + \"attribute with a continuation line \" + line);", "-                        else {", "-                            throw new ManifestException(\"Can't start an attribute with a continuation line \" + line);", "-                        }", "-                    }", "-                    else {", "+                    } else {", "-                }", "-                else {", "+                } else {"]}]}