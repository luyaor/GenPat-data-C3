{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ed10a67006ea6a4ec649dd563a45ae5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "161e24a9bf01281338d48ad8ae6801aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/clearcase/CCRmtype.java", "commitBeforeChange": "f9a5ef3610dbe3c461e46acf15678475a3b814b1", "commitAfterChange": "5f41947fea063436dbeb9b190662016f939e9554", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        if (!getFailOnErr()) {", "+            getProject().log(\"Ignoring any errors that occur for: \"", "+                    + getTypeSpecifier(), Project.MSG_VERBOSE);", "+        }", "-        if (Execute.isFailure(result)) {", "+        if (Execute.isFailure(result) && getFailOnErr()) {", "-            throw new BuildException(msg, location);", "+            throw new BuildException(msg, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cb40a95ed9b6fde5053f105a0948986", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/clearcase/CCMklbtype.java", "commitBeforeChange": "f9a5ef3610dbe3c461e46acf15678475a3b814b1", "commitAfterChange": "5f41947fea063436dbeb9b190662016f939e9554", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        if (!getFailOnErr()) {", "+            getProject().log(\"Ignoring any errors that occur for: \"", "+                    + getTypeSpecifier(), Project.MSG_VERBOSE);", "+        }", "-        if (Execute.isFailure(result)) {", "+        if (Execute.isFailure(result) && getFailOnErr()) {", "-            throw new BuildException(msg, location);", "+            throw new BuildException(msg, getLocation());"]}]}