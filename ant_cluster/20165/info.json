{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a843703e2b4476661789c11bfaebf2b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8f606b0b371648af50d8ac4a8aed14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "00d986bfdc4e0fd94afd90429515632e0d702e70", "commitAfterChange": "b5324fb76804f9e6ea2e7b7e5fda34874fd514cc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public static String replaceProperties(Project project, String value,           Hashtable keys) throws BuildException", "signatureAfterChange": "      public static String replaceProperties(Project project, String value,           Hashtable keys) throws BuildException", "diff": ["-         Hashtable keys) throws BuildException {", "-        if (value == null) {", "-            return null;", "-        }", "-", "-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "-        parsePropertyString(value, fragments, propertyRefs);", "-", "-        StringBuffer sb = new StringBuffer();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-        while (i.hasMoreElements()) {", "-            String fragment = (String) i.nextElement();", "-            if (fragment == null) {", "-                String propertyName = (String) j.nextElement();", "-                if (!keys.containsKey(propertyName)) {", "-                    project.log(\"Property ${\" + propertyName ", "-                        + \"} has not been set\", Project.MSG_VERBOSE);", "-                }", "-                fragment = (keys.containsKey(propertyName)) ", "-                    ? (String) keys.get(propertyName) ", "-                    : \"${\" + propertyName + \"}\"; ", "-            }", "-            sb.append(fragment);", "-        }                        ", "-        ", "-        return sb.toString();", "+         Hashtable keys) throws BuildException", "+    {", "+        PropertyHelper ph=PropertyHelper.getPropertyHelper(project);", "+        return ph.replaceProperties( null, value, keys);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa909a1c53a525e6080d337feaa3018c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-        File realFile = file;", "-        if (library != null) {", "-            if (file != null) {", "-                String msg = \"You cannot specify both file and library.\";", "-                throw new BuildException(msg, location);", "-            }", "-            // For the time being libraries live in $ANT_HOME/antlib.", "-            // The idea being that we would not load all the jars there anymore", "-            String home = project.getProperty(\"ant.home\");", "-", "-            if (home == null) {", "-                throw new BuildException(\"ANT_HOME not set as required.\");", "-            }", "-", "-            realFile = new File(new File(home, \"antlib\"), library);", "-        }", "-        else if (file == null) {", "-            String msg = \"Must specify either library or file attribute.\";", "+        if (file == null && classpath == null) {", "+            String msg =", "+                \"Must specify either library or file attribute or classpath.\";", "-        if (!realFile.exists()) {", "-            String msg = \"Cannot find library: \" + realFile;", "+        if (file != null && !file.exists()) {", "+            String msg = \"Cannot find library: \" + file;", "-        //open the descriptor", "-        InputStream is = getDescriptor(realFile);", "-", "-        if (is == null) {", "-            String msg = \"Missing descriptor on library: \" + realFile;", "-            throw new BuildException(msg, location);", "-        }", "-", "-        ", "-        ClassLoader classloader=null;", "-        if (useCurrentClassloader && classpath != null) {", "-            log(\"ignoring the useCurrentClassloader option as a classpath is defined\",", "-                    Project.MSG_WARN);", "-            useCurrentClassloader=false;", "-        }", "-        if (!useCurrentClassloader) {", "-            classloader = makeClassLoader(realFile);", "-        }", "-", "-        //parse it and evaluate it.", "-        evaluateDescriptor(classloader, processAliases(), is);", "+        loadDefinitions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab27fd917ac65b5686233d8d90d4a61e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "1764b5fda8fe5b4166269d73a00f975b4c7fb75d", "commitAfterChange": "1e599c6651b3baafbf807462fe32a975b416f1d1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String replaceProperties(String ns, String value, Hashtable keys) throws BuildException", "signatureAfterChange": "     public String replaceProperties(String ns, String value, Hashtable keys) throws BuildException", "diff": ["-        if (value == null || value.indexOf('$') == -1) {", "+        return replaceProperties(value);", "+    }", "-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "-        parsePropertyString(value, fragments, propertyRefs);", "-", "-        StringBuffer sb = new StringBuffer();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-", "-        while (i.hasMoreElements()) {", "-            String fragment = (String) i.nextElement();", "-            if (fragment == null) {", "-                String propertyName = (String) j.nextElement();", "-                Object replacement = null;", "-", "-                // try to get it from the project or keys", "-                // Backward compatibility", "-                if (keys != null) {", "-                    replacement = keys.get(propertyName);", "-                }", "-                if (replacement == null) {", "-                    replacement = getProperty(ns, propertyName);", "-                }", "-                if (replacement == null) {", "-                    project.log(\"Property \\\"\" + propertyName", "-                            + \"\\\" has not been set\", Project.MSG_VERBOSE);", "-                }", "-                fragment = (replacement != null)", "-                        ? replacement.toString() : \"${\" + propertyName + \"}\";", "-            sb.append(fragment);"]}]}