{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b891f7159586fd58afcf9f4ea1ea00ff", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "074db4fec80c31ba50291f56f9fd7783", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "8c8d8c5f27e49e1fc7a40cc29a1293b7e9344107", "commitAfterChange": "9ec1930ae7761d9f977d737ea678282f0d1b06e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void readFile() throws BuildException", "signatureAfterChange": "      private void readFile() throws BuildException", "diff": ["-                FileInputStream fis = new FileInputStream(m_propertyfile);", "-                BufferedInputStream bis = new BufferedInputStream(fis);", "-                m_properties.load(bis);", "-                if (fis != null) {", "-                    fis.close();", "+                FileInputStream fis = null;", "+                try {", "+                    fis = new FileInputStream(m_propertyfile);", "+                    BufferedInputStream bis = new BufferedInputStream(fis);", "+                    m_properties.load(bis);", "+                } finally {", "+                    if (fis != null) {", "+                        fis.close();", "+                    }", "-                FileOutputStream out = new FileOutputStream(m_propertyfile.getAbsolutePath());", "-                out.flush();", "-                out.close();", "+                FileOutputStream out = null;", "+                try {", "+                    out = new FileOutputStream(m_propertyfile.getAbsolutePath());", "+                    out.flush();", "+                } finally {", "+                    if (out != null) {", "+                        out.close();", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0720511e01d30a1e3ce3b2400f5d1be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/AbstractSshMessage.java", "commitBeforeChange": "83b7e75aa816063b22de558a2fb64883d977dd47", "commitAfterChange": "4041791887e6e3ee08c82c6e437495cab8762526", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected final int trackProgress(int filesize, int totalLength,                                        int percentTransmitted)", "signatureAfterChange": "     protected final int trackProgress(int filesize, int totalLength,                                        int percentTransmitted)", "diff": ["-        int percent = (int) Math.round(Math.floor((totalLength ", "-                                                   / (double)filesize) ", "-                                                  * 100));", "+        int percent = (int) Math.round(Math.floor((totalLength /", "+                                                   (double)filesize) * 100));", "+", "-            if (filesize < 1048576 && (percent % 10 != 0)) {", "-                // do not track between tenths", "+            if (filesize < 1048576) {", "+                if (percent % 10 == 0) {", "+                    if (percent == 100) {", "+                        System.out.println(\" 100%\");", "+                    } else {", "+                        System.out.print(\"*\");", "+                    }", "+                }", "-                log(\"\" + percent + \"%\");", "+                if (percent == 50) {", "+                    System.out.println(\" 50%\");", "+                } else if (percent == 100) {", "+                    System.out.println(\" 100%\");", "+                } else {", "+                    System.out.print(\".\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df62c275f52ee1907a63053236282236", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "c34b9ee41bcc31359f581d04d38e0b5615eee21b", "commitAfterChange": "df6e16ab5f83605b7bb379d04af8eb4be0e2a858", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            FileOutputStream fos = new FileOutputStream(dest);", "-", "-            byte[] buffer = new byte[100 * 1024];", "-            int length;", "-", "-            while ((length = is.read(buffer)) >= 0) {", "-                fos.write(buffer, 0, length);", "-                if (verbose) {", "-                    System.out.print(\".\");", "+            FileOutputStream fos = new FileOutputStream(dest);", "+            try {", "+                byte[] buffer = new byte[100 * 1024];", "+                int length;", "+                ", "+                while ((length = is.read(buffer)) >= 0) {", "+                    fos.write(buffer, 0, length);", "+                    if (verbose) {", "+                        System.out.print(\".\");", "+                    }", "+                if (verbose) {", "+                    System.out.println();", "+                }", "+            } finally {", "+                if (fos != null) {", "+                    fos.close();", "+                }", "+                is.close();", "-            if (verbose) {", "-                System.out.println();", "-            }", "-            fos.close();", "-            is.close();"]}]}