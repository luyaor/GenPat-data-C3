{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cec4ebf040f011c7a5b00689205a2bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af17c20597499c0cc30b126fa502286", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "b131c2950dc47a53c9b2e18829b15c1821d82e9c", "commitAfterChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void configureLiaison( File stylesheet )         throws TaskException", "signatureAfterChange": "     protected void configureLiaison( File stylesheet )         throws TaskException", "diff": ["-                m_liaison.addParam( param.getName(), param.getExpression() );", "+", "+                final String expression = param.getExpression();", "+                if( expression == null )", "+                {", "+                    throw new TaskException( \"Expression attribute is missing.\" );", "+                }", "+", "+                final String name = param.getName();", "+                if( name == null )", "+                {", "+                    throw new TaskException( \"Name attribute is missing.\" );", "+                }", "+", "+                m_liaison.addParam( name, expression );", "-            throw new TaskException( \"Error\", e );", "+            throw new TaskException( e.getMessage(), e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f7c5bbad406d265cef4ce17bf35b8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/ValidatorErrorHandler.java", "commitBeforeChange": "59ee05a8da57796736fab2c984f456df93c6aaf5", "commitAfterChange": "3dd91d101c74df4f4f1f9b574f3a4f6dd1d8a0a4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private String getMessage( final SAXParseException spe )", "signatureAfterChange": "      private String getMessage( final SAXParseException spe )", "diff": ["-        final String sysID = spe.getSystemId();", "-        if( sysID != null )", "+        final String systemID = spe.getSystemId();", "+        if( null != systemID )", "+            final int line = spe.getLineNumber();", "+            final int col = spe.getColumnNumber();", "+", "-                final int line = spe.getLineNumber();", "-                final int col = spe.getColumnNumber();", "-                return new URL( sysID ).getFile() +", "+                //Build a message using standard compiler", "+                //error format", "+                return new URL( systemID ).getFile() +", "-            catch( MalformedURLException mfue )", "+            catch( final MalformedURLException mue )"]}]}