{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf06ce33cccc26cfc934574de18d584a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5369474fc44958395b9efc74be025368", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "6eca61f317d03db4bcef364adc0b99241b236210", "commitAfterChange": "30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static void configureTasks(Project project,                                        Target target,                                        Element targetElement)         throws BuildException", "signatureAfterChange": "      private static void configureTasks(Project project,                                        Target target,                                        Element targetElement)         throws BuildException", "diff": ["-                // special case - no target in a target.", "-                // hack to allow this method to set \"init\" target", "-                // using root element", "-                if( ! taskType.equals( \"target\" ) ) {", "-                    // XXX", "-                    // put in some sanity checking", "+                // XXX", "+                // put in some sanity checking", "-                    Task task = project.createTask(taskType);", "+                Task task = project.createTask(taskType);", "-                    // get the attributes of this element and reflect them", "-                    // into the task", "+                // get the attributes of this element and reflect them", "+                // into the task", "-                    NamedNodeMap nodeMap = element.getAttributes();", "-                    configure(project, task, nodeMap);", "-                    task.init();", "-                    task.setTarget(target);", "-                    target.addTask(task);", "+                NamedNodeMap nodeMap = element.getAttributes();", "+                configure(project, task, nodeMap);", "+                task.init();", "+                task.setTarget(target);", "+                target.addTask(task);", "-                    processNestedProperties(project, task, element);", "-                }", "+                processNestedProperties(project, task, element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66feed67d44263ec70bc194b5e84ecb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "7b6a46d13193059c7ea056ad646fe5620e2bb79d", "commitAfterChange": "740ed5fbfbb7f59db596062f9e853fba40a65722", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void printResults(PrintStream out) throws java.sql.SQLException", "signatureAfterChange": "     protected void printResults(PrintStream out) throws java.sql.SQLException", "diff": ["-        do {", "-            rs = statement.getResultSet();", "-            if (rs != null) {", "-                log(\"Processing new result set.\", Project.MSG_VERBOSE);", "-                ResultSetMetaData md = rs.getMetaData();", "-                int columnCount = md.getColumnCount();", "-                StringBuffer line = new StringBuffer();", "-                if (showheaders) {", "-                    for (int col = 1; col < columnCount; col++) {", "-                         line.append(md.getColumnName(col));", "-                         line.append(\",\");", "-                    }", "-                    line.append(md.getColumnName(columnCount));", "-                    out.println(line);", "-                    line = new StringBuffer();", "+        rs = statement.getResultSet();", "+        if (rs != null) {", "+            log(\"Processing new result set.\", Project.MSG_VERBOSE);", "+            ResultSetMetaData md = rs.getMetaData();", "+            int columnCount = md.getColumnCount();", "+            StringBuffer line = new StringBuffer();", "+            if (showheaders) {", "+                for (int col = 1; col < columnCount; col++) {", "+                     line.append(md.getColumnName(col));", "+                     line.append(\",\");", "-                while (rs.next()) {", "-                    boolean first = true;", "-                    for (int col = 1; col <= columnCount; col++) {", "-                        String columnValue = rs.getString(col);", "-                        if (columnValue != null) {", "-                            columnValue = columnValue.trim();", "-                        }", "+                line.append(md.getColumnName(columnCount));", "+                out.println(line);", "+                line = new StringBuffer();", "+            }", "+            while (rs.next()) {", "+                boolean first = true;", "+                for (int col = 1; col <= columnCount; col++) {", "+                    String columnValue = rs.getString(col);", "+                    if (columnValue != null) {", "+                        columnValue = columnValue.trim();", "+                    }", "-                        if (first) {", "-                            first = false;", "-                        } else {", "-                            line.append(\",\");", "-                        }", "-                        line.append(columnValue);", "+                    if (first) {", "+                        first = false;", "+                    } else {", "+                        line.append(\",\");", "-                    out.println(line);", "-                    line = new StringBuffer();", "+                    line.append(columnValue);", "+                out.println(line);", "+                line = new StringBuffer();", "-        while (statement.getMoreResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eefa499ab1e99079cf908be9a4d5af9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "cff40408232e6234faf34e98c7dc0f2554be27b5", "commitAfterChange": "ff5195fa54146617ec5805b9e2863bc1dcb8d150", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private static void doReportProxy(PrintStream out)", "signatureAfterChange": "     private static void doReportProxy(PrintStream out)", "diff": ["-        if(JavaEnvUtils.getJavaVersionNumber()>=15) {", "-            printProperty(out, ProxySetup.USE_SYSTEM_PROXIES);", "-        }", "+        printProperty(out, ProxySetup.USE_SYSTEM_PROXIES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81b66f4d5b745801d024052861f6ef9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "36787ae6b81da254883de6b417da1317f87cf4f0", "commitAfterChange": "08284bc7aa7d066544b30974231240c9b73597eb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void endBlock() throws IOException", "signatureAfterChange": "      private void endBlock() throws IOException", "diff": ["-        /* Now a single bit indicating randomisation. */", "-        if (this.blockRandomised) {", "-            bsW(1, 1);", "-        } else {", "-            bsW(1, 0);", "-        }", "+        /* Now a single bit indicating no randomisation. */", "+        bsW(1, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b967f62e2a4efc23fb7a4494fa380000", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "6eca61f317d03db4bcef364adc0b99241b236210", "commitAfterChange": "30d8dc80a562b0c3c7db85f1fbf501dcf9ffa706", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void configureTargets(Project project, Element root)         throws BuildException", "signatureAfterChange": "      private static void configureTargets(Project project, Element root)         throws BuildException", "diff": ["-", "-            // init is done already", "-            if( targetName.equals(\"init\") )", "-                continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d486ed604b048470552b91432343a038", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "2fa45322bfe1844466290afbb428cc0e6f8326b1", "commitAfterChange": "7f2456889917312606d26c68b9cbb32cbaba48b7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "     protected static void grabFilesAndDirs(String file, List dirs,                                                  List files)         throws IOException", "signatureAfterChange": "     protected static void grabFilesAndDirs(String file, List dirs,                                                  List files)         throws IOException", "diff": ["-                // META-INF would be skipped anyway, avoid index for", "-                // manifest-only jars.", "-                if (!name.startsWith(\"META-INF/\")) {", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db379b9a8f396def3fca79eb82c1e71f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/repository/Libraries.java", "commitBeforeChange": "569f22aceb8dfbe9b8876721d313edbbbfc2a3a2", "commitAfterChange": "bc09dd927519aac3009560b06caad116865b9d3c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (isOffline()) {", "-            log(\"No retrieval, task is \\\"offline\\\"\");", "-        } else {", "-            doExecute();", "-        }", "+        //execute", "+        doExecute();"]}]}