{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60cd3ea0b8ae02a8b2cdbb9d115489e0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfcbd0abf9cb295e4517e264c24d2438", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XalanLiaison.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void transform(String infile, String outfile) throws Exception", "signatureAfterChange": "      public void transform(File infile, File outfile) throws Exception", "diff": ["-", "-    public void transform(String infile, String outfile) throws Exception {", "-        processor.process(new XSLTInputSource(normalize(infile)), xslSheet,", "-                        new XSLTResultTarget(outfile));", "+    public void transform(File infile, File outfile) throws Exception {", "+        FileInputStream fis = null;", "+        FileOutputStream fos = null;", "+        FileInputStream xslStream = null;", "+        try {", "+            xslStream = new FileInputStream(stylesheet);", "+            fis = new FileInputStream(infile);", "+            fos = new FileOutputStream(outfile);", "+            // systemid such as file:/// + getAbsolutePath() are considered", "+            // invalid here...", "+            XSLTInputSource xslSheet = new XSLTInputSource(xslStream);", "+            xslSheet.setSystemId(stylesheet.getAbsolutePath());", "+            XSLTInputSource src = new XSLTInputSource(fis);", "+            src.setSystemId(infile.getAbsolutePath());", "+            XSLTResultTarget res = new XSLTResultTarget(fos);", "+            processor.process(src, xslSheet, res);", "+        } finally {", "+            // make sure to close all handles, otherwise the garbage", "+            // collector will close them...whenever possible and", "+            // Windows may complain about not being able to delete files.", "+            try {", "+                if (xslStream != null){", "+                    xslStream.close();", "+                }", "+            } catch (IOException ignored){}", "+            try {", "+                if (fis != null){", "+                    fis.close();", "+                }", "+            } catch (IOException ignored){}", "+            try {", "+                if (fos != null){", "+                    fos.close();", "+                }", "+            } catch (IOException ignored){}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7775cd34b03d40ce360e6df55090a04", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void transform(String infile, String outfile) throws Exception", "signatureAfterChange": "      public void transform(File infile, File outfile) throws Exception", "diff": ["-    public void transform(String infile, String outfile) throws Exception {", "-        FileOutputStream out = new FileOutputStream(outfile);", "+    public void transform(File infile, File outfile) throws Exception {", "+        FileInputStream fis = null;", "+        FileOutputStream fos = null;", "-            transformer.transform(new StreamSource(normalize(infile)), ", "-                                  new StreamResult(out));", "+            fis = new FileInputStream(infile);", "+            fos = new FileOutputStream(outfile);", "+            StreamSource src = new StreamSource(fis);", "+            src.setSystemId(getSystemId(infile));", "+            StreamResult res = new StreamResult(fos);", "+            // not sure what could be the need of this...", "+            res.setSystemId(getSystemId(outfile));", "+", "+            transformer.transform(src, res);", "-            out.close();", "+            // make sure to close all handles, otherwise the garbage", "+            // collector will close them...whenever possible and", "+            // Windows may complain about not being able to delete files.", "+            try {", "+                if (xslStream != null){", "+                    xslStream.close();", "+                }", "+            } catch (IOException ignored){}", "+            try {", "+                if (fis != null){", "+                    fis.close();", "+                }", "+            } catch (IOException ignored){}", "+            try {", "+                if (fos != null){", "+                    fos.close();", "+                }", "+            } catch (IOException ignored){}"]}]}