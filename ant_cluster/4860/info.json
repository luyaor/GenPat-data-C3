{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "310362ea0983152509ed9df70b67039f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c2e0007abb2e1a1310c4e190c590807", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Taskdef.java", "commitBeforeChange": "91f7d992dc20124771b9a9709df15b4295c825ef", "commitAfterChange": "68f6b984a991fd9cbf20bdfe6c1abc5b1a410588", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "     protected void addDefinition(String name, Class c)", "diff": ["-", "-    public void execute() throws BuildException {", "-        if (name==null || value==null ) {", "-            String msg = \"name or classname attributes of taskdef element \"", "-                + \"are undefined\";", "-            throw new BuildException(msg);", "-        }", "-        try {", "-            ClassLoader loader = null;", "-            if (classpath != null) {", "-                AntClassLoader al = new AntClassLoader(project, classpath,", "-                                                       false);", "-                // need to load Task via system classloader or the new", "-                // task we want to define will never be a Task but always", "-                // be wrapped into a TaskAdapter.", "-                al.addSystemPackageRoot(\"org.apache.tools.ant\");", "-                loader = al;", "-            } else {", "-                loader = this.getClass().getClassLoader();", "-            }", "-", "-            Class taskClass = null;", "-            if (loader != null) {", "-                taskClass = loader.loadClass(value);", "-                AntClassLoader.initializeClass(taskClass);", "-            } else {", "-                taskClass = Class.forName(value);", "-            }", "-            project.addTaskDefinition(name, taskClass);", "-        } catch (ClassNotFoundException cnfe) {", "-            String msg = \"taskdef class \" + value +", "-                \" cannot be found\";", "-            throw new BuildException(msg, cnfe, location);", "-        } catch (NoClassDefFoundError ncdfe) {", "-            String msg = \"taskdef class \" + value +", "-                \" cannot be found\";", "-            throw new BuildException(msg, ncdfe, location);", "-        }", "-    }", "+public class Taskdef extends Definer {", "+    protected void addDefinition(String name, Class c) {", "+        project.addTaskDefinition(name, c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3845ce92ddce727e3f39cf8ca8c7f06a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "efe6a8f90982754250f1ca93b5bffe24b468284d", "commitAfterChange": "218ad5fc4d8c225edfb15dfd536904c6ec3fd8a3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+            AntClassLoader al = null;", "-                AntClassLoader al = new AntClassLoader(project, classpath,", "-                                                       false);", "-                // need to load Task via system classloader or the new", "-                // task we want to define will never be a Task but always", "-                // be wrapped into a TaskAdapter.", "-                al.addSystemPackageRoot(\"org.apache.tools.ant\");", "-                loader = al;", "+                al = new AntClassLoader(project, classpath, false);", "-                loader = this.getClass().getClassLoader();", "+                al = new AntClassLoader(project, Path.systemClasspath, false);", "+            // need to load Task via system classloader or the new", "+            // task we want to define will never be a Task but always", "+            // be wrapped into a TaskAdapter.", "+            al.addSystemPackageRoot(\"org.apache.tools.ant\");", "+            loader = al;", "-            Class c = null;", "-            if (loader != null) {", "-                c = loader.loadClass(value);", "-                AntClassLoader.initializeClass(c);", "-            } else {", "-                c = Class.forName(value);", "-            }", "+            Class c = loader.loadClass(value);", "+            AntClassLoader.initializeClass(c);"]}]}