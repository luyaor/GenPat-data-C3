{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55c415ca71b31ae16879ca781a36d1eb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "721cb47223800ada2ff086adcc75431e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "commitAfterChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected void zipFile(File file, ZipOutputStream zOut, String vPath)         throws IOException", "signatureAfterChange": "          protected void zipFile(File file, ZipOutputStream zOut, String vPath)         throws IOException", "diff": ["+    ", "-        // If the file being added is META-INF/MANIFEST.MF, we warn if it's not the", "-        // one specified in the \"manifest\" attribute - or if it's being added twice, ", "-        // meaning the same file is specified by the \"manifeset\" attribute and in", "-        // a <fileset> element.", "+        // If the file being added is META-INF/MANIFEST.MF, we merge it with the", "+        // current manifest ", "-            if (manifest == null || !manifest.equals(file) || manifestAdded) {", "-                log(\"Warning: selected \"+archiveType+\" files include a META-INF/MANIFEST.MF which will be ignored \" +", "-                    \"(please use manifest attribute to \"+archiveType+\" task)\", Project.MSG_WARN);", "-            } else {", "-                super.zipFile(file, zOut, vPath);", "-                manifestAdded = true;", "+            InputStream is = null;", "+            try {", "+                is = new FileInputStream(file);", "+                zipManifestEntry(is);", "+            }", "+            catch (IOException e) {", "+                throw new BuildException(\"Unable to read manifest file: \" + file, e);", "+            }", "+            finally {", "+                if (is != null) {", "+                    try {", "+                        is.close();", "+                    }", "+                    catch (IOException e) {", "+                        // do nothing", "+                    }", "+                }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7643a984b25ed6c9c652f1841ce30533", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "commitAfterChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setManifest(File manifestFile)", "signatureAfterChange": "      public void setManifest(File manifestFile)", "diff": ["-        manifest = manifestFile;", "-        if (!manifest.exists())", "-            throw new BuildException(\"Manifest file: \" + manifest + \" does not exist.\");", "-", "-        // Create a ZipFileSet for this file, and pass it up.", "-        ZipFileSet fs = new ZipFileSet();", "-        fs.setDir(new File(manifest.getParent()));", "-        fs.setIncludes(manifest.getName());", "-        fs.setFullpath(\"META-INF/MANIFEST.MF\");", "-        super.addFileset(fs);", "+        if (!manifestFile.exists()) {", "+            throw new BuildException(\"Manifest file: \" + manifestFile + \" does not exist.\", ", "+                                     getLocation());", "+        }", "+        ", "+        InputStream is = null;", "+        try {", "+            is = new FileInputStream(manifestFile);", "+            Manifest newManifest = new Manifest(is);", "+            if (manifest == null) {", "+                manifest = getDefaultManifest();", "+            }", "+            manifest.merge(newManifest);", "+        }", "+        catch (IOException e) {", "+            throw new BuildException(\"Unable to read manifest file: \" + manifestFile, e);", "+        }", "+        finally {", "+            if (is != null) {", "+                try {", "+                    is.close();", "+                }", "+                catch (IOException e) {", "+                    // do nothing", "+                }", "+            }", "+        }"]}]}