{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "622291c07ff5f86c795c8dada86d1292", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03addb344f19bc77457f841ee8d8b9c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java", "commitBeforeChange": "d796e53fea54cad6b5c2dfb6f892d704504b09f4", "commitAfterChange": "13bc6453fe4c31a2f053a6ebb28638a20136227f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void getFile(ChannelSftp channel,                          ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "signatureAfterChange": "      private void getFile(ChannelSftp channel,                          ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "diff": ["+        if (getPreserveLastModified()) {", "+            FileUtils.getFileUtils().setFileLastModified(localFile,", "+                                                         ((long) le.getAttrs()", "+                                                          .getMTime())", "+                                                         * 1000);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233de89bb489176d28eabc4a9cd56432", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "12e9d5f0d34a161cd162b3a99d8e6eb1799267bf", "commitAfterChange": "46c940785aaa80d86df0bd49cd11bd2035d557bf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void handleChildren(         Object parent,         RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(         Object parent,         RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["+                    if (!childWrapper.isEnabled(child)) {", "+                        if (ih.supportsNestedElement(", "+                                parentUri, ProjectHelper.genComponentName(", "+                                    child.getNamespace(), child.getTag()))) {", "+                            continue;", "+                        }", "+                        // fall tru and fail in handlechild (unsupported element)", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319d5364c1f16b3a64ca97357ff8d28d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "565519bda6e5c38118f1e6d1353df4075f99573a", "commitAfterChange": "ebe2b05bb330246f04db1fb9296e980e95cfa154", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testToURI()", "signatureAfterChange": "     public void testToURI()", "diff": ["-            assertEquals(\"file:///C:/foo\", fu.toURI(\"c:\\\\foo\"));", "+            assertEquals(\"file:///\"+ dosRoot + \"foo\", fu.toURI(\"c:\\\\foo\"));", "+        }", "+        if (Os.isFamily(\"dos\")) {", "+            // this amounts to : are we under cygwin ?", "+            if (Character.isLowerCase(System.getProperty(\"user.dir\").charAt(0))) {", "+                dosRoot = \"c:/\";", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3afe56ea17823a68a7e46b501ed27b85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "e96b349816f1250badbdff04478f4b992ff1efd4", "commitAfterChange": "1a12c40a4c08b4dc05969cb1bed3b971437d1f6b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void buildBorlandStubs(Iterator ithomes)", "signatureAfterChange": "     private void buildBorlandStubs(Iterator ithomes)", "diff": ["-        } // end of if ()", "+        } ", "+        ", "+        if ( java2iioparams != null) {", "+            log(\"additional  \"+java2iioparams +\" to java2iiop \" ,0);", "+            commandline.createArgument().setValue(java2iioparams);            ", "+        }", "+        ", "+", "-        } // end of while ()", "+        } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836959d5d4c805881ca4e039e59c45b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "b0b920b08fae74de3fd7a7dd5efbca9e8cf379e6", "commitAfterChange": "114d55869f46b382375b6b32ddc17bb2e5fc598c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected void execute(List testList) throws BuildException", "signatureAfterChange": "     protected void execute(List testList) throws BuildException", "diff": ["+                if (test.getMethods() != null) {", "+                    printDual(writer, logWriter, \":\" + test.getMethodsString().replace(',', '+'));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8149950f5717bcf742512054729ebae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "18994a02c97de68fbcae9b887df71671491157c1", "commitAfterChange": "83c26f549b5ef21e9956ff3e88ccb18fc7d96065", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "signatureAfterChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "diff": ["+            if (o == null) {", "+                throw getNotFoundException(", "+                    \"preset \" + name,", "+                    def.getPreSets().getComponentName());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b617950223d501e1c91584050b757376", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "b0b920b08fae74de3fd7a7dd5efbca9e8cf379e6", "commitAfterChange": "114d55869f46b382375b6b32ddc17bb2e5fc598c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["+            if (test.getMethods() != null) {", "+                cmd.createArgument().setValue(Constants.METHOD_NAMES + test.getMethodsString());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe63993f39412b270db8651c7358752", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "cca008dd0001628eefae7a0ebffba4815a6909f1", "commitAfterChange": "021fdf251c92ecb3981724d83c0265dc770280b3", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog)         throws BuildException", "signatureAfterChange": "     private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog,                                  File casesFile)         throws BuildException", "diff": ["-    private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog)", "+    private int executeAsForked(JUnitTest test, ExecuteWatchdog watchdog, ", "+                                File casesFile)", "-        if(perm != null) {", "-            log(\"Permissions ignored when running in forked mode!\", Project.MSG_WARN);", "+        if (perm != null) {", "+            log(\"Permissions ignored when running in forked mode!\",", "+                Project.MSG_WARN);", "-        cmd.createArgument().setValue(test.getName());", "+        if (casesFile == null) {", "+            cmd.createArgument().setValue(test.getName());", "+        } else {", "+            log(\"Running multiple tests in the same VM\", Project.MSG_VERBOSE);", "+            cmd.createArgument().setValue(\"testsfile=\" + casesFile);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c504a8bd58d5511f5c08b4602d8bc310", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "b5aa31ebd093975c4deaeacff0b6af790e375bf6", "commitAfterChange": "ef0075ae4c90f109e13cd41c1287bf76e971bfc8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["+        ", "+        if (target != null) {", "+            cmd.createArgument().setValue(\"-target\");", "+            cmd.createArgument().setValue(target);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e847f949fe7b0842dd3f192c698f90bf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "a3a87dda9f8f0306693c95934011471ecb2109a0", "commitAfterChange": "808b91716adaa8e38b4ab9adbd8fafa1d85381a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["+        if (attributes.getSource() != null) {", "+            cmd.createArgument().setValue(\"-source\");", "+            cmd.createArgument().setValue(attributes.getSource());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efef80c22514f35ec66138f2378fea99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "aea2b0caa4a3038731e425dfa8785b36ccfc60ef", "commitAfterChange": "d7b8f63f01aff39fbb6a868d85b27f482cc1c831", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                File file = project.resolveFile(xslFile, baseDir);", "+                File file = project.resolveFile(xslFile, project.getBaseDir());", "+", "+                if (!file.exists()) {", "+                    log(\"DEPRECATED - the style attribute should be relative to the project\\'s\");", "+                    log(\"             basedir, not the tasks\\'s basedir.\");", "+                    file = project.resolveFile(xslFile, baseDir);", "+                }", "+                "]}]}