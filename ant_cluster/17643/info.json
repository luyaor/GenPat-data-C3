{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a810e3a384e62f54887ef1e5f249ea72", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b4cef5b2e789de4cd1ab82331d33d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void writeRun() throws IOException", "signatureAfterChange": "      private void writeRun() throws IOException", "diff": ["-        if (last < allowableBlockSize) {", "-            inUse[currentChar] = true;", "-            for (int i = 0; i < runLength; i++) {", "-                mCrc.updateCRC((char) currentChar);", "-            }", "+        final int last = this.last;", "+", "+        if (last < this.allowableBlockSize) {", "+            final int currentChar = this.currentChar;", "+            final Data data = this.data;", "+            data.inUse[currentChar] = true;", "+            final byte ch = (byte) currentChar;", "+", "+            int runLength = this.runLength;", "+            this.crc.updateCRC(currentChar, runLength);", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                data.block[last + 2] = ch;", "+                this.last = last + 1;", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                data.block[last + 2] = ch;", "+                data.block[last + 3] = ch;", "+                this.last = last + 2;", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                {", "+                    final byte[] block = data.block;", "+                    block[last + 2] = ch;", "+                    block[last + 3] = ch;", "+                    block[last + 4] = ch;", "+                    this.last = last + 3;", "+                }", "+", "-                inUse[runLength - 4] = true;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) (runLength - 4);", "+                {", "+                    runLength -= 4;", "+                    data.inUse[runLength] = true;", "+                    final byte[] block = data.block;", "+                    block[last + 2] = ch;", "+                    block[last + 3] = ch;", "+                    block[last + 4] = ch;", "+                    block[last + 5] = ch;", "+                    block[last + 6] = (byte) runLength;", "+                    this.last = last + 5;", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a608a0034edd49b3f9027407947c6c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "228fb9839c21a0a853598e114faca72c8e9340e7", "commitAfterChange": "9922008d657c72235c402343fd88847b044014ad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void writeRun() throws IOException", "signatureAfterChange": "      private void writeRun() throws IOException", "diff": ["-        if (last < allowableBlockSize) {", "-            inUse[currentChar] = true;", "-            for (int i = 0; i < runLength; i++) {", "-                mCrc.updateCRC((char) currentChar);", "-            }", "-            switch (runLength) {", "+        final int lastShadow = this.last;", "+", "+        if (lastShadow < this.allowableBlockSize) {", "+            final int currentCharShadow = this.currentChar;", "+            final Data dataShadow = this.data;", "+            dataShadow.inUse[currentCharShadow] = true;", "+            final byte ch = (byte) currentCharShadow;", "+", "+            int runLengthShadow = this.runLength;", "+            this.crc.updateCRC(currentCharShadow, runLengthShadow);", "+", "+            switch (runLengthShadow) {", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                dataShadow.block[lastShadow + 2] = ch;", "+                this.last = lastShadow + 1;", "+", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+                dataShadow.block[lastShadow + 2] = ch;", "+                dataShadow.block[lastShadow + 3] = ch;", "+                this.last = lastShadow + 2;", "-            case 3:", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "+", "+            case 3: {", "+                final byte[] block = dataShadow.block;", "+                block[lastShadow + 2] = ch;", "+                block[lastShadow + 3] = ch;", "+                block[lastShadow + 4] = ch;", "+                this.last = lastShadow + 3;", "+            }", "-            default:", "-                inUse[runLength - 4] = true;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) currentChar;", "-                last++;", "-                block[last + 1] = (char) (runLength - 4);", "+", "+            default: {", "+                runLengthShadow -= 4;", "+                dataShadow.inUse[runLengthShadow] = true;", "+                final byte[] block = dataShadow.block;", "+                block[lastShadow + 2] = ch;", "+                block[lastShadow + 3] = ch;", "+                block[lastShadow + 4] = ch;", "+                block[lastShadow + 5] = ch;", "+                block[lastShadow + 6] = (byte) runLengthShadow;", "+                this.last = lastShadow + 5;", "+            }", "+"]}]}