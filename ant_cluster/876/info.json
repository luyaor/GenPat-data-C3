{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f45ddc81123a550c2c64ceefca9e15c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ad31d96c9c02063ca47da84977802b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "05f8f8bd0222ad18fdc6cbeaa798ac06ff40be04", "commitAfterChange": "77024a43a293e7911609d3c3192e773f082688ce", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private Manifest createManifest()         throws BuildException", "signatureAfterChange": "      private Manifest createManifest()         throws BuildException", "diff": ["-                finalManifest.merge(originalManifest);", "+                finalManifest.merge(originalManifest, false, mergeClassPaths);", "-            finalManifest.merge(filesetManifest);", "-            finalManifest.merge(configuredManifest, !mergeManifestsMain);", "-            finalManifest.merge(manifest, !mergeManifestsMain);", "+            finalManifest.merge(filesetManifest, false, mergeClassPaths);", "+            finalManifest.merge(configuredManifest, !mergeManifestsMain,", "+                                mergeClassPaths);", "+            finalManifest.merge(manifest, !mergeManifestsMain,", "+                                mergeClassPaths);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5317337a232e0c313fa066f67117ca5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "de190c4094ef4f0bb42d710d95b74bcef765aadc", "commitAfterChange": "e1018ac5bacf39393c79c27d80b07e1825189867", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void process(String[] args, InitConfig initConfig)", "signatureAfterChange": "     private void process(String[] args, InitConfig initConfig)", "diff": ["+        ExecutionManager executionManager = null;", "+        Project project = null;", "+            createLogger();", "-            Project project = parseProject();", "+            project = parseProject();", "-            ExecutionManager executionManager", "-                 = new ExecutionManager(initConfig, config);", "+            executionManager = new ExecutionManager(initConfig, config);", "+        } catch (Throwable e) {", "+            if (logger != null) {", "+                BuildEvent finishedEvent", "+                     = new BuildEvent(this, BuildEvent.BUILD_FINISHED, e);", "+                logger.buildFinished(finishedEvent);", "+            } else {", "+                e.printStackTrace();", "+            }", "+            System.exit(1);", "+        }", "+", "+        try {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75b83b9585d439d99532f172c020c4fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ManifestTask.java", "commitBeforeChange": "18094d3d58aab29c6cb85afea04b2f001e0eaeaf", "commitAfterChange": "a4be70fbf09b8f00cccb697fd031e9bdd277c89a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            FileReader f = null;", "+            FileInputStream fis = null;", "+            InputStreamReader isr = null;", "-                f = new FileReader(manifestFile);", "-                current = new Manifest(f);", "+                fis = new FileInputStream(manifestFile);", "+                isr = new InputStreamReader(fis, \"UTF-8\");", "+                current = new Manifest(isr);", "-                if (f != null) {", "+                if (isr != null) {", "-                        f.close();", "+                        isr.close();", "-            w = new PrintWriter(new FileWriter(manifestFile));", "+            FileOutputStream fos = new FileOutputStream(manifestFile);", "+            OutputStreamWriter osw = new OutputStreamWriter(fos, \"UTF-8\");", "+            w = new PrintWriter(osw);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f352addf25d26d52e3bca0a762f19b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/BuildHelper.java", "commitBeforeChange": "d1503ea657ceb138b9453ec8f8d1cd5d929fbbde", "commitAfterChange": "07d490fcd539717e83be6262f00a6612d0fc360e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void jar(String basedir, String jarFile, String metaInfDir,                        String metaInfIncludes)", "signatureAfterChange": "     protected void jar(String basedir, String jarFile, String metaInfDir,                        String metaInfIncludes,                        String classpath, String mainClass)", "diff": ["-                       String metaInfIncludes) {", "+                       String metaInfIncludes,", "+                       String classpath, String mainClass) {", "+            Manifest manifest = new Manifest();", "+            Attributes attributes = manifest.getMainAttributes();", "+            attributes.putValue(\"Manifest-Version\", \"1.0\");", "+            attributes.putValue(\"Created-By\", \"Mutant Bootstrap\");", "+", "+            if (classpath != null) {", "+                attributes.putValue(\"Class-Path\", classpath);", "+            }", "+            if (mainClass != null) {", "+                attributes.putValue(\"Main-Class\", mainClass);", "+            }", "+", "-                 = new JarOutputStream(new FileOutputStream(jar));", "+                 = new JarOutputStream(new FileOutputStream(jar), manifest);", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79063a45647ab3183fb0305647e8fd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void closeEntry() throws IOException", "signatureAfterChange": "     public void closeEntry() throws IOException", "diff": ["-        } else {", "+        } else if (raf == null) {", "+        } else { /* method is STORED and we used RandomAccessFile */", "+            long size = written - dataStart;", "+            entry.setSize(size);", "+            entry.setComprSize(size);", "+            entry.setCrc(realCrc);", "+        }", "+", "+        // If random access output, write the local file header containing", "+        // the correct CRC and compressed/uncompressed sizes", "+        if (raf != null) {", "+            long save = raf.getFilePointer();", "+", "+            raf.seek(localDataStart);", "+            writeOut((new ZipLong(entry.getCrc())).getBytes());", "+            writeOut((new ZipLong(entry.getCompressedSize())).getBytes());", "+            writeOut((new ZipLong(entry.getSize())).getBytes());", "+            raf.seek(save);", "-   }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8351442c095d97d1c7198eb622cff87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "becf501f265decce24922f1d8ae2c03ad4f7f1c4", "commitAfterChange": "cf3682027277543826fd8e92a4cceeb1dab51da2", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public static Manifest getDefaultManifest() throws BuildException", "signatureAfterChange": "     public static Manifest getDefaultManifest() throws BuildException", "diff": ["+        InputStream in = null;", "+        InputStreamReader insr = null;", "-            InputStream in = Manifest.class.getResourceAsStream(defManifest);", "+            in = Manifest.class.getResourceAsStream(defManifest);", "-                Manifest defaultManifest", "-                    = new Manifest(new InputStreamReader(in, \"UTF-8\"));", "+                insr = new InputStreamReader(in, \"UTF-8\");", "+                Manifest defaultManifest = new Manifest(insr);", "-                return new Manifest(new InputStreamReader(in));", "+                insr = new InputStreamReader(in);", "+                return new Manifest(insr);", "+        } finally {", "+            FileUtils.close(insr);", "+            FileUtils.close(in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3eeb47e4600a53485269201a879769f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/ScriptRunner.java", "commitBeforeChange": "ebefa298a138aaf7088ad1af981a392b895eff85", "commitAfterChange": "c0b535098106a3b4549151960da251a6e78e627e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void bindToComponent(ProjectComponent component)", "signatureAfterChange": "      private BSFManager createManager() throws BSFException", "diff": ["-     */", "-    public void bindToComponent(ProjectComponent component) {", "-        project = component.getProject();", "-        addBeans(project.getProperties());", "-        addBeans(project.getUserProperties());", "-        addBeans(project.getTargets());", "-        addBeans(project.getReferences());", "-        addBean(\"project\", project);", "-        addBean(\"self\", component);", "+    private BSFManager createManager() throws BSFException {", "+        if (manager != null) {", "+            return manager;", "+        }", "+        BSFManager m = new BSFManager();", "+        m.setClassLoader(getScriptClassLoader());", "+        if (getKeepEngine()) {", "+            BSFEngine e = manager.loadScriptingEngine(getLanguage());", "+            this.manager = m;", "+            this.engine  = e;", "+        }", "+        return m;"]}]}