{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3078a205e7aeb229b1cf606e38c85c0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab8282a3a6d20422b2420f13cf8fc81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void runBuild(List targets) throws ExecutionException", "signatureAfterChange": "     protected void runBuild(List targets) throws ExecutionException", "diff": ["-    public void runBuild(List targets) throws ExecutionException {", "+    protected void runBuild(List targets) throws ExecutionException {", "+        System.out.println(\"Initilizing frame\");", "+        log(\"Initialized\", MessageLevel.MSG_DEBUG);", "+                log(\"Executing default target: \" + defaultTarget,", "+                    MessageLevel.MSG_DEBUG);", "-                executeTarget((String)i.next());", "+                String targetName = (String)i.next();", "+                log(\"Executing target: \" + targetName, MessageLevel.MSG_DEBUG);", "+                executeTarget(targetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3737f64376932309b7e7647b9fa08c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "99903f49b574b8e8328dcd64499fd4fb8b6538b2", "commitAfterChange": "88b40e16d0e7976c84460e0d515db0b0398ab4a5", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "     public void addReference(String name, Object value)", "signatureAfterChange": "     public void addReference(String referenceName, Object value)", "diff": ["-    public void addReference(String name, Object value) {", "+    public void addReference(String referenceName, Object value) {", "-            Object old = ((AntRefTable) references).getReal(name);", "+            Object old = ((AntRefTable) references).getReal(referenceName);", "-                log(\"Overriding previous definition of reference to \" + name,", "+                log(\"Overriding previous definition of reference to \" + referenceName,", "-            log(\"Adding reference: \" + name, MSG_DEBUG);", "-            references.put(name, value);", "+            log(\"Adding reference: \" + referenceName, MSG_DEBUG);", "+            references.put(referenceName, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee701e5793978a9711adbfc5e3db4d78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setDataValue(String name, Object value)          throws ExecutionException", "signatureAfterChange": "     protected void setDataValue(String name, Object value, boolean mutable)          throws ExecutionException", "diff": ["-    public void setDataValue(String name, Object value)", "+    protected void setDataValue(String name, Object value, boolean mutable)", "-            dataValues.put(name, value);", "+            if (dataValues.containsKey(name) && !mutable) {", "+                log(\"Ignoring oveeride for data value \" + name,", "+                    MessageLevel.MSG_VERBOSE);", "+            } else {", "+                dataValues.put(name, value);", "+            }", "-            frame.setDataValue(getNameInFrame(name), value);", "+            frame.setDataValue(getNameInFrame(name), value, mutable);"]}]}