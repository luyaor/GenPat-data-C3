{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7c043b338a2cd7197d9d0fac4d7c641", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ac8d790b94c1a8c18365847d02f94b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "4cbbf3629a15a78615a3ce63ffe6f3fc028b172d", "commitAfterChange": "2c04d7e833b4e5dab1a3c5ddfe14b572aea8c112", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void closeEntry() throws IOException", "signatureAfterChange": "     public void closeEntry() throws IOException", "diff": ["-        if (finished) {", "-            throw new IOException(\"Stream has already been finished\");", "-        }", "-", "-        if (entry == null) {", "-            throw new IOException(\"No current entry to close\");", "-        }", "-", "-        if (!entry.hasWritten) {", "-            write(EMPTY, 0, 0);", "-        }", "+        preClose();", "+        closeEntry(actuallyNeedsZip64);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd326c22a029c135c630b071e623f970", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "6c898aeb37be06c6dc3ce020c21819310caf59ec", "commitAfterChange": "94a192bb792ac737581a3510a278dfb5c2f0fd3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl)", "diff": ["-        try {", "-            ProjectHelper2 parser = new ProjectHelper2();", "-            UnknownElement ue =", "-                parser.parseUnknownElement(project, antlibUrl);", "-            // Check name is \"antlib\"", "-            if (!(ue.getTag().equals(TAG))) {", "-                throw new BuildException(", "-                    \"Unexpected tag \" + ue.getTag() + \" expecting \"", "-                    + TAG, ue.getLocation());", "-            }", "-            Antlib antlib = new Antlib();", "-            antlib.setProject(project);", "-            antlib.setLocation(ue.getLocation());", "-            antlib.init();", "-            ue.configure(antlib);", "-            return antlib;", "-        } catch (BuildException ex) {", "-            Location location = ex.getLocation();", "-            if (location == null) {", "-                throw ex;", "-            }", "+        ProjectHelper2 parser = new ProjectHelper2();", "+        UnknownElement ue =", "+            parser.parseUnknownElement(project, antlibUrl);", "+        // Check name is \"antlib\"", "+        if (!(ue.getTag().equals(TAG))) {", "-                \"Error in \"", "-                + System.getProperty(\"line.separator\")", "-                + location.toString()", "-                + \" \" + ex.getMessage());", "+                \"Unexpected tag \" + ue.getTag() + \" expecting \"", "+                + TAG, ue.getLocation());", "+        Antlib antlib = new Antlib();", "+        antlib.setProject(project);", "+        antlib.setLocation(ue.getLocation());", "+        antlib.init();", "+        ue.configure(antlib);", "+        return antlib;"]}]}