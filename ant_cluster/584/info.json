{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f648f9870cbc11f17412024974329c5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4e8e32ed52f2da5599898e297f6cce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java", "commitBeforeChange": "d754a20c3fb29379494a2411bbd69ed876fb9e7a", "commitAfterChange": "9770fe02f9f9d38e7b92da95247b2681a6848e9c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void stop()", "signatureAfterChange": "     public void stop()", "diff": ["-        try {", "-            outputThread.join();", "-        } catch (InterruptedException e) {", "-            // ignore", "-        }", "-        try {", "-            errorThread.join();", "-        } catch (InterruptedException e) {", "-            // ignore", "-        }", "+        finish(outputThread);", "+        finish(errorThread);", "+            // ignore", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0043722e18a4056f7491aceca73ef0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure, ClassLoader loader)", "signatureAfterChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure, ClassLoader loader)", "diff": ["+            Method suiteMethod = null;", "-                Method suiteMethod= testClass.getMethod(\"suite\", new Class[0]);", "-                suite = (Test)suiteMethod.invoke(null, new Class[0]);", "-            } catch(NoSuchMethodException e) {", "-            } catch(InvocationTargetException e) {", "-            } catch(IllegalAccessException e) {", "+                // check if there is a suite method", "+                suiteMethod= testClass.getMethod(\"suite\", new Class[0]);", "+            } catch(Exception e) {", "+                // no appropriate suite method found. We don't report any", "+                // error here since it might be perfectly normal. We don't", "+                // know exactly what is the cause, but we're doing exactly", "+                // the same as JUnit TestRunner do. We swallow the exceptions.", "-            ", "-            if (suite == null) {", "+            if (suiteMethod != null){", "+                // if there is a suite method available, then try", "+                // to extract the suite from it. If there is an error", "+                // here it will be caught below and reported.", "+                suite = (Test)suiteMethod.invoke(null, new Class[0]);", "+            } else {"]}]}