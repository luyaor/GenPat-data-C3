{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddf49728718313b1d7419c1063086f73", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551a7995f7d67c7d4667ed9b2cbc6985", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "34e72a6607d510aed224c0db5b5b7a492e7e06d5", "commitAfterChange": "75414134803bc6fd9e433288f138a269044bdaec", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 74, "signatureBeforeChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "diff": ["-            }   else {", "+            } else {", "+                if (this.newerOnly) {", "+\t                if (action == SEND_FILES) {", "+\t                    if (\"NONE\".equalsIgnoreCase(this.timestampGranularity)) ", "+\t                    {", "+\t                        this.serverTimestampGranularity = 0L;", "+\t                    }", "+\t                    else if (\"MINUTE\".equalsIgnoreCase(this.timestampGranularity)) ", "+\t                    {", "+\t                        this.serverTimestampGranularity = GRANULARITY_MINUTE;", "+\t                    } ", "+\t                    else ", "+\t                    {", "+\t                        this.serverTimestampGranularity = GRANULARITY_MINUTE;", "+\t                    }", "+\t                } else if (action == GET_FILES) {", "+\t                    if (\"MINUTE\".equalsIgnoreCase(this.timestampGranularity)) ", "+\t                    {", "+\t                        this.serverTimestampGranularity = GRANULARITY_MINUTE;", "+ \t                    }", "+\t                    else ", "+\t                    {", "+\t                        this.serverTimestampGranularity = 0L;", "+\t                    }", "+\t                }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e8f6079fa3ea09bdafd875333a35f52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "2a426f599fb6e67d13f24abff7457fd9f9b87fd9", "commitAfterChange": "8dd4e0ba76f304d2a1bfde2ddd614d750d83560f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          private String macroSubs(String s, Map macroMapping)", "signatureAfterChange": "      private String macroSubs(String s, Map macroMapping)", "diff": ["-    ", "+", "+        if (s == null) {", "+            return null;", "+        }", "-                    if (ch == '$') {", "-                        state = 1;", "+                    if (ch == '@') {", "+                        state = STATE_EXPECT_BRACKET;", "-                    }                    ", "+                    }", "-                        state = 2;", "+                        state = STATE_EXPECT_NAME;", "+                    } else if (ch == '@') {", "+                        state = STATE_EXPECT_EXCAPE;", "-                        state = 0;", "-                        ret.append('$');", "+                        state = STATE_NORMAL;", "+                        ret.append('@');", "-                        state = 0;", "+                        state = STATE_NORMAL;", "-                            ret.append(\"${\" + name + \"}\");", "+                            ret.append(\"@{\" + name + \"}\");", "-                        macroName.append(s.charAt(i));", "+                        macroName.append(ch);", "+                    break;", "+                case STATE_EXPECT_EXCAPE:", "+                    state = STATE_NORMAL;", "+                    if (ch == '{') {", "+                        ret.append(\"@\");", "+                    } else {", "+                        ret.append(\"@@\");", "+                    }", "+                    ret.append(ch);", "+                    break;", "+                default:", "+                    break;", "-                ret.append('$');", "+                ret.append('@');", "-                ret.append(\"${\");", "+                ret.append(\"@{\");", "+                break;", "+            case STATE_EXPECT_EXCAPE:", "+                ret.append(\"@@\");", "+                break;", "+            default:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8151cd2dab514f3efeed60b00381d11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "e5a85d7265ed5c9a0e391d5d00596368229e8014", "commitAfterChange": "620b8828e3694634896ff05057883da63211fc2f", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected boolean notEmpty(String s)", "signatureAfterChange": "     public void addCompilerSpecificOptions(NetCommand command)", "diff": ["-     */", "-    protected boolean notEmpty(String s) {", "-        return s != null && s.length() != 0;", "-    }", "+     */", "+    public void addCompilerSpecificOptions(NetCommand command) {", "+        command.addArgument(getIncludeDefaultReferencesParameter());", "+        command.addArgument(getWarnLevelParameter());", "+        command.addArgument(getDocFileParameter());", "+        command.addArgument(getFullPathsParameter());", "+        command.addArgument(getFileAlignParameter());", "+        command.addArgument(getIncrementalParameter());", "+        command.addArgument(getNoConfigParameter());", "+        command.addArgument(getUnsafeParameter());", "+    }"]}]}