{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdb9ea9d8097e0b9d5d274e0beeb6ad9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc74fd06d5fa51907ed0c230fe937ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "a5ad127be2cc2c71abdbf4f10c474d5ab6fd55c6", "commitAfterChange": "0c41850a5477f82db678bbc85e6fccc04f66e661", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-        } else if (source.as(FileProvider.class) != null", "-                   && destFile != null && !append) {", "-            File sourceFile =", "-                source.as(FileProvider.class).getFile();", "-            copyUsingFileChannels(sourceFile, destFile);", "-            copyUsingStreams(source, dest, append, project);", "+            boolean copied = false;", "+            if (source.as(FileProvider.class) != null", "+                && destFile != null && !append) {", "+                File sourceFile =", "+                    source.as(FileProvider.class).getFile();", "+                try {", "+                    copyUsingFileChannels(sourceFile, destFile);", "+                    copied = true;", "+                } catch (IOException ex) {", "+                    project.log(\"Attempt to copy \" + sourceFile", "+                                + \" to \" + destFile + \" using NIO Channels\"", "+                                + \" failed due to '\" + ex.getMessage()", "+                                + \"'.  Falling back to streams.\",", "+                                Project.MSG_WARN);", "+                }", "+            }", "+            if (!copied) {", "+                copyUsingStreams(source, dest, append, project);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1392cdc7ddbc17005d4d187cd0a5070", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "efa433f65ff68b646d9b7232f0968a9b697c5cc2", "commitAfterChange": "bc28d31407036126e05e4d64f2b138af69603c7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,                                                             ResourceCollection source,                                                             FileNameMapper mapper,                                                             ResourceFactory targets,                                                             long granularity)", "signatureAfterChange": "     public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,                                                             ResourceCollection source,                                                             FileNameMapper mapper,                                                             ResourceFactory targets,                                                             long granularity)", "diff": ["-            String[] targetnames = mapper.mapFileName(", "-                sr.getName().replace('/', File.separatorChar));", "+            String srName = sr.getName();", "+            srName = srName == null", "+                ? srName : srName.replace('/', File.separatorChar);", "+            String[] targetnames = null;", "+            try {", "+                targetnames = mapper.mapFileName(srName);", "+            } catch (Exception e) {", "+\t\tlogTo.log(\"Caught \" + e + \" mapping resource \" + sr,", "+                    Project.MSG_VERBOSE);", "+            }", "-                logTo.log(sr.getName()", "-                      + \" skipped - don\\'t know how to handle it\",", "+                logTo.log(sr + \" skipped - don\\'t know how to handle it\","]}]}