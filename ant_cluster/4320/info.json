{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04135e2d2f0e95d73f838e96dbfb1191", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2125e6762e339496996fa6d9703a87b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "b43f4224d8fe9d1e7d628e88df394a7dfed46d1b", "commitAfterChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 53, "signatureBeforeChange": "     public void writeEntryHeader(byte[] outbuf)", "signatureAfterChange": "     public void writeEntryHeader(byte[] outbuf, ZipEncoding encoding,                                  boolean starMode) throws IOException", "diff": ["+     */", "+    public void writeEntryHeader(byte[] outbuf, ZipEncoding encoding,", "+                                 boolean starMode) throws IOException {", "-        offset = TarUtils.getNameBytes(name, outbuf, offset, NAMELEN);", "-        offset = TarUtils.getOctalBytes(mode, outbuf, offset, MODELEN);", "-        offset = TarUtils.getOctalBytes(userId, outbuf, offset, UIDLEN);", "-        offset = TarUtils.getOctalBytes(groupId, outbuf, offset, GIDLEN);", "-        offset = TarUtils.getLongOctalBytes(size, outbuf, offset, SIZELEN);", "-        offset = TarUtils.getLongOctalBytes(modTime, outbuf, offset, MODTIMELEN);", "+        offset = TarUtils.formatNameBytes(name, outbuf, offset, NAMELEN,", "+                                          encoding);", "+        offset = writeEntryHeaderField(mode, outbuf, offset, MODELEN, starMode);", "+        offset = writeEntryHeaderField(userId, outbuf, offset, UIDLEN,", "+                                       starMode);", "+        offset = writeEntryHeaderField(groupId, outbuf, offset, GIDLEN,", "+                                       starMode);", "+        offset = writeEntryHeaderField(size, outbuf, offset, SIZELEN, starMode);", "+        offset = writeEntryHeaderField(modTime, outbuf, offset, MODTIMELEN,", "+                                       starMode);", "-        offset = TarUtils.getNameBytes(linkName, outbuf, offset, NAMELEN);", "-        offset = TarUtils.getNameBytes(magic, outbuf, offset, MAGICLEN);", "-        offset = TarUtils.getNameBytes(userName, outbuf, offset, UNAMELEN);", "-        offset = TarUtils.getNameBytes(groupName, outbuf, offset, GNAMELEN);", "-        offset = TarUtils.getOctalBytes(devMajor, outbuf, offset, DEVLEN);", "-        offset = TarUtils.getOctalBytes(devMinor, outbuf, offset, DEVLEN);", "+        offset = TarUtils.formatNameBytes(linkName, outbuf, offset, NAMELEN,", "+                                          encoding);", "+        offset = TarUtils.formatNameBytes(magic, outbuf, offset, PURE_MAGICLEN);", "+        offset = TarUtils.formatNameBytes(version, outbuf, offset, VERSIONLEN);", "+        offset = TarUtils.formatNameBytes(userName, outbuf, offset, UNAMELEN,", "+                                          encoding);", "+        offset = TarUtils.formatNameBytes(groupName, outbuf, offset, GNAMELEN,", "+                                          encoding);", "+        offset = writeEntryHeaderField(devMajor, outbuf, offset, DEVLEN,", "+                                       starMode);", "+        offset = writeEntryHeaderField(devMinor, outbuf, offset, DEVLEN,", "+                                       starMode);", "-        TarUtils.getCheckSumOctalBytes(chk, outbuf, csOffset, CHKSUMLEN);", "+        TarUtils.formatCheckSumOctalBytes(chk, outbuf, csOffset, CHKSUMLEN);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5005e73cf09b2c2793da328c28ca56bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "f7cec58a607900954a1686009fb5ebe4ea6ddea6", "commitAfterChange": "3ae69e82c33e0e03941387a3506561accc2697d3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                              FilterSetCollection filters, Vector filterChains,                              boolean overwrite, boolean preserveLastModified,                              String inputEncoding, String outputEncoding,                              Project project)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified, boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "diff": ["-        if (!overwrite) {", "-            long slm = source.getLastModified();", "-            if (dest.isExists() && slm != 0", "-                && dest.getLastModified() > slm) {", "-                return;", "-            }", "+     */", "+    public static void copyResource(Resource source, Resource dest,", "+                            FilterSetCollection filters, Vector filterChains,", "+                            boolean overwrite, boolean preserveLastModified, boolean append,", "+                            String inputEncoding, String outputEncoding,", "+                            Project project)", "+        throws IOException {", "+        if (!(overwrite || SelectorUtils.isOutOfDate(source, dest, FileUtils.getFileUtils()", "+                .getFileTimestampGranularity()))) {", "+            return;", "-                OutputStreamWriter osw = null;", "+                OutputStream os = getOutputStream(dest, append, project);", "+                OutputStreamWriter osw;", "-                    osw = new OutputStreamWriter(dest.getOutputStream());", "+                    osw = new OutputStreamWriter(os);", "-                    osw = new OutputStreamWriter(dest.getOutputStream(),", "-                                                 outputEncoding);", "+                    osw = new OutputStreamWriter(os, outputEncoding);", "-                OutputStreamWriter osw = null;", "+                OutputStream os = getOutputStream(dest, append, project);", "+                OutputStreamWriter osw;", "-                    osw = new OutputStreamWriter(dest.getOutputStream());", "+                    osw = new OutputStreamWriter(os);", "-                    osw = new OutputStreamWriter(dest.getOutputStream(),", "-                                                 outputEncoding);", "+                    osw = new OutputStreamWriter(os, outputEncoding);", "-                out = dest.getOutputStream();", "+                out = getOutputStream(dest, append, project);"]}]}