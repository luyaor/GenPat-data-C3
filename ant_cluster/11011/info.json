{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "915e1162e62cd0b586aca360518a431b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fb9289fcf79533634445ae383487a93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 62, "signatureBeforeChange": "       public ModifiedSelectorTest(String name)", "signatureAfterChange": "     private String diff(String expected, String result)", "diff": ["-", "-    public ModifiedSelectorTest(String name) {", "-        super(name);", "-    }", "+     */", "+    private String diff(String expected, String result) {", "+        int length1 = expected.length();", "+        int length2 = result.length();", "+        int min = (length1 > length2) ? length2 : length1;", "+        StringBuffer sb = new StringBuffer();", "+        for (int i=0; i<min; i++) {", "+            sb.append(", "+                    (expected.charAt(i) == result.charAt(i))", "+                            ? \"-\"", "+                            : \"X\"", "+            );", "+        }", "+        return sb.toString();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46c1c973f966b617afb8860128cdf894", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java", "commitBeforeChange": "7cffd478a00528784882a5a03d46f2b76ea31c5f", "commitAfterChange": "7e3a3c6b31d98e0670eafa58b20215808105ddaf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private final String mangle( String password )", "signatureAfterChange": "     private final String mangle( final String password )", "diff": ["-    private final String mangle( String password )", "+     */", "+    private final String mangle( final String password )", "-        StringBuffer buf = new StringBuffer();", "-        for( int i = 0; i < password.length(); i++ )", "-        {", "-            buf.append( shifts[ password.charAt( i ) ] );", "-        }", "-        return buf.toString();", "-    }", "+        final int size = password.length();", "+        final StringBuffer sb = new StringBuffer();", "+        for( int i = 0; i < size; i++ )", "+        {", "+            sb.append( m_shifts[ password.charAt( i ) ] );", "+        }", "+        return sb.toString();", "+    }"]}]}