{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e257330ac38da4a990e126f6928b7881", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574c3786e31d4af6a4bdc1d6def20828", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "770b1dd27562618da3a17f725744dd8f28cac770", "commitAfterChange": "cc8afe2788ca97dd85bb3321bfc4b3c583758d08", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Commandline setupRmicCommand()", "signatureAfterChange": "     protected Commandline setupRmicCommand()", "diff": ["+        return setupRmicCommand(null);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0f87e157bc44edf7b100336e25acb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "d678e492b98fc7a29ed46b3f9d8ffade75c3bb4a", "commitAfterChange": "52418752350fdbbed27fe9c443a077e6b3c61cdf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-    protected void execute( final String[] args )", "-        throws Exception", "-            return;", "-        final ArrayList targets = new ArrayList();", "-        final HashMap defines = new HashMap();", "-", "-        m_parameters.setParameter( \"filename\", \"build.ant\" );", "-        m_parameters.setParameter( \"log.level\", \"WARN\" );", "-        m_parameters.setParameter( \"listener\", \"org.apache.myrmidon.listeners.DefaultProjectListener\" );", "-        m_parameters.setParameter( \"incremental\", \"false\" );", "-", "-        //System property set up by launcher", "-        m_parameters.setParameter( \"myrmidon.home\", System.getProperty( \"myrmidon.home\" ) );", "-            case HELP_OPT: usage( options ); return;", "-            case VERSION_OPT: System.out.println( Constants.BUILD_DESCRIPTION ); return;", "-                defines.put( option.getArgument( 0 ), option.getArgument( 1 ) );", "-            case 0: targets.add( option.getArgument() ); break;", "+", "+    private void execute( final String[] args )", "+        throws Exception", "+    {", "+        setupDefaultParameters();", "+", "+        if( !parseCommandLineOptions( args ) )", "+        {", "+            return;", "-            throw new TaskException( \"myrmidon-home (\" + homeDir + \") is not a directory\" );", "+            throw new Exception( \"myrmidon-home (\" + homeDir + \") is not a directory\" );", "-            throw new TaskException( \"File \" + buildFile + \" is not a file or doesn't exist\" );", "+            throw new Exception( \"File \" + buildFile + \" is not a file or doesn't exist\" );", "-", "-        //setup classloader so that it will correctly load", "-        //the Project/ProjectBuilder/ProjectManager and all dependencies", "-        //FIXEME: Use separate classloader instead of injecting", "-        final ClassLoader classLoader = createClassLoader( libDir );", "-        Thread.currentThread().setContextClassLoader( classLoader );", "-", "-", "-            //Add CLI defines", "-            addToContext( context, defines );", "+            //Add CLI m_defines", "+            addToContext( context, m_defines );", "-            doBuild( manager, project, context, targets );", "+            doBuild( manager, project, context, m_targets );"]}]}