{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fac304430a6c16437b027aad63a4c87", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235524b9d7a2101720ab25fabc323ec4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "1e88913f66326889d03eb449cd5cb850d9ae1e63", "commitAfterChange": "ba558a362e0ebfcbe75451184f60115c7cc8ba7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Task makeTask(UnknownElement ue, RuntimeConfigurable w)", "signatureAfterChange": "     protected Task makeTask(UnknownElement ue, RuntimeConfigurable w,                             boolean onTopLevel)", "diff": ["-    protected Task makeTask(UnknownElement ue, RuntimeConfigurable w) {", "+    protected Task makeTask(UnknownElement ue, RuntimeConfigurable w,", "+                            boolean onTopLevel) {", "-        if (task == null) {", "-            String lSep = System.getProperty(\"line.separator\");", "-            String msg = \"Could not create task of type: \" + elementName", "-                + \".\" + lSep", "-                + \"Ant could not find the task or a class this\" + lSep", "-                + \"task relies upon.\" + lSep", "-                + \"Common solutions are to use taskdef to declare\" + lSep", "-                + \"your task, or, if this is an optional task,\" + lSep", "-                + \"to put the optional.jar and all required libraries of\" +lSep", "-                + \"this task in the lib directory of\" + lSep", "-                + \"your ant installation (ANT_HOME).\";", "-            throw new BuildException(msg, location);", "+        if (task == null && !onTopLevel) {", "+            throw getNotFoundException(\"task\", ue.getTag());", "-        task.setLocation(getLocation());", "-        String id = w.getAttributes().getValue(\"id\");", "-        if (id != null) {", "-            project.addReference(id, task);", "+        if (task != null) {", "+            task.setLocation(getLocation());", "+            // UnknownElement always has an associated target", "+            task.setOwningTarget(target);", "+            task.init();", "-        // UnknownElement always has an associated target", "-        task.setOwningTarget(target);", "-", "-        task.init();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7c1be019587c3ac5919b5ce613d7bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "99a45aab1888ca73f7a2fc6fa97d7c76ee763fb0", "commitAfterChange": "70f7d48dbdb48256e509f99eac4b569046b255c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void maybeConfigure() throws BuildException", "signatureAfterChange": "      public void maybeConfigure() throws BuildException", "diff": ["-        realTask = project.createTask(elementName);", "-        if (realTask == null) {", "-            log(\"Could not create task of type: \" + elementName + \" Common solutions\" +", "-                \" are adding the task to defaults.properties and executing bin/bootstrap\",", "-                Project.MSG_DEBUG);", "-            throw new BuildException(\"Could not create task of type: \" + elementName +", "-                                     \". Common solutions are to use taskdef to declare\" +", "-                                     \" your task, or, if this is an optional task,\" +", "-                                     \" to put the optional.jar in the lib directory of\" +", "-                                     \" your ant installation (ANT_HOME).\", location);", "-        }", "-", "-        realTask.setLocation(location);", "-        String id = wrapper.getAttributes().getValue(\"id\");", "-        if (id != null) {", "-            project.addReference(id, realTask);", "-        }", "-        realTask.init();", "-", "-        // UnknownElement always has an associated target", "-        realTask.setOwningTarget(target);", "+        realTask = makeTask(this, wrapper);"]}]}