{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec2b2898a201132bb962090ce13f29e3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d15b6d3c7ebbbfdb921d5e64868e2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LinkedHashtable.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public synchronized Object put(Object k, Object v)", "signatureAfterChange": "      public synchronized V put(K k, V v)", "diff": ["-    public synchronized Object put(Object k, Object v) {", "+    public synchronized V put(K k, V v) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022b3396da481b39c2fc56e1fd819354", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "2b0c95d418b4f3646a6e8479123efd8b95147674", "commitAfterChange": "e142e5addaeb50f2c2a7c71c29747150b9fad463", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "signatureAfterChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "diff": ["-                String[] classesPath = getClassespath().list();", "-                for (int i = 0; i < classesPath.length; i++) {", "-                    File f = new File(classesPath[i]);", "+                String[] cP = getClassespath().list();", "+                for (int i = 0; i < cP.length; i++) {", "+                    File f = new File(cP[i]);", "-                String[] sourcesPath = getSourcespath().list();", "-                for (int i = 0; i < sourcesPath.length; i++) {", "-                    File f = new File(sourcesPath[i]);", "+                String[] sP = getSourcespath().list();", "+                for (int i = 0; i < sP.length; i++) {", "+                    File f = new File(sP[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071827e9c7dcd1168a4d616f74d56060", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Object createdTypedObject( final String name,                                        final Class type )         throws ConfigurationException", "signatureAfterChange": "     private Object createdTypedObject( final String name,                                        final Class type )         throws Exception", "diff": ["-        throws ConfigurationException", "+        throws Exception", "-            final TypeFactory factory = getTypeFactory( DataType.class );", "+            final TypeFactory factory = m_typeManager.getFactory( DataType.class );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2c70c8352fcb1d8aebf8439669d42b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "2b0c95d418b4f3646a6e8479123efd8b95147674", "commitAfterChange": "e142e5addaeb50f2c2a7c71c29747150b9fad463", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public int executeAsForked(CommandlineJava commandline,                                ExecuteWatchdog watchdog) throws BuildException", "signatureAfterChange": "     public int executeAsForked(CommandlineJava commandline,                                ExecuteWatchdog watchdog) throws BuildException", "diff": ["-            String[] sourcesPath = getSourcespath().list();", "-            for (int i = 0; i < sourcesPath.length; i++) {", "-                File f = new File(sourcesPath[i]);", "+            String[] sP = getSourcespath().list();", "+            for (int i = 0; i < sP.length; i++) {", "+                File f = new File(sP[i]);", "-            String[] classesPath = getClassespath().list();", "-            for (int i = 0; i < classesPath.length; i++) {", "-                File f = new File(classesPath[i]);", "+            String[] cP = getClassespath().list();", "+            for (int i = 0; i < cP.length; i++) {", "+                File f = new File(cP[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a98fe915c6c19cc68fe9af47dcbc3f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "commitAfterChange": "451ca455d5963fd430ac58e449bb791138f07e1a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void executeTask( final Configuration task, final TaskContext context )         throws AntException", "signatureAfterChange": "     protected void executeTask( final Configuration task, final TaskContext context )         throws AntException", "diff": ["-", "-        m_listenerSupport.taskletStarted( name );", "+        m_listenerSupport.taskStarted( name );", "-        m_taskletEngine.execute( task, context );", "+        m_taskEngine.execute( task, context );", "-        m_listenerSupport.taskletFinished();", "+        m_listenerSupport.taskFinished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5f02f477e66daa83097f879ed83701", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "bf94e2fb091644d9c249322d9574ab6bb1e6a3d8", "commitAfterChange": "3c26912e56e06ac64c392444cb19e3587f1bbb11", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "          private void addProperties( Properties props)", "signatureAfterChange": "      private void addProperties(Properties props)", "diff": ["-    private void addProperties( Properties props) {", "-\tEnumeration e=props.keys();", "-\twhile( e.hasMoreElements() ) {", "-\t    String name=(String)e.nextElement();", "-\t    String value=(String)props.getProperty(name);", "-\t    String value1= ProjectHelper.replaceProperties(value, project.getProperties());", "-\t    project.setProperty( name, value1);", "-\t}", "+", "+    private void addProperties(Properties props) {", "+        Enumeration e = props.keys();", "+        while (e.hasMoreElements()) {", "+            String name = (String) e.nextElement();", "+            String value = (String) props.getProperty(name);", "+            String v = ProjectHelper.replaceProperties(value, project.getProperties());", "+            project.setProperty(name, v);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7d2233d6c2e0b1d255864a5ccd892e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibrarySpec.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void addDefinition(String definitionTypeName, String name,                               String classname)          throws ConfigException", "signatureAfterChange": "     public void addDefinition(String definitionTypeName, String name,                               String classname)          throws AntLibException", "diff": ["-         throws ConfigException {", "+         throws AntLibException {", "-            throw new ConfigException(\"More than one definition \"", "+            throw new AntLibException(\"More than one definition \"", "-            throw new ConfigException(\"Unknown type of definition \"", "+            throw new AntLibException(\"Unknown type of definition \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "340161989ff3d34a333cd2de2ded654c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/CvsTagDiff.java", "commitBeforeChange": "5d664133a5877068d1c15dec1d5c1e9143f90d98", "commitAfterChange": "fd6087beada84581d77aec9a94991cc2dfc4bb13", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private CvsTagEntry[] parseRDiff(File tmpFile) throws BuildException", "signatureAfterChange": "     private CvsTagEntry[] parseRDiff(File tmpFile) throws BuildException", "diff": ["-            // File module/filename is removed; not included in release tag SKINLF_12", "-            int headerLength = 5 + m_package.length() + 1;  // get rid of 'File module/\"", "+            // File module/filename is removed; not included in", "+            // release tag SKINLF_12", "+", "+            // get rid of 'File module/\"", "+            int headerLength = 5 + m_package.length() + 1;  ", "-                    entries.add(entry = new CvsTagEntry(filename, rev));", "+                    entries.addElement(entry = new CvsTagEntry(filename, rev));", "-                    String prevRevision = line.substring(index + FILE_HAS_CHANGED.length(), revSeparator);", "-                    String revision = line.substring(revSeparator + 4); // 4 is \" to \" length", "+                    String prevRevision = ", "+                        line.substring(index + FILE_HAS_CHANGED.length(), ", "+                                       revSeparator);", "+                     // 4 is \" to \" length", "+                    String revision = line.substring(revSeparator + 4);", "-                    entries.add(entry = new CvsTagEntry(filename, revision, prevRevision));", "+                    entries.addElement(entry = new CvsTagEntry(filename, ", "+                                                               revision, ", "+                                                               prevRevision));", "-                    entries.add(entry = new CvsTagEntry(filename));", "+                    entries.addElement(entry = new CvsTagEntry(filename));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a806b2b91be3e4dbf9656b61c97b3d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Add.java", "commitBeforeChange": "437a1cfc7a722a0421683c5720a9856e583f65f4", "commitAfterChange": "8ad08b239266a6c19ea3e3bd63b94b23d0bea58f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        P4CmdOpts = (m_changelist > 0) ? (\"-c \" + m_changelist) : \"\";", "+        P4CmdOpts = (changelist > 0) ? (\"-c \" + changelist) : \"\";", "-        for (int i=0; i<filesets.size(); i++) {", "+        for (int i = 0; i < filesets.size(); i++) {", "-                for (int j=0; j < srcFiles.length; j++) {", "+                for (int j = 0; j < srcFiles.length; j++) {", "-                    if (filelist.length() > m_cmdLength) {", "+                    if (filelist.length() > cmdLength) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cff3a16ce9125bd9222d351d4c72949", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void start(String frontend, String defaultClass, String[] args)          throws InitException", "signatureAfterChange": "     public void start(String frontend, String defaultClass, String[] args)          throws InitException", "diff": ["-        try {             ", "-            InitConfig config = new InitConfig(getClass());", "-    ", "+        try {", "+            AntEnvironment config = new AntEnvironment(getClass());", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-                InitConfig.class};", "+                AntEnvironment.class};", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4194c4b884ea3413cb3da651c05569a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/Ilasm.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected String getTargetTypeParameter()", "signatureAfterChange": "      protected String getTargetTypeParameter()", "diff": ["-        if (!notEmpty(_targetType)) {", "+        if (!notEmpty(targetType)) {", "-        if (_targetType.equals(\"exe\")) {", "+        if (targetType.equals(\"exe\")) {", "-        } else if (_targetType.equals(\"library\")) {", "+        } else if (targetType.equals(\"library\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4449a8b7b172fcdaca2b04df108e5741", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionAdapter.java", "commitBeforeChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "commitAfterChange": "feb7ea550f616abf040604172390fa25b8046e4f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setRefid(final Reference reference)         throws BuildException", "signatureAfterChange": "     public void setRefid(final Reference reference)         throws BuildException", "diff": ["-            || null != implementationVendor) {", "+            || null != implementationVendorURL) {", "-            implementationVendor = other.implementationVendor;", "+            implementationVendorURL = other.implementationVendorURL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc996212275eb81aca4dc3d0151c250", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "     public String getFileTimeStamp()", "signatureAfterChange": "     public String getFileTimeStamp()", "diff": ["-        if (m_timestamp == null) {", "+        if (timestamp == null) {", "-        } else if (m_timestamp.getValue().equals(TIME_MODIFIED)) {", "+        } else if (timestamp.getValue().equals(TIME_MODIFIED)) {", "-        } else if (m_timestamp.getValue().equals(TIME_UPDATED)) {", "+        } else if (timestamp.getValue().equals(TIME_UPDATED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561f49d4d3cc114f697b94def714c906", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/impl/Environment.java", "commitBeforeChange": "0fb624e936ea10bcdbbe1e29e69761a87489fdbb", "commitAfterChange": "6679566ccaa583f1868dbd7b08c17bdf580c0ec5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static synchronized Properties getEnvironmentVariables()         throws IOException, ExecException", "signatureAfterChange": "     private synchronized Properties getEnvironmentVariables()         throws IOException, ExecException", "diff": ["-    private static synchronized Properties getEnvironmentVariables()", "+    private synchronized Properties getEnvironmentVariables()", "-        if( null == c_procEnvironment )", "+        if( null == m_procEnvironment )", "-            c_procEnvironment = retrieveEnvironmentVariables();", "+            m_procEnvironment = retrieveEnvironmentVariables();", "-        return c_procEnvironment;", "+        return m_procEnvironment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590ef4f73bbb0c10d8fa606cfca2d37b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "1b7d8d44fd80e84057b44965db5a9b39eb72545d", "commitAfterChange": "1876ce865b610d6fe694e7cba44c6c258c0a8cc9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void configureObject( final Object object,                                   final Configuration configuration,                                   final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void configureObject( final Object object,                                   final Configuration configuration,                                   final Context context )         throws ConfigurationException", "diff": ["-                catch( final CascadingException ce )", "+                catch( final Exception ce )", "-                catch( final CascadingException ce )", "+                catch( final Exception ce )", "-                catch( final CascadingException ce )", "+                catch( final Exception ce )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a28b37aecf8fc7619833b61cc2d93ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "e7ab62bc9179b392804835d02155e43d3d2cf5d6", "commitAfterChange": "2e6e170fb375181f4438e1de44808c7adab508a2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public TypeDeployer createDeployer( final File file )         throws DeploymentException", "signatureAfterChange": "     public TypeDeployer createDeployer( final File file )         throws DeploymentException", "diff": ["-            final URLClassLoader classLoader = getClassLoaderForFile( file );", "+            final ClassLoader classLoader = m_classLoaderManager.createClassLoader( file );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b2a66d2c2684dad1764234a506b84ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/AntAspect.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object preExecuteTask(Task task, AspectValueCollection aspectValues)          throws AntException", "signatureAfterChange": "     public Object preExecuteTask(Task task,                                  NamespaceValueCollection namespaceValues)          throws AntException", "diff": ["-    public Object preExecuteTask(Task task, AspectValueCollection aspectValues)", "+    public Object preExecuteTask(Task task,", "+                                 NamespaceValueCollection namespaceValues)", "-        Map antAspectValues = aspectValues.getAttributes(ANT_ASPECT);", "+        AttributeCollection antAspectValues", "+            = namespaceValues.getAttributes(Namespace.ANT_META_URI);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2765507bf17ea81820fa9b93257586", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "commitAfterChange": "80793a20ada49e7453e836ffeab1e41c8a88d49d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws Exception", "signatureAfterChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws ProjectException", "diff": ["+", "-        throws Exception", "+        throws ProjectException", "-            throw new Exception( message );", "+            throw new ProjectException( message );", "-                throw new Exception( message );", "+                throw new ProjectException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee2b4a5a7a1752e3f67d80cbdf3164a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "99cdb67df9d2ec13a938a635fed1f01109fcf945", "commitAfterChange": "12d6c01879b76774bb1cb969f3081301b96dab32", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TarEntry(String name)", "signatureAfterChange": "     public TarEntry(String name)", "diff": ["-     */ ", "+     */", "-        ", "+", "-        ", "+", "-        this.mode = isDir ? 040755 : 0100644;", "+        this.mode = isDir ? DEFAULT_DIR_MODE : DEFAULT_FILE_MODE;", "-        this.modTime = (new Date()).getTime() / 1000;", "+        this.modTime = (new Date()).getTime() / MILLIS_PER_SECOND;", "-    }   ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6980a7baeed7c5d446058344aca2cde9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java", "commitBeforeChange": "cbac1574a3c29b2e1020aee94fc60285afd739c0", "commitAfterChange": "ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "diff": ["-        final TaskletEngine taskletEngine = (TaskletEngine)componentManager.", "-            lookup( \"org.apache.ant.tasklet.engine.TaskletEngine\" );", "-", "-        m_taskletRegistry = taskletEngine.getRegistry();", "+        //UGLY HACK alert !!!", "+        final Executor executor = (Executor)componentManager.", "+            lookup( \"org.apache.myrmidon.components.executor.Executor\" );", "+        m_taskRegistry = executor.getRegistry();", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dbf4aa607c113529e692088851f0013", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private Commandline setupJasperCommand()", "signatureAfterChange": "     private CommandlineJava setupJasperCommand()", "diff": ["-    private Commandline setupJasperCommand() {", "-        Commandline cmd = new Commandline();", "+    private CommandlineJava setupJasperCommand() {", "+        CommandlineJava cmd = new CommandlineJava();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7229138cba6c6612a8ac2e49aae7c35a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/SubBuild.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected Map getProperties()", "signatureAfterChange": "     protected Map getDataValues() throws AntException", "diff": ["-    protected Map getProperties() {", "-        return properties;", "+    protected Map getDataValues() throws AntException {", "+        return dataValues;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7407698429820ff2a4330169e67bb444", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaRegexpMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean matches(String argument)", "signatureAfterChange": "     public boolean matches(String argument) throws BuildException", "diff": ["-    public boolean matches(String argument) {", "-        return reg.match(argument);", "+    public boolean matches(String argument) throws BuildException {", "+        return matches(argument, MATCH_DEFAULT);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fa234822e45a0aba0487bdedccdf4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Classloader.java", "commitBeforeChange": "1020d9795ba7d534a6c6402af1e507b817ef7ef4", "commitAfterChange": "4edeb27347fa04663f2cb6d067fffb753a2760f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "       public void execute()", "signatureAfterChange": "       public void execute()", "diff": ["-                        project, path, reverse );", "+                        project, classpath, reverse );", "-            if( path != null ) {", "-                String list[]=path.list();", "+            if( classpath != null ) {", "+                String list[]=classpath.list();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7662b624cb94b82b43259590f9eea955", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/ActionManager.java", "commitBeforeChange": "3ddbc0b6c9ac6420db40ac98fd25c9960a28880b", "commitAfterChange": "821004a5407db28a7482cff8f928d92b7615ea36", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public String getID()", "signatureAfterChange": "         public BusFilter getBusFilter()", "diff": ["+         */", "+        public BusFilter getBusFilter() {", "+            return _filter;", "-         */", "-        public String getID() {", "-            return _id;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767fa840a2f413b00ad8740f14c2863f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "dbd9d502b9b2d12000649b50595fe24c655ffe28", "commitAfterChange": "16483f5f41faac0ec8040a0f6f7e09d959e1f289", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public Mapper createMapper()", "signatureAfterChange": "     public Mapper createMapper()", "diff": ["+     */", "-        if (_mapper != null) {", "+        if (mapper != null) {", "-        _mapper = new Mapper(getProject());", "-        return _mapper;", "+        mapper = new Mapper(getProject());", "+        return mapper;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cba93f5aaed565cb38679a22f3d9100", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/DefaultLogger.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void processBuildEvent(BuildEvent event)", "signatureAfterChange": "     public void processBuildEvent(BuildEvent event)", "diff": ["-                    Target target = (Target)event.getModelElement();", "+                    Target target = (Target)event.getSource();", "-                     && event.getModelElement() instanceof BuildElement) {", "+                     && event.getSource() instanceof BuildElement) {", "-                         = (BuildElement)event.getModelElement();", "+                         = (BuildElement)event.getSource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80aba3df5613f7bf5160401ffdf2a6d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/Ant.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws AntException", "signatureAfterChange": "     public void execute() throws AntException", "diff": ["-        Object key = execService.setupBuild(model, getProperties(), true);", "+        Object key = execService.setupBuild(model, getDataValues(), true);", "-                logger.setMessageOutputLevel(MessageLevel.MSG_INFO);", "+                logger.setMessageOutputLevel(MessageLevel.INFO);", "-                    MessageLevel.MSG_INFO);", "+                    MessageLevel.INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "882146ae157b68d1b1329b525e85cb9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "cbac1574a3c29b2e1020aee94fc60285afd739c0", "commitAfterChange": "ad7ff5ac203c6982ffcd793fd9dbcc217b1fec08", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void createComponents()         throws Exception", "signatureAfterChange": "     private void createComponents()         throws Exception", "diff": ["-        m_taskEngine = (TaskletEngine)createComponent( component, TaskletEngine.class );", "+        m_executor = (Executor)createComponent( component, Executor.class );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dabc0bf63dbff3d881525b25f1c94a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/SubBuild.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void addReference(Reference reference) throws ExecutionException", "signatureAfterChange": "     public void addReference(Reference reference) throws AntException", "diff": ["-    public void addReference(Reference reference) throws ExecutionException {", "+    public void addReference(Reference reference) throws AntException {", "-            throw new ExecutionException(\"RefId \\\"\" + refId + \"\\\" is not set\");", "+            throw new ValidationException(\"RefId \\\"\" + refId + \"\\\" is not set\");", "-        String toId = reference.getToId();", "+        String toId = reference.getToRefId();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ebfd90cb94478206029e5da8f658ad0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void writeJavaClass()", "signatureAfterChange": "      private void writeJavaClass()", "diff": ["-            writer = new PrintWriter(new FileOutputStream(sourceFile));", "+            writer = new BufferedWriter(new FileWriter(sourceFile));", "-        } catch (FileNotFoundException e) {", "+        } catch (IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4f18626cbbd3a1ade85292dc39584d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/java/ExecuteJava.java", "commitBeforeChange": "bd92e4de44f659770bc30e39f352dcc8446a1e9a", "commitAfterChange": "248269dea49bf84d7f1a87d23906854c519b9f70", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void executeNonForked( final TaskContext context )         throws TaskException", "signatureAfterChange": "     public void executeNonForked( final TaskContext context )         throws TaskException", "diff": ["-        if( m_vmArgs.size() > 0 )", "+        if( m_vmArgs.getArguments().length > 0 )", "-            final ClassLoader classLoader = PathUtil.createClassLoader( m_classPath, context );", "+            final ClassLoader classLoader = FileListUtil.createClassLoader( m_classPath, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94cef0ee86ff0ec5ab51d6e7a370bd63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "32cfa5b1066c1de3e18484d533ecddad213b02bb", "commitAfterChange": "dbf806213104986bab6864d85b55bf0912d64cc7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public String[] getArguments()", "signatureAfterChange": "     public String[] getArguments()", "diff": ["-        Vector result = new Vector(definition.size()*2);", "-        for (int i=0; i<definition.size(); i++) {", "-            Argument arg = (Argument) definition.elementAt(i);", "+        Vector result = new Vector(arguments.size()*2);", "+        for (int i=0; i<arguments.size(); i++) {", "+            Argument arg = (Argument) arguments.elementAt(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9657061777cdeb834434defef55478bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java", "commitBeforeChange": "d448e74cb70204f9a2b8f2b81fb1d3e98ab1d8b3", "commitAfterChange": "b44a63dfe95420e9b9080a97822041d9db8debca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testCleanup() throws BuildException", "signatureAfterChange": "     public void testCleanup() throws BuildException", "diff": ["-        Path path = new Path(p, \".\");", "-        loader = p.createClassLoader(path);", "+        Path path = new Path(project, \".\");", "+        loader = project.createClassLoader(path);", "-        p.fireBuildFinished(null);", "+        project.fireBuildFinished(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96bfa03d90c863e9fa8ad63fc24e1ff4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Intersect.java", "commitBeforeChange": "2e23a881f5f7b8fa9f94965fb114147e70d4c80d", "commitAfterChange": "da83de9208e2efceaf836a155abb5c2446f2dd46", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private List<Resource> collect(ResourceCollection rc)", "signatureAfterChange": "      private Set<Resource> collect(ResourceCollection rc)", "diff": ["-    private List<Resource> collect(ResourceCollection rc) {", "-        List<Resource> result = new ArrayList<Resource>();", "+    private Set<Resource> collect(ResourceCollection rc) {", "+        Set<Resource> result = new LinkedHashSet<Resource>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99275f385c89a385b894559dece69128", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/util/ChainReaderHelper.java", "commitBeforeChange": "6067cc82619953085cb35dceba0b369e99516854", "commitAfterChange": "e91ef17bb5b1855680454851395d663ea19e4d5a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final String processStream()         throws BuildException, IOException", "signatureAfterChange": "     public final String processStream()         throws BuildException, IOException", "diff": ["-                } else if (o instanceof CloneableReader &&", "+                } else if (o instanceof ChainableReader &&", "-                    instream = ((CloneableReader) o).clone(instream);", "+                    instream = ((ChainableReader) o).chain(instream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b065343f1cafcf787093db364e3f881", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/Ilasm.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute()             throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["-            throws BuildException {", "-        if (_srcDir == null) {", "-            _srcDir = project.resolveFile(\".\");", "+             throws BuildException {", "+        if (srcDir == null) {", "+            srcDir = project.resolveFile(\".\");", "-        DirectoryScanner scanner = super.getDirectoryScanner(_srcDir);", "+        DirectoryScanner scanner = super.getDirectoryScanner(srcDir);", "-        log(\"assembling \" + dependencies.length + \" file\" + ((dependencies.length == 1)?\"\":\"s\"));", "+        log(\"assembling \" + dependencies.length + \" file\" + ((dependencies.length == 1) ? \"\" : \"s\"));", "-    } // end execute", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1ee63e7aab352e453530ae1625e2a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicTOPLinkDeploymentTool.java", "commitBeforeChange": "bd2c472af4fc8428f494cfd929dfd098100ceb41", "commitAfterChange": "64c4989ed4575a005c66a87a194791cf15ce27f4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, String baseName)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, String baseName)", "diff": ["-        File toplinkDD = new File(getDescriptorDir(), toplinkDescriptor);", "+        File toplinkDD = new File(getConfig().descriptorDir, toplinkDescriptor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e44d2050aee7607d3014afb60f2668", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/image/Text.java", "commitBeforeChange": "f8c14ca446cbd22d0d9e633ff2b0a13a10ccd313", "commitAfterChange": "ff9b546d81da21c253e71319dc8a756380bac15c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public PlanarImage executeDrawOperation()", "signatureAfterChange": "      public PlanarImage executeDrawOperation()", "diff": ["-        log(\"\\tCreating Text \\\"\" + str_text + \"\\\"\");", "+        log(\"\\tCreating Text \\\"\" + strText + \"\\\"\");", "-        graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);", "-        graphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);", "+        graphics.setRenderingHint(", "+            RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);", "+        graphics.setRenderingHint(", "+            RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);", "-        width = fmetrics.stringWidth(str_text);", "+        width = fmetrics.stringWidth(strText);", "-        graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);", "-        graphics.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);", "+        graphics.setRenderingHint(", "+            RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);", "+        graphics.setRenderingHint(", "+            RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);", "-        graphics.drawString(str_text, 0, height - fmetrics.getMaxDescent());", "+        graphics.drawString(strText, 0, height - fmetrics.getMaxDescent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31261c845a3b2e41a25bb752e3c6ee0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "5872737ff5d0006fffd509da87f4bc9115cb5a39", "commitAfterChange": "2a9f49ba6cde3f1bdf4a1234a4e4f14773c34736", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void createComponents()         throws Exception", "signatureAfterChange": "     private void createComponents()         throws Exception", "diff": ["-        component = getParameter( TskDeployer.ROLE );", "-        m_deployer = (TskDeployer)createComponent( component, TskDeployer.class );", "+        component = getParameter( Deployer.ROLE );", "+        m_deployer = (Deployer)createComponent( component, Deployer.class );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae44bcc4b29bd0a9d6f04cb408cc493a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected InitConfig getInitConfig()", "signatureAfterChange": "     protected AntEnvironment getAntEnvironment()", "diff": ["-    protected InitConfig getInitConfig() {", "-        return initConfig;", "+    protected AntEnvironment getAntEnvironment() {", "+        return antEnv;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5fb85107a8d86df902810548a0b6676", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/AntAspect.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "              public Object preCreateComponent(Object component, BuildElement model)          throws ExecutionException", "signatureAfterChange": "     public Object preCreateComponent(Object component, BuildElement model)          throws AntException", "diff": ["-     */         ", "+     */", "-         throws ExecutionException {", "+         throws AntException {", "-                throw new ExecutionException(\"Element <\" + model.getType()", "+                throw new AspectException(\"Element <\" + model.getType()", "-                throw new ExecutionException(\"The given ant:refid value '\"", "+                throw new AspectException(\"The given ant:refid value '\"", "-        }             ", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68817cbb7581ed4c115b7d9ca21819c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Extension[] getExtensions( final Vector librarys )         throws TaskException", "signatureAfterChange": "     private static Extension[] getExtensions( final ArrayList librarys )         throws TaskException", "diff": ["-    private Extension[] getExtensions( final Vector librarys )", "+    private static Extension[] getExtensions( final ArrayList librarys )", "-            final FileSet fileSet = (FileSet)iterator.next();", "+            final LibFileSet fileSet = (LibFileSet)iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bacf5857aa7aa3f181cf43c07e0380ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask.java", "commitBeforeChange": "7ffe5725b354fcb2af5eb239e2c7ab62adba41d6", "commitAfterChange": "bcc7e3dff34ce66d4f1af34c5d5fbb1603808210", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void appendLibraryList(final Attributes attributes,                                     final String listPrefix,                                     final ArrayList extensions)         throws BuildException", "signatureAfterChange": "     private void appendLibraryList(final Attributes attributes,                                     final String listPrefix,                                     final ArrayList extensions)         throws BuildException", "diff": ["-            final Extension extension = (Extension) extensions.get(i);", "+            final Extension ext = (Extension) extensions.get(i);", "-            Extension.addExtension(extension, prefix, attributes);", "+            Extension.addExtension(ext, prefix, attributes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd88c55a0b74c062c1dbd0059bc3dada", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "6e3fcad6ab9ff0072c59d369c5536326bbca93a8", "commitAfterChange": "24808c7d4bd47d7bcd8654cfbc469f76ed795c70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void recreate() throws BuildException", "signatureAfterChange": "     public void recreate() throws BuildException", "diff": ["-                        deleteSymlink(lnk, this);", "+                        SYMLINK_UTILS.deleteSymbolicLink(test, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6601d6a48b989b05a93cd56fdc882f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaOroMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean matches(String argument)", "signatureAfterChange": "     public boolean matches(String argument) throws BuildException", "diff": ["-    public boolean matches(String argument) {", "-        return reg.contains(argument, pattern);", "+    public boolean matches(String argument) throws BuildException {", "+        return matches(argument, MATCH_DEFAULT);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d007bf4f9abd9be779889ea1b4dce6d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "1d86fa90cf45aacdf5fc9d61e081895f1c099836", "commitAfterChange": "99b22a7da3308ae6800e2b6d95ec3827b54c852f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void exitAntLib()", "signatureAfterChange": "     public void exitAntLib()", "diff": ["-            antLibCurrentTypeTable = (AntTypeTable) antLibStack.peek();", "+            antLibCurrentUri = (String) antLibStack.peek();", "-            antLibCurrentTypeTable = null;", "+            antLibCurrentUri = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d052da469feccc4392b7729e504aaf06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "6c846ce771f79a7e5a6b2ba1c30db240fd7e1bde", "commitAfterChange": "e532d834451124dce54c907ce17725b02ae981e4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Path createSourcespath()", "signatureAfterChange": "     public Path createSourcespath()", "diff": ["-        if (_sourcesPath == null) {", "-            _sourcesPath = new Path(getProject());", "+        if (sourcesPath == null) {", "+            sourcesPath = new Path(getProject());", "-        return _sourcesPath.createPath();", "+        return sourcesPath.createPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2857a1e7715e7f4a5492917f3e784f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "08f27b19f20d6c25bb926a0c5a9a257732ea644d", "commitAfterChange": "512567d2f68e90c8c9e36441c6a0bee8f64997ef", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public boolean eval()", "signatureAfterChange": "     public boolean eval()", "diff": ["-        Long ell = null;", "+        Long ell;", "-        } else {", "-            ConditionHandler h = new ConditionHandler();", "+        } else { ", "+            AccumHandler h = new AccumHandler();", "-            ell = new Long(h.getLength());", "+            ell = new Long(h.getAccum());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5981189668985a60e8105887040df34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/util/FileUtils.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public File normalize(String path)          throws NullPointerException, ExecutionException", "signatureAfterChange": "     public File normalize(String path)          throws NullPointerException, GeneralException", "diff": ["-         throws NullPointerException, ExecutionException {", "+         throws NullPointerException, GeneralException {", "-            throw new ExecutionException(msg);", "+            throw new GeneralException(msg);", "-                    throw new ExecutionException(\"Cannot resolve path \"", "+                    throw new GeneralException(\"Cannot resolve path \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d74c0b39a0f6b774efe8334b06675769", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "80793a20ada49e7453e836ffeab1e41c8a88d49d", "commitAfterChange": "732df7532e22b0472690663897388f4b89ca9eb6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-        addedFiles.clear();", "-        filesets.clear();", "+        addedFiles.removeAllElements();", "+        filesets.removeAllElements();", "-        groupfilesets.clear();", "+        groupfilesets.removeAllElements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1efb9389075f28c30bb5270f195a7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "      public int lastDelimiterPosition(StringBuffer buf, String currentLine)", "signatureAfterChange": "      public int lastDelimiterPosition(StringBuffer buf, String currentLine)", "diff": ["-            String d = delimiter.trim().toLowerCase(Locale.US);", "+            String d = delimiter.trim().toLowerCase(Locale.ENGLISH);", "-                        .toLowerCase(Locale.US).charAt(0)", "+                        .toLowerCase(Locale.ENGLISH).charAt(0)", "-                return currentLine.trim().toLowerCase(Locale.US).equals(d)", "+                return currentLine.trim().toLowerCase(Locale.ENGLISH).equals(d)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0fef6cd5a7df99755b38b952b4af183", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public synchronized Object set(int index, Object o)", "signatureAfterChange": "      public synchronized E set(int index, E o)", "diff": ["-    public synchronized Object set(int index, Object o) {", "-        Object orig = get(index);", "+    public synchronized E set(int index, E o) {", "+        E orig = get(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e33b1f1ddba8d43eac306737f6218bcb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/ChangeLog.java", "commitBeforeChange": "ea33b6b4691ce6030349ce998517658582ec6c01", "commitAfterChange": "bec70759081189ba786d031c7720429f7da35ef0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void validate()         throws TaskException", "signatureAfterChange": "     private void validate()         throws TaskException", "diff": ["-        if( null != m_users && !m_users.exists() )", "+        if( null != m_usersFile && !m_usersFile.exists() )", "-                REZ.getString( \"changelog.bad-userlist.error\", m_users.getAbsolutePath() );", "+                REZ.getString( \"changelog.bad-userlist.error\", m_usersFile.getAbsolutePath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb96a5b7ecb9507b520ec579eff35d36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java", "commitBeforeChange": "5413125a9152c81e198e20fcd6ed6866aa620257", "commitAfterChange": "32e4c2da9af3a95ca9356dee52d4e4c85e11bd4d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "diff": ["-        System.err.println(\"Parsing with PH2: \" + source );", "+            System.err.println(\"Parsing with PH2: \" + context.buildFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa056d45dcae809ef6df9419218e8fe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws AntException", "signatureAfterChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws AntException", "diff": ["-            = model.getAspectAttributeValue(Constants.ANT_ASPECT, \"type\");", "+            = model.getNamespaceAttributeValue(Namespace.ANT_META_URI, \"type\");"]}]}