{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f13b3c99df20dd8cccdc048b0c0f288", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c07191de9f9eabf828c9befca51fb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "signatureAfterChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "diff": ["-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "+        ArrayList fragments = new ArrayList();", "+        ArrayList propertyRefs = new ArrayList();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-        while( i.hasMoreElements() )", "+        Iterator i = fragments.iterator();", "+        Iterator j = propertyRefs.iterator();", "+        while( i.hasNext() )", "-            String fragment = (String)i.nextElement();", "+            String fragment = (String)i.next();", "-                String propertyName = (String)j.nextElement();", "+                String propertyName = (String)j.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2fe5f04b79fba341c73611657cd564", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/Project.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "signatureAfterChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "diff": ["-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "+        ArrayList fragments = new ArrayList();", "+        ArrayList propertyRefs = new ArrayList();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-        while( i.hasMoreElements() )", "+        Iterator i = fragments.iterator();", "+        Iterator j = propertyRefs.iterator();", "+        while( i.hasNext() )", "-            String fragment = (String)i.nextElement();", "+            String fragment = (String)i.next();", "-                String propertyName = (String)j.nextElement();", "+                String propertyName = (String)j.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0be8f6968bcb0ea197543bb215bb06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "3354222b50e1a78721b163a398c46575b15ad2f7", "commitAfterChange": "ed45d2f66a2b566ce5be500c39eb8bdbe171ea1c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-        Hashtable newroots = new Hashtable();", "-        // put in the newroots vector the include patterns without", "+        Map newroots = new HashMap();", "+        // put in the newroots map the include patterns without", "-            Enumeration enum2 = newroots.keys();", "+            Iterator it = newroots.entrySet().iterator();", "-            while (enum2.hasMoreElements()) {", "-                String currentelement = (String) enum2.nextElement();", "+            while (it.hasNext()) {", "+            \tMap.Entry entry = (Map.Entry)it.next();", "+                String currentelement = (String) entry.getKey();", "-                String originalpattern = (String) newroots.get(currentelement);", "+                String originalpattern = (String) entry.getValue();"]}]}