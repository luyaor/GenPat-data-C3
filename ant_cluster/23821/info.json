{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1208be5f306ad5cff3b67fb8d474cf35", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be681632798c96761d2399f09c31608a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarInputStream.java", "commitBeforeChange": "a7b657bd9ae901100575a7434347e3d26090ec8f", "commitAfterChange": "63664a8786c82ffef4f09c1bec3d3e7db8cbcfb8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public TarEntry getNextEntry() throws IOException", "signatureAfterChange": "     public TarEntry getNextEntry() throws IOException", "diff": ["+        if (this.currEntry != null && this.currEntry.isGNULongNameEntry()) {", "+            // read in the name", "+            StringBuffer longName = new StringBuffer();", "+            byte[] buffer = new byte[256];", "+            int length = 0;", "+            while ((length = read(buffer)) >= 0) {", "+                longName.append(new String(buffer, 0, length));", "+            }", "+            getNextEntry();", "+            this.currEntry.setName(longName.toString());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7dadcbb866f3ef5e8837f214a3c14c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm.java", "commitBeforeChange": "d1e9fb46083b84b3277bdf8d4e23e05ffc19fbd7", "commitAfterChange": "87142931bdb6a80473706eb4adaf3c9234be57fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getValue(File file)", "signatureAfterChange": "     public String getValue(File file)", "diff": ["+        Reader r = null;", "-            java.io.FileInputStream fis = new java.io.FileInputStream(file);", "-            StringBuffer content = new StringBuffer();", "-            byte[] buffer = new byte[256];            ", "-            int len = 0;", "-            while ((len = fis.read(buffer, 0, len)) != -1) {", "-                content.append(new String(buffer, 0, len));", "-            }", "-            fis.close();", "-            int hash = content.toString().hashCode();", "+            r = new FileReader(file);", "+            int hash = FileUtils.readFully(r).hashCode();", "+        } finally {", "+            FileUtils.close(r);"]}]}