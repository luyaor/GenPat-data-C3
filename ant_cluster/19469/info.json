{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e99b7df8d513cf70739e8647ac11064c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05bf7872070ee1ac2d30d8018004ac5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            Enumeration/*<URL>*/ urls = null;", "-            if (file != null) {", "+            final Enumeration<URL> urls;", "+            if (file == null) {", "+                urls = resourceToURLs(al);", "+            } else {", "-                urls = new Enumeration() {", "-                    private boolean more = true;", "-                    public boolean hasMoreElements() {", "-                        return more;", "-                    }", "-                    public Object nextElement() throws NoSuchElementException {", "-                        if (more) {", "-                            more = false;", "-                            return url;", "-                        } else {", "-                            throw new NoSuchElementException();", "-                        }", "-                    }", "-                };", "-            } else {", "-                urls = resourceToURLs(al);", "+                urls = Collections.enumeration(Collections.singleton(url));", "-                URL url = (URL) urls.nextElement();", "+                URL url = urls.nextElement();", "-                    if (resourceStack.getStack().get(url) != null) {", "+                    if (RESOURCE_STACK.get().get(url) != null) {", "-                            + resourceStack.getStack().get(url),", "+                            + RESOURCE_STACK.get().get(url),", "-                            resourceStack.getStack().put(url, getLocation());", "+                            RESOURCE_STACK.get().put(url, getLocation());", "-                            resourceStack.getStack().remove(url);", "+                            RESOURCE_STACK.get().remove(url);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f63e997d37ace27ebad23b6097b415", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "9c51b355f7e7c16c5466e43b59019cad49a1fe56", "commitAfterChange": "b001eb2bcb618ad963c862bf203df3c0a302bd99", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void checkOptions() throws BuildException", "signatureAfterChange": "     protected void checkOptions() throws BuildException", "diff": ["-        if (home == null || !home.isDirectory()) {", "+        if (getHome() == null || !getHome().isDirectory()) {", "-        home = new File(home, \"coverage\");", "-        File jar = new File(home, \"coverage.jar\");", "+        File jar = findJar(\"coverage/coverage.jar\");", "-            throw new BuildException(\"Cannot find Coverage directory: \" + home);", "+            throw new BuildException(\"Cannot find Coverage directory: \" + getHome());", "-            String version = System.getProperty(\"java.version\");", "-            // make we are using 1.2+, if it is, then do your best to", "-            // get a javaexe", "-            if (!version.startsWith(\"1.1\")) {", "+            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "-                // if we are here obviously it is java2", "-                String home = System.getProperty(\"java.home\");", "-                boolean isUnix = File.separatorChar == '/';", "-                javaExe = isUnix ? new File(home, \"bin/java\") : new File(home, \"/bin/java.exe\");", "+                javaExe = new File(JavaEnvUtils.getJreExecutable(\"java\"));"]}]}