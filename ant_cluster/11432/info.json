{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f286a814d84e1f6fbf6d45c8d30d6ed5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25faa70aa283df6de2c4131bfa496b05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/MutantBuilder.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void antlibs(BuildHelper helper)", "signatureAfterChange": "     protected void antlibs(BuildHelper helper)", "diff": ["+    protected void antlibs(BuildHelper helper) {", "+        helper.runDepends(this, \"antlibs\", \"common\");", "+        System.out.println(\"antlibs: \");", "+        {", "+            BuildHelper subHelper = new BuildHelper();", "+            subHelper.setProperty(\"libname\", helper.resolve(\"system\"));", "+            subHelper.setProperty(\"antlibdir\", helper.resolve(\"${dist.syslibs.dir}\"));", "+            subHelper.setParent(helper);", "+            _init(subHelper);", "+            buildlib(subHelper);", "+        }", "+        {", "+            BuildHelper subHelper = new BuildHelper();", "+            subHelper.setProperty(\"libname\", helper.resolve(\"monitor\"));", "+            subHelper.setProperty(\"antlibdir\", helper.resolve(\"${dist.syslibs.dir}\"));", "+            subHelper.setParent(helper);", "+            _init(subHelper);", "+            buildlib(subHelper);", "+        }", "-    }", "-    protected void antlibs(BuildHelper helper) {", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37690913e223b5fdb1b52d70123100a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "ea41c72f7adfce4ad48caded93962140650f2746", "commitAfterChange": "a65cadb437afdc85fcc77d9c58293c66e456ff46", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public synchronized void addBuildListener(BuildListener listener)", "signatureAfterChange": "     public void addBuildListener(BuildListener listener)", "diff": ["-    public synchronized void addBuildListener(BuildListener listener) {", "-        // If the listeners already has this listener, do nothing", "-        if (listeners.contains(listener)) {", "-            return;", "+    public void addBuildListener(BuildListener listener) {", "+        synchronized (listenersLock) {", "+            // If the listeners already has this listener, do nothing", "+            if (listeners.contains(listener)) {", "+                return;", "+            }", "+            // copy on write semantics", "+            Vector newListeners = getBuildListeners();", "+            newListeners.addElement(listener);", "+            listeners = newListeners;", "-        // create a new Vector to avoid ConcurrentModificationExc when", "-        // the listeners get added/removed while we are in fire", "-        Vector newListeners = getBuildListeners();", "-        newListeners.addElement(listener);", "-        listeners = newListeners;"]}]}