{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b9fc91b71e2398413e108d5638a7654", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d520ce0f4d6fc1b3254d0f753b4f013", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public String[] getArguments()", "signatureAfterChange": "     public String[] getArguments()", "diff": ["-        Vector result = new Vector( arguments.size() * 2 );", "-        for( int i = 0; i < arguments.size(); i++ )", "+        ArrayList result = new ArrayList( m_arguments.size() * 2 );", "+        for( int i = 0; i < m_arguments.size(); i++ )", "-            Argument arg = (Argument)arguments.elementAt( i );", "+            Argument arg = (Argument)m_arguments.get( i );", "-                result.addElement( s[ j ] );", "+                result.add( s[ j ] );", "-        String[] res = new String[ result.size() ];", "-        result.copyInto( res );", "-        return res;", "+        final String[] res = new String[ result.size() ];", "+        return (String[])result.toArray( res );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e545e57644a283963627090473a43fc4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public String[] getArguments()", "signatureAfterChange": "     public String[] getArguments()", "diff": ["-        Vector result = new Vector( arguments.size() * 2 );", "-        for( int i = 0; i < arguments.size(); i++ )", "+        ArrayList result = new ArrayList( m_arguments.size() * 2 );", "+        for( int i = 0; i < m_arguments.size(); i++ )", "-            Argument arg = (Argument)arguments.elementAt( i );", "+            Argument arg = (Argument)m_arguments.get( i );", "-                result.addElement( s[ j ] );", "+                result.add( s[ j ] );", "-        String[] res = new String[ result.size() ];", "-        result.copyInto( res );", "-        return res;", "+        final String[] res = new String[ result.size() ];", "+        return (String[])result.toArray( res );"]}]}