{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fe6d4da69860cc84f1f9801edc9d853", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5bff31798a47e66839b5721275a1225", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = selectors.iterator(); i.hasNext(); ) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectors) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);", "-            for (Iterator i = additionalPatterns.iterator(); i.hasNext(); ) {", "-                PatternSet ps = (PatternSet) i.next();", "+            for (PatternSet ps : additionalPatterns) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc71ecf80a05c454933b4699a1116a51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/ResourceList.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator iter = textDocuments.iterator(); iter.hasNext(); ) {", "-                Object o = (Object) iter.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (ResourceCollection resourceCollection : textDocuments) {", "+                if (resourceCollection instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) resourceCollection, stk, p);", "-            for (Iterator iter = filterChains.iterator(); iter.hasNext(); ) {", "-                FilterChain fc = (FilterChain) iter.next();", "-                pushAndInvokeCircularReferenceCheck(fc, stk, p);", "+            for (FilterChain filterChain : filterChains) {", "+                pushAndInvokeCircularReferenceCheck(filterChain, stk, p);"]}]}