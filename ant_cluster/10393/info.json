{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd971663c459ad34329653dfccad8997", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3969aa444559046dd94acc21ec8eee7c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "1511487597b2dfa9391f80564f09d13a12418911", "commitAfterChange": "34e72a6607d510aed224c0db5b5b7a492e7e06d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void closeEntry() throws IOException", "signatureAfterChange": "     public void closeEntry() throws IOException", "diff": ["-            entry.setComprSize(adjustToLong(def.getTotalOut()));", "+            entry.setCompressedSize(adjustToLong(def.getTotalOut()));", "-            entry.setComprSize(size);", "+            entry.setCompressedSize(size);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5358fc3b2ee44a869a0e487a96db1c8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "cbc4de47ebaa1710dbbf8d73efff8ccc8aeb26c4", "commitAfterChange": "362a940807ba311bb1ae34d77bbace30aa932a3b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "     protected String getDefinitionsParameter() throws BuildException", "signatureAfterChange": "     protected String getDefinitionsParameter() throws BuildException", "diff": ["-            Define define = (Define) defEnum.nextElement();", "+            DotnetDefine define = (DotnetDefine) defEnum.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53aea642f414fbefefe370d92ee41107", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "7d7fc053b7a9233664ffc5635354025a41e9cccd", "commitAfterChange": "559fe1af187c27c6253ef3a1b639783f0a372f50", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Class loadClass(String classname, boolean resolve) throws ClassNotFoundException", "signatureAfterChange": "     protected Class loadClass(String classname, boolean resolve) throws ClassNotFoundException", "diff": ["-                    theClass = findSystemClass(classname);", "+                    theClass = findBaseClass(classname);", "-                    theClass = findSystemClass(classname);", "+                    theClass = findBaseClass(classname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a4fb61af06ee16f7c21d409b6ed19a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "fe2d7e6728ee0645c750e137c004d16af2205115", "commitAfterChange": "87c740f8a7024d16874ec4f65ccd688a77320724", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static IntrospectionHelper getHelper(Project p, Class c)", "signatureAfterChange": "     public static IntrospectionHelper getHelper(Project p, Class c)", "diff": ["-        IntrospectionHelper ih = (IntrospectionHelper) helpers.get(c);", "+        IntrospectionHelper ih = (IntrospectionHelper) HELPERS.get(c);", "-                helpers.put(c, ih);", "+                HELPERS.put(c, ih);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a965f9b35cb74b06728d0e9331194f59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "cf0368cc6dc75cf7b91519a34e542f0ddc74787e", "commitAfterChange": "74f2e55f3c8dbbb5e162854964c52b41454650cc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void handleErrorFlush(String output)", "signatureAfterChange": "     protected void handleErrorFlush(String output)", "diff": ["-            ((Task) realThing).handleErrorOutput(output);", "+            ((Task) realThing).handleErrorFlush(output);", "-            super.handleErrorOutput(output);", "+            super.handleErrorFlush(output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1608f9bf5bf2c14138f652b5a7782a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "69d9b9a49622889f44d6792faf00f886857828d6", "commitAfterChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws ExecutionException", "diff": ["-        String typeName = model.getAspectValue(Constants.ANT_ASPECT, \"type\");", "-        String refId = model.getAspectValue(Constants.ANT_ASPECT, \"refid\");", "+        String typeName ", "+            = model.getAspectAttributeValue(Constants.ANT_ASPECT, \"type\");", "+        String refId ", "+            = model.getAspectAttributeValue(Constants.ANT_ASPECT, \"refid\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21a58bcc9e05b723eb86f1bda5f1b53", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void setVsspath(String vssPath)", "signatureAfterChange": "     public final void setVsspath(String vssPath)", "diff": ["-        if (vssPath.startsWith(\"vss://\")) {", "+        if (vssPath.startsWith(\"vss://\")) { //$NON-NLS-1$", "-            m_vssPath = projectPath;", "+            vssPath = projectPath;", "-            m_vssPath = PROJECT_PREFIX + projectPath;", "+            vssPath = PROJECT_PREFIX + projectPath;"]}]}