{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2788534ef2c574099e6766dc9565b63d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e882a8798d05595bd374572ceb24c9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "30c15adf831522a3e92cea70a72cd19068f8b135", "commitAfterChange": "b91a25c851c38c44462c4a025b41cf631bc658bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void process( final String systemID,                              final SAXConfigurationHandler handler )         throws Exception", "signatureAfterChange": "      protected void process( final URL systemID,                              final SAXConfigurationHandler handler )         throws Exception", "diff": ["-    protected void process( final String systemID, ", "+    protected void process( final URL systemID, ", "-        parser.parse( systemID );", "-/*", "-        // Create a transform factory instance.", "-        final TransformerFactory factory = TransformerFactory.newInstance();", "-    ", "-        // Create a transformer for the stylesheet.", "-        final Transformer transformer = factory.newTransformer( new StreamSource(xslID) );", "-", "-        final Result result = new SAXResult( handler );", "-", "-        // Transform the source XML to System.out.", "-        transformer.transform( new StreamSource(sourceID), result );", "-*/", "+        parser.parse( systemID.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1559e24da8990e08e274807b77cbcd67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private Reflector getReflector(Class c)", "signatureAfterChange": "     private Reflector getReflector(Class c)", "diff": ["-        ClassIntrospector introspector = new ClassIntrospector(c, converters);", "+        ClassIntrospector introspector", "+             = new ClassIntrospector(c, componentManager.getConverters());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382a6c5bf354f078a19ca2d7a50ccc76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSTargetElement.java", "commitBeforeChange": "8170daae431ee785c4c5fe5b924ab200f077ab3a", "commitAfterChange": "6a6e0bd2647db6ae35dcfa3e9f81e306a64b7cc4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] getDependencyNames()", "signatureAfterChange": "     public String[] getDepends()", "diff": ["-\t */", "-    public String[] getDependencyNames() {", "-        String depends = getAttribute(\"depends\");", "-        StringTokenizer tok = new StringTokenizer(depends,\",\");", "-        String[] retval = new String[tok.countTokens()];", "-        for(int i = 0; i < retval.length; i++) {", "-            retval[i] = tok.nextToken();", "-        }", "-        ", "-        return retval;", "+\t */", "+    public String[] getDepends() {", "+        String depends = getAttribute(DEPENDS);", "+        StringTokenizer tok = new StringTokenizer(depends,\",\");", "+        String[] retval = new String[tok.countTokens()];", "+        for(int i = 0; i < retval.length; i++) {", "+            retval[i] = tok.nextToken().trim();", "+        }", "+        ", "+        return retval;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e375c8d030cf5c22cb284d84d434a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setStylesheet(String fileName) throws Exception", "signatureAfterChange": "      public void setStylesheet(File fileName) throws Exception", "diff": ["-    public void setStylesheet(String fileName) throws Exception {", "+    public void setStylesheet(File fileName) throws Exception {", "-      xslSheet = xslReader.read( fileName );", "-    };", "+      // a file:/// + getAbsolutePath() does not work here", "+      // it is really the pathname", "+      xslSheet = xslReader.read( fileName.getAbsolutePath() );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89e98471ff633b3e05449a7df607eb58", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "8d226e312c364e3465737658341d24cf795c3393", "commitAfterChange": "bc34bb06ca8b29568e31990be726d04559ca2972", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected final TypeFactory getTypeFactory( final String role )         throws ConfigurationException", "signatureAfterChange": "     protected final TypeFactory getTypeFactory( final Class role )         throws ConfigurationException", "diff": ["-    protected final TypeFactory getTypeFactory( final String role )", "+    protected final TypeFactory getTypeFactory( final Class role )", "-            final String message = REZ.getString( \"no-factory-for-role.error\", role );", "+            final String message = REZ.getString( \"no-factory-for-role.error\", role.getName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37a9ff12f32daf7db355b93575acc21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "30c15adf831522a3e92cea70a72cd19068f8b135", "commitAfterChange": "b91a25c851c38c44462c4a025b41cf631bc658bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private Project build( final File file, final HashMap projects )         throws Exception", "signatureAfterChange": "      private Project build( final File file, final HashMap projects )         throws Exception", "diff": ["-        final String systemID = file.toURL().toString();", "-        final Project result = (Project)projects.get( systemID );", "+        final URL systemID = file.toURL();", "+        final Project result = (Project)projects.get( systemID.toString() );", "+", "-        projects.put( systemID, project );", "+        projects.put( systemID.toString(), project );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05e54a37b4cee70e8a2e568bc9f5e23", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "4bd65dfb59acfb5d60a90f79fa73a7e561bb8239", "commitAfterChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void onTestEnded(TestRunEvent evt)", "signatureAfterChange": "      public void onTestEnded(TestRunEvent evt)", "diff": ["-        Element currentTest = (Element) testElements.get(evt);", "+        Element currentTest = (Element) testElements.get(evt.getName());", "-        TestRunEvent start = (TestRunEvent)testStarts.get(evt);", "+        TestRunEvent start = (TestRunEvent)testStarts.get(evt.getName());", "-        super.onTestEnded(evt);"]}]}