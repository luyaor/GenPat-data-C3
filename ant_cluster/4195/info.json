{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0d8e797abcd169793553f2dac4d5810", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f97e4d4927ad7fa0782e9c2f4ac08ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "f987ed2417d66f6e74eb0b78cc290ca3f3ee3863", "commitAfterChange": "2366612c9c9ca8e538fd8faaec24184bc5b96c73", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        ", "+        if (outputFile != null) {", "+            cmdl.createArgument().setValue(\"-\" + OUTPUT_FILE + \":\" ", "+                                           + outputFile.replace('\\\\', '/'));", "+        }", "+", "+        File javaFile = null;", "-            outputDirectory = new File(target.getParent());", "+            javaFile = new File(createOutputFileName(target, outputFile, ", "+                                                     null));", "+        } else {", "+            if (!outputDirectory.isDirectory()) {", "+                throw new BuildException(\"'outputdirectory' \" + outputDirectory", "+                                         + \" is not a directory.\");", "+            }", "+ ", "+            // convert backslashes to slashes, otherwise jjtree will", "+            // put this as comments and this seems to confuse javacc", "+            cmdl.createArgument().setValue(\"-OUTPUT_DIRECTORY:\"", "+                                           + outputDirectory.getAbsolutePath()", "+                                             .replace('\\\\', '/'));", "+ ", "+            javaFile = new File(createOutputFileName(target, outputFile, ", "+                                                     outputDirectory", "+                                                     .getPath()));", "-        if (!outputDirectory.isDirectory()) {", "-            throw new BuildException(\"'outputdirectory' \" + outputDirectory", "-                + \" is not a directory.\");", "-        }", "-        // convert backslashes to slashes, otherwise jjtree will put this as", "-        // comments and this seems to confuse javacc", "-        cmdl.createArgument().setValue(\"-OUTPUT_DIRECTORY:\"", "-            + outputDirectory.getAbsolutePath().replace('\\\\', '/'));", "-        String targetName = target.getName();", "-        final File javaFile = new File(outputDirectory,", "-            targetName.substring(0, targetName.indexOf(\".jjt\")) + \".jj\");", "-             && target.lastModified() < javaFile.lastModified()) {", "+            && target.lastModified() < javaFile.lastModified()) {", "-        cmdl.setClassname(JavaCC.getMainClass(javaccHome,", "+        cmdl.setClassname(JavaCC.getMainClass(javaccHome, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7112b8ca9dc1cd530be623077ce4194a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java", "commitBeforeChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "commitAfterChange": "20dede5ad87cf903e9be1a39d67312d7f39dfcd0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public String getVersionCommand()", "signatureAfterChange": "     public void getVersionCommand(Commandline cmd)", "diff": ["-    public String getVersionCommand() {", "+    public void getVersionCommand(Commandline cmd) {", "-            return new String(\" \" + FLAG_VERSION + m_Version);", "+            cmd.createArgument().setValue(FLAG_VERSION + m_Version);", "+        } else if ( m_Date != null) {", "+            cmd.createArgument().setValue(FLAG_VERSION_DATE + m_Date);", "+        } else if (m_Label != null) {", "+            cmd.createArgument().setValue(FLAG_VERSION_LABEL + m_Label);", "-", "-        if ( m_Date != null) {", "-            return new String(\" \" + FLAG_VERSION_DATE + m_Date);", "-        }", "-", "-        if (m_Label != null) {", "-            return new String(\" \" + FLAG_VERSION_LABEL + m_Label);", "-        }", "-", "-        return \"\";"]}]}