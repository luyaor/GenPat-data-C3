{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85129234f7ad9b163dbc42f5ab0395a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f5839d517fc820ff6ef4e156af9fed8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TokenizedPattern.java", "commitBeforeChange": "8b58203e3120ecbeb7c53ce127fb41316f7eea92", "commitAfterChange": "be9a9286654ae67726b1c9c8512f0ae41c63dc6c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean matchPath(String str)", "signatureAfterChange": "     public boolean matchPath(TokenizedPath path, boolean isCaseSensitive)", "diff": ["-     */", "-    public boolean matchPath(String str) {", "-        return SelectorUtils.matchPath(tokenizedPattern, str, true);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3d292c3308d0fcb9bc554c32b9e34b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/launcher/Main.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void execMainClass( final URLClassLoader classLoader, final String[] args )         throws Exception", "signatureAfterChange": "     private static void execMainClass( final ClassLoader classLoader,                                        final Map properties,                                        final String[] args )         throws Exception", "diff": ["-    private static void execMainClass( final URLClassLoader classLoader, final String[] args )", "+     */", "+    private static void execMainClass( final ClassLoader classLoader,", "+                                       final Map properties,", "+                                       final String[] args )", "-        final Method method = clazz.getMethod( \"main\", new Class[]{args.getClass()} );", "-", "-        Thread.currentThread().setContextClassLoader( classLoader );", "+        final Method method = clazz.getMethod( \"main\", new Class[]{Map.class, args.getClass()} );", "-        method.invoke( null, new Object[]{args} );", "+        method.invoke( null, new Object[]{properties, args} );"]}]}