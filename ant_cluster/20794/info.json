{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29758b468273601fccafca40e6d77c8b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c856657535db491e359044d14c374e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/ExecMetaData.java", "commitBeforeChange": "0e2f7c5672c7990faf3c2b53b6ce1531d278af54", "commitAfterChange": "da8ec4fa38d1b9a6a558e0cc7ffe9c5a439141d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ExecMetaData( final String[] command,                          final Properties environment,                          final File workingDirectory,                          final boolean environmentAdditive )", "signatureAfterChange": "     public ExecMetaData( final String[] command,                          final Properties environment,                          final File workingDirectory )", "diff": ["-                         final File workingDirectory,", "-                         final boolean environmentAdditive )", "+                         final File workingDirectory )", "-        m_isEnvironmentAdditive = environmentAdditive;", "-        }", "-", "-        if( null == m_environment && m_isEnvironmentAdditive )", "-        {", "-            throw new IllegalArgumentException( \"isEnvironmentAdditive\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d516afd64a2745c9d44c60865be79310", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "13355064e679198a0b8212779599eb888739a9bd", "commitAfterChange": "662f68f096613b90eb1448be53d907453492287f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected Task makeTask(UnknownElement ue, RuntimeConfigurable w,                             boolean onTopLevel)", "signatureAfterChange": "     protected Task makeTask(UnknownElement ue, RuntimeConfigurable w)", "diff": ["-    protected Task makeTask(UnknownElement ue, RuntimeConfigurable w,", "-                            boolean onTopLevel) {", "+    protected Task makeTask(UnknownElement ue, RuntimeConfigurable w) {", "-        if (task == null && !onTopLevel) {", "-            throw getNotFoundException(\"task\", ue.getTag());", "-        }"]}]}