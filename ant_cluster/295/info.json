{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ceb575dc8b0eb2a2bb2e80709977c00", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1672912d2630842e77eeb593de4fe07a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/LocationTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testPresetdefWrappedTask()", "signatureAfterChange": "      @Test     public void testPresetdefWrappedTask()", "diff": ["+    @Test", "-        executeTarget(\"testPresetdefWrappedTask\");", "-        Echo e = (Echo) getProject().getReference(\"echo4\");", "-        assertTrue(getLog().indexOf(\"Line: \" ", "+        buildRule.executeTarget(\"testPresetdefWrappedTask\");", "+        Echo e = (Echo) buildRule.getProject().getReference(\"echo4\");", "+        assertTrue(buildRule.getLog().indexOf(\"Line: \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e62e015e83d38a2104585fc255634aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/LocationTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testMacrodefWrappedTask()", "signatureAfterChange": "      @Test     public void testMacrodefWrappedTask()", "diff": ["+    @Test", "-        executeTarget(\"testMacrodefWrappedTask\");", "-        Echo e = (Echo) getProject().getReference(\"echo3\");", "-        assertTrue(getLog().indexOf(\"Line: \" ", "+        buildRule.executeTarget(\"testMacrodefWrappedTask\");", "+        Echo e = (Echo) buildRule.getProject().getReference(\"echo3\");", "+        assertTrue(buildRule.getLog().indexOf(\"Line: \""]}]}