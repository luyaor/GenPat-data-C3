{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "883fc8dd33df82cf41cb278427400cac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14104e9094fc81550a697da622677381", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "3c6661202656fab045e5becd7f0b2e3f4cba293d", "commitAfterChange": "c32873b51961cb99f47b4ae6da2922b7b46a6f89", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        String classpath = getCompileClasspath(baseDir);", "+        Path classpath = getCompileClasspath(baseDir);", "+", "+        for (int i=0; i<classpathReferences.size(); i++) {", "+            Reference r = (Reference) classpathReferences.elementAt(i);", "+            Object o = r.getReferencedObject(project);", "+            if (o instanceof Path) {", "+                classpath.append((Path) o);", "+            } else {", "+                String msg = r.getRefId()+\" doesn\\'t denote a classpath\";", "+                throw new BuildException(msg, location);", "+            }", "+        }", "+        ", "-        args[i++] = classpath;", "+        args[i++] = classpath.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321a0d53114fdeeb34caed6f6858eb96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "982db474ca24f7c65bcc07ab553f100b4f39b3e0", "commitAfterChange": "ff810113da688cd4aa875ac5bb4ddea3863a9f53", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-", "-        for (int i=0; i<classpathReferences.size(); i++) {", "-            Reference r = (Reference) classpathReferences.elementAt(i);", "-            Object o = r.getReferencedObject(project);", "-            if (o instanceof Path) {", "-                classpath.append((Path) o);", "-            } else {", "-                String msg = r.getRefId()+\" doesn\\'t denote a classpath\";", "-                throw new BuildException(msg, location);", "-            }", "-        }", "-        "]}]}