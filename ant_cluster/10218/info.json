{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3714e15976c1616ff1cd1cf0965f838", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90831cec603c5ba11a746c004f5ef1d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "f91f776468c676f75f26ceedd0bfec27d8502da3", "commitAfterChange": "b30c144309f56e380bbc34897b8ab7ff29c40f17", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-            throw new Exception( \"myrmidon-home (\" + homeDir + \") is not a directory\" );", "+            final String message = REZ.getString( \"home-not-dir.error\", homeDir );", "+            throw new Exception( message );", "-            throw new Exception( \"File \" + buildFile + \" is not a file or doesn't exist\" );", "+            final String message = REZ.getString( \"bad-file.error\", buildFile );", "+            throw new Exception( message );", "-        getLogger().warn( \"Ant Build File: \" + buildFile );", "-        getLogger().info( \"Ant Home Directory: \" + homeDir );", "+        if( getLogger().isInfoEnabled() )", "+        {", "+            final String message = REZ.getString( \"buildfile.notice\", buildFile );", "+            getLogger().warn( message );", "+        }", "+", "+        if( getLogger().isInfoEnabled() )", "+        {", "+            final String message = REZ.getString( \"homedir.notice\", homeDir );", "+            getLogger().info( message );", "+        }", "-            System.out.println( \"Continue ? (Enter no to stop)\" );", "+            final String message = REZ.getString( \"repeat.notice\" );", "+            System.out.println( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59c5ccf928fe6d22fb7e3b6fc1b2f05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/runtime/ConverterDef.java", "commitBeforeChange": "d957fa1151163d513197a174a098e2aac8745b1e", "commitAfterChange": "87ceed8170a6359ac2c4714b6ad22c55d2b1f571", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      protected TypeDefinition createTypeDefinition()", "diff": ["+    protected TypeDefinition createTypeDefinition()", "-", "-    public void execute()", "-        throws TaskException", "-    {", "-        if( null == m_classname )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-classname.error\" );", "-            throw new TaskException( message );", "-        }", "-        else if( null == m_sourceType )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-source.error\" );", "-            throw new TaskException( message );", "-        }", "-        else if( null == m_destinationType )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-destination.error\" );", "-            throw new TaskException( message );", "-        }", "-        else if( null == m_lib )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-lib.error\" );", "-            throw new TaskException( message );", "-        }", "-", "-        try", "-        {", "-            // Locate the deployer, then deploy the converter", "-            final Deployer deployer = (Deployer)getService( Deployer.class );", "-            final TypeDeployer typeDeployer = deployer.createDeployer( m_lib );", "-            typeDeployer.deployConverter( m_classname, m_sourceType, m_destinationType );", "-        }", "-        catch( final Exception e )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-register.error\", m_classname );", "-            throw new TaskException( message, e );", "-        }", "+        return new ConverterDefinition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3841ba39538de5f0990a75cea1f7691", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/ConverterDef.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            throw new TaskException( \"Must specify classname parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-classname.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the source-type parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-source.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the destination-type parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-destination.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the lib parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-lib.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Failed to register converter \" + m_classname, e );", "+            final String message = REZ.getString( \"converterdef.no-register.error\", m_classname );", "+            throw new TaskException( message, e );"]}]}