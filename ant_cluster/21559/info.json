{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9f0d62fa28dbce2f1fd4a40aba65679", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025ad1111c416fcae88b2ebd5859ecb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testValueDoesNotGetOverwritten()", "signatureAfterChange": "      @Test     public void testValueDoesNotGetOverwritten()", "diff": ["+    @Test", "-        executeTarget(\"bugDemo1\");", "-        executeTarget(\"bugDemo2\");", "-        assertEquals(\"5\", project.getProperty(\"foo\"));", "+        buildRule.executeTarget(\"bugDemo1\");", "+        buildRule.executeTarget(\"bugDemo2\");", "+        assertEquals(\"5\", buildRule.getProject().getProperty(\"foo\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea46557ef330b794889e6a828001883", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "       @Before     public void setUp()", "diff": ["+", "+    @Before", "-        configureProject(\"src/etc/testcases/taskdefs/input.xml\");", "+        buildRule.configureProject(\"src/etc/testcases/taskdefs/input.xml\");", "-                 getProject().resolveFile(\"input.properties\")", "+                 buildRule.getProject().resolveFile(\"input.properties\")", "-        getProject().setInputHandler(new PropertyFileInputHandler());", "+        buildRule.getProject().setInputHandler(new PropertyFileInputHandler());", "+        originalStdIn = System.in;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f34091f7d5bc2d21028ed7828c3a404e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/XmlPropertyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void testProperties(String target)", "signatureAfterChange": "      private void testProperties(String target)", "diff": ["-        executeTarget(target);", "-        assertEquals(\"true\", getProject().getProperty(\"root-tag(myattr)\"));", "-        assertEquals(\"Text\", getProject().getProperty(\"root-tag.inner-tag\"));", "+        buildRule.executeTarget(target);", "+        assertEquals(\"true\", buildRule.getProject().getProperty(\"root-tag(myattr)\"));", "+        assertEquals(\"Text\", buildRule.getProject().getProperty(\"root-tag.inner-tag\"));", "-                     getProject().getProperty(\"root-tag.inner-tag(someattr)\"));", "-        assertEquals(\"false\", getProject().getProperty(\"root-tag.a2.a3.a4\"));", "+                buildRule.getProject().getProperty(\"root-tag.inner-tag(someattr)\"));", "+        assertEquals(\"false\", buildRule.getProject().getProperty(\"root-tag.a2.a3.a4\"));", "-            \"<test>\", getProject().getProperty(\"root-tag.cdatatag\"));", "+            \"<test>\", buildRule.getProject().getProperty(\"root-tag.cdatatag\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f924366ea547091e6cc1aa92b35188d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setUp() throws Exception", "signatureAfterChange": "      @Before     public void setUp() throws Exception", "diff": ["-     */", "+    @Before", "-        configureProject(projectFilePath);", "-        executeTarget(\"setUp\");", "+        buildRule.configureProject(projectFilePath);", "+        buildRule.executeTarget(\"setUp\");", "-        configureProject(projectFilePath);", "-        project.setProperty(valueDoesNotGetOverwrittenPropertyFileKey,valueDoesNotGetOverwrittenPropertyFile);", "+        buildRule.configureProject(projectFilePath);", "+        buildRule.getProject().setProperty(valueDoesNotGetOverwrittenPropertyFileKey,", "+                valueDoesNotGetOverwrittenPropertyFile);"]}]}