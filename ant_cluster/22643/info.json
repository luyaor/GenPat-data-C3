{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ddd614dbbd0a9830ad02f5ac23c79c8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9954799dd4dea956726c45c9c59c0343", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     protected Map<Resource, String[]> buildMap(Resource[] fromResources, final File toDir,                            FileNameMapper mapper)", "signatureAfterChange": "     protected Map<Resource, String[]> buildMap(final Resource[] fromResources, final File toDir,                            final FileNameMapper mapper)", "diff": ["-    protected Map<Resource, String[]> buildMap(Resource[] fromResources, final File toDir,", "-                           FileNameMapper mapper) {", "-        HashMap<Resource, String[]> map = new HashMap<Resource, String[]>();", "+    protected Map<Resource, String[]> buildMap(final Resource[] fromResources, final File toDir,", "+                           final FileNameMapper mapper) {", "+        final HashMap<Resource, String[]> map = new HashMap<Resource, String[]>();", "-            Vector<Resource> v = new Vector<Resource>();", "+            final Vector<Resource> v = new Vector<Resource>();", "-                           public Resource getResource(String name) {", "+                           @Override", "+\t\t\t\t\t\tpublic Resource getResource(final String name) {", "-            String[] mappedFiles = mapper.mapFileName(toCopy[i].getName());", "+            final String[] mappedFiles = mapper.mapFileName(toCopy[i].getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9db24c3e2757104c4c91354176312b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "     private Object evaluateParam(Param param) throws XPathExpressionException", "signatureAfterChange": "     private Object evaluateParam(final Param param) throws XPathExpressionException", "diff": ["-    private Object evaluateParam(Param param) throws XPathExpressionException {", "-        String typeName = param.getType();", "-        String expression = param.getExpression();", "+    private Object evaluateParam(final Param param) throws XPathExpressionException {", "+        final String typeName = param.getType();", "+        final String expression = param.getExpression();", "-            } catch (IllegalArgumentException e) {", "+            } catch (final IllegalArgumentException e) {", "-                QName xpathType = ParamType.XPATH_TYPES.get(type);", "+                final QName xpathType = ParamType.XPATH_TYPES.get(type);", "-                    XPathExpression xpe = xpath.compile(expression);", "+                    final XPathExpression xpe = xpath.compile(expression);"]}]}