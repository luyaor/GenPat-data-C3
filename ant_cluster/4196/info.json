{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc5adffcb4869df531454a0e21b27577", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a869f17de4519e778f027fb439df61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "6585a8aa207d2adf2f5f92ab52482b312302b3fe", "commitAfterChange": "70802b2319e95db5b1f4bcab9247da14856a3bd8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+", "+                // this is the wrong test if the remote OS is OpenVMS,", "+                // but there doesn't seem to be a way to detect it.", "+                int ec = channel.getExitStatus();", "+                if (ec != 0) {", "+                    String msg = \"Remote command failed with exit status \" + ec;", "+                    if (getFailonerror()) {", "+                        throw new BuildException(msg);", "+                    } else {", "+                        log(msg, Project.MSG_ERR);", "+                    }", "+                }", "+        } catch (BuildException e) {", "+            throw e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2acf01378c80b8623081a04ba4a8f04a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "1733506854444866e6a904c3c3e65b8fc9773400", "commitAfterChange": "3d76bc5d3a70e23f49bd566fc54e0553b966f1c4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            boolean compileSucceeded = false;", "+", "-                doClassicCompile();", "+                compileSucceeded = doClassicCompile();", "-                doModernCompile();", "+                compileSucceeded = doModernCompile();", "-                doJikesCompile();", "+                compileSucceeded = doJikesCompile();", "-                doJvcCompile();", "+                compileSucceeded = doJvcCompile();", "+            }", "+            ", "+            if (!compileSucceeded) {", "+                if (failOnError) {", "+                    throw new BuildException(FAIL_MSG, location);", "+                }", "+                else {", "+                    log(FAIL_MSG, Project.MSG_ERR);", "+                }"]}]}