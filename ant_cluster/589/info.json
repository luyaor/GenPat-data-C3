{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0557597568f0b846e331862987ac9f64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c1654ac4b7261c635b883de21193fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "87bf01f5de873b8eb5a25c2c62acbd7c9d1e92b1", "commitAfterChange": "28c35b84c4dbe9d338734c38d5ca8fc0d2f75cfc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void determineDependencies() throws IOException", "signatureAfterChange": "     private void determineDependencies() throws IOException", "diff": ["-                FileInputStream inFileStream = null;", "-                try {", "-                    inFileStream = new FileInputStream(info.absoluteFile);", "-                    ClassFile classFile = new ClassFile();", "-                    classFile.read(inFileStream);", "-", "-                    dependencyList = classFile.getClassRefs();", "-                    if (dependencyList != null) {", "-                        cacheDirty = true;", "-                        dependencyMap.put(info.className, dependencyList);", "-                    }", "-                } finally {", "-                    if (inFileStream != null) {", "-                        inFileStream.close();", "-                    }", "+                DependencyAnalyzer analyzer = new AntAnalyzer();", "+                analyzer.addRootClass(info.className);", "+                analyzer.addClassPath(destPath);", "+                analyzer.setClosure(false);", "+                dependencyList = new Vector();", "+                Enumeration depEnum = analyzer.getClassDependencies();", "+                while (depEnum.hasMoreElements()) {", "+                    dependencyList.addElement(depEnum.nextElement());", "+                }", "+                if (dependencyList != null) {", "+                    cacheDirty = true;", "+                    dependencyMap.put(info.className, dependencyList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2d6b62d69bd030e430c0428a54107e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "commitAfterChange": "a67cf020bd250a1fb2acecf7cfd0159f25200dc2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void initBlock() throws IOException", "signatureAfterChange": "      private void initBlock() throws IOException", "diff": ["-        char magic0 = bsGetUByte();", "-        char magic1 = bsGetUByte();", "-        char magic2 = bsGetUByte();", "-        char magic3 = bsGetUByte();", "-        char magic4 = bsGetUByte();", "-        char magic5 = bsGetUByte();", "+        char magic0;", "+        char magic1;", "+        char magic2;", "+        char magic3;", "+        char magic4;", "+        char magic5;", "-        if (magic0 == 0x17 &&", "-            magic1 == 0x72 &&", "-            magic2 == 0x45 &&", "-            magic3 == 0x38 &&", "-            magic4 == 0x50 &&", "-            magic5 == 0x90) {", "-            complete(); // end of file", "-        } else if (magic0 != 0x31 || // '1'", "-                   magic1 != 0x41 || // ')'", "-                   magic2 != 0x59 || // 'Y'", "-                   magic3 != 0x26 || // '&'", "-                   magic4 != 0x53 || // 'S'", "-                   magic5 != 0x59   // 'Y'", "-                   ) {", "+        while (true) {", "+            // Get the block magic bytes.", "+            magic0 = bsGetUByte();", "+            magic1 = bsGetUByte();", "+            magic2 = bsGetUByte();", "+            magic3 = bsGetUByte();", "+            magic4 = bsGetUByte();", "+            magic5 = bsGetUByte();", "+", "+            // If isn't end of stream magic, break out of the loop.", "+            if (magic0 != 0x17 || magic1 != 0x72 || magic2 != 0x45", "+                    || magic3 != 0x38 || magic4 != 0x50 || magic5 != 0x90) {", "+                break;", "+            }", "+", "+            // End of stream was reached. Check the combined CRC and", "+            // advance to the next .bz2 stream if decoding concatenated", "+            // streams.", "+            if (complete()) {", "+                return;", "+            }", "+        }", "+", "+        if (magic0 != 0x31 || // '1'", "+            magic1 != 0x41 || // ')'", "+            magic2 != 0x59 || // 'Y'", "+            magic3 != 0x26 || // '&'", "+            magic4 != 0x53 || // 'S'", "+            magic5 != 0x59 // 'Y'", "+            ) {"]}]}