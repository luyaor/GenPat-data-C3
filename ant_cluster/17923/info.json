{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a4b06c7ea9ac2fb3a4d22c99ee06c3f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eec1edf9b0f927045398d6d31bf9b98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "876938476015258de6979a462387f700b631f7a2", "commitAfterChange": "064d126d420b174b2a1a028b094b0254bc32822f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-", "-        DirectoryScanner ds = new DirectoryScanner();", "-        ds.setBasedir(baseDir);", "-        ds.setIncludes(includes);", "-        ds.setExcludes(excludes);", "-        if (useDefaultExcludes) {", "-            ds.addDefaultExcludes();", "-        }", "-        ds.scan();", "+        DirectoryScanner ds = super.getDirectoryScanner(baseDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa87578ae8014b213f704a46fffb4c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "66c74a2fceee359d38138fb601c1b639e99fb17d", "commitAfterChange": "19600e6d005c8bebbf6697bd00516e843f0a34f4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected ConverterFactory createConverterFactory()", "signatureAfterChange": "          protected ConverterEngine createConverterEngine()", "diff": ["-", "-    protected ConverterFactory createConverterFactory()", "+    ", "+    protected ConverterEngine createConverterEngine()", "-        return (ConverterFactory)m_taskletFactory;", "+        //this is done so that the loaders are shared", "+        //which results in much less overhead", "+        final TaskletConverterEngine engine = new TaskletConverterEngine();", "+        engine.setConverterFactory( (ConverterFactory)m_taskletFactory );", "+        return engine;"]}]}