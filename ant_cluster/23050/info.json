{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddeae5bd25eea786691b8778a9840ba9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78da65868a59b5018a012c73ac8566dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJRemoteUtil.java", "commitBeforeChange": "00eb48bddc7183e3d960299901b931aefd1bf61a", "commitAfterChange": "4ac9a8932c13b7d5c9e8f15c7856a71d7044f236", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private String assembleImportExportParams(                                               File dir,                                               String[] includePatterns, String[] excludePatterns,                                               boolean includeClasses, boolean includeResources,                                               boolean includeSources, boolean useDefaultExcludes)", "signatureAfterChange": "     private void assembleImportExportParams(Vector parameters,                                             File dir,                                             String[] includePatterns, String[] excludePatterns,                                             boolean includeClasses, boolean includeResources,                                             boolean includeSources, boolean useDefaultExcludes)", "diff": ["-    private String assembleImportExportParams(", "-                                              File dir,", "-                                              String[] includePatterns, String[] excludePatterns,", "-                                              boolean includeClasses, boolean includeResources,", "-                                              boolean includeSources, boolean useDefaultExcludes) {", "-        String result =", "-            VAJToolsServlet.DIR_PARAM + \"=\"", "-            + URLEncoder.encode(dir.getPath()) + \"&\"", "-            + VAJToolsServlet.CLASSES_PARAM + \"=\" + includeClasses + \"&\"", "-            + VAJToolsServlet.RESOURCES_PARAM + \"=\" + includeResources + \"&\"", "-            + VAJToolsServlet.SOURCES_PARAM + \"=\" + includeSources + \"&\"", "-            + VAJToolsServlet.DEFAULT_EXCLUDES_PARAM + \"=\" + useDefaultExcludes;", "+    private void assembleImportExportParams(Vector parameters,", "+                                            File dir,", "+                                            String[] includePatterns, String[] excludePatterns,", "+                                            boolean includeClasses, boolean includeResources,", "+                                            boolean includeSources, boolean useDefaultExcludes) {", "+        parameters.addElement(new URLParam(VAJToolsServlet.DIR_PARAM, dir.getPath()));", "+        parameters.addElement(new URLParam(VAJToolsServlet.CLASSES_PARAM, includeClasses));", "+        parameters.addElement(new URLParam(VAJToolsServlet.RESOURCES_PARAM, includeResources));", "+        parameters.addElement(new URLParam(VAJToolsServlet.SOURCES_PARAM, includeSources));", "+        parameters.addElement(new URLParam(VAJToolsServlet.DEFAULT_EXCLUDES_PARAM, useDefaultExcludes));", "-                result = result + \"&\" + VAJExportServlet.INCLUDE_PARAM + \"=\"", "-                    + URLEncoder.encode(includePatterns[i]);", "+                parameters.addElement(new", "+                                      URLParam(VAJExportServlet.INCLUDE_PARAM, includePatterns[i]));", "-                result = result + \"&\" + VAJExportServlet.EXCLUDE_PARAM + \"=\"", "-                    + URLEncoder.encode(excludePatterns[i]);", "+                parameters.addElement(new", "+                                      URLParam(VAJExportServlet.EXCLUDE_PARAM, excludePatterns[i]));", "-", "-        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0623dfc0516b341a135d30e44517176", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/wizard/Wizard.java", "commitBeforeChange": "f9ddec7b87382f81161818966776347a4809cd2e", "commitAfterChange": "18931f719f446825f75c6f7572698f0bf26370ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Wizard(ResourceManager resources, Object dataModel)", "signatureAfterChange": "     public Wizard(WizardData data)", "diff": ["-    public Wizard(ResourceManager resources, Object dataModel) {", "+    public Wizard(WizardData data) {", "-        _resources = resources;", "-        _model = dataModel;", "+        _data = data;", "-            _resources.getString(\"progress\")));", "+            _data.getResources().getString(\"progress\")));", "-            _resources.getString(\"help\")));", "+            _data.getResources().getString(\"help\")));", "-        _nav = new ButtonNavigator(_resources);", "+        _nav = new ButtonNavigator(_data.getResources());", "-        String[] steps = _resources.getStringArray(\"steps\");", "+        String[] steps = _data.getResources().getStringArray(\"steps\");", "-                Class type = _resources.getClass(steps[i] + \".editor\");", "+                Class type = _data.getResources().getClass(steps[i] + \".editor\");", "-                step.setResources(_resources);", "+                step.setResources(_data.getResources());", "-                step.setTitle(_resources.getString(steps[i]+ \".title\"));", "+                step.setTitle(", "+                    _data.getResources().getString(steps[i]+ \".title\"));", "-                    _resources.getString(steps[i]+ \".description\"));", "-", "-                String id = _resources.getString(steps[i] + \".next\");", "-                id = (id == null && i < steps.length - 1) ? steps[i + 1] : id;", "-                step.setNext(id);", "-", "-                id = _resources.getString(steps[i] + \".prev\");", "-                id = (id == null && i > 0) ? steps[i - 1] : id;", "-                step.setPrevious(id);", "+                    _data.getResources().getString(steps[i]+ \".description\"));", "-                first.setDataModel(_model);", "+                first.setDataModel(_data);"]}]}