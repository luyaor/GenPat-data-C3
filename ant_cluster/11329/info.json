{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34514039f7361fc6aee4d3717c1c5a08", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65dafa8deb6a607f35cb20ea7fa3b265", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )         throws TaskException", "signatureAfterChange": "     private void executeTarget( final String name,                                 final Target target,                                 final ExecutionFrame frame )         throws TaskException", "diff": ["+    private void executeTarget( final String name,", "-     */", "-    private void executeTargetWork( final String name,", "-                                    final Target target,", "-                                    final TaskContext context )", "+                                final ExecutionFrame frame )", "-            if( false == condition.evaluate( context ) )", "+            if( false == condition.evaluate( frame.getContext() ) )", "+        //frame.getContext().setProperty( Project.TARGET, target );", "+", "-            executeTask( tasks[ i ], context );", "+            executeTask( tasks[ i ], frame );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8175257475fe7aa9d135c1594b158510", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "signatureAfterChange": "     protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["+     */", "+        //check the condition associated with target.", "+        //if it is not satisfied then skip target", "-", "-                m_logger.debug( \"Skipping target \" + name + ", "-                                \" as it does not satisfy condition\" );", "+                getLogger().debug( \"Skipping target \" + name + ", "+                                   \" as it does not satisfy condition\" );", "-        m_logger.debug( \"Executing target \" + name );", "+        getLogger().debug( \"Executing target \" + name );", "+        //execute all tasks assciated with target"]}]}