{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cfd46ad993ff1b0e4c11e50774183ea", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac93d08aa1cacace0d4c46ec8ef8a2c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "0c132498a8026db624c2fcf7026538c52e47b312", "commitAfterChange": "4004834c04e0eec8f0f698435b0c5983751fb593", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-            String newpattern =", "-                SelectorUtils.rtrimWildcardTokens(includes[icounter]);", "-            newroots.put(newpattern, includes[icounter]);", "+            newroots.put(SelectorUtils.rtrimWildcardTokens(", "+                includes[icounter]), includes[icounter]);", "-", "-", "-", "-", "-", "-                        if (isCaseSensitive()", "-                            && originalpattern.equals(currentelement)) {", "-                            accountForIncludedFile(currentelement, myfile);", "-                        } else if (!isCaseSensitive()", "-                                   && originalpattern", "-                                   .equalsIgnoreCase(currentelement)) {", "+                        boolean included = isCaseSensitive()", "+                            ? originalpattern.equals(currentelement)", "+                            : originalpattern.equalsIgnoreCase(currentelement);", "+                        if (included) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "469897e4153a768f409c44b4fb0a17d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "dba647572b6c00d5971f75fc13ca4d0912c97b3c", "commitAfterChange": "e2d3dfc0c95cd2b9e25fd4318f8aa7d07aa89d3f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "diff": ["+                included = true;", "-                        boolean isIncl =", "-                            DirectoryScanner.match(incls[w], name);", "-                        if (isIncl) {", "-                            included = true;", "+                        included = DirectoryScanner.match(incls[w], name);", "+                        if (included) {", "-                        boolean isExcl =", "-                            DirectoryScanner.match(excls[w], name);", "-                        if (isExcl) {", "-                            included = false;", "+                        included = !(DirectoryScanner.match(excls[w], name));", "+                        if (!included) {"]}]}