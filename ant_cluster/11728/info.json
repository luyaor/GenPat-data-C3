{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67ddd840c8e6d4277da8533b875671ec", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698e907867faca68c279856f5270bd67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "commitAfterChange": "a67cf020bd250a1fb2acecf7cfd0159f25200dc2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void init() throws IOException", "signatureAfterChange": "      private boolean init(boolean isFirstStream) throws IOException", "diff": ["-    private void init() throws IOException {", "+    private boolean init(boolean isFirstStream) throws IOException {", "-        if (in.available() == 0) {", "-            throw new IOException(\"Empty InputStream\");", "+        ", "+        if (isFirstStream) {", "+            if (in.available() == 0) {", "+                throw new IOException(\"Empty InputStream\");", "+            }", "+        } else {", "+            int magic0 = this.in.read();", "+            if (magic0 == -1) {", "+                return false;", "+            }", "+            int magic1 = this.in.read();", "+            if (magic0 != 'B' || magic1 != 'Z') {", "+                throw new IOException(\"Garbage after a valid BZip2 stream\");", "+            }", "+", "-            throw new IOException(\"Stream is not BZip2 formatted: expected 'h'\"", "-                                  + \" as first byte but got '\" + (char) magic2", "-                                  + \"'\");", "+            throw new IOException(isFirstStream", "+                    ? \"Stream is not in the BZip2 format\"", "+                    : \"Garbage after a valid BZip2 stream\");", "-        initBlock();", "-        setupBlock();", "+        this.bsLive = 0;", "+        this.computedCombinedCRC = 0;", "+", "+        return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba23e04796d5f1e43839e16fcbe5ad2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void initialize()", "signatureAfterChange": "      private void init() throws IOException", "diff": ["+", "+    private void init() throws IOException {", "+        int magic2 = this.in.read();", "+        if (magic2 != 'h') {", "+            throw new IOException(\"Stream is not BZip2 formatted: expected 'h'\"", "+                                  + \" as first byte but got '\" + (char) magic2", "+                                  + \"'\");", "+        }", "+", "+        int blockSize = this.in.read();", "+        if ((blockSize < '1') || (blockSize > '9')) {", "+            throw new IOException(\"Stream is not BZip2 formatted: illegal \"", "+                                  + \"blocksize \" + (char) blockSize);", "+        }", "+", "+        this.blockSize100k = blockSize - '0';", "+", "-    private void initialize() {", "-        char magic3, magic4;", "-        magic3 = bsGetUChar();", "-        magic4 = bsGetUChar();", "-        if (magic3 != 'h' || magic4 < '1' || magic4 > '9') {", "-            bsFinishedWithStream();", "-            streamEnd = true;", "-            return;", "-        setDecompressStructureSizes(magic4 - '0');", "-        computedCombinedCRC = 0;"]}]}