{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9463dc025cded63028bad4002873fd73", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4842cf653e57d27555e9d0aca5203a09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/CompressedResource.java", "commitBeforeChange": "976ce8137741cb28daa0f72e984a0389ccc689eb", "commitAfterChange": "1400dc3c1b536c70697f83be990b0725121cba90", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public long getSize()", "signatureAfterChange": "     public long getSize()", "diff": ["-        return getResource().getSize();", "+        if (isExists()) {", "+            InputStream in = null;", "+            try {", "+                in = getInputStream();", "+                byte[] buf = new byte[8192];", "+                int size = 0;", "+                int readNow;", "+                while ((readNow = in.read(buf, 0, buf.length)) > 0) {", "+                    size += readNow;", "+                }", "+                return size;", "+            } catch (IOException ex) {", "+                throw new BuildException(\"caught exception while reading \"", "+                                         + getName(), ex);", "+            } finally {", "+                FileUtils.close(in);", "+            }", "+        } else {", "+            return 0;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75d78a1e5f5285f9c4611cc5b792cc28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/input/DefaultInputHandler.java", "commitBeforeChange": "04cad524fcd3faf6b809f8353027b7774fea1d17", "commitAfterChange": "864ca0f2a24d0c367256d995b979ea829234d9fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected String getPrompt(InputRequest request)", "signatureAfterChange": "     protected String getPrompt(InputRequest request)", "diff": ["+        String def = request.getDefaultValue();", "-            sb.append(\"(\");", "+            sb.append(\" (\");", "-                    sb.append(\",\");", "+                    sb.append(\", \");", "-                sb.append(e.nextElement());", "+                String next = (String) e.nextElement();", "+                if (next.equals(def)) {", "+                    sb.append('[');", "+                }", "+                sb.append(next);", "+                if (next.equals(def)) {", "+                    sb.append(']');", "+                }", "-            prompt = sb.toString();", "+            return sb.toString();", "+        } else if (def != null) {", "+            return prompt + \" [\" + def + \"]\";", "+        } else {", "+            return prompt;", "-        return prompt;"]}]}