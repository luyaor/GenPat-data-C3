{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ed5ae987c3aa9bc1aabf42ba7e9201f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61cf9499f3bb6db44028d8a9486d02e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void testIdResolve()         throws Exception", "signatureAfterChange": "     public void testIdResolve()         throws Exception", "diff": ["-        final ConfigTestStringProps test = new ConfigTestStringProps();", "+        final ConfigTestIdResolve test = new ConfigTestIdResolve();", "-        m_configurer.configure( test, config, m_context );", "+        configure( test, config );", "-        final ConfigTestStringProps expected = new ConfigTestStringProps();", "+        final ConfigTestIdResolve expected = new ConfigTestIdResolve();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf894a87b7e7eeb97bfca6c0110b7973", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void testIdResolve()         throws Exception", "signatureAfterChange": "     public void testIdResolve()         throws Exception", "diff": ["-        final ConfigTestStringProps test = new ConfigTestStringProps();", "+        final ConfigTestIdResolve test = new ConfigTestIdResolve();", "-        m_configurer.configure( test, config, m_context );", "+        configure( test, config );", "-        final ConfigTestStringProps expected = new ConfigTestStringProps();", "+        final ConfigTestIdResolve expected = new ConfigTestIdResolve();"]}]}