{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3112da77873243de837333831e66f0a5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b0542ae31764db4a11310958f629750", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "611d085ff653bcf61d3cea4eb72869095e98439d", "commitAfterChange": "71ecbaefb28107447e2d3875786501ba1a71cc4d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public boolean equals(Object obj)", "signatureAfterChange": "         protected boolean equals(Member m)", "diff": ["+        /** {@inheritDoc}. */", "+        protected boolean equals(Member m) {", "+            Attribute a = (Attribute) m;", "+            return super.equals(m) &&", "+                   (defaultValue == null)? a.defaultValue == null:", "+                                           defaultValue.equals(a.defaultValue);", "-         */", "-        public boolean equals(Object obj) {", "-            if (obj == null) {", "-                return false;", "-            }", "-            if (obj.getClass() != getClass()) {", "-                return false;", "-            }", "-            Attribute other = (Attribute) obj;", "-            if (name == null) {", "-                if (other.name != null) {", "-                    return false;", "-                }", "-            } else if (!name.equals(other.name)) {", "-                return false;", "-            }", "-            if (defaultValue == null) {", "-                if (other.defaultValue != null) {", "-                    return false;", "-                }", "-            } else if (!defaultValue.equals(other.defaultValue)) {", "-                return false;", "-            }", "-            return true;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa46b8070fb74579f0cddbd28356b88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "8f488f0872a795638f9ebbc51517f85d801c1b67", "commitAfterChange": "28447bc7c09eb2a7210a267ca7a6fb2e54ee488f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public boolean supportsNestedElement(String parentUri, String elementName,                                          Project project, Object parent,                                          String childQName)", "signatureAfterChange": "     public boolean supportsNestedElement(String parentUri, String elementName,                                          Project project, Object parent)", "diff": ["-                                         Project project, Object parent,", "-                                         String childQName) {", "+                                         Project project, Object parent) {", "-        if (isDynamic()) {", "-            /*", "-              breaks several tests, in particular EchoXML because it", "-              creates additional empty child elements in XMLFragment", "-", "-            String localName =", "-                ProjectHelper.extractNameFromComponentName(elementName);", "-            String uri = ProjectHelper.extractUriFromComponentName(elementName);", "-            if (uri.equals(ProjectHelper.ANT_CORE_URI)) {", "-                uri = \"\";", "-            }", "-            if (createDynamicElement(parent, uri, localName,", "-                                     childQName == null ? localName : childQName)", "-                != null) {", "-                return true;", "-            }", "-            */", "-            return true;", "-        }", "-        return supportsReflectElement(parentUri, elementName);", "+        return isDynamic() || supportsReflectElement(parentUri, elementName);"]}]}