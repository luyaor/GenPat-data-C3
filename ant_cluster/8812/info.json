{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a16c6a02526d8e940cb59af0c1bccd10", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "342d20c5c9ee00a9ecfd599cfe6ee0f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/RegisterTasklet.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void compose( final ComponentManager componentManager )         throws ComponentNotFoundException, ComponentNotAccessibleException", "signatureAfterChange": "      public void compose( final ComponentManager componentManager )         throws ComponentNotFoundException, ComponentNotAccessibleException", "diff": ["-        m_taskletRegistry = (TaskletRegistry)componentManager.", "-            lookup( \"org.apache.ant.tasklet.engine.TaskletRegistry\" );", "+        final TaskletEngine engine = (TaskletEngine)componentManager.", "+            lookup( \"org.apache.ant.tasklet.engine.TaskletEngine\" );", "+        m_taskletRegistry = engine.getTaskletRegistry();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff88a6c628c86c3a21bd28707c69adb5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "b5072a8c35da484e6b629acbe636b046784593b2", "commitAfterChange": "12c0f4b50aa1c00cc0e7689578f60ccfbe273875", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final TaskContext context,                                final PropertyConfigurer childConfigurer )         throws Exception", "signatureAfterChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final TaskContext context,                                final PropertyConfigurer childConfigurer )         throws Exception", "diff": ["-        configureObject( child, element, context );", "+        final Object object = child;", "+        configureObject( object, object.getClass(), element, context );"]}]}