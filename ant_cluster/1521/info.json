{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "414b08e1e8836eadc357fcb57734d46d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37aebb6172cda64ae0545a02c1d7d6d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "6d5ce5b54d4424f74298d7aac6778539e286b8f4", "commitAfterChange": "44735223d94bae810d33e7f820d587bfb49728fd", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void configureLiaison(File stylesheet) throws BuildException", "signatureAfterChange": "     protected void configureLiaison(File stylesheet) throws BuildException", "diff": ["-", "+        ", "-            for(Enumeration e = params.elements();e.hasMoreElements();) {", "+            for (Enumeration e = params.elements(); e.hasMoreElements(); ) {", "+            }", "+            // if liaison is a TraxLiason, use XCatalog as the entity", "+            // resolver", "+            if (liaison.getClass().getName().equals(TRAX_LIAISON_CLASS) &&", "+                xcatalog != null) {", "+                log(\"Configuring TraxLiaison and calling entity resolver\",", "+                    Project.MSG_DEBUG);", "+                Method resolver = liaison.getClass()", "+                                    .getDeclaredMethod(\"setEntityResolver\", ", "+                                        new Class[] {EntityResolver.class});", "+                resolver.invoke(liaison, new Object[] {xcatalog});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d53612a9fd712422e529be7d76fea103", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     protected void configureLiaison(File stylesheet) throws BuildException", "signatureAfterChange": "     protected void configureLiaison(File stylesheet) throws BuildException", "diff": ["-            // if liaison is a TraxLiason, use XMLCatalog as the entity", "-            // resolver", "-            if (liaison.getClass().getName().equals(TRAX_LIAISON_CLASS) &&", "-                xmlCatalog != null) {", "-                log(\"Configuring TraxLiaison and calling entity resolver\",", "-                    Project.MSG_DEBUG);", "-                Method resolver = liaison.getClass()", "-                                    .getDeclaredMethod(\"setEntityResolver\", ", "-                                        new Class[] {EntityResolver.class});", "-                resolver.invoke(liaison, new Object[] {xmlCatalog});", "-            }", "+", "+        try {", "+            // if liaison is a TraxLiason, use XMLCatalog as the entity", "+            // resolver and URI resolver", "+            if (liaison.getClass().getName().equals(TRAX_LIAISON_CLASS) &&", "+                xmlCatalog != null) {", "+                log(\"Configuring TraxLiaison: setting entity resolver \" +", "+                    \"and setting URI resolver\", Project.MSG_DEBUG);", "+                Method resolver = liaison.getClass()", "+                    .getDeclaredMethod(\"setEntityResolver\", ", "+                                       new Class[] {EntityResolver.class});", "+                resolver.invoke(liaison, new Object[] {xmlCatalog});", "+", "+                resolver = liaison.getClass()", "+                    .getDeclaredMethod(\"setURIResolver\", ", "+                                       new Class[] {loadClass(\"javax.xml.transform.URIResolver\")});", "+                resolver.invoke(liaison, new Object[] {xmlCatalog});", "+            }", "+        } catch (Exception e) {", "+            throw new BuildException(\"Failed to configure XMLCatalog for \"", "+                                     + \"TraxLiaison\", e);", "+        }"]}]}