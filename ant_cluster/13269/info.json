{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15b2db7c7bc1b7c11938c34c11965f94", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81277a6ad1a7b154d8aa34cb6c561996", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void writeBlock()         throws IOException", "signatureAfterChange": "     private void writeBlock()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"WriteBlock: blkIdx = \" + this.currBlkIdx );", "+            final String message = \"WriteBlock: blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.outStream == null )", "+        if( null == m_output )", "-            throw new IOException( \"writing to an input buffer\" );", "+            final String message = \"writing to an input buffer\";", "+            throw new IOException( message );", "-        this.outStream.write( this.blockBuffer, 0, this.blockSize );", "-        this.outStream.flush();", "+        m_output.write( m_blockBuffer, 0, m_blockSize );", "+        m_output.flush();", "-        this.currRecIdx = 0;", "-        this.currBlkIdx++;", "+        m_currRecIdx = 0;", "+        m_currBlkIdx++;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d55d2ea891da34566da7028be80d345", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void skipRecord()         throws IOException", "signatureAfterChange": "     public void skipRecord()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"SkipRecord: recIdx = \" + this.currRecIdx", "-                                + \" blkIdx = \" + this.currBlkIdx );", "+            final String message = \"SkipRecord: recIdx = \" + m_currRecIdx +", "+                \" blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.inStream == null )", "+        if( null == m_input )", "-            throw new IOException( \"reading (via skip) from an output buffer\" );", "+            final String message = \"reading (via skip) from an output buffer\";", "+            throw new IOException( message );", "-        if( this.currRecIdx >= this.recsPerBlock )", "+        if( m_currRecIdx >= m_recsPerBlock )", "-            if( !this.readBlock() )", "+            if( !readBlock() )", "-        this.currRecIdx++;", "+        m_currRecIdx++;"]}]}