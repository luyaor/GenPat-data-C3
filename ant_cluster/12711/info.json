{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bf8a006b3eeb2f6b3d71d4eac88aea7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203282a073f7fc5b359c5dae78c84fd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "e5235423ccd494cb7516a1df6e3e13a74a22b767", "commitAfterChange": "da5a13f8e4e0e4475f942b5ae5670271b711d423", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public void addConfiguredAttribute(Attribute attribute)          throws ManifestException", "signatureAfterChange": "     public void addConfiguredAttribute(Attribute attribute)          throws ManifestException", "diff": ["-        mainSection.addConfiguredAttribute(attribute);", "+        if (attribute.getKey() == null || attribute.getValue() == null) {", "+            throw new BuildException(\"Attributes must have name and value\");", "+        }", "+        if (attribute.getKey().equalsIgnoreCase(ATTRIBUTE_MANIFEST_VERSION)) {", "+            manifestVersion = attribute.getValue();", "+        } else {", "+            mainSection.addConfiguredAttribute(attribute);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "827fdf621b26d92a69190d6808911c73", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JbossDeploymentTool.java", "commitBeforeChange": "74a7ac99f23003f8fec035ccea6e6c6c5256787a", "commitAfterChange": "5410d80ef4dea4304a33c0aa4ea4464e17021fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     File getVendorOutputJarFile(String baseName)", "signatureAfterChange": "     File getVendorOutputJarFile(String baseName)", "diff": ["-        return new File(getParent().getDestdir(), baseName + jarSuffix);", "+        if (getDestDir() == null && getParent().getDestdir() == null) {", "+            throw new BuildException(\"DestDir not specified\");", "+        }", "+        if (getDestDir() == null) {", "+            return new File(getParent().getDestdir(), baseName + jarSuffix);", "+        } else {", "+            return new File(getDestDir(), baseName + jarSuffix);", "+        }"]}]}