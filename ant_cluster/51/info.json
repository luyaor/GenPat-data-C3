{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30fc8df1824155db199facc4993c901d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e27b1e2c51fa6b874e10317c1a0460e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/xdocs/src/org/apache/tools/ant/xdoclet/AntSubTask.java", "commitBeforeChange": "7899d6c4a6c335eeffa486f6b09fa3725b0e3a7b", "commitAfterChange": "2d9c339208c8696e14df9b2c69852af36eca8a14", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected String getGeneratedFileName(ClassDoc clazz) throws XDocletException", "signatureAfterChange": "     protected String getGeneratedFileName(ClassDoc clazz) throws XDocletException", "diff": ["-        PackageDoc pak = clazz.containingPackage();", "-        String packageName = PackageTagsHandler.packageNameAsPathFor(pak);", "-        String taskName = AntTagsHandler.getTaskName(clazz);", "-        String filename = MessageFormat.format(getDestinationFile(), new Object[]{taskName});", "+        String filename = getDestinationFile();", "+        String dir = getDestDir().getAbsolutePath();", "-        return new File(packageName, filename).toString();", "+        if (filename.indexOf(\"{0}\") != -1) {", "+            PackageDoc pak = clazz.containingPackage();", "+            dir = PackageTagsHandler.packageNameAsPathFor(pak);", "+            String taskName = AntTagsHandler.getTaskName(clazz);", "+            filename = MessageFormat.format(getDestinationFile(), new Object[]{taskName});", "+        }", "+", "+        return new File(dir, filename).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7615664b08a150c7829b630ee0c3ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private String[] patchEnvironment()", "signatureAfterChange": "     private String[] patchEnvironment()", "diff": ["-        Map/*<String, String>*/ osEnv =", "-            new LinkedHashMap(getEnvironmentVariables());", "+        Map<String, String> osEnv =", "+            new LinkedHashMap<String, String>(getEnvironmentVariables());", "-                for (Iterator it = osEnv.keySet().iterator(); it.hasNext();) {", "-                    String osEnvItem = (String) it.next();", "+                for (String osEnvItem : osEnv.keySet()) {", "-        ArrayList l = new ArrayList();", "-        for (Iterator it = osEnv.entrySet().iterator(); it.hasNext();) {", "-            Map.Entry entry = (Map.Entry) it.next();", "+        ArrayList<String> l = new ArrayList<String>();", "+        for (Entry<String, String> entry : osEnv.entrySet()) {", "-        return (String[]) (l.toArray(new String[osEnv.size()]));", "+        return l.toArray(new String[osEnv.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f834480f29ddb307350020fedad8a547", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["-            Set includePatterns = new HashSet();", "-            Set excludePatterns = new HashSet();", "+            Set<String> includePatterns = new HashSet<String>();", "+            Set<String> excludePatterns = new HashSet<String>();", "-                PatternSet p = (PatternSet) patternsets.elementAt(v);", "+                PatternSet p = patternsets.elementAt(v);", "-            for (Iterator iter = includePatterns.iterator();", "+            for (Iterator<String> iter = includePatterns.iterator();", "-                String pattern = (String) iter.next();", "+                String pattern = iter.next();", "-            for (Iterator iter = excludePatterns.iterator();", "+            for (Iterator<String> iter = excludePatterns.iterator();", "-                String pattern = (String) iter.next();", "+                String pattern = iter.next();"]}]}