{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "184d5944d76adbffe713c40b0dab1ffe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ebc4d02009af89d6eb09acbd2898c40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "da88f5e461e452a7d5a06ef10d9972886cd33c20", "commitAfterChange": "20f90e4e0c0f916f0e29f84f14a2a216d813a4cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute( final Configuration taskModel, final TaskContext context )         throws TaskException", "signatureAfterChange": "      public void execute( final Configuration taskModel, final ExecutionFrame frame )         throws TaskException", "diff": ["-    public void execute( final Configuration taskModel, final TaskContext context )", "+    public void execute( final Configuration taskModel, final ExecutionFrame frame )", "-        final Task task = createTask( taskModel.getName() );", "-        setupLogger( task );", "+        final Task task = createTask( taskModel.getName(), frame );", "+        doLoggable( task, taskModel, frame.getLogger() );", "-        doContextualize( task, taskModel, context );", "+        doContextualize( task, taskModel, frame.getContext() );", "-        doCompose( task, taskModel );", "+        doCompose( task, taskModel, frame.getComponentManager() );", "-        doConfigure( task, taskModel, context );", "+        doConfigure( task, taskModel, frame.getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf39d562b2bca74a1e5d36a6f7cb8ace", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "da88f5e461e452a7d5a06ef10d9972886cd33c20", "commitAfterChange": "20f90e4e0c0f916f0e29f84f14a2a216d813a4cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void executeTask( Configuration taskModel, final TaskContext context )         throws TaskException", "signatureAfterChange": "      private void executeTask( Configuration taskModel, final ExecutionFrame frame )         throws TaskException", "diff": ["-    private void executeTask( Configuration taskModel, final TaskContext context )", "+    private void executeTask( Configuration taskModel, final ExecutionFrame frame )", "-        final Task task = createTask( taskModel.getName() );", "+        final Task task = createTask( taskModel.getName(), frame );", "-        getAspectManager().preLoggable( getLogger() );", "-        setupLogger( task );", "+        final Logger logger = frame.getLogger();", "+        getAspectManager().preLoggable( logger );", "+        doLoggable( task, taskModel, logger );", "-        doContextualize( task, taskModel, context );", "+        doContextualize( task, taskModel, frame.getContext() );", "-        doCompose( task, taskModel );", "+        doCompose( task, taskModel, frame.getComponentManager() );", "-        doConfigure( task, taskModel, context );", "+        doConfigure( task, taskModel, frame.getContext() );"]}]}