{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7f63675863032b50f9faab13d58e3f7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b55cf271f1ef157d6be443b7e7a548c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/MailLogger.java", "commitBeforeChange": "cf50c9f62450b5105e2fb0e93a3615642391126b", "commitAfterChange": "e1fc0ae7eced5cc730e2691c6a1c52dbb0f63a4a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void sendMimeMail(Project project, String host, int port, String user, String password, String from, String replyToString, String toString,                           String subject, String message) throws IOException", "signatureAfterChange": "     private void sendMimeMail(Project project, String host, int port, String user, String password, String from, String replyToString, String toString,                           String subject, String message) throws IOException", "diff": ["+        Mailer mailer = null;", "+            try {", "+                mailer =", "+                    (Mailer) Class.forName(\"org.apache.tools.ant.taskdefs.email.MimeMailer\")", "+                    .newInstance();", "+            } catch (Throwable e) {", "+                log(\"Failed to initialise MIME mail: \"+e.getMessage());", "+                return;", "+            }", "-        MimeMailer mailer=new MimeMailer();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d5777658def92fe18572a962caa4c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "fdade0537c4628290168a365b9a14d28c3e32b72", "commitAfterChange": "9af46a2ca05b7e2da738a1688ff679445f2c1a6e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 48, "signatureBeforeChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "signatureAfterChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "diff": ["-            createClassLoader();", "+            if (splitJunit) {", "+                classLoader = (AntClassLoader) delegate.getClass().getClassLoader();", "+            } else {", "+                createClassLoader();", "+            }", "-            runner = new JUnitTestRunner(test, test.getHaltonerror(),", "+            runner = delegate.newJUnitTestRunner(test, test.getHaltonerror(),", "-                SummaryJUnitResultFormatter f =", "-                    new SummaryJUnitResultFormatter();", "+                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "+                    delegate.newSummaryJUnitResultFormatter();"]}]}