{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30b47e0e99645ddbb9f6a3af87d9db99", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e851eb4438899a20a5c868e283cf5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java", "commitBeforeChange": "5e7aa5c0e5040e238f3ca49815a6a7d6529b2cc5", "commitAfterChange": "62704266416edfa102e7c8f7f91fef0553fdd8f1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["+        } catch (UnsupportedEncodingException exc) {", "+            throw new BuildException(\"Encoding of project file is invalid.\", ", "+                                     exc);", "-            throw new BuildException(\"Error reading project file\", exc);", "+            throw new BuildException(\"Error reading project file: \"", "+                                     +exc.getMessage(), exc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d662162017eec79d21296d81ea705e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java", "commitBeforeChange": "7b1b3d16673949d0a108587b653c1a1855def0cb", "commitAfterChange": "7fc0d42636ae70a69d8dc312090c5fe80ae32f0c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["+        } catch (FactoryConfigurationError e) {", "+            throw new BuildException(\"XML parser has not been configured \" ", "+                + \"correctly: \" + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5373a80e0b13dd82140ca6f2a516ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/IncludeTest.java", "commitBeforeChange": "9f5ab4ebed9aad38807cedd7f15248294c66fcf2", "commitAfterChange": "dfc1bee39414dbd90d79d067b7f20ad54c7dcfcc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testWithSpaceInclude()", "signatureAfterChange": "      public void testWithSpaceInclude()", "diff": ["-        expectLog(\"test1\", \"from included entity in 'with space'\");", "+        try {", "+            expectLog(\"test1\", \"from included entity in 'with space'\");", "+        } catch (Throwable t) {", "+            throw new AssertionFailedError(", "+                t.toString() + \"; log=\\n\" + getFullLog());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6310c1c28b1fe8d51e0320742a106a88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/BindTargets.java", "commitBeforeChange": "568f81e94792020b987abea1f2bc136a0d6764ec", "commitAfterChange": "70abcb7f5d2128f7af46b37ca416d2859a77d8e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setOnMissingExtensionPoint(String onMissingExtensionPoint)", "signatureAfterChange": "      public void setOnMissingExtensionPoint(String onMissingExtensionPoint)", "diff": ["+        try {", "+            this.onMissingExtensionPoint = OnMissingExtensionPoint.valueOf(onMissingExtensionPoint);", "+        } catch (IllegalArgumentException e) {", "+            throw new BuildException(\"Invalid onMissingExtensionPoint: \" + onMissingExtensionPoint);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73dcec57629d52f8f8543496f1342cfc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/StringUtils.java", "commitBeforeChange": "aea7d36e1ab072d5bd689fa3592f9b4c5555590d", "commitAfterChange": "f2453ec2ace86c094f619eaf311d1a38734ea7d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "signatureAfterChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "diff": ["-        return factor * Long.parseLong(humanSize);", "+        try {", "+            return factor * Long.parseLong(humanSize);", "+        } catch (NumberFormatException e) {", "+            throw new BuildException(\"Failed to parse \\\"\" + humanSize + \"\\\"\", e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a92b1c32e8ef57bfdd66c50c184fc4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "94099ccb050ba2897ddef01062ad223120c629f4", "commitAfterChange": "f8e0dcd65a5263ffe666a7446763c5caa8aa009b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "          private URLConnection openConnection(URL aSource) throws IOException", "signatureAfterChange": "          private URLConnection openConnection(URL aSource) throws IOException", "diff": ["-            connection.connect();", "+            try {", "+                connection.connect();", "+            } catch (NullPointerException e) {", "+                //bad URLs can trigger NPEs in some JVMs", "+                throw new BuildException(\"Failed to parse \" + source.toString(), e);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f06df7bd5effc9427c093eb08c7284", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "0bb00fe4f6107fa44472cd252a6fe75a93231f98", "commitAfterChange": "07b3f5e912244d7a3ad3f4cab58e59c5ec886852", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void validate() throws BuildException", "signatureAfterChange": "      private void validate() throws BuildException", "diff": ["-        try {", "-            if (atLeast != null) {", "+        if (atLeast != null) {", "+            try {", "-            } else {", "-                new DeweyDecimal(exactly);", "+            } catch (NumberFormatException e) {", "+                throw new BuildException(\"The 'atleast' attribute is not a Dewey Decimal eg 1.1.0 : \" + atLeast);", "-        } catch (NumberFormatException e) {", "-            throw new BuildException(\"The argument is not a Dewey Decimal eg 1.1.0\");", "+        } else {", "+            try {", "+                new DeweyDecimal(exactly);", "+            } catch (NumberFormatException e) {", "+                throw new BuildException(\"The 'exactly' attribute is not a Dewey Decimal eg 1.1.0 : \" + exactly);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb6d29acc9b5dfb1e50f06143aa6b95", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Http.java", "commitBeforeChange": "08fd7a4c83bd7f980eaf1edc0d9930e423aa6517", "commitAfterChange": "c8232ed82c53175729e226f4bc2dd464136a1e1b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["+                    http.setRequestMethod(requestMethod);", "+            } catch (java.net.ProtocolException pe) {", "+                throw new BuildException(\"Invalid HTTP protocol: \"", "+                                         + requestMethod, pe);"]}]}