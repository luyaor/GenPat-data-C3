{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72d3dd08b4e12d8995729667f5bf393f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cfc9aac01eac0305d4beaf5e51f9e33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "fae798e81a62a4aee31a0d2b5d0957d22bb9fa13", "commitAfterChange": "95ea95ce56b27a68660a04bcfa8abde2add0dcf3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void transform() throws BuildException", "signatureAfterChange": "     public void transform() throws BuildException", "diff": ["-", "-        XSLTProcess xsltTask = new XSLTProcess();", "-        xsltTask.bindToOwner(task);", "-        for (Iterator i = params.iterator(); i.hasNext();) {", "-            XSLTProcess.Param param = (XSLTProcess.Param) i.next();", "-            XSLTProcess.Param newParam = xsltTask.createParam();", "-            newParam.setProject(task.getProject());", "-            newParam.setName(param.getName());", "-            newParam.setExpression(param.getExpression());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880054488d12adda39254adb3e23ceab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfig.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void merge(AntConfig otherConfig)", "signatureAfterChange": "     public void merge(AntConfig otherConfig)", "diff": ["-        // merge by", "-        List currentLibraryLocations = libraryLocations;", "-        libraryLocations = new ArrayList();", "-        libraryLocations.addAll(otherConfig.libraryLocations);", "-        libraryLocations.addAll(currentLibraryLocations);", "-", "-        Iterator i = otherConfig.libPaths.keySet().iterator();", "-        while (i.hasNext()) {", "-            String libraryId = (String) i.next();", "-            List currentList = getLibraryPathList(libraryId);", "-            List combined = new ArrayList();", "-            combined.addAll(otherConfig.getLibraryPathList(libraryId));", "-            combined.addAll(currentList);", "-            libPaths.put(libraryId, combined);", "-        }", "-", "-    }", "+        tasks.addAll(otherConfig.tasks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a34de1e47890ee658e404b51cb5f1865", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/Project.java", "commitBeforeChange": "f1025dd3c6deebb466ac41a06a42d812cdf4e08d", "commitAfterChange": "c2f14ffad1518f0d1c23c084b7c216d06c5da363", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void validate(String globalName) throws ModelException", "signatureAfterChange": "     public void validate() throws ModelException", "diff": ["-     */", "-    protected void validate(String globalName) throws ModelException {", "-        Set keys = referencedProjects.keySet();", "-        for (Iterator i = keys.iterator(); i.hasNext();) {", "-            String refName = (String) i.next();", "-            Project referencedProject", "-                 = (Project) referencedProjects.get(refName);", "-            String refGlobalName = refName;", "-            if (globalName != null) {", "-                refGlobalName = globalName + REF_DELIMITER + refName;", "-            }", "-            referencedProject.validate(refGlobalName);", "-        }", "-", "-        // we now check whether all of dependencies for our targets", "+        // check whether all of dependencies for our targets", "+", "-            fillinDependencyOrder(globalName, target, dependencyOrder,", "+            fillinDependencyOrder(target, dependencyOrder,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29561932ae1788a9444bc3f51f8b06b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "cf12b9b863b658fec3fa94eecd4c0e7df3b8e986", "commitAfterChange": "05988f712e1b2011194e635b8ffe5b57aebd8bf1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Collection getCollection()", "signatureAfterChange": "         protected Collection getCollection()", "diff": ["+         */", "+        protected Collection getCollection() {", "+            ArrayList result = new ArrayList();", "+outer:      for (Iterator ri = w.getResourceCollection().iterator(); ri.hasNext();) {", "+                Resource r = (Resource) ri.next();", "+                for (Iterator i = getSelectors(); i.hasNext();) {", "+                    if (!((ResourceSelector) (i.next())).isSelected(r)) {", "+                        continue outer;", "+                    }", "+                }", "+                result.add(r);", "+            }", "+            return result;", "+        }", "-     */", "-    protected Collection getCollection() {", "-        ArrayList result = new ArrayList();", "-outer:  for (Iterator ri = rc.iterator(); ri.hasNext();) {", "-            Resource r = (Resource) ri.next();", "-            for (Iterator i = getSelectors(); i.hasNext();) {", "-                if (!((ResourceSelector) (i.next())).isSelected(r)) {", "-                    continue outer;", "-                }", "-            }", "-            result.add(r);", "-        }", "-        return result;", "-    }"]}]}