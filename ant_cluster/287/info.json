{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0d15267304513ddd412e893bbaa6688", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a026661366007aca3484bc840b8917bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/LineContains.java", "commitBeforeChange": "19731e2b2f86f9b7e0d653592c5062d342e5d823", "commitAfterChange": "86cd020ce9de4a410889d137e988f08cf1f2f664", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-            line = readLine();", "-            while (line != null) {", "-                for (int i = 0; i < containsSize; i++) {", "+            for (line = readLine(); line != null; line = readLine()) {", "+                boolean matches = true;", "+                for (int i = 0; matches && i < containsSize; i++) {", "-                    if (line.indexOf(containsStr) == -1) {", "-                        line = null;", "-                        break;", "-                    }", "+                    matches = line.indexOf(containsStr) >= 0;", "-", "-                if (line == null) {", "-                    // line didn't match", "-                    line = readLine();", "-                } else {", "+                if (matches ^ isNegated()) {", "-", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1616ace23b43ada7c409248ceebcece", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/LineContainsRegExp.java", "commitBeforeChange": "19731e2b2f86f9b7e0d653592c5062d342e5d823", "commitAfterChange": "86cd020ce9de4a410889d137e988f08cf1f2f664", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-            line = readLine();", "-            while (line != null) {", "-                for (int i = 0; i < regexpsSize; i++) {", "-                    RegularExpression regexp = (RegularExpression)", "-                                                        regexps.elementAt(i);", "+            for (line = readLine(); line != null; line = readLine()) {", "+                boolean matches = true;", "+                for (int i = 0; matches && i < regexpsSize; i++) {", "+                    RegularExpression regexp", "+                        = (RegularExpression) regexps.elementAt(i);", "-                    boolean matches = re.matches(line);", "-                    if (!matches) {", "-                        line = null;", "-                        break;", "-                    }", "+                    matches = re.matches(line);", "-", "-                if (line == null) {", "-                    // line didn't match", "-                    line = readLine();", "-                } else {", "+                if (matches ^ isNegated()) {", "-", "-"]}]}