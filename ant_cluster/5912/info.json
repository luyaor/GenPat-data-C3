{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00f7c38d67c81272a9ac85f40a99616b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29bf82667ffcf5eb2691ccd8ba03631f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void setValue( final PropertyConfigurer setter,                            final Object object,                            final String value,                            final Context context )         throws Exception", "signatureAfterChange": "     private void setValue( final PropertyConfigurer setter,                            final ConfigurationState state,                            final String value,                            final Context context )         throws CascadingException", "diff": ["-                           final Object object,", "+                           final ConfigurationState state,", "-        throws Exception", "+        throws CascadingException", "-        // Check if the creator method must be used", "-        if( setter.useCreator() )", "-        {", "-            final String message = REZ.getString( \"must-be-element.error\" );", "-            throw new ConfigurationException( message );", "-        }", "-", "-        setter.setValue( object, objValue );", "+        setter.addValue( state, objValue );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a4df6e4c90f735e07050df9cfae9c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void configureElement( final ObjectConfigurer configurer,                                    final Object object,                                    final Configuration element,                                    final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void configureElement( final ConfigurationState state,                                    final Configuration element,                                    final Context context )         throws CascadingException, InvocationTargetException", "diff": ["-    private void configureElement( final ObjectConfigurer configurer,", "-                                   final Object object,", "+    private void configureElement( final ConfigurationState state,", "-        throws ConfigurationException", "+        throws CascadingException, InvocationTargetException", "-", "-        if( DEBUG )", "-        {", "-            final String message =", "-                REZ.getString( \"configure-subelement.notice\", elementName );", "-            getLogger().debug( message );", "-        }", "-", "-        if( elementName.endsWith( \"-ref\" ) )", "+        if( elementName.toLowerCase().endsWith( \"-ref\" ) )", "-            configureReference( configurer, object, element, context );", "+            configureReference( state, element, context );", "-            configureInline( configurer, object, element, context );", "+            configureInline( state, element, context );"]}]}