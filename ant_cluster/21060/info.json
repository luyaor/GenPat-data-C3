{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c92102db9c690837a9d96d7f996ca001", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c1175696c3f8df944817b167812cae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "b1cc0a4edb49ab8e1155a6a9394a980a0196f454", "commitAfterChange": "7b84ae34e5dda8ff45d94e73e2537b369d1dedf1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir)", "signatureAfterChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir,                                     Set preservedDirectories)", "diff": ["-    private int[] removeOrphanFiles(Set nonOrphans, File toDir) {", "+    private int[] removeOrphanFiles(Set nonOrphans, File toDir,", "+                                    Set preservedDirectories) {", "-            log(\"Removing orphan directory: \" + f, Project.MSG_DEBUG);", "-            f.delete();", "-            ++removedCount[0];", "+                log(\"Removing orphan directory: \" + f, Project.MSG_DEBUG);", "+                f.delete();", "+                ++removedCount[0];", "+", "+        if (syncTarget != null) {", "+            if (syncTarget.getPreserveEmptyDirs() != null", "+                || myCopy.getIncludeEmptyDirs()) {", "+                String[] preservedDirs = ds.getExcludedDirectories();", "+                for (int i = preservedDirs.length - 1; i >= 0; --i) {", "+                    preservedDirectories.add(new File(toDir, preservedDirs[i]));", "+                }", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ba7e67512df8ca816c6304b16d499d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "cd22c5c17bdd60429f1f60dcca9d2c5c9faff348", "commitAfterChange": "dd72ac08fff2f2eb7fb7b8fed237f718036c7434", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir,                                     Set preservedDirectories)", "signatureAfterChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir,                                     Set preservedDirectories)", "diff": ["-        if (syncTarget != null) {", "-            if (syncTarget.getPreserveEmptyDirs() != null", "-                || myCopy.getIncludeEmptyDirs()) {", "-                String[] preservedDirs = ds.getExcludedDirectories();", "-                for (int i = preservedDirs.length - 1; i >= 0; --i) {", "-                    preservedDirectories.add(new File(toDir, preservedDirs[i]));", "-                }", "+        Boolean ped = getExplicitPreserveEmptyDirs();", "+        if (ped != null && ped.booleanValue() != myCopy.getIncludeEmptyDirs()) {", "+            String[] preservedDirs = ds.getExcludedDirectories();", "+            for (int i = preservedDirs.length - 1; i >= 0; --i) {", "+                preservedDirectories.add(new File(toDir, preservedDirs[i]));"]}]}