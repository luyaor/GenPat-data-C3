{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "777b25700c5513a8d5c4ab59f6ba230b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f14e1a066dc5a98144ed315d9319c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/init/org/apache/ant/init/LoaderUtils.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static URL[] getLoaderURLs(URL baseURL, String defaultFile)          throws MalformedURLException", "signatureAfterChange": "     public static URL[] getLocationURLs(URL location, String defaultFile)          throws MalformedURLException", "diff": ["-    public static URL[] getLoaderURLs(URL baseURL, String defaultFile)", "+    public static URL[] getLocationURLs(URL location, String defaultFile)", "-        return getLoaderURLs(baseURL, defaultFile, new String[]{\".jar\"});", "+        return getLocationURLs(location, defaultFile, new String[]{\".jar\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40cf9c322df08d68f7f2ec2d56bce50c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "ab0d0f78f4e8ddc0b9f708c7b32576a0926be129", "commitAfterChange": "2f6f27f4272a9d4c69cebcb5b23e2f8ceee35a52", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setMapper(String type, String from, String to)", "signatureAfterChange": "     public void setMapper(String type, String from, String to)", "diff": ["-        Mapper mapper = createMapper();", "+        Mapper m = createMapper();", "-        mapper.setFrom(from);", "-        mapper.setTo(to);", "+        m.setFrom(from);", "+        m.setTo(to);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c0ea4bdd7d752fc2015f9085e2ab9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected Class getImplementationClass() throws ClassNotFoundException", "signatureAfterChange": "     protected Class getImplementationClass() throws ClassNotFoundException", "diff": ["-        String classname = this.classname;", "+        String cName = this.classname;", "-            classname = type.getImplementation();", "+            cName = type.getImplementation();", "-        return Class.forName(classname, true, loader);", "+        return Class.forName(cName, true, loader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc51ee928cd3e20efeaf17738440879", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/IContract.java", "commitBeforeChange": "ae05bf36b086294ba42d1bd38d7791d58a9b6437", "commitAfterChange": "ee35557dea8f6b803d83f59f13cc384bf73959c8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            beforeInstrumentationClasspath.addPath( baseClasspath );", "+            beforeInstrumentationClasspath.add( baseClasspath );", "-            afterInstrumentationClasspath.addPath( baseClasspath );", "+            afterInstrumentationClasspath.add( baseClasspath );", "-            repositoryClasspath.addPath( baseClasspath );", "+            repositoryClasspath.add( baseClasspath );", "-            iContractClasspath.addPath( baseClasspath );", "+            iContractClasspath.add( baseClasspath );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5395613aeaf9eab9da85fa6eb78fc878", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "fa038427c2a049699d95cfcbde27493e97a7eb70", "commitAfterChange": "af67c9bf8ffc275f7a9c9c74d94dbbf41b51544d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                Throwable t = null;", "+                BuildException be = null;", "-                    t = ProjectHelper", "+                    be = ProjectHelper", "-                    throw (BuildException) t;", "+                    throw be;", "-                    newProject.fireSubBuildFinished(t);", "+                    newProject.fireSubBuildFinished(be);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5807cb16013e9e08ad00cccb70cd5fe4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "565519bda6e5c38118f1e6d1353df4075f99573a", "commitAfterChange": "ebe2b05bb330246f04db1fb9296e980e95cfa154", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testFromURI()", "signatureAfterChange": "     public void testFromURI()", "diff": ["-            assertEquals(\"C:\\\\foo\", fu.fromURI(\"file:///c:/foo\"));", "+            assertEqualsIgnoreDriveCase(\"C:\\\\foo\", fu.fromURI(\"file:///c:/foo\"));", "-        assertEquals(localize(\"/foo\"), fu.fromURI(\"file:///foo\"));", "+        assertEqualsIgnoreDriveCase(localize(\"/foo\"), fu.fromURI(\"file:///foo\"));", "-        assertEquals(localize(\"/foo bar\"), fu.fromURI(\"file:///foo%20bar\"));", "-        assertEquals(localize(\"/foo#bar\"), fu.fromURI(\"file:///foo%23bar\"));", "+        assertEqualsIgnoreDriveCase(localize(\"/foo bar\"), fu.fromURI(\"file:///foo%20bar\"));", "+        assertEqualsIgnoreDriveCase(localize(\"/foo#bar\"), fu.fromURI(\"file:///foo%23bar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ef7cff6d7fc06baa3d904310278b02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "444d7cdf83a6486694bceba5155cecc23ab2e04a", "commitAfterChange": "7ac5356019aca23d3d4deef18ce09bf05dfc0577", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(FileSet[] filesets,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-    protected ArchiveState getResourcesToAdd(FileSet[] filesets,", "+    protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,", "-        return super.getResourcesToAdd(filesets, zipFile, needsUpdate);", "+        return super.getResourcesToAdd(rcs, zipFile, needsUpdate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a0165017001425ca84af2e35ea0261", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJDoc.java", "commitBeforeChange": "a456c56dbbaadf93ca1b73ce4b340240c2fea090", "commitAfterChange": "323c0a125257b314fa15c480877f729e94196fa2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private String createOutputFileName(File targetFile, String optionalOutputFile,                                         boolean plainText)", "signatureAfterChange": "      private String createOutputFileName(File destFile, String optionalOutputFile,                                         boolean plain)", "diff": ["-    private String createOutputFileName(File targetFile, String optionalOutputFile,", "-                                        boolean plainText) {", "+    private String createOutputFileName(File destFile, String optionalOutputFile,", "+                                        boolean plain) {", "-        String javaccFile = targetFile.getAbsolutePath().replace('\\\\', '/');", "+        String javaccFile = destFile.getAbsolutePath().replace('\\\\', '/');", "-        if (plainText) {", "+        if (plain) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "771685e4b4a31a43bd649b06b3c56dcc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "3ae40fb067c0d3c1fbc6a81055ed9bcc1a2ad3f7", "commitAfterChange": "2fb97663f2446b5bcbecf2bc75d7abe93a6409c5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void addFailure(Test test, AssertionFailedError failure)", "signatureAfterChange": "     public void addFailure(Test test, Throwable t)", "diff": ["-    public void addFailure(Test test, AssertionFailedError failure) {", "-        formatError(\"\\tFAILED\", test, failure);", "+    public void addFailure(Test test, Throwable t) {", "+        formatError(\"\\tFAILED\", test, t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "831a51e691416f07fe324525e850bf2e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/RegisterTasklet.java", "commitBeforeChange": "f358a34a1de10daf7d4a61dc818d5a51ff2bee81", "commitAfterChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected void registerResource( final String name,                                       final String classname,                                       final URL url )         throws AntException, RegistryException", "signatureAfterChange": "     protected void registerResource( final String name,                                       final String classname,                                       final URL url )         throws AntException, RegistryException", "diff": ["-            final DefaultTaskletInfo info = new DefaultTaskletInfo( classname, url );", "-            m_engine.getTaskletRegistry().register( name, info ); ", "+            final DefaultLocator locator = new DefaultLocator( classname, url );", "+            m_engine.getLocatorRegistry().register( name, locator ); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bd729a2a290c9ec7647c772b64468ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-    public void execute()", "-        throws BuildException", "-    {", "+     */", "+    public void execute() throws BuildException {", "-        attributes.put( Attributes.Name.MANIFEST_VERSION, MANIFEST_VERSION );", "-        final String createdBy = \"Apache Ant \" + getProject().getProperty( \"ant.version\" );", "-        attributes.putValue( CREATED_BY, createdBy );", "+        attributes.put(Attributes.Name.MANIFEST_VERSION, MANIFEST_VERSION);", "+        final String createdBy = \"Apache Ant \" + getProject().getProperty(\"ant.version\");", "+        attributes.putValue(CREATED_BY, createdBy);", "-        appendExtraAttributes( attributes );", "+        appendExtraAttributes(attributes);", "-        if( null != m_extension )", "-        {", "-            Extension.addExtension( m_extension, attributes );", "+        if (null != extension) {", "+            Extension.addExtension(extension, attributes);", "-        final ArrayList depends = toExtensions( m_dependencies );", "-        appendExtensionList( attributes,", "+        final ArrayList depends = toExtensions(dependencies);", "+        appendExtensionList(attributes,", "-                             depends.size() );", "-        appendLibraryList( attributes, \"lib\", depends );", "+                             depends.size());", "+        appendLibraryList(attributes, \"lib\", depends);", "-        final ArrayList option = toExtensions( m_optionals );", "-        appendExtensionList( attributes,", "+        final ArrayList option = toExtensions(optionals);", "+        appendExtensionList(attributes,", "-                             option.size() );", "-        appendLibraryList( attributes, \"opt\", option );", "+                             option.size());", "+        appendLibraryList(attributes, \"opt\", option);", "-        try", "-        {", "-            final String message = \"Generating manifest \" + m_destfile.getAbsoluteFile();", "-            log( message, Project.MSG_INFO );", "-            writeManifest( manifest );", "-        }", "-        catch( final IOException ioe )", "-        {", "-            throw new BuildException( ioe.getMessage(), ioe );", "+        try {", "+            final String message = \"Generating manifest \" + destFile.getAbsoluteFile();", "+            log(message, Project.MSG_INFO);", "+            writeManifest(manifest);", "+        } catch (final IOException ioe) {", "+            throw new BuildException(ioe.getMessage(), ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0af228579dc3053a5bcf2993298303", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "8df1ef0ecfcd30c0445cb3f7300cdf8e16e32df1", "commitAfterChange": "ffe7ce3c548442235689eef400b468f245416d06", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "     protected void logOnFirstPass(String msg, int level)", "signatureAfterChange": "     protected void logWhenWriting(String msg, int level)", "diff": ["-    protected void logOnFirstPass(String msg, int level) {", "-        if (isFirstPass()) {", "+    protected void logWhenWriting(String msg, int level) {", "+        if (!skipWriting) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b22d3bbd3e6daa16c41f40f20146b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      private void setupNoRandPartC() throws IOException", "signatureAfterChange": "      private void setupNoRandPartC() throws IOException", "diff": ["-            int su_ch2 = this.su_ch2;", "-            this.currentChar = su_ch2;", "-            this.crc.updateCRC(su_ch2);", "+            int su_ch2Shadow = this.su_ch2;", "+            this.currentChar = su_ch2Shadow;", "+            this.crc.updateCRC(su_ch2Shadow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ebd8d0c5631db721f966ca2996fcca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "3ae40fb067c0d3c1fbc6a81055ed9bcc1a2ad3f7", "commitAfterChange": "2fb97663f2446b5bcbecf2bc75d7abe93a6409c5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void addFailure(Test test, AssertionFailedError failure)", "signatureAfterChange": "     public void addFailure(Test test, AssertionFailedError t)", "diff": ["-    public void addFailure(Test test, AssertionFailedError failure) {", "-        formatError(\"\\tFAILED\", test, failure);", "+     */", "+    public void addFailure(Test test, AssertionFailedError t) {", "+        addFailure(test, (Throwable) t);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ff5910074ef9b98368b61cc08af08d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/file/Path.java", "commitBeforeChange": "ae05bf36b086294ba42d1bd38d7791d58a9b6437", "commitAfterChange": "ee35557dea8f6b803d83f59f13cc384bf73959c8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void addPath( final Path path )", "signatureAfterChange": "     public void add( final FileList list )", "diff": ["-    public void addPath( final Path path )", "+    public void add( final FileList list )", "-        m_elements.add( path );", "+        m_elements.add( list );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7df56eb810c403bf7535222868bf430", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private boolean parseCommandLineOptions( final String[] args )         throws Exception", "signatureAfterChange": "      private boolean parseCommandLineOptions( final String[] args )         throws Exception", "diff": ["-                    m_embedded.setListener( option.getArgument() );", "+                    m_embedded.setProjectListener( option.getArgument() );", "-                    m_embedded.setListener( \"noprefix\" );", "+                    m_embedded.setProjectListener( \"noprefix\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1aca1173065c43864856a64b1f8c67f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/ModelElement.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public String getAspectAttributeValue(String aspectName, String keyName)", "signatureAfterChange": "     public String getNamespaceAttributeValue(String namepaceURI,                                              String keyName)", "diff": ["-    public String getAspectAttributeValue(String aspectName, String keyName) {", "-        return aspectValues.getAttributeValue(aspectName, keyName);", "+    public String getNamespaceAttributeValue(String namepaceURI,", "+                                             String keyName) {", "+        return namespaceValues.getAttributeValue(namepaceURI, keyName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffeba6e969dbb7ccf17f4b03851320b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "ea6cf7be53343f4b59c9fb8e794c58d83eb11315", "commitAfterChange": "0a5cf98f65e6ff720094f43785a702a9a4fc57c4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-            if (autoFound == false && (SSL)", "+            if (!autoFound  && (ssl)", "-            mailer.setSSL(SSL);", "+            mailer.setSSL(ssl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14541ef357d5f9affbd018fa6235f01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "ea6cf7be53343f4b59c9fb8e794c58d83eb11315", "commitAfterChange": "0a5cf98f65e6ff720094f43785a702a9a4fc57c4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setSSL(boolean SSL)", "signatureAfterChange": "     public void setSSL(boolean ssl)", "diff": ["-    public void setSSL(boolean SSL) {", "-        this.SSL = SSL;", "+    public void setSSL(boolean ssl) {", "+        this.ssl = ssl;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f478a559b2867726582e94f06b940a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "b5de6e5a6a5d41ba7e3d4aae0109c6838a59cbb2", "commitAfterChange": "b50fd138f8b9c08dc04ff70319e953d2450780a6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": "        public String[] getValues()", "signatureAfterChange": "         public String[] getValues()", "diff": ["-       public String[] getValues() {", "-           return new String[] {\"brief\", \"codediff\", \"nofile\", \"default\"};", "-       }", "+         */", "+        public String[] getValues() {", "+            return new String[] {STYLE_BRIEF, STYLE_CODEDIFF, STYLE_NOFILE, STYLE_DEFAULT};", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7ad52f8fb7160dcfa716711e48857f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "8bd077c556d9e35d607baabed8ed50c1ffd6b41b", "commitAfterChange": "70d6a6fb3c092c7ecd8f1901169e816ce0244042", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "signatureAfterChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "diff": ["-            getTaskContext().info( \"IIOP has been turned on.\" );", "+            getTaskContext().verbose( \"IIOP has been turned on.\" );", "-                getTaskContext().info( \"IIOP Options: \" + attributes.getIiopopts() );", "+                getTaskContext().verbose( \"IIOP Options: \" + attributes.getIiopopts() );", "-            getTaskContext().info( \"IDL has been turned on.\" );", "+            getTaskContext().verbose( \"IDL has been turned on.\" );", "-                getTaskContext().info( \"IDL Options: \" + attributes.getIdlopts() );", "+                getTaskContext().verbose( \"IDL Options: \" + attributes.getIdlopts() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9aeb649828db455da142667254a0126", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public static Manifest getDefaultManifest() throws BuildException", "signatureAfterChange": "     public static Manifest getDefaultManifest() throws BuildException", "diff": ["-            String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "-            InputStream in = Manifest.class.getResourceAsStream(s);", "+            String defManifest = \"/org/apache/tools/ant/defaultManifest.mf\";", "+            InputStream in = Manifest.class.getResourceAsStream(defManifest);", "-                throw new BuildException(\"Could not find default manifest: \" + s);", "+                throw new BuildException(\"Could not find default manifest: \" ", "+                    + defManifest);", "-        }", "-        catch (ManifestException e) {", "+        } catch (ManifestException e) {", "-        }", "-        catch (IOException e) {", "+        } catch (IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe9724a9b6901da342174d10732e7f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/Extension.java", "commitBeforeChange": "38f4bc677b4265c9b0a21b929be067514afd3d5d", "commitAfterChange": "5fc48a4bf92cd63ce993a0bef6738a5ac9d17f96", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private static void getExtension(final Attributes attributes,                                      final ArrayList required,                                      final Attributes.Name listKey)", "signatureAfterChange": "     private static void getExtension(final Attributes attributes,                                      final ArrayList required,                                      final Attributes.Name listKey)", "diff": ["-        final String[] extentions = split(names, \" \");", "-        for (int i = 0; i < extentions.length; i++) {", "-            final String prefix = extentions[ i ] + \"-\";", "+        final String[] extensions = split(names, \" \");", "+        for (int i = 0; i < extensions.length; i++) {", "+            final String prefix = extensions[ i ] + \"-\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4eab44134901564abcc36532cfe576", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "3fb8df68d72a08a7ae6ef55710ee310044812157", "commitAfterChange": "2452098505fc2dd22c2e59a55bd46da8e3352772", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void test3()", "signatureAfterChange": "      public void test3()", "diff": ["-        File file3  = new File(getProjectDir(), \"copytest3.tmp\");", "+        File file3  = new File(getOutputDir(), \"copytest3.tmp\");", "-        File file3a = new File(getProjectDir(), \"copytest3a.tmp\");", "+        File file3a = new File(getOutputDir(), \"copytest3a.tmp\");", "-        File file3b = new File(getProjectDir(), \"copytest3b.tmp\");", "+        File file3b = new File(getOutputDir(), \"copytest3b.tmp\");", "-        File file3c = new File(getProjectDir(), \"copytest3c.tmp\");", "+        File file3c = new File(getOutputDir(), \"copytest3c.tmp\");"]}]}