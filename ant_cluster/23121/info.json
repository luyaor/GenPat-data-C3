{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bf19e9c0fb8e31990c6e20bdac73dff", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "520d319018dcf36101d9647737de8297", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/security/SignJar.java", "commitBeforeChange": "2ed1541485981f566ee6cc6e3f63bf1dfad2ab39", "commitAfterChange": "8457b31f4366f1a47533e9b745843fa00ae2c440", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void doOneJar( File jarSource, File jarTarget )         throws TaskException", "signatureAfterChange": "      private void doOneJar( final File jarSource, final File jarTarget )         throws TaskException", "diff": ["-    private void doOneJar( File jarSource, File jarTarget )", "+    private void doOneJar( final File jarSource, final File jarTarget )", "-        if( null == alias )", "-        {", "-            throw new TaskException( \"alias attribute must be set\" );", "-        }", "-", "-        if( null == storepass )", "-        {", "-            throw new TaskException( \"storepass attribute must be set\" );", "-        }", "-", "-        final ExecTask cmd = (ExecTask)getProject().createTask( \"exec\" );", "+        final ExecTask cmd = null;//(ExecTask)getProject().createTask( \"exec\" );", "-        if( null != keystore )", "+        if( null != m_keystore )", "-            cmd.createArg().setValue( keystore.toString() );", "+            cmd.createArg().setValue( m_keystore.toString() );", "-        if( null != storepass )", "+        if( null != m_storepass )", "-            cmd.createArg().setValue( storepass );", "+            cmd.createArg().setValue( m_storepass );", "-        if( null != storetype )", "+        if( null != m_storetype )", "-            cmd.createArg().setValue( storetype );", "+            cmd.createArg().setValue( m_storetype );", "-        if( null != keypass )", "+        if( null != m_keypass )", "-            cmd.createArg().setValue( keypass );", "+            cmd.createArg().setValue( m_keypass );", "-        if( null != sigfile )", "+        if( null != m_sigfile )", "-            cmd.createArg().setValue( sigfile.toString() );", "+            cmd.createArg().setValue( m_sigfile.toString() );", "-        if( verbose )", "+        if( m_verbose )", "-        if( internalsf )", "+        if( m_internalsf )", "-        if( sectionsonly )", "+        if( m_sectionsonly )", "-        cmd.createArg().setValue( alias );", "+        cmd.createArg().setValue( m_alias );", "-        getLogger().info( \"Signing Jar : \" + jarSource.getAbsolutePath() );", "+        final String message = \"Signing Jar : \" + jarSource.getAbsolutePath();", "+        getLogger().info( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2c314e8304855f53316d7558f3c9e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/security/SignJar.java", "commitBeforeChange": "2ed1541485981f566ee6cc6e3f63bf1dfad2ab39", "commitAfterChange": "8457b31f4366f1a47533e9b745843fa00ae2c440", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void doOneJar( File jarSource, File jarTarget )         throws TaskException", "signatureAfterChange": "      private void doOneJar( final File jarSource, final File jarTarget )         throws TaskException", "diff": ["-    private void doOneJar( File jarSource, File jarTarget )", "+    private void doOneJar( final File jarSource, final File jarTarget )", "-        if( null == alias )", "-        {", "-            throw new TaskException( \"alias attribute must be set\" );", "-        }", "-", "-        if( null == storepass )", "-        {", "-            throw new TaskException( \"storepass attribute must be set\" );", "-        }", "-", "-        final ExecTask cmd = (ExecTask)getProject().createTask( \"exec\" );", "+        final ExecTask cmd = null;//(ExecTask)getProject().createTask( \"exec\" );", "-        if( null != keystore )", "+        if( null != m_keystore )", "-            cmd.createArg().setValue( keystore.toString() );", "+            cmd.createArg().setValue( m_keystore.toString() );", "-        if( null != storepass )", "+        if( null != m_storepass )", "-            cmd.createArg().setValue( storepass );", "+            cmd.createArg().setValue( m_storepass );", "-        if( null != storetype )", "+        if( null != m_storetype )", "-            cmd.createArg().setValue( storetype );", "+            cmd.createArg().setValue( m_storetype );", "-        if( null != keypass )", "+        if( null != m_keypass )", "-            cmd.createArg().setValue( keypass );", "+            cmd.createArg().setValue( m_keypass );", "-        if( null != sigfile )", "+        if( null != m_sigfile )", "-            cmd.createArg().setValue( sigfile.toString() );", "+            cmd.createArg().setValue( m_sigfile.toString() );", "-        if( verbose )", "+        if( m_verbose )", "-        if( internalsf )", "+        if( m_internalsf )", "-        if( sectionsonly )", "+        if( m_sectionsonly )", "-        cmd.createArg().setValue( alias );", "+        cmd.createArg().setValue( m_alias );", "-        getLogger().info( \"Signing Jar : \" + jarSource.getAbsolutePath() );", "+        final String message = \"Signing Jar : \" + jarSource.getAbsolutePath();", "+        getLogger().info( message );"]}]}