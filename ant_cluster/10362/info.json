{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f67e7860fab8213023e953c5c1617552", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f30305f291b34311a4f65f1433528f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected Map getAllProperties()", "signatureAfterChange": "     protected Iterator getRefNames()", "diff": ["-     */", "-    protected Map getAllProperties() {", "-        Map allProperties = new HashMap(dataValues);", "-        Iterator i = referencedFrames.keySet().iterator();", "-", "-        while (i.hasNext()) {", "-            String refName = (String) i.next();", "-            Frame refFrame = getReferencedFrame(refName);", "-            Map refProperties = refFrame.getAllProperties();", "-            Iterator j = refProperties.keySet().iterator();", "-", "-            while (j.hasNext()) {", "-                String name = (String) j.next();", "-                Object value = refProperties.get(name);", "-", "-                allProperties.put(refName + Project.REF_DELIMITER + name,", "-                    value);", "-            }", "-        }", "-", "-        return allProperties;", "-    }", "+     */", "+    protected Iterator getRefNames() {", "+        return referencedFrames.keySet().iterator();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b312ae865a059d3466ea14ff6215a15a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/tar/TarRoundTripTest.java", "commitBeforeChange": "b817fdb2b8ab9d8e62004957b7913cab17d5d01f", "commitAfterChange": "ca10b52e340d4ce2018e7426920e964ceaf1307a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testLongRoundTripping() throws IOException", "signatureAfterChange": "     public void testLongRoundTrippingGNU() throws IOException", "diff": ["-    public void testLongRoundTripping() throws IOException {", "+    public void testLongRoundTrippingGNU() throws IOException {", "+        testLongRoundTripping(TarOutputStream.LONGFILE_GNU);", "+    }", "-        tos.setLongFileMode(TarOutputStream.LONGFILE_GNU);"]}]}