{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e107ff9a12776bf6fa3dd6b1b7f6e33c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69be69ca4df6ac808162f80a5d3924f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ImportTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testSymlinkedImports() throws Exception", "signatureAfterChange": "      @Test     public void testSymlinkedImports() throws Exception", "diff": ["+    @Test", "-        if (!new File(ln).exists()) {", "-            // Running on Windows or something, so skip it.", "-            return;", "-        }", "+        Assume.assumeTrue(\"Current system does not support Symlinks\", new File(ln).exists());", "-            configureProject(", "+            buildRule.configureProject(", "-            assertPropertyEquals(", "-                \"ant.file.p2\",", "+            assertEquals(", "+                buildRule.getProject().getProperty(\"ant.file.p2\"),", "-            assertPropertyEquals(", "-                \"ant.file.p3\",", "+            assertEquals(", "+                buildRule.getProject().getProperty(\"ant.file.p3\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf5eb6ddf6b0bf5dded670bab1c0aff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyfileTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void test5()", "signatureAfterChange": "      @Test     public void test5()", "diff": ["+    @Test", "-        executeTarget(\"test5\");", "-        java.io.File f = new java.io.File(getOutputDir(), \"copyfile.tmp\");", "-        if (!f.exists()) {", "+        buildRule.executeTarget(\"test5\");", "+        File f = new File(new File(buildRule.getProject().getProperty(\"output\")), \"copyfile.tmp\");", "+        if (f.exists()) {", "+            f.delete();", "+        } else {"]}]}