{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0a567d96cce894e8c3cbe481977a88a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d38be695f1cfdabbf6d4058884bd28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "6b3d8a02956aad55938df6c7a1b2994a4acc5f6a", "commitAfterChange": "fe4a5cb02940376fddc661302141394be20d1f02", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private static void runBuild()", "diff": ["-\t", "+", "+            try {", "+                Class.forName(\"javax.xml.parsers.SAXParserFactory\");", "+            } catch (ClassNotFoundException cnfe) {", "+                throw new BuildException(cnfe);", "+            }", "-            String msg = \"BUILD CONFIG ERROR: \";", "-            System.out.println(msg + be.getMessage());", "-            be.printStackTrace();", "+            System.out.println(\"\\nBUILD CONFIG ERROR\\n\");", "+            if (be.getException() == null) {", "+                System.out.println(be.toString());", "+            } else {", "+                be.getException().printStackTrace();", "+\t    }", "-            String msg = \"BUILD FATAL ERROR: \";", "-            System.out.println(msg + be.getMessage());", "+            String msg = \"\\nBUILD FATAL ERROR\\n\\n\";", "+            System.out.println(msg + be.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578dfc41360fa818bafbc854e7a2011f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "af01f285a19e2502eb29bf8d10083f15cf392b7f", "commitAfterChange": "99dc457c6f7721903927fc6a154a730a36d42e51", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void process(String[] args, InitConfig initConfig)", "signatureAfterChange": "     private void process(String[] args, InitConfig initConfig)", "diff": ["+            System.exit(0);", "-            if (t instanceof AntException) {", "-                AntException e = (AntException)t;", "-                Location location = e.getLocation();", "-                Throwable cause = e.getCause();", "-                if (location != null && location != Location.UNKNOWN_LOCATION) {", "-                    System.out.print(location);", "-                }", "-                System.out.println(e.getMessage());", "-", "-                if (messageOutputLevel >= MessageLevel.MSG_VERBOSE) {", "-                    t.printStackTrace();", "-                }", "-", "-                if (cause != null) {", "-                    System.out.println(\"Root cause: \" + cause.toString());", "-                }", "-            } else {", "-                t.printStackTrace(System.err);", "-            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a4ffc85b625594940c5d6d1327db24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Task.java", "commitBeforeChange": "5f037857b64eec462d45aefb97997f37733dbbb7", "commitAfterChange": "e8e4255032431746117cf127ef194afd2b4eaa6c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public final void perform()", "signatureAfterChange": "     public final void perform()", "diff": ["-            } catch (RuntimeException exc) {", "-                if (exc instanceof BuildException) {", "-                    BuildException be = (BuildException) exc;", "-                    if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "-                        be.setLocation(getLocation());", "-                    }", "+            } catch (BuildException ex) {", "+                if (ex.getLocation() == Location.UNKNOWN_LOCATION) {", "+                    ex.setLocation(getLocation());", "-                reason = exc;", "-                throw exc;", "+                reason = ex;", "+            } catch (Exception ex) {", "+                reason = ex;", "+                BuildException be = new BuildException(ex);", "+                be.setLocation(getLocation());", "+                throw be;", "+            } catch (Error ex) {", "+                reason = ex;", "+                throw ex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84c408bb0b8823a78d1de83eb1f6e3d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/TaskAdapter.java", "commitBeforeChange": "4010e0a25dc165c31789b76fd9c5a7f434d1c551", "commitAfterChange": "63c0593a82bb20fd9ffac54dba44ab00b5551a05", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            final String methodName = getExecuteMethodName();", "-            executeM = c.getMethod(methodName, new Class[0]);", "-            if (executeM == null) {", "-                log(\"No public \" + methodName + \" in \" + proxy.getClass(),", "-                    Project.MSG_ERR);", "-                throw new BuildException(\"No public \" + methodName + \"() in \"", "-                    + proxy.getClass());", "-            }", "-            executeM.invoke(proxy, null);", "+            DispatchUtils.execute(proxy);", "-        } catch (java.lang.reflect.InvocationTargetException ie) {", "-            log(\"Error in \" + proxy.getClass(), Project.MSG_VERBOSE);", "-            Throwable t = ie.getTargetException();", "-            if (t instanceof BuildException) {", "-                throw ((BuildException) t);", "-            } else {", "-                throw new BuildException(t);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b771d0b801a945363fec8b1486afcb99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "b3dffa5f955c1cd32b73ac3b100e648e1106de6c", "commitAfterChange": "b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void parse() throws BuildException", "signatureAfterChange": "     private void parse() throws BuildException", "diff": ["-            throw new BuildException(exc.getMessage(), exc.getException(), location);", "+", "+            Throwable t = exc.getException();", "+            if (t instanceof BuildException) {", "+                BuildException be = (BuildException) t;", "+                if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "+                    be.setLocation(location);", "+                }", "+                throw be;", "+            }", "+            ", "+            throw new BuildException(exc.getMessage(), t, location);", "-            throw new BuildException(exc.getMessage(), exc.getException());", "+            Throwable t = exc.getException();", "+            if (t instanceof BuildException) {", "+                throw (BuildException) t;", "+            }", "+            throw new BuildException(exc.getMessage(), t);"]}]}