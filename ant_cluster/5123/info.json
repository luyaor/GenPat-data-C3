{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d455f4bc0097c29de85570768bad9de7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc6c19aca5f8dfe262f323114bca4ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1b25a5ab7943f4210ddf2cbb62317e8ea8aa980d", "commitAfterChange": "12f19c932133ae8e0eaae97b14eb718262cb0843", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if( dir==null) dir=\".\";", "+        try {", "+            if (p1 == null) {", "+                reinit();", "+            }", "+        ", "+            if( dir==null) dir=\".\";", "-        p1.setBasedir(dir);", "-        p1.setUserProperty(\"basedir\" , dir);", "+            initializeProject();", "-        // Override with local-defined properties", "-        Enumeration e = properties.elements();", "-        while (e.hasMoreElements()) {", "-            Property p=(Property) e.nextElement();", "-            //\t    System.out.println(\"Setting \" + p.getName()+ \" \" + p.getValue());", "-            p.init();", "+            p1.setBasedir(dir);", "+            p1.setUserProperty(\"basedir\" , dir);", "+            ", "+            // Override with local-defined properties", "+            Enumeration e = properties.elements();", "+            while (e.hasMoreElements()) {", "+                Property p=(Property) e.nextElement();", "+                p.init();", "+            }", "+            ", "+            if (antFile == null) antFile = dir + \"/build.xml\";", "+", "+            p1.setUserProperty( \"ant.file\" , antFile );", "+            ProjectHelper.configureProject(p1, new File(antFile));", "+            ", "+            if (target == null) {", "+                target = p1.getDefaultTarget();", "+            }", "+", "+            p1.executeTarget(target);", "+        } finally {", "+            // help the gc", "+            p1 = null;", "-", "-        if (antFile == null) antFile = dir + \"/build.xml\";", "-", "-        p1.setUserProperty( \"ant.file\" , antFile );", "-        ProjectHelper.configureProject(p1, new File(antFile));", "-", "-        if (target == null) {", "-            target = p1.getDefaultTarget();", "-        }", "-", "-        p1.executeTarget(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0b07f4dd6bf5f7422bcdec174e2322f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "commitAfterChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        File renamedFile=null;", "+        File renamedFile = null;", "-        boolean reallyDoUpdate=false;", "+        ", "+        addingNewFiles = true;", "+        boolean reallyDoUpdate = false;", "-            reallyDoUpdate=true;", "+            reallyDoUpdate = true;", "-                renamedFile = new File (zipFile.getParent(), \"tmp.\"+i);", "+                renamedFile = new File(zipFile.getParent(), \"tmp.\"+i);", "-                if (!renamedFile.exists())", "+                if (!renamedFile.exists()) {", "+                }", "-            if (i==1000)", "-                throw new BuildException ", "-                (\"Can't find temporary filename to rename old file to.\");", "+            if (i == 1000) {", "+                throw new BuildException(\"Can't find available temporary filename to which to rename old file.\");", "+            }", "+            ", "-                if (!zipFile.renameTo (renamedFile))", "-                    throw new BuildException ", "-                    (\"Unable to rename old file to temporary file\");", "+                if (!zipFile.renameTo(renamedFile)) {", "+                    throw new BuildException(\"Unable to rename old file to temporary file\");", "+                }", "-                throw new BuildException ", "-                    (\"Not allowed to rename old file to temporary file\");", "+                throw new BuildException(\"Not allowed to rename old file to temporary file\");", "-        if (baseDir != null)", "+        if (baseDir != null) {", "+        }", "-        if (isUpToDate(scanners, zipFile)) return;", "+        if (isUpToDate(scanners, zipFile)) {", "+            return;", "+        }", "-        String action=reallyDoUpdate ? \"Updating \" : \"Building \";", "+        String action = reallyDoUpdate ? \"Updating \" : \"Building \";", "-                if (baseDir != null)", "+                if (baseDir != null) {", "+                }", "-                if (reallyDoUpdate)", "-                {", "-                    ZipFileSet oldFiles = new ZipFileSet ();", "-                    oldFiles.setSrc (renamedFile);", "+                if (reallyDoUpdate) {", "+                    addingNewFiles = false;", "+                    ZipFileSet oldFiles = new ZipFileSet();", "+                    oldFiles.setSrc(renamedFile);", "-                    StringBuffer exclusionPattern=new StringBuffer();", "+                    StringBuffer exclusionPattern = new StringBuffer();", "-                        if (i != 0)", "-                            exclusionPattern.append (\",\");", "-                        exclusionPattern.append ", "-                            ((String) addedFiles.elementAt(i));", "+                        if (i != 0) {", "+                            exclusionPattern.append(\",\");", "+                        }", "+                        exclusionPattern.append((String)addedFiles.elementAt(i));", "-                    oldFiles.setExcludes (exclusionPattern.toString());", "+                    oldFiles.setExcludes(exclusionPattern.toString());", "-                    tmp.addElement (oldFiles);", "-                    addFiles (tmp, zOut);", "+                    tmp.addElement(oldFiles);", "+                    addFiles(tmp, zOut);", "+                finalizeZipOutputStream(zOut);"]}]}