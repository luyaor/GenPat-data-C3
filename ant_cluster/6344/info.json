{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a17c65bf1ca059babdaa5bcd2daf1f5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa909a1c53a525e6080d337feaa3018c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-        File realFile = file;", "-        if (library != null) {", "-            if (file != null) {", "-                String msg = \"You cannot specify both file and library.\";", "-                throw new BuildException(msg, location);", "-            }", "-            // For the time being libraries live in $ANT_HOME/antlib.", "-            // The idea being that we would not load all the jars there anymore", "-            String home = project.getProperty(\"ant.home\");", "-", "-            if (home == null) {", "-                throw new BuildException(\"ANT_HOME not set as required.\");", "-            }", "-", "-            realFile = new File(new File(home, \"antlib\"), library);", "-        }", "-        else if (file == null) {", "-            String msg = \"Must specify either library or file attribute.\";", "+        if (file == null && classpath == null) {", "+            String msg =", "+                \"Must specify either library or file attribute or classpath.\";", "-        if (!realFile.exists()) {", "-            String msg = \"Cannot find library: \" + realFile;", "+        if (file != null && !file.exists()) {", "+            String msg = \"Cannot find library: \" + file;", "-        //open the descriptor", "-        InputStream is = getDescriptor(realFile);", "-", "-        if (is == null) {", "-            String msg = \"Missing descriptor on library: \" + realFile;", "-            throw new BuildException(msg, location);", "-        }", "-", "-        ", "-        ClassLoader classloader=null;", "-        if (useCurrentClassloader && classpath != null) {", "-            log(\"ignoring the useCurrentClassloader option as a classpath is defined\",", "-                    Project.MSG_WARN);", "-            useCurrentClassloader=false;", "-        }", "-        if (!useCurrentClassloader) {", "-            classloader = makeClassLoader(realFile);", "-        }", "-", "-        //parse it and evaluate it.", "-        evaluateDescriptor(classloader, processAliases(), is);", "+        loadDefinitions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0241cccf2abfed58e6ec7b4bbdb1e2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "commitAfterChange": "cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["-        } else if (!dir.exists()) {", "-            throw new BuildException(dir + \" doesn't exist.\");", "-        } else if (!dir.isDirectory()) {", "-            throw new BuildException(dir + \" is not a directory.\");", "+        String[] newfiles = dir.list();", "+        if (newfiles == null) {", "+            if (!dir.exists()) {", "+                throw new BuildException(dir + \" doesn't exist.\");", "+            } else if (!dir.isDirectory()) {", "+                throw new BuildException(dir + \" is not a directory.\");", "+            } else {", "+                throw new BuildException(\"IO error scanning directory '\"", "+                                         + dir.getAbsolutePath() + \"'\");", "+            }", "+        }", "+        scandir(dir, vpath, fast, newfiles);", "+    }", "-        }", "-        String[] newfiles = dir.list();", "-", "-        if (newfiles == null) {", "-            /*", "-             * two reasons are mentioned in the API docs for File.list", "-             * (1) dir is not a directory. This is impossible as", "-             *     we wouldn't get here in this case.", "-             * (2) an IO error occurred (why doesn't it throw an exception", "-             *     then???)", "-             */", "-            throw new BuildException(\"IO error scanning directory '\"", "-                                     + dir.getAbsolutePath() + \"'\");", "-            if (file.isDirectory()) {", "-                if (isIncluded(name)) {", "-                    accountForIncludedDir(name, file, fast);", "-                } else {", "-                    everythingIncluded = false;", "-                    dirsNotIncluded.addElement(name);", "-                    if (fast && couldHoldIncluded(name)) {", "-                        scandir(file, name + File.separator, fast);", "-                    }", "-                }", "-                if (!fast) {", "-                    scandir(file, name + File.separator, fast);", "-                }", "-            } else if (file.isFile()) {"]}]}