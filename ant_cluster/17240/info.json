{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d845333beb6edd20b383bebba11f4ff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d2cb514ef3546a1cb43706bbaa55b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java", "commitBeforeChange": "521890b4299b52da126e78d4d1e0974bd7db1712", "commitAfterChange": "8542d84b4b941a882b83918589fba32d73f98538", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testFailureRecorder()", "signatureAfterChange": "     public void testFailureRecorder()", "diff": ["+        try {", "+        } catch (BuildException be) {", "+            be.printStackTrace();", "+            System.err.println(\"nested build's log: \" + getLog());", "+            System.err.println(\"nested build's System.out: \" + getOutput());", "+            System.err.println(\"nested build's System.err: \" + getError());", "+            fail(\"Ant execution failed: \" + be.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e4f0d79f56bc9af7974884af1194253", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testNested5()", "signatureAfterChange": "      @Test     public void testNested5()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"testNested5\",", "-            \"it is required to fail :-)\",", "-            \"Only one nested condition is allowed.\");", "+        try {", "+            buildRule.executeTarget(\"testNested5\");", "+            fail(\"it is required to fail :-)\") ;", "+        } catch (BuildException ex) {", "+            assertEquals(\"Only one nested condition is allowed.\", ex.getMessage());", "+        }"]}]}