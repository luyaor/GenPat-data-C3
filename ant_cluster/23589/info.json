{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2db52012840abba5a8ea31f251ba1200", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ee3d89c6f707dac4b332193824fec8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Os.java", "commitBeforeChange": "f82a8c58db3d2484bafd49bfb57b36058f3449d5", "commitAfterChange": "c5e1c21947ec2bb7f0493ce72994cb180ccdca40", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public static boolean isOs(String family, String name, String arch,                                String version)", "signatureAfterChange": "     public static boolean isOs(String family, String name, String arch,                                String version)", "diff": ["-                        /*", "-                         * FIXME", "-                         *", "-                         * Need a better way to know which one runs CMD.EXE", "-                         * and wich COMMAND.COM.", "-                         *", "-                         * If we use a fixed list of names, we should rather", "-                         * use one for all win9x flavors as it is supposed to", "-                         * be a final list.", "-                         */", "-                        !(osName.indexOf(\"nt\") >= 0 ||", "-                          osName.indexOf(\"2000\") >= 0 ||", "-                          osName.indexOf(\"2003\") >= 0 ||", "-                          osName.indexOf(\"xp\") >= 0);", "+                        (osName.indexOf(\"95\") >= 0 ||", "+                         osName.indexOf(\"98\") >= 0 ||", "+                         osName.indexOf(\"me\") >= 0 ||", "+                         osName.indexOf(\"ce\") >= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2413464af79e4e519a19295ace6beb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "e11e04dc6e6d6dcabe531346f60b597a8a58c453", "commitAfterChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void getFile(FTPClient ftp, String dir, String filename)         throws IOException, BuildException", "signatureAfterChange": "     protected void getFile(FTPClient ftp, String dir, String filename)         throws IOException, BuildException", "diff": ["-                        ", "+", "-            }                ", "+            }", "-                        ", "+", "-                throw new BuildException(", "-                                         \"could not transfer file: \" +", "-                                         ftp.getReplyString());", "-            }", "-                        ", "-            log(\"File \" + file.getAbsolutePath() + \" copied from \" + server,", "-                Project.MSG_VERBOSE);", "+                String s=\"could not get file: \" + ftp.getReplyString();", "+                if(skipFailedTransfers==true) {", "+                    log(s,Project.MSG_WARN);", "+                    skipped++;", "+                }", "+                else {", "+                    throw new BuildException(s);", "+                }", "-            transferred++;", "+            }", "+            else {", "+                log(\"File \" + file.getAbsolutePath() + \" copied from \" + server,", "+                    Project.MSG_VERBOSE);", "+                transferred++;", "+            }", "-        {            ", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f590bd6affe2b75550f071437a3384", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1c24c78ca5605e5ffd84b67673207b4769e4fc41", "commitAfterChange": "d72413184949c04015b452cf9cdf36bf2107061f", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected void setupJUnitDelegate()", "signatureAfterChange": "     protected void setupJUnitDelegate()", "diff": ["-            mirrorLoader = new SplitLoader(myLoader, path);", "+            mirrorLoader =", "+                new SplitClassLoader(myLoader, path, getProject(),", "+                                     new String[] {", "+                                         \"BriefJUnitResultFormatter\",", "+                                         \"JUnitResultFormatter\",", "+                                         \"JUnitTaskMirrorImpl\",", "+                                         \"JUnitTestRunner\",", "+                                         \"JUnitVersionHelper\",", "+                                         \"OutErrSummaryJUnitResultFormatter\",", "+                                         \"PlainJUnitResultFormatter\",", "+                                         \"SummaryJUnitResultFormatter\",", "+                                         \"TearDownOnVmCrash\",", "+                                         \"XMLJUnitResultFormatter\",", "+                                     });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695371729ac2b3f81a89a40657c1d96e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "c5fc0e2e08e3567841368f443e1f5b5d1912f8c8", "commitAfterChange": "0777fa853af3a619d777adaead96e9c0d1aff291", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                }", "-                if (!basedir.exists()) {", "-                    illegal = new IllegalStateException(\"basedir \" + basedir", "-                                                    + \" does not exist\");", "-                }", "-                if (!basedir.isDirectory()) {", "-                    illegal = new IllegalStateException(\"basedir \" + basedir", "-                                                    + \" is not a directory\");", "+                } else {", "+                    if (!basedir.exists()) {", "+                        illegal = new IllegalStateException(\"basedir \" + basedir", "+                                                        + \" does not exist\");", "+                    }", "+                    if (!basedir.isDirectory()) {", "+                        illegal = new IllegalStateException(\"basedir \" + basedir", "+                                                        + \" is not a directory\");", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cdd96bc3e86ac10c99e9c6c64eb54b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "4a1038e342b54a6684ba10135604d94fb8c5b765", "commitAfterChange": "549fc1f687f02ada2b7d6f12bfe8678eedffefb3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected final void addResources(FileSet fileset, Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "signatureAfterChange": "     protected final void addResources(FileSet fileset, Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "diff": ["+                        int unixMode = ze.getUnixMode();", "+                        if ((unixMode == 0 || unixMode == UnixStat.DIR_FLAG)", "+                            && !preserve0Permissions) {", "+                            unixMode = dirMode;", "+                        }", "-                                      ze.getUnixMode());", "+                                      unixMode);", "+                            int unixMode = ze.getUnixMode();", "+                            if (zfs.hasFileModeBeenSet()", "+                                || ((unixMode == 0", "+                                     || unixMode == UnixStat.FILE_FLAG)", "+                                    && !preserve0Permissions)) {", "+                                unixMode = fileMode;", "+                            }", "-                                    zfs.hasFileModeBeenSet() ? fileMode", "-                                    : ze.getUnixMode());", "+                                    unixMode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27aa4f61d453f82684c661229a0d9ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "e11e04dc6e6d6dcabe531346f60b597a8a58c453", "commitAfterChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void sendFile(FTPClient ftp, String dir, String filename)         throws IOException, BuildException", "signatureAfterChange": "     protected void sendFile(FTPClient ftp, String dir, String filename)         throws IOException, BuildException", "diff": ["-            ", "-            instream = new BufferedInputStream(new FileInputStream(file));", "-            ", "-            createParents(ftp, filename);", "-            ", "-            ftp.storeFile(resolveFile(filename), instream);", "-            ", "-            if (!FTPReply.isPositiveCompletion(ftp.getReplyCode()))", "-            {", "-                throw new BuildException(", "-                                         \"could not transfer file: \" +", "-                                         ftp.getReplyString());", "-            }", "-            ", "-            log(\"File \" + file.getAbsolutePath() + \" copied to \" + server,", "-                Project.MSG_VERBOSE);", "-            transferred++;", "+            instream = new BufferedInputStream(new FileInputStream(file));", "+", "+            createParents(ftp, filename);", "+", "+            ftp.storeFile(resolveFile(filename), instream);", "+            boolean success=FTPReply.isPositiveCompletion(ftp.getReplyCode());", "+            if (!success)", "+            {", "+                String s=\"could not put file: \" + ftp.getReplyString();", "+                if(skipFailedTransfers==true) {", "+                    log(s,Project.MSG_WARN);", "+                    skipped++;", "+                }", "+                else {", "+                    throw new BuildException(s);", "+                }", "+", "+            }", "+            else {", "+", "+                log(\"File \" + file.getAbsolutePath() +", "+                    \" copied to \" + server,", "+                    Project.MSG_VERBOSE);", "+                transferred++;", "+            }", "-        {            ", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead3ff865a5e731c745a37c51618eb56", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "8d904286f0b528d468fd1bf855aa3a06fe83cf85", "commitAfterChange": "571c177da2d5b9acfee0e494f0328c817d3f5de3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                    err = exe.execute();", "-                    if (err != 0) {", "-                        if (failOnError) {", "-                            throw new BuildException(\"Exec returned: \"+err, ", "-                                                     location);", "-                        } else {", "-                            log(\"Result: \" + err, Project.MSG_ERR);", "-                        }", "-                    }", "+                    runExecute(exe);", "-                        err = exe.execute();", "-                        if (err != 0) {", "-                            if (failOnError) {", "-                                throw new BuildException(\"Exec returned: \"+err, ", "-                                                         location);", "-                            } else {", "-                                log(\"Result: \" + err, Project.MSG_ERR);", "-                            }", "-                        }", "+                        runExecute(exe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee28d419542f689988472853a6bb185d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "4d082edbbdb380b7d718db1bf4322dcdc3f49281", "commitAfterChange": "f40249fb493adae86ba37ff25192164188f6eb32", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public void printElementDecl(PrintWriter out, Project p,                                      String name, Class element)", "signatureAfterChange": "         public void printElementDecl(PrintWriter out, Project p,                                      String name, Class element)", "diff": ["+                } else if (type.getSuperclass() != null && type.getSuperclass().getName().equals(\"java.lang.Enum\")) {", "+                    try {", "+                        Object[] values = (Object[]) type.getMethod(\"values\", null).invoke(null, null);", "+                        if (values.length == 0) {", "+                            sb.append(\"CDATA \");", "+                        } else {", "+                            sb.append('(');", "+                            for (int i = 0; i < values.length; i++) {", "+                                if (i != 0) {", "+                                    sb.append(\" | \");", "+                                }", "+                                sb.append(type.getMethod(\"name\", null).invoke(values[i], null));", "+                            }", "+                            sb.append(\") \");", "+                        }", "+                    } catch (Exception x) {", "+                        sb.append(\"CDATA \");", "+                    }"]}]}