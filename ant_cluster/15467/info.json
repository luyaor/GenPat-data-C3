{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c566a90eeaf977ef1dcbd7fb6587d569", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2def3e53bf5a7c4bb781819c736d5acd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "b846bf0a0491b2b8293082991157f05f0a12e5ff", "commitAfterChange": "d6ae851614fdd338ece0f76246e8b4939f0126f6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void resolveAllProperties(Properties props) throws BuildException", "signatureAfterChange": "     private void resolveAllProperties(Properties props) throws BuildException", "diff": ["-            String value = props.getProperty(name);", "+            Stack referencesSeen = new Stack();", "+            resolve(props, name, referencesSeen);", "+        }", "+    }", "-            boolean resolved = false;", "-            Vector expandedReferences = new Vector();", "-            expandedReferences.addElement(name);", "-            while (!resolved) {", "-                Vector fragments = new Vector();", "-                Vector propertyRefs = new Vector();", "-                ProjectHelper.parsePropertyString(value, fragments,", "-                                                  propertyRefs);", "-                resolved = true;", "-                if (propertyRefs.size() != 0) {", "-                    StringBuffer sb = new StringBuffer();", "-                    Enumeration i = fragments.elements();", "-                    Enumeration j = propertyRefs.elements();", "-                    while (i.hasMoreElements()) {", "-                        String fragment = (String) i.nextElement();", "-                        if (fragment == null) {", "-                            String propertyName = (String) j.nextElement();", "-                            if (expandedReferences.contains(propertyName)) {", "-                                throw new BuildException(\"Property \" + name", "-                                                         + \" was circularly \"", "-                                                         + \"defined.\");", "-                            }", "-                            expandedReferences.addElement(propertyName);", "-                            fragment = getProject().getProperty(propertyName);", "-                            if (fragment == null) {", "-                                if (props.containsKey(propertyName)) {", "-                                    fragment = props.getProperty(propertyName);", "-                                    resolved = false;", "-                                } else {", "-                                    fragment = \"${\" + propertyName + \"}\";", "-                                }", "-                            }", "-                        sb.append(fragment);", "-                    value = sb.toString();", "-                    props.put(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85cc06b6270476ba20e447be817f25a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "a79e667185fb928c4bf6cbbceafc8e87c2f5b202", "commitAfterChange": "150cad6b1e9f2c87108b2e1db7ba822344d383db", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public static String replaceProperties(Project project, String value, Hashtable keys)             throws BuildException", "signatureAfterChange": "      public static String replaceProperties(Project project, String value)             throws BuildException", "diff": ["+     */", "+     public static String replaceProperties(Project project, String value)", "+            throws BuildException {", "+         return replaceProperties(project,value,project.getProperties());", "+     }"]}]}