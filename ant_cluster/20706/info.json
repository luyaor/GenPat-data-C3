{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e318faef6215f5c4ef6e550609d0e5af", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e8585c8c2c35059f0b39b896f85502", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultPropertyConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object createValue( final Object parent )         throws ConfigurationException", "signatureAfterChange": "     public Object createValue( ConfigurationState state )         throws ConfigurationException", "diff": ["-     */", "-    public Object createValue( final Object parent )", "+    public Object createValue( ConfigurationState state )", "+        if( null == m_createMethod )", "+        {", "+            return null;", "+        }", "+", "+        final DefaultConfigurationState defState = (DefaultConfigurationState)state;", "+", "+        // Make sure there isn't a pending object for this property", "+        if( defState.getCreatedObject( m_propIndex ) != null )", "+        {", "+            final String message = REZ.getString( \"pending-property-value.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "-            if( null != m_createMethod )", "-            {", "-                return m_createMethod.invoke( parent, null );", "-            }", "-            else", "-            {", "-                return m_type.newInstance();", "-            }", "+            // Create the value", "+            final Object object = m_createMethod.invoke( defState.getObject(), null );", "+            defState.setCreatedObject( m_propIndex, object );", "+            return object;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5884273caca22259cb3245cdcc69d4ca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String resolvePath( final String baseFile,                                final String path,                                final NameScope scope )         throws FileSystemException", "signatureAfterChange": "     public String resolvePath( final String baseFile,                                final String path,                                final NameScope scope )         throws FileSystemException", "diff": ["+        else if( scope == NameScope.DESCENDENT_OR_SELF )", "+        {", "+            final int baseLen = baseFile.length();", "+            if( !resolvedPath.startsWith( baseFile )", "+                || ( resolvedPath.length() != baseLen", "+                && resolvedPath.charAt( baseLen ) != m_separatorChar ) )", "+            {", "+                final String message = REZ.getString( \"invalid-descendent-name.error\", path );", "+                throw new FileSystemException( message );", "+            }", "+        }"]}]}