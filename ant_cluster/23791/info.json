{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f75718b22e8b462c5ca2c2df44f123a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4559c3880a460f5e80aafc2614eaebb7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "f1548aec2b4a57bfdca206f32178a9e03c39d3a1", "commitAfterChange": "7ed240811799349f5a0932e7a464086e5ce31527", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public InputSource resolveEntity(String publicId,                 String systemId)", "signatureAfterChange": "         private boolean isRoleInUse(String name)", "diff": ["-        public InputSource resolveEntity(String publicId,", "-                String systemId) {", "-", "-            log(\"Looking for entiry with PublicID=\" + publicId +", "-                    \" and SystemId=\" + systemId, Project.MSG_VERBOSE);", "-            if (matchDtdId(systemId)) {", "-                String resId = systemId.substring(ANTLIB_DTD_URL.length());", "-                InputSource is =", "-                        new InputSource(this.getClass().getResourceAsStream(resId));", "-", "-                is.setSystemId(systemId);", "-                return is;", "-            }", "-            return null;", "+        private boolean isRoleInUse(String name) {", "+            return (symbols.getRole(name) != null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47918a64f07d117ad0d0372edca76078", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "587a3c4f5ef9a0effe4e1065ac7500e1e6987018", "commitAfterChange": "f504cf793e6d72308577e1dc86c7bed47d65de12", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 92, "signatureBeforeChange": "     private Hashtable mapClasses(File path)", "signatureAfterChange": "      protected Vector findPackages(File srcDir)", "diff": ["-     */", "-    private Hashtable mapClasses(File path) {", "-        Hashtable map = new Hashtable();", "-", "-        Vector files = new Vector();", "-        getFiles(path, files);", "-", "-        Enumeration e = files.elements();", "-        while (e.hasMoreElements()) {", "-            File file = (File) e.nextElement();", "-            String packageName = getPackageName(file);", "-            if (packageName != null) map.put(packageName, file);", "-        }", "-", "-        return map;", "-    }", "+    protected Vector findPackages(File srcDir) {", "+    \tVector foundPkgs = new Vector();", "+    \t", "+    \tif ((srcDir != null) && (srcDir.isDirectory())) {", "+    \t\tscan(srcDir, \"\", foundPkgs);", "+    \t}", "+    \t", "+    \treturn foundPkgs;"]}]}