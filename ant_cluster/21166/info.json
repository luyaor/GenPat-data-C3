{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51bedfd6a1af43b24462741312973cc2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7e310cf2c97df751b8f0c56fc559dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void cat()", "signatureAfterChange": "     private void cat(ResourceCollection c)", "diff": ["-    private void cat() {", "+    private void cat(ResourceCollection c) {", "-        Reader       reader = null;", "-        char[]       buffer = new char[BUFFER_SIZE];", "+        char[] buffer = new char[BUFFER_SIZE];", "-", "-", "-", "-", "-", "-            if (textBuffer != null) {", "-                reader = new StringReader(", "-                    getProject().replaceProperties(textBuffer.substring(0)));", "-            } else {", "-                reader =  new MultiReader();", "+            if (c.size() > 0) {", "+                concatenate(buffer, writer, new MultiReader(c));", "-", "-            concatenate(buffer, writer, reader);", "-", "-", "-", "-            if (reader != null) {", "-                try {", "-                    reader.close();", "-                } catch (IOException ignore) {", "-                    // ignore", "-                }", "-            }", "-            if (os != null) {", "-                try {", "-                    os.close();", "-                } catch (IOException ignore) {", "-                    // ignore", "-                }", "-            }", "+            FILE_UTILS.close(os);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6afac5b3b8ff8b28ee627ec58be7425", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void zipFile(File file, ZipOutputStream zOut, String vPath)         throws IOException", "signatureAfterChange": "          protected void zipFile(File file, ZipOutputStream zOut, String vPath)         throws IOException", "diff": ["-        // If the file being added is META-INF/MANIFEST.MF, we merge it with the", "-        // current manifest ", "+        // If the file being added is META-INF/MANIFEST.MF, we warn if it's not the", "+        // one specified in the \"manifest\" attribute - or if it's being added twice, ", "+        // meaning the same file is specified by the \"manifeset\" attribute and in", "+        // a <fileset> element.", "-            InputStream is = null;", "-            try {", "-                is = new FileInputStream(file);", "-                zipManifestEntry(is);", "-            }", "-            catch (IOException e) {", "-                throw new BuildException(\"Unable to read manifest file: \" + file, e);", "-            }", "-            finally {", "-                if (is != null) {", "-                    try {", "-                        is.close();", "-                    }", "-                    catch (IOException e) {", "-                        // do nothing", "-                    }", "-                }", "-            }", "+            log(\"Warning: selected \"+archiveType+\" files include a META-INF/MANIFEST.MF which will be ignored \" +", "+                \"(please use manifest attribute to \"+archiveType+\" task)\", Project.MSG_WARN);", "+"]}]}