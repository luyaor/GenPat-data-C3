{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72f9eec0ccde6ad3b93cd34737655496", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7e310cf2c97df751b8f0c56fc559dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void cat()", "signatureAfterChange": "     private void cat(ResourceCollection c)", "diff": ["-    private void cat() {", "+    private void cat(ResourceCollection c) {", "-        Reader       reader = null;", "-        char[]       buffer = new char[BUFFER_SIZE];", "+        char[] buffer = new char[BUFFER_SIZE];", "-", "-", "-", "-", "-", "-            if (textBuffer != null) {", "-                reader = new StringReader(", "-                    getProject().replaceProperties(textBuffer.substring(0)));", "-            } else {", "-                reader =  new MultiReader();", "+            if (c.size() > 0) {", "+                concatenate(buffer, writer, new MultiReader(c));", "-", "-            concatenate(buffer, writer, reader);", "-", "-", "-", "-            if (reader != null) {", "-                try {", "-                    reader.close();", "-                } catch (IOException ignore) {", "-                    // ignore", "-                }", "-            }", "-            if (os != null) {", "-                try {", "-                    os.close();", "-                } catch (IOException ignore) {", "-                    // ignore", "-                }", "-            }", "+            FILE_UTILS.close(os);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1cc73da4f52158880f1cead45557e17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "444a953257a1f383b6e417326194b7556b85ea58", "commitAfterChange": "9d3c394c5d1c57194e8e49cd62837855411cb98f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        /* parallel test execution is only supported for multi-process execution */", "+        int threads = ((!fork) || (forkMode.getValue().equals(ForkMode.ONCE))", "+                       ? 1", "+                       : this.threads);", "-            Iterator iter = testLists.iterator();", "-            while (iter.hasNext()) {", "-                List l = (List) iter.next();", "-                if (l.size() == 1) {", "-                    execute((JUnitTest) l.get(0));", "-                } else {", "-                    execute(l);", "-                }", "-            }", "+            /* prior to parallel the code in 'oneJunitThread' used to be here. */", "+            runTestsInThreads(testLists, threads);", "+        }", "+    }"]}]}