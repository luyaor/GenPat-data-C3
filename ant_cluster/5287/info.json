{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d06212e9938df2b035d161e7825b4c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae2a0f964ce762f68fdc7e311183520", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "0f3d4a58ff810fe461345dc833a8dabbff97c9a5", "commitAfterChange": "4ae976759285d73d6994b282ee195fa50e860143", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String inputEncoding, String outputEncoding,                          Project project)         throws IOException", "signatureAfterChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String inputEncoding, String outputEncoding,                          Project project)         throws IOException", "diff": ["+                    TokenFilter.LineTokenizer lineTokenizer = new TokenFilter.LineTokenizer();", "+                    lineTokenizer.setIncludeDelims(true);", "-                    String line = in.readLine();", "+                    String line = lineTokenizer.getToken(in);", "+                            // this should not happen, because the lines are returned with the end of line delimiter", "-                            if (filterSetsAvailable) {", "-                                newline = filters.replaceTokens(line);", "-                            } else {", "-                                newline = line;", "-                            }", "+                            newline = filters.replaceTokens(line);", "-                            out.newLine();", "-                        line = in.readLine();", "+                        line = lineTokenizer.getToken(in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb245a60a0dae43449c7219c2039c7d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "edb91a00f3f188521e66c6eb4bdceff72a527ae9", "commitAfterChange": "ff164b0006a8d9f5511dfc39be765d561121eea7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["-                        while ((line = in.readLine()) != null) {", "+                        TokenFilter.LineTokenizer lineTokenizer = new TokenFilter.LineTokenizer();", "+                        lineTokenizer.setIncludeDelims(true);", "+                        line = lineTokenizer.getToken(in);", "+                        while ((line) != null) {", "-                            out.newLine();", "+                            line = lineTokenizer.getToken(in);"]}]}