{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f8b935e304b248c4b4d62d83fb4f19c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f33852c5bab426500395c45391105ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "f8e0dcd65a5263ffe666a7446763c5caa8aa009b", "commitAfterChange": "c30aceefbcc644f1bf8d0b5dfbd83685849b09e1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public  void assertPropertyUnset(String property)", "signatureAfterChange": "     public void assertPropertyUnset(String property)", "diff": ["-    public  void assertPropertyUnset(String property) {", "-        assertPropertyEquals(property, null);", "+    public void assertPropertyUnset(String property) {", "+        String result = project.getProperty(property);", "+        if (result != null) {", "+            fail(\"Expected property \" + property", "+                    + \" to be unset, but it is set to the value: \" + result);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585227623bfdee87a50027643ca86df7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "aa497f965f344cafa030b076f5c14ef4d5e3f688", "commitAfterChange": "bd3509fb89c171ee9f9631fe241c1ea7c1edf46a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+            String lSep = System.getProperty(\"line.separator\");", "+            if (null != project.getProperty(property)) {", "+                log(\"DEPRECATED - <available> used to overide an existing property. \"", "+                    + lSep", "+                    + \" Build writer should not reuse the same property name for \"", "+                    + lSep + \"different values.\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87551091475b1fe3f54ac2a1e89a6f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "signatureAfterChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["+        final Condition condition = target.getCondition();", "+", "+        if( null != condition )", "+        {", "+            if( false == condition.evaluate( context ) )", "+            {", "+                m_logger.debug( \"Skipping target \" + name + ", "+                                \" as it does not satisfy condition\" );", "+                return;", "+            }", "+        }", "+"]}]}