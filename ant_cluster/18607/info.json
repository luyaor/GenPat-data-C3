{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bbff741cfdba4a7bb10b2c2352d8b86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d15c19bd5fa565f5224467d01ef2c1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void setupListener( final String listenerName )", "signatureAfterChange": "     protected ProjectListener createListener( final String listenerName )         throws AntException", "diff": ["-    protected void setupListener( final String listenerName )", "+    protected ProjectListener createListener( final String listenerName )", "+        throws AntException", "-        m_listener = createListener( listenerName );", "-        m_logger.addLogTarget( new LogTargetToListenerAdapter( m_listener ) );", "+        ProjectListener result = null;", "+", "+        try { result = (ProjectListener)ObjectUtil.createObject( listenerName ); }", "+        catch( final Throwable t )", "+        {", "+            throw new AntException( \"Error creating the listener \" + listenerName + ", "+                                    \" due to \" + StringUtil.printStackTrace( t, 5, true ), ", "+                                    t );", "+        }", "+", "+        getLogger().addLogTarget( new LogTargetToListenerAdapter( result ) );", "+", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f127340f29cf8316fcb670d66ec06f9e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java", "commitBeforeChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "commitAfterChange": "5872737ff5d0006fffd509da87f4bc9115cb5a39", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void deploy( final String location, final URL url )         throws DeploymentException", "signatureAfterChange": "      public void deploy( final File file )         throws DeploymentException", "diff": ["-    public void deploy( final String location, final URL url )", "+    public void deploy( final File file )", "-        //checkDeployment( location, url );", "-        final File file = getFileFor( url );", "+        getLogger().info( \"Deploying AntLib file (\" + file + \")\" );", "-        getLogger().info( \"Deploying AntLib file (\" + file + \") as \" + location );", "-        deployFromFile( location, file );", "-    }", "+        final URL url = getURL( file );", "+            loadResources( zipFile, url );", "+        catch( final DeploymentException de )", "+        {", "+            throw de;", "+        }", "+        catch( final Exception e )", "+        {", "+            throw new DeploymentException( \"Error deploying library\", e );", "+        }       "]}]}