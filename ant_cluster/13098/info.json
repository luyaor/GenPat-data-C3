{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b2e7050c09d59e73d09356adff67c46", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "390a24f283c150a94b43c26c84e72b5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSElement.java", "commitBeforeChange": "a9cc5fd794d793374e83ef922a0d32b3a9d5afdb", "commitAfterChange": "d830141f773d284b894679215e4d17a379422033", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private List getCache()", "signatureAfterChange": "     public void addPropertyChangeListener(PropertyChangeListener l)", "diff": ["-    private List getCache() {", "-        if(_treeNodeCache == null) {", "-            _treeNodeCache = new ArrayList();", "-            ", "-            for(int i = 0; i < getLength(); i++) {", "-                if(item(i) instanceof TreeNode) {", "-                    _treeNodeCache.add(item(i));", "-                }", "-            }", "+    public void addPropertyChangeListener(PropertyChangeListener l) {", "+        if(_propSupport == null) {", "+            _propSupport = new PropertyChangeSupport(this);", "-", "-        return _treeNodeCache;", "-    }", "+        _propSupport.addPropertyChangeListener(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90d3f0aa6c7cfd635650c65fe5b59bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/TreeBasedTask.java", "commitBeforeChange": "837f7ef785e24137608ba41f850d605b23bccff4", "commitAfterChange": "23e61358c8ed2aa3fe63c1f67082150047f1df9e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected int getLabelID(View v) throws BuildException", "signatureAfterChange": "     protected int getLabelID(View v) throws BuildException", "diff": ["-            Label[] allLabels = v.getLabels();", "-            for (int i = 0; i < allLabels.length; i++) {", "-                if (allLabels[i].getName().equals(this.label)) {", "-                    return allLabels[i].getID();", "-                }", "-            }", "-            throw new BuildException(\"Error: label \"", "-                    + this.label", "-                    + \" does not exist in view\");", "+            findLabel(v);", "+            return this.labelInUse.getID();"]}]}