{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "395554f15e3a3de3eea1b76e566304c1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "405122f2f4e6715b8836318929aba249", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "d824eac4d98e22a968974dea8f175894a989c3de", "commitAfterChange": "e2cef5a7a31b6061ef94bdc7ada296f6e8d23794", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-    ", "+     */", "-            if (actual.isGreaterThanOrEqual(new DeweyDecimal(atLeast))) {", "-                return true;", "-            } else {", "-                return false;", "-            }", "+            return actual.isGreaterThanOrEqual(new DeweyDecimal(atLeast));", "-            if (actual.isEqual(new DeweyDecimal(exactly))) {", "-                return true;", "-            } else {", "-                return false;", "-            }", "+            return actual.isEqual(new DeweyDecimal(exactly));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9cab78c39b8d912ffba64eaabc400ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "0c132498a8026db624c2fcf7026538c52e47b312", "commitAfterChange": "4004834c04e0eec8f0f698435b0c5983751fb593", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "     private boolean isSymlink(File base, Vector pathElements)", "signatureAfterChange": "     private boolean isSymlink(File base, Vector pathElements)", "diff": ["-                if (FILE_UTILS.isSymbolicLink(base, current)) {", "-                    return true;", "-                } else {", "-                    base = new File(base, current);", "-                    return isSymlink(base, pathElements);", "-                }", "+                return FILE_UTILS.isSymbolicLink(base, current)", "+                    || isSymlink(new File(base, current), pathElements);", "-                return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa46b8070fb74579f0cddbd28356b88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "8f488f0872a795638f9ebbc51517f85d801c1b67", "commitAfterChange": "28447bc7c09eb2a7210a267ca7a6fb2e54ee488f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public boolean supportsNestedElement(String parentUri, String elementName,                                          Project project, Object parent,                                          String childQName)", "signatureAfterChange": "     public boolean supportsNestedElement(String parentUri, String elementName,                                          Project project, Object parent)", "diff": ["-                                         Project project, Object parent,", "-                                         String childQName) {", "+                                         Project project, Object parent) {", "-        if (isDynamic()) {", "-            /*", "-              breaks several tests, in particular EchoXML because it", "-              creates additional empty child elements in XMLFragment", "-", "-            String localName =", "-                ProjectHelper.extractNameFromComponentName(elementName);", "-            String uri = ProjectHelper.extractUriFromComponentName(elementName);", "-            if (uri.equals(ProjectHelper.ANT_CORE_URI)) {", "-                uri = \"\";", "-            }", "-            if (createDynamicElement(parent, uri, localName,", "-                                     childQName == null ? localName : childQName)", "-                != null) {", "-                return true;", "-            }", "-            */", "-            return true;", "-        }", "-        return supportsReflectElement(parentUri, elementName);", "+        return isDynamic() || supportsReflectElement(parentUri, elementName);"]}]}