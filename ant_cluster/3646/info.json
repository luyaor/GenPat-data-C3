{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e11f21f9dcf0331f80c9bbef87d3ac1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6bab93cb32184e922db40c475366c6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "5f3176833504aa6f3401a636d6c9450f1e696b1a", "commitAfterChange": "af0fb970a1c0c309ca5f907e7a36d8cc62e6bdd1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static void deleteSymlink(File linkfil, Task task)         throws IOException", "signatureAfterChange": "     public static void deleteSymlink(File linkfil, Task task)         throws IOException", "diff": ["-        if (!linkfil.exists()) {", "+        if (FILE_UTILS.isDanglingSymbolicLink(linkfil.getParentFile(),", "+                                              linkfil.getName())) {", "+        if (!FILE_UTILS.isSymbolicLink(linkfil.getParentFile(),", "+                                       linkfil.getName())) {", "+            // plain file, not a link", "+            return;", "+        }", "+", "+        if (!linkfil.exists()) {", "+            throw new FileNotFoundException(\"No such symlink: \" + linkfil);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae977c750af9c2799fefb2b3530802ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ArchiveFileSet.java", "commitBeforeChange": "5e755270ba1e5287dc167a6c5f3d1e9918e37f9c", "commitAfterChange": "5d1a7711e3d5cf1aa1704bb1df97710ae47aa47b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setSrcResource(Resource src)", "signatureAfterChange": "     public void setSrcResource(Resource src)", "diff": ["-        this.src = src;", "+        if (getProject()!=null) {", "+            this.src = new FileResource(FILE_UTILS.resolveFile(getProject().getBaseDir(),src.toString()));", "+        } else {", "+            this.src = new FileResource(new File(src.toString()));", "+        }"]}]}