{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0354be587731fbcf4b2ab3aac27bd0a8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f7ad3cb3f94f77d3816f292d461373", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Javac12.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Boolean ok = ( Boolean )compile.invoke( compiler, new Object[]{cmd.getArguments()} );", "+            Boolean ok = (Boolean)compile.invoke( compiler, new Object[]{cmd.getArguments()} );", "-            throw new BuildException( \"Cannot use classic compiler, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME to your jdk directory.\" );", "+            throw new TaskException( \"Cannot use classic compiler, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME to your jdk directory.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting classic compiler: \", ex );", "+                throw new TaskException( \"Error starting classic compiler: \", ex );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34b33f7d19bc45836fd66de1e7f81f27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            String name = ( String )iter.nextElement();", "+            String name = (String)iter.nextElement();", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );", "-            throw new BuildException( \"'outputdirectory' \" + outputDirectory + \" is not a directory.\" );", "+            throw new TaskException( \"'outputdirectory' \" + outputDirectory + \" is not a directory.\" );", "-            targetName.substring( 0, targetName.indexOf( \".jjt\" ) ) + \".jj\" );", "+                                        targetName.substring( 0, targetName.indexOf( \".jjt\" ) ) + \".jj\" );", "-            throw new BuildException( \"Javacchome not set.\" );", "+            throw new TaskException( \"Javacchome not set.\" );", "-            \"/JavaCC.zip\" );", "+                                               \"/JavaCC.zip\" );", "-            Project.MSG_INFO,", "-            Project.MSG_INFO ),", "-            null );", "+                                               Project.MSG_INFO,", "+                                               Project.MSG_INFO ),", "+                         null );", "-                throw new BuildException( \"JJTree failed.\" );", "+                throw new TaskException( \"JJTree failed.\" );", "-            throw new BuildException( \"Failed to launch JJTree: \" + e );", "+            throw new TaskException( \"Failed to launch JJTree: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc0f743a519f122820161a07af476a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "          public void validate()             throws BuildException", "signatureAfterChange": "          public void validate()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42e7c79cdd381da03b43ec6f76ed39ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"At least one of the file or dir attributes, or a fileset element, must be set.\" );", "+            throw new TaskException( \"At least one of the file or dir attributes, or a fileset element, must be set.\" );", "-            throw new BuildException( \"quiet and failonerror cannot both be set to true\" );", "+            throw new TaskException( \"quiet and failonerror cannot both be set to true\" );", "-                            throw new BuildException( message );", "+                            throw new TaskException( message );", "-                                quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                                 quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-                    Project.MSG_VERBOSE );", "+                     Project.MSG_VERBOSE );", "-            FileSet fs = ( FileSet )filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.elementAt( i );", "-            catch( BuildException be )", "+            catch( TaskException be )", "-                        quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-            catch( BuildException be )", "+            catch( TaskException be )", "-                        quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5189a3acecd50a6f8b99b4d83106903f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void checkConfiguration()         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"server attribute must be set!\" );", "+            throw new TaskException( \"server attribute must be set!\" );", "-            throw new BuildException( \"userid attribute must be set!\" );", "+            throw new TaskException( \"userid attribute must be set!\" );", "-            throw new BuildException( \"password attribute must be set!\" );", "+            throw new TaskException( \"password attribute must be set!\" );", "-            throw new BuildException( \"listing attribute must be set for list action!\" );", "+            throw new TaskException( \"listing attribute must be set for list action!\" );", "-            throw new BuildException( \"remotedir attribute must be set for mkdir action!\" );", "+            throw new TaskException( \"remotedir attribute must be set for mkdir action!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6319ab264f127384640ce7cb396ceba3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"basedir attribute must be set, or at least \" +", "-                \"one fileset must be given!\" );", "+            throw new TaskException( \"basedir attribute must be set, or at least \" +", "+                                     \"one fileset must be given!\" );", "-            throw new BuildException( \"You must specify the \" + archiveType + \" file to create!\" );", "+            throw new TaskException( \"You must specify the \" + archiveType + \" file to create!\" );", "-                fileUtils.getParentFile( zipFile ) );", "+                                                    fileUtils.getParentFile( zipFile ) );", "-                    throw new BuildException( \"Unable to rename old file to temporary file\" );", "+                    throw new TaskException( \"Unable to rename old file to temporary file\" );", "-                throw new BuildException( \"Not allowed to rename old file to temporary file\" );", "+                throw new TaskException( \"Not allowed to rename old file to temporary file\" );", "-            FileSet fs = ( FileSet )filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.elementAt( i );", "-        FileScanner[] scanners = new FileScanner[dssSize];", "+        FileScanner[] scanners = new FileScanner[ dssSize ];", "-                        exclusionPattern.append( ( String )addedFiles.elementAt( i ) );", "+                        exclusionPattern.append( (String)addedFiles.elementAt( i ) );", "-            throw new BuildException( msg, ioe );", "+            throw new TaskException( msg, ioe );", "-                    renamedFile.getName(), Project.MSG_WARN );", "+                     renamedFile.getName(), Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "644b26b37b8214d2a15f612e761c34c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Boolean ok = ( Boolean )compile.invoke( compiler, new Object[]{cmd.getArguments()} );", "+            Boolean ok = (Boolean)compile.invoke( compiler, new Object[]{cmd.getArguments()} );", "-            throw new BuildException( \"Cannot use classic compiler, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME to your jdk directory.\" );", "+            throw new TaskException( \"Cannot use classic compiler, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME to your jdk directory.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting classic compiler: \", ex );", "+                throw new TaskException( \"Error starting classic compiler: \", ex );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f76639304d8f2de64ee0c34ba56fb14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                {OutputStream.class, String.class} );", "+            {OutputStream.class, String.class} );", "-                new Class[]{String[].class} );", "-            Boolean ok = ( Boolean )doRmic.invoke( rmic,", "-                ( new Object[]{cmd.getArguments()} ) );", "+                                         new Class[]{String[].class} );", "+            Boolean ok = (Boolean)doRmic.invoke( rmic,", "+                                                 ( new Object[]{cmd.getArguments()} ) );", "-            throw new BuildException( \"Cannot use SUN rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME or CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use SUN rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME or CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting SUN rmic: \", ex );", "+                throw new TaskException( \"Error starting SUN rmic: \", ex );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92fd99a34dc3098e31c26e7c2a32d8ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/SendEmail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Attribute \\\"from\\\" is required.\" );", "+                throw new TaskException( \"Attribute \\\"from\\\" is required.\" );", "-                throw new BuildException( \"Attribute \\\"toList\\\" is required.\" );", "+                throw new TaskException( \"Attribute \\\"toList\\\" is required.\" );", "-                for( Enumeration e = files.elements(); e.hasMoreElements();  )", "+                for( Enumeration e = files.elements(); e.hasMoreElements(); )", "-                    File file = ( File )e.nextElement();", "+                    File file = (File)e.nextElement();", "-                        byte[] buf = new byte[bufsize];", "+                        byte[] buf = new byte[ bufsize ];", "-                                {}", "+                                {", "+                                }", "-                        throw new BuildException( \"File \\\"\" + file.getName()", "-                             + \"\\\" does not exist or is not readable.\" );", "+                        throw new TaskException( \"File \\\"\" + file.getName()", "+                                                 + \"\\\" does not exist or is not readable.\" );", "-                throw new BuildException( \"Attribute \\\"file\\\" or \\\"message\\\" is required.\" );", "+                throw new TaskException( \"Attribute \\\"file\\\" or \\\"message\\\" is required.\" );", "-                throw new BuildException( err, ioe );", "+                throw new TaskException( err, ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "974b73bf488b323b0a211c5bfa61de84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"basedir attribute must be set, or at least \" +", "-                \"one fileset must be given!\" );", "+            throw new TaskException( \"basedir attribute must be set, or at least \" +", "+                                     \"one fileset must be given!\" );", "-            throw new BuildException( \"You must specify the \" + archiveType + \" file to create!\" );", "+            throw new TaskException( \"You must specify the \" + archiveType + \" file to create!\" );", "-                fileUtils.getParentFile( zipFile ) );", "+                                                    fileUtils.getParentFile( zipFile ) );", "-                    throw new BuildException( \"Unable to rename old file to temporary file\" );", "+                    throw new TaskException( \"Unable to rename old file to temporary file\" );", "-                throw new BuildException( \"Not allowed to rename old file to temporary file\" );", "+                throw new TaskException( \"Not allowed to rename old file to temporary file\" );", "-            FileSet fs = ( FileSet )filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.elementAt( i );", "-        FileScanner[] scanners = new FileScanner[dssSize];", "+        FileScanner[] scanners = new FileScanner[ dssSize ];", "-                        exclusionPattern.append( ( String )addedFiles.elementAt( i ) );", "+                        exclusionPattern.append( (String)addedFiles.elementAt( i ) );", "-            throw new BuildException( msg, ioe );", "+            throw new TaskException( msg, ioe );", "-                    renamedFile.getName(), Project.MSG_WARN );", "+                     renamedFile.getName(), Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3b262934decb182b4cfde848449ceb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-            throw new BuildException( \"srcdir does not exist!\" );", "+            throw new TaskException( \"srcdir does not exist!\" );", "-            throw new BuildException( \"srcdir is not a directory!\" );", "+            throw new TaskException( \"srcdir is not a directory!\" );", "-                throw new BuildException( \"destdir does not exist!\" );", "+                throw new TaskException( \"destdir does not exist!\" );", "-                throw new BuildException( \"destdir is not a directory!\" );", "+                throw new TaskException( \"destdir is not a directory!\" );", "-            \" eol=\" +", "-            ( eol == ASIS ? \"asis\" : eol == CR ? \"cr\" : eol == LF ? \"lf\" : \"crlf\" ) +", "-            \" tab=\" + ( tabs == TABS ? \"add\" : tabs == ASIS ? \"asis\" : \"remove\" ) +", "-            \" eof=\" + ( ctrlz == ADD ? \"add\" : ctrlz == ASIS ? \"asis\" : \"remove\" ) +", "-            \" tablength=\" + tablength +", "-            \" encoding=\" + ( encoding == null ? \"default\" : encoding ),", "-            Project.MSG_VERBOSE );", "+             \" eol=\" +", "+             ( eol == ASIS ? \"asis\" : eol == CR ? \"cr\" : eol == LF ? \"lf\" : \"crlf\" ) +", "+             \" tab=\" + ( tabs == TABS ? \"add\" : tabs == ASIS ? \"asis\" : \"remove\" ) +", "+             \" eof=\" + ( ctrlz == ADD ? \"add\" : ctrlz == ASIS ? \"asis\" : \"remove\" ) +", "+             \" tablength=\" + tablength +", "+             \" encoding=\" + ( encoding == null ? \"default\" : encoding ),", "+             Project.MSG_VERBOSE );", "-            processFile( files[i] );", "+            processFile( files[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3bdad27cfd3eaead3f7b929e624976", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/SendEmail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Attribute \\\"from\\\" is required.\" );", "+                throw new TaskException( \"Attribute \\\"from\\\" is required.\" );", "-                throw new BuildException( \"Attribute \\\"toList\\\" is required.\" );", "+                throw new TaskException( \"Attribute \\\"toList\\\" is required.\" );", "-                for( Enumeration e = files.elements(); e.hasMoreElements();  )", "+                for( Enumeration e = files.elements(); e.hasMoreElements(); )", "-                    File file = ( File )e.nextElement();", "+                    File file = (File)e.nextElement();", "-                        byte[] buf = new byte[bufsize];", "+                        byte[] buf = new byte[ bufsize ];", "-                                {}", "+                                {", "+                                }", "-                        throw new BuildException( \"File \\\"\" + file.getName()", "-                             + \"\\\" does not exist or is not readable.\" );", "+                        throw new TaskException( \"File \\\"\" + file.getName()", "+                                                 + \"\\\" does not exist or is not readable.\" );", "-                throw new BuildException( \"Attribute \\\"file\\\" or \\\"message\\\" is required.\" );", "+                throw new TaskException( \"Attribute \\\"file\\\" or \\\"message\\\" is required.\" );", "-                throw new BuildException( err, ioe );", "+                throw new TaskException( err, ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3212cf0d6243c0f1d853a1927570b29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                {OutputStream.class, String.class} );", "+            {OutputStream.class, String.class} );", "-                new Class[]{String[].class} );", "-            Boolean ok = ( Boolean )doRmic.invoke( rmic,", "-                ( new Object[]{cmd.getArguments()} ) );", "+                                         new Class[]{String[].class} );", "+            Boolean ok = (Boolean)doRmic.invoke( rmic,", "+                                                 ( new Object[]{cmd.getArguments()} ) );", "-            throw new BuildException( \"Cannot use SUN rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME or CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use SUN rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME or CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting SUN rmic: \", ex );", "+                throw new TaskException( \"Error starting SUN rmic: \", ex );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b53f5567e332575897eb1b6824eaa496", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-                BuildException( \"destination directory \\\"\" + destDir +", "-                \"\\\" does not exist or is not a directory\" );", "+                TaskException( \"destination directory \\\"\" + destDir +", "+                               \"\\\" does not exist or is not a directory\" );", "-            File srcDir = ( File )resolveFile( list[i] );", "+            File srcDir = (File)resolveFile( list[ i ] );", "-                throw new BuildException( \"srcdir \\\"\" + srcDir.getPath() +", "-                    \"\\\" does not exist!\" );", "+                throw new TaskException( \"srcdir \\\"\" + srcDir.getPath() +", "+                                         \"\\\" does not exist!\" );", "-                \" source file\"", "+                 \" source file\"", "-                    throw new BuildException( FAIL_MSG );", "+                    throw new TaskException( FAIL_MSG );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b55c710e0e987240f4d3c5ea0e6d8383", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void checkConfiguration()         throws BuildException", "signatureAfterChange": "     protected void checkConfiguration()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"server attribute must be set!\" );", "+            throw new TaskException( \"server attribute must be set!\" );", "-            throw new BuildException( \"userid attribute must be set!\" );", "+            throw new TaskException( \"userid attribute must be set!\" );", "-            throw new BuildException( \"password attribute must be set!\" );", "+            throw new TaskException( \"password attribute must be set!\" );", "-            throw new BuildException( \"listing attribute must be set for list action!\" );", "+            throw new TaskException( \"listing attribute must be set for list action!\" );", "-            throw new BuildException( \"remotedir attribute must be set for mkdir action!\" );", "+            throw new TaskException( \"remotedir attribute must be set for mkdir action!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c12ef5ab191c74e2ea5371911f74b442", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"At least one of the file or dir attributes, or a fileset element, must be set.\" );", "+            throw new TaskException( \"At least one of the file or dir attributes, or a fileset element, must be set.\" );", "-            throw new BuildException( \"quiet and failonerror cannot both be set to true\" );", "+            throw new TaskException( \"quiet and failonerror cannot both be set to true\" );", "-                            throw new BuildException( message );", "+                            throw new TaskException( message );", "-                                quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                                 quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-                    Project.MSG_VERBOSE );", "+                     Project.MSG_VERBOSE );", "-            FileSet fs = ( FileSet )filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.elementAt( i );", "-            catch( BuildException be )", "+            catch( TaskException be )", "-                        quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-            catch( BuildException be )", "+            catch( TaskException be )", "-                        quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0b523bc245cc17faa492d5b908b410", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "          public void validate()             throws BuildException", "signatureAfterChange": "          public void validate()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5bddd18c12d6d38363cb05a972f7ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-                BuildException( \"destination directory \\\"\" + destDir +", "-                \"\\\" does not exist or is not a directory\" );", "+                TaskException( \"destination directory \\\"\" + destDir +", "+                               \"\\\" does not exist or is not a directory\" );", "-            File srcDir = ( File )resolveFile( list[i] );", "+            File srcDir = (File)resolveFile( list[ i ] );", "-                throw new BuildException( \"srcdir \\\"\" + srcDir.getPath() +", "-                    \"\\\" does not exist!\" );", "+                throw new TaskException( \"srcdir \\\"\" + srcDir.getPath() +", "+                                         \"\\\" does not exist!\" );", "-                \" source file\"", "+                 \" source file\"", "-                    throw new BuildException( FAIL_MSG );", "+                    throw new TaskException( FAIL_MSG );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde6c97ff0de686ae005406fe2f6ec4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-            throw new BuildException( \"srcdir does not exist!\" );", "+            throw new TaskException( \"srcdir does not exist!\" );", "-            throw new BuildException( \"srcdir is not a directory!\" );", "+            throw new TaskException( \"srcdir is not a directory!\" );", "-                throw new BuildException( \"destdir does not exist!\" );", "+                throw new TaskException( \"destdir does not exist!\" );", "-                throw new BuildException( \"destdir is not a directory!\" );", "+                throw new TaskException( \"destdir is not a directory!\" );", "-            \" eol=\" +", "-            ( eol == ASIS ? \"asis\" : eol == CR ? \"cr\" : eol == LF ? \"lf\" : \"crlf\" ) +", "-            \" tab=\" + ( tabs == TABS ? \"add\" : tabs == ASIS ? \"asis\" : \"remove\" ) +", "-            \" eof=\" + ( ctrlz == ADD ? \"add\" : ctrlz == ASIS ? \"asis\" : \"remove\" ) +", "-            \" tablength=\" + tablength +", "-            \" encoding=\" + ( encoding == null ? \"default\" : encoding ),", "-            Project.MSG_VERBOSE );", "+             \" eol=\" +", "+             ( eol == ASIS ? \"asis\" : eol == CR ? \"cr\" : eol == LF ? \"lf\" : \"crlf\" ) +", "+             \" tab=\" + ( tabs == TABS ? \"add\" : tabs == ASIS ? \"asis\" : \"remove\" ) +", "+             \" eof=\" + ( ctrlz == ADD ? \"add\" : ctrlz == ASIS ? \"asis\" : \"remove\" ) +", "+             \" tablength=\" + tablength +", "+             \" encoding=\" + ( encoding == null ? \"default\" : encoding ),", "+             Project.MSG_VERBOSE );", "-            processFile( files[i] );", "+            processFile( files[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f911343ae262072c61b721dbf7a68893", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            String name = ( String )iter.nextElement();", "+            String name = (String)iter.nextElement();", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );", "-            throw new BuildException( \"'outputdirectory' \" + outputDirectory + \" is not a directory.\" );", "+            throw new TaskException( \"'outputdirectory' \" + outputDirectory + \" is not a directory.\" );", "-            targetName.substring( 0, targetName.indexOf( \".jjt\" ) ) + \".jj\" );", "+                                        targetName.substring( 0, targetName.indexOf( \".jjt\" ) ) + \".jj\" );", "-            throw new BuildException( \"Javacchome not set.\" );", "+            throw new TaskException( \"Javacchome not set.\" );", "-            \"/JavaCC.zip\" );", "+                                               \"/JavaCC.zip\" );", "-            Project.MSG_INFO,", "-            Project.MSG_INFO ),", "-            null );", "+                                               Project.MSG_INFO,", "+                                               Project.MSG_INFO ),", "+                         null );", "-                throw new BuildException( \"JJTree failed.\" );", "+                throw new TaskException( \"JJTree failed.\" );", "-            throw new BuildException( \"Failed to launch JJTree: \" + e );", "+            throw new TaskException( \"Failed to launch JJTree: \" + e );"]}]}