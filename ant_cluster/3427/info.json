{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5edb482263ffa9de1025daf363dc69a5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757d5ffb93f414234a3c0e53b366baf8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "2f59f52b6308d1fa1c39b2d16d66c6f0e749718c", "commitAfterChange": "7f18b8f61106667917fa5bdd33b885344f2f5221", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "       private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["+            boolean destIsWrong = true;", "-                    if (!destFile.delete()) {", "-                        throw new BuildException(\"Unable to delete \"", "-                                                 + destFile);", "-                    }", "-                    if (!tmpFile.renameTo(destFile)) {", "-                        throw new BuildException(", "-                                \"Failed to transform \" + srcFile", "-                                + \" to \" + destFile", "-                                + \". Couldn't rename temporary file: \"", "-                                + tmpFile);", "-                    }", "-", "-                } else { // destination is equal to temp file", "+                } else {", "-                    if (!tmpFile.delete()) {", "-                        throw new BuildException(\"Unable to delete \"", "-                                                 + tmpFile);", "-                    }", "-                }", "-            } else { // destFile does not exist - write the temp file", "-                log(\"destFile does not exist\", Project.MSG_DEBUG);", "-", "-                File parent = fileUtils.getParentFile(destFile);", "-                if (!parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-", "-                if (!tmpFile.renameTo(destFile)) {", "-                    throw new BuildException(", "-                            \"Failed to transform \" + srcFile", "-                            + \" to \" + destFile", "-                            + \". Couldn't rename temporary file: \"", "-                            + tmpFile);", "+                    destIsWrong = false;", "-            tmpFile = null;", "+            if (destIsWrong) {", "+                fileUtils.rename(tmpFile, destFile);", "+                tmpFile = null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c59f16514473b80c8969b118721e792", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "0bf139178affc6edbd26010b96cd727bd1396c84", "commitAfterChange": "722f6306c7ce1bcfed6c1baacb939978cd48fc6b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["-                                     ", "+", "-                if (!destFile.delete()) {", "-                    throw new BuildException(\"Unable to delete \" + destFile);", "+                // Compare the destination with the temp file", "+                System.out.println(\"destFile exists\");", "+                if ( ! filesEqual(destFile, tmpFile)) {", "+                    System.out.println(\"destFile exists: files not equal\");", "+                    log(destFile + \" is being written\", Project.MSG_VERBOSE);", "+                    if (!destFile.delete()) {", "+                        throw new BuildException(\"Unable to delete \"", "+                                                 + destFile);", "+                    }", "+                    if (!tmpFile.renameTo(destFile)) {", "+                        throw new BuildException(", "+                                \"Failed to transform \" + srcFile", "+                                + \" to \" + destFile", "+                                + \". Couldn't rename temporary file: \"", "+                                + tmpFile);", "+                    }", "+", "+                } else { // destination is equal to temp file", "+                    System.out.println(\"destFile exists: files equal\");", "+                    log(destFile +", "+                        \" is not written, as the contents are identical\",", "+                        Project.MSG_VERBOSE);", "+                    if (!tmpFile.delete()) {", "+                        throw new BuildException(\"Unable to delete \"", "+                                                 + destFile);", "+                    }", "+                }", "+            } else { // destFile does not exist - write the temp file", "+                System.out.println(\"destFile does not exist\");", "+                if (!tmpFile.renameTo(destFile)) {", "+                    throw new BuildException(", "+                            \"Failed to transform \" + srcFile", "+                            + \" to \" + destFile", "+                            + \". Couldn't rename temporary file: \"", "+                            + tmpFile);", "-                                     ", "-            if (!tmpFile.renameTo(destFile)) {", "-                throw new BuildException(\"Failed to transform \" + srcFile", "-                                         + \" to \" + destFile", "-                                         + \". Couldn't rename temporary file: \" + tmpFile);", "-            } else {", "-                tmpFile = null;", "-            }", "+", "+            tmpFile = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b93bb8cb80f1fd1bc869905f3df5ce4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "d5b535aa9a9f69dcd2d0cada46e88e7f3295c084", "commitAfterChange": "f8e71b50339d8fc15bdf6813eaa91d24096817a7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                    throw new BuildException(\"Source file or resource \"", "-                                             + \"collection, \"", "+                    throw new BuildException(\"Source file or resource collection, \"", "-            if (srcFile != null && !srcFile.exists()) {", "-                throw new BuildException(\"Source file does not exist!\", getLocation());", "+            if (srcFile != null && !srcFile.isFile()) {", "+                throw new BuildException(\"Source file \" + srcFile", "+                        + \" is not a file!\", getLocation());", "-                        log(\"Opening PrintStream to output file \" + output,", "-                            Project.MSG_VERBOSE);", "-                        out = new PrintStream(", "-                                  new BufferedOutputStream(", "-                                      new FileOutputStream(output", "-                                                           .getAbsolutePath(),", "-                                                           append)));", "+                        log(\"Opening PrintStream to output file \" + output, Project.MSG_VERBOSE);", "+                        out = new PrintStream(new BufferedOutputStream(", "+                                new FileOutputStream(output.getAbsolutePath(), append)));", "-                    if (out != null && out != System.out) {", "-                        out.close();", "-                    }", "+                    FileUtils.close(out);", "+                } catch (SQLException ex) {", "+                    // ignore", "+                }", "+                try {", "-            log(goodSql + \" of \" + totalSql", "-                + \" SQL statements executed successfully\");", "+            log(goodSql + \" of \" + totalSql + \" SQL statements executed successfully\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce35549639ac9d8734d1916a5cc9b1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void binaryCat()", "signatureAfterChange": "     private void binaryCat(ResourceCollection c)", "diff": ["-    private void binaryCat() {", "-        log(\"Binary concatenation of \" + sourceFiles.size()", "-            + \" files to \" + destinationFile);", "+    private void binaryCat(ResourceCollection c) {", "+        log(\"Binary concatenation of \" + c.size()", "+            + \" resources to \" + destinationFile);", "-        FileInputStream in = null;", "+        InputStream in = null;", "-                throw new BuildException(", "-                    \"Unable to open \" + destinationFile", "-                    + \" for writing\", t);", "+                throw new BuildException(\"Unable to open \"", "+                    + destinationFile + \" for writing\", t);", "-            for (Iterator i = sourceFiles.iterator(); i.hasNext();) {", "-                File sourceFile = (File) i.next();", "+            try {", "+                in = new ConcatResourceInputStream(c);", "+                ((ConcatResourceInputStream) in).setManagingComponent(this);", "+            } catch (IOException e) {", "+                throw new BuildException(e);", "+            }", "+            Thread t = new Thread(new StreamPumper(in, out));", "+            t.start();", "+            try {", "+                t.join();", "+            } catch (InterruptedException e) {", "-                    in = new FileInputStream(sourceFile);", "-                } catch (Exception t) {", "-                    throw new BuildException(", "-                        \"Unable to open input file \" + sourceFile,", "-                        t);", "+                    t.join();", "+                } catch (InterruptedException ee) {", "-                int count = 0;", "-                do {", "-                    try {", "-                        count = in.read(buffer, 0, buffer.length);", "-                    } catch (Exception t) {", "-                        throw new BuildException(", "-                            \"Unable to read from \" + sourceFile, t);", "-                    }", "-                    try {", "-                        if (count > 0) {", "-                            out.write(buffer, 0, count);", "-                        }", "-                    } catch (Exception t) {", "-                        throw new BuildException(", "-                            \"Unable to write to \" + destinationFile, t);", "-                    }", "-                } while (count > 0);", "-", "-                try {", "-                    in.close();", "-                } catch (Exception t) {", "-                    throw new BuildException(", "-                        \"Unable to close \" + sourceFile, t);", "-                }", "-                in = null;", "-"]}]}