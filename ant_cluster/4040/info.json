{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83aec9566abee35a0b42b9b47ed96d83", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6515dd2ed2554808e0a61ca2b0f765f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "4da35d2138f63ecb969af0c78afc6de100445561", "commitAfterChange": "debc4cf475921fb0cb62cb8a57db93eeb8b17a36", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public static void main(String[] args) throws IOException", "signatureAfterChange": "     public static void main(String[] args) throws IOException", "diff": ["-                boolean errorOccured = false;", "-                boolean failureOccured = false;", "+                boolean errorOccurred = false;", "+                boolean failureOccurred = false;", "-                    errorOccured = (code == ERRORS);", "-                    failureOccured = (code != SUCCESS);", "-                    if (errorOccured || failureOccured) {", "-                        if ((errorOccured && haltError)", "-                            || (failureOccured && haltFail)) {", "+                    errorOccurred = (code == ERRORS);", "+                    failureOccurred = (code != SUCCESS);", "+                    if (errorOccurred || failureOccurred) {", "+                        if ((errorOccurred && haltError)", "+                            || (failureOccurred && haltFail)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665be53b6c6bd956ec1da5bb1483dafc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2d15e8d8b3af5f74bf06989fe1c5cce6e07e3471", "commitAfterChange": "257dadeaf0fb8588b80fa71b24ee3aca38ea19b7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testToURI()", "signatureAfterChange": "     public void testToURI()", "diff": ["-            assertEquals(\"file:///C:/foo\", fu.toURI(\"c:\\\\foo\"));", "+            assertEquals(\"file:///C:/foo\", FILE_UTILS.toURI(\"c:\\\\foo\"));", "-            assertEquals(\"file:///SYS:/foo\", fu.toURI(\"sys:\\\\foo\"));", "+            assertEquals(\"file:///SYS:/foo\", FILE_UTILS.toURI(\"sys:\\\\foo\"));", "-        assertEquals(\"file:///\" + dosRoot + \"foo\", fu.toURI(\"/foo\"));", "+        assertEquals(\"file:///\" + dosRoot + \"foo\", FILE_UTILS.toURI(\"/foo\"));", "-        assertEquals(\"file:///\" + dosRoot + \"foo\", fu.toURI(\"\\\\foo\"));", "+        assertEquals(\"file:///\" + dosRoot + \"foo\", FILE_UTILS.toURI(\"\\\\foo\"));", "-        assertEquals(\"file:///\" + dosRoot + \"foo%20bar\", fu.toURI(\"/foo bar\"));", "-        assertEquals(\"file:///\" + dosRoot + \"foo%20bar\", fu.toURI(\"\\\\foo bar\"));", "-        assertEquals(\"file:///\" + dosRoot + \"foo%23bar\", fu.toURI(\"/foo#bar\"));", "-        assertEquals(\"file:///\" + dosRoot + \"foo%23bar\", fu.toURI(\"\\\\foo#bar\"));", "+        assertEquals(\"file:///\" + dosRoot + \"foo%20bar\", FILE_UTILS.toURI(\"/foo bar\"));", "+        assertEquals(\"file:///\" + dosRoot + \"foo%20bar\", FILE_UTILS.toURI(\"\\\\foo bar\"));", "+        assertEquals(\"file:///\" + dosRoot + \"foo%23bar\", FILE_UTILS.toURI(\"/foo#bar\"));", "+        assertEquals(\"file:///\" + dosRoot + \"foo%23bar\", FILE_UTILS.toURI(\"\\\\foo#bar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a1c2c1abadb1292eb7e3ae34413d74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/input/DefaultInputHandler.java", "commitBeforeChange": "50b046504d483f70f07b3627ef4259a24a655931", "commitAfterChange": "ea98aac2fa3f7a6b7bae5d66dc179f438cc235ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void handleInput(InputRequest request) throws BuildException", "signatureAfterChange": "     public void handleInput(InputRequest request) throws BuildException", "diff": ["-        DataInputStream in = null;", "+        BufferedReader r = null;", "-            in =", "-                new DataInputStream(new KeepAliveInputStream(getInputStream()));", "+            r = new BufferedReader(new InputStreamReader(getInputStream()));", "-                    String input = in.readLine();", "+                    String input = r.readLine();", "-            if (in != null) {", "+            if (r != null) {", "-                    in.close();", "+                    r.close();"]}]}