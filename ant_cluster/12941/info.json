{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "baf048fa264f6277b2a6bf440b60615a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1400668f44c45f826809557426cb01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Antidote.java", "commitBeforeChange": "14440efdc9c9554d9aa53d6d08e78ea80d799215", "commitAfterChange": "8f1c8244496bf51623d91f0bf9ac9148f0e92df7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private JComponent populateEditors(String prefix)", "signatureAfterChange": "     private JComponent populateModules(String prefix)", "diff": ["-    private JComponent populateEditors(String prefix) {", "+    private JComponent populateModules(String prefix) {", "-            getStringArray(getClass(), prefix + \".editors\");", "+            getStringArray(getClass(), prefix + \".modules\");", "-        AntEditor[] editors = new AntEditor[classNames.length];", "+        AntModule[] modules = new AntModule[classNames.length];", "-                Class editorType = Class.forName(classNames[i]);", "+                Class type = Class.forName(classNames[i]);", "-                Constructor ctor = ", "-                    editorType.getConstructor(AntEditor.CTOR_PARAMS);", "-", "-                editors[i] = ", "-                    (AntEditor) ctor.newInstance(new Object[] { _context });", "+                modules[i] = (AntModule) type.newInstance();", "+                modules[i].contextualize(_context);", "-        if(editors.length == 1) {", "-            return editors[0];", "+        if(modules.length == 1) {", "+            return modules[0];", "-        else if(editors.length > 1) {", "+        else if(modules.length > 1) {", "-            for(int i = 0; i < editors.length; i++) {", "-                tabbed.addTab(editors[i].getName(), editors[i]);", "+            for(int i = 0; i < modules.length; i++) {", "+                tabbed.addTab(modules[i].getName(), modules[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1a694d8dc1dd3a41546e47ba23eeb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "c717727548e7807ced7eeff05871f414a6f57413", "commitAfterChange": "3a896be7fdf1beb063702928ae89b4f7cbe106c2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void copyFile(File fromFile, File toFile,                           boolean filtering, boolean overwrite)", "signatureAfterChange": "     private void copyFile(File fromFile, File toFile, boolean filtering, boolean overwrite)", "diff": ["-    private void copyFile(File fromFile, File toFile,", "-                          boolean filtering, boolean overwrite) {", "+    private void copyFile(File fromFile, File toFile, boolean filtering, boolean overwrite) {", "-            log(\"Copying \" + fromFile + \" to \" + toFile,", "-                verbosity);", "+            log(\"Copying \" + fromFile + \" to \" + toFile, verbosity);", "-            FilterSetCollection executionFilters =", "-                new FilterSetCollection();", "+            FilterSetCollection executionFilters = new FilterSetCollection();", "-                executionFilters", "-                    .addFilterSet(getProject().getGlobalFilterSet());", "+                executionFilters.addFilterSet(getProject().getGlobalFilterSet());", "-            for (Enumeration filterEnum =", "-                    getFilterSets().elements();", "-                filterEnum.hasMoreElements();) {", "-                executionFilters", "-                    .addFilterSet((FilterSet) filterEnum", "-                                .nextElement());", "+            for (Iterator filterIter = getFilterSets().iterator(); filterIter.hasNext();) {", "+                executionFilters.addFilterSet((FilterSet) filterIter.next());", "-", "-", "-                + \" to \" + toFile", "-                + \" due to \" + ioe.getMessage();", "+                    + \" to \" + toFile + \" due to \" + ioe.getMessage();"]}]}