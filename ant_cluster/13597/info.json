{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd1c203cdf61b0f768496f1fc299629a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5c23b2038dc7d4293112bec74d446e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "4685433622c906533e1676ee82bde3a17d817a95", "commitAfterChange": "ae030e51f42c55320ca562382941a157988b2b63", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected String getJarBaseName(String descriptorFileName)", "signatureAfterChange": "     protected String getJarBaseName(String descriptorFileName)", "diff": ["-\t */", "-\tprotected String getJarBaseName(String descriptorFileName) {", "+     */", "+    protected String getJarBaseName(String descriptorFileName) {", "-\t\tString baseName = \"\";", "+        String baseName = \"\";", "-\t\t// Work out what the base name is", "-\t\tif (config.baseJarName != null) {", "-\t\t\tbaseName = config.baseJarName;", "-\t\t} else {", "-\t\t\tint lastSeparatorIndex = descriptorFileName.lastIndexOf(File.separator);", "-\t\t\tint endBaseName = -1;", "-\t\t\tif (lastSeparatorIndex != -1) {", "-\t\t\t\tendBaseName = descriptorFileName.indexOf(config.baseNameTerminator, ", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlastSeparatorIndex);", "-\t\t\t} else {", "-\t\t\t\tendBaseName = descriptorFileName.indexOf(config.baseNameTerminator);", "-\t\t\t}", "+        // Work out what the base name is", "+        if (config.baseJarName != null) {", "+            String canonicalDescriptor = descriptorFileName.replace('\\\\', '/');", "+            int index = canonicalDescriptor.lastIndexOf('/');", "+            if (index != -1) {", "+                baseName = descriptorFileName.substring(0, index + 1);", "+            }", "+            baseName += config.baseJarName;", "+        } else {", "+            int lastSeparatorIndex = descriptorFileName.lastIndexOf(File.separator);", "+            int endBaseName = -1;", "+            if (lastSeparatorIndex != -1) {", "+                endBaseName = descriptorFileName.indexOf(config.baseNameTerminator, ", "+                                                            lastSeparatorIndex);", "+            } else {", "+                endBaseName = descriptorFileName.indexOf(config.baseNameTerminator);", "+            }", "-\t\t\tif (endBaseName != -1) {", "-\t\t\t\tbaseName = descriptorFileName.substring(0, endBaseName);", "-\t\t\t}", "-\t\t\tbaseName = descriptorFileName.substring(0, endBaseName);", "-\t\t}", "+            if (endBaseName != -1) {", "+                baseName = descriptorFileName.substring(0, endBaseName);", "+            }", "+            baseName = descriptorFileName.substring(0, endBaseName);", "+        }", "-\t\treturn baseName;", "-\t}", "+        return baseName;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c78c48a21c3b4c48f000bbd1ab44e68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "a7988a63f686fa0249f1ccac7d66f461d182f455", "commitAfterChange": "17fbe62a7d3180404fa527bcc568678870edb7e2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "          public void processDescriptor(File srcDir, File descriptorDir,                                   String descriptorFilename, SAXParser saxParser)", "signatureAfterChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "diff": ["-    public void processDescriptor(File srcDir, File descriptorDir,", "-                                  String descriptorFilename, SAXParser saxParser) {", "+    public void processDescriptor(String descriptorFileName, SAXParser saxParser) {", "-                             (new File(descriptorDir, descriptorFilename))),", "+                            (new File(getDescriptorDir(), descriptorFileName))),", "-            int lastSeparatorIndex = descriptorFilename.lastIndexOf(File.separator);", "-            int endBaseName = -1;", "-            if (lastSeparatorIndex != -1) {", "-                endBaseName = descriptorFilename.indexOf(basenameTerminator, ", "-                                                         lastSeparatorIndex);", "-            }", "-            else {", "-                endBaseName = descriptorFilename.indexOf(basenameTerminator);", "-            }", "-            ", "-            if (endBaseName != -1) {", "-                baseName = descriptorFilename.substring(0, endBaseName);", "+            if (baseJarName != null) {", "+                baseName = baseJarName;", "+            } else {", "+                int lastSeparatorIndex = descriptorFileName.lastIndexOf(File.separator);", "+                int endBaseName = -1;", "+                if (lastSeparatorIndex != -1) {", "+                    endBaseName = descriptorFileName.indexOf(baseNameTerminator, ", "+                                                             lastSeparatorIndex);", "+                }", "+                else {", "+                    endBaseName = descriptorFileName.indexOf(baseNameTerminator);", "+                }", "+", "+                if (endBaseName != -1) {", "+                    baseName = descriptorFileName.substring(0, endBaseName);", "+                }", "+                baseName = descriptorFileName.substring(0, endBaseName);", "-                         new File(descriptorDir, descriptorFilename));", "+                         new File(getDescriptorDir(), descriptorFileName));", "-            addVendorFiles(ejbFiles, srcDir, descriptorDir, baseName);", "+            addVendorFiles(ejbFiles, baseName);", "-                + descriptorFilename.toString()", "+                + descriptorFileName.toString()", "-                + descriptorFilename.toString()", "+                + descriptorFileName.toString()"]}]}