{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14b5988b0e2a2ceac116875be39b0be1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4319a79e32cddd79a419aab1f1f4bd6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Counter.java", "commitBeforeChange": "4e4e5054b4660bce6d1929c67d07a27ddb47d17d", "commitAfterChange": "405db5ebc65b2d89985d03b4882ca6c6c18b8375", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "-        String command = \"-s counter \" + P4CmdOpts + \" \" + counter;", "+        if(shouldSetValue && shouldSetProperty) {", "+            throw new BuildException(\"Cannot both set the value of the property and retrieve the value of the property.\");", "+        }", "+", "+        String command = \"counter \" + P4CmdOpts + \" \" + counter;", "+        if(!shouldSetProperty) {", "+            // NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you", "+            // have to start running through regular expressions here. Much easier", "+            // to just not include the scripting information than to try to add it", "+            // and strip it later.", "+            command = \"-s \" + command;", "+        }", "-        execP4Command(command, new SimpleP4OutputHandler(this));", "+        if(shouldSetProperty) {", "+            final Project myProj = project;", "+", "+            P4Handler handler = new P4HandlerAdapter() {", "+                public void process(String line) {", "+                    log(\"P4Counter retrieved line \\\"\"+ line + \"\\\"\", Project.MSG_VERBOSE);", "+                    try {", "+                        value = Integer.parseInt(line);", "+                        myProj.setProperty(property, \"\"+value);", "+                    } catch (NumberFormatException nfe) {", "+                        throw new BuildException(\"Perforce error. Could not retrieve counter value.\");", "+                    }", "+                }", "+            };", "+", "+            execP4Command(command, handler);", "+        } else {", "+            execP4Command(command, new SimpleP4OutputHandler(this));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8108bcf55f49f6ed278dbf21419d3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "58cde0d26ddac7ad67880de2131fb9b90548fbe8", "commitAfterChange": "084609e5ef285ee28ab65f11f0ec423a1526f1d6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "diff": ["+        // EnumeratedAttributes have their own helper class", "+        } else if (org.apache.tools.ant.EnumeratedAttribute.class.isAssignableFrom(arg)) {", "+            return new AttributeSetter() {", "+                    public void set(Project p, Object parent, String value) ", "+                        throws InvocationTargetException, IllegalAccessException, BuildException {", "+                        try {", "+                            EnumeratedAttribute ea = ", "+                                (EnumeratedAttribute)arg.newInstance();", "+                            ea.setValue(value);", "+                            m.invoke(parent, new EnumeratedAttribute[] {ea});", "+                        } catch (InstantiationException ie) {", "+                            throw new BuildException(ie);", "+                        }", "+                    }", "+                };", "+        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97117026fda7a0dc49160737ab59d54a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "4d082edbbdb380b7d718db1bf4322dcdc3f49281", "commitAfterChange": "f40249fb493adae86ba37ff25192164188f6eb32", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "diff": ["+        } else if (reflectedArg.getSuperclass() != null && reflectedArg.getSuperclass().getName().equals(\"java.lang.Enum\")) {", "+            return new AttributeSetter(m) {", "+                public void set(Project p, Object parent, String value)", "+                        throws InvocationTargetException, IllegalAccessException, BuildException {", "+                    try {", "+                        m.invoke(parent, new Object[] {", "+                            reflectedArg.getMethod(\"valueOf\", new Class[] {String.class}).", "+                                    invoke(null, new Object[] {value})});", "+                    } catch (InvocationTargetException x) {", "+                        if (x.getTargetException() instanceof IllegalArgumentException) {", "+                            throw new BuildException(\"'\" + value + \"' is not a permitted value for \" + reflectedArg.getName());", "+                        } else {", "+                            throw new BuildException(x.getTargetException());", "+                        }", "+                    } catch (Exception x) {", "+                        throw new BuildException(x);", "+                    }", "+                }", "+            };"]}]}