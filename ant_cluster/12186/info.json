{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d2b9c7fe4d6c5973b7b8164643cb2b6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0569ffecc8c85138dfe4fbe655f70974", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "dd59f330e28468c67b69a1d4e352f4e5bafcb27f", "commitAfterChange": "a5a1cf23953be08f91c28840a830e295eb7b171c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     protected void validateAttributes() throws BuildException", "diff": ["-     */", "-    public void execute() throws BuildException {", "+    // inherit doc", "+    protected void validateAttributes() throws BuildException {", "-            if (destFile != null && destDir != null) {", "-                throw new BuildException(\"Only one of tofile and todir \"", "-                                         + \"may be set.\");", "+            if ((destFile != null && destDir != null)", "+                || (destFile == null && destDir == null)){", "+                throw new BuildException(\"One and only one of tofile and todir \"", "+                                         + \"must be set.\");", "+            destFile = (destFile == null)", "+                ? new File(destDir, file.getName()) : destFile;", "+            destDir = (destDir == null)", "+                ? fileUtils.getParentFile(destFile) : destDir;", "-            if (destFile == null && destDir == null) {", "-                throw new BuildException(\"One of tofile or todir must be set.\");", "-            }", "-", "-            destFile = (destFile != null)", "-                ? destFile : new File(destDir, file.getName());", "-", "-            try {", "-                boolean renamed = false;", "-                log(\"Moving directory \" + file", "-                    + \" to \" + destFile, Project.MSG_INFO);", "-                try {", "-                    renamed =", "-                        renameFile(file, destFile, filtering, forceOverwrite);", "-                } catch (IOException eyeOhEx) {", "-                    throw new BuildException(eyeOhEx.getMessage());", "-                }", "-                if (!renamed) {", "-                    StringBuffer buf = new StringBuffer(", "-                        \"Failed to move directory \").append(", "-                        file.getAbsolutePath());", "-", "-                    if ((getFilterChains() != null && getFilterChains().size() > 0)", "-                        || (getFilterSets() != null && getFilterSets().size() > 0)", "-                        || filtering) {", "-                        buf.append(", "-                            \"; use a fileset to move directories with filtering\");", "-                    }", "-                    throw new BuildException(buf.append('.').toString());", "-                }", "-            } catch (BuildException e) {", "-                if (!failonerror) {", "-                    log(\"Warning: \" + e.getMessage(), Project.MSG_ERR);", "-                } else {", "-                    throw e;", "-                }", "-            }", "+            completeDirMap.put(file, destFile);", "+            file = null;", "-            super.execute();", "+            super.validateAttributes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d77067e3b164b413eb428e0de9b422b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "224e2140ef1be18480aa565dc462ba34b09d65d1", "commitAfterChange": "861a4490644853d4b9bff9b0d0b871d7e88b0784", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-        if (srcFile == null && resource == null) {", "-            throw new BuildException(", "-                \"One of \\\"srcfile\\\" or \\\"resource\\\" is required.\");", "+        if (src == null) {", "+            throw new BuildException(\"A source resource is required.\");", "+        }", "+        if (!src.isExists()) {", "+            if (src instanceof JavaResource) {", "+                // dreaded backwards compatibility", "+                log(\"Unable to find resource \" + src, Project.MSG_WARN);", "+                return;", "+            }", "+            throw new BuildException(\"Source resource does not exist: \" + src);", "-", "-        if (srcFile != null) {", "-            if (!srcFile.exists()) {", "-                throw new BuildException(\"Source file does not exist :\"+srcFile);", "-            }", "-", "-            if (!srcFile.isFile()) {", "-                throw new BuildException(\"Source file is not a file :\"+srcFile);", "-            }", "-", "-            try {", "-                bis = new BufferedInputStream(new FileInputStream(srcFile));", "-            } catch (IOException eyeOhEx) {", "-                throw new BuildException(eyeOhEx);", "-            }", "-        } else {", "-            ClassLoader cL = (classpath != null)", "-                ? getProject().createClassLoader(classpath)", "-                : LoadProperties.class.getClassLoader();", "-", "-            InputStream is = (cL == null)", "-                ? ClassLoader.getSystemResourceAsStream(resource)", "-                : cL.getResourceAsStream(resource);", "-", "-            if (is != null) {", "-                bis = new BufferedInputStream(is);", "-            } else { // do it like Property", "-                log(\"Unable to find resource \" + resource, Project.MSG_WARN);", "-                return;", "-            }", "-        }", "-", "+            bis = new BufferedInputStream(src.getInputStream());", "-        } catch (final BuildException be) {", "-            throw be;", "-            try {", "-                if (bis != null) {", "-                    bis.close();", "-                }", "-            } catch (IOException ioex) {", "-                //ignore", "-            }", "-            try {", "-                if (tis != null) {", "-                    tis.close();", "-                }", "-            } catch (IOException ioex) {", "-                //ignore", "-            }", "+            FileUtils.close(bis);", "+            FileUtils.close(tis);"]}]}