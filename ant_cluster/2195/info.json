{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72ed6b27d5cad8fcf11a47f726170b5b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0011706f15068cb26efce0b906a74e2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DateSelector.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["+                }", "+                else if (GRANULARITY_KEY.equalsIgnoreCase(paramname)) {", "+                    try {", "+                        setGranularity(new Integer(parameters[i].getValue()", "+                                ).intValue());", "+                    } catch (NumberFormatException nfe) {", "+                        setError(\"Invalid granularity setting \" +", "+                            parameters[i].getValue());", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b08a8c20a0d46faadbe417193089b4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "1beb540cd6584dc7246fecda16a0d10bd6ff6f3a", "commitAfterChange": "d4ebf04094c0866a1d3608f45a3ca80d46ad2702", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-                } catch (BuildException be) {", "+                } catch (UnsupportedAttributeException be) {", "-                    if (!name.equals(\"id\")) {", "+                    if (name.equals(\"id\")) {", "+                        // Do nothing", "+                    } else  if (getElementTag() == null) {", "+                        throw be;", "+                    } else {", "+                        be.setMessage(", "+                            getElementTag()", "+                            +  \" doesn't support the \\\"\"", "+                            + be.getAttribute()", "+                            + \"\\\" attribute\");", "+                        throw be;", "+                    }", "+                } catch (BuildException be) {", "+                    if (name.equals(\"id\")) {", "+                        // Assume that this is an not supported attribute type", "+                        // thrown for example by a dymanic attribute task", "+                        // Do nothing", "+                    } else {"]}]}