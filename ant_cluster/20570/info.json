{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf6603eb05c0bf8ce835b82a1b0e456a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c680074e8f08afc82ebbb10db386a37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "8a7fce7e2e6db1d736542cfb5a117223fc3b8f14", "commitAfterChange": "e503ebd4c7a3603efb6119fec72b3bbe3e9a4f58", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private boolean checkFile()", "signatureAfterChange": "      private boolean checkFile()", "diff": ["-                /* ", "+                /*", "-                    } else if (type.equalsIgnoreCase(\"dir\") ", "+                    } else if (type.isDir()", "-                    } else if (type.equalsIgnoreCase(\"file\") ", "+                    } else if (type.isFile()", "-                ", "+", "-                if (parent != null && parent.exists() ", "+                if (parent != null && parent.exists()", "-                    } else if (type.equalsIgnoreCase(\"dir\")) {", "+                    } else if (type.isDir()) {", "-                    if (checkFile(new File(path, file), ", "+                    if (checkFile(new File(path, file),", "-                ", "+", "-                    if (checkFile(new File(parent, file), ", "+                    if (checkFile(new File(parent, file),", "-                ", "+", "-                        if (checkFile(new File(grandParent, file), ", "+                        if (checkFile(new File(grandParent, file),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff785b4ba5f86a69ff40484258799b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "ba37bf7991e099b567f8cd5a09178893ff55bb9c", "commitAfterChange": "784d54ca4803b0c8fcb6cd4753cc56f0822a1643", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public File getSource()", "signatureAfterChange": "         public File getSource()", "diff": ["-            return this.file;", "+            File nofile = null ;", "+            // Check if source is a directory", "+            if( source.exists() ) {", "+                if( source.isDirectory() ) {", "+                    // get the list of files in the dir", "+                    File[] files = source.listFiles() ; ", "+                    int numfiles = files.length ;", "+                    // get a random number between 0 and the number of files", "+                    Random rn = new Random() ;", "+                    int i = rn.nextInt(numfiles) ;", "+                    // set the source to the file at that location", "+                    this.source = files[i] ;", "+                }", "+            } else {", "+                log(source + \": invalid path.\", Project.MSG_WARN) ;", "+                this.source = nofile ;", "+            }", "+            return this.source ;"]}]}