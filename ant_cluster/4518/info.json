{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09a3978905517a2318f8c5fe7f5d8b61", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44da201dbd6fa7cd3dbf090c493dd0d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "8b2d7026b2216c6a9200d22a9adfa6ad12b1762e", "commitAfterChange": "982db474ca24f7c65bcc07ab553f100b4f39b3e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                String[] s = ds.getIncludedFiles();", "-                for (int j=0; j<s.length; j++) {", "-                    v.addElement(new File(fs.getDir(), s[j]).getAbsolutePath());", "+                if (!\"dir\".equals(type)) {", "+                    String[] s = ds.getIncludedFiles();", "+                    for (int j=0; j<s.length; j++) {", "+                        v.addElement(new File(fs.getDir(), s[j]).getAbsolutePath());", "+                    }", "+                }", "+", "+                if (!\"file\".equals(type)) {", "+                    String[] s = ds.getIncludedDirectories();", "+                    for (int j=0; j<s.length; j++) {", "+                        v.addElement(new File(fs.getDir(), s[j]).getAbsolutePath());", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf740ce43a05799aed69686d26f517c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setImplementationVendorID( final String implementationVendorID )", "signatureAfterChange": "     private void extractLibraryData( final ArrayList librarys,                                      final ArrayList fileset )         throws TaskException", "diff": ["-     */", "-    public void setImplementationVendorID( final String implementationVendorID )", "-    {", "-        m_implementationVendorID = implementationVendorID;", "-    }", "+     */", "+    private void extractLibraryData( final ArrayList librarys,", "+                                     final ArrayList fileset )", "+        throws TaskException", "+    {", "+        if( !fileset.isEmpty() )", "+        {", "+            final Extension[] extensions = getExtensions( fileset );", "+            for( int i = 0; i < extensions.length; i++ )", "+            {", "+                librarys.add( extensions[ i ] );", "+            }", "+        }", "+    }"]}]}