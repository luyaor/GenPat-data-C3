{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "063acba081cebd5cf8a41b74e4495b54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1040e225a735797b1b3b9ae9aaa8f8a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "fd287b3a808daed93021646efdcf52a31957e35a", "commitAfterChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(String[] args)", "signatureAfterChange": "      public static void main(String[] args)", "diff": ["-            } else if (arg.equals(\"-buildfile\") || arg.equals(\"-file\") || arg.equals(\"-f\")) {", "+            } else if (arg.equals(\"-logfile\") || arg.equals(\"-l\") || arg.equals(\"l\")) {", "+                try {", "+                    File logFile = new File(args[i+1]);", "+                    i++;", "+                    out = new PrintStream(new FileOutputStream(logFile));", "+                    System.setOut(out);", "+                    System.setErr(out);", "+                } catch (IOException ioe) {", "+                    String msg = \"Cannot write on the specified log file. \" +", "+                        \"Make sure the path exists and you have write permissions.\";", "+                    System.out.println(msg);", "+                    return;", "+                } catch (ArrayIndexOutOfBoundsException aioobe) {", "+                    String msg = \"You must specify a log file when \" +", "+                        \"using the -log argument\";", "+                    System.out.println(msg);", "+                    return;", "+                }", "+            } else if (arg.equals(\"-buildfile\") || arg.equals(\"-file\") || arg.equals(\"-f\") || arg.equals(\"f\")) {", "+        ", "+        return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164a63c8605dd98bb473bfbe82c35cba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/model/BuildElement.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAspects(Map aspects)", "signatureAfterChange": "     public void setAspects(Map aspects)", "diff": ["-        this.aspects = aspects;", "+        aspectMaps = new HashMap();", "+        for (Iterator i = aspects.keySet().iterator(); i.hasNext(); ) {", "+            String aspectName = (String)i.next();", "+            int separator = aspectName.indexOf(\":\");", "+            if (separator != -1) {", "+                String prefix = aspectName.substring(0, separator);", "+                String name = aspectName.substring(separator + 1);", "+                if (prefix.length() != 0 && name.length() != 0) {", "+                    Map prefixMap = (Map)aspectMaps.get(prefix);", "+                    if (prefixMap == null) {", "+                        prefixMap = new HashMap();", "+                        aspectMaps.put(prefix, prefixMap);", "+                    }", "+                    prefixMap.put(name, aspects.get(aspectName));", "+                }", "+            }", "+        }", "+    }"]}]}