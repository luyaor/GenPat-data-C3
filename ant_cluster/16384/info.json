{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d6a44c13a2747f499ab4f2be87045f0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1509eaf54041332acac12c80b7f8b16e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "      private void iterateOverBaseDirs(         HashSet baseDirs, HashMap dirsByBasedir, HashMap filesByBasedir)", "signatureAfterChange": "      private void iterateOverBaseDirs(         HashSet<File> baseDirs, HashMap<File, List<String>> dirsByBasedir, HashMap<File, List<String>> filesByBasedir)", "diff": ["-        HashSet baseDirs, HashMap dirsByBasedir, HashMap filesByBasedir) {", "+        HashSet<File> baseDirs, HashMap<File, List<String>> dirsByBasedir, HashMap<File, List<String>> filesByBasedir) {", "-        Iterator iter = baseDirs.iterator();", "-        while (iter.hasNext()) {", "-            File f = (File) iter.next();", "-            List files = (List) filesByBasedir.get(f);", "-            List dirs = (List) dirsByBasedir.get(f);", "+        for (File f : baseDirs) {", "+            List<String> files = filesByBasedir.get(f);", "+            List<String> dirs = dirsByBasedir.get(f);", "-                srcFiles = (String[]) files.toArray(srcFiles);", "+                srcFiles = files.toArray(srcFiles);", "-                srcDirs = (String[]) dirs.toArray(srcDirs);", "+                srcDirs = dirs.toArray(srcDirs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0722b38609ebe633093da981d4bbbe0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static void printTargets(Project project, boolean printSubTargets,             boolean printDependencies)", "signatureAfterChange": "     private static void printTargets(Project project, boolean printSubTargets,             boolean printDependencies)", "diff": ["-        Map ptargets = removeDuplicateTargets(project.getTargets());", "-        String targetName;", "-        String targetDescription;", "-        Target currentTarget;", "+        Map<String, Target> ptargets = removeDuplicateTargets(project.getTargets());", "-        Vector topNames = new Vector();", "-        Vector topDescriptions = new Vector();", "-        Vector/*<Enumeration<String>>*/ topDependencies = new Vector();", "-        Vector subNames = new Vector();", "-        Vector/*<Enumeration<String>>*/ subDependencies = new Vector();", "+        Vector<String> topNames = new Vector<String>();", "+        Vector<String> topDescriptions = new Vector<String>();", "+        Vector<Enumeration<String>> topDependencies = new Vector<Enumeration<String>>();", "+        Vector<String> subNames = new Vector<String>();", "+        Vector<Enumeration<String>> subDependencies = new Vector<Enumeration<String>>();", "-        for (Iterator i = ptargets.values().iterator(); i.hasNext();) {", "-            currentTarget = (Target) i.next();", "-            targetName = currentTarget.getName();", "+        for (Target currentTarget : ptargets.values()) {", "+            String targetName = currentTarget.getName();", "-            targetDescription = currentTarget.getDescription();", "+            String targetDescription = currentTarget.getDescription();"]}]}