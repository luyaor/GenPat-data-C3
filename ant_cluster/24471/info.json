{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8821985c8f79911e12cfebdfacb597f5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7200a508754e9ca25d8639e76443f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "e7ab62bc9179b392804835d02155e43d3d2cf5d6", "commitAfterChange": "2e6e170fb375181f4438e1de44808c7adab508a2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Parameters createDefaultParameters()", "signatureAfterChange": "     private Parameters createDefaultParameters()", "diff": ["-        //create all the default properties for components", "-        final String PREFIX = \"org.apache.myrmidon.components.\";", "-        defaults.setParameter( AspectManager.ROLE, PREFIX + \"aspect.DefaultAspectManager\" );", "-        defaults.setParameter( RoleManager.ROLE, PREFIX + \"role.DefaultRoleManager\" );", "-        defaults.setParameter( MasterConverter.ROLE, PREFIX + \"converter.DefaultMasterConverter\" );", "-        defaults.setParameter( ConverterRegistry.ROLE, PREFIX + \"converter.DefaultConverterRegistry\" );", "-        defaults.setParameter( TypeManager.ROLE, PREFIX + \"type.DefaultTypeManager\" );", "-        defaults.setParameter( Executor.ROLE,", "-                               //\"org.apache.myrmidon.components.executor.DefaultExecutor\" );", "-                               //\"org.apache.myrmidon.components.executor.PrintingExecutor\" );", "-                               PREFIX + \"executor.AspectAwareExecutor\" );", "+        // Default workspace implementation", "-        defaults.setParameter( Deployer.ROLE, PREFIX + \"deployer.DefaultDeployer\" );", "-        defaults.setParameter( Configurer.ROLE, PREFIX + \"configurer.DefaultConfigurer\" );", "-        defaults.setParameter( ExtensionManager.ROLE, PREFIX + \"extensions.DefaultExtensionManager\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b95178f294bde5665794095acefce3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "adf98d78765bc14b495dc4df690f4eefd3314243", "commitAfterChange": "73b9def757a69fe06f56af93a66f750d31dbf8cd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-        savedErr.println(\"Running test \" + junitTest.getName() + \" with {loader: \" + loader + \", methods: \" + methods + \"}\");", "-", "-                    savedErr.println(\"found suite method\");", "-                    savedErr.println(\"didn't find suite method\");", "-                        savedErr.println(\"this is a JUnit3 test\");", "-                        savedErr.println(\"trying to load java.lang.annotation.Annotation\");", "-                        savedErr.println(\"found\");", "-                        savedErr.println(\"trying to load org.apache.tools.ant.taskdefs.optional.junit.CustomJUnit4TestAdapterCache\");", "-                        savedErr.println(\"found\");", "-                            savedErr.println(\"trying to load \" + JUNIT_4_TEST_ADAPTER);", "-                            savedErr.println(\"found\");", "-                                savedErr.println(\"trying to load org.apache.tools.ant.taskdefs.optional.junit.JUnit4TestMethodAdapter\");", "-                                savedErr.println(\"found\");", "-                            savedErr.println(\"trying to load \" + JUNIT_4_TEST_ADAPTER);", "-                            savedErr.println(\"found\");", "-                                savedErr.println(\"trying to load org.apache.tools.ant.taskdefs.optional.junit.JUnit4TestMethodAdapter\");", "-                                savedErr.println(\"found\");", "-                        savedErr.println(\"NOT found\");", "-                        savedErr.println(\"using JUnit4\");", "-                        savedErr.println(\"using JUnit3\");"]}]}