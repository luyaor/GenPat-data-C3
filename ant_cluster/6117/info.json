{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c68a21068a7d78b80a666a86b55fd04", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9cab78c39b8d912ffba64eaabc400ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "0c132498a8026db624c2fcf7026538c52e47b312", "commitAfterChange": "4004834c04e0eec8f0f698435b0c5983751fb593", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "     private boolean isSymlink(File base, Vector pathElements)", "signatureAfterChange": "     private boolean isSymlink(File base, Vector pathElements)", "diff": ["-                if (FILE_UTILS.isSymbolicLink(base, current)) {", "-                    return true;", "-                } else {", "-                    base = new File(base, current);", "-                    return isSymlink(base, pathElements);", "-                }", "+                return FILE_UTILS.isSymbolicLink(base, current)", "+                    || isSymlink(new File(base, current), pathElements);", "-                return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f7ca1f0e69c80405a1503511a43841", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "579a1f76bd6eff87405967c4fe523ffe4d9342bb", "commitAfterChange": "803fb00df9e066be53b6bca73efea6fe0d8a83ba", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public String evaluate()", "signatureAfterChange": "         public String evaluate()", "diff": ["-            if(file!=null) {", "-                return file.toString();", "-            } else {", "+            if(url!=null) {", "+            if(makeURL) {", "+                try {", "+                    return file.toURL().toExternalForm();", "+                } catch (MalformedURLException e) {", "+                    throw new BuildException(ERROR_NO_URL_CONVERT+file);", "+                }", "+            }", "+            return file.toString();"]}]}