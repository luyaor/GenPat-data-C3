{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59821dab10e14e0dca81148f8cf74c4c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10dc257cf7ce9d6d640efcba52d8097a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "          private URLConnection openConnection(URL aSource) throws IOException", "signatureAfterChange": "          private URLConnection openConnection(final URL aSource) throws IOException", "diff": ["-        private URLConnection openConnection(URL aSource) throws IOException {", "+        private URLConnection openConnection(final URL aSource) throws IOException {", "-            URLConnection connection = aSource.openConnection();", "+            final URLConnection connection = aSource.openConnection();", "-                String up = uname + \":\" + pword;", "+                final String up = uname + \":\" + pword;", "-                Base64Converter encoder = new Base64Converter();", "+                final Base64Converter encoder = new Base64Converter();", "-            } catch (NullPointerException e) {", "+            } catch (final NullPointerException e) {", "-                HttpURLConnection httpConnection = (HttpURLConnection) connection;", "-                int responseCode = httpConnection.getResponseCode();", "+                final HttpURLConnection httpConnection = (HttpURLConnection) connection;", "+                final int responseCode = httpConnection.getResponseCode();", "-                    String newLocation = httpConnection.getHeaderField(\"Location\");", "-                    String message = aSource", "+                    final String newLocation = httpConnection.getHeaderField(\"Location\");", "+                    final String message = aSource", "-                    URL newURL = new URL(aSource, newLocation);", "+                    final URL newURL = new URL(aSource, newLocation);", "-                long lastModified = httpConnection.getLastModified();", "+                final long lastModified = httpConnection.getLastModified();", "-                    String message = \"HTTP Authorization failure\";", "+                    final String message = \"HTTP Authorization failure\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11147bdea9aeb7309e5e26ab2f5e3b60", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/EventResponder.java", "commitBeforeChange": "18b63a1b1afc269c237e2bc05de803544e49ad45", "commitAfterChange": "8785091ee1c92874c44324f0429765539987b048", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public boolean eventPosted(EventObject event)", "signatureAfterChange": "         public boolean eventPosted(EventObject event)", "diff": ["-            // XXX turn this switch structure into a command", "-            // lookup using an initialized hash table.", "-            if(command.equals(OpenCmd.ACTION_NAME)) {", "-                new OpenCmd(_context).execute();", "-            }", "-            else if(command.equals(SaveCmd.ACTION_NAME)) {", "-                new SaveCmd(_context).execute();", "-            }", "-            else if(command.equals(SaveAsCmd.ACTION_NAME)) {", "-                new SaveAsCmd(_context).execute();", "-            }", "-            else if(command.equals(BuildCmd.ACTION_NAME)) {", "-                new BuildCmd(_context).execute();", "-            }", "-            else if(command.equals(CloseCmd.ACTION_NAME)) {", "-                new CloseCmd(_context).execute();", "-            }", "-            else if(command.equals(ExitCmd.ACTION_NAME)) {", "-                new ExitCmd(_context).execute();", "-            }", "-            else if(command.equals(AboutCmd.ACTION_NAME)) {", "-                new AboutCmd(_context).execute();", "-            }", "-            else if(command.equals(ChangeLookAndFeelCmd.ACTION_NAME)) {", "-                new ChangeLookAndFeelCmd(_context).execute();", "-            }", "-            else if(command.equals(ChangeLookAndFeelCmd.ACTION_NAME)) {", "-                new ChangeLookAndFeelCmd(_context).execute();", "-            }", "-            else if(command.equals(EmacsNotifyCmd.ACTION_NAME)) {", "-                AbstractButton source = (AbstractButton) event.getSource();", "-                new EmacsNotifyCmd(_context, source.isSelected()).execute();", "+            Command cmd = ", "+                _context.getActions().getActionCommand(command, _context);", "+            if(cmd != null) {", "+                cmd.run();", "+                return false;", "+                return true;", "-            return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c01955c562cab7898fc683a56de48a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "commitAfterChange": "c09d386575d236bd32d3d4ce78f716e90b5bbdfa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void initializeProject()", "signatureAfterChange": "     private void initializeProject()", "diff": ["-        // set user-defined or all properties from calling project", "-        Hashtable prop1;", "-        if (inheritAll) {", "-           prop1 = project.getProperties();", "-        } else {", "-           prop1 = project.getUserProperties();", "+        // set user-defined", "+        Hashtable props = getProject().getUserProperties();", "+        e = props.keys();", "+        while (e.hasMoreElements()) {", "+            String arg = e.nextElement().toString();", "+            String value = props.get(arg).toString();", "+            newProject.setUserProperty(arg, value);", "+        }", "+        if (!inheritAll) {", "-        }", "-        e = prop1.keys();", "-        while (e.hasMoreElements()) {", "-            String arg = (String) e.nextElement();", "-            if (\"basedir\".equals(arg) || \"ant.file\".equals(arg)) {", "-                // basedir and ant.file get special treatment in execute()", "-                continue;", "-            }", "+        } else {", "+            // set all properties from calling project", "-            String value = (String) prop1.get(arg);", "-            if (inheritAll){", "-               newProject.setProperty(arg, value);", "-            } else {", "-               newProject.setUserProperty(arg, value);", "+            props = getProject().getProperties();", "+            e = props.keys();", "+            while (e.hasMoreElements()) {", "+                String arg = e.nextElement().toString();", "+                if (\"basedir\".equals(arg) || \"ant.file\".equals(arg)) {", "+                    // basedir and ant.file get special treatment in execute()", "+                    continue;", "+                }", "+", "+                String value = props.get(arg).toString();", "+                if (newProject.getProperty(arg) == null){", "+                    // no user property", "+                    newProject.setProperty(arg, value);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3bd85f6074a8d64a112e693424d460", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "6309813d01620379a35da64c12c4de488efedc2d", "commitAfterChange": "4ab1950bd8ba0bf2335e09b07852d74e1b016f5a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public void merge(Manifest other) throws ManifestException", "signatureAfterChange": "     public void merge(Manifest other, boolean overwriteMain) throws ManifestException", "diff": ["-        if (other.manifestVersion != null) {", "-            manifestVersion = other.manifestVersion;", "-        }", "-        mainSection.merge(other.mainSection);", "-        for (Enumeration e = other.sections.keys(); e.hasMoreElements();) {", "-            String sectionName = (String)e.nextElement();", "-            Section ourSection = (Section)sections.get(sectionName);", "-            Section otherSection = (Section)other.sections.get(sectionName);", "-            if (ourSection == null) {", "-                sections.put(sectionName, otherSection);", "-            }", "-            else {", "-                ourSection.merge(otherSection);", "-            }", "-        }", "+     */", "+    public void merge(Manifest other, boolean overwriteMain) throws ManifestException {", "+        if (other != null) {", "+             if (overwriteMain) {", "+                 mainSection = other.mainSection;", "+             }", "+             else {", "+                 mainSection.merge(other.mainSection);", "+             }", "+", "+             if (other.manifestVersion != null) {", "+                 manifestVersion = other.manifestVersion;", "+             }", "+", "+             for (Enumeration e = other.sections.keys(); e.hasMoreElements();) {", "+                 String sectionName = (String)e.nextElement();", "+                 Section ourSection = (Section)sections.get(sectionName);", "+                 Section otherSection = (Section)other.sections.get(sectionName);", "+                 if (ourSection == null) {", "+                     if (otherSection != null) {", "+                         sections.put(sectionName.toLowerCase(), otherSection);", "+                     }", "+                 }", "+                 else {", "+                     ourSection.merge(otherSection);", "+                 }", "+             }", "+         }"]}]}