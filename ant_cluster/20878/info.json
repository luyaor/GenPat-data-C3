{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ee7ff5ba9a07365da9bc3f373d683f5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17684555dfe68875f22ded0835b2899c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public SOSTest(String s)", "signatureAfterChange": "      private void expectSpecificBuildException(String target, String errorMessage,                                               String exceptionMessage)", "diff": ["-     */", "-    public SOSTest(String s) {", "-        super(s);", "-    }", "+    private void expectSpecificBuildException(String target, String errorMessage,", "+                                              String exceptionMessage) {", "+        try {", "+            buildRule.executeTarget(target);", "+            fail(errorMessage);", "+        } catch(BuildException ex) {", "+            assertEquals(exceptionMessage, ex.getMessage());", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d889fb81700578f0c6b56cf97f3ff87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/vss/MSVSSTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public MSVSSTest(String s)", "signatureAfterChange": "      private void expectSpecificBuildException(String target, String failMessage,                                               String exceptionMessage)", "diff": ["-     */", "-    public MSVSSTest(String s) {", "-        super(s);", "-    }", "+    private void expectSpecificBuildException(String target, String failMessage,", "+                                              String exceptionMessage) {", "+        try {", "+            buildRule.executeTarget(target);", "+            fail(failMessage);", "+        } catch(BuildException ex) {", "+            assertEquals(exceptionMessage, ex.getMessage());", "+        }", "+    }"]}]}