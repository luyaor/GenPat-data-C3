{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e10001550599a36ff0cf4abb66a4879", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0011706f15068cb26efce0b906a74e2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DateSelector.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["+                }", "+                else if (GRANULARITY_KEY.equalsIgnoreCase(paramname)) {", "+                    try {", "+                        setGranularity(new Integer(parameters[i].getValue()", "+                                ).intValue());", "+                    } catch (NumberFormatException nfe) {", "+                        setError(\"Invalid granularity setting \" +", "+                            parameters[i].getValue());", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "699a30581419da55c5feea7ab1eadc87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "85b2032078e26060592eea72070684a6eaa06c24", "commitAfterChange": "2f8193c6bb8c26bf510dc54b68a001936a4a245a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws org.apache.tools.ant.BuildException", "signatureAfterChange": "     public void execute() throws org.apache.tools.ant.BuildException", "diff": ["-\t\t\tpvcsProject = \"/\";", "+            pvcsProject = \"/\";", "-                result = runCmd(commandLine, ", "-                                new PumpStreamHandler(fos, ", "+                result = runCmd(commandLine,", "+                                new PumpStreamHandler(fos,", "-            ", "+", "+", "+            if(getConfig() != null && getConfig().length()>0)", "+            {", "+                commandLine.createArgument().setValue(\"-c\" + getConfig());", "+            }"]}]}