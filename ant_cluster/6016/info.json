{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab5e1aadb02b1541f74c61b71917513d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31b1c69afe2a6223d7be8539e1674ac9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "727faae6253126291dd52a1103713681e925f96b", "commitAfterChange": "a41c55cd1af2ca412cb61ee6c81a7a93c9ab8a2d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"property attribute is required\", location);", "+            throw new BuildException(\"property attribute is required\", ", "+                                     location);", "-        if (eval()) {", "-            String lSep = System.getProperty(\"line.separator\");", "-            if (null != project.getProperty(property)) {", "-                log(\"DEPRECATED - <available> used to override an existing\"", "-                    + \" property.\"", "-                    + lSep", "-                    + \"  Build file should not reuse the same property name\"", "-                    + \" for different values.\");", "+        try {", "+            if (eval()) {", "+                if (null != getProject().getProperty(property)) {", "+                    log(\"DEPRECATED - <available> used to override an existing\"", "+                        + \" property.\"", "+                        + StringUtils.LINE_SEP", "+                        + \"  Build file should not reuse the same property\"", "+                        + \" name for different values.\");", "+                }", "+                getProject().setProperty(property, value);", "-            this.project.setProperty(property, value);", "+        } finally {", "+            isTask = false;", "-        isTask = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41d61a4f7273cbabbc39c3712a61b47b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "90c544be23e3159cea808f7c46b8a7f2474ad423", "commitAfterChange": "b52e2b425fc95067ec874e987167114384bca726", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setProperty( final String name, final Object value, final ScopeEnum scope )         throws TaskException", "signatureAfterChange": "     public void setProperty( final String name, final Object value, final ScopeEnum scope )         throws TaskException", "diff": ["-            put( name, value );", "+            m_contextData.put( name, value );", "-            if( null == getParent() )", "+            if( null == m_parent )", "-                ( (TaskContext)getParent() ).setProperty( name, value );", "+                m_parent.setProperty( name, value );", "-            while( null != context.getParent() )", "+            while( null != context.m_parent )", "-                context = (DefaultTaskContext)context.getParent();", "+                context = (DefaultTaskContext)context.m_parent;", "-            context.put( name, value );", "+            context.m_contextData.put( name, value );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e15478596c648b96c5ff438a1c9e8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Task.java", "commitBeforeChange": "3c26912e56e06ac64c392444cb19e3587f1bbb11", "commitAfterChange": "ba22b3de5a2c195cc893e6455dbd88940f7547ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setAttribute( String name, Object v)", "signatureAfterChange": "     public void setAttribute(String name, Object value)", "diff": ["-    public void setAttribute( String name, Object v) {", "-\tif(\"target\".equals( name ) ) {", "-\t    Target t=(Target)v;", "-\t    target=t;", "-\t    project=t.getProject();", "-\t    return;", "-\t}", "-\t// \tSystem.out.println(\"Set Att \" +name + \" = \" + v );", "-\t// \tif( v!=null) System.out.println(v.getClass());", "-    }", "+     */", "+    public void setAttribute(String name, Object value) {", "+        if (name.equals(\"target\")) {", "+            this.target = (Target) value;", "+            this.project = this.target.getProject();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b484ee2bf58b753e02ad74146395eb44", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Retry.java", "commitBeforeChange": "92e4570d86dd1aa4c82b37a737ffda61e7089415", "commitAfterChange": "487cc320dcdff2efb0b596ac40a5cb894a7dad98", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r     public void execute() throws BuildException", "signatureAfterChange": "\r     public void execute() throws BuildException", "diff": ["-        String br = getProject().getProperty(\"line.separator\");\r", "-                    exceptionMessage.append(\"] attempts; giving up.\").append(br);\r", "-                    exceptionMessage.append(\"Error messages:\").append(br);\r", "+                    exceptionMessage.append(\"] attempts; giving up.\").append(StringUtils.LINE_SEP);\r", "+                    exceptionMessage.append(\"Error messages:\").append(StringUtils.LINE_SEP);\r", "-                log(\"Attempt [\" + i + \"]:  error occurred; retrying...\", e, Project.MSG_INFO);\r", "-                errorMessages.append(br);\r", "+                log(\"Attempt [\" + i + \"]: error occurred; retrying...\", e, Project.MSG_INFO);\r", "+                errorMessages.append(StringUtils.LINE_SEP);\r"]}]}