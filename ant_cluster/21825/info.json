{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2cb06f33b47cbb068a4c3f4f5468179", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38733adeef5aca3ca14045a5b57ab12", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "87118181a63b355cfc23c9333b3b9281b40a2aa2", "commitAfterChange": "8d139ecb2196ec4be450d8c824fccc3b8c15b9ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static void configure( Object target, Attributes attrs, Project project )         throws BuildException", "signatureAfterChange": "     public Vector getImportStack()", "diff": ["+     */", "+    public Vector getImportStack() {", "+        return importStack;", "+    }", "-     */", "-    public static void configure( Object target, Attributes attrs, Project project )", "-        throws BuildException", "-    {", "-        if (target instanceof TaskAdapter) {", "-            target = ((TaskAdapter) target).getProxy();", "-        }", "-", "-        IntrospectionHelper ih =", "-            IntrospectionHelper.getHelper(target.getClass());", "-", "-        // Why ???", "-        project.addBuildListener(ih);", "-", "-        for (int i = 0; i < attrs.getLength(); i++) {", "-            // reflect these into the target", "-            String attValue=attrs.getValue(i);", "-", "-            // XXX ADD SPECIAL CASE FOR ${property} - don't convert to string", "-            // and support ARRAYS.", "-            // reflect these into the target", "-            //String value = replaceProperties(attValue);", "-            String value = replaceProperties(project, attValue,", "-                                           project.getProperties());", "-            try {", "-                ih.setAttribute(project, target,", "-                                attrs.getQName(i).toLowerCase(Locale.US), value);", "-", "-            } catch (BuildException be) {", "-                // id attribute must be set externally", "-                if (!attrs.getQName(i).equals(\"id\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f754e5730f9250a3ef7fc16619ecfde5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "08e4c1a818075c432fb53d67052211be64478562", "commitAfterChange": "8de96cafd7f3f5a23fe1e03f5325d0a7f2b7f006", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static void configureTask(Project project,                                       Task taskInst,                                       NamedNodeMap nodeMap)         throws BuildException", "signatureAfterChange": "      private static void configure(Project project,                                   Object target,                                   NamedNodeMap nodeMap)         throws BuildException", "diff": ["-    private static void configureTask(Project project,", "-                                      Task taskInst,", "-                                      NamedNodeMap nodeMap)", "-        Object task=taskInst;", "-        if( task instanceof TaskAdapter )", "-            task=((TaskAdapter)task).getProxy();", "+", "+    private static void configure(Project project,", "+                                  Object target,", "+                                  NamedNodeMap nodeMap)", "+        throws BuildException", "+    {", "+        if( target instanceof TaskAdapter )", "+            target=((TaskAdapter)target).getProxy();", "-            beanInfo = Introspector.getBeanInfo(task.getClass());", "+            beanInfo = Introspector.getBeanInfo(target.getClass());", "-            String msg = \"Can't introspect task class: \" + task.getClass();", "+            String msg = \"Can't introspect class: \" + target.getClass();", "-                // reflect these into the task", "+                // reflect these into the target", "-                        \"\\\" does not have a setMethod in \" + task.getClass();", "+                        \"\\\" does not have a setMethod in \" + target.getClass();", "-                    setMethod.invoke(task, new String[] {value});", "+                    setMethod.invoke(target, new String[] {value});", "-                        attr.getName() + \" in \" + task.getClass().getName();", "+                        attr.getName() + \" in \" + target.getClass().getName();"]}]}