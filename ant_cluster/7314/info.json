{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cb60e7aeb1574fcf1117f17c05c3b4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2326b36150bced14a2c8783d4101a07d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/ExtendedTaskdefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testRun2() throws Exception", "signatureAfterChange": "      @Test     public void testRun2() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testRun2\",", "-                \"exception thrown by the subclass\",", "-                \"executing the Foo task\");", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testRun2\");", "+    \t\tfail(\"BuildException should have been thrown\");", "+    \t} catch(BuildException ex) {", "+    \t\tassertContains(\"exception thrown by the subclass\", \"executing the Foo task\", ex.getMessage());", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "535cf436d705a7bf4981dd58a840714a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/EchoPropertiesTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "       public void testEchoToBadFile()", "signatureAfterChange": "       @Test     public void testEchoToBadFile()", "diff": ["+    @Test", "-        expectBuildExceptionContaining( \"testEchoToBadFile\",", "-            \"destfile is a directory\", \"destfile is a directory!\" );", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testEchoToBadFile\");", "+            fail(\"BuildException should have been thrown on destination file being a directory\");", "+    \t} catch(BuildException ex) {", "+    \t\tassertContains(\"destfile is a directory\", \"destfile is a directory!\", ex.getMessage());", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da53ef940563338f566e2422adf6c8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/AssertionsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testMultipleAssertions()", "signatureAfterChange": "      @Test     public void testMultipleAssertions()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"test-multiple-assertions\",", "-                \"multiple assertions rejected\",", "-                \"Only one assertion declaration is allowed\");", "-    }", "+        try {", "+            buildRule.executeTarget(\"test-multiple-assertions\");", "+            fail(\"BuildException should have been thrown by assertion fail in task\");", "+        } catch (BuildException ex) {", "+            assertContains(\"multiple assertions rejected\", \"Only one assertion declaration is allowed\", ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d137109b3b4923c270bd50f1f223ce05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/AssertionsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testReferenceAbuse()", "signatureAfterChange": "      @Test     public void testReferenceAbuse()", "diff": ["-", "-    public void testReferenceAbuse() {", "-        expectBuildExceptionContaining(\"test-reference-abuse\",", "-                \"reference abuse rejected\",", "-                \"You must not specify\");", "-    }", "+    @Test", "+    public void testReferenceAbuse() {", "+        try {", "+            buildRule.executeTarget(\"test-reference-abuse\");", "+            fail(\"BuildException should have been thrown by reference abuse\");", "+        } catch (BuildException ex) {", "+            assertContains(\"reference abuse rejected\", \"You must not specify\", ex.getMessage());", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e571589372ea293c56ede3cc84669f57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/ExtendedTaskdefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testRun() throws Exception", "signatureAfterChange": "      @Test     public void testRun() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testRun\",", "-                \"exception thrown by the subclass\",", "-                \"executing the Foo task\");", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testRun\");", "+    \t\tfail(\"BuildException should have been thrown\");", "+    \t} catch(BuildException ex) {", "+    \t\tassertContains(\"exception thrown by the subclass\", \"executing the Foo task\", ex.getMessage());", "+    \t}"]}]}