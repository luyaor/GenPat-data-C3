{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7d52ab0f46370dbfd73e5de16824474", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487aac0ec8b5779a7be53b7cac74aacf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testMultipleTargets()", "signatureAfterChange": "          @Test     public void testMultipleTargets()", "diff": ["+    @Test", "-        executeTarget(\"multipleTargets\");", "-        assertLogContaining(\"test1-one\");", "-        assertLogContaining(\"test1-two\");", "-        assertLogContaining(\"test2-one\");", "-        assertLogContaining(\"test2-two\");", "+        buildRule.executeTarget(\"multipleTargets\");", "+        assertContains(\"test1-one\", buildRule.getLog());", "+        assertContains(\"test1-two\", buildRule.getLog());", "+        assertContains(\"test2-one\", buildRule.getLog());", "+        assertContains(\"test2-two\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7245b6aefb2a1e25f9aee78786501d8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/DynamicTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testSimple()", "signatureAfterChange": "      @Test     public void testSimple()", "diff": ["+    @Test", "-        executeTarget(\"simple\");", "-        assertEquals(\"1\", project.getProperty(\"prop1\"));", "-        assertEquals(\"2\", project.getProperty(\"prop2\"));", "-        assertEquals(\"3\", project.getProperty(\"prop3\"));", "-        assertEquals(\"4\", project.getProperty(\"prop4\"));", "+        buildRule.executeTarget(\"simple\");", "+        assertEquals(\"1\", buildRule.getProject().getProperty(\"prop1\"));", "+        assertEquals(\"2\", buildRule.getProject().getProperty(\"prop2\"));", "+        assertEquals(\"3\", buildRule.getProject().getProperty(\"prop3\"));", "+        assertEquals(\"4\", buildRule.getProject().getProperty(\"prop4\"));"]}]}