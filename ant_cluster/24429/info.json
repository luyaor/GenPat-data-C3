{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca08115deadfb78aff593db4b4a175dc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0237c8fed85c93e29a92bcec310060fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "4673e840dc3e0165a26bab65641bdd96a80a8a39", "commitAfterChange": "b02f11df78369665a4b7f0d47ba7851fce6b9a36", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["+        Main m = null;", "+", "-            new Main(args).runBuild();", "-            System.exit(0);", "+            m = new Main(args);", "+        } catch(Throwable exc) {", "+            printMessage(exc);", "+            System.exit(1);", "-        catch(Throwable exc) {", "-            String message = exc.getMessage();", "-            if (message != null) {", "-                System.err.println(message);", "+", "+        try {", "+            m.runBuild();", "+            System.exit(0);", "+        } catch (BuildException be) {", "+            if (m.err != System.err) {", "+                printMessage(be);", "+        } catch(Throwable exc) {", "+            printMessage(exc);", "+            System.exit(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a4ffc85b625594940c5d6d1327db24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Task.java", "commitBeforeChange": "5f037857b64eec462d45aefb97997f37733dbbb7", "commitAfterChange": "e8e4255032431746117cf127ef194afd2b4eaa6c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public final void perform()", "signatureAfterChange": "     public final void perform()", "diff": ["-            } catch (RuntimeException exc) {", "-                if (exc instanceof BuildException) {", "-                    BuildException be = (BuildException) exc;", "-                    if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "-                        be.setLocation(getLocation());", "-                    }", "+            } catch (BuildException ex) {", "+                if (ex.getLocation() == Location.UNKNOWN_LOCATION) {", "+                    ex.setLocation(getLocation());", "-                reason = exc;", "-                throw exc;", "+                reason = ex;", "+            } catch (Exception ex) {", "+                reason = ex;", "+                BuildException be = new BuildException(ex);", "+                be.setLocation(getLocation());", "+                throw be;", "+            } catch (Error ex) {", "+                reason = ex;", "+                throw ex;"]}]}