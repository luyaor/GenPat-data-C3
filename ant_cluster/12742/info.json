{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1a487dd00e6a6ffcc079328668ca40f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6afbf487fd41ebf994a6c83d338444", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "ece10d579b717271df6d23074bfd0345e58ceb95", "commitAfterChange": "d55b86ab4fbcc8807e105e8c99c56488dadc6aeb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\ttry {", "-\t    // XXX if OS=unix", "-\t    if (System.getProperty(\"path.separator\").equals(\":\") &&", "-                    !System.getProperty(\"os.name\").startsWith(\"Mac\"))", "-\t\tRuntime.getRuntime().exec(\"chmod \" + mod + \" \" + srcFile );", "-\t} catch (IOException ioe) {", "-\t    // ignore, but warn", "-\t    System.out.println(\"Error chmod\" + ioe.toString() );", "-\t}", "+        try {", "+            // XXX if OS=unix", "+            if (System.getProperty(\"path.separator\").equals(\":\") &&", "+                !System.getProperty(\"os.name\").startsWith(\"Mac\")) {", "+        ", "+                if (srcFile != null && srcDir == null) {", "+                    chmod(srcFile.toString());", "+                } else if(srcFile == null && srcDir == null) {", "+                    project.log(\"The attribute 'file' or 'dir' needs to be set.\", Project.MSG_WARN);", "+                    throw new BuildException(\"Required attribute not set in Chmod\", location);", "+                } else if(srcFile == null && srcDir != null) {", "+          ", "+                    DirectoryScanner ds = getDirectoryScanner(srcDir);", "+                    String[] files = ds.getIncludedFiles();", "+          ", "+                    for (int i = 0; i < files.length; i++) {", "+                        chmod(files[i]);", "+                    }", "+                }", "+            }", "+        } catch (IOException ioe) {", "+            // ignore, but warn", "+            project.log(\"Error in Chmod \" + ioe.toString() , Project.MSG_WARN);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d12ec596745b488acb4ee7c1e3f2b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "commitAfterChange": "632dad4136fbd0a5eccc98059c56b8c5f2a22030", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void setExecutable(String e)", "diff": ["-    public void execute() throws BuildException {", "-        try {", "-            // XXX if OS=unix", "-            if (System.getProperty(\"path.separator\").equals(\":\") &&", "-                !System.getProperty(\"os.name\").startsWith(\"Mac\")) {", "-        ", "-                if (srcFile != null && srcDir == null) {", "-                    chmod(srcFile.toString());", "-                } else if(srcFile == null && srcDir == null) {", "-                    log(\"The attribute 'file' or 'dir' needs to be set.\", Project.MSG_WARN);", "-                    throw new BuildException(\"Required attribute not set in Chmod\", location);", "-                } else if(srcFile == null && srcDir != null) {", "-          ", "-                    DirectoryScanner ds = getDirectoryScanner(srcDir);", "-                    String[] files = ds.getIncludedFiles();", "-          ", "-                    for (int i = 0; i < files.length; i++) {", "-                        chmod((new File(srcDir, files[i])).getAbsolutePath());", "-                    }", "-                }", "-            }", "-        } catch (IOException ioe) {", "-            // ignore, but warn", "-            log(\"Error in Chmod \" + ioe.toString() , Project.MSG_WARN);", "+    public void setExecutable(String e) {", "+        throw new BuildException(taskType+\" doesn\\'t support the executable attribute\", location);", "+    }"]}]}