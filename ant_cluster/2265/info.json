{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c573521a97b4fff267a3fae2eb1d4f2e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d932272178cfab4983ae4771529ac5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java", "commitBeforeChange": "225893c4b96e202aae6654f8ab2354b307ad35ef", "commitAfterChange": "6409f0ec87cfcc04196be80e0c72aec39a76ec04", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void visit(Folder starteamFolder, java.io.File targetFolder)             throws BuildException", "signatureAfterChange": "     protected void visit(Folder starteamFolder, java.io.File targetFolder)             throws BuildException", "diff": ["+            if (!targetFolder.exists()) {", "+                if (!this.isUsingRevisionLabel()) {", "+                    if (this.createDirs) {", "+                        if (targetFolder.mkdirs()) {", "+                            log(\"Creating folder: \" + targetFolder);", "+                        } else {", "+                            throw new BuildException(", "+                                \"Failed to create local folder \" + targetFolder);", "+                        }", "+                    }", "+                }", "+            }", "+            ", "+", "+            if (this.isUsingRevisionLabel()) {", "+", "+                // prune away any files not belonging to the revision label", "+                // this is one ugly API from Starteam SDK", "+                ", "+                Hashtable labelItems = new Hashtable(filesList.length);", "+                int s = filesList.length;", "+                int[] ids = new int[s];", "+                for (int i=0; i < s; i++) {", "+                    ids[i]=filesList[i].getItemID();", "+                    labelItems.put(new Integer(ids[i]), new Integer(i));", "+                }", "+                int[] foundIds = getLabelInUse().getLabeledItemIDs(ids);", "+                s = foundIds.length;", "+                Item[] labeledFiles = new Item[s];", "+                for (int i=0; i < s; i++) {", "+                    Integer ID = new Integer(foundIds[i]);", "+                    labeledFiles[i] = ", "+                        filesList[((Integer) labelItems.get(ID)).intValue()];", "+                }", "+                filesList = labeledFiles;", "+            }", "-                     if (!subfolder.exists()) {", "-                         if (this.createDirs) {", "-                             log(\"Creating folder: \" + subfolder);", "-                             subfolder.mkdirs();", "-                         }", "-                     }", "-                     if (subfolder.exists()) {", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf791f58c6f3e86f8b9519747e460ae3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/RedirectorElement.java", "commitBeforeChange": "e539f6378221559dd8f18f43ceb941801e9a9820", "commitAfterChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void dieOnCircularReference() throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["-     */", "-    protected void dieOnCircularReference() throws BuildException {", "-        if (isChecked()) {", "-            return;", "-        }", "-        Stack s = new Stack();", "-        s.push(this);", "-        dieOnCircularReference(s, getProject());"]}]}