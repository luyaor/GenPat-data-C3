{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc2cf4cea569fc169a8463f3d4f15c84", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d607e2008ece016c60d327630cf51c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "33db84490cd8526fec0508e9b8c53a2f4ae8a666", "commitAfterChange": "a25bca9c14a1c802c1dec57771f11a77143e726c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public File configureTestRunner()", "signatureAfterChange": "     public File configureTestRunner()", "diff": ["-        StringBuffer classnames = new StringBuffer();", "-        //@fixme get all test classes to run...", "-        final int testcount = 0;", "-        for (int i = 0; i < testcount; i++) {", "-            classnames.append(\"<classname>\").append(\"\\n\");", "+        // get all test classes to run...", "+        StringBuffer buf = new StringBuffer(10240);", "+        Enumeration classnames = collectTests();", "+        while ( classnames.hasMoreElements() ){", "+            String classname = (String)classnames.nextElement();", "+            buf.append(classname).append(\" \");", "-        props.setProperty(\"classnames\", classnames.toString());", "+        props.setProperty(\"classnames\", buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01751c95858f8a3e3fbbbc9df44e6efc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        StringBuffer b = new StringBuffer();", "-        TreeMap sorted = new TreeMap(getProperties());", "-        for (Iterator i = sorted.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry e = (Map.Entry) i.next();", "+        StringBuilder b = new StringBuilder();", "+        TreeMap<String, Object> sorted = new TreeMap<String, Object>(getPropertyMap());", "+        for (Entry<String, Object> e : sorted.entrySet()) {", "-            b.append(e.getKey().toString());", "+            b.append(e.getKey());", "-            b.append(e.getValue().toString());", "+            b.append(e.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e00f2bf17b1da4ca96d66f1389f892d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void readFiles(Project p)", "signatureAfterChange": "     private void readFiles(Project p)", "diff": ["-            Enumeration e = includesFileList.elements();", "-            while (e.hasMoreElements()) {", "-                NameEntry ne = (NameEntry) e.nextElement();", "+            for (NameEntry ne : includesFileList) {", "-            includesFileList.removeAllElements();", "+            includesFileList.clear();", "-            Enumeration e = excludesFileList.elements();", "-            while (e.hasMoreElements()) {", "-                NameEntry ne = (NameEntry) e.nextElement();", "+            for (NameEntry ne : excludesFileList) {", "-            excludesFileList.removeAllElements();", "+            excludesFileList.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836e091ad4cc094541bc6696d2e12353", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/regexp/RegexpMatcherTest.java", "commitBeforeChange": "b436d9ec5e1d6025d26b1da85769994e387646d4", "commitAfterChange": "e0c5a1f097d74e51109bc095bb09f946d4ea48e5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testMultiVersusSingleLine() throws IOException", "signatureAfterChange": "       public void testMultiVersusSingleLine() throws IOException", "diff": ["+", "-        StringWriter swr = new StringWriter();", "-        PrintWriter p = new PrintWriter(swr);", "-        p.println(\"Line1\");", "-        p.println(\"starttest Line2\");", "-        p.println(\"Line3 endtest\");", "-        p.println(\"Line4\");", "-        p.close();", "-        String text = swr.toString();", "+        StringBuffer buf = new StringBuffer();", "+        buf.append(\"Line1\").append(UNIX_LINE);", "+        buf.append(\"starttest Line2\").append(UNIX_LINE);", "+        buf.append(\"Line3 endtest\").append(UNIX_LINE);", "+        buf.append(\"Line4\").append(UNIX_LINE);", "+        String text = buf.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98aa2da46871818afc89e6cf5dcf4197", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        StringBuffer buf = new StringBuffer();", "-        Enumeration e = selectorElements();", "-        if (e.hasMoreElements()) {", "-            while (e.hasMoreElements()) {", "-                buf.append(e.nextElement().toString());", "-                if (e.hasMoreElements()) {", "-                    buf.append(\", \");", "-                }", "+        StringBuilder buf = new StringBuilder();", "+        Enumeration<FileSelector> e = selectorElements();", "+        while (e.hasMoreElements()) {", "+            buf.append(e.nextElement().toString());", "+            if (e.hasMoreElements()) {", "+                buf.append(\", \");", "-"]}]}