{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9038f8450975e8fca0f414318c9689a1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fea842bfa5d30b3cba66647f87d54de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected void setupProjectContext( final Project project, final HashMap defines )         throws AntException", "signatureAfterChange": "     protected void setupProjectContext( final Project project, final HashMap defines )         throws AntException", "diff": ["+     */", "+        //put these values into defines so that they overide", "+        //user-defined proeprties", "+        defines.put( AntContextResources.HOME_DIR, m_homeDir );", "+        defines.put( AntContextResources.BIN_DIR, m_binDir );", "+        defines.put( AntContextResources.LIB_DIR, m_libDir );", "+        defines.put( AntContextResources.TASKLIB_DIR, m_taskLibDir );", "+        //defines.put( AntContextResources.USER_DIR, m_userDir );", "+        defines.put( TaskletContext.LOGGER, m_logger );", "+        defines.put( TaskletContext.JAVA_VERSION, getJavaVersion() );", "+", "-        ", "-        final Iterator keys = defines.keySet().iterator();", "-        //make sure these come before following so they get overidden if user tries to ", "-        //confuse the system", "+        addToContext( context, defines );", "+", "+        //Add system properties second so that they overide user-defined properties", "+        addToContext( context, System.getProperties() );", "+    }", "-            final String value = (String)defines.get( key );", "-        ", "-        context.setProperty( AntContextResources.HOME_DIR, m_homeDir );", "-        context.setProperty( AntContextResources.BIN_DIR, m_binDir );", "-        context.setProperty( AntContextResources.LIB_DIR, m_libDir );", "-        context.setProperty( AntContextResources.TASKLIB_DIR, m_taskLibDir );", "-        //context.put( AntContextResources.USER_DIR, m_userDir );", "-        context.setProperty( TaskletContext.LOGGER, m_logger );", "-        context.setProperty( TaskletContext.JAVA_VERSION, getJavaVersion() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15d16ae2ced6cd1405defcef21487f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Script.java", "commitBeforeChange": "e525cc224a3053d08b6aaa6c1953f7507aede854", "commitAfterChange": "945b6d36d1eec5f3ce4df1f71c041564ce01f5e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        BSFManager manager = new BSFManager ();", "-            // add id references (<task id=\"foo\">)", "-            Hashtable references = project.getReferences();", "-            for (Enumeration e = references.keys() ; e.hasMoreElements() ;) {", "-                String key = (String)e.nextElement();", "-                Object value = references.get(key);", "-                manager.declareBean(key, value, value.getClass());", "-            }", "+            addBeans(project.getProperties());", "+            addBeans(project.getUserProperties());", "+            addBeans(project.getTargets());", "+            addBeans(project.getReferences());", "-            // add properties (<property name=\"foo\">)", "-            Hashtable properties = project.getProperties();", "-            for (Enumeration e = properties.keys() ; e.hasMoreElements() ;) {", "+            BSFManager manager = new BSFManager ();", "+", "+            for (Enumeration e = beans.keys() ; e.hasMoreElements() ;) {", "-                if (!references.contains(key)) {", "-                    Object value = properties.get(key);", "-                    manager.declareBean(key, value, value.getClass());", "-                }", "+                Object value = beans.get(key);", "+                manager.declareBean(key, value, value.getClass());"]}]}