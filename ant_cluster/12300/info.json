{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f54896aeb1690011753f68f352090cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2dd4a9200b1d18852c386ae4f37566", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "87711d5afc3fc82ba10ace9fabaf47a47d4e3a59", "commitAfterChange": "cef6bbb3c32f64f13892e616ce8722cba6dde746", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )", "signatureAfterChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )", "diff": ["-        final Iterator tasks = target.getTasks();", "-        while( tasks.hasNext() )", "+        final Configuration[] tasks = target.getTasks();", "+        for( int i = 0; i < tasks.length; i++ )", "-            final Configuration task = (Configuration)tasks.next();", "-            executeTask( task, context );", "+            executeTask( tasks[ i ], context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cee8848e1696ebc8ceba01c323786b8a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractContainerTask.java", "commitBeforeChange": "32de119f1545d6ec3e68aa1e708b40c6cf4c8dcd", "commitAfterChange": "334c80aa51963ee665f04ff0210f09dd41cb14ae", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final Configurer getConfigurer()", "signatureAfterChange": "     protected final void executeTasks( final Configuration[] tasks )         throws TaskException", "diff": ["+     */", "+    protected final void executeTasks( final Configuration[] tasks )", "+        throws TaskException", "+    {", "+        for( int i = 0; i < tasks.length; i++ )", "+        {", "+            final Configuration task = tasks[ i ];", "+            executeTask( task );", "+        }", "+    }", "-     */", "-    protected final Configurer getConfigurer()", "-    {", "-        return m_configurer;", "-    }"]}]}