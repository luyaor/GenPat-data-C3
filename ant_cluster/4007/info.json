{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34de240fdc867f635ca87a58b0ee1d3d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03e80da65c30478b059409cef81776f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "dcf31da592d1ef3c7fad80f729b83f500372bed9", "commitAfterChange": "4b364736eef7f9740caba2130df3113462b1b612", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        // nested invokations are possible like an imported file", "+        // importing another one", "+        String oldPrefix = ProjectHelper.getCurrentTargetPrefix();", "-            ProjectHelper.setCurrentTargetPrefix(null);", "+            ProjectHelper.setCurrentTargetPrefix(oldPrefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc9def505bd966efdc7da719bdbe6f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "179bc428c9da672a95511cdfe407058c888532e1", "commitAfterChange": "49c2480ab253ca2b0109bb0d9b8ac8432519a9ba", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public TaskContext createSubContext( final String name )         throws TaskException", "signatureAfterChange": "     public TaskContext createSubContext( final String name )         throws TaskException", "diff": ["-        final DefaultTaskContext context = new DefaultTaskContext( this );", "+        final Logger logger = m_logger.getChildLogger( name );", "+        final DefaultTaskContext context =", "+            new DefaultTaskContext( this, m_serviceManager, logger );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "338c34255fa0df8efcc1755c66d38f19", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/Log4jListener.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public Log4jListener()", "signatureAfterChange": "          public Log4jListener()", "diff": ["-        if (!(cat.getAllAppenders() instanceof NullEnumeration)) {", "+        Category rootCat = Category.getRoot();", "+        if (!(rootCat.getAllAppenders() instanceof NullEnumeration)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0edbb43ead3db9c98883ba5bdcd014", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "a27bac8c2329a6121be0e884050c4a6584acfc6a", "commitAfterChange": "b4cde9dabb9114c00da7dec74c4ca9308cd9cda8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testCreateTempFile()", "signatureAfterChange": "     public void testCreateTempFile()", "diff": ["-        assertEquals(\"is inside parent dir\", ", "+        assertEquals(\"is inside parent dir\",", "-        assertTrue(\"files are different\", ", "+        assertTrue(\"files are different\",", "-        assertEquals((new File(tmp3.getName())).getAbsolutePath(),", "+        String  tmploc = System.getProperty(\"java.io.tmpdir\");", "+        assertEquals((new File(tmploc, tmp3.getName())).getAbsolutePath(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641590d7212d0b6e2d774341686c039b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "e2ec6a3988643fe6f3c8fabd5b8656e4209eaa1d", "commitAfterChange": "42c6021a9e42f49f50a3f4a170590d15a9b8c3db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws Exception", "signatureAfterChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws Exception", "diff": ["-        // Create and configure the context", "+        //TODO: Put this in Execution Frame", "+        final PropertyStore store = m_baseStore.createChildStore(\"\");", "+", "+       // Create and configure the context", "-            new DefaultTaskContext( m_baseContext, serviceManager, logger );", "+            new DefaultTaskContext( serviceManager, logger, store );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "708de9370423b5cda3e0e43a187277c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/MailLogger.java", "commitBeforeChange": "8d0a7dc50ac5f28978517eb289457e26b4b40c44", "commitAfterChange": "27b9f24bf23dcd72f13756dd74984dd2432c39c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-", "+            String replytoList = getValue(properties,\"replyto\",\"\");", "-            sendMail(mailhost, port, from, toList, subject, buffer.substring(0));", "+            sendMail(mailhost, port, from, replytoList, toList, subject, buffer.substring(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeecdc3976ca16bc0ec77a39bfe98f80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Fstat.java", "commitBeforeChange": "062217277c2cdf426144efb0151eb912ddcd96ab", "commitAfterChange": "f6e86e880925fe33e288665c38af04bc7acc8a15", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void execP4Fstat(StringBuffer list)", "signatureAfterChange": "      private void execP4Fstat(StringBuffer list)", "diff": ["+        String l = list.substring(0);", "-            log(\"Executing fstat \" + P4CmdOpts + \" \" + addCmd + list + \"\\n\",", "+            log(\"Executing fstat \" + P4CmdOpts + \" \" + addCmd + l + \"\\n\",", "-        execP4Command(\"fstat \" + P4CmdOpts + \" \" + addCmd + list, handler);", "+        execP4Command(\"fstat \" + P4CmdOpts + \" \" + addCmd + l, handler);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6bd6fbdf69797769b8e94f53a6aa44c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private Object configureType(String typeName, BuildElement model)          throws ExecutionException, TaskException", "signatureAfterChange": "     private Object configureType(String typeName, BuildElement model)          throws ExecutionException", "diff": ["-         throws ExecutionException, TaskException {", "+         throws ExecutionException {", "-            Object typeInstance = createTypeInstance(typeClass, model);", "+            AntLibFactory libFactory = getLibFactory(antLibrary);", "+            Object typeInstance", "+                 = createTypeInstance(typeClass, libFactory, model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa836e9db3df093a9b3db909c59b8724", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java", "commitBeforeChange": "e716ef9c9dfc9bc4ca58b4baa700adfed915b089", "commitAfterChange": "a9cbacc4f8c19d9a7ed68e5b70505a3f693680ba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public InputStream getInputStream() throws IOException", "signatureAfterChange": "     public InputStream getInputStream() throws IOException", "diff": ["-                cl = getProject().createClassLoader(classpath);", "+                Path p = getClasspath().concatSystemClasspath();", "+                cl = getProject().createClassLoader(p);"]}]}