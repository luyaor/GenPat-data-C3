{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebac7814e917f01fc3cd8aabb71cf6dd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47902839a52a201b608843e766755bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/security/SignJar.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private Commandline buildCommand( final File jarTarget, final File jarSource )", "signatureAfterChange": "      private Commandline buildCommand( final File jarTarget, final File jarSource )", "diff": ["-            cmd.createArgument().setValue( \"-keystore\" );", "-            cmd.createArgument().setValue( m_keystore.toString() );", "+            cmd.addArgument( \"-keystore\" );", "+            cmd.addArgument( m_keystore.toString() );", "-            cmd.createArgument().setValue( \"-storepass\" );", "-            cmd.createArgument().setValue( m_storepass );", "+            cmd.addArgument( \"-storepass\" );", "+            cmd.addArgument( m_storepass );", "-            cmd.createArgument().setValue( \"-storetype\" );", "-            cmd.createArgument().setValue( m_storetype );", "+            cmd.addArgument( \"-storetype\" );", "+            cmd.addArgument( m_storetype );", "-            cmd.createArgument().setValue( \"-keypass\" );", "-            cmd.createArgument().setValue( m_keypass );", "+            cmd.addArgument( \"-keypass\" );", "+            cmd.addArgument( m_keypass );", "-            cmd.createArgument().setValue( \"-sigfile\" );", "-            cmd.createArgument().setValue( m_sigfile.toString() );", "+            cmd.addArgument( \"-sigfile\" );", "+            cmd.addArgument( m_sigfile.toString() );", "-            cmd.createArgument().setValue( \"-signedjar\" );", "-            cmd.createArgument().setValue( jarTarget.toString() );", "+            cmd.addArgument( \"-signedjar\" );", "+            cmd.addArgument( jarTarget.toString() );", "-            cmd.createArgument().setValue( \"-verbose\" );", "+            cmd.addArgument( \"-verbose\" );", "-            cmd.createArgument().setValue( \"-internalsf\" );", "+            cmd.addArgument( \"-internalsf\" );", "-            cmd.createArgument().setValue( \"-sectionsonly\" );", "+            cmd.addArgument( \"-sectionsonly\" );", "-        cmd.createArgument().setValue( jarSource.toString() );", "+        cmd.addArgument( jarSource.toString() );", "-        cmd.createArgument().setValue( m_alias );", "+        cmd.addArgument( m_alias );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2636b5915b0891817e32f3ffb0b3cf2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1534f4e063841a3db919dde44530d75b7d734c57", "commitAfterChange": "d2e6dcf66da83b17eb4a13f4ff7f374521fe29ec", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["-            cmd.createArgument().setValue(\"testsfile=\" + casesFile);", "+            cmd.createArgument().setValue(Constants.TESTSFILE + casesFile);", "-        cmd.createArgument().setValue(\"filtertrace=\" + test.getFiltertrace());", "-        cmd.createArgument().setValue(\"haltOnError=\" + test.getHaltonerror());", "-        cmd.createArgument().setValue(\"haltOnFailure=\"", "+        cmd.createArgument().setValue(Constants.FILTERTRACE + test.getFiltertrace());", "+        cmd.createArgument().setValue(Constants.HALT_ON_ERROR + test.getHaltonerror());", "+        cmd.createArgument().setValue(Constants.HALT_ON_FAILURE", "-                if (s.startsWith(\"CLASSPATH=\")) {", "+                if (s.startsWith(CLASSPATH)) {", "-                                         s.substring(10 // \"CLASSPATH=\".length()", "+                                         s.substring(CLASSPATH.length()", "-                .setValue(\"formatter\"", "-                          + \"=org.apache.tools.ant.taskdefs.optional.junit.\"", "+                .setValue(Constants.FORMATTER", "+                          + \"org.apache.tools.ant.taskdefs.optional.junit.\"", "-        cmd.createArgument().setValue(\"showoutput=\"", "+        cmd.createArgument().setValue(Constants.SHOWOUTPUT", "-        cmd.createArgument().setValue(\"logtestlistenerevents=true\"); // #31885", "+        cmd.createArgument().setValue(Constants.LOGTESTLISTENEREVENTS+\"true\"); // #31885", "-                formatterArg.append(\"formatter=\");", "+                formatterArg.append(Constants.FORMATTER);", "-        cmd.createArgument().setValue(\"crashfile=\"", "+        cmd.createArgument().setValue(Constants.CRASHFILE", "-        cmd.createArgument().setValue(\"propsfile=\"", "+        cmd.createArgument().setValue(Constants.PROPSFILE", "-            } else if (!\"terminated successfully\".equals(vmCrashString)) {", "+            } else if (!Constants.TERMINATED_SUCCESSFULLY.equals(vmCrashString)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f92671e9b85813dc8354b13168def715", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/security/SignJar.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private Commandline buildCommand( final File jarTarget, final File jarSource )", "signatureAfterChange": "      private Commandline buildCommand( final File jarTarget, final File jarSource )", "diff": ["-            cmd.createArgument().setValue( \"-keystore\" );", "-            cmd.createArgument().setValue( m_keystore.toString() );", "+            cmd.addArgument( \"-keystore\" );", "+            cmd.addArgument( m_keystore.toString() );", "-            cmd.createArgument().setValue( \"-storepass\" );", "-            cmd.createArgument().setValue( m_storepass );", "+            cmd.addArgument( \"-storepass\" );", "+            cmd.addArgument( m_storepass );", "-            cmd.createArgument().setValue( \"-storetype\" );", "-            cmd.createArgument().setValue( m_storetype );", "+            cmd.addArgument( \"-storetype\" );", "+            cmd.addArgument( m_storetype );", "-            cmd.createArgument().setValue( \"-keypass\" );", "-            cmd.createArgument().setValue( m_keypass );", "+            cmd.addArgument( \"-keypass\" );", "+            cmd.addArgument( m_keypass );", "-            cmd.createArgument().setValue( \"-sigfile\" );", "-            cmd.createArgument().setValue( m_sigfile.toString() );", "+            cmd.addArgument( \"-sigfile\" );", "+            cmd.addArgument( m_sigfile.toString() );", "-            cmd.createArgument().setValue( \"-signedjar\" );", "-            cmd.createArgument().setValue( jarTarget.toString() );", "+            cmd.addArgument( \"-signedjar\" );", "+            cmd.addArgument( jarTarget.toString() );", "-            cmd.createArgument().setValue( \"-verbose\" );", "+            cmd.addArgument( \"-verbose\" );", "-            cmd.createArgument().setValue( \"-internalsf\" );", "+            cmd.addArgument( \"-internalsf\" );", "-            cmd.createArgument().setValue( \"-sectionsonly\" );", "+            cmd.addArgument( \"-sectionsonly\" );", "-        cmd.createArgument().setValue( jarSource.toString() );", "+        cmd.addArgument( jarSource.toString() );", "-        cmd.createArgument().setValue( m_alias );", "+        cmd.addArgument( m_alias );"]}]}