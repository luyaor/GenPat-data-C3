{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09961aaaa2a5de6f2935ab3d1f226f01", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cb0c924f56b743fa27d5069816e7c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "a8387980f989e9418ddcee6fa9ae14a0c07e3165", "commitAfterChange": "505d4a8c1d350ffac8a917378a6fac71b2517b3d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          public void setupDirectoryScanner(FileScanner ds, Project p)", "signatureAfterChange": "          public void setupDirectoryScanner(FileScanner ds, Project p)", "diff": ["-            if (o instanceof PatternSet) {", "-                defaultPatterns.append((PatternSet) o);", "-            } else {", "-                Reference r = (Reference) o;", "-                o = r.getReferencedObject(p);", "-                if (o instanceof PatternSet) {", "-                    defaultPatterns.append((PatternSet) o);", "-                } else {", "-                    String msg = r.getRefId()+\" doesn\\'t denote a patternset\";", "-                    throw new BuildException(msg);", "-                }", "-            }", "+            defaultPatterns.append((PatternSet) o, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e636efd93cffdf41e60686c395ae00", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "e56743fb3b214c9010f16be65d0bdc0de77fc246", "commitAfterChange": "0f55b6b9d6a98accff8e0352474df465207806f7", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public Enumeration getResources(String name) throws IOException", "signatureAfterChange": "     public Enumeration getResources(String name) throws IOException", "diff": ["-        return isParentFirst(name)", "-            ? CollectionUtils.append(parentEnum, mine)", "-            :  CollectionUtils.append(mine, parentEnum);", "+        boolean parentEnumFirst = isParentFirst(name);", "+        ", "+        if (isolated && !parentEnumFirst) {", "+            return mine;", "+        } else if (parentEnumFirst) {", "+            return CollectionUtils.append(parentEnum, mine);", "+        } else {", "+            return CollectionUtils.append(mine, parentEnum);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9168ed33042c406d3f70e86a6fc3268b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "64886360cf0d83287454a0b04a6613c3f47c0e7d", "commitAfterChange": "a840de1ce8f5d8b5cf31c5f91efb95f4d97467cc", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     protected Enumeration findResources(String name) throws IOException", "signatureAfterChange": "     protected Enumeration findResources(String name) throws IOException", "diff": ["-        } else if (ignoreBase) {", "-            return getRootLoader() == null", "-                ? mine", "-                : CollectionUtils.append(", "-                    mine, getRootLoader().getResources(name));", "-        } else {", "-            // Inverted.", "-            return CollectionUtils.append(mine, base);", "+        if (ignoreBase) {", "+            return getRootLoader() == null ? mine : CollectionUtils.append(mine, getRootLoader()", "+                    .getResources(name));", "+        }", "+        // parent last:", "+        return CollectionUtils.append(mine, base);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd0aa183ca65499c172e1a93ad87d5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "c4b5bdd374681d596ca0793c46701736892a258b", "commitAfterChange": "2054505cbb3cd60eda671e0070f085215d038f21", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["-        ds.setIncludes(patterns.getIncludePatterns(p));", "-        ds.setExcludes(patterns.getExcludePatterns(p));", "+", "+        for (int i=0; i<additionalPatterns.size(); i++) {", "+            Object o = additionalPatterns.elementAt(i);", "+            if (o instanceof PatternSet) {", "+                defaultPatterns.append((PatternSet) o);", "+            } else {", "+                Reference r = (Reference) o;", "+                o = r.getReferencedObject(p);", "+                if (o instanceof PatternSet) {", "+                    defaultPatterns.append((PatternSet) o);", "+                } else {", "+                    String msg = r.getRefId()+\" doesn\\'t denote a patternset\";", "+                    throw new BuildException(msg);", "+                }", "+            }", "+        }", "+        ", "+        ds.setIncludes(defaultPatterns.getIncludePatterns(p));", "+        ds.setExcludes(defaultPatterns.getExcludePatterns(p));"]}]}