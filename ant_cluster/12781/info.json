{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8360dd2cf4b28218fdabcb95c4e720df", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137735cae030843a08d403826f5f2255", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setReferenceFiles(Path path)", "signatureAfterChange": "     public void setReferenceFiles(Path path)", "diff": ["-    public void setReferenceFiles(Path path) {", "-        //demand create pathlist", "-        if (_referenceFiles == null) {", "-            _referenceFiles = new Path(this.project);", "-        }", "-        _referenceFiles.append(path);", "-    }", "+     */", "+    public void setReferenceFiles(Path path) {", "+        //demand create pathlist", "+        if (referenceFiles == null) {", "+            referenceFiles = new Path(this.project);", "+        }", "+        referenceFiles.append(path);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb72e6af68a4195de51786fd552050f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected String getReferencesParameter()", "signatureAfterChange": "     protected String getReferencesParameter()", "diff": ["-    protected String getReferencesParameter() {", "-        //bail on no references", "-        if (notEmpty(_references)) {", "-            return \"/reference:\" + _references;", "-        } else {", "-            return null;", "-        }", "-    }", "+     */", "+    protected String getReferencesParameter() {", "+        //bail on no references", "+        if (notEmpty(references)) {", "+            return \"/reference:\" + references;", "+        } else {", "+            return null;", "+        }", "+    }"]}]}