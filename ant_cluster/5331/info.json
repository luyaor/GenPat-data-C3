{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cb9df4e0438f76b1bc3d68e9d980515", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c3949edcca1bac1382b5c2ac80e523", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     protected String getVersionLabel()", "signatureAfterChange": "     protected String getVersionLabel()", "diff": ["-        if (m_FromLabel == null && m_ToLabel == null) {", "+        if (fromLabel == null && toLabel == null) {", "-        if (m_FromLabel != null && m_ToLabel != null) {", "-            if (m_FromLabel.length() > 31) {", "-                m_FromLabel = m_FromLabel.substring(0, 30);", "+        if (fromLabel != null && toLabel != null) {", "+            if (fromLabel.length() > 31) {", "+                fromLabel = fromLabel.substring(0, 30);", "-                    + m_FromLabel, Project.MSG_WARN);", "+                    + fromLabel, Project.MSG_WARN);", "-            if (m_ToLabel.length() > 31) {", "-                m_ToLabel = m_ToLabel.substring(0, 30);", "+            if (toLabel.length() > 31) {", "+                toLabel = toLabel.substring(0, 30);", "-                    + m_ToLabel, Project.MSG_WARN);", "+                    + toLabel, Project.MSG_WARN);", "-            return FLAG_VERSION_LABEL + m_ToLabel + VALUE_FROMLABEL + m_FromLabel;", "-        } else if (m_FromLabel != null) {", "-            if (m_FromLabel.length() > 31) {", "-                m_FromLabel = m_FromLabel.substring(0, 30);", "+            return FLAG_VERSION_LABEL + toLabel + VALUE_FROMLABEL + fromLabel;", "+        } else if (fromLabel != null) {", "+            if (fromLabel.length() > 31) {", "+                fromLabel = fromLabel.substring(0, 30);", "-                    + m_FromLabel, Project.MSG_WARN);", "+                    + fromLabel, Project.MSG_WARN);", "-            return FLAG_VERSION + VALUE_FROMLABEL + m_FromLabel;", "+            return FLAG_VERSION + VALUE_FROMLABEL + fromLabel;", "-            if (m_ToLabel.length() > 31) {", "-                m_ToLabel = m_ToLabel.substring(0, 30);", "+            if (toLabel.length() > 31) {", "+                toLabel = toLabel.substring(0, 30);", "-                    + m_ToLabel, Project.MSG_WARN);", "+                    + toLabel, Project.MSG_WARN);", "-            return FLAG_VERSION_LABEL + m_ToLabel;", "+            return FLAG_VERSION_LABEL + toLabel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11552df42c1197d2857165991686b9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "     protected String getVersionDate() throws BuildException", "signatureAfterChange": "     protected String getVersionDate() throws BuildException", "diff": ["-        if (m_FromDate == null && m_ToDate == null", "-            && m_NumDays == Integer.MIN_VALUE) {", "+        if (fromDate == null && toDate == null", "+            && numDays == Integer.MIN_VALUE) {", "-        if (m_FromDate != null && m_ToDate != null) {", "-            return FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + m_FromDate;", "-        } else if (m_ToDate != null && m_NumDays != Integer.MIN_VALUE) {", "+        if (fromDate != null && toDate != null) {", "+            return FLAG_VERSION_DATE + toDate + VALUE_FROMDATE + fromDate;", "+        } else if (toDate != null && numDays != Integer.MIN_VALUE) {", "-                return FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE", "-                        + calcDate(m_ToDate, m_NumDays);", "+                return FLAG_VERSION_DATE + toDate + VALUE_FROMDATE", "+                        + calcDate(toDate, numDays);", "-                String msg = \"Error parsing date: \" + m_ToDate;", "+                String msg = \"Error parsing date: \" + toDate;", "-        } else if (m_FromDate != null && m_NumDays != Integer.MIN_VALUE) {", "+        } else if (fromDate != null && numDays != Integer.MIN_VALUE) {", "-                return FLAG_VERSION_DATE + calcDate(m_FromDate, m_NumDays)", "-                        + VALUE_FROMDATE + m_FromDate;", "+                return FLAG_VERSION_DATE + calcDate(fromDate, numDays)", "+                        + VALUE_FROMDATE + fromDate;", "-                String msg = \"Error parsing date: \" + m_FromDate;", "+                String msg = \"Error parsing date: \" + fromDate;", "-            return m_FromDate != null ? FLAG_VERSION + VALUE_FROMDATE", "-                    + m_FromDate : FLAG_VERSION_DATE + m_ToDate;", "+            return fromDate != null ? FLAG_VERSION + VALUE_FROMDATE", "+                    + fromDate : FLAG_VERSION_DATE + toDate;"]}]}