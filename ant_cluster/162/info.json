{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aa63a4b2243a0c7f4a2e55376c8db47", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561a40a12a2c57ad261b19904fc4843c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2d15e8d8b3af5f74bf06989fe1c5cce6e07e3471", "commitAfterChange": "257dadeaf0fb8588b80fa71b24ee3aca38ea19b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testNormalize()", "signatureAfterChange": "      public void testNormalize()", "diff": ["-                     fu.normalize(\"/\").getPath());", "+                     FILE_UTILS.normalize(\"/\").getPath());", "-                     fu.normalize(\"\\\\\").getPath());", "+                     FILE_UTILS.normalize(\"\\\\\").getPath());", "-                     fu.normalize(driveSpec).getPath());", "+                     FILE_UTILS.normalize(driveSpec).getPath());", "-                     fu.normalize(driveSpec + \"/\").getPath());", "+                     FILE_UTILS.normalize(driveSpec + \"/\").getPath());", "-                     fu.normalize(driveSpec + \"\\\\\").getPath());", "+                     FILE_UTILS.normalize(driveSpec + \"\\\\\").getPath());", "-                     fu.normalize(driveSpecLower + \"/\").getPath());", "+                     FILE_UTILS.normalize(driveSpecLower + \"/\").getPath());", "-                     fu.normalize(driveSpecLower + \"\\\\\").getPath());", "+                     FILE_UTILS.normalize(driveSpecLower + \"\\\\\").getPath());", "-                     fu.normalize(driveSpec + \"/////\").getPath());", "+                     FILE_UTILS.normalize(driveSpec + \"/////\").getPath());", "-                     fu.normalize(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "+                     FILE_UTILS.normalize(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "-                         fu.normalize(driveSpec).getPath());", "+                         FILE_UTILS.normalize(driveSpec).getPath());", "-                         fu.normalize(driveSpec + \"/\").getPath());", "+                         FILE_UTILS.normalize(driveSpec + \"/\").getPath());", "-                         fu.normalize(driveSpec + \"\\\\\").getPath());", "+                         FILE_UTILS.normalize(driveSpec + \"\\\\\").getPath());", "-                         fu.normalize(driveSpecLower).getPath());", "+                         FILE_UTILS.normalize(driveSpecLower).getPath());", "-                         fu.normalize(driveSpecLower + \"/\").getPath());", "+                         FILE_UTILS.normalize(driveSpecLower + \"/\").getPath());", "-                         fu.normalize(driveSpecLower + \"\\\\\").getPath());", "+                         FILE_UTILS.normalize(driveSpecLower + \"\\\\\").getPath());", "-                         fu.normalize(driveSpecLower + \"\\\\junk\").getPath());", "+                         FILE_UTILS.normalize(driveSpecLower + \"\\\\junk\").getPath());", "-                         fu.normalize(driveSpec + \"/////\").getPath());", "+                         FILE_UTILS.normalize(driveSpec + \"/////\").getPath());", "-                         fu.normalize(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "+                         FILE_UTILS.normalize(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "-                     fu.normalize(localize(\"/1/2/3/4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/./4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/./4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/.\\\\4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/.\\\\4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/./.\\\\4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/./.\\\\4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/../3/4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/../3/4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/..\\\\3\\\\4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/..\\\\3\\\\4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/../../5/.././2/./3/6/../4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/../../5/.././2/./3/6/../4\")).getPath());", "-                     fu.normalize(localize(\"/1/2/3/..\\\\../5/..\\\\./2/./3/6\\\\../4\")).getPath());", "+                     FILE_UTILS.normalize(localize(\"/1/2/3/..\\\\../5/..\\\\./2/./3/6\\\\../4\")).getPath());", "-            fu.normalize(\"foo\");", "+            FILE_UTILS.normalize(\"foo\");", "-            fu.normalize(localize(\"/1/../../b\"));", "+            FILE_UTILS.normalize(localize(\"/1/../../b\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab0bdb57b332211bf56f3ec53cf5a87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2d15e8d8b3af5f74bf06989fe1c5cce6e07e3471", "commitAfterChange": "257dadeaf0fb8588b80fa71b24ee3aca38ea19b7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testRemoveLeadingPath()", "signatureAfterChange": "     public void testRemoveLeadingPath()", "diff": ["-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"/foo\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"/foo\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"/foo/\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"/foo/\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"\\\\foo\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"\\\\foo\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"\\\\foo\\\\\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"\\\\foo\\\\\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"c:/foo\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"c:/foo\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"c:/foo/\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"c:/foo/\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"c:\\\\foo\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"c:\\\\foo\"),", "-        assertEquals(\"bar\", fu.removeLeadingPath(new File(\"c:\\\\foo\\\\\"),", "+        assertEquals(\"bar\", FILE_UTILS.removeLeadingPath(new File(\"c:\\\\foo\\\\\"),", "-        assertEqualsIgnoreDriveCase(fu.normalize(\"/bar\").getAbsolutePath(),", "-                     fu.removeLeadingPath(new File(\"/foo\"), new File(\"/bar\")));", "-        assertEqualsIgnoreDriveCase(fu.normalize(\"/foobar\").getAbsolutePath(),", "-                     fu.removeLeadingPath(new File(\"/foo\"), new File(\"/foobar\")));", "+        assertEqualsIgnoreDriveCase(FILE_UTILS.normalize(\"/bar\").getAbsolutePath(),", "+                     FILE_UTILS.removeLeadingPath(new File(\"/foo\"), new File(\"/bar\")));", "+        assertEqualsIgnoreDriveCase(FILE_UTILS.normalize(\"/foobar\").getAbsolutePath(),", "+                     FILE_UTILS.removeLeadingPath(new File(\"/foo\"), new File(\"/foobar\")));", "-        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar\"),", "+        assertEquals(\"\", FILE_UTILS.removeLeadingPath(new File(\"/foo/bar\"),", "-        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar\"),", "+        assertEquals(\"\", FILE_UTILS.removeLeadingPath(new File(\"/foo/bar\"),", "-        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar/\"),", "+        assertEquals(\"\", FILE_UTILS.removeLeadingPath(new File(\"/foo/bar/\"),", "-        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar/\"),", "+        assertEquals(\"\", FILE_UTILS.removeLeadingPath(new File(\"/foo/bar/\"),", "-        assertEquals(expected, fu.removeLeadingPath(new File(\"/\"),", "+        assertEquals(expected, FILE_UTILS.removeLeadingPath(new File(\"/\"),", "-        assertEquals(expected, fu.removeLeadingPath(new File(\"c:/\"),", "+        assertEquals(expected, FILE_UTILS.removeLeadingPath(new File(\"c:/\"),", "-        assertEquals(expected, fu.removeLeadingPath(new File(\"c:\\\\\"),", "+        assertEquals(expected, FILE_UTILS.removeLeadingPath(new File(\"c:\\\\\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f508af89da56716ebe871a94944d49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2d15e8d8b3af5f74bf06989fe1c5cce6e07e3471", "commitAfterChange": "257dadeaf0fb8588b80fa71b24ee3aca38ea19b7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testResolveFile()", "signatureAfterChange": "      public void testResolveFile()", "diff": ["-                     fu.resolveFile(null, \"/\").getPath());", "+                     FILE_UTILS.resolveFile(null, \"/\").getPath());", "-                     fu.resolveFile(null, \"\\\\\").getPath());", "+                     FILE_UTILS.resolveFile(null, \"\\\\\").getPath());", "-                     fu.resolveFile(null, driveSpec + \"/\").getPath());", "+                     FILE_UTILS.resolveFile(null, driveSpec + \"/\").getPath());", "-                     fu.resolveFile(null, driveSpec + \"\\\\\").getPath());", "+                     FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\").getPath());", "-                     fu.resolveFile(null, driveSpecLower + \"/\").getPath());", "+                     FILE_UTILS.resolveFile(null, driveSpecLower + \"/\").getPath());", "-                     fu.resolveFile(null, driveSpecLower + \"\\\\\").getPath());", "+                     FILE_UTILS.resolveFile(null, driveSpecLower + \"\\\\\").getPath());", "-                     fu.resolveFile(null, driveSpec + \"/////\").getPath());", "+                     FILE_UTILS.resolveFile(null, driveSpec + \"/////\").getPath());", "-                     fu.resolveFile(null, driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "+                     FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "-                         fu.resolveFile(null, driveSpec + \"/\").getPath());", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"/\").getPath());", "-                         fu.resolveFile(null, driveSpec + \"\\\\\").getPath());", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\").getPath());", "-                         fu.resolveFile(null, driveSpecLower + \"/\").getPath());", "+                         FILE_UTILS.resolveFile(null, driveSpecLower + \"/\").getPath());", "-                         fu.resolveFile(null, driveSpecLower + \"\\\\\").getPath());", "+                         FILE_UTILS.resolveFile(null, driveSpecLower + \"\\\\\").getPath());", "-                         fu.resolveFile(null, driveSpec + \"/////\").getPath());", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"/////\").getPath());", "-                         fu.resolveFile(null, driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"./4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"./4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \".\\\\4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \".\\\\4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"./.\\\\4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"./.\\\\4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"../3/4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"../3/4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"..\\\\3\\\\4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"..\\\\3\\\\4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"../../5/.././2/./3/6/../4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"../../5/.././2/./3/6/../4\").getPath());", "-                     fu.resolveFile(new File(localize(\"/1/2/3\")), \"..\\\\../5/..\\\\./2/./3/6\\\\../4\").getPath());", "+                     FILE_UTILS.resolveFile(new File(localize(\"/1/2/3\")), \"..\\\\../5/..\\\\./2/./3/6\\\\../4\").getPath());", "-            fu.resolveFile(new File(localize(\"/1\")), \"../../b\");", "+            FILE_UTILS.resolveFile(new File(localize(\"/1\")), \"../../b\");"]}]}