{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a25a3f8938cde402fa7308d40a1a957c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b111889d43d973815345a9b351f2f618", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "271e0fe6fc223253e2c24c0f0f0c4fc4d9b58410", "commitAfterChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "          protected static final File createTmpFile()", "signatureAfterChange": "      protected final File createTmpFile()", "diff": ["-    ", "-    protected static final File createTmpFile(){", "-        // must be compatible with JDK 1.1 !!!!", "-        final long rand = (new Random(System.currentTimeMillis())).nextLong();", "-        File file = new File(\"metamata\" + rand + \".tmp\");", "-        return file;", "+", "+    protected final File createTmpFile() {", "+        return FileUtils.newFileUtils().createTempFile(\"metamata\", \".tmp\", getProject().getBaseDir());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4cf247c4350904fb822e6dd10d7c71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/EchoPropertiesTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": "       protected File createRelativeFile( String filename )", "signatureAfterChange": "       protected File createRelativeFile(String filename)", "diff": ["-    protected File createRelativeFile( String filename ) {", "-        if (filename.equals( \".\" )) {", "-            return getProjectDir();", "+    protected File createRelativeFile(String filename) {", "+        if (filename.equals(\".\")) {", "+            return buildRule.getProject().getBaseDir();", "-        return new File( getProjectDir(), filename );", "+        return new File(buildRule.getProject().getBaseDir(), filename);"]}]}