{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed2574fd5989c8a6aaf95519c8d041f2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ff55b452957a77fe6c8f94d29a8cb7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/RecorderTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testSubBuild() throws IOException", "signatureAfterChange": "      @Test     public void testSubBuild() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"subbuild\");", "+        buildRule.executeTarget(\"subbuild\");", "-                   .contentEquals(project.resolveFile(REC_IN", "+                   .contentEquals(buildRule.getProject().resolveFile(REC_IN", "-                           new File(getOutputDir(), \"rectest5.log\"), true));", "+                           new File(buildRule.getOutputDir(), \"rectest5.log\"), true));", "-                   .contentEquals(project.resolveFile(REC_IN", "+                   .contentEquals(buildRule.getProject().resolveFile(REC_IN", "-                           new File(getOutputDir(), \"rectest6.log\"), true));", "-                                                      ", "+                           new File(buildRule.getOutputDir(), \"rectest6.log\"), true));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9d3eba3ad8aa7bb8cdcb2ed70759f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/PropertyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "          public void testXmlProperty()", "signatureAfterChange": "          @Test     public void testXmlProperty()", "diff": ["+    @Test", "-            executeTarget(\"testXmlProperty\");", "-            assertEquals(\"ONE\", project.getProperty(\"xml.one\"));", "-            assertEquals(\"TWO\", project.getProperty(\"xml.two\"));", "-            // Xml-Loading only on Java5+", "+        \tAssume.assumeNoException(\"XML Loading only on Java 5+\", e);", "+        buildRule.executeTarget(\"testXmlProperty\");", "+        assertEquals(\"ONE\", buildRule.getProject().getProperty(\"xml.one\"));", "+        assertEquals(\"TWO\", buildRule.getProject().getProperty(\"xml.two\"));", "+        "]}]}