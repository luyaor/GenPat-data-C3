{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84d5115f2de0ca6db9b61a016f1973fb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7cd204c59d7c41806c849681573c10", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "7119b3f030ddaa3e88117fa37aeb17b65cdab485", "commitAfterChange": "b0d9f8aa0137890a06875525db92bf44decfa512", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public void setDefault(String defaultTarget)", "signatureAfterChange": "     public void setDefault(String defaultTarget)", "diff": ["-        setUserProperty(MagicNames.PROJECT_DEFAULT_TARGET, defaultTarget);", "+        if (defaultTarget != null) {", "+            setUserProperty(MagicNames.PROJECT_DEFAULT_TARGET, defaultTarget);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1298d214ea137c64f747e69eac313270", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private void executeInteger(String oldValue) throws BuildException", "signatureAfterChange": "         private void executeInteger(String oldValue) throws BuildException", "diff": ["-                try {", "-                    operationValue = fmt.parse(value).intValue();", "-                } catch (NumberFormatException nfe) { ", "-                    // swallow", "-                } catch (ParseException pe)  { ", "-                    // swallow", "+                if (value != null) {", "+                    try {", "+                        operationValue = fmt.parse(value).intValue();", "+                    } catch (NumberFormatException nfe) {", "+                        // swallow", "+                    } catch (ParseException pe)  {", "+                        // swallow", "+                    }", "-                ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1587e67bf0832b6b7ff90b54858e7b92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/BuildHelper.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void addFileSetToPath(String pathName, String filesetDir,                                     String filesetIncludes)", "signatureAfterChange": "     protected void addFileSetToPath(String pathName, String filesetDir,                                     String filesetIncludes)", "diff": ["-        for (int i = 0; i < files.length; ++i) {", "-            if (currentPath == null || currentPath.length() == 0) {", "-                currentPath = files[i].getPath();", "-            } else {", "-                currentPath = currentPath + File.pathSeparator", "-                     + files[i].getPath();", "+        if (files != null) {", "+            for (int i = 0; i < files.length; ++i) {", "+                if (currentPath == null || currentPath.length() == 0) {", "+                    currentPath = files[i].getPath();", "+                } else {", "+                    currentPath = currentPath + File.pathSeparator", "+                         + files[i].getPath();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d13a7ecb8900e906a6dc2df39c09062", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "e4a95755b95687bac2de13e36c61926ae4ccd33e", "commitAfterChange": "11f6c1a20bbb4a5c8b1b961f7c9870e11781c178", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                        Hashtable dependencies = (Hashtable)classpathDependencies.get(className);", "-                        for (Enumeration e2 = dependencies.elements(); e2.hasMoreElements();) {", "-                            File classpathFile = (File)e2.nextElement();", "-                            if (classpathFile.lastModified() > info.absoluteFile.lastModified()) {", "-                                log(\"Class \" + className + ", "+                        ", "+                        // if we have no info about the class - it may have been deleted already and we ", "+                        // are using cached info.", "+                        if (info != null) {", "+                            Hashtable dependencies = (Hashtable)classpathDependencies.get(className);", "+                            for (Enumeration e2 = dependencies.elements(); e2.hasMoreElements();) {", "+                                File classpathFile = (File)e2.nextElement();", "+                                if (classpathFile.lastModified() > info.absoluteFile.lastModified()) {", "+                                    log(\"Class \" + className + ", "-                                outOfDateClasses.put(className, className);", "-                                break;", "+                                    outOfDateClasses.put(className, className);", "+                                    break;", "+                                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291181e05498f34cbb483a93649fe947", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java", "commitBeforeChange": "7eff21c38b119354f8e4f658c8cfd25fe39812af", "commitAfterChange": "19434df75b86fd14fb9d12302e8f37f4d16738c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["+            if (headers != null) {", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321f3dbc130b68400f8de001495fe8cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "3fce5ce0142330b06cb5ad940808d4d0b42c56e2", "commitAfterChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public String[] getArguments()", "signatureAfterChange": "     public String[] getArguments()", "diff": ["-            for (int j=0; j<s.length; j++) {", "-                result.addElement(s[j]);", "+            if( s != null ) {", "+                for (int j=0; j<s.length; j++) {", "+                    result.addElement(s[j]);", "+                }", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3920936eab77fb53244c8e92645b55ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "bf8a13577a122985a0a1f3777a348a1218c8fe9e", "commitAfterChange": "8a848413c46e87c2149e2f23193c4b27a4b3b49b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void setUserProperty(String name, Object value)", "signatureAfterChange": "     public void setUserProperty(String name, Object value)", "diff": ["-        project.log(\"Setting ro project property: \" + name + \" -> \" + value, Project.MSG_DEBUG);", "+        if (project != null) {", "+            project.log(\"Setting ro project property: \"", "+                        + name + \" -> \" + value, Project.MSG_DEBUG);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396d102fca4fb593001fd04e313a093f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/IdentityStack.java", "commitBeforeChange": "00659e352854f190d579aeba56f180fe289b031a", "commitAfterChange": "712a7f7c1b13217b58ecb8caad3be944e828531c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static IdentityStack getInstance(Stack s)", "signatureAfterChange": "     public static IdentityStack getInstance(Stack s)", "diff": ["-        result.addAll(s);", "+        if (s != null) {", "+            result.addAll(s);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4243d5c3a2147805a65533960a03cf71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/script/ScriptDef.java", "commitBeforeChange": "140403da7d0000f0363bc7c9f1ad57ea2f6e878a", "commitAfterChange": "8be3ac4c488b6c2fe4d573feb10f16e478a8ebfd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void executeScript(Map attributes, Map elements, ScriptDefBase instance)", "signatureAfterChange": "     public void executeScript(Map attributes, Map elements, ScriptDefBase instance)", "diff": ["-        runner.addBean(\"self\", instance);", "+        if(instance!=null) {", "+            runner.addBean(\"self\", instance);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43fd76d7c9d6b8cc94dd8c04037fbea1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/facade/FacadeTaskHelper.java", "commitBeforeChange": "a17032a42a83e78686c38db27276919022833c2c", "commitAfterChange": "a8bcf75d209a133860382489726d714a0fdb91a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public String[] getArgs()", "signatureAfterChange": "     public String[] getArgs()", "diff": ["-            for (int i = 0; i < curr.length; i++) {", "-                tmp.add(curr[i]);", "+            if (curr != null) {", "+                for (int i = 0; i < curr.length; i++) {", "+                    tmp.add(curr[i]);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5385ee1fec545a90bfdf400a617f0345", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/MappingSelector.java", "commitBeforeChange": "c16ac4046a1780e1f7a9a0dc7322761aba28db05", "commitAfterChange": "9fd3da80a6a942c873be1479785079901536489b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void verifySettings()", "signatureAfterChange": "     public void verifySettings()", "diff": ["-        if (mapperElement == null) {", "-            map = new IdentityMapper();", "-        } else {", "-            map = mapperElement.getImplementation();", "-        }", "-            setError(\"Could not set <mapper> element.\");", "+            if (mapperElement == null) {", "+                map = new IdentityMapper();", "+            } else {", "+                map = mapperElement.getImplementation();", "+                if (map == null) {", "+                    setError(\"Could not set <mapper> element.\");", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a8671e30ab82cbfe167e3e966c8e490", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "e0648c41cf95712ccb653005170206c40a337f39", "commitAfterChange": "b8a4ef4f9128a18629e51849358e6335987aaac5", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public DocletInfo createDoclet()", "signatureAfterChange": "     public DocletInfo createDoclet()", "diff": ["-        doclet = new DocletInfo();", "+        if (doclet == null) {", "+            doclet = new DocletInfo();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc1fd66242c50d8c1ea1c0c31c92fd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "4c429d5df3e8cf99713d69c7357abacedfcccbeb", "commitAfterChange": "0fb624e936ea10bcdbbe1e29e69761a87489fdbb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                              String publicId) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "diff": ["-    protected void writeJar(String baseName, File jarfile, Hashtable files, ", "+    protected void writeJar(String baseName, File jarfile, Hashtable files,", "-            // clean the addedfiles Vector ", "+            // clean the addedfiles Vector", "-            ", "+", "-                        throw new BuildException(\"Could not find manifest file: \" + config.manifest, ", "+                        throw new BuildException(\"Could not find manifest file: \" + config.manifest,", "-                            ", "+", "-            ", "+", "-            ", "+", "-            ", "+", "-                ", "+", "-                for (int i = 0, n = innerfiles.length; i < n; i++) {", "-            ", "-                    //get and clean up innerclass name", "-                    int entryIndex = entryName.lastIndexOf(entryFile.getName()) -1;", "-                    if ( entryIndex < 0) {", "-                        entryName = innerfiles[i];", "+                if (innerfiles != null) {", "+                    for (int i = 0, n = innerfiles.length; i < n; i++) {", "+", "+                        //get and clean up innerclass name", "+                        int entryIndex = entryName.lastIndexOf(entryFile.getName()) -1;", "+                        if ( entryIndex < 0) {", "+                            entryName = innerfiles[i];", "+                        }", "+                        else {", "+                            entryName = entryName.substring(0, entryIndex) + File.separatorChar + innerfiles[i];", "+                        }", "+                        // link the file", "+                        entryFile = new File(config.srcDir, entryName);", "+", "+                        log(\"adding innerclass file '\" + entryName + \"'\",", "+                                Project.MSG_VERBOSE);", "+", "+                        addFileToJar(jarStream, entryFile, entryName);", "+", "-                    else {", "-                        entryName = entryName.substring(0, entryIndex) + File.separatorChar + innerfiles[i];", "-                    }", "-                    // link the file", "-                    entryFile = new File(config.srcDir, entryName);", "-        ", "-                    log(\"adding innerclass file '\" + entryName + \"'\", ", "-                            Project.MSG_VERBOSE);", "-        ", "-                    addFileToJar(jarStream, entryFile, entryName);", "-        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640fdac566b17f819b0972dc694539cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void removeBuildListener(BuildListener listener)", "signatureAfterChange": "     public void removeBuildListener(BuildListener listener)", "diff": ["-        mainFrame.removeBuildListener(listener);", "-    }", "+        if (mainFrame != null) {", "+            mainFrame.removeBuildListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d3a88e1b9a9c3da552b3a600426d0c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "91dfa2e783567b2801a535355397c0e3e671fef6", "commitAfterChange": "44b170125dfa5ee3189c220a433f2c48a4338727", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static synchronized Vector getProcEnvironment()", "signatureAfterChange": "     public static synchronized Vector getProcEnvironment()", "diff": ["-            procEnvironment.addElement(var);", "+            if (var != null) {", "+                procEnvironment.addElement(var);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7429511e4761ade8719c8539bf9a017c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "4d3eebbdb62bd31f6577324ebed20ee1a267028a", "commitAfterChange": "939efc95cd3110f457e05cad08486548ce5aba2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "signatureAfterChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "diff": ["-            assertEquals( message, current.getMessage() );", "+            if( message != null )", "+            {", "+                assertEquals( message, current.getMessage() );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836d9f437113a199eac860646eb802e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "b522a2e89c065eb95466f1031d27332f8250c6b1", "commitAfterChange": "80377e9c7627fc01ff8342577b5b0e7464c76d0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "diff": ["-                        boolean isIncl = ", "+                        boolean isIncl =", "-                        boolean isExcl = ", "+                        boolean isExcl =", "-            dirF.mkdirs();", "+            if ( dirF != null ) {", "+                dirF.mkdirs();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "875061b9735b95fc1b56ad2d6ed0ed57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "bf8a13577a122985a0a1f3777a348a1218c8fe9e", "commitAfterChange": "8a848413c46e87c2149e2f23193c4b27a4b3b49b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void setInheritedProperty(String name, Object value)", "signatureAfterChange": "     public void setInheritedProperty(String name, Object value)", "diff": ["-        project.log(\"Setting ro project property: \" + name + \" -> \" + value, Project.MSG_DEBUG);", "+        if (project != null) {", "+            project.log(\"Setting ro project property: \" + name + \" -> \"", "+                        + value, Project.MSG_DEBUG);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884df58277bb09b6f46d64173bd5d8be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java", "commitBeforeChange": "608424c6506d921af836902200b6b14dc8272493", "commitAfterChange": "0022fa2365dff486750da547135c9339b7a67526", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void start()", "signatureAfterChange": "      public void start()", "diff": ["-        inputThread.start();", "+        if (inputThread != null) {", "+            inputThread.start();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb79830f996800099b41251f55bd8b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void addBuildListener(BuildListener listener)", "signatureAfterChange": "     public void addBuildListener(BuildListener listener)", "diff": ["-        mainFrame.addBuildListener(listener);", "+        if (mainFrame != null) {", "+            mainFrame.addBuildListener(listener);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb176015650a72eb8cb0a4c5a7b8e13", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "7eff21c38b119354f8e4f658c8cfd25fe39812af", "commitAfterChange": "19434df75b86fd14fb9d12302e8f37f4d16738c4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["+            if (headers != null) {", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a02ecda713f759df70fee40ce1a5fbab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries, Map libPathsMap)          throws ExecutionException", "signatureAfterChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-            List libPaths = (List) libPathsMap.get(libraryId);", "-            if (libPaths != null) {", "-                for (Iterator j = libPaths.iterator(); j.hasNext();) {", "-                    URL pathURL = (URL) j.next();", "-                    addLibPath(antLibrary, pathURL);", "+            if (libPathsMap != null) {", "+                List libPaths = (List) libPathsMap.get(libraryId);", "+                if (libPaths != null) {", "+                    for (Iterator j = libPaths.iterator(); j.hasNext();) {", "+                        URL pathURL = (URL) j.next();", "+                        addLibPath(antLibrary, pathURL);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b83b297e168f29adb4e8543a3516a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public Object clone()", "signatureAfterChange": "      public Object clone()", "diff": ["-        c.classpath = (Path) classpath.clone();", "+        if (classpath != null) {", "+            c.classpath = (Path) classpath.clone();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adcb33a41d33bb727d8e815217ef7fe2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "756f96fdf3b1e01b2a0ddd5d1051770dec2540f2", "commitAfterChange": "ab3f805895e7c27ca8a724d94c34fabbc9cf3233", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["-                zOut.setComment(comment);", "+                if (zOut != null) {", "+                    zOut.setComment(comment);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6cb01367ad63e5b91fcf242ac195ff9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "14df70f4d1eaa2695e2a17e22517b24cc82b4c83", "commitAfterChange": "b29f5e1567af5b4bc6744a12d9c3465c6ec63890", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     public void setSystemProperties()", "signatureAfterChange": "     public void setSystemProperties()", "diff": ["-            this.setPropertyInternal(propertyName, value);", "+            if (value != null) {", "+                this.setPropertyInternal(propertyName, value);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d859df66e502334ef935c0145ef1244a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "9d42b05f174699cda1de0ea34f0ddbce6dee3a37", "commitAfterChange": "8a7b803fb148a2d92f0074479739534a58acc565", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Properties getProperties()", "signatureAfterChange": "     public Properties getProperties()", "diff": ["+            if (value != null) {", "+                // may be null if a system property has been added", "+                // after the project instance has been initialized", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df9126bb1ed4d949d505b4c064f662dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "4d3eebbdb62bd31f6577324ebed20ee1a267028a", "commitAfterChange": "939efc95cd3110f457e05cad08486548ce5aba2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "signatureAfterChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "diff": ["-            assertEquals( message, current.getMessage() );", "+            if( message != null )", "+            {", "+                assertEquals( message, current.getMessage() );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7bcc2c263d794b37fcdfc4e7283c12b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Execute.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validate() throws TaskException", "signatureAfterChange": "     private void validate() throws TaskException", "diff": ["-        if( !m_workingDirectory.exists() )", "+        if( m_workingDirectory != null )", "-            final String message = REZ.getString( \"execute.dir-noexist.error\", m_workingDirectory );", "-            throw new TaskException( message );", "-        }", "-        else if( !m_workingDirectory.isDirectory() )", "-        {", "-            final String message = REZ.getString( \"execute.dir-notdir.error\", m_workingDirectory );", "-            throw new TaskException( message );", "+            if( !m_workingDirectory.exists() )", "+            {", "+                final String message = REZ.getString( \"execute.dir-noexist.error\", m_workingDirectory );", "+                throw new TaskException( message );", "+            }", "+            else if( !m_workingDirectory.isDirectory() )", "+            {", "+                final String message = REZ.getString( \"execute.dir-notdir.error\", m_workingDirectory );", "+                throw new TaskException( message );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7941da2dcba56ec6fa1d2bd17c430d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/PresentSelector.java", "commitBeforeChange": "c16ac4046a1780e1f7a9a0dc7322761aba28db05", "commitAfterChange": "9fd3da80a6a942c873be1479785079901536489b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void verifySettings()", "signatureAfterChange": "     public void verifySettings()", "diff": ["-        if (mapperElement == null) {", "-            map = new IdentityMapper();", "-        } else {", "-            map = mapperElement.getImplementation();", "-        }", "-            setError(\"Could not set <mapper> element.\");", "+            if (mapperElement == null) {", "+                map = new IdentityMapper();", "+            } else {", "+                map = mapperElement.getImplementation();", "+                if (map == null) {", "+                    setError(\"Could not set <mapper> element.\");", "+                }", "+            }"]}]}