{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d9a824e0632e5ea72c9fed244c49399", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ade18f1be30bdec3c4b1f274a24cbfd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "b839a3ed0f3a0ad050579c33f2ede3e8b8542fea", "commitAfterChange": "f1bfa329163db7a4992c25741e2d2db243a69fa0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private URL getResourceURL(File file, String resourceName)", "signatureAfterChange": "     private URL getResourceURL(File file, String resourceName)", "diff": ["-                ZipFile zipFile = null;", "-                try {", "+                ZipFile zipFile = (ZipFile)zipFiles.get(file);", "+                if (zipFile == null) {", "-", "-                    ZipEntry entry = zipFile.getEntry(resourceName);", "-                    if (entry != null) {", "-                        try {", "-                            return new URL(\"jar:file:\"+file.toString()+\"!/\"+entry);", "-                        } catch (MalformedURLException ex) {", "-                            return null;", "-                        }", "-                    }", "+                    zipFiles.put(file, zipFile);                    ", "-                finally {", "-                    if (zipFile != null) {", "-                        zipFile.close();", "+", "+                ZipEntry entry = zipFile.getEntry(resourceName);", "+                if (entry != null) {", "+                    try {", "+                        return new URL(\"jar:file:\"+file.toString()+\"!/\"+entry);", "+                    } catch (MalformedURLException ex) {", "+                        return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec020fceadc76fceb19c24fb2c133344", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "7e7fa2f905e691ba00568bc670cc80060c224fd4", "commitAfterChange": "590936af269c77bda5fb410fd81e19958062efe6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected boolean isUpToDate(FileScanner[] scanners, File zipFile) throws BuildException", "signatureAfterChange": "     protected boolean isUpToDate(FileScanner[] scanners, File zipFile) throws BuildException", "diff": ["-                if (zipFile.exists()) return true;", "-                // In this case using java.util.zip will not work", "-                // because it does not permit a zero-entry archive.", "-                // Must create it manually.", "-                log(\"Note: creating empty \"+archiveType+\" archive \" + zipFile, Project.MSG_INFO);", "-                try {", "-                    OutputStream os = new FileOutputStream(zipFile);", "-                    try {", "-                        // Cf. PKZIP specification.", "-                        byte[] empty = new byte[22];", "-                        empty[0] = 80; // P", "-                        empty[1] = 75; // K", "-                        empty[2] = 5;", "-                        empty[3] = 6;", "-                        // remainder zeros", "-                        os.write(empty);", "-                    } finally {", "-                        os.close();", "-                    }", "-                } catch (IOException ioe) {", "-                    throw new BuildException(\"Could not create empty ZIP archive\", ioe, location);", "-                }", "-                return true;", "+                return createEmptyZip(zipFile);"]}]}