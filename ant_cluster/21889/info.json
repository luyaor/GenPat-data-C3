{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cdc4f54a1cf7d4311f95d2517fe517a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4b130f435214c5d694e0c6b40b66bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "5060bd5cc2071c45c156c926cd124a3136d618b5", "commitAfterChange": "24d5431aabdaa61ef8e4b57d4aa25dda1de36fdb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private String[] translatePath( final File baseDirectory, String source )", "signatureAfterChange": "     protected String[] translatePath( final File baseDirectory, String source )", "diff": ["-    private String[] translatePath( final File baseDirectory, String source )", "+    protected String[] translatePath( final File baseDirectory, String source )", "-        PathTokenizer tok = new PathTokenizer( source );", "+        final String[] elements = FileUtils.parsePath( source );", "-        while( tok.hasMoreTokens() )", "+        for( int i = 0; i < elements.length; i++ )", "-            final String pathElement = tok.nextToken();", "+            final String pathElement = elements[ i ];", "-            for( int i = 0; i < element.length(); i++ )", "+            for( int j = 0; j < element.length(); j++ )", "-                translateFileSep( element, i );", "+                translateFileSep( element, j );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d1f9f516a60479f26b3d70b2e79a28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "5060bd5cc2071c45c156c926cd124a3136d618b5", "commitAfterChange": "24d5431aabdaa61ef8e4b57d4aa25dda1de36fdb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private String[] translatePath( final File baseDirectory, String source )", "signatureAfterChange": "     protected String[] translatePath( final File baseDirectory, String source )", "diff": ["-    private String[] translatePath( final File baseDirectory, String source )", "+    protected String[] translatePath( final File baseDirectory, String source )", "-        PathTokenizer tok = new PathTokenizer( source );", "+        final String[] elements = FileUtils.parsePath( source );", "-        while( tok.hasMoreTokens() )", "+        for( int i = 0; i < elements.length; i++ )", "-            final String pathElement = tok.nextToken();", "+            final String pathElement = elements[ i ];", "-            for( int i = 0; i < element.length(); i++ )", "+            for( int j = 0; j < element.length(); j++ )", "-                translateFileSep( element, i );", "+                translateFileSep( element, j );"]}]}