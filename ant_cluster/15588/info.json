{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1edff04d5c0c64ed232e38002a683bf5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d37cd2950d0f2e252f8a66f4ebc1193", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "6243b5ffe48c2c3f094b97a0356bf4f52a653c31", "commitAfterChange": "cae2d444f7e933d5d55072f4b546b27ce174a720", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "signatureAfterChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-                throw new ExecutionException(\"Ant Library \\\"\" + libraryId", "-                     + \"\\\" is already loaded from \"", "-                     + currentVersion.getDefinitionURL());", "+                // same location?", "+                AntLibrarySpec spec ", "+                    = (AntLibrarySpec) librarySpecs.get(libraryId); ", "+                URL specURL = spec.getLibraryURL();", "+                if (!specURL.equals(currentVersion.getDefinitionURL())) {", "+                    throw new ExecutionException(\"Ant Library \\\"\" + libraryId", "+                         + \"\\\" is already loaded from \"", "+                         + currentVersion.getDefinitionURL() ", "+                         + \" new version found at \" ", "+                         + specURL);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a1113063c03ff978660ebf9f09b8dcd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "0c1c82ce1305e134d25d2b9f92e4b0e455c93ef6", "commitAfterChange": "5dc8a1418a077cfce09baf030b1c744c816fc289", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void executeMain() throws BuildException", "signatureAfterChange": "      public void executeMain() throws BuildException", "diff": ["-                    throw new BuildException(\"Not allowed to rename old file \"", "-                                             + \"to temporary file\");", "+                    throw new BuildException(", "+                        \"Not allowed to rename old file (\"", "+                        + zipFile.getAbsolutePath()", "+                        + \") to temporary file\");", "-                    throw new BuildException(\"Unable to rename old file \"", "-                                             + \"to temporary file\");", "+                    throw new BuildException(", "+                        \"Unable to rename old file (\"", "+                        + zipFile.getAbsolutePath()", "+                        + \") to temporary file\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db84211f53c5df1b0133f909824407f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "c2cfb84865b9315ee41695c59dd02dfe5f94ba0c", "commitAfterChange": "d1d47e9813e74c308be031e92d2b0b4f479e9c28", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public String read(BufferedReader reader) throws ManifestException, IOException", "signatureAfterChange": "         public String read(BufferedReader reader) throws ManifestException, IOException", "diff": ["-                        throw new ManifestException(\"Can't start an attribute with a continuation line \" + line);", "+                        if (name != null) {", "+                            // a continuation on the first line is a continuation of the name - concatenate", "+                            // this line and the name", "+                            name += line.substring(1);", "+                        }", "+                        else {", "+                            throw new ManifestException(\"Can't start an attribute with a continuation line \" + line);", "+                        }", "-                    attribute.addContinuation(line);", "+                    else {", "+                        attribute.addContinuation(line);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49da6c98e6819646f2a27e04a0f88314", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "957f9e512572a78a3e82ca1d0938f486394950dd", "commitAfterChange": "d8361ec47ac005b959a6a22b17fecf77d540e890", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void doValidate(File afile)", "signatureAfterChange": "     private void doValidate(File afile)", "diff": ["-                throw new BuildException(\"Could not validate document \"", "-                    + afile);", "+                throw new BuildException(", "+                    \"Could not validate document \" + afile);", "+            } else {", "+                log(\"Could not validate document \" + afile + \": \" + ex.toString());", "-            throw new BuildException(\"Could not validate document \" + afile,", "+            throw new BuildException(", "+                \"Could not validate document \" + afile,", "-                throw new BuildException(afile", "-                    + \" is not a valid XML document.\");", "+                throw new BuildException(", "+                    afile + \" is not a valid XML document.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651628e3cd818594751c2bce479e16c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Unpack.java", "commitBeforeChange": "a069b78495ed198cd341a106731778edc930f5f6", "commitAfterChange": "f1e9c972fbead168a235951d50d3727bcc8fdf8c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setSrcResource(Resource src)", "signatureAfterChange": "     public void setSrcResource(Resource src)", "diff": ["-            throw new BuildException(\"the archive doesn't exist\");", "+            throw new BuildException(", "+                \"the archive \" + src.getName() + \" doesn't exist\");", "-            throw new BuildException(\"the archive can't be a directory\");", "+            throw new BuildException(", "+                \"the archive \" + src.getName() + \" can't be a directory\");", "-            throw new BuildException(\"Only FileSystem resources are\"", "-                                     + \" supported.\");", "+            throw new BuildException(", "+                \"The source \" + src.getName()", "+                + \" is not a FileSystem \"", "+                + \"Only FileSystem resources are\"", "+                + \" supported.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8faf31efdcef0ada251fe7ae24cc2542", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "08f2880c54aa3d62423a27e167343dbd563d0633", "commitAfterChange": "873ae06dedf1e003f7aa23fefe8dcaa1e765fbd5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected boolean doValidate(File afile)", "signatureAfterChange": "     protected boolean doValidate(File afile)", "diff": ["-", "+        boolean result = true;", "-            return true;", "-            } else {", "-                log(\"Could not validate document \" + afile + \": \" + ex.toString());", "+            log(\"Could not validate document \" + afile + \": \" + ex.toString());", "+            result = false;", "-", "-            } else {", "-                log(afile + \" is not a valid XML document\", Project.MSG_ERR);", "+            result = false;", "+            log(afile + \" is not a valid XML document\", Project.MSG_ERR);", "-        //if we got here. it was as a result of a caught and logged exception.", "-        return false;", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4e66783ce38e66d7c99868cf2cc7d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "00ec1c435af8d15b42cb779373026ceedea92e59", "commitAfterChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "signatureAfterChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)         throws BuildException", "diff": ["-    public static CompilerAdapter getCompiler(String compilerType, Task task) ", "+    public static CompilerAdapter getCompiler(String compilerType, Task task)", "-            }       ", "+            }", "-                    compilerType=\"modern\";", "+                    compilerType = \"modern\";", "-                        throw new BuildException(\"Unable to find a javac \" ", "+                        throw new BuildException(\"Unable to find a javac \"", "-                                                 + \"com.sun.tools.javac.Main \"", "-                                                 + \"is not on the \" ", "+                                                 + MODERN_COMPILER", "+                                                 + \" is not on the \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a1a56c8b8f4c5443e849086439e6eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "5b1dbf444c9b88e7803585fd069feaa072b30bfc", "commitAfterChange": "6ecbe242189a8d7feba3d56c8ec89582e77b1b29", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      private void configure(Object target, AttributeList attrs) throws BuildException", "signatureAfterChange": "      public static void configure(Object target, AttributeList attrs,                                   Project project) throws BuildException", "diff": ["-    private void configure(Object target, AttributeList attrs) throws BuildException {", "+    public static void configure(Object target, AttributeList attrs, ", "+                                 Project project) throws BuildException {", "-                if (attrs.getName(i).equals(\"id\")) {", "-                    project.addReference(attrs.getValue(i), target);", "-                } else {", "-                    be.setLocation(new Location(buildFile.toString(), ", "-                                                locator.getLineNumber(), ", "-                                                locator.getColumnNumber()));", "+                // id attribute must be set externally", "+                if (!attrs.getName(i).equals(\"id\")) {", "+    }"]}]}