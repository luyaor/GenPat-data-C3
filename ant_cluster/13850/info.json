{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "164d40c879978d01a79588725d040f91", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1bb8967ef83e3125b1fc1d5f3b5e31e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/ExecUtil.java", "commitBeforeChange": "cac267a813e6bb6433f2e4dbceecd89353e8dd8f", "commitAfterChange": "cd862006479feb201e2230eb3b37dc4f5740ef35", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected static String[] toNativeEnvironment( final Properties environment )         throws ExecException", "signatureAfterChange": "      protected static String[] toNativeEnvironment( final Properties environment )         throws ExecException", "diff": ["+        {", "+        }", "-            return Environment.toNativeFormat( environment );", "+            final ArrayList newEnvironment = new ArrayList();", "+", "+            final Iterator keys = environment.keySet().iterator();", "+            while( keys.hasNext() )", "+            {", "+                final String key = (String)keys.next();", "+                final String value = environment.getProperty( key );", "+                newEnvironment.add( key + '=' + value );", "+            }", "+", "+            return (String[])newEnvironment.toArray( new String[ newEnvironment.size() ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df31ca3fe58c45aa4652223e4f324617", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/xdocs/src/org/apache/tools/ant/xdoclet/IndexGen.java", "commitBeforeChange": "f04c145a440987e0013d8532ae043f0be0aa9dd0", "commitAfterChange": "58b3f9e697861dbd84f85fadfa3a9c0ea22caff3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        TreeMap data = new TreeMap();", "+", "+        // grab all categories and tasks", "+            String[] tasks = catDir.list();", "+            Arrays.sort(tasks);", "+", "+            data.put(category, tasks);", "+        }", "+", "+        Iterator iter = data.keySet().iterator();", "+        while (iter.hasNext()) {", "+            String category = (String) iter.next();", "-            String[] tasks = catDir.list();", "+            String[] tasks = (String[]) data.get(category);", "-"]}]}