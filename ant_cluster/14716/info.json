{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "078d3690e74cec00150f7677e04dc128", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ade703c41525c54728c6a2daf28c642", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/ProjectTest.java", "commitBeforeChange": "ef606c34138dc742a6c3e2f1322a1ab89f21044a", "commitAfterChange": "f334365459cf908a8d2fa4ba634a670f1568486c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testResolveFile()", "signatureAfterChange": "     public void testResolveFile()", "diff": ["-        /*", "-         * throw in drive letters", "-         */", "-        String driveSpec = \"C:\";", "-        assertEquals(driveSpec + \"\\\\\",", "-                     p.resolveFile(driveSpec + \"/\", null).getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     p.resolveFile(driveSpec + \"\\\\\", null).getPath());", "-        String driveSpecLower = \"c:\";", "-        assertEquals(driveSpec + \"\\\\\",", "-                     p.resolveFile(driveSpecLower + \"/\", null).getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     p.resolveFile(driveSpecLower + \"\\\\\", null).getPath());", "-        /*", "-         * promised to eliminate consecutive slashes after drive letter.", "-         */", "-        assertEquals(driveSpec + \"\\\\\",", "-                     p.resolveFile(driveSpec + \"/////\", null).getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     p.resolveFile(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\", null).getPath());", "-", "+        if (Os.isFamily(\"netware\") || Os.isFamily(\"dos\")) {", "+            /*", "+             * throw in drive letters", "+             */", "+            String driveSpec = \"C:\";", "+            assertEquals(driveSpec + \"\\\\\",", "+                         p.resolveFile(driveSpec + \"/\", null).getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         p.resolveFile(driveSpec + \"\\\\\", null).getPath());", "+            String driveSpecLower = \"c:\";", "+            assertEquals(driveSpec + \"\\\\\",", "+                         p.resolveFile(driveSpecLower + \"/\", null).getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         p.resolveFile(driveSpecLower + \"\\\\\", null).getPath());", "+            /*", "+             * promised to eliminate consecutive slashes after drive letter.", "+             */", "+            assertEquals(driveSpec + \"\\\\\",", "+                         p.resolveFile(driveSpec + \"/////\", null).getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         p.resolveFile(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\", null).getPath());", "+        } else {", "+            /*", "+             * drive letters are not used, just to be considered as normal", "+             * part of a name", "+             */", "+            String driveSpec = \"C:\";", "+            assertEquals(driveSpec,", "+                         p.resolveFile(driveSpec + \"/\", null).getPath());", "+            assertEquals(driveSpec,", "+                         p.resolveFile(driveSpec + \"\\\\\", null).getPath());", "+            String driveSpecLower = \"c:\";", "+            assertEquals(driveSpecLower,", "+                         p.resolveFile(driveSpecLower + \"/\", null).getPath());", "+            assertEquals(driveSpecLower,", "+                         p.resolveFile(driveSpecLower + \"\\\\\", null).getPath());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8c1669fb15b22d957059068a0cf558", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "ef606c34138dc742a6c3e2f1322a1ab89f21044a", "commitAfterChange": "f334365459cf908a8d2fa4ba634a670f1568486c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testNormalize()", "signatureAfterChange": "      public void testNormalize()", "diff": ["-        /*", "-         * throw in drive letters", "-         */", "-        String driveSpec = \"C:\";", "-        assertEquals(driveSpec,", "-                     FILE_UTILS.normalize(driveSpec).getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.normalize(driveSpec + \"/\").getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.normalize(driveSpec + \"\\\\\").getPath());", "-        String driveSpecLower = \"c:\";", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.normalize(driveSpecLower + \"/\").getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.normalize(driveSpecLower + \"\\\\\").getPath());", "-        /*", "-         * promised to eliminate consecutive slashes after drive letter.", "-         */", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.normalize(driveSpec + \"/////\").getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.normalize(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "-", "-        if (Os.isFamily(\"netware\")) {", "+        if (Os.isFamily(\"dos\")) {", "+            /*", "+             * throw in drive letters", "+             */", "+            String driveSpec = \"C:\";", "+            assertEquals(driveSpec,", "+                         FILE_UTILS.normalize(driveSpec).getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.normalize(driveSpec + \"/\").getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.normalize(driveSpec + \"\\\\\").getPath());", "+            String driveSpecLower = \"c:\";", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.normalize(driveSpecLower + \"/\").getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.normalize(driveSpecLower + \"\\\\\").getPath());", "+            /*", "+             * promised to eliminate consecutive slashes after drive letter.", "+             */", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.normalize(driveSpec + \"/////\").getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.normalize(driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "+        } else if (Os.isFamily(\"netware\")) {", "-            driveSpec = \"SYS:\";", "+            String driveSpec = \"SYS:\";", "-            driveSpecLower = \"sys:\";", "+            String driveSpecLower = \"sys:\";", "+        } else {", "+            try {", "+                String driveSpec = \"C:\";", "+                assertEquals(driveSpec,", "+                             FILE_UTILS.normalize(driveSpec).getPath());", "+                fail(\"Expected failure, C: isn't an absolute path on other os's\");", "+            } catch (BuildException e) {", "+                // Passed test ", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d35ebe31128d60d392111f9f0603b94a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "ef606c34138dc742a6c3e2f1322a1ab89f21044a", "commitAfterChange": "f334365459cf908a8d2fa4ba634a670f1568486c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testResolveFile()", "signatureAfterChange": "      public void testResolveFile()", "diff": ["-        /*", "-         * throw in drive letters", "-         */", "-        String driveSpec = \"C:\";", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.resolveFile(null, driveSpec + \"/\").getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\").getPath());", "-        String driveSpecLower = \"c:\";", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.resolveFile(null, driveSpecLower + \"/\").getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.resolveFile(null, driveSpecLower + \"\\\\\").getPath());", "-        /*", "-         * promised to eliminate consecutive slashes after drive letter.", "-         */", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.resolveFile(null, driveSpec + \"/////\").getPath());", "-        assertEquals(driveSpec + \"\\\\\",", "-                     FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "-", "-        if (Os.isFamily(\"netware\")) {", "+        if (Os.isFamily(\"dos\")) {", "+            /*", "+             * throw in drive letters", "+             */", "+            String driveSpec = \"C:\";", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"/\").getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\").getPath());", "+            String driveSpecLower = \"c:\";", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.resolveFile(null, driveSpecLower + \"/\").getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.resolveFile(null, driveSpecLower + \"\\\\\").getPath());", "+            /*", "+             * promised to eliminate consecutive slashes after drive letter.", "+             */", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"/////\").getPath());", "+            assertEquals(driveSpec + \"\\\\\",", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\\\\\\\\\\\\\\\\\\\\\").getPath());", "+        } else if (Os.isFamily(\"netware\")) {", "-            driveSpec = \"SYS:\";", "+            String driveSpec = \"SYS:\";", "-            driveSpecLower = \"sys:\";", "+            String driveSpecLower = \"sys:\";", "+        } else {", "+            /*", "+             * drive letters must be considered just normal filenames.", "+             */", "+            String driveSpec = \"C:\";", "+            assertEquals(driveSpec,", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"/\").getPath());", "+            assertEquals(driveSpec,", "+                         FILE_UTILS.resolveFile(null, driveSpec + \"\\\\\").getPath());", "+            String driveSpecLower = \"c:\";", "+            assertEquals(driveSpecLower,", "+                         FILE_UTILS.resolveFile(null, driveSpecLower + \"/\").getPath());", "+            assertEquals(driveSpecLower,", "+                         FILE_UTILS.resolveFile(null, driveSpecLower + \"\\\\\").getPath());"]}]}