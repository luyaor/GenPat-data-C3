{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d5ae13ae505628dbdb64173536ffed6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2346f4b6f6e91b4b1665179856171577", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void test13()", "signatureAfterChange": "     @Test     public void test13()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"test13\", \"Duplicate Attribute\",", "-                                       \"The attribute \\\"Test\\\" may not occur more than once in the same section\");", "+        try {", "+\t\t\tbuildRule.executeTarget(\"test13\");", "+\t\t\tfail(\"BuildException expected: Duplicate Attribute\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"The attribute \\\"Test\\\" may not occur more than once in the same section\", ex.getMessage());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df0a8be2c8d3b932ad325be776a20c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void test3()", "signatureAfterChange": "     @Test     public void test3()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"test3\", \"Manifest is invalid - no colon on header line\",", "-                                       \"Invalid Manifest\");", "+        try {", "+\t\t\tbuildRule.executeTarget(\"test3\");", "+\t\t\tfail(\"BuildException expected: Manifest is invalid - no colon on header line\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"Invalid Manifest\", ex.getMessage());", "+\t\t}"]}]}