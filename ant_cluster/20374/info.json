{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1e037c534bba4fb23a3c0ff347f6505", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0617cd82d5df6ae620e60acee3657f10", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/NoBannerLogger.java", "commitBeforeChange": "172b90cdaef43160dcf7488edbfd4ca1bb638a5d", "commitAfterChange": "b5e606fe0ec7e62fc26854a77e29de35829df027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void targetStarted(BuildEvent event)", "signatureAfterChange": "     public void targetStarted(BuildEvent event)", "diff": ["-        targetName = event.getTarget().getName();", "+        targetName = extractTargetName(event);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c7dac04953d7d0cb9c084a9f2a800b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-            if (filesets != null && filesets.size() > 0) {", "+            if (resources != null) {", "-                    + \" is incompatible with the file length function\");", "+                    + \" is incompatible with the file/resource length function\");", "-        } else if (filesets != null) {", "+        } else if (resources != null) {", "-                    + \" file length function: \\\"\" + mode + \"\\\"\");", "+                    + \" file/resource length function: \\\"\" + mode + \"\\\"\");", "-                + \" nested filesets\");", "+                + \" nested resource collections\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc501be3953cbe66a48c214a03329d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "fd287b3a808daed93021646efdcf52a31957e35a", "commitAfterChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-\tProject p1=new Project();", "-\tp1.setOutputLevel( project.getOutputLevel() );", "-\t", "-\t// set user-define properties", "-\tHashtable prop1=project.getProperties();", "+        Project p1 = new Project(project.getOutput(), project.getOutputLevel());", "+", "+        // set user-define properties", "+        Hashtable prop1 = project.getProperties();", "-            String arg = (String)e.nextElement();", "-            String value = (String)prop1.get(arg);", "+            String arg = (String) e.nextElement();", "+            String value = (String) prop1.get(arg);", "-\t", "-\tp1.setBasedir( dir );", "-\tp1.setUserProperty( \"basedir\" , dir);", "-\tif(antFile==null) antFile= dir + \"/build.xml\";", "-\tProjectHelper.configureProject(p1, new File(antFile));", "-\tif (target == null) {", "-\t    target = p1.getDefaultTarget();", "-\t}", "+        p1.setBasedir(dir);", "+        p1.setUserProperty(\"basedir\" , dir);", "+        if (antFile == null) antFile = dir + \"/build.xml\";", "+        ProjectHelper.configureProject(p1, new File(antFile));", "-\tp1.executeTarget( target );", "-\t", "+        if (target == null) {", "+            target = p1.getDefaultTarget();", "+        }", "+", "+        p1.executeTarget(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "504186c19229d623832f10b6cc8b960f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "23b6d1df6030af3535bf7a588935312b240263ae", "commitAfterChange": "b7858a9322909d250bc55efe54d4af9bd335d174", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private synchronized Union getPath()", "signatureAfterChange": "      private synchronized Resources getPath()", "diff": ["-    private synchronized Union getPath() {", "+    private synchronized Resources getPath() {", "-            path = new Union();", "-            path.setProject(getProject());", "+            path = new Resources(getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5408777a8741fc400bf8747e77c94143", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/component/core/Property.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void execute() throws ExecutionException", "signatureAfterChange": "      public void execute() throws ExecutionException", "diff": ["-        ExecutionFrame frame = getExecutionFrame();", "-            frame.setDataValue(name, value);", "+            getTaskContext().setDataValue(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2af00d13a49220789872637160dc13", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/component/core/Property.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected void addProperties(Properties properties) throws ExecutionException", "signatureAfterChange": "      protected void addProperties(Properties properties) throws ExecutionException", "diff": ["-        ExecutionFrame frame = getExecutionFrame();", "-            frame.setDataValue(propertyName, frame.replacePropertyRefs(propertyValue));", "+            getTaskContext().setDataValue(propertyName, ", "+                                          getTaskContext().replacePropertyRefs(propertyValue));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66901bed613903776f7db93e9b92be0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/Path.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addPath( final String path )", "signatureAfterChange": "     public void addPath( final String path )", "diff": ["-        final PathElement pathElement = new PathElement();", "+        final FileList pathElement = new ParsedPathElement( path );", "-        pathElement.setPath( path );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6801722fe8967a4dd958cea25c0e5c91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/event/OpenRequestEvent.java", "commitBeforeChange": "558d9767bdce2626cd3d5feae2b2daa7d471e440", "commitAfterChange": "aa078695e8f5e69cb5562c6e353c0e8aa87cf2dd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Command createDefaultCmd()", "signatureAfterChange": "     public Command createDefaultCmd()", "diff": ["-        LoadFileCmd load = new LoadFileCmd();", "+        LoadFileCmd load = new LoadFileCmd(getContext());", "-        load.setContext(getContext());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e47e5ea42d9288407ff5e22b8607b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/XMLReport.java", "commitBeforeChange": "7f6746d1f8b8fecfff5d8b3601d5e0a029cb310e", "commitAfterChange": "48534cc206ecbc25509be0246be7e34f7aced86d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Document createDocument(String[] classPath) throws Exception", "signatureAfterChange": "     public Document createDocument(String[] classPath) throws Exception", "diff": ["-            is.setSystemId(\"file:///\" + dtdDir.getAbsolutePath() + \"/\");", "+            is.setSystemId(JAXPUtils.getSystemId(dtdDir));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae156ab83445035da5d012e4e76e56a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java", "commitBeforeChange": "cc6d26121ca5d8386cdacedf194fcd55678bd5b5", "commitAfterChange": "11f85c014d97e6d6b242162f0c1b5c3b95fc34b6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] getIncludedFiles()", "signatureAfterChange": "     public String[] getIncludedFiles()", "diff": ["-        int count = included.size();", "-        String[] files = new String[count];", "-        for (int i = 0; i < count; i++) {", "+        String[] files = new String[getIncludedFilesCount()];", "+        for (int i = 0; i < files.length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9699f310ee60a9baf71f600f74c551e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "e5e17582b09d86d1499a6c1d08fb9629c60b9f68", "commitAfterChange": "b8e3f831d63cc75c059e4b47f6f7eb3d03bfd100", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     private int[] findJUnit4FailureErrorCount(TestResult res)", "signatureAfterChange": "     private int[] findJUnit4FailureErrorCount(TestResult res)", "diff": ["-                || t.getClass().getName().equals(\"java.lang.AssertionError\")) {", "+                || isAssertionError(t.getClass())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97eee5fbe2515c54a8e9da6ddfa4c24d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/event/ErrorEvent.java", "commitBeforeChange": "558d9767bdce2626cd3d5feae2b2daa7d471e440", "commitAfterChange": "aa078695e8f5e69cb5562c6e353c0e8aa87cf2dd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Command createDefaultCmd()", "signatureAfterChange": "     public Command createDefaultCmd()", "diff": ["-        Command retval = new DisplayErrorCmd(_message, _ex);", "-        retval.setContext(getContext());", "+        Command retval = new DisplayErrorCmd(getContext(), _message, _ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f5f623b74d22b30f5e337e185f0075", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "1fa24dc235453d37357a5ffb190f5a3c15a49295", "commitAfterChange": "bba4624fac50881dcc5e81de48fffe05f92e2116", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "     protected void scanDir(File srcDir, File destDir, String[] files)", "signatureAfterChange": "     protected void scanDir(File srcDir, File destDir, String[] files)", "diff": ["-        newFiles = removePackageInfoFiles(newFiles, srcDir, destDir);", "+            lookForPackageInfos(srcDir, newFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ba974b5f068867a3b41b9a68199145", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "fd287b3a808daed93021646efdcf52a31957e35a", "commitAfterChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private static void runBuild()", "diff": ["-        Project project = new Project();", "-        project.setOutputLevel(msgOutputLevel);", "+        Project project = new Project(out, msgOutputLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c082e43dad016e603d528b599793d942", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Main.java", "commitBeforeChange": "aa078695e8f5e69cb5562c6e353c0e8aa87cf2dd", "commitAfterChange": "8ff35a2d7d2250207f320ddfb977de3cf9d3f2c3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["-                LoadFileCmd load = new LoadFileCmd();", "+                LoadFileCmd load = new LoadFileCmd(context);", "-                load.setContext(context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8028ac2b65a5dc5b51fa042aa43ad9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/Path.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addLocation( final File location )", "signatureAfterChange": "     public void addLocation( final File location )", "diff": ["-        final PathElement pathElement = new PathElement();", "+        final FileList pathElement = new ArrayFileList( location.getAbsolutePath() );", "-        pathElement.setLocation( location );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce21503348352fcfe4799758a4961aef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "9c29344dc2caf821f91931b65ee581b0ef5bb8f5", "commitAfterChange": "6ecb04cbad127c05855b26cb12ef35d86a5ebe39", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static void configure(Object target, AttributeList attrs,                                  Project project) throws BuildException", "signatureAfterChange": "     public static void configure(Object target, AttributeList attrs,                                  Project project) throws BuildException", "diff": ["-            IntrospectionHelper.getHelper(target.getClass());", "-", "-        project.addBuildListener(ih);", "+            IntrospectionHelper.getHelper(project, target.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06137b350d1297b83b6f53bd43153bf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "861a4490644853d4b9bff9b0d0b871d7e88b0784", "commitAfterChange": "3af551b1bbd21e0ff6d8bb1453dac216ce89e9da", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected synchronized void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected synchronized void checkConfiguration() throws BuildException", "diff": ["-        if (file == null && filesets.size() + filelists.size() == 0) {", "+        if (file == null && resources.size() == 0) {", "-                                   + \"--a file, filelist or a fileset.\");", "+                                   + \"--a file or resource collection.\");", "-            throw new BuildException(\"Use a fileset to touch directories.\");", "+            throw new BuildException(\"Use a resource collection to touch directories.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db36390d56eb73bf744b89092ad7a7ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "898a00e8b31d03bcd291eeaaa8b65abd53f2562b", "commitAfterChange": "6cd3b1f7a01bf0fef7aa1a24f7e600faa58133f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["-                                     test.getClass().getName());", "+                    JUnitVersionHelper.getTestCaseClassName(test));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6bdf1e47757446175e1c969d18021b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java", "commitBeforeChange": "c041534439d37164110ac8ae93279f44d1a21a97", "commitAfterChange": "602fbeb19d1897a7873aa131bb3218381d6a2407", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addParam(Parameter param)", "signatureAfterChange": "     public void addParam(Parameter param)", "diff": ["-        params.setProperty(param.getName(), param.getValue());", "+        params.addElement(param);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc20deff0c72f31147ee98a9169ada5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "commitAfterChange": "43cbdfc52cca75f3089c7494d99b91cb9d562fc0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "signatureAfterChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "diff": ["-        final TaskContext context = new DefaultTaskContext( m_baseContext );", "-        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-", "+        // Create and configure the context", "+        final DefaultTaskContext context =", "+            new DefaultTaskContext( m_baseContext, componentManager );", "+        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+", "-            frame.compose( componentManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb491bdcd9d1f12f51f8b214c61ef2ca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSDocumentType.java", "commitBeforeChange": "405db5ebc65b2d89985d03b4882ca6c6c18b8375", "commitAfterChange": "e4685119643a984752eb3f38cc49aea53ba401b1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public void attributeDecl (             String\t\telementName,             String\t\tattributeName,             String\t\tattributeType,             String\t\toptions [],             String\t\tdefaultValue,             boolean\t\tisFixed,             boolean\t\tisRequired         ) throws SAXException", "signatureAfterChange": "         public void attributeDecl (             String\t\telementName,             String\t\tattributeName,             String\t\tattributeType,             String\t\toptions [],             String\t\tdefaultValue,             boolean\t\tisFixed,             boolean\t\tisRequired         ) throws SAXException", "diff": ["-            e.getMap().put(attrib.getName(), e);", "+            e.getAttributes().addAttribute(attrib);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea785f343300c26869de769b84fd9e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpRegexp.java", "commitBeforeChange": "f84c5e38fe245a6deb0776469cbb53e1afd1b186", "commitAfterChange": "87fc3af5ca35cb833d143be5814d7ed31c0ca1dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public String substitute(String input, String argument, int options)         throws BuildException", "signatureAfterChange": "      public String substitute(String input, String argument, int options)         throws BuildException", "diff": ["-                        subst.append(\"$(\").append(value).append(\")\");", "+                        subst.append(\"$\").append(value);"]}]}