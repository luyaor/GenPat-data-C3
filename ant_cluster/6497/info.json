{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b02c0b6f6ea6938241ce17ac1622fb0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0428a88a8f41dfdaf797a566ff2524c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/TailFilter.java", "commitBeforeChange": "7b8d582ad0c4a47e17fbb73773788608fddef0a0", "commitAfterChange": "87f806d3e4aba137d933f31a902197a19f96b7c4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final int read() throws IOException", "signatureAfterChange": "     public final int read() throws IOException", "diff": ["-                if (ignoreLineFeed) {", "-                    if (ch == '\\n') {", "-                        ch = in.read();", "-                    }", "-                    ignoreLineFeed = false;", "-                }", "+                if (ch == '\\n') {", "+                    ++linesRead;", "-                switch (ch) {", "-                    case '\\r':", "-                        ch = '\\n';", "-                        ignoreLineFeed = true;", "-                        //fall through", "-                    case '\\n':", "-                        linesRead++;", "-", "-                        if (linesRead == lines + 1) {", "-                            int i = 0;", "-                            for (i = returnedCharPos + 1; buffer[i] != '\\n'; i++) {", "-                            }", "-                            returnedCharPos = i;", "-                            linesRead--;", "+                    if (linesRead == lines) {", "+                        int i = 0;", "+                        for (i = returnedCharPos + 1; buffer[i] != '\\n'; i++) {", "-                        break;", "-                }", "-                if (ch == -1) {", "+                        returnedCharPos = i;", "+                        --linesRead;", "+                    }", "+                } else if (ch == -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4e71f26e520e08d9f81121b5ef8b97", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["-        long off = archive.length() - MIN_EOCD_SIZE;", "-        archive.seek(off);", "-        byte[] sig = ZipOutputStream.EOCD_SIG;", "-        int curr = archive.read();", "-        while (curr != -1) {", "-            if (curr == sig[0]) {", "-                curr = archive.read();", "-                if (curr == sig[1]) {", "+        long off = archive.length() - MIN_EOCD_SIZE;", "+        if (off >= 0) {", "+            archive.seek(off);", "+            byte[] sig = ZipOutputStream.EOCD_SIG;", "+            int curr = archive.read();", "+            while (curr != -1) {", "+                if (curr == sig[0]) {", "-                    if (curr == sig[2]) {", "+                    if (curr == sig[1]) {", "-                        if (curr == sig[3]) {", "-                            found = true;", "-                            break;", "+                        if (curr == sig[2]) {", "+                            curr = archive.read();", "+                            if (curr == sig[3]) {", "+                                found = true;", "+                                break;", "+                            }", "+                archive.seek(--off);", "+                curr = archive.read();", "-            archive.seek(--off);", "-            curr = archive.read();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba802665d006c8e7dd77cd0765dbd17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "          private Reader getReader() throws IOException", "signatureAfterChange": "          private Reader getReader() throws IOException", "diff": ["-            if (reader == null) {", "-                log(\"Concating file \" + sourceFiles.elementAt(pos),", "-                    Project.MSG_VERBOSE);", "-                if (encoding == null) {", "-                    reader = new BufferedReader(", "-                        new FileReader((File) sourceFiles.elementAt(pos)));", "-                } else {", "-                    // invoke the zoo of io readers", "-                    reader = new BufferedReader(", "-                        new InputStreamReader(", "-                            new FileInputStream(", "-                                (File) sourceFiles.elementAt(pos)),", "-                            encoding));", "-                }", "-                for (int i = 0; i < lastChars.length; ++i) {", "-                    lastChars[i] = 0;", "-                }", "+            if (reader == null && i.hasNext()) {", "+                Resource r = (Resource) i.next();", "+                log(\"Concating \" + r.toLongString(), Project.MSG_VERBOSE);", "+                InputStream is = r.getInputStream();", "+                reader = new BufferedReader(encoding == null", "+                    ? new InputStreamReader(is)", "+                    : new InputStreamReader(is, encoding));", "+                Arrays.fill(lastChars, (char) 0);", "+        }"]}]}