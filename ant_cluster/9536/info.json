{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f8849eac9365e51cbd9c4b46d348999", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4750c504c6e1d9d31d60a5d726e88b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "     private static BuildException makeCircularException(String end, Stack stk)", "signatureAfterChange": "     private static BuildException makeCircularException(String end, Stack<String> stk)", "diff": ["-    private static BuildException makeCircularException(String end, Stack stk) {", "-        StringBuffer sb = new StringBuffer(\"Circular dependency: \");", "+    private static BuildException makeCircularException(String end, Stack<String> stk) {", "+        final StringBuilder sb = new StringBuilder(\"Circular dependency: \");", "-            c = (String) stk.pop();", "+            c = stk.pop();", "-        return new BuildException(new String(sb));", "+        return new BuildException(sb.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f4ea41b79ce93134e586ea7fea03a11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/bytecode/MethodInfo.java", "commitBeforeChange": "08f1fb49e458c04980a50ea10f6a6ad441923907", "commitAfterChange": "c1b263f4737e2ffcbe70fecb82b7c2ffea17e5bd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-\t", "-\tpublic String toString(){", "-\t\tStringBuffer sb = new StringBuffer();", "-\t\tsb.append(\"Method: \").append(getAccess()).append(\" \");", "-\t\tsb.append(getFullSignature());", "-\t\tsb.append(\" synthetic:\").append(synthetic);", "-\t\tsb.append(\" deprecated:\").append(deprecated);", "-\t\treturn sb.toString();", "-\t}", "+", "+    public String toString() {", "+        StringBuffer sb = new StringBuffer();", "+        sb.append(\"Method: \").append(getAccess()).append(\" \");", "+        sb.append(getFullSignature());", "+        return sb.toString();", "+    }"]}]}