{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a3bc724e7e715a8aa54089bc991cd6d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e78f908a3863eb9aa0ce191d8ba7f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "aae6a87238f255f5599bd1a559c1da34767e8716", "commitAfterChange": "296f7cecd0347b79f837be45c671e0fa9054f402", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 47, "signatureBeforeChange": "         public Process exec(Project project, String[] cmd, String[] env)             throws IOException", "signatureAfterChange": "         public Process exec(Project project, String[] cmd, String[] env)             throws IOException", "diff": ["-            String[] vmsCmd = {createCommandFile(cmd, env).getPath()};", "-            return super.exec(project, vmsCmd, env);", "+            File cmdFile = createCommandFile(cmd, env);", "+            Process p", "+                = super.exec(project, new String[] {cmdFile.getPath()}, env);", "+            deleteAfter(cmdFile, p);", "+            return p;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b31416c289a58e4c54c5ad37800c50ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "aae6a87238f255f5599bd1a559c1da34767e8716", "commitAfterChange": "296f7cecd0347b79f837be45c671e0fa9054f402", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 48, "signatureBeforeChange": "         public Process exec(Project project, String[] cmd, String[] env,                             File workingDir) throws IOException", "signatureAfterChange": "         public Process exec(Project project, String[] cmd, String[] env,                             File workingDir) throws IOException", "diff": ["-            String[] vmsCmd = {createCommandFile(cmd, env).getPath()};", "-            return super.exec(project, vmsCmd, env, workingDir);", "+            File cmdFile = createCommandFile(cmd, env);", "+            Process p = super.exec(project, new String[] {cmdFile.getPath()},", "+                                   env, workingDir);", "+            deleteAfter(cmdFile, p);", "+            return p;"]}]}