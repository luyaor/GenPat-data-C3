{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2378918c0c25471017f6b488fee556aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a20878b9690ce053795b10d7f263c336", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testPseudoTahoeRefid()", "signatureAfterChange": "      @Test     public void testPseudoTahoeRefid()", "diff": ["+    @Test", "-        if (!RegexpMatcherFactory.regexpMatcherPresent(project)) {", "-            System.out.println(\"Test 'testPseudoTahoeRefid' skipped because no regexp matcher is present.\");", "-            return;", "-        }", "-        executeTarget(\"test-pseudo-tahoe-refid\");", "-        assertPropertyEquals(\"jar.classpath\", \"classes/dsp-core/ \" +", "+        Assume.assumeTrue(\"No regexp matcher is present\", RegexpMatcherFactory.regexpMatcherPresent(buildRule.getProject()));", "+        ", "+        buildRule.executeTarget(\"test-pseudo-tahoe-refid\");", "+        assertEquals(buildRule.getProject().getProperty(\"jar.classpath\"), \"classes/dsp-core/ \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c486d759d72874395307e3ce35dc7e33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testPseudoTahoeNested()", "signatureAfterChange": "      @Test     public void testPseudoTahoeNested()", "diff": ["+    @Test", "-        if (!RegexpMatcherFactory.regexpMatcherPresent(project)) {", "-            System.out.println(\"Test 'testPseudoTahoeNested' skipped because no regexp matcher is present.\");", "-            return;", "-        }", "-        executeTarget(\"test-pseudo-tahoe-nested\");", "-        assertPropertyEquals(\"jar.classpath\", \"classes/dsp-core/ \" +", "+    \tAssume.assumeTrue(\"No regexp matcher is present\", RegexpMatcherFactory.regexpMatcherPresent(buildRule.getProject()));", "+        ", "+    \tbuildRule.executeTarget(\"test-pseudo-tahoe-nested\");", "+        assertEquals(buildRule.getProject().getProperty(\"jar.classpath\"), \"classes/dsp-core/ \" +"]}]}