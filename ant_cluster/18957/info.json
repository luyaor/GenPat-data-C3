{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "529784d45f2d5d6257b76ce1b43ee2c1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77dd46e0e6aac68b845345567f0f97c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void endBlock()", "signatureAfterChange": "      private void endBlock() throws IOException", "diff": ["+    private void endBlock() throws IOException {", "+        this.computedBlockCRC = this.crc.getFinalCRC();", "+", "+        // A bad CRC is considered a fatal error.", "+        if (this.storedBlockCRC != this.computedBlockCRC) {", "+            // make next blocks readable without error", "+            // (repair feature, not yet documented, not tested)", "+            this.computedCombinedCRC", "+                = (this.storedCombinedCRC << 1)", "+                | (this.storedCombinedCRC >>> 31);", "+            this.computedCombinedCRC ^= this.storedBlockCRC;", "+", "+            reportCRCError();", "+        this.computedCombinedCRC", "+            = (this.computedCombinedCRC << 1)", "+            | (this.computedCombinedCRC >>> 31);", "+        this.computedCombinedCRC ^= this.computedBlockCRC;", "-", "-    private void endBlock() {", "-        computedBlockCRC = mCrc.getFinalCRC();", "-        /* A bad CRC is considered a fatal error. */", "-        if (storedBlockCRC != computedBlockCRC) {", "-            crcError();", "-        }", "-", "-        computedCombinedCRC = (computedCombinedCRC << 1)", "-            | (computedCombinedCRC >>> 31);", "-        computedCombinedCRC ^= computedBlockCRC;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba23e04796d5f1e43839e16fcbe5ad2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void initialize()", "signatureAfterChange": "      private void init() throws IOException", "diff": ["+", "+    private void init() throws IOException {", "+        int magic2 = this.in.read();", "+        if (magic2 != 'h') {", "+            throw new IOException(\"Stream is not BZip2 formatted: expected 'h'\"", "+                                  + \" as first byte but got '\" + (char) magic2", "+                                  + \"'\");", "+        }", "+", "+        int blockSize = this.in.read();", "+        if ((blockSize < '1') || (blockSize > '9')) {", "+            throw new IOException(\"Stream is not BZip2 formatted: illegal \"", "+                                  + \"blocksize \" + (char) blockSize);", "+        }", "+", "+        this.blockSize100k = blockSize - '0';", "+", "-    private void initialize() {", "-        char magic3, magic4;", "-        magic3 = bsGetUChar();", "-        magic4 = bsGetUChar();", "-        if (magic3 != 'h' || magic4 < '1' || magic4 > '9') {", "-            bsFinishedWithStream();", "-            streamEnd = true;", "-            return;", "-        setDecompressStructureSizes(magic4 - '0');", "-        computedCombinedCRC = 0;"]}]}