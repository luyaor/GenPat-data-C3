{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c567a4b919ae6cfd1e016d57b584483", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db38be69c1a2fae01cc0115af78573bf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testBadNoClassPath()", "signatureAfterChange": "  \t@Test     public void testBadNoClassPath()", "diff": ["+\t@Test", "-        expectBuildExceptionContaining(\"test-bad-no-classpath\", \"no-classpath\",", "-                                       \"Missing nested <classpath>!\");", "-        assertPropertyUnset(\"jar.classpath\");", "+\t\ttry {", "+\t\t\tbuildRule.executeTarget(\"test-bad-no-classpath\");", "+\t\t\tfail(\"Build exception should have been thrown on no classpath\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"Missing nested <classpath>!\", ex.getMessage());", "+\t\t}", "+        assertNull(buildRule.getProject().getProperty(\"jar.classpath\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "febe514ac67467219a99569bb2492e0a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testParentLevel2TooDeep()", "signatureAfterChange": "  \t@Test     public void testParentLevel2TooDeep()", "diff": ["+\t@Test", "-        expectBuildExceptionContaining(\"test-parent-level2-too-deep\", \"nopath\",", "-                                       \"No suitable relative path from \");", "-        assertPropertyUnset(\"jar.classpath\");", "+\t\ttry {", "+\t\t\tbuildRule.executeTarget(\"test-parent-level2-too-deep\");", "+\t\t\tfail(\"Build exception should have been thrown on no suitable path\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"No suitable relative path from \", ex.getMessage());", "+\t\t}", "+        assertNull(buildRule.getProject().getProperty(\"jar.classpath\"));"]}]}