{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dd067ffb31ae6ac11f07bdbfad7a8c7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ef652d7874707c4bda504001f88985", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/SourceFileScanner.java", "commitBeforeChange": "03820a820668350f37daf1a5d4becc06d5f2588b", "commitAfterChange": "361eba435593bd43a91322b315136e511eb34cfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String[] restrict(String[] files, File srcDir, File destDir,                              FileNameMapper mapper)", "signatureAfterChange": "     public String[] restrict(String[] files, File srcDir, File destDir,                              FileNameMapper mapper)", "diff": ["-            File src = null;", "-            if (srcDir == null) {", "-                src = new File(files[i]);", "-            } else {", "-                src = fileUtils.resolveFile(srcDir, files[i]);", "-            }", "+            File src = fileUtils.resolveFile(srcDir, files[i]);", "-                File dest = null;", "-                if (destDir == null) {", "-                    dest = new File(targets[j]);", "-                } else {", "-                    dest = fileUtils.resolveFile(destDir, targets[j]);", "-                }", "+                File dest = fileUtils.resolveFile(destDir, targets[j]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c7dac04953d7d0cb9c084a9f2a800b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-            if (filesets != null && filesets.size() > 0) {", "+            if (resources != null) {", "-                    + \" is incompatible with the file length function\");", "+                    + \" is incompatible with the file/resource length function\");", "-        } else if (filesets != null) {", "+        } else if (resources != null) {", "-                    + \" file length function: \\\"\" + mode + \"\\\"\");", "+                    + \" file/resource length function: \\\"\" + mode + \"\\\"\");", "-                + \" nested filesets\");", "+                + \" nested resource collections\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae8638703510f72795b51f63aef4950a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["-                    srcLastModified = new File(srcFiles[i]).lastModified();", "+                    File src = fileUtils.resolveFile(ds.getBasedir(), srcFiles[j]);", "+                    srcLastModified = src.lastModified();", "-                        BufferedWriter out ", "+                        BufferedWriter out", "-                        FileInputStream fis = new FileInputStream(srcFiles[j]);", "-                        BufferedReader in ", "+                        FileInputStream fis = new FileInputStream(src);", "+                        BufferedReader in"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e335c3b6c64d990a63c8b64a0385009f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "5c2af90369a64d60eaaca8c1a47176fc42747256", "commitAfterChange": "fdc903238f666ea1f4f60385d40463c8ca3494d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["+     */", "-                               String entryName,", "-                               Date entryDate, boolean isDirectory)", "+                               String entryName, Date entryDate,", "+                               boolean isDirectory, FileNameMapper mapper)", "-        File f = fileUtils.resolveFile(dir, entryName);", "+        String[] mappedNames = mapper.mapFileName(entryName);", "+        if (mappedNames == null || mappedNames.length == 0) {", "+            mappedNames = new String[] { entryName };", "+        }", "+        File f = fileUtils.resolveFile(dir, mappedNames[0]);"]}]}