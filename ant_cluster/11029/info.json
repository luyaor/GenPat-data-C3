{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "936367d0a0105898f314bf28c13ddd55", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afbb4d70ef5f6836bdacc816bb633f6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "cde826c2b0d226773ff00407365ac581b3e7c9e0", "commitAfterChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static boolean match(String pattern, String str,                                 boolean isCaseSensitive)", "signatureAfterChange": "     public static boolean match(String pattern, String str,                                 boolean caseSensitive)", "diff": ["-                                boolean isCaseSensitive) {", "+                                boolean caseSensitive) {", "-                    if (isCaseSensitive && ch != strArr[i]) {", "+                    if (different(caseSensitive, ch, strArr[i])) {", "-                    }", "-                    if (!isCaseSensitive && Character.toUpperCase(ch)", "-                            != Character.toUpperCase(strArr[i])) {", "-                        return false;  // Character mismatch", "-        while ((ch = patArr[patIdxStart]) != '*' && strIdxStart <= strIdxEnd) {", "+        while (true) {", "+            ch = patArr[patIdxStart];", "+            if (ch == '*' || strIdxStart > strIdxEnd) {", "+                break;", "+            }", "-                if (isCaseSensitive && ch != strArr[strIdxStart]) {", "-                    return false; // Character mismatch", "-                }", "-                if (!isCaseSensitive && Character.toUpperCase(ch)", "-                        != Character.toUpperCase(strArr[strIdxStart])) {", "+                if (different(caseSensitive, ch, strArr[strIdxStart])) {", "-            for (int i = patIdxStart; i <= patIdxEnd; i++) {", "-                if (patArr[i] != '*') {", "-                    return false;", "-                }", "-            }", "-            return true;", "+            return allStars(patArr, patIdxStart, patIdxEnd);", "-        while ((ch = patArr[patIdxEnd]) != '*' && strIdxStart <= strIdxEnd) {", "+        while (true) {", "+            ch = patArr[patIdxEnd];", "+            if (ch == '*' || strIdxStart > strIdxEnd) {", "+                break;", "+            }", "-                if (isCaseSensitive && ch != strArr[strIdxEnd]) {", "-                    return false; // Character mismatch", "-                }", "-                if (!isCaseSensitive && Character.toUpperCase(ch)", "-                        != Character.toUpperCase(strArr[strIdxEnd])) {", "+                if (different(caseSensitive, ch, strArr[strIdxEnd])) {", "-            for (int i = patIdxStart; i <= patIdxEnd; i++) {", "-                if (patArr[i] != '*') {", "-                    return false;", "-                }", "-            }", "-            return true;", "+            return allStars(patArr, patIdxStart, patIdxEnd);", "-                        if (isCaseSensitive && ch != strArr[strIdxStart + i", "-                                + j]) {", "-                            continue strLoop;", "-                        }", "-                        if (!isCaseSensitive", "-                            && Character.toUpperCase(ch)", "-                                != Character.toUpperCase(strArr[strIdxStart + i + j])) {", "+                        if (different(caseSensitive, ch,", "+                                      strArr[strIdxStart + i + j])) {", "-        for (int i = patIdxStart; i <= patIdxEnd; i++) {", "-            if (patArr[i] != '*') {", "+        return allStars(patArr, patIdxStart, patIdxEnd);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94d8adf0ae6aedaf65992c666ed7c43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected static boolean match(String pattern, String str)", "signatureAfterChange": "     protected static boolean match(String pattern, String str, boolean isCaseSensitive)", "diff": ["+     */", "+    protected static boolean match(String pattern, String str, boolean isCaseSensitive) {", "-                if (ch != '?' && ch != strArr[i]) {", "-                    return false; // Character mismatch", "+                if (ch != '?') {", "+                    if (isCaseSensitive && ch != strArr[i]) {", "+                        return false;// Character mismatch", "+                    }", "+                    if (!isCaseSensitive && Character.toUpperCase(ch) !=", "+                        Character.toUpperCase(strArr[i])) {", "+                        return false; // Character mismatch", "+                    }", "-", "+        ", "-            if (ch != '?' && ch != strArr[strIdxStart]) {", "-                return false;", "+            if (ch != '?') {", "+                if (isCaseSensitive && ch != strArr[strIdxStart]) {", "+                    return false;// Character mismatch", "+                }", "+                if (!isCaseSensitive && Character.toUpperCase(ch) !=", "+                    Character.toUpperCase(strArr[strIdxStart])) {", "+                    return false;// Character mismatch", "+                }", "-            if (ch != '?' && ch != strArr[strIdxEnd]) {", "-                return false;", "+            if (ch != '?') {", "+                if (isCaseSensitive && ch != strArr[strIdxEnd]) {", "+                    return false;// Character mismatch", "+                }", "+                if (!isCaseSensitive && Character.toUpperCase(ch) !=", "+                    Character.toUpperCase(strArr[strIdxEnd])) {", "+                    return false;// Character mismatch", "+                }", "-strLoop:", "+            strLoop:", "-                    if (ch != '?' && ch != strArr[strIdxStart+i+j]) {", "-                        continue strLoop;", "+                    if (ch != '?') {", "+                        if (isCaseSensitive && ch != strArr[strIdxStart+i+j]) {", "+                            continue strLoop;", "+                        }", "+                        if (!isCaseSensitive && Character.toUpperCase(ch) !=", "+                            Character.toUpperCase(strArr[strIdxStart+i+j])) {", "+                            continue strLoop;", "+                        }"]}]}