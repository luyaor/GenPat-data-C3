{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4c35ac5b1658c8b9431ef1c40851ce7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09542e883dd73af11bdf8b6165f2c931", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1c5c68f3ed2854776e2377bf5486caadc8ecc5b8", "commitAfterChange": "f665a4d33564ecc12851996978a9847024643829", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setExtra(byte[] extra) throws RuntimeException", "signatureAfterChange": "     public void setExtra(byte[] extra) throws RuntimeException", "diff": ["-            ZipExtraField[] local = ExtraFieldUtils.parse(extra, true);", "+            ZipExtraField[] local =", "+                ExtraFieldUtils.parse(extra, true,", "+                                      ExtraFieldUtils.UnparseableExtraField.READ);", "-            throw new RuntimeException(e.getMessage(), e);", "+            // actually this is not be possible as of Ant 1.8.1", "+            throw new RuntimeException(\"Error parsing extra fields for entry: \"", "+                                       + getName() + \" - \" + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f3f13197cff7830dc3c9ce8dccc825", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "8d3002cf8ab1b9f87d38b0b4e5682d15ffb7002a", "commitAfterChange": "9c51b355f7e7c16c5466e43b59019cad49a1fe56", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-", "-        if (getSourcespath() == null) {", "-            throw new BuildException(\"Missing Sourcepath required argument\");", "+        if (getSourcespath() == null && getClassespath() == null) {", "+            throw new BuildException(\"Missing classespath required argument\");", "+        } else if (getClassespath() == null) {", "+            String msg =", "+                \"sourcespath is deprecated in JDepend >= 2.5 \"", "+                + \"- please convert to classespath\";", "+            log(msg);", "+        //boolean wasKilled = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "114716703e5fdcf308e6ed593e515860", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "c32873b51961cb99f47b4ae6da2922b7b46a6f89", "commitAfterChange": "c437e0d2a0833a49114fa69e746b5f5ee9ed7d8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"replace token must not be null\");", "+            throw new BuildException(\"replace token must not be null\", location);", "-            throw new BuildException(\"Either the file or the dir attribute must be specified\");", "+            throw new BuildException(\"Either the file or the dir attribute must be specified\", location);", "-        log(\"Replacing \" + token + \" --> \" + value);", "+        log(\"Replacing \" + token.getText() + \" --> \" + value.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cba23e70c3dc314ac24252e402676a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/testing/Funtest.java", "commitBeforeChange": "f47e4095c872219cfb2054556307c5c12cbb2b81", "commitAfterChange": "393f5d34fa69854fd4eaa2126426b8a218654f5e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void processExceptions()", "signatureAfterChange": "     protected void processExceptions()", "diff": ["-                log(\"Application Exception:\" + applicationException.toString(),", "-                        applicationException,", "-                        Project.MSG_WARN);", "+                ignoringThrowable(APPLICATION_EXCEPTION, applicationException);", "-                log(\"teardown exception\" + teardownException.toString(),", "-                        teardownException,", "-                        Project.MSG_WARN);", "+                ignoringThrowable(TEARDOWN_EXCEPTION, teardownException);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240652d66424542858052ee0791c50e8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "427c2d293d2ae1e6fd446967a5936e948dfb647b", "commitAfterChange": "267492df5827611c5fa13f2ff35a05a8152e2664", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkConfiguration() throws BuildException", "diff": ["-            throw new BuildException(\"basedir attribute or at least one \"", "-                                     + \"nested filest is required!\",", "+            throw new BuildException(\"basedir attribute or one \"", "+                                     + \"nested fileset is required!\",", "+        }", "+        if (baseDir != null && filesets.size() > 0) {", "+            throw new BuildException(", "+                \"Both basedir attribute and a nested fileset is not allowed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25877e86e546a9b07a99e5e453280924", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         private void findNextResource()", "signatureAfterChange": "         private void findNextResource()", "diff": ["-            while ((this.pathElementsIndex < this.pathElements.length) &&", "+            while ((pathElementsIndex < pathComponents.size()) &&", "-                    File pathComponent = AntClassLoader.this.project.resolveFile(", "-                        (String)this.pathElements[this.pathElementsIndex]);", "+                    File pathComponent ", "+                        = (File)pathComponents.elementAt(pathElementsIndex);", "-                    this.pathElementsIndex++;", "+                    pathElementsIndex++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27369df5c0354fc28ac5804d7765c9f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/NetCommand.java", "commitBeforeChange": "41c047f603dc46b74b7058e2c1dd0d3001cd29ab", "commitAfterChange": "c1080f1b8a8469dc79a8f5f86b287544b0ad0b6b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void prepareExecutor() throws BuildException", "signatureAfterChange": "     protected void prepareExecutor()", "diff": ["-    protected void prepareExecutor() throws BuildException {", "+    protected void prepareExecutor() {", "-                                                          Project.MSG_INFO, Project.MSG_WARN);", "+                   Project.MSG_INFO, Project.MSG_WARN);", "-        /* do nothing with env variables. REVISIT: SDK command line?", "-           String[] environment = env.getVariables();", "-           exe.setEnvironment(environment);", "-        */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf906fdb4e2eb228be272d76ffa15bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "84fdd0cc565aa2db91474c9194802a910ed2d137", "commitAfterChange": "75e6369470cedcf9062ef95e3290fd027b2d1855", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()              throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["-        if (srcFile != null) {", "-            command.addArgument(srcFile.toString());", "+        if (srcFileName != null) {", "+            File srcFile = getProject().resolveFile(srcFileName);", "+            if (isMono) {", "+                // Mono 1.0's wsdl doesn't deal with absolute paths", "+                command.addArgument(srcFileName);", "+            } else {", "+                command.addArgument(srcFile.toString());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c70df551a3f9479518b51f55a45058", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0efc2f817257f69d7cdc67c016b1caac68465f1d", "commitAfterChange": "939a6bbf2fb97ec29ecf79c86013846656d8751c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void addText(Project project, Object element, String text)         throws BuildException", "signatureAfterChange": "     public void addText(Project project, Object element, String text)         throws BuildException", "diff": ["-            } else {", "-                // Not whitespace - fail", "-                String msg = project.getElementName(element)", "-                    + \" doesn't support nested text data (\\\"\"", "-                    + condenseText(text) + \"\\\").\";", "-                throw new BuildException(msg);", "+            // Not whitespace - fail", "+            throw new BuildException(project.getElementName(element)", "+                    + \" doesn't support nested text data (\\\"\" + condenseText(text) + \"\\\").\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ebbba306aa471ca7954a399ab94ad61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copyfile.java", "commitBeforeChange": "17fbe62a7d3180404fa527bcc568678870edb7e2", "commitAfterChange": "5c185694a7213b66471a0d2b03b1aaa0d5480b03", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        if (srcFile == null) {", "+            throw new BuildException(\"The src attribute must be present.\", location);", "+        }", "+        ", "+        if (!srcFile.exists()) {", "+            throw new BuildException(\"src \" + srcFile.toString()", "+                                     + \" does not exist.\", location);", "+        }", "+", "+        if (destFile == null) {", "+            throw new BuildException(\"The dest attribute must be present.\", location);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d5dfe83f68b002e67b244f934b2a68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "cef89916a4e6249472ae37937bdcf0efda71ad70", "commitAfterChange": "8ed3f9be41ae27a62b0b77994f073da327cb92da", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected void validate()              throws BuildException", "signatureAfterChange": "      protected void validate()              throws BuildException", "diff": ["+        if(destFile.isDirectory() ) {", "+            throw new BuildException(", "+                \"destination file is a directory\");", "+        }        ", "+        if(srcFile!=null) {", "+            if(!srcFile.exists() ) {", "+                throw new BuildException(", "+                    \"source file does not exist\");", "+            }", "+            if(srcFile.isDirectory() ) {", "+                throw new BuildException(", "+                    \"source file is a directory\");", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60974ff39136e24330d78671be9632a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/types/AntFilterReader.java", "commitBeforeChange": "0012fd272339fc0306a14bfe8b06bd632b8c501b", "commitAfterChange": "de1a987f23e027a486e6b07ddc8ab2edecd7dd3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public final void setClassName(final String className)", "signatureAfterChange": "      public final void setClassName(final String className)", "diff": ["+", "-        try {", "-            final Class c = Class.forName(className);", "-            if (FilterReader.class.isAssignableFrom(c)) {", "-                this.className = className;", "-            } else {", "-                throw new BuildException(className +", "-                    \" does not extend java.io.FilterReader\");", "-            }", "-        } catch (final ClassNotFoundException cnfe) {", "-            throw new BuildException(cnfe);", "-        }", "+        this.className = className;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cb60cf54efb421462b182eea19eb81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "5676d56eef22ec56b5f237570ec26efe1b02691d", "commitAfterChange": "66adfb896ce70338b71ba466c356a32a668113f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void handleResources(Handler h)", "signatureAfterChange": "      private void handleResources(Handler h)", "diff": ["-                log(r + \" does not exist\", Project.MSG_ERR);", "-            } else if (r.isDirectory()) {", "-                log(r + \" is a directory; length unspecified\",", "-                    Project.MSG_ERR);", "-            } else {", "-                h.handle(r);", "+                log(r + \" does not exist\", Project.MSG_WARN);", "+            if (r.isDirectory()) {", "+                log(r + \" is a directory; length may not be meaningful\", Project.MSG_WARN);", "+            }", "+            h.handle(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6136fa758227d98679bfe2d1e93e9025", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 33, "signatureBeforeChange": "      public void addConfiguredSection(Section section) throws ManifestException", "signatureAfterChange": "     public void addConfiguredSection(Section section)           throws ManifestException", "diff": ["-    public void addConfiguredSection(Section section) throws ManifestException {", "-        if (section.getName() == null) {", "+     */", "+    public void addConfiguredSection(Section section) ", "+         throws ManifestException {", "+        String sectionName = section.getName();", "+        if (sectionName == null) {", "-        sections.put(section.getName(), section);", "+        sections.put(sectionName, section);", "+        if (!sectionIndex.contains(sectionName)) {", "+            sectionIndex.addElement(sectionName);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc9f31d0ac616794f400765877ee560", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "30c0d31cc4e6eba6ffc9ead619b6f9f1d5181af3", "commitAfterChange": "813c2482279195999531f86dce204164523a071b", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 71, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkAttributes() throws BuildException", "diff": ["-    protected void checkConfiguration() throws BuildException {", "+    protected void checkAttributes() throws BuildException {", "+        }", "+        ", "+        if (this.isConfigurationSet) {", "+            try {", "+                Class.forName(\"org.apache.commons.net.ftp.FTPClientConfig\");", "+            } catch (ClassNotFoundException e) {", "+                throw new BuildException(", "+                 \"commons-net.jar >= 1.4.0 is required for at least one of the attributes specified.\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73c5ff9f93234457e70fa8aca8e40199", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Pack.java", "commitBeforeChange": "86ffd422467bec1d81ff85e58eb75d1e589cc95c", "commitAfterChange": "5e407c51a757b889049faa96156769872c829654", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void validate() throws BuildException", "signatureAfterChange": "     private void validate() throws BuildException", "diff": ["-        if (source == null) {", "-            throw new BuildException(\"src attribute is required\", getLocation());", "-        }", "-", "-        if (source.isDirectory()) {", "-            throw new BuildException(\"Src attribute must not \"", "-                                    + \"represent a directory!\", getLocation());", "+        if (getSrcResource() == null) {", "+            throw new BuildException(\"src attribute or nested resource is\"", "+                                     + \" required\", getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741f0c86c013d9b7b0774552ec71b88f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public void merge(Manifest other, boolean overwriteMain,                       boolean mergeClassPaths)          throws ManifestException", "signatureAfterChange": "     public void merge(Manifest other, boolean overwriteMain,                       boolean mergeClassPaths)          throws ManifestException", "diff": ["-             Enumeration e = other.getSectionNames();", "+             Enumeration<String> e = other.getSectionNames();", "-                 String sectionName = (String) e.nextElement();", "-                 Section ourSection = (Section) sections.get(sectionName);", "+                 String sectionName = e.nextElement();", "+                 Section ourSection = sections.get(sectionName);", "-                    = (Section) other.sections.get(sectionName);", "+                    = other.sections.get(sectionName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758d5600c847ae58a8d73ba34a578f3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "8a86b8228ff5523912422a5792c5788bc95ff228", "commitAfterChange": "3d67036913aeb416479a16d21f2792575f7b7202", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 50, "signatureBeforeChange": "     public void setOld(boolean b)", "signatureAfterChange": "     public void setOld(boolean b)", "diff": ["-        if (b) {", "-            if (javadoc1) {", "-                log(\"Javadoc 1.1 doesn't support the -1.1 switch\",", "-                    Project.MSG_WARN);", "-            } else if (javadoc4) {", "-                log(\"Javadoc 1.4 doesn't support the -1.1 switch anymore\",", "-                    Project.MSG_WARN);", "-            } else {", "-                cmd.createArgument().setValue(\"-1.1\");", "-            }", "-        }", "+        old = b;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7e881e60fadf1f667f2683d7c50ed1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "579a1f76bd6eff87405967c4fe523ffe4d9342bb", "commitAfterChange": "803fb00df9e066be53b6bca73efea6fe0d8a83ba", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public  void validate()", "signatureAfterChange": "         public  void validate()", "diff": ["+         */", "-            if(file!=null && !file.exists()) {", "-                throw new BuildException(ERROR_FILE_NOT_FOUND+file.toString());", "+            if(file!=null) {", "+                if (!file.exists()) {", "+                    throw new BuildException(ERROR_FILE_NOT_FOUND+file.toString());", "+                }", "+                if ( file.isDirectory() ) {", "+                    throw new BuildException(ERROR_FILE_IS_DIR+file.toString());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841c4e24cb1b43092bb6a2c4e2e6db51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "12e8a63e2f797fdfb28e9f30761669465cb033ee", "commitAfterChange": "f9121ee81e58e6cb4369a4e043e0a88cbfe3e503", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                throw new BuildException(\"srcdir attribute must be set\", ", "-                    location);", "+                throw new BuildException(\"srcdir attribute must be set\",", "+                                         getLocation());", "-                throw new BuildException(\"srcdir attribute must be non-empty\", ", "-                    location);", "+                throw new BuildException(\"srcdir attribute must be non-empty\",", "+                                         getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88eddab682a41915d251507d9e92b562", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "b5b99c769a21d3602ee35948cf004925f03464ba", "commitAfterChange": "25253f3faa839d0341bdfe9eecb06d8791fcf8ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public String apply( String elem )", "signatureAfterChange": "         public String apply( String elem )", "diff": ["-                throw new BuildException( \"Both 'from' and 'to' must be set in a map entry\" );", "+                throw new BuildException( \"Both 'from' and 'to' must be set \"", "+                                          + \"in a map entry\" );", "-            // If the element starts with the configured prefix, then convert the prefix", "-            // to the configured 'to' value.", "+            // If the element starts with the configured prefix, then", "+            // convert the prefix to the configured 'to' value."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1be9791557270666a9b8e3950b7c7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "ee2779b5b94b830a888590c16076952941290922", "commitAfterChange": "051ba1279d96c822e7708a348a4d7bc0393b89f9", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (!fs.getDir().isDirectory()) {", "-                handle(\"Directory does not exist:\" + fs.getDir());", "+            File fsDir = fs.getDir();", "+            if (fsDir == null) {", "+                throw new BuildException(", "+                        \"File or Resource without directory or file specified\");", "+            } else if (!fsDir.isDirectory()) {", "+                handle(\"Directory does not exist:\" + fsDir);", "-                    filesetDirs.add(new ReverseDirs(fs.getDir(), fs", "+                    filesetDirs.add(new ReverseDirs(fsDir, fs"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da78aa7e66d4260392a64e0ec83e2c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java", "commitBeforeChange": "48d3b4fe6a471872525de2f732af7b0766421e44", "commitAfterChange": "e85fe6ce604f538c5a91c5a47861980d42576bf0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void sendFileToRemote(File localFile,                                    InputStream in,                                    OutputStream out) throws IOException", "signatureAfterChange": "      private void sendFileToRemote(File localFile,                                    InputStream in,                                    OutputStream out) throws IOException", "diff": ["-            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());", "+            if (this.getVerbose()) {", "+                log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());", "+            }", "-            long endTime = System.currentTimeMillis();", "-            logStats(startTime, endTime, totalLength);", "+            if (this.getVerbose()) {", "+                long endTime = System.currentTimeMillis();", "+                logStats(startTime, endTime, totalLength);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97150bd54a3118b5a5ec081df362ba6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "commitAfterChange": "af0505dd8ad69538cef3c64f9674c27c1d1775fb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  public void read(BufferedReader reader) throws IOException", "signatureAfterChange": "                  public String read(BufferedReader reader) throws IOException", "diff": ["-        public void read(BufferedReader reader) throws IOException {", "+        public String read(BufferedReader reader) throws IOException {", "-                    return;", "+                    return null;", "-                    if (name == null && attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                        throw new IOException(\"The \" + ATTR_NAME + \" header may not occur in the main section \");", "+                    if (attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "+                        return attribute.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3eb37c59872df02626a58fc255847c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java", "commitBeforeChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "commitAfterChange": "3b349325f1e1f10b3c4616a1c7a3e9b4ec24c40b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void parseOutput(BufferedReader br) throws IOException", "signatureAfterChange": "     protected void parseOutput(BufferedReader br) throws IOException", "diff": ["+        final MAuditParser parser = new MAuditParser();", "-            processLine(line);", "-        }", "-    }", "+            final MAuditParser.Violation violation = parser.parseLine(line);", "+            if (violation != null) {", "+                addViolation(violation.file, violation);", "+            } else {", "+                // this doesn't match..report it as info, it could be", "+                // either the copyright, summary or a multiline message (damn !)", "+                task.log(line, Project.MSG_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab40e072ebd0ac03ab4737d77cce9567", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Javah.java", "commitBeforeChange": "d00b77dd77ead032390843335ce5810fe039c598", "commitAfterChange": "7eec24e3068d76fd1589274859008c9821acc739", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if ((cls == null) && (classes.size() == 0)) {", "+        if ((cls == null) && (classes.size() == 0) && (files.size() == 0)) {", "-        if ((cls != null) && (classes.size() > 0)) {", "-            throw new BuildException(\"set class attribute or class element, \"", "-                + \"not both.\", getLocation());", "+        if ((cls != null) && (classes.size() > 0) && (files.size() > 0)) {", "+            throw new BuildException(\"set class attribute OR class element OR fileset, \"", "+                + \"not 2 or more of them.\", getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0706925bbcc71de78c539b09d2074e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/script/org/apache/ant/antlib/script/ScriptBase.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ScriptException", "diff": ["-    public void execute() throws ExecutionException {", "+    public void execute() throws ScriptException {", "-            ", "+", "-            ", "+", "-            ", "+", "-            ", "+", "-                if (te instanceof ExecutionException) {", "-                    throw (ExecutionException) te;", "+                if (te instanceof ScriptException) {", "+                    throw (ScriptException) te;", "-            throw new ExecutionException(t);", "+            throw new ScriptException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bede536efc98f090f07b3460146eba9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "b719b19b85dff26de1653b8856936c0b99afe1ff", "commitAfterChange": "062217277c2cdf426144efb0151eb912ddcd96ab", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected static File getArchiveFile(File home) throws BuildException", "signatureAfterChange": "     protected static File getArchiveFile(File home) throws BuildException", "diff": ["+        return new File(home, ", "+                        ARCHIVE_LOCATIONS[getMajorVersionNumber(home) - 1]);", "+    }", "-        // javacc prior to 2.0", "-        File f = new File(home, \"JavaCC.zip\");", "-        if (f.exists()){", "-          return f;", "-        // javacc install 2.0+", "-        f = new File(home, \"bin/lib/JavaCC.zip\");", "-        if (f.exists()){", "-          return f;", "-        }", "-        throw new BuildException(\"Could not find a path to JavaCC.zip from '\" + home + \"'.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41313476cdc4433efbeaa93ca5e8ad3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "9c00060b74a8cb502ef8d94cbd380039ebdd4922", "commitAfterChange": "d15bd65fa56c200394f412f61bd6fbd6a42d8ec3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        Object currentSource = importStack.elementAt(importStack.size() - 1);", "-", "-        File buildFile = (File) currentSource;", "+", "+        if (getLocation() == null || getLocation().getFileName() == null) {", "+            throw new BuildException(\"Unable to get location of import task\");", "+        }", "+", "+        File buildFile = new File(getLocation().getFileName());", "+        importedFile = new File(getPath(importedFile));", "+", "-                \"\\nSkipped already imported file to avoid loop:\\n   \"", "+                \"Skipped already imported file:\\n   \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a12803c8effc8d92edd68cc6c28133", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "commitAfterChange": "3c96ebf5a37f8c1ba7e102bad6a696153c499e80", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            if (srcPath == null) {", "+                throw new BuildException(\"srcdir attribute must be set\", ", "+                    location);", "+            }", "+", "-                throw new BuildException(\"srcdir attribute must be set!\", ", "+                throw new BuildException(\"srcdir attribute must be non-empty\", ", "-                                if (classpathFile.lastModified() > info.absoluteFile.lastModified()) {", "+                                if (classpathFile.lastModified() ", "+                                    > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b577ac94147fcf5afa527010d8e6df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/Ilasm.java", "commitBeforeChange": "92f62e7eb8c10fe5aa19d817d6d9367dc59397e9", "commitAfterChange": "77ee46ba7a31a04ce8697925985e8f9f1a59d52e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void executeOneFile(String targetFile)              throws BuildException", "signatureAfterChange": "         public String[] getValues()", "diff": ["-    public void executeOneFile(String targetFile)", "-             throws BuildException {", "-        command.setFailOnError(getFailFailOnError());", "-        command.addArgument(targetFile);", "-        //now run the command of exe + settings + file", "-        command.runCommand();", "+    public static class TargetTypes extends EnumeratedAttribute {", "+        public String[] getValues() {", "+            return new String[]{", "+                \"exe\",", "+                \"library\",", "+            };", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e518b6af440bed038432571f6918ebb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/ScriptRunner.java", "commitBeforeChange": "c921aed139423ca20385db1fbce548c872e9d8bb", "commitAfterChange": "09ce03634e93c676d483b537b8e00e8f4b068e4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void throwBuildException(BSFException be)", "signatureAfterChange": "     private BuildException getBuildException(BSFException be)", "diff": ["-    private void throwBuildException(BSFException be) {", "+    private BuildException getBuildException(BSFException be) {", "-        if (te != null) {", "-            if  (te instanceof BuildException) {", "-                throw (BuildException) te;", "-            } else {", "-                t = te;", "-            }", "+        if (te instanceof BuildException) {", "+            return (BuildException) te;", "-        throw new BuildException(t);", "+        return new BuildException(te == null ? t : te);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f625617b1826e634591232bc01e970", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "e2cef5a7a31b6061ef94bdc7ada296f6e8d23794", "commitAfterChange": "231e1c4688ea592b2df75147d9f12906d9a14b73", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "signatureAfterChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "diff": ["-                if (isWindows) command.addArgument('\"'+REFERENCE_OPTION+file.toString()+'\"');", "-                else command.addArgument(REFERENCE_OPTION+file.toString());", "+                if (isWindows) {", "+                    command.addArgument(", "+                    '\"' + REFERENCE_OPTION + file.toString() + '\"');", "+                } else {", "+                    command.addArgument(REFERENCE_OPTION + file.toString());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f632f4a379d12e3fd476eef14984ba69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/SchemaValidate.java", "commitBeforeChange": "d51eb9c34fd2ceb50ebf5f7361579d1c8fb2a557", "commitAfterChange": "b69245c4223aa35cb2cc78726cc277cae45f0db4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void addSchema(SchemaLocation location)", "signatureAfterChange": "     public void addConfiguredSchema(SchemaLocation location)", "diff": ["-    public void addSchema(SchemaLocation location) {", "-        schemaLocations.add(location);", "+     */", "+    public void addConfiguredSchema(SchemaLocation location) {", "+        log(\"adding schema \"+location,Project.MSG_DEBUG);", "+        location.validateNamespace();", "+        SchemaLocation old=(SchemaLocation) schemaLocations.get(", "+                location.getNamespace());", "+        if(old!=null && !old.equals(location)) {", "+            throw new BuildException(ERROR_DUPLICATE_SCHEMA+location);", "+        }", "+        schemaLocations.put(location.getNamespace(), location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b931a3eb8b4440b982103c43719879", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "7587f42590ecc4016fc8c1e39b526f5c3d6e940d", "commitAfterChange": "6b9311408eb806b8a5d1b2a9f2f500df3a59e5b3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void spinThreads() throws BuildException", "signatureAfterChange": "     private void spinThreads() throws BuildException", "diff": ["+        firstExitStatus = null;", "-            throw new BuildException(exceptionMessage.toString(),", "-                                     firstLocation);", "+            if (firstExitStatus == null) {", "+                throw new BuildException(exceptionMessage.toString(),", "+                                         firstLocation);", "+            } else {", "+                throw new ExitStatusException(exceptionMessage.toString(),", "+                                              firstExitStatus, firstLocation);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e1c0795cf282f3231291e1df756a22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java", "commitBeforeChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "commitAfterChange": "24eb5693d6b7363262ea941cac63d15230aa1aab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void checkOptions() throws BuildException", "signatureAfterChange": "     protected void checkOptions() throws BuildException", "diff": ["-            throw new BuildException(\"'searchpath' element must be set when looking for 'unused' declarations.\");", "+            throw new BuildException(\"'searchpath' element must be set when \"", "+                + \"looking for 'unused' declarations.\");", "-            log(\"'searchpath' element ignored. 'unused' attribute is disabled.\", Project.MSG_WARN);", "+            log(\"'searchpath' element ignored. 'unused' attribute is disabled.\",", "+                Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fefd5da141d14403b42e8f993806b23c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "b18b40b1524d7c536ddef35aff1a8afd12fb0868", "commitAfterChange": "0dd985bc2a3584f478eebc7c1a25f24aa559f1ac", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     public void setLinkoffline(String src)", "signatureAfterChange": "     public void setLinkoffline(String src)", "diff": ["+            String linkOfflineError = \"The linkoffline attribute must include a URL and \" + ", "+                                      \"a package-list file location separated by a space\";", "+            if (src.trim().length() == 0) {", "+                throw new BuildException(linkOfflineError);", "+            }                ", "+", "+            if (!tok.hasMoreTokens()) {", "+                throw new BuildException(linkOfflineError);", "+            }                                        "]}]}