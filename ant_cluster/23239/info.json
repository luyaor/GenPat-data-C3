{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9b4f350c41a2b03b14ed8bc2ac27f12", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbfe8d50b63770ac725990634392f5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "b5ad58c4d736b7f0a97aaa78b258dcceb9c21c89", "commitAfterChange": "7435b27b914764c3845b4821363ffeb4ddfe89cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void setWorkingdir(File workingdir)", "signatureAfterChange": "     protected void generateOptionsFile(File tofile, String[] options) throws BuildException", "diff": ["-    public void setWorkingdir(File workingdir) {", "-        this.metaworkingdir = workingdir;", "-    }", "+     */", "+    protected void generateOptionsFile(File tofile, String[] options) throws BuildException {", "+        FileWriter fw = null;", "+        try {", "+            fw = new FileWriter(tofile);", "+            PrintWriter pw = new PrintWriter(fw);", "+            for (int i = 0; i < options.length; i++){", "+                pw.println( options[i] );", "+            }", "+            pw.flush();", "+        } catch (IOException e){", "+            throw new BuildException(\"Error while writing options file \" + tofile, e);", "+        } finally {", "+            if (fw != null){", "+                try {", "+                    fw.close();", "+                } catch (IOException ignored){}", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8f1d3509461bd70ebdac6a34782585", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/ReaderInputStreamTest.java", "commitBeforeChange": "a2752e8df2868053c731ac4e3b7a5a8015a2d080", "commitAfterChange": "d58a8ba786e48208fce9bf80b4940e9f124fd114", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r     public void notAtestSimple16() throws Exception", "signatureAfterChange": "\r \r     public void testSimpleAbc16() throws Exception", "diff": ["-    public void notAtestSimple16() throws Exception {\r", "+    public void testSimpleAbc16() throws Exception {\r", "-        compareBytes(\"abc\", \"utf-16\");\r", "+        //compareBytes(\"abc\", \"utf-16\");\r", "+        byte[] bytes = new byte[40];\r", "+        int pos = 0;\r", "+        ReaderInputStream r = new ReaderInputStream(\r", "+            new StringReader(\"abc\"), \"utf-16\");\r", "+        for (int i = 0; true; ++i) {\r", "+            int res = r.read();\r", "+            if (res == -1) {\r", "+                break;\r", "+            }\r", "+            bytes[pos++] = (byte) res;\r", "+        }\r", "+        bytes = \"abc\".getBytes(\"utf-16\");\r", "+        //        String n = new String(bytes, 0, pos, \"utf-16\");\r", "+        String n = new String(bytes, 0, bytes.length, \"utf-16\");\r", "+        System.out.println(n);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc87e58d85a4db20f417cfce14353f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/wizard/build/ProjectSetupStep.java", "commitBeforeChange": "f9ddec7b87382f81161818966776347a4809cd2e", "commitAfterChange": "18931f719f446825f75c6f7572698f0bf26370ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected void init()", "signatureAfterChange": "     protected void init()", "diff": ["+     */", "-        p = new JPanel(new GridBagLayout());", "-        p.setBorder(BorderFactory.createTitledBorder(", "-            getResources().getString(getID() + \".optionsLabel\")));", "+        p = new JPanel(null);", "+        p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));", "+        p.setBorder(BorderFactory.createCompoundBorder(", "+            BorderFactory.createTitledBorder(", "+                getResources().getString(getID() + \".optionsLabel\")),", "+            BorderFactory.createEmptyBorder(5, 10, 5, 10)));", "+        _selections = new JCheckBox[OPTIONS.length];", "+        for(int i = 0; i < OPTIONS.length; i++) {", "+            _selections[i] = new JCheckBox(", "+                getResources().getString(getID() + \".\" + OPTIONS[i] + \".label\"));", "+            _selections[i].setSelected(true);", "+            p.add(_selections[i]);", "+        }"]}]}