{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "214ee7391bb58e55b21a3523c6080046", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d3b3b4aab6e869bd8d43a3f46ebac92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void loadLib(String libLocation, boolean importAll,                         boolean autoImport)          throws ExecutionException", "signatureAfterChange": "     public void loadLib(String libLocation, boolean importAll,                         boolean autoImport)          throws ExecutionException", "diff": ["-            libManager.configLibraries(frame.getInitConfig(), librarySpecs,", "-                antLibraries, libPathsMap);", "+            Map newLibraries = libManager.configLibraries(frame.getInitConfig(),", "+                librarySpecs, antLibraries, libPathsMap);", "-            Iterator i = librarySpecs.keySet().iterator();", "+            antLibraries.putAll(newLibraries);", "+            Iterator i = antLibraries.keySet().iterator();", "-                boolean doAuto = autoImport ", "-                    && libraryId.startsWith(Constants.ANT_LIB_PREFIX);", "+                boolean doAuto = autoImport", "+                     && libraryId.startsWith(Constants.ANT_LIB_PREFIX);", "+                addAspects((AntLibrary) antLibraries.get(libraryId));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c312846070bfb65258dd5ab3af81b24f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void resolveLocalFileHeaderData()         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(Map entriesWithoutEFS)         throws IOException", "diff": ["-    private void resolveLocalFileHeaderData()", "+    private void resolveLocalFileHeaderData(Map entriesWithoutEFS)", "+", "+            if (entriesWithoutEFS.containsKey(ze)) {", "+                setNameAndCommentFromExtraFields(ze,", "+                                                 (NameAndComment)", "+                                                 entriesWithoutEFS.get(ze));", "+            }"]}]}