{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d8c4b82084bf78feae2c86524984cc5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfce2678d5ad7b5682658c20fb298f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     protected static Set getDelegateInterfaces(Delegate d)", "signatureAfterChange": "     protected static Set<Class<? extends Delegate>> getDelegateInterfaces(Delegate d)", "diff": ["-    protected static Set getDelegateInterfaces(Delegate d) {", "-        HashSet result = new HashSet();", "-        Class c = d.getClass();", "+    protected static Set<Class<? extends Delegate>> getDelegateInterfaces(Delegate d) {", "+        final HashSet<Class<? extends Delegate>> result = new HashSet<Class<? extends Delegate>>();", "+        Class<?> c = d.getClass();", "-            Class[] ifs = c.getInterfaces();", "+            Class<?>[] ifs = c.getInterfaces();", "-                    result.add(ifs[i]);", "+                    @SuppressWarnings(\"unchecked\")", "+                    final Class<? extends Delegate> delegateInterface = (Class<? extends Delegate>) ifs[i];", "+                    result.add(delegateInterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909293dd0fb7a46716fc302c4b7a4daa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/DataType.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected Object getCheckedRef(final Class requiredClass,                                    final String dataTypeName, final Project project)", "signatureAfterChange": "     protected <T> T getCheckedRef(final Class<T> requiredClass,                                    final String dataTypeName, final Project project)", "diff": ["-    protected Object getCheckedRef(final Class requiredClass,", "+    protected <T> T getCheckedRef(final Class<T> requiredClass,", "-        return o;", "+        @SuppressWarnings(\"unchecked\")", "+        final T result = (T) o;", "+        return result;"]}]}