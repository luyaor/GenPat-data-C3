{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a55af2fea75c1e21a00e85d85861c94f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec4b9090c8204df3155f9892f97956f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "537a07b019e2de8769ae71acad23e90e725050f8", "commitAfterChange": "0e650797a55ba63d32831b2b77e809554e31bcd2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void createFolders(File file) throws IOException, ParseException", "signatureAfterChange": "     private void createFolders(File file) throws IOException, ParseException", "diff": ["-        MessageFormat mf = new MessageFormat(\"{0}({1})\");", "+        MessageFormat mf = new MessageFormat(\"{0}-arc({1})\");", "-            if(line.startsWith(\"\\\"\")) {", "+            log(\"Considering \\\"\"+line+\"\\\"\", Project.MSG_VERBOSE);", "+            if(line.startsWith(\"\\\"\\\\\") || line.startsWith(\"\\\"/\")) {", "-                File dir = new File(f.substring(0,f.lastIndexOf(File.separator)));", "-                if(!dir.exists())", "-                    dir.mkdirs();", "+                int index = f.lastIndexOf(File.separator);", "+                if (index > -1) {", "+                    File dir = new File(f.substring(0, index));", "+                    if(!dir.exists()) {", "+                        log(\"Creating \"+dir.getAbsolutePath(), Project.MSG_VERBOSE);", "+                        if(dir.mkdirs()) {", "+                            log(\"Created \"+dir.getAbsolutePath(), Project.MSG_INFO);", "+                        } else {", "+                            log(\"Failed to create \"+dir.getAbsolutePath(), Project.MSG_INFO);", "+                        }", "+                    } else {", "+                        log(dir.getAbsolutePath() + \" exists. Skipping\", Project.MSG_VERBOSE);", "+                    }", "+                } else {", "+                    log(\"File separator problem with \" + line, ", "+                        Project.MSG_WARN);", "+                }", "+            } else {", "+                log(\"Skipped \\\"\"+line+\"\\\"\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa87eed9c8ff01232d8890b502e863f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "9174fbde3b63fde69fee83a681d22301f7aa7a02", "commitAfterChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 84, "signatureBeforeChange": "     protected void outputLog(String line, int messageLevel)", "signatureAfterChange": "         protected void processLine(String line, int messageLevel)", "diff": ["-    private String queuedLine = null;", "-    protected void outputLog(String line, int messageLevel) {", "-        if (messageLevel==project.MSG_INFO && line.startsWith(\"Generating \")) {", "-            if (queuedLine != null) {", "-                super.outputLog(queuedLine, Project.MSG_VERBOSE);", "+        private String queuedLine = null;", "+        protected void processLine(String line, int messageLevel) {", "+            if (messageLevel == Project.MSG_INFO && line.startsWith(\"Generating \")) {", "+                if (queuedLine != null) {", "+                    super.processLine(queuedLine, Project.MSG_VERBOSE);", "+                }", "+                queuedLine = line;", "+            } else {", "+                if (queuedLine != null) {", "+                    if (line.startsWith(\"Building \"))", "+                        super.processLine(queuedLine, Project.MSG_VERBOSE);", "+                    else", "+                        super.processLine(queuedLine, Project.MSG_INFO);", "+                    queuedLine = null;", "+                }", "+                super.processLine(line, messageLevel);", "-            queuedLine = line;", "-        } else {", "+        }", "-                if (line.startsWith(\"Building \"))", "-                    super.outputLog(queuedLine, Project.MSG_VERBOSE);", "-                else", "-                    super.outputLog(queuedLine, Project.MSG_INFO);", "-            super.outputLog(line, messageLevel);", "-    }"]}]}