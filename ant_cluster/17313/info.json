{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf424a5543b194d3e287b3e558845392", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e1078822921d957f86728de9ca9c1d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/ANTLR.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void validateAttributes()         throws TaskException", "signatureAfterChange": "      private void validateAttributes()         throws TaskException", "diff": ["-        if( target == null || !target.isFile() )", "+        if( m_target == null || !m_target.isFile() )", "-            throw new TaskException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + m_target );", "-        if( outputDirectory == null )", "+        if( m_outputDirectory == null )", "-            setOutputdirectory( new File( target.getParent() ) );", "+            m_outputDirectory = m_target.getParentFile();", "-        if( !outputDirectory.isDirectory() )", "+        if( !m_outputDirectory.isDirectory() )", "-            throw new TaskException( \"Invalid output directory: \" + outputDirectory );", "+            throw new TaskException( \"Invalid output directory: \" + m_outputDirectory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f34ae227ef6a04c4224c2d3258468d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "4d9b1cdf1f3b8f3fde53ae386e988b29b32be390", "commitAfterChange": "163e6b921c7a1808e143feb626537fae620ba1fa", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private boolean uptodate(ResourceCollection src, ResourceCollection target)", "signatureAfterChange": "      private boolean uptodate(ResourceCollection src, ResourceCollection target)", "diff": ["-        int neTargets = new NonExistent(targets).size();", "+        NonExistent missingTargets = new NonExistent(targets);", "+        int neTargets = missingTargets.size();", "+            logMissing(missingTargets, \"target\");", "-        log(oldestTarget + \" is oldest target file\", Project.MSG_VERBOSE);", "+        logWithModificationTime(oldestTarget, \"oldest target file\");", "-        int neSources = new NonExistent(sources).size();", "+        NonExistent missingSources = new NonExistent(sources);", "+        int neSources = missingSources.size();", "+            logMissing(missingSources, \"source\");", "-        log(newestSource.toLongString() + \" is newest source\", Project.MSG_VERBOSE);", "+        logWithModificationTime(newestSource, \"newest source\");"]}]}