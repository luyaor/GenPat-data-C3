{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33fd631c4c12ee98722ceee5eca50183", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f1b29bbddce32f0fa510979d9050ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "3e2cbab6ba443daf0abf6e02535fb6cc1df72e04", "commitAfterChange": "b33d33d754378862953b0243500d94eaaf983923", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void addPathFile(File pathComponent) throws IOException", "signatureAfterChange": "     protected void addPathFile(File pathComponent) throws IOException", "diff": ["-            ZipFile jarFile = null;", "-            InputStream manifestStream = null;", "+            JarFile jarFile = null;", "-                jarFile = new ZipFile(pathComponent);", "-                manifestStream = jarFile.getInputStream(new ZipEntry(\"META-INF/MANIFEST.MF\"));", "-", "-                if (manifestStream == null) {", "+                jarFile = new JarFile(pathComponent);", "+                Manifest manifest = jarFile.getManifest();", "+                if (manifest == null) {", "-                Reader manifestReader = new InputStreamReader(manifestStream, \"UTF-8\");", "-                org.apache.tools.ant.taskdefs.Manifest manifest", "-                        = new org.apache.tools.ant.taskdefs.Manifest(manifestReader);", "-                classpath = manifest.getMainSection().getAttributeValue(\"Class-Path\");", "-            } catch (org.apache.tools.ant.taskdefs.ManifestException e) {", "-                // ignore", "+                classpath = manifest.getMainAttributes()", "+                    .getValue(Attributes.Name.CLASS_PATH);", "-                FileUtils.close(manifestStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef525a90c745662d6536df2fce96b174", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/ClassConstants.java", "commitBeforeChange": "741e2cbbd7529bd6fd62a8885e4fe2ba91a55ee7", "commitAfterChange": "4f2c7ee53989389d3c8d85f259b811ed962a46f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final int read() throws IOException", "signatureAfterChange": "     public final int read() throws IOException", "diff": ["-            String clazz = readFully();", "+            final String clazz = readFully();", "-                byte[] bytes = clazz.getBytes();", "-                StringBuffer sb = new StringBuffer();", "-                ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "-                ClassParser parser = new ClassParser(bis, \"\");", "-                JavaClass javaClass = parser.parse();", "-                Field[] fields = javaClass.getFields();", "+                final byte[] bytes = clazz.getBytes();", "+                final StringBuffer sb = new StringBuffer();", "+                final ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "+                final ClassParser parser = new ClassParser(bis, \"\");", "+                final JavaClass javaClass = parser.parse();", "+                final Field[] fields = javaClass.getFields();", "-                    Field field = fields[i];", "+                    final Field field = fields[i];", "-                        ConstantValue cv = field.getConstantValue();", "+                        final ConstantValue cv = field.getConstantValue();"]}]}