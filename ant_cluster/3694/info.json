{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1920f6d3f3a2a322cebfa9ed0c560b00", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b2a66d2c2684dad1764234a506b84ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/AntAspect.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object preExecuteTask(Task task, AspectValueCollection aspectValues)          throws AntException", "signatureAfterChange": "     public Object preExecuteTask(Task task,                                  NamespaceValueCollection namespaceValues)          throws AntException", "diff": ["-    public Object preExecuteTask(Task task, AspectValueCollection aspectValues)", "+    public Object preExecuteTask(Task task,", "+                                 NamespaceValueCollection namespaceValues)", "-        Map antAspectValues = aspectValues.getAttributes(ANT_ASPECT);", "+        AttributeCollection antAspectValues", "+            = namespaceValues.getAttributes(Namespace.ANT_META_URI);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df481878faef1a4fd6e3596b620231b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java", "commitBeforeChange": "69d9b9a49622889f44d6792faf00f886857828d6", "commitAfterChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void executeTask(Task task) throws ExecutionException", "signatureAfterChange": "     public void executeTask(Task task) throws ExecutionException", "diff": ["-        frame.executeTask(task);", "+        ExecutionContext execContext = getTaskExecutionContext(task);", "+", "+        BuildElement model = execContext.getModel();", "+        AspectValueCollection aspectValues = null;", "+        if (model != null) {", "+            aspectValues = model.getAspectAttributes();", "+        }", "+        frame.executeTask(task, aspectValues);"]}]}