{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a76ddec7b21340eeb2f53efe2696dc04", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "660aad3923cc7db4765091fe2fc40c2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCheck.java", "commitBeforeChange": "d794c8efabe57b118c8b46c820d7b9244c73c5b3", "commitAfterChange": "98a9c95a45f2d1cf952691150a32422e7ef1ea67", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+", "+        if (file == null && filesets.size() == 0) {", "+            throw new BuildException(", "+                \"Specify at least one source - a file or a fileset.\");", "+        }", "+", "+        if (file != null && file.exists() && file.isDirectory()) {", "+            throw new BuildException(\"CCMCheck cannot be generated for directories\");", "+        }", "+        ", "+        if (file != null  && filesets.size() > 0) {", "+            throw new BuildException(\"Choose between file and fileset !\");", "+        }", "+", "+        if ( getFile() !=null ) {", "+            doit();", "+            return ;", "+        }", "+                        ", "+        int sizeofFileSet = filesets.size();", "+        for (int i = 0; i < sizeofFileSet; i++) {", "+            FileSet fs = (FileSet) filesets.elementAt(i);", "+            DirectoryScanner ds = fs.getDirectoryScanner(project);", "+            String[] srcFiles = ds.getIncludedFiles();", "+            for (int j = 0; j < srcFiles.length; j++) {", "+                File src = new File(fs.getDir(project), srcFiles[j]);", "+                setFile(src);", "+                doit();", "+            }", "+        }", "+    }", "-        int result = 0;", "-        // as specified in the CLEARTOOL.EXE help", "-", "-", "-        result = run(commandLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5767cc0654a3148f1b8b56a7a229c48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "4cf9ef09a97e2c53eacb9e629d8470ab856acc2c", "commitAfterChange": "ef830de68e452f5673aefdcd49f7de071a12e11a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["-        if (baseDir == null && filesets.size() == 0", "+        if (baseDir == null & resources.size() == 0", "-                                     + \"or at least \"", "-                                     + \"one fileset must be given!\");", "+                                     + \"or at least one \"", "+                                     + \"resource collection must be given!\");", "+        addingNewFiles = true;", "+", "-", "-        addingNewFiles = true;", "-                filesets.addElement(zf);", "+                add(zf);", "-        for (int i = 0; i < filesets.size(); i++) {", "-            FileSet fs = (FileSet) filesets.elementAt(i);", "-            vfss.addElement(fs);", "+        for (int i = 0; i < resources.size(); i++) {", "+            ResourceCollection rc = (ResourceCollection) resources.elementAt(i);", "+            vfss.addElement(rc);", "-        FileSet[] fss = new FileSet[vfss.size()];", "+        ResourceCollection[] fss = new ResourceCollection[vfss.size()];", "-                                             zipFile.getParentFile());", "+                                              zipFile.getParentFile());", "-                // Add the explicit filesets to the archive.", "+                // Add the explicit resource collections to the archive."]}]}