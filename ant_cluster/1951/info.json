{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b3266219d775ee7109ecba3197a5121", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7cf3424c59a854b9460ffc238530568", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(final Resource source, final Resource dest,                             final FilterSetCollection filters, final Vector filterChains,                             final boolean overwrite, final boolean preserveLastModified,                                     final boolean append,                                     final String inputEncoding, final String outputEncoding,                                     final Project project, final boolean force)         throws IOException", "diff": ["-    public static void copyResource(Resource source, Resource dest,", "-                            FilterSetCollection filters, Vector filterChains,", "-                            boolean overwrite, boolean preserveLastModified,", "-                                    boolean append,", "-                                    String inputEncoding, String outputEncoding,", "-                                    Project project, boolean force)", "+    public static void copyResource(final Resource source, final Resource dest,", "+                            final FilterSetCollection filters, final Vector filterChains,", "+                            final boolean overwrite, final boolean preserveLastModified,", "+                                    final boolean append,", "+                                    final String inputEncoding, final String outputEncoding,", "+                                    final Project project, final boolean force)", "-                File sourceFile =", "+                final File sourceFile =", "-                } catch (IOException ex) {", "+                } catch (final IOException ex) {", "-            Touchable t = dest.as(Touchable.class);", "+            final Touchable t = dest.as(Touchable.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3d4e1a583adf262e7d3e3f6a5865b49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private static void printTargets(Project project, boolean printSubTargets,             boolean printDependencies)", "signatureAfterChange": "     private static void printTargets(final Project project, boolean printSubTargets,             final boolean printDependencies)", "diff": ["-    private static void printTargets(Project project, boolean printSubTargets,", "-            boolean printDependencies) {", "+    private static void printTargets(final Project project, boolean printSubTargets,", "+            final boolean printDependencies) {", "-        Map<String, Target> ptargets = removeDuplicateTargets(project.getTargets());", "+        final Map<String, Target> ptargets = removeDuplicateTargets(project.getTargets());", "-        Vector<String> topNames = new Vector<String>();", "-        Vector<String> topDescriptions = new Vector<String>();", "-        Vector<Enumeration<String>> topDependencies = new Vector<Enumeration<String>>();", "-        Vector<String> subNames = new Vector<String>();", "-        Vector<Enumeration<String>> subDependencies = new Vector<Enumeration<String>>();", "+        final Vector<String> topNames = new Vector<String>();", "+        final Vector<String> topDescriptions = new Vector<String>();", "+        final Vector<Enumeration<String>> topDependencies = new Vector<Enumeration<String>>();", "+        final Vector<String> subNames = new Vector<String>();", "+        final Vector<Enumeration<String>> subDependencies = new Vector<Enumeration<String>>();", "-        for (Target currentTarget : ptargets.values()) {", "-            String targetName = currentTarget.getName();", "+        for (final Target currentTarget : ptargets.values()) {", "+            final String targetName = currentTarget.getName();", "-            String targetDescription = currentTarget.getDescription();", "+            final String targetDescription = currentTarget.getDescription();", "-                int pos = findTargetPosition(subNames, targetName);", "+                final int pos = findTargetPosition(subNames, targetName);", "-                int pos = findTargetPosition(topNames, targetName);", "+                final int pos = findTargetPosition(topNames, targetName);", "-        String defaultTarget = project.getDefaultTarget();", "+        final String defaultTarget = project.getDefaultTarget();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1633f0d1c6e4fa6a58af67d4e82297", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void createStreams()", "signatureAfterChange": "     public void createStreams()", "diff": ["-                OutputStream outputLog = new LogOutputStream(managingTask,", "+                final OutputStream outputLog = new LogOutputStream(managingTask,", "-                    LeadPipeInputStream snk = new LeadPipeInputStream();", "+                    final LeadPipeInputStream snk = new LeadPipeInputStream();", "-                        ChainReaderHelper helper = new ChainReaderHelper();", "+                        final ChainReaderHelper helper = new ChainReaderHelper();", "-                    Thread t = new Thread(threadGroup, new StreamPumper(", "+                    final Thread t = new Thread(threadGroup, new StreamPumper(", "-                } catch (IOException eyeOhEx) {", "+                } catch (final IOException eyeOhEx) {", "-                OutputStream errorLog = new LogOutputStream(managingTask,", "+                final OutputStream errorLog = new LogOutputStream(managingTask,", "-                    LeadPipeInputStream snk = new LeadPipeInputStream();", "+                    final LeadPipeInputStream snk = new LeadPipeInputStream();", "-                        ChainReaderHelper helper = new ChainReaderHelper();", "+                        final ChainReaderHelper helper = new ChainReaderHelper();", "-                    Thread t = new Thread(threadGroup, new StreamPumper(", "+                    final Thread t = new Thread(threadGroup, new StreamPumper(", "-                } catch (IOException eyeOhEx) {", "+                } catch (final IOException eyeOhEx) {", "-                } catch (IOException eyeOhEx) {", "+                } catch (final IOException eyeOhEx) {", "-                StringBuffer buf = new StringBuffer(\"Using input \");", "+                final StringBuffer buf = new StringBuffer(\"Using input \");", "-                ChainReaderHelper helper = new ChainReaderHelper();", "+                final ChainReaderHelper helper = new ChainReaderHelper();", "-                } catch (IOException eyeOhEx) {", "+                } catch (final IOException eyeOhEx) {"]}]}