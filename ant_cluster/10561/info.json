{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99750448528c63cb3e6318406f83812c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba8143baba861acb1b1a8cbbccc1482", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "b73026d50f2f0f71e50d1616649ff97fe9a1d200", "commitAfterChange": "fa9401b00e45852c2692e01439c9de8b4592a992", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private void sendMTFValues()         throws IOException", "signatureAfterChange": "      private void sendMTFValues()         throws IOException", "diff": ["-                    short cost0;", "-                    short cost1;", "-                    short cost2;", "-                    short cost3;", "-                    short cost4;", "-                    short cost5;", "-                    cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;", "+                    short cost0 = 0;", "+                    short cost1 = 0;", "+                    short cost2 = 0;", "+                    short cost3 = 0;", "+                    short cost4 = 0;", "+                    short cost5 = 0;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b5ac28cb15729180c103b4a0733112", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "27a94488495b231cc5a3c748e33452d8df13971d", "commitAfterChange": "ea31a2b83a156d121d2759b1f233c74401f8feb3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void normalisePath( StringBuffer path ) throws FileSystemException", "signatureAfterChange": "     public void normalisePath( StringBuffer path ) throws FileSystemException", "diff": ["-            if( elemLen == 2", "-                && path.charAt( startElem ) == '.'", "-                && path.charAt( startElem + 1 ) == '.' )", "+            if( elemLen == 2 &&", "+                path.charAt( startElem ) == '.' &&", "+                path.charAt( startElem + 1 ) == '.' )", "-                    for( ; path.charAt( pos ) != m_separatorChar; pos-- )", "+                    char ch = path.charAt( pos );", "+                    while( ch != m_separatorChar )", "+                        pos--;", "+                        ch = path.charAt( pos );"]}]}