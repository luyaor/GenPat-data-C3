{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78ac59f2e85c068798f9ce2fafa0c6a9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0406428a02d6e1249799f274a95e4f16", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        exe.setCommandline(toExecute.getCommandline());", "+        log(toExecute.describeCommand(), Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215f24aba6508b36c7f782e6b6e71c17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "e5f3393251f3b7b8b8df1e5300559828bc73d8f0", "commitAfterChange": "1885612e5d6666e09a655fbe4f1ee888e2e26f69", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Target(Target other)", "signatureAfterChange": "     public Target(Target other)", "diff": ["+        this.if_ = other.if_;", "+        this.unless = other.unless;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee5d0c71f2724656bb359350017c7a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java", "commitBeforeChange": "98f3237b31cf8d1b2ef44373da1fe7a9da618558", "commitAfterChange": "ec7017acb2ba222bd11d2bb02e52536e84af5968", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private CommandlineJava setupJasperCommand()", "signatureAfterChange": "     private CommandlineJava setupJasperCommand()", "diff": ["+        addArg(cmd, \"-webinc\", jspc.getWebinc());", "+        addArg(cmd, \"-webxml\", jspc.getWebxml());        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7624a22f9b1d6657336d686874b67a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Frame(InitConfig initConfig,                     AntConfig config) throws ExecutionException", "signatureAfterChange": "     public Frame(InitConfig initConfig, AntConfig config)", "diff": ["-    protected Frame(InitConfig initConfig,", "-                    AntConfig config) throws ExecutionException {", "+    public Frame(InitConfig initConfig, AntConfig config) {", "+        this.parent = null;", "+        this.libManager", "+            = new AntLibManager(initConfig, config.isRemoteLibAllowed());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb260745cc8835974b2e54884e7fd91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void addLibraryConverters(AntLibrary library)          throws ExecutionException", "signatureAfterChange": "     private void addLibraryConverters(AntLibrary library)          throws ExecutionException", "diff": ["-        if (!library.hasConverters()) {", "+        if (!library.hasConverters()", "+             || loadedConverters.contains(library.getLibraryId())) {", "+            loadedConverters.add(library.getLibraryId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6617ac97cfbee539f0c3e4691c266ce7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "0e58e7173802078b20ef66fe472179c5863235fb", "commitAfterChange": "e3ce39634bb728f8af0f7e1dd43d8f5706ac9e76", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["+            te.setUserId(tarFileSet.getUid());", "+            te.setGroupId(tarFileSet.getGid());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a20dfbe82d72499cb411b99e9ebd9cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfig.java", "commitBeforeChange": "06ea1d271a3c3557c120e36c2df913050317cb53", "commitAfterChange": "42d4199104ee00135db43ba0d7b320244c666a3f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void merge(AntConfig otherConfig)", "signatureAfterChange": "     public void merge(AntConfig otherConfig)", "diff": ["+", "+        remoteLibs = otherConfig.remoteLibs;", "+        remoteProjects = otherConfig.remoteProjects;", "+        unsetProperties = otherConfig.unsetProperties;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbc9a4fc45b5e1d1083e4cba38ac272f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/EventToActionMapper.java", "commitBeforeChange": "37b3d25cc8c65444ab2cbb5c0ff153dccf56c789", "commitAfterChange": "2d4bfedfb63f054542debd85410e53916fa502f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addAction(AntAction action)", "signatureAfterChange": "     public void addAction(AntAction action)", "diff": ["+        putAction(action, action.getCheckedTrueOnEvents(), _checkedTrueOn);", "+        putAction(action, action.getCheckedFalseOnEvents(), _checkedFalseOn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1dd8938becb428c5b867aaa9d1c87b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "bcedae5802b79b9c6568f9310f2471e964ddd999", "commitAfterChange": "5c861cf9e6cd98112dd92eeda447879612783c90", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void useParameter(Parameter parameter)", "signatureAfterChange": "     public void useParameter(Parameter parameter)", "diff": ["-        } else if (key.startsWith(\"cache.\")) {", "-            String name = key.substring(6);", "+        } else if (key.startsWith(CACHE_START)) {", "+            String name = key.substring(CACHE_START.length());", "-        } else if (key.startsWith(\"algorithm.\")) {", "-            String name = key.substring(10);", "+        } else if (key.startsWith(ALGORITHM_START)) {", "+            String name = key.substring(ALGORITHM_START.length());", "-        } else if (key.startsWith(\"comparator.\")) {", "-            String name = key.substring(11);", "+        } else if (key.startsWith(COMPARATOR_START)) {", "+            String name = key.substring(COMPARATOR_START.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbb4a71c4e06ef43eea2cafbad94fb36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/selectors/Compare.java", "commitBeforeChange": "027f5c796500728c71fca5edcd504aa6065ca34c", "commitAfterChange": "e88414ba32cbb978c462dab3ba5fee7efc3f670e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["+                stk.push(control);", "+                stk.pop();", "+            stk.push(comp);", "+            stk.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd6856403a95b7482871c6cb62432d18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibrary.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AntLibrary(AntLibrarySpec spec)", "signatureAfterChange": "     public AntLibrary(AntLibrarySpec spec)", "diff": ["-        this.converterClassNames.addAll(spec.getConverterClassNames());", "+        this.converterClassNames.addAll(spec.getConverters());", "+        this.factoryClassName = spec.getFactory();", "+        this.definitionURL = spec.getLibraryURL();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceea8a3a9a99d0ab54c78a65c7e4a505", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "5a8c242a050b03466bf3fe88013f21cdacc27ec4", "commitAfterChange": "04d73d1565c80ff40c14bc85d51f172a272eb65c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "       public void doDelayUpdateTest(int kind)", "signatureAfterChange": "       public void doDelayUpdateTest(int kind)", "diff": ["+        // sorry - otherwise we will get a ClassCastException because the MockCache", "+        // is loaded by two different classloader ...", "+        sel.setClassLoader(this.getClass().getClassLoader());", "+        sel.addClasspath(testclasses);", "+"]}]}