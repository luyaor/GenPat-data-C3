{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b0455550fc1fe16b0bcccb958d38b7f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6366e97bf3cc63c2b2bb3263f59a3ff0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "e1dba00d6fba1e923723c523e5aed501dc5ab84b", "commitAfterChange": "3ade0b6e769ba60594a31515f5ba7e3e0054810a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public synchronized ExecuteStreamHandler createHandler()         throws BuildException", "signatureAfterChange": "     public ExecuteStreamHandler createHandler() throws BuildException", "diff": ["-    public synchronized ExecuteStreamHandler createHandler()", "-        throws BuildException {", "+    public ExecuteStreamHandler createHandler() throws BuildException {", "-        return new PumpStreamHandler(outputStream, errorStream, inputStream);", "+        return new PumpStreamHandler(getOutputStream(), getErrorStream(),", "+                getInputStream());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee041803a072421b746f8048ecc33bf1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "     public void executeTargets(Vector names) throws BuildException", "signatureAfterChange": "     public void executeTargets(Vector<String> names) throws BuildException", "diff": ["-    public void executeTargets(Vector names) throws BuildException {", "+    public void executeTargets(Vector<String> names) throws BuildException {", "-        getExecutor().executeTargets(this,", "-            (String[]) (names.toArray(new String[names.size()])));", "+        getExecutor().executeTargets(this, names.toArray(new String[names.size()]));"]}]}