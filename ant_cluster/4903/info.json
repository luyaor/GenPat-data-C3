{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20bb48b9793553fe56b393b083a44b42", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de3d790bda71b687a601f0cf595b286", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "271e0fe6fc223253e2c24c0f0f0c4fc4d9b58410", "commitAfterChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected Hashtable scanFileSets()", "signatureAfterChange": "      protected Hashtable scanSources(final Hashtable mapping, final String[] entries)", "diff": ["-    protected Hashtable scanFileSets(){", "-        for (int i = 0; i < fileSets.size(); i++){", "-            for (int j = 0; j < f.length; j++){", "-                if ( pathname.endsWith(\".java\") ){", "-                    File file = new File( ds.getBasedir(), pathname);", "-                    String classname = pathname.substring(0, pathname.length()-\".java\".length());", "-                   files.put( file.getAbsolutePath(), classname ); // it's a java file, add it.", "+    protected Hashtable scanSources(final Hashtable mapping, final String[] entries) {", "+        final Vector javaFiles = new Vector(512);", "+        for (int i = 0; i < entries.length; i++) {", "+            final File f = new File(entries[i]);", "+            if (f.isDirectory()) {", "+                DirectoryScanner ds = new DirectoryScanner();", "+                ds.setBasedir(f);", "+                ds.setIncludes(new String[]{\"**/*.java\"});", "+                ds.scan();", "+                String[] included = ds.getIncludedFiles();", "+                for (int j = 0; j < included.length; j++) {", "+                    javaFiles.addElement(new File(f, included[j]));", "+                }", "+            } else if (entries[i].endsWith(\".java\")) {", "+                javaFiles.addElement(f);", "+            }", "+        }", "+        // do the mapping paths/classname", "+        final int count = javaFiles.size();", "+        for (int i = 0; i < count; i++) {", "+            File file = (File) javaFiles.elementAt(i);", "+            String pathname = Path.translateFile(file.getAbsolutePath());", "+            String classname = pathname.substring(0, pathname.length() - \".java\".length());", "+            classname = classname.replace(File.separatorChar, '.');", "+            mapping.put(pathname, classname);", "+        }", "+        return mapping;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41de62943f01b4bcddf0e5a7d50162c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "e9117208e20934276266169c6b434a102371883e", "commitAfterChange": "c30a74289ebfd6c0f714cb63bc952a6340b5fca6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private FileList()", "signatureAfterChange": "     private String[] getFilenames()", "diff": ["-", "-        private FileList(){", "-            Vector v = new Vector();", "-            for (int j=0; j<filesets.size(); j++) {", "-                FileSet fs = (FileSet) filesets.elementAt(j);", "-                DirectoryScanner ds = fs.getDirectoryScanner(project);", "-                ds.scan();", "-                String[] f = ds.getIncludedFiles();", "-                for (int k=0; k<f.length; k++) {", "-                    if (f[k].endsWith(\".java\")) {", "-                        v.addElement(f[k].substring(0, f[k].length()-5));", "-                    } else if (f[k].endsWith(\".class\")) {", "-                        v.addElement(f[k].substring(0, f[k].length()-6));", "-                    }", "-                }", "-            }", "-", "-            files = new String[v.size()];", "-            v.copyInto(files);", "-        }", "+     */", "+    private String[] getFilenames(){", "+        Vector v = new Vector();", "+        final int size = this.filesets.size();", "+        for (int j=0; j<size; j++) {", "+            FileSet fs = (FileSet) filesets.elementAt(j);", "+            DirectoryScanner ds = fs.getDirectoryScanner(project);", "+            ds.scan();", "+            String[] f = ds.getIncludedFiles();", "+            for (int k = 0; k < f.length; k++) {", "+                String pathname = f[k];", "+                if (pathname.endsWith(\".java\")) {", "+                    v.addElement(pathname.substring(0, pathname.length()-\".java\".length()));", "+                } else if (pathname.endsWith(\".class\")) {", "+                    v.addElement(pathname.substring(0, pathname.length()-\".class\".length()));", "+                }", "+            }", "+        }", "+", "+        String[] files = new String[v.size()];", "+        v.copyInto(files);", "+        return files;", "+    }"]}]}