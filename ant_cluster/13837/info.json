{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46194f55eb0f5e5ce50eeb7c399fa75f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e63cd893e456afe866abcec0235e96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java", "commitBeforeChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "commitAfterChange": "3b349325f1e1f10b3c4616a1c7a3e9b4ec24c40b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected ExecuteStreamHandler createStreamHandler() throws BuildException", "signatureAfterChange": "      protected ExecuteStreamHandler createStreamHandler() throws BuildException", "diff": ["-        ExecuteStreamHandler handler = null;", "-            handler = new LogStreamHandler(this, Project.MSG_INFO, Project.MSG_INFO);", "-        } else {", "-            try {", "-                //XXX", "-                OutputStream out = new FileOutputStream(outFile);", "-                handler = new MAuditStreamHandler(this, out);", "-            } catch (IOException e) {", "-                throw new BuildException(e);", "+            return new LogStreamHandler(this, Project.MSG_INFO, Project.MSG_ERR);", "+        }", "+        ExecuteStreamHandler handler = null;", "+        OutputStream out = null;", "+        try {", "+            out = new FileOutputStream(outFile);", "+            handler = new MAuditStreamHandler(this, out);", "+        } catch (IOException e) {", "+            throw new BuildException(e);", "+        } finally {", "+            if (out == null){", "+                try {", "+                    out.close();", "+                } catch (IOException e){", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4b4215e1c70df1a590dfcdbdcae334", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "6a0be3bb10e8c59e4ac56e28bb5e569a553ebb34", "commitAfterChange": "1bff308e51b3dfe4bb1b3ee10cd92b78e9643a18", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["+        if (!needsUpdate && index) {", "+            try {", "+                needsUpdate = !jarHasIndex(zipFile);", "+            } catch (IOException e) {", "+                //if we couldn't read it, we might as well recreate it?", "+                needsUpdate = true;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95c9c37304069451cd82ef9c429e203", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "50cd7c54a8bafdcb31b2f53e6a0f1e5f5a6e8968", "commitAfterChange": "6ffc1671f30b8a233754745ea281d9a8bac6d0c1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void readPatterns(File patternfile, Vector patternlist, Project p)         throws BuildException", "signatureAfterChange": "     private void readPatterns(File patternfile, Vector patternlist, Project p)         throws BuildException", "diff": ["+        BufferedReader patternReader = null;", "-            BufferedReader patternReader = ", "+            patternReader = ", "+        } finally {", "+            if( null != patternReader ) {", "+                try {", "+                    patternReader.close();", "+                } catch(IOException ioe) { ", "+                    //Ignore exception", "+                }", "+            }"]}]}