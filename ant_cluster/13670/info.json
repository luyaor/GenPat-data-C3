{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfc4fd594cb2103d26329e8163a8bdb3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07dc02bb58068316bb1f08022bb9726c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "c05fecf453869e6962a7f3ba8ec302b628a997ba", "commitAfterChange": "7ac20d949c1479a45698ca673b1de7321e9977f2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void getAndMoveToFrontDecode()", "signatureAfterChange": "      private void getAndMoveToFrontDecode()", "diff": ["-        char yy[] = new char[ 256 ];", "-        int i;", "-        int j;", "-        int limitLast;", "-        int EOB;", "-        int groupNo;", "-        int groupPos;", "-        limitLast = BASE_BLOCK_SIZE * blockSize100k;", "-        origPtr = bsGetIntVS( 24 );", "+        int limitLast = BASE_BLOCK_SIZE * m_blockSize100k;", "+        m_origPtr = readVariableSizedInt( 24 );", "-        EOB = nInUse + 1;", "-        groupNo = -1;", "-        groupPos = 0;", "+        int EOB = m_nInUse + 1;", "+        int groupNo = -1;", "+        int groupPos = 0;", "-        for( i = 0; i <= 255; i++ )", "-            unzftab[ i ] = 0;", "-", "-        for( i = 0; i <= 255; i++ )", "-            yy[ i ] = (char)i;", "-", "-        last = -1;", "+        for( int i = 0; i <= 255; i++ )", "-            int zt;", "-            int zn;", "-            int zvec;", "-            int zj;", "-            if( groupPos == 0 )", "-            {", "-                groupNo++;", "-                groupPos = G_SIZE;", "-            }", "-            groupPos--;", "-            zt = selector[ groupNo ];", "-            zn = minLens[ zt ];", "-            zvec = bsR( zn );", "-            while( zvec > limit[ zt ][ zn ] )", "-            {", "-                zn++;", "-                {", "-                    {", "-                        while( bsLive < 1 )", "-                        {", "-                            int zzi;", "-                            char thech = 0;", "-                            try", "-                            {", "-                                thech = (char)bsStream.read();", "-                            }", "-                            catch( IOException e )", "-                            {", "-                                compressedStreamEOF();", "-                            }", "-                            if( thech == -1 )", "-                            {", "-                                compressedStreamEOF();", "-                            }", "-                            zzi = thech;", "-                            bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                            bsLive += 8;", "-                        }", "-                    }", "-                    zj = ( bsBuff >> ( bsLive - 1 ) ) & 1;", "-                    bsLive--;", "-                }", "-                zvec = ( zvec << 1 ) | zj;", "-            }", "-            nextSym = perm[ zt ][ zvec - base[ zt ][ zn ] ];", "+            m_unzftab[ i ] = 0;", "+", "+        final char yy[] = new char[ 256 ];", "+        for( int i = 0; i <= 255; i++ )", "+        {", "+            yy[ i ] = (char)i;", "+        }", "+", "+        m_last = -1;", "+        int zt;", "+        int zn;", "+        int zvec;", "+        int zj;", "+        if( groupPos == 0 )", "+        {", "+            groupNo++;", "+            groupPos = G_SIZE;", "+        }", "+        groupPos--;", "+", "+        zt = m_selector[ groupNo ];", "+        zn = m_minLens[ zt ];", "+        zvec = bsR( zn );", "+        while( zvec > m_limit[ zt ][ zn ] )", "+        {", "+            zn++;", "+", "+            while( m_bsLive < 1 )", "+            {", "+                int zzi;", "+                char thech = 0;", "+                try", "+                {", "+                    thech = (char)m_input.read();", "+                }", "+                catch( IOException e )", "+                {", "+                    compressedStreamEOF();", "+                }", "+                if( thech == -1 )", "+                {", "+                    compressedStreamEOF();", "+                }", "+                zzi = thech;", "+                m_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );", "+                m_bsLive += 8;", "+            }", "+", "+            zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;", "+            m_bsLive--;", "+", "+            zvec = ( zvec << 1 ) | zj;", "+        }", "+        nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];", "-", "+            {", "+            }", "+", "+                    if( groupPos == 0 )", "-                        int zt;", "-                        int zn;", "-                        int zvec;", "-                        int zj;", "-                        if( groupPos == 0 )", "-                        {", "-                            groupNo++;", "-                            groupPos = G_SIZE;", "-                        }", "-                        groupPos--;", "-                        zt = selector[ groupNo ];", "-                        zn = minLens[ zt ];", "-                        zvec = bsR( zn );", "-                        while( zvec > limit[ zt ][ zn ] )", "-                        {", "-                            zn++;", "-                            {", "-                                {", "-                                    while( bsLive < 1 )", "-                                    {", "-                                        int zzi;", "-                                        char thech = 0;", "-                                        try", "-                                        {", "-                                            thech = (char)bsStream.read();", "-                                        }", "-                                        catch( IOException e )", "-                                        {", "-                                            compressedStreamEOF();", "-                                        }", "-                                        if( thech == -1 )", "-                                        {", "-                                            compressedStreamEOF();", "-                                        }", "-                                        zzi = thech;", "-                                        bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                                        bsLive += 8;", "-                                    }", "-                                }", "-                                zj = ( bsBuff >> ( bsLive - 1 ) ) & 1;", "-                                bsLive--;", "-                            }", "-                            zvec = ( zvec << 1 ) | zj;", "-                        }", "-                        ;", "-                        nextSym = perm[ zt ][ zvec - base[ zt ][ zn ] ];", "+                        groupNo++;", "+                        groupPos = G_SIZE;", "+                    groupPos--;", "+                    zt = m_selector[ groupNo ];", "+                    zn = m_minLens[ zt ];", "+                    zvec = bsR( zn );", "+                    while( zvec > m_limit[ zt ][ zn ] )", "+                    {", "+                        zn++;", "+", "+                        while( m_bsLive < 1 )", "+                        {", "+                            int zzi;", "+                            char thech = 0;", "+                            try", "+                            {", "+                                thech = (char)m_input.read();", "+                            }", "+                            catch( IOException e )", "+                            {", "+                                compressedStreamEOF();", "+                            }", "+                            if( thech == -1 )", "+                            {", "+                                compressedStreamEOF();", "+                            }", "+                            zzi = thech;", "+                            m_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );", "+                            m_bsLive += 8;", "+                        }", "+", "+                        zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;", "+                        m_bsLive--;", "+                        zvec = ( zvec << 1 ) | zj;", "+                    }", "+", "+                    nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];", "+", "-                ch = seqToUnseq[ yy[ 0 ] ];", "-                unzftab[ ch ] += s;", "+                ch = m_seqToUnseq[ yy[ 0 ] ];", "+                m_unzftab[ ch ] += s;", "-                    last++;", "-                    ll8[ last ] = ch;", "+                    m_last++;", "+                    m_ll8[ m_last ] = ch;", "-                ;", "-                if( last >= limitLast )", "+                if( m_last >= limitLast )", "+                {", "+                }", "-                last++;", "-                if( last >= limitLast )", "+                m_last++;", "+                if( m_last >= limitLast )", "+                {", "+                }", "-                unzftab[ seqToUnseq[ tmp ] ]++;", "-                ll8[ last ] = seqToUnseq[ tmp ];", "+                m_unzftab[ m_seqToUnseq[ tmp ] ]++;", "+                m_ll8[ m_last ] = m_seqToUnseq[ tmp ];", "-                j = nextSym - 1;", "+                int j = nextSym - 1;", "+                {", "+                }", "+", "+                if( groupPos == 0 )", "-                    int zt;", "-                    int zn;", "-                    int zvec;", "-                    int zj;", "-                    if( groupPos == 0 )", "-                    {", "-                        groupNo++;", "-                        groupPos = G_SIZE;", "-                    }", "-                    groupPos--;", "-                    zt = selector[ groupNo ];", "-                    zn = minLens[ zt ];", "-                    zvec = bsR( zn );", "-                    while( zvec > limit[ zt ][ zn ] )", "-                    {", "-                        zn++;", "-                        {", "-                            {", "-                                while( bsLive < 1 )", "-                                {", "-                                    int zzi;", "-                                    char thech = 0;", "-                                    try", "-                                    {", "-                                        thech = (char)bsStream.read();", "-                                    }", "-                                    catch( IOException e )", "-                                    {", "-                                        compressedStreamEOF();", "-                                    }", "-                                    zzi = thech;", "-                                    bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                                    bsLive += 8;", "-                                }", "-                            }", "-                            zj = ( bsBuff >> ( bsLive - 1 ) ) & 1;", "-                            bsLive--;", "-                        }", "-                        zvec = ( zvec << 1 ) | zj;", "-                    }", "-                    ;", "-                    nextSym = perm[ zt ][ zvec - base[ zt ][ zn ] ];", "+                    groupNo++;", "+                    groupPos = G_SIZE;", "+                groupPos--;", "+                zt = m_selector[ groupNo ];", "+                zn = m_minLens[ zt ];", "+                zvec = bsR( zn );", "+                while( zvec > m_limit[ zt ][ zn ] )", "+                {", "+                    zn++;", "+", "+                    while( m_bsLive < 1 )", "+                    {", "+                        char ch = 0;", "+                        try", "+                        {", "+                            ch = (char)m_input.read();", "+                        }", "+                        catch( IOException e )", "+                        {", "+                            compressedStreamEOF();", "+                        }", "+", "+                        m_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );", "+                        m_bsLive += 8;", "+                    }", "+", "+                    zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;", "+                    m_bsLive--;", "+", "+                    zvec = ( zvec << 1 ) | zj;", "+                }", "+                nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9199a88aa9e5fe59a7784333faf20ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "c05fecf453869e6962a7f3ba8ec302b628a997ba", "commitAfterChange": "7ac20d949c1479a45698ca673b1de7321e9977f2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void getAndMoveToFrontDecode()", "signatureAfterChange": "      private void getAndMoveToFrontDecode()", "diff": ["-        char yy[] = new char[ 256 ];", "-        int i;", "-        int j;", "-        int limitLast;", "-        int EOB;", "-        int groupNo;", "-        int groupPos;", "-        limitLast = BASE_BLOCK_SIZE * blockSize100k;", "-        origPtr = bsGetIntVS( 24 );", "+        int limitLast = BASE_BLOCK_SIZE * m_blockSize100k;", "+        m_origPtr = readVariableSizedInt( 24 );", "-        EOB = nInUse + 1;", "-        groupNo = -1;", "-        groupPos = 0;", "+        int EOB = m_nInUse + 1;", "+        int groupNo = -1;", "+        int groupPos = 0;", "-        for( i = 0; i <= 255; i++ )", "-            unzftab[ i ] = 0;", "-", "-        for( i = 0; i <= 255; i++ )", "-            yy[ i ] = (char)i;", "-", "-        last = -1;", "+        for( int i = 0; i <= 255; i++ )", "-            int zt;", "-            int zn;", "-            int zvec;", "-            int zj;", "-            if( groupPos == 0 )", "-            {", "-                groupNo++;", "-                groupPos = G_SIZE;", "-            }", "-            groupPos--;", "-            zt = selector[ groupNo ];", "-            zn = minLens[ zt ];", "-            zvec = bsR( zn );", "-            while( zvec > limit[ zt ][ zn ] )", "-            {", "-                zn++;", "-                {", "-                    {", "-                        while( bsLive < 1 )", "-                        {", "-                            int zzi;", "-                            char thech = 0;", "-                            try", "-                            {", "-                                thech = (char)bsStream.read();", "-                            }", "-                            catch( IOException e )", "-                            {", "-                                compressedStreamEOF();", "-                            }", "-                            if( thech == -1 )", "-                            {", "-                                compressedStreamEOF();", "-                            }", "-                            zzi = thech;", "-                            bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                            bsLive += 8;", "-                        }", "-                    }", "-                    zj = ( bsBuff >> ( bsLive - 1 ) ) & 1;", "-                    bsLive--;", "-                }", "-                zvec = ( zvec << 1 ) | zj;", "-            }", "-            nextSym = perm[ zt ][ zvec - base[ zt ][ zn ] ];", "+            m_unzftab[ i ] = 0;", "+", "+        final char yy[] = new char[ 256 ];", "+        for( int i = 0; i <= 255; i++ )", "+        {", "+            yy[ i ] = (char)i;", "+        }", "+", "+        m_last = -1;", "+        int zt;", "+        int zn;", "+        int zvec;", "+        int zj;", "+        if( groupPos == 0 )", "+        {", "+            groupNo++;", "+            groupPos = G_SIZE;", "+        }", "+        groupPos--;", "+", "+        zt = m_selector[ groupNo ];", "+        zn = m_minLens[ zt ];", "+        zvec = bsR( zn );", "+        while( zvec > m_limit[ zt ][ zn ] )", "+        {", "+            zn++;", "+", "+            while( m_bsLive < 1 )", "+            {", "+                int zzi;", "+                char thech = 0;", "+                try", "+                {", "+                    thech = (char)m_input.read();", "+                }", "+                catch( IOException e )", "+                {", "+                    compressedStreamEOF();", "+                }", "+                if( thech == -1 )", "+                {", "+                    compressedStreamEOF();", "+                }", "+                zzi = thech;", "+                m_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );", "+                m_bsLive += 8;", "+            }", "+", "+            zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;", "+            m_bsLive--;", "+", "+            zvec = ( zvec << 1 ) | zj;", "+        }", "+        nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];", "-", "+            {", "+            }", "+", "+                    if( groupPos == 0 )", "-                        int zt;", "-                        int zn;", "-                        int zvec;", "-                        int zj;", "-                        if( groupPos == 0 )", "-                        {", "-                            groupNo++;", "-                            groupPos = G_SIZE;", "-                        }", "-                        groupPos--;", "-                        zt = selector[ groupNo ];", "-                        zn = minLens[ zt ];", "-                        zvec = bsR( zn );", "-                        while( zvec > limit[ zt ][ zn ] )", "-                        {", "-                            zn++;", "-                            {", "-                                {", "-                                    while( bsLive < 1 )", "-                                    {", "-                                        int zzi;", "-                                        char thech = 0;", "-                                        try", "-                                        {", "-                                            thech = (char)bsStream.read();", "-                                        }", "-                                        catch( IOException e )", "-                                        {", "-                                            compressedStreamEOF();", "-                                        }", "-                                        if( thech == -1 )", "-                                        {", "-                                            compressedStreamEOF();", "-                                        }", "-                                        zzi = thech;", "-                                        bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                                        bsLive += 8;", "-                                    }", "-                                }", "-                                zj = ( bsBuff >> ( bsLive - 1 ) ) & 1;", "-                                bsLive--;", "-                            }", "-                            zvec = ( zvec << 1 ) | zj;", "-                        }", "-                        ;", "-                        nextSym = perm[ zt ][ zvec - base[ zt ][ zn ] ];", "+                        groupNo++;", "+                        groupPos = G_SIZE;", "+                    groupPos--;", "+                    zt = m_selector[ groupNo ];", "+                    zn = m_minLens[ zt ];", "+                    zvec = bsR( zn );", "+                    while( zvec > m_limit[ zt ][ zn ] )", "+                    {", "+                        zn++;", "+", "+                        while( m_bsLive < 1 )", "+                        {", "+                            int zzi;", "+                            char thech = 0;", "+                            try", "+                            {", "+                                thech = (char)m_input.read();", "+                            }", "+                            catch( IOException e )", "+                            {", "+                                compressedStreamEOF();", "+                            }", "+                            if( thech == -1 )", "+                            {", "+                                compressedStreamEOF();", "+                            }", "+                            zzi = thech;", "+                            m_bsBuff = ( m_bsBuff << 8 ) | ( zzi & 0xff );", "+                            m_bsLive += 8;", "+                        }", "+", "+                        zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;", "+                        m_bsLive--;", "+                        zvec = ( zvec << 1 ) | zj;", "+                    }", "+", "+                    nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];", "+", "-                ch = seqToUnseq[ yy[ 0 ] ];", "-                unzftab[ ch ] += s;", "+                ch = m_seqToUnseq[ yy[ 0 ] ];", "+                m_unzftab[ ch ] += s;", "-                    last++;", "-                    ll8[ last ] = ch;", "+                    m_last++;", "+                    m_ll8[ m_last ] = ch;", "-                ;", "-                if( last >= limitLast )", "+                if( m_last >= limitLast )", "+                {", "+                }", "-                last++;", "-                if( last >= limitLast )", "+                m_last++;", "+                if( m_last >= limitLast )", "+                {", "+                }", "-                unzftab[ seqToUnseq[ tmp ] ]++;", "-                ll8[ last ] = seqToUnseq[ tmp ];", "+                m_unzftab[ m_seqToUnseq[ tmp ] ]++;", "+                m_ll8[ m_last ] = m_seqToUnseq[ tmp ];", "-                j = nextSym - 1;", "+                int j = nextSym - 1;", "+                {", "+                }", "+", "+                if( groupPos == 0 )", "-                    int zt;", "-                    int zn;", "-                    int zvec;", "-                    int zj;", "-                    if( groupPos == 0 )", "-                    {", "-                        groupNo++;", "-                        groupPos = G_SIZE;", "-                    }", "-                    groupPos--;", "-                    zt = selector[ groupNo ];", "-                    zn = minLens[ zt ];", "-                    zvec = bsR( zn );", "-                    while( zvec > limit[ zt ][ zn ] )", "-                    {", "-                        zn++;", "-                        {", "-                            {", "-                                while( bsLive < 1 )", "-                                {", "-                                    int zzi;", "-                                    char thech = 0;", "-                                    try", "-                                    {", "-                                        thech = (char)bsStream.read();", "-                                    }", "-                                    catch( IOException e )", "-                                    {", "-                                        compressedStreamEOF();", "-                                    }", "-                                    zzi = thech;", "-                                    bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                                    bsLive += 8;", "-                                }", "-                            }", "-                            zj = ( bsBuff >> ( bsLive - 1 ) ) & 1;", "-                            bsLive--;", "-                        }", "-                        zvec = ( zvec << 1 ) | zj;", "-                    }", "-                    ;", "-                    nextSym = perm[ zt ][ zvec - base[ zt ][ zn ] ];", "+                    groupNo++;", "+                    groupPos = G_SIZE;", "+                groupPos--;", "+                zt = m_selector[ groupNo ];", "+                zn = m_minLens[ zt ];", "+                zvec = bsR( zn );", "+                while( zvec > m_limit[ zt ][ zn ] )", "+                {", "+                    zn++;", "+", "+                    while( m_bsLive < 1 )", "+                    {", "+                        char ch = 0;", "+                        try", "+                        {", "+                            ch = (char)m_input.read();", "+                        }", "+                        catch( IOException e )", "+                        {", "+                            compressedStreamEOF();", "+                        }", "+", "+                        m_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );", "+                        m_bsLive += 8;", "+                    }", "+", "+                    zj = ( m_bsBuff >> ( m_bsLive - 1 ) ) & 1;", "+                    m_bsLive--;", "+", "+                    zvec = ( zvec << 1 ) | zj;", "+                }", "+                nextSym = m_perm[ zt ][ zvec - m_base[ zt ][ zn ] ];", "+"]}]}