{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7a4bab3de2ac992d5dabd9591f16635", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21bee1ae81bfd27547e7833ad245376", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "f9e2c884babcb11e65fdc2317705993ea839c286", "commitAfterChange": "fff434e903ebdcb26009b4f11722e355efcd203c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void writeCachedDependencies(Hashtable dependencyMap) throws IOException", "signatureAfterChange": "     private void writeCachedDependencies(Hashtable dependencyMap)          throws IOException", "diff": ["-    private void writeCachedDependencies(Hashtable dependencyMap) throws IOException {", "+    private void writeCachedDependencies(Hashtable dependencyMap)", "+         throws IOException {", "-                for (Enumeration deps = dependencyMap.keys(); deps.hasMoreElements();) {", "-                    String className = (String) deps.nextElement();", "+                Enumeration e = dependencyMap.keys();", "+                while (e.hasMoreElements()) {", "+                    String className = (String)e.nextElement();", "-                    Vector dependencyList = (Vector) dependencyMap.get(className);", "+                    Vector dependencyList", "+                         = (Vector)dependencyMap.get(className);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5d824c64f1e5526564e5d5d4529b06c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "7b378fdc4d861e1c2b530ff8a056808e669a380d", "commitAfterChange": "d9ef7711222c12330ef223bfb50f1badcbf992c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void addPath(String path, boolean getJars, List libPathURLs)             throws MalformedURLException", "signatureAfterChange": "     private void addPath(String path, boolean getJars, List libPathURLs)             throws MalformedURLException", "diff": ["-        for (StringTokenizer tzr = new StringTokenizer(path, File.pathSeparator); ", "-                tzr.hasMoreElements();) {", "-            String elementName = tzr.nextToken();", "+        StringTokenizer tokenizer = new StringTokenizer(path, File.pathSeparator);", "+        while(tokenizer.hasMoreElements()) {", "+            String elementName = tokenizer.nextToken();"]}]}