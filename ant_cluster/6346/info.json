{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5efa4226bb048dedb1df8638f6c121e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71dc2aaa12fe56d23aac573af8c149c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "4a99751448c8773ce33c3029af60e20db02167f7", "commitAfterChange": "758b225e9a7868aa92992cc2bb27f5036225a1f1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void scanDir(File baseDir, String files[], boolean shouldVerify)", "signatureAfterChange": "      protected void scanDir(File baseDir, String files[])", "diff": ["-    protected void scanDir(File baseDir, String files[], boolean shouldVerify) {", "-        compileList.removeAllElements();", "-        for (int i = 0; i < files.length; i++) {", "-            File baseFile = new File(baseDir, files[i]);", "-            if (files[i].endsWith(\".class\") &&", "-                !files[i].endsWith(\"_Stub.class\") &&", "-                !files[i].endsWith(\"_Skel.class\")) {", "-                if (shouldCompile(baseFile)) {", "-                    String classname = files[i].replace(File.separatorChar, '.');", "-                    classname = classname.substring(0, classname.indexOf(\".class\"));", "-                    boolean shouldAdd = true;", "-                    if (shouldVerify) {", "-                        try {", "-                            Class testClass = Class.forName(classname);", "-                            // One cannot RMIC an interface", "-                            if (testClass.isInterface() || !isValidRmiRemote(testClass)) {", "-                                shouldAdd = false;", "-                            }", "-                        } catch (ClassNotFoundException e) {", "-                            log(\"Unable to verify class \" + classname + ", "-                                    \". It could not be found.\", Project.MSG_WARN);", "-                        } catch (NoClassDefFoundError e) {", "-                            log(\"Unable to verify class \" + classname + ", "-                                        \". It is not defined.\", Project.MSG_WARN);", "-                        }", "-                    }", "-                    if (shouldAdd) {", "-                        log(\"Adding: \" + classname + \" to compile list\",", "-                            Project.MSG_VERBOSE);", "-                        compileList.addElement(classname);", "-                    }", "-                }", "-            }", "+    protected void scanDir(File baseDir, String files[]) {", "+        SourceFileScanner sfs = new SourceFileScanner(this);", "+        String[] newFiles = sfs.restrict(files, baseDir, baseDir,", "+                                         new RmicFileNameMapper());", "+        for (int i = 0; i < newFiles.length; i++) {", "+            String classname = newFiles[i].replace(File.separatorChar, '.');", "+            classname = classname.substring(0, classname.indexOf(\".class\"));", "+            compileList.addElement(classname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da5eeec78ba9a15c22261268b9c3157b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "926fcdcbeb003e509c0a1d03208f0eab2bab6813", "commitAfterChange": "5cc29f61e6a8fbcf8cb8f0fe2f848955c41f486a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 38, "signatureBeforeChange": "          public String[] mapFileName(String name)", "signatureAfterChange": "     public boolean isValidRmiRemote(String classname)", "diff": ["+    public boolean isValidRmiRemote(String classname) {", "+        try {", "+            Class testClass = loader.loadClass(classname);", "+            // One cannot RMIC an interface", "+            if (testClass.isInterface()) {", "+                return false;", "+            return isValidRmiRemote(testClass);", "+        } catch (ClassNotFoundException e) {", "+            log(\"Unable to verify class \" + classname + ", "+                \". It could not be found.\", Project.MSG_WARN);", "+        } catch (NoClassDefFoundError e) {", "+            log(\"Unable to verify class \" + classname + ", "+                \". It is not defined.\", Project.MSG_WARN);", "+        } catch (Throwable t) {", "+            log(\"Unable to verify class \" + classname + ", "+                \". Loading caused Exception: \" +", "+                t.getMessage(), Project.MSG_WARN);", "+        // we only get here if an exception has been thrown", "+        return false;", "-", "-        public String[] mapFileName(String name) {", "-            String[] stubName = stubMapper.mapFileName(name);", "-", "-            if (stubName == null || name.endsWith(\"_Stub.class\") ", "-                || name.endsWith(\"_Skel.class\")) {", "-                // Not a .class file", "-                return null;", "-            }", "-", "-            String classname = name.replace(File.separatorChar, '.');", "-            classname = classname.substring(0, classname.indexOf(\".class\"));", "-            if (verify) {", "-                try {", "-                    Class testClass = loader.loadClass(classname);", "-                    // One cannot RMIC an interface", "-                    if (testClass.isInterface() || ", "-                        !isValidRmiRemote(testClass)) {", "-                        return null;", "-                    }", "-                } catch (ClassNotFoundException e) {", "-                    log(\"Unable to verify class \" + classname + ", "-                        \". It could not be found.\", Project.MSG_WARN);", "-                } catch (NoClassDefFoundError e) {", "-                    log(\"Unable to verify class \" + classname + ", "-                        \". It is not defined.\", Project.MSG_WARN);", "-                }", "-            }", "-", "-            if (skelMapper != null) {", "-                return new String[] {", "-                    stubName[0], ", "-                    skelMapper.mapFileName(name)[0]", "-                };", "-            } else {", "-                return stubName;", "-            }", "-        }"]}]}