{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c02121939b906d2f8ab81a255af7390", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334e8e53d074bd41227f741ac10b07bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     public void add(Delegate delegate)", "signatureAfterChange": "     public void add(Delegate delegate)", "diff": ["-            for (Iterator iter = getDelegateInterfaces(delegate).iterator(); iter.hasNext();) {", "-                Object key = iter.next();", "-                List list = (List) delegates.get(key);", "+            for (Class<? extends Delegate> key : getDelegateInterfaces(delegate)) {", "+                List<Delegate> list = delegates.get(key);", "-                    list = new ArrayList();", "+                    list = new ArrayList<Delegate>();", "-                    list = new ArrayList(list);", "+                    //copy on write, top priority", "+                    list = new ArrayList<Delegate>(list);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd544308a13ddaba2d7504e5dc9926da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private Map getRestrictedDefinition()", "signatureAfterChange": "     private Map<String, List<AntTypeDefinition>> getRestrictedDefinition()", "diff": ["-    private Map getRestrictedDefinition() {", "-        Map result = new HashMap();", "+    private Map<String, List<AntTypeDefinition>> getRestrictedDefinition() {", "+        final Map<String, List<AntTypeDefinition>> result = new HashMap<String, List<AntTypeDefinition>>();", "-            for(Iterator i = restrictedDefinitions.entrySet().iterator();", "-                         i.hasNext();) {", "-                Map.Entry entry = (Map.Entry) i.next();", "-                List entryVal = (List) entry.getValue();", "+            for (Map.Entry<String, List<AntTypeDefinition>> entry : restrictedDefinitions.entrySet()) {", "+                List<AntTypeDefinition> entryVal = entry.getValue();", "-                    entryVal = new ArrayList(entryVal);", "+                    entryVal = new ArrayList<AntTypeDefinition> (entryVal);", "-                Object entryKey = entry.getKey();                                    ", "-                result.put(entryKey, entryVal);", "+                result.put(entry.getKey(), entryVal);"]}]}