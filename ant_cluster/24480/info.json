{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da529b00cdffab6e85013587abddd8e5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7080d6f00caae51e75af70b89aa65e40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "2e4d3619aa4a570f21af7f3649823636493b0f62", "commitAfterChange": "88c40c7306a8920dc569e3e3111ad42737cb0ecd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testToURI()", "signatureAfterChange": "     public void testToURI()", "diff": ["-            dosRoot = \"C:/\";", "+            dosRoot = System.getProperty(\"user.dir\").charAt(0) + \":/\";", "-            assertEquals(\"file:///\"+ dosRoot + \"foo\", fu.toURI(\"c:\\\\foo\"));", "-        }", "-        if (Os.isFamily(\"dos\")) {", "-            // this amounts to : are we under cygwin ?", "-            if (Character.isLowerCase(System.getProperty(\"user.dir\").charAt(0))) {", "-                dosRoot = \"c:/\";", "-            }", "+            assertEquals(\"file:///C:/foo\", fu.toURI(\"c:\\\\foo\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed51e714b72fcc1bc78226f66c6aab8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "d25f4c40213afd5342ccfb444b37b22523a46be2", "commitAfterChange": "7d02a9f6cf8ffa3710f69d9a9041a3bc78aa21b2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["-        long stopSearching = Math.max(0L, archive.length() - MAX_EOCD_SIZE);", "+        final long stopSearching =", "+            Math.max(0L, archive.length() - MAX_EOCD_SIZE);", "-            archive.seek(off);", "-            byte[] sig = ZipOutputStream.EOCD_SIG;", "-            int curr = archive.read();", "-            while (off >= stopSearching && curr != -1) {", "+            final byte[] sig = ZipOutputStream.EOCD_SIG;", "+            for (; off >= stopSearching; off--) {", "+                archive.seek(off);", "+                int curr = archive.read();", "+                if (curr == -1) {", "+                    break;", "+                }", "-                archive.seek(--off);", "-                curr = archive.read();"]}]}