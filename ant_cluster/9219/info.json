{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c30842f38caedf57e553f4cce3a77a07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a23a6082e853a42ff964a757e62ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void normalisePath( final StringBuffer path ) throws FileSystemException", "signatureAfterChange": "     public void normalisePath( final StringBuffer path )         throws FileSystemException", "diff": ["-    public void normalisePath( final StringBuffer path ) throws FileSystemException", "+    public void normalisePath( final StringBuffer path )", "+        throws FileSystemException", "-                if( startElem > startFirstElem )", "+                if( startElem == startFirstElem )", "-                    int pos = startElem - 2;", "-                    for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos -- )", "-                    {", "-                    }", "-                    startElem = pos + 1;", "+                    // Previous element is missing", "+                    final String message = REZ.getString( \"invalid-relative-path.error\" );", "+                    throw new FileSystemException( message );", "+", "+                // Find start of previous element", "+                int pos = startElem - 2;", "+                for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos-- )", "+                {", "+                }", "+                startElem = pos + 1;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0702cf90ede972a8fe23340ff7ca2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/type/DefaultTypeFactory.java", "commitBeforeChange": "0dcd7b3f686790a9f7e5e85ffa6d588854641bb2", "commitAfterChange": "b6e062af22ec64196ed8d8c65ff5d8b7c98689ee", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object create( final String name )         throws TypeException", "signatureAfterChange": "     public Object create( final String name )         throws TypeException", "diff": ["+        // Determine the name of the class to instantiate", "+        if( null == className )", "+        {", "+            final String message = REZ.getString( \"no-mapping.error\", name );", "+            throw new TypeException( message );", "+        }", "+", "+        // Instantiate the object"]}]}