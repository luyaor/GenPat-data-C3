{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc3befafcdb3516e2392468d54748827", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4430cd0d0124f88b5c376a8c4971bf0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "2b0c95d418b4f3646a6e8479123efd8b95147674", "commitAfterChange": "e142e5addaeb50f2c2a7c71c29747150b9fad463", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            target.lastModified() > generatedFile.lastModified();", "+            targetFile.lastModified() > generatedFile.lastModified();", "-                log(\"Compiling \" + target + \" as it is newer than \"", "+                log(\"Compiling \" + targetFile + \" as it is newer than \"", "-                log(\"Compiling \" + target + \" as \" + superGrammar", "+                log(\"Compiling \" + targetFile + \" as \" + superGrammar", "-            commandline.createArgument().setValue(target.toString());", "+            commandline.createArgument().setValue(targetFile.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b977f8142cf7195269cec5b0cec1b2e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "3d1bc7efc8e5e501406c450581eacb2c08acd44b", "commitAfterChange": "4c30847da6c777e84a8bdce102ba4142e71a8343", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (target.lastModified() > getGeneratedFile().lastModified()) {", "+        File generatedFile = getGeneratedFile();", "+        if (target.lastModified() > generatedFile.lastModified()) {", "+            log(\"Compiling \" + target + \" as it is newer than \" ", "+                + generatedFile, Project.MSG_VERBOSE);", "+", "-            log(\"Skipped grammar file. Generated file is newer.\", Project.MSG_VERBOSE);", "+            log(\"Skipped grammar file. Generated file \" + generatedFile ", "+                + \"is newer.\", Project.MSG_VERBOSE);"]}]}