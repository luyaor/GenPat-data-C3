{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ef0c5e8b9828796b605b18d7f8419b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb2860b990bc3fa73b5d29e47965a72", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": "     private void parsePackages(Vector pn, Path sp)", "signatureAfterChange": "     private void parsePackages(Vector<String> pn, Path sp)", "diff": ["-    private void parsePackages(Vector pn, Path sp) {", "-        HashSet addedPackages = new HashSet();", "-        Vector dirSets = (Vector) packageSets.clone();", "+    private void parsePackages(Vector<String> pn, Path sp) {", "+        HashSet<String> addedPackages = new HashSet<String>();", "+        @SuppressWarnings(\"unchecked\")", "+        Vector<DirSet> dirSets = (Vector<DirSet>) packageSets.clone();", "-                Enumeration e = packageNames.elements();", "+                Enumeration<PackageName> e = packageNames.elements();", "-                    PackageName p = (PackageName) e.nextElement();", "+                    PackageName p = e.nextElement();", "-            Enumeration e = excludePackageNames.elements();", "+            Enumeration<PackageName> e = excludePackageNames.elements();", "-                PackageName p = (PackageName) e.nextElement();", "+                PackageName p = e.nextElement();", "-        Enumeration e = dirSets.elements();", "+        Enumeration<DirSet> e = dirSets.elements();", "-            DirSet ds = (DirSet) e.nextElement();", "+            DirSet ds = e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0374edef7b4942ccb18733a7d81708e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected boolean isRebuildRequired( File genericJarFile, File weblogicJarFile )         throws TaskException", "signatureAfterChange": "     protected boolean isRebuildRequired( File genericJarFile, File weblogicJarFile )         throws TaskException", "diff": ["-                for( Enumeration e = genericJar.entries(); e.hasMoreElements(); )", "+                for( Iterator e = genericJar.entries(); e.hasNext(); )", "-                    JarEntry je = (JarEntry)e.nextElement();", "+                    JarEntry je = (JarEntry)e.next();", "-                for( Enumeration e = wlJar.entries(); e.hasMoreElements(); )", "+                for( Iterator e = wlJar.entries(); e.hasNext(); )", "-                    JarEntry je = (JarEntry)e.nextElement();", "+                    JarEntry je = (JarEntry)e.next();", "-                for( Enumeration e = genericEntries.keys(); e.hasMoreElements(); )", "+                for( Iterator e = genericEntries.keys(); e.hasNext(); )", "-                    String filepath = (String)e.nextElement();", "+                    String filepath = (String)e.next();", "-                    for( Enumeration e = wlEntries.elements(); e.hasMoreElements(); )", "+                    for( Iterator e = wlEntries.iterator(); e.hasNext(); )", "-                        JarEntry je = (JarEntry)e.nextElement();", "+                        JarEntry je = (JarEntry)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad896c396d4413283bab13ea59775d0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected boolean isRebuildRequired( File genericJarFile, File weblogicJarFile )         throws TaskException", "signatureAfterChange": "     protected boolean isRebuildRequired( File genericJarFile, File weblogicJarFile )         throws TaskException", "diff": ["-                for( Enumeration e = genericJar.entries(); e.hasMoreElements(); )", "+                for( Iterator e = genericJar.entries(); e.hasNext(); )", "-                    JarEntry je = (JarEntry)e.nextElement();", "+                    JarEntry je = (JarEntry)e.next();", "-                for( Enumeration e = wlJar.entries(); e.hasMoreElements(); )", "+                for( Iterator e = wlJar.entries(); e.hasNext(); )", "-                    JarEntry je = (JarEntry)e.nextElement();", "+                    JarEntry je = (JarEntry)e.next();", "-                for( Enumeration e = genericEntries.keys(); e.hasMoreElements(); )", "+                for( Iterator e = genericEntries.keys(); e.hasNext(); )", "-                    String filepath = (String)e.nextElement();", "+                    String filepath = (String)e.next();", "-                    for( Enumeration e = wlEntries.elements(); e.hasMoreElements(); )", "+                    for( Iterator e = wlEntries.iterator(); e.hasNext(); )", "-                        JarEntry je = (JarEntry)e.nextElement();", "+                        JarEntry je = (JarEntry)e.next();"]}]}