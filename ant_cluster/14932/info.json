{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ce9ac0ffce28258c6920a60173b7848", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8f0f2f905dc3adceb0cc4b6a0eaedd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/selectors/DependSelectorTest.java", "commitBeforeChange": "33832587a4070693dd77d6e08fcf4e7d0d9a2b99", "commitAfterChange": "126daf8b31f6c01d1c6891581195db9956142970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "     public void testSelectionBehaviour()", "diff": ["-            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "-                s = (DependSelector)getInstance();", "-                s.setTargetdir(beddir);", "-                m = s.createMapper();", "-                m.setType(merge);", "-                m.setTo(\"asf-logo.gif.gz\");", "-                results = selectionString(s);", "-                assertEquals(\"TFFFFTTTFFF\", results.substring(0,11));", "+            s = (DependSelector)getInstance();", "+            s.setTargetdir(beddir);", "+            m = s.createMapper();", "+            m.setType(merge);", "+            m.setTo(\"asf-logo.gif.gz\");", "+            results = selectionString(s);", "+            assertEquals(\"TFFFFTTTFFF\", results.substring(0,11));", "-                s = (DependSelector)getInstance();", "-                s.setTargetdir(beddir);", "-                m = s.createMapper();", "-                m.setType(merge);", "-                m.setTo(\"asf-logo.gif.bz2\");", "-                results = selectionString(s);", "-                assertEquals(\"TTFTTTTTTTTT\", results);", "+            s = (DependSelector)getInstance();", "+            s.setTargetdir(beddir);", "+            m = s.createMapper();", "+            m.setType(merge);", "+            m.setTo(\"asf-logo.gif.bz2\");", "+            results = selectionString(s);", "+            assertEquals(\"TTFTTTTTTTTT\", results);", "-                // Test for path relative to project base directory", "-                s = (DependSelector)getInstance();", "-                subdir = new File(\"selectortest/tar/bz2\");", "-                s.setTargetdir(subdir);", "-                m = s.createMapper();", "-                m.setType(glob);", "-                m.setFrom(\"*.bz2\");", "-                m.setTo(\"*.tar.bz2\");", "-                results = selectionString(s);", "-                assertEquals(\"FFTFFFFFFTTF\", results);", "-            }", "+            // Test for path relative to project base directory", "+            s = (DependSelector)getInstance();", "+            subdir = new File(\"selectortest/tar/bz2\");", "+            s.setTargetdir(subdir);", "+            m = s.createMapper();", "+            m.setType(glob);", "+            m.setFrom(\"*.bz2\");", "+            m.setTo(\"*.tar.bz2\");", "+            results = selectionString(s);", "+            assertEquals(\"FFTFFFFFFTTF\", results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b196f1a709ea3154be521ba787d3ef1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/selectors/DependSelectorTest.java", "commitBeforeChange": "e5235423ccd494cb7516a1df6e3e13a74a22b767", "commitAfterChange": "da5a13f8e4e0e4475f942b5ae5670271b711d423", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "     public void testSelectionBehaviour()", "diff": ["+        File subdir;", "-            s.setTargetdir(basedirname);", "+            s.setTargetdir(beddir);", "-            s.setTargetdir(basedirname);", "+            s.setTargetdir(beddir);", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(basedirname);", "-            m = s.createMapper();", "-            m.setType(merge);", "-            m.setTo(\"asf-logo.gif.gz\");", "-            results = selectionString(s);", "-            assertEquals(\"TFFFFTTTFFFF\", results);", "+            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "+                s = (DependSelector)getInstance();", "+                s.setTargetdir(beddir);", "+                m = s.createMapper();", "+                m.setType(merge);", "+                m.setTo(\"asf-logo.gif.gz\");", "+                results = selectionString(s);", "+                assertEquals(\"TFFFFTTTFFF\", results.substring(0,11));", "+", "+                s = (DependSelector)getInstance();", "+                s.setTargetdir(beddir);", "+                m = s.createMapper();", "+                m.setType(merge);", "+                m.setTo(\"asf-logo.gif.bz2\");", "+                results = selectionString(s);", "+                assertEquals(\"TTFTTTTTTTTT\", results);", "+", "+                // Test for path relative to project base directory", "+                s = (DependSelector)getInstance();", "+                subdir = new File(\"selectortest/tar/bz2\");", "+                s.setTargetdir(subdir);", "+                m = s.createMapper();", "+                m.setType(glob);", "+                m.setFrom(\"*.bz2\");", "+                m.setTo(\"*.tar.bz2\");", "+                results = selectionString(s);", "+                assertEquals(\"FFTFFFFFFTTF\", results);", "+            }", "-            s.setTargetdir(basedirname);", "-            m = s.createMapper();", "-            m.setType(merge);", "-            m.setTo(\"asf-logo.gif.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"TTFTTTTTTTTT\", results);", "-", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(basedirname + \"/tar/bz2\");", "+            subdir = new File(beddir,\"tar/bz2\");", "+            s.setTargetdir(subdir);", "+            try {", "+                makeMirror();", "+", "+                s = (DependSelector)getInstance();", "+                File testdir = getProject().resolveFile(\"selectortest2\");", "+                s.setTargetdir(testdir);", "+                results = selectionString(s);", "+                assertEquals(\"FFFTTFFFFFFF\", results);", "+", "+                s = (DependSelector)getInstance();", "+                testdir = getProject().resolveFile(\"selectortest2/tar/bz2\");", "+                s.setTargetdir(testdir);", "+                m = s.createMapper();", "+                m.setType(glob);", "+                m.setFrom(\"*.bz2\");", "+                m.setTo(\"*.tar.bz2\");", "+                results = mirrorSelectionString(s);", "+                assertEquals(\"FFFFFFFFFTTF\", results);", "+                results = selectionString(s);", "+                assertEquals(\"FFFFFFFFFTTF\", results);", "+            }", "+            finally {", "+                cleanupMirror();", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7a45a287ca7b32702156d5b70039e4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/DependSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "      @Test     public void testSelectionNoMapper()", "diff": ["-     */", "-    public void testSelectionBehaviour() {", "-        DependSelector s;", "-        String results;", "-        File subdir;", "-        Mapper m;", "-        Mapper.MapperType glob = new Mapper.MapperType();", "-        glob.setValue(\"glob\");", "-        try {", "-            makeBed();", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFFFF\", results);", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            m = s.createMapper();", "-            m.setType(identity);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFFFF\", results);", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            m = s.createMapper();", "-            m.setType(merge);", "-            m.setTo(\"asf-logo.gif.gz\");", "-            results = selectionString(s);", "-            assertEquals(\"TFFFFTTTFFF\", results.substring(0,11));", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            m = s.createMapper();", "-            m.setType(merge);", "-            m.setTo(\"asf-logo.gif.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"TTFTTTTTTTTT\", results);", "-            // Test for path relative to project base directory", "-            s = (DependSelector)getInstance();", "-            subdir = new File(\"selectortest/tar/bz2\");", "-            s.setTargetdir(subdir);", "-            m = s.createMapper();", "-            m.setType(glob);", "-            m.setFrom(\"*.bz2\");", "-            m.setTo(\"*.tar.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"FFTFFFFFFTTF\", results);", "-            s = (DependSelector)getInstance();", "-            subdir = new File(beddir,\"tar/bz2\");", "-            s.setTargetdir(subdir);", "-            m = s.createMapper();", "-            m.setType(glob);", "-            m.setFrom(\"*.bz2\");", "-            m.setTo(\"*.tar.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFTTF\", results);", "-            try {", "-                makeMirror();", "-                s = (DependSelector)getInstance();", "-                File testdir = new File(getOutputDir(), \"selectortest2\");", "-                s.setTargetdir(testdir);", "-                results = selectionString(s);", "-                assertEquals(\"FFFTTFFFFFFF\", results);", "-                s = (DependSelector)getInstance();", "-                testdir = new File(getOutputDir(), \"selectortest2/tar/bz2\");", "-                s.setTargetdir(testdir);", "-                m = s.createMapper();", "-                m.setType(glob);", "-                m.setFrom(\"*.bz2\");", "-                m.setTo(\"*.tar.bz2\");", "-                results = mirrorSelectionString(s);", "-                assertEquals(\"FFFFFFFFFTTF\", results);", "-                results = selectionString(s);", "-                assertEquals(\"FFFFFFFFFTTF\", results);", "-            }", "-            finally {", "-                cleanupMirror();", "-            }", "-        }", "-        finally {", "-            cleanupBed();", "-        }", "+", "+    @Test", "+    public void testSelectionNoMapper() {", "+        DependSelector s = new DependSelector();", "+        s.setTargetdir(new File(selectorRule.getOutputDir(), \"selectortest2\"));", "+        String results = selectorRule.selectionString(s);", "+        assertEquals(\"FFFTTFFFFFFF\", results);", "+    }"]}]}