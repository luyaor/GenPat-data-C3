{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab6f312f5ccfa3a8c8c7fc264efa8a5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20af3c609ebff76941d7deb184473b7f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UpToDateTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      @Before     public void setUp()", "diff": ["+", "+    @Before", "-        configureProject(\"src/etc/testcases/taskdefs/uptodate.xml\");", "+        buildRule.configureProject(\"src/etc/testcases/taskdefs/uptodate.xml\");", "+        buildRule.executeTarget(\"setUp\");", "+        File srcDir = buildRule.getProject().resolveFile(\"source\");", "+        assumeTrue(\"Could not change modification timestamp of source directory\",", "+                srcDir.setLastModified(srcDir.lastModified()", "+                - (3 * FileUtils.getFileUtils().getFileTimestampGranularity())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5375093c4db641568a3c9cb632982f68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testNonPublic()", "signatureAfterChange": "     @Test     public void testNonPublic()", "diff": ["+    @Test", "-        executeTarget(\"testnonpublic\");", "-        String log = getLog();", "-        assertTrue(\"Expected warning about APrivate\",", "-            log.indexOf(\"The class APrivate in file\") != -1);", "-        assertTrue(\"but has not been deleted because its source file \"", "+        buildRule.executeTarget(\"src5setup\");", "+        buildRule.executeTarget(\"compile\");", "+", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"tempsrc.dir\")), 5);", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"classes.dir\")), 5);", "+", "+        buildRule.executeTarget(\"testnonpublic\");", "+        String log = buildRule.getLog();", "+        assertContains(\"Expected warning about APrivate\",", "+            \"The class APrivate in file\", log);", "+        assertContains(\"but has not been deleted because its source file \"", "-            log.indexOf(\"The class APrivate in file\") != -1);", "+            \"The class APrivate in file\", log);"]}]}