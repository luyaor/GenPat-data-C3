{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "656a18076f02e468b6167d02b97b343f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d29f7376afb8cce9d3a54bfa99b6d41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "018aa8685b246a8bb269832fcbc935874eff0c1e", "commitAfterChange": "e545bf4a3695a90cc6d3645fb20d5dbacc7ec988", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "diff": ["-        JarOutputStream jarStream = null;", "-        Iterator entryIterator = null;", "-        String entryName = null;", "-        File entryFile = null;", "-\tFile entryDir = null;", "-\tString innerfiles[] = null;", "+        JarOutputStream jarStream = null;", "+            // clean the addedfiles Vector ", "+            addedfiles = new ArrayList();", "+", "+            ", "-            entryIterator = files.keySet().iterator();", "-            while (entryIterator.hasNext()) {", "-                entryName = (String) entryIterator.next();", "-                entryFile = (File) files.get(entryName);", "+            for (Iterator entryIterator = files.keySet().iterator(); entryIterator.hasNext(); ) {", "+                String entryName = (String) entryIterator.next();", "+                File entryFile = (File) files.get(entryName);", "-                getTask().log(\"adding file '\" + entryName + \"'\",", "+                log(\"adding file '\" + entryName + \"'\",", "-                addFileToJar(jarStream,", "-                             new FileInputStream(entryFile),", "-                             entryName);", "+                addFileToJar(jarStream, entryFile, entryName);", "-\t\t// See if there are any inner classes for this class and add them in if there are", "-\t\tInnerClassFilenameFilter flt = new InnerClassFilenameFilter(entryFile.getName());", "-\t\tentryDir = entryFile.getParentFile();", "-\t\tinnerfiles = entryDir.list(flt);", "-\t\tfor (int i=0, n=innerfiles.length; i < n; i++) {", "-\t", "-\t\t\t//get and clean up innerclass name", "-\t\t\tentryName = entryName.substring(0, entryName.lastIndexOf(entryFile.getName())-1) + File.separatorChar + innerfiles[i];", "-", "-\t\t\t// link the file", "-\t\t\tentryFile = new File(srcDir, entryName);", "-", "-\t\t\tgetTask().log(\"adding innerclass file '\" + entryName + \"'\", ", "-\t\t\t\t    Project.MSG_VERBOSE);", "-", "-\t\t\taddFileToJar(jarStream,", "-                                     new FileInputStream(entryFile),", "-                                     entryName);", "-", "-\t\t}", "+                // See if there are any inner classes for this class and add them in if there are", "+                InnerClassFilenameFilter flt = new InnerClassFilenameFilter(entryFile.getName());", "+                File entryDir = entryFile.getParentFile();", "+                String[] innerfiles = entryDir.list(flt);", "+                for (int i=0, n=innerfiles.length; i < n; i++) {", "+            ", "+                    //get and clean up innerclass name", "+                    entryName = entryName.substring(0, entryName.lastIndexOf(entryFile.getName())-1) + File.separatorChar + innerfiles[i];", "+        ", "+                    // link the file", "+                    entryFile = new File(srcDir, entryName);", "+        ", "+                    log(\"adding innerclass file '\" + entryName + \"'\", ", "+                            Project.MSG_VERBOSE);", "+        ", "+                    addFileToJar(jarStream, entryFile, entryName);", "+        ", "+                }", "-            // All done.  Close the jar stream.", "-            jarStream.close();", "+        finally {", "+            if (jarStream != null) {", "+                try {", "+                    jarStream.close();", "+                }", "+                catch (IOException closeException) {}", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9322bd3f6d1fe0948dc60c33dcc08ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "470a4695e947c43343806a5a8ec79f1e4b4a9321", "commitAfterChange": "29c20176679062f1345b7edc0aa3fe1b5810c858", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void extractFile(Touch touch, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, long entrySize,                                Date entryDate, boolean isDirectory,                                String modeStr, String userGroup)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, long entrySize,                                Date entryDate, boolean isDirectory,                                String modeStr, String userGroup)                                throws IOException", "diff": ["-    protected void extractFile(Touch touch, File srcF, File dir,", "+    protected void extractFile(FileUtils fileUtils, File srcF, File dir,", "-            File f = new File(dir, project.translatePath(entryName));", "+            File f = fileUtils.resolveFile(dir, entryName);", "-                File dirF=new File(f.getParent());", "+                File dirF= fileUtils.getParentFile(f);", "-                    FileOutputStream fos = new FileOutputStream(f);", "-", "-                    while ((length =", "+                    FileOutputStream fos = null;", "+                    try {", "+                        fos = new FileOutputStream(f);", "+                        ", "+                        while ((length =", "-                        fos.write(buffer, 0, length);", "+                            fos.write(buffer, 0, length);", "+                        }", "+                        ", "+                        fos.close();", "+                        fos = null;", "+                    } finally {", "+                        if (fos != null) {", "+                            try {", "+                                fos.close();", "+                            } catch (IOException e) {}", "+                        }", "-", "-                    fos.close();", "-", "-                if (project.getJavaVersion() != Project.JAVA_1_1) {", "-                    touch.setFile(f);", "-                    touch.setMillis(entryDate.getTime());", "-                    touch.touch();", "-                }", "-", "+                    ", "+                fileUtils.setFileLastModified(f, entryDate.getTime());"]}]}