{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "132decb1b1256e09aee81c477e38081a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f33dc0f22d84624bb99a0131338f13f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testContainsRegex2() throws IOException", "signatureAfterChange": "      @Test     public void testContainsRegex2() throws IOException", "diff": ["+    @Test", "-        if (! hasRegex(\"testContainsRegex2\"))", "-            return;", "-        String contents = getFileString(", "-            \"containsregex2\", getProject().getProperty(\"output\") + \"/containsregex2\");", "-        assertStringContains(contents, \"void register_bits();\");", "+    \tbuildRule.executeTarget(\"hasregex\");", "+        Assume.assumeTrue(\"Regex not present\", getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"));", "+        ", "+        buildRule.executeTarget(\"containsregex2\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/containsregex2\");", "+        assertContains(\"void register_bits();\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca7d409bcb34e79639b61a8bb27fc7c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testFilterReplaceRegex() throws IOException", "signatureAfterChange": "      @Test     public void testFilterReplaceRegex() throws IOException", "diff": ["+    @Test", "-        if (! hasRegex(\"testFilterReplaceRegex\"))", "-            return;", "-        String contents = getFileString(", "-            \"filterreplaceregex\", getProject().getProperty(\"output\") + \"/filterreplaceregex\");", "-        assertStringContains(contents, \"world world world world\");", "+    \tbuildRule.executeTarget(\"hasregex\");", "+        Assume.assumeTrue(\"Regex not present\",", "+                getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"));", "+", "+        buildRule.executeTarget(\"filterreplaceregex\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filterreplaceregex\");", "+        assertContains(\"world world world world\", contents);", "+"]}]}