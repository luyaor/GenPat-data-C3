{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a62c4b3dd5795bc7a1049b7f72e38b4c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306bc8202a9ec7e3ce3a4df9893cc87f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "cf4c2f018749355bf2c390e438cc18bc7e234efa", "commitAfterChange": "8162d141e44b778d135f9251277e85c922f0544c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void addExistingToClasspath(StringBuffer target,String source)", "signatureAfterChange": "     private void addExistingToClasspath(Path target, Path source)", "diff": ["-    private void addExistingToClasspath(StringBuffer target,String source) {", "-       StringTokenizer tok = new StringTokenizer(source,", "-                             System.getProperty(\"path.separator\"), false);", "-       while (tok.hasMoreTokens()) {", "-           File f = project.resolveFile(tok.nextToken());", "+    private void addExistingToClasspath(Path target, Path source) {", "+        String[] list = source.list();", "+        for (int i=0; i<list.length; i++) {", "+            File f = project.resolveFile(list[i]);", "-           if (f.exists()) {", "-               target.append(File.pathSeparator);", "-               target.append(f.getAbsolutePath());", "+            if (f.exists()) {", "+                target.setLocation(f.getAbsolutePath());", "-       }", "-", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e9db05013fb2af629edc413e55339f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "2e52d68af6f378e43debf2e78aa89ef37833179f", "commitAfterChange": "f5f6982c88e608482d611018d32219f2f528c045", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "     public static String translatePath(String toProcess)", "signatureAfterChange": "     public static String translatePath(String toProcess)", "diff": ["-        if (toProcess == null || toProcess.length() == 0) {", "-            return \"\";", "-        }", "-        StringBuffer path = new StringBuffer(toProcess.length() + 50);", "-        PathTokenizer tokenizer = new PathTokenizer(toProcess);", "-        while (tokenizer.hasMoreTokens()) {", "-            String pathComponent = tokenizer.nextToken();", "-            pathComponent = pathComponent.replace('/', File.separatorChar);", "-            pathComponent = pathComponent.replace('\\\\', File.separatorChar);", "-            if (path.length() != 0) {", "-                path.append(File.pathSeparatorChar);", "-            }", "-            path.append(pathComponent);", "-        }", "-        return path.toString();", "+        return FileUtils.translatePath(toProcess);"]}]}