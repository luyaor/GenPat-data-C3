{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfb5d58dae722e15e0b42707bc3717f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bef7b4a078b045c532f156f2214c7cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "21b09b4cdd2b0ebe4ca13726285cb4769d41ef24", "commitAfterChange": "e955e3d96162fd17c8bc4a4865b15f2ba11c03f4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testRemoveLeadingPath()", "signatureAfterChange": "     public void testRemoveLeadingPath()", "diff": ["+", "+        String expected = \"foo/bar\".replace('\\\\', File.separatorChar)", "+            .replace('/', File.separatorChar);", "+        assertEquals(expected, fu.removeLeadingPath(new File(\"/\"),", "+                                                    new File(\"/foo/bar\")));", "+        assertEquals(expected, fu.removeLeadingPath(new File(\"c:/\"),", "+                                                    new File(\"c:/foo/bar\")));", "+        assertEquals(expected, fu.removeLeadingPath(new File(\"c:\\\\\"),", "+                                                    new File(\"c:\\\\foo\\\\bar\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf2d254b6e4c53dd870558fea003d26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "5670f30a85ce318a1654b7e9314a3db8b12df713", "commitAfterChange": "b3e94490f541ce66c3c9228e6aa2f78abe899e17", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testRemoveLeadingPath()", "signatureAfterChange": "     public void testRemoveLeadingPath()", "diff": ["+        // bugzilla report 19979", "+        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar\"), ", "+                                              new File(\"/foo/bar\")));", "+        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar\"), ", "+                                              new File(\"/foo/bar/\")));", "+        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar/\"), ", "+                                              new File(\"/foo/bar/\")));", "+        assertEquals(\"\", fu.removeLeadingPath(new File(\"/foo/bar/\"), ", "+                                              new File(\"/foo/bar\")));"]}]}