{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e2800c3be570ea2cdfa39531a0064c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd8385c014022d2c7f3cfd1cfb1d91c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(final ClassLoader coreLoader) throws BuildException", "diff": ["-    private void runBuild(ClassLoader coreLoader) throws BuildException {", "+    private void runBuild(final ClassLoader coreLoader) throws BuildException {", "-        ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "+        final ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "-        for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "-            List<String> extraArgs = extraArguments.get(processor.getClass());", "+        for (final ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+            final List<String> extraArgs = extraArguments.get(processor.getClass());", "-            PrintStream savedErr = System.err;", "-            PrintStream savedOut = System.out;", "-            InputStream savedIn = System.in;", "+            final PrintStream savedErr = System.err;", "+            final PrintStream savedOut = System.out;", "+            final InputStream savedIn = System.in;", "-                    } catch (SecurityException swallowed) {", "+                    } catch (final SecurityException swallowed) {", "-                    ProxySetup proxySetup = new ProxySetup(project);", "+                    final ProxySetup proxySetup = new ProxySetup(project);", "-                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "-                    List<String> extraArgs = extraArguments.get(processor.getClass());", "+                for (final ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    final List<String> extraArgs = extraArguments.get(processor.getClass());", "-                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "-                    List<String> extraArgs = extraArguments.get(processor.getClass());", "+                for (final ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    final List<String> extraArgs = extraArguments.get(processor.getClass());", "-        } catch (RuntimeException exc) {", "+        } catch (final RuntimeException exc) {", "-        } catch (Error e) {", "+        } catch (final Error e) {", "-                } catch (Throwable t) {", "+                } catch (final Throwable t) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afcd2df5b81eaca9160bbebad0a5d648", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(final String[] args)", "diff": ["-    private void processArgs(String[] args) {", "+    private void processArgs(final String[] args) {", "-        ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "-        ", "+        final ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "+", "-            String arg = args[i];", "+            final String arg = args[i];", "-                    File logFile = new File(args[i + 1]);", "+                    final File logFile = new File(args[i + 1]);", "-                } catch (IOException ioe) {", "-                    String msg = \"Cannot write on the specified log file. \"", "+                } catch (final IOException ioe) {", "+                    final String msg = \"Cannot write on the specified log file. \"", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    String msg = \"You must specify a log file when \"", "+                } catch (final ArrayIndexOutOfBoundsException aioobe) {", "+                    final String msg = \"You must specify a log file when \"", "-                String msg = \"Ant's Main method is being handed \"", "+                final String msg = \"Ant's Main method is being handed \"", "-                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "-                    int newI = processor.readArguments(args, i);", "+                for (final ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    final int newI = processor.readArguments(args, i);", "-                    String msg = \"Unknown argument: \" + arg;", "+                    final String msg = \"Unknown argument: \" + arg;", "-                    Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "+                    final Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "-                        ProjectHelper helper = it.next();", "+                        final ProjectHelper helper = it.next();", "-                Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "+                final Iterator<ProjectHelper> it = ProjectHelperRepository.getInstance().getHelpers();", "-                    ProjectHelper helper = it.next();", "+                    final ProjectHelper helper = it.next();", "-            File whatYouMeant = new File(buildFile, \"build.xml\");", "+            final File whatYouMeant = new File(buildFile, \"build.xml\");"]}]}