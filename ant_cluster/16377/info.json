{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce4035eaff2e056f3221e93dd8ddcd6d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6586d7de4fdc6056a496a936aa82e44c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void bsSetStream(InputStream f)", "signatureAfterChange": "      private boolean bsGetBit() throws IOException", "diff": ["-    private void bsSetStream(InputStream f) {", "-        bsStream = f;", "-        bsLive = 0;", "-        bsBuff = 0;", "-    }", "+", "+    private boolean bsGetBit() throws IOException {", "+        int bsLive = this.bsLive;", "+        int bsBuff = this.bsBuff;", "+", "+        if (bsLive < 1) {", "+            int thech = this.in.read();", "+", "+            if (thech < 0) {", "+                throw new IOException(\"unexpected end of stream\");", "+            }", "+", "+            bsBuff = (bsBuff << 8) | thech;", "+            bsLive += 8;", "+            this.bsBuff = bsBuff;", "+        }", "+", "+        this.bsLive = bsLive - 1;", "+        return ((bsBuff >> (bsLive - 1)) & 1) != 0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698e907867faca68c279856f5270bd67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "commitAfterChange": "a67cf020bd250a1fb2acecf7cfd0159f25200dc2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void init() throws IOException", "signatureAfterChange": "      private boolean init(boolean isFirstStream) throws IOException", "diff": ["-    private void init() throws IOException {", "+    private boolean init(boolean isFirstStream) throws IOException {", "-        if (in.available() == 0) {", "-            throw new IOException(\"Empty InputStream\");", "+        ", "+        if (isFirstStream) {", "+            if (in.available() == 0) {", "+                throw new IOException(\"Empty InputStream\");", "+            }", "+        } else {", "+            int magic0 = this.in.read();", "+            if (magic0 == -1) {", "+                return false;", "+            }", "+            int magic1 = this.in.read();", "+            if (magic0 != 'B' || magic1 != 'Z') {", "+                throw new IOException(\"Garbage after a valid BZip2 stream\");", "+            }", "+", "-            throw new IOException(\"Stream is not BZip2 formatted: expected 'h'\"", "-                                  + \" as first byte but got '\" + (char) magic2", "-                                  + \"'\");", "+            throw new IOException(isFirstStream", "+                    ? \"Stream is not in the BZip2 format\"", "+                    : \"Garbage after a valid BZip2 stream\");", "-        initBlock();", "-        setupBlock();", "+        this.bsLive = 0;", "+        this.computedCombinedCRC = 0;", "+", "+        return true;"]}]}