{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a531f24e707c8bc184c4caf0f74cc93", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd9faea1e1e358b466dec5db6249fb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "commitAfterChange": "7e05b3d981ceab1b87536eed26f67d82470f1a0c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "signatureAfterChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "diff": ["+        ", "+        try {", "+            result = File.createTempFile(prefix, suffix, new File(parent));", "+        } catch (IOException e) {", "+            throw new BuildException(\"Could not create tempfile in \" + parent, e);", "+        }", "+        ", "+        if (deleteOnExit) {", "+            result.deleteOnExit();", "+        }", "+        return result;", "+    }", "-                result = new File(parent, prefix + fmt.format(Math.abs(rand.nextInt())) + suffix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfe45ff36c3b366b7db335fe5992775", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTPConfigurator.java", "commitBeforeChange": "1c24c78ca5605e5ffd84b67673207b4769e4fc41", "commitAfterChange": "d72413184949c04015b452cf9cdf36bf2107061f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     static FTPClient configure(FTPClient client, FTP task)", "signatureAfterChange": "     static FTPClient configure(FTPClient client, FTPTaskConfig task)", "diff": ["-    static FTPClient configure(FTPClient client, FTP task) {", "+    static FTPClient configure(FTPClient client, FTPTaskConfig task) {", "+            if (!\"\".equals(serverLanguageCodeConfig)", "+                && !FTPClientConfig.getSupportedLanguageCodes()", "+                .contains(serverLanguageCodeConfig)) {", "+                throw new BuildException(\"unsupported language code\" +", "+                                         serverLanguageCodeConfig);", "+            }"]}]}