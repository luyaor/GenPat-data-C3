{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "652cf9afa861d3369f30c02ef8a7206a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2cab3fef0dbe17a8dd681495a20256b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected String getString(byte[] bytes) throws ZipException", "signatureAfterChange": "     private void positionAtCentralDirectory64()         throws IOException", "diff": ["+     */", "+    private void positionAtCentralDirectory64()", "+        throws IOException {", "+        skipBytes(ZIP64_EOCDL_LOCATOR_OFFSET);", "+        byte[] zip64EocdOffset = new byte[DWORD];", "+        archive.readFully(zip64EocdOffset);", "+        archive.seek(ZipEightByteInteger.getLongValue(zip64EocdOffset));", "+        byte[] sig = new byte[WORD];", "+        archive.readFully(sig);", "+        if (sig[POS_0] != ZipOutputStream.ZIP64_EOCD_SIG[POS_0]", "+            || sig[POS_1] != ZipOutputStream.ZIP64_EOCD_SIG[POS_1]", "+            || sig[POS_2] != ZipOutputStream.ZIP64_EOCD_SIG[POS_2]", "+            || sig[POS_3] != ZipOutputStream.ZIP64_EOCD_SIG[POS_3]", "+            ) {", "+            throw new ZipException(\"archive's ZIP64 end of central \"", "+                                   + \"directory locator is corrupt.\");", "+        }", "+        skipBytes(ZIP64_EOCD_CFD_LOCATOR_OFFSET", "+                  - WORD /* signature has already been read */);", "+        byte[] cfdOffset = new byte[DWORD];", "+        archive.readFully(cfdOffset);", "+        archive.seek(ZipEightByteInteger.getLongValue(cfdOffset));", "+    }", "-     */", "-    protected String getString(byte[] bytes) throws ZipException {", "-        try {", "-            return ZipEncodingHelper.getZipEncoding(encoding).decode(bytes);", "-        } catch (IOException ex) {", "-            throw new ZipException(\"Failed to decode name: \" + ex.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5754261a0e0bf29fb837b3388fc3c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "b1b76c9c72c63ad046f952916e61b6aa8c1fea94", "commitAfterChange": "1be216b5d5ba9365d09b12c64ad31cd3cc7d5cdd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            Transport.send(msg);", "+            try {", "+                Transport.send(msg);", "+            } catch (SendFailedException sfe) {", "+                if (!shouldIgnoreInvalidRecipients()) {", "+                    throw new BuildException(GENERIC_ERROR, sfe);", "+                } else if (sfe.getValidSentAddresses() == null", "+                           || sfe.getValidSentAddresses().length == 0) {", "+                    throw new BuildException(\"Couldn't reach any recipient\",", "+                                             sfe);", "+                } else {", "+                    Address[] invalid = sfe.getInvalidAddresses();", "+                    if (invalid == null) {", "+                        invalid = new Address[0];", "+                    }", "+                    for (int i = 0; i < invalid.length; i++) {", "+                        didntReach(invalid[i], \"invalid\", sfe);", "+                    }", "+                    Address[] validUnsent = sfe.getValidUnsentAddresses();", "+                    if (validUnsent == null) {", "+                        validUnsent = new Address[0];", "+                    }", "+                    for (int i = 0; i < validUnsent.length; i++) {", "+                        didntReach(validUnsent[i], \"valid\", sfe);", "+                    }", "+                }", "+            }", "-            throw new BuildException(\"Problem while sending mime mail:\", e);", "+            throw new BuildException(GENERIC_ERROR, e);", "-            throw new BuildException(\"Problem while sending mime mail:\", e);", "+            throw new BuildException(GENERIC_ERROR, e);"]}]}