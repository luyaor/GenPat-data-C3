{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "759f60335c233486eb005b649de2ee90", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a27b0c1309b4ff2f1af802e28dc6f56", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "77024a43a293e7911609d3c3192e773f082688ce", "commitAfterChange": "433387b88ebe29602937982ca3eac4f78d233180", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            File fsDir = fs.getDir();", "+            final File fsDir = fs.getDir();", "-                resourcesToDelete.add(fs);", "+                // the previous line has already scanned the", "+                // filesystem, in order to avoid a rescan when later", "+                // iterating, capture the results now and store them", "+                final String[] files = ds.getIncludedFiles();", "+                resourcesToDelete.add(new ResourceCollection() {", "+                        public boolean isFilesystemOnly() {", "+                            return true;", "+                        }", "+                        public int size() {", "+                            return files.length;", "+                        }", "+                        public Iterator iterator() {", "+                            return new FileResourceIterator(getProject(),", "+                                                            fsDir, files);", "+                        }", "+                    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dfa0aa16692e362700ee24e704e313d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "51d2ae9068cde0e8a071a48a5f1188ebba14587a", "commitAfterChange": "e20a25b59653ec883676504b42c70591040fa2f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void scanme()", "signatureAfterChange": "     private void scanme()", "diff": ["-        if (lastScannedResource != null ", "+        if (lastScannedResource != null", "-            && lastScannedResource.getLastModified() ", "-               == thisresource.getLastModified()) {", "+            && lastScannedResource.getLastModified()", "+            == thisresource.getLastModified()) {", "-        Vector vResult = new Vector();", "-        myentries = new Vector();", "+        myentries = new Hashtable();", "-                    task.log(\"opening input stream from \" + srcFile, ", "+                    task.log(\"opening input stream from \" + srcFile,", "-            ", "+", "-                    myentries.addElement(new Resource(entry.getName(),", "-                                               true,", "-                                               entry.getTime(),", "+                    myentries.put(new String(entry.getName()),", "+                                  new Resource(entry.getName(), true,", "+                                               entry.getTime(), ", "-                    ", "+"]}]}