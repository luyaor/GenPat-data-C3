{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "205df1623eb833dce2ea2710485dca78", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb2f0bd407de889f152ae2355fcb260", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "0f01837a97b71ef0050e4a8dadeaadbf221066ec", "commitAfterChange": "1081cadc83321c93e551269a920df162dc4cc42e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void setupComponents()         throws Exception", "signatureAfterChange": "     private void setupComponents()         throws Exception", "diff": ["-        createComponent( ConverterRegistry.class, PREFIX + \"converter.DefaultConverterRegistry\" );", "-        createComponent( Converter.class, PREFIX + \"converter.DefaultMasterConverter\" );", "+        final Object converter =", "+            createComponent( Converter.class, PREFIX + \"converter.DefaultMasterConverter\" );", "+        m_serviceManager.put( ConverterRegistry.ROLE, converter );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4939bce940e693881f6c72ba62c56a76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/execution/AntLibrary.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addConverterDefinition(ConverterDefinition converterDefinition)", "signatureAfterChange": "     public void addConverterDefinition(ConverterDefinition converterDef)", "diff": ["+     */", "+    public void addConverterDefinition(ConverterDefinition converterDef) {", "+        String targetClassname = converterDef.getTargetClassName();", "+        converterDefinitions.put(targetClassname, converterDef);", "+    }", "-     */", "-    public void addConverterDefinition(ConverterDefinition converterDefinition) {", "-        converterDefinitions.add(converterDefinition);", "-    }"]}]}