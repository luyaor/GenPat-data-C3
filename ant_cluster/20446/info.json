{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b2ff66d21984260a95efaab1ee0d5f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1ec0c7c7294572a78e65c37da98bdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/RecorderEntry.java", "commitBeforeChange": "c4385b7b1baf768791391474a0f58441bbcd6261", "commitAfterChange": "07382b400af7ecebc64eff5c55b4f562efd156d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static String formatTime( long millis )", "signatureAfterChange": "      private static String formatTime( long millis )", "diff": ["-            return Long.toString( minutes ) + \" minute\"", "-                + ( minutes == 1 ? \" \" : \"s \" )", "-                + Long.toString( seconds % 60 ) + \" second\"", "-                + ( seconds % 60 == 1 ? \"\" : \"s\" );", "+            return minutes + \" minute\" + ( minutes == 1 ? \" \" : \"s \" ) +", "+                ( seconds % 60 ) + \" second\" + ( seconds % 60 == 1 ? \"\" : \"s\" );", "-            return Long.toString( seconds ) + \" second\"", "-                + ( seconds % 60 == 1 ? \"\" : \"s\" );", "+            return seconds + \" second\" + ( seconds % 60 == 1 ? \"\" : \"s\" );", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564068f301db48751bcded8094843daa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java", "commitBeforeChange": "c4385b7b1baf768791391474a0f58441bbcd6261", "commitAfterChange": "07382b400af7ecebc64eff5c55b4f562efd156d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static String formatTime( long millis )", "signatureAfterChange": "      private static String formatTime( long millis )", "diff": ["-            return Long.toString( minutes ) + \" minute\"", "-                + ( minutes == 1 ? \" \" : \"s \" )", "-                + Long.toString( seconds % 60 ) + \" second\"", "-                + ( seconds % 60 == 1 ? \"\" : \"s\" );", "+            return minutes + \" minute\" + ( minutes == 1 ? \" \" : \"s \" ) +", "+                ( seconds % 60 ) + \" second\" + ( seconds % 60 == 1 ? \"\" : \"s\" );", "-            return Long.toString( seconds ) + \" second\"", "-                + ( seconds % 60 == 1 ? \"\" : \"s\" );", "+            return seconds + \" second\" + ( seconds % 60 == 1 ? \"\" : \"s\" );", "-"]}]}