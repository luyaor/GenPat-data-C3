{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "260c516630ec8b670dceabcfb9fd78ad", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8264eb918e3589dab167db6a732bcb92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        Path savedPath = path;", "+        Union savedPath = path;", "-                path = new Path(getProject()).createPath();", "-                Object obj = refid.getReferencedObject(getProject());", "-", "-                if (obj instanceof Path) {", "-                    path.setRefid(refid);", "-                } else if (obj instanceof FileSet) {", "-                    path.addFileset((FileSet) obj);", "-                } else if (obj instanceof DirSet) {", "-                    path.addDirset((DirSet) obj);", "-                } else if (obj instanceof FileList) {", "-                    path.addFilelist((FileList) obj);", "-                } else {", "-                    throw new BuildException(\"'refid' does not refer to a \"", "-                         + \"path, fileset, dirset, or filelist.\");", "+                Object o = refid.getReferencedObject(getProject());", "+                if (!(o instanceof ResourceCollection)) {", "+                    throw new BuildException(\"refid '\" + refid.getRefId()", "+                        + \"' does not refer to a resource collection.\");", "+                getPath().add((ResourceCollection) o);", "-                log(\"Set property \" + property + \" = \" + value,", "-                    Project.MSG_VERBOSE);", "-                getProject().setNewProperty(property, value);", "+                if (property == null) {", "+                    log(value);", "+                } else {", "+                    log(\"Set property \" + property + \" = \" + value,", "+                        Project.MSG_VERBOSE);", "+                    getProject().setNewProperty(property, value);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d324ad2c34c187347218a85c3772d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "6956c66566157fff1f9a95e15aaae1a6949e76eb", "commitAfterChange": "eb442aa3a45fbd7af68adce9a326a0ff34817fa8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "-                    FileSet fs = (FileSet) obj;", "-", "-                    path.addFileset(fs);", "+                    path.addFileset((FileSet) obj);", "-                    DirSet ds = (DirSet) obj;", "-", "-                    path.addDirset(ds);", "+                    path.addDirset((DirSet) obj);", "-                    FileList fl = (FileList) obj;", "-", "-                    path.addFilelist(fl);", "-", "+                    path.addFilelist((FileList) obj);", "-                         + \"path, fileset, dirset, or \"", "-                         + \"filelist.\");", "+                         + \"path, fileset, dirset, or filelist.\");", "-", "-", "-                String elem = elems[i];", "-", "-                elem = mapElement(elem); // Apply the path prefix map", "+                String elem = mapElement(elems[i]); // Apply the path prefix map", "-", "-                String token = null;", "-                    token = stDirectory.nextToken();", "-", "-                    if (fromDirSep.equals(token)) {", "-                        rslt.append(dirSep);", "-                    } else {", "-                        rslt.append(token);", "-                    }", "+                    String token = stDirectory.nextToken();", "+                    rslt.append(fromDirSep.equals(token) ? dirSep : token);", "-", "-            String value = rslt.toString();", "-            if (setonempty) {", "+            if (setonempty || rslt.length() > 0) {", "+                String value = rslt.toString();", "-            } else {", "-                if (rslt.length() > 0) {", "-                    log(\"Set property \" + property + \" = \" + value,", "-                        Project.MSG_VERBOSE);", "-                    getProject().setNewProperty(property, value);", "-                }"]}]}