{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce8b2456258f9f166538d8f3808bcd9a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7262625604a1edeb04c82a7f077bc52e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void assertSameContent( String expected, FileContent content ) throws Exception", "signatureAfterChange": "     protected void assertSameContent( final String expected,                                       final FileContent content )         throws Exception", "diff": ["-    public void assertSameContent( String expected, FileContent content ) throws Exception", "+    protected void assertSameContent( final String expected,", "+                                      final FileContent content )", "+        throws Exception", "-        byte[] expectedBin = expected.getBytes( \"utf-8\" );", "+        final byte[] expectedBin = expected.getBytes( \"utf-8\" );", "-        InputStream instr = content.getInputStream();", "-        ByteArrayOutputStream outstr = new ByteArrayOutputStream();", "-        byte[] buffer = new byte[ 256 ];", "-        int nread = 0;", "-        while( nread >= 0 )", "+        final InputStream instr = content.getInputStream();", "+        final ByteArrayOutputStream outstr;", "+        try", "-            outstr.write( buffer, 0, nread );", "-            nread = instr.read( buffer );", "+            outstr = new ByteArrayOutputStream();", "+            final byte[] buffer = new byte[ 256 ];", "+            int nread = 0;", "+            while( nread >= 0 )", "+            {", "+                outstr.write( buffer, 0, nread );", "+                nread = instr.read( buffer );", "+            }", "+        }", "+        finally", "+        {", "+            instr.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb509be193ea3a91cf8cfa04554e50ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/aut/vfs/AbstractFileSystemTest.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void assertSameContent( String expected, FileContent content ) throws Exception", "signatureAfterChange": "     protected void assertSameContent( final String expected,                                       final FileContent content )         throws Exception", "diff": ["-    public void assertSameContent( String expected, FileContent content ) throws Exception", "+    protected void assertSameContent( final String expected,", "+                                      final FileContent content )", "+        throws Exception", "-        byte[] expectedBin = expected.getBytes( \"utf-8\" );", "+        final byte[] expectedBin = expected.getBytes( \"utf-8\" );", "-        InputStream instr = content.getInputStream();", "-        ByteArrayOutputStream outstr = new ByteArrayOutputStream();", "-        byte[] buffer = new byte[ 256 ];", "-        int nread = 0;", "-        while( nread >= 0 )", "+        final InputStream instr = content.getInputStream();", "+        final ByteArrayOutputStream outstr;", "+        try", "-            outstr.write( buffer, 0, nread );", "-            nread = instr.read( buffer );", "+            outstr = new ByteArrayOutputStream();", "+            final byte[] buffer = new byte[ 256 ];", "+            int nread = 0;", "+            while( nread >= 0 )", "+            {", "+                outstr.write( buffer, 0, nread );", "+                nread = instr.read( buffer );", "+            }", "+        }", "+        finally", "+        {", "+            instr.close();"]}]}