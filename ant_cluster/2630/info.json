{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37e061e854ad32ab7b238a6849def232", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c0ff864de178fd0a235d4059691919e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void configureInline( final ObjectConfigurer configurer,                                   final Object object,                                   final Configuration element,                                   final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void configureInline( final ConfigurationState state,                                   final Configuration element,                                   final Context context )         throws CascadingException, InvocationTargetException", "diff": ["-    private void configureInline( final ObjectConfigurer configurer,", "-                                  final Object object,", "+    private void configureInline( final ConfigurationState state,", "-        throws ConfigurationException", "+        throws CascadingException, InvocationTargetException", "-        final PropertyConfigurer childConfigurer = configurer.getProperty( elementName );", "-        if( null == childConfigurer )", "+        final PropertyConfigurer childConfigurer = state.getConfigurer().getProperty( elementName );", "+", "+        // Create the child element", "+        Object child = childConfigurer.createValue( state );", "+        if( child == null )", "-            final String message = REZ.getString( \"unknown-property.error\", elementName );", "-            throw new ConfigurationException( message );", "+            // Create an instance using the default constructor", "+            try", "+            {", "+                child = childConfigurer.getType().newInstance();", "+            }", "+            catch( final Exception e )", "+            {", "+                final String message =", "+                    REZ.getString( \"create-object.error\",", "+                                   childConfigurer.getType().getName() );", "+                throw new ConfigurationException( message, e );", "+            }", "+        // Configure the child element", "-            // Create the child element", "-            final Object child = childConfigurer.createValue( object );", "-", "-            // Configure the child element", "-            configure( child, element, context );", "-", "-            // Set the child element", "-            childConfigurer.setValue( object, child );", "+            configureObject( child, element, context );", "-            final String message =", "-                REZ.getString( \"bad-set-property.error\", elementName );", "-            throw new ConfigurationException( message, ce );", "+            // Nasty hack-o-rama, used to get this exception up through", "+            // the stack of doConfigure() calls.  This is unpacked by the", "+            // top-most configure() call, and rethrown.", "+            throw new InvocationTargetException( ce );", "+", "+        // Set the child element", "+        childConfigurer.addValue( state, child );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa045d55613ba0751b2587429b514117", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "ff8b6709bcf07f12efecc3625f5e1665e7ddf34d", "commitAfterChange": "0fdacdfc1a598078da48d77a24f2b7479e9bffb3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void configureInline( final ConfigurationState state,                                   final Configuration element,                                   final Context context )         throws CascadingException, InvocationTargetException", "signatureAfterChange": "     private void configureInline( final ConfigurationState state,                                   final Configuration element,                                   final Context context )         throws CascadingException", "diff": ["-        throws CascadingException, InvocationTargetException", "+        throws CascadingException", "-        final String elementName = element.getName();", "+        final String name = element.getName();", "-        final PropertyConfigurer childConfigurer = state.getConfigurer().getProperty( elementName );", "+        final PropertyConfigurer childConfigurer = state.getConfigurer().getProperty( name );", "-        // Create the child element", "-        Object child = childConfigurer.createValue( state );", "-        if( child == null )", "-        {", "-            // Create an instance using the default constructor", "-            try", "-            {", "-                child = childConfigurer.getType().newInstance();", "-            }", "-            catch( final Exception e )", "-            {", "-                final String message =", "-                    REZ.getString( \"create-object.error\",", "-                                   childConfigurer.getType().getName() );", "-                throw new ConfigurationException( message, e );", "-            }", "-        }", "-", "-        // Configure the child element", "-        try", "-        {", "-            configureObject( child, element, context );", "-        }", "-        catch( final ConfigurationException ce )", "-        {", "-            // Nasty hack-o-rama, used to get this exception up through", "-            // the stack of doConfigure() calls.  This is unpacked by the", "-            // top-most configure() call, and rethrown.", "-            throw new InvocationTargetException( ce );", "-        }", "+        // Create & configure the child element", "+        final Object child =", "+            setupChild( state, element, context, childConfigurer );"]}]}