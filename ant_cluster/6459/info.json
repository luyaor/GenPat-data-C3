{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba8993f8edbd6e533435d085eab15836", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4ad595430f0a86fd5238536883dfd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "f6a78a634593cd4660e2efa17a80f71a927df3d5", "commitAfterChange": "1d3dc3765d4efd6ae54488feab07f6a17315ebe6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected void executeTarget( final String targetName, final Target target )         throws AntException", "signatureAfterChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["-", "-    protected void executeTarget( final String targetName, final Target target )", "-        m_logger.debug( \"Executing target \" + targetName );", "+", "+    protected void executeTargetWork( final String name, ", "+                                      final Target target, ", "+                                      final TaskletContext context )", "+    {", "+        m_logger.debug( \"Executing target \" + name );", "+", "-            executeTask( task );", "+            executeTask( task, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff427748245f758599a46d0d5b2c2e91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "77be1b356a8b5456088e9f314f2e6371e803849c", "commitAfterChange": "3b5944bc9cc8e332a16f02acdea8698b710fea43", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected final void doLoggable( final Task task,                                      final Configuration taskModel,                                      final Logger logger )         throws TaskException", "signatureAfterChange": "      protected final void doLogEnabled( final Task task,                                        final Configuration taskModel,                                        final Logger logger )         throws TaskException", "diff": ["-    protected final void doLoggable( final Task task,", "-                                     final Configuration taskModel,", "-                                     final Logger logger )", "+    protected final void doLogEnabled( final Task task,", "+                                       final Configuration taskModel,", "+                                       final Logger logger )", "-        if( task instanceof Loggable )", "+        if( task instanceof LogEnabled )", "-            try { ((Loggable)task).setLogger( logger ); }", "+            try { ((LogEnabled)task).enableLogging( logger ); }"]}]}