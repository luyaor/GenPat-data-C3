{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "801a8f498b98fbc01a6cd821e89994fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba148d5c508d954a86e574acb4f9251", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "408a4c09b05e9710ce19870d99a5ef79ea9c82a7", "commitAfterChange": "8e684f3e6e608fb3d36212faea4c1c7ad80f4323", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void defineComponent(int defType, String componentName,                                  Class componentClass)          throws ExecutionException", "signatureAfterChange": "     private void defineComponent(AntLibFactory factory, ClassLoader loader,                                  int defType, String componentName,                                  String className)          throws ExecutionException", "diff": ["-    private void defineComponent(int defType, String componentName,", "-                                 Class componentClass)", "+    private void defineComponent(AntLibFactory factory, ClassLoader loader,", "+                                 int defType, String componentName,", "+                                 String className)", "-        AntLibrary wrapperLibrary", "-             = new AntLibrary(defType, componentName, componentClass);", "-        String libraryId = wrapperLibrary.getLibraryId();", "-        antLibraries.put(libraryId, wrapperLibrary);", "-        importLibrary(libraryId);", "+        DynamicLibrary dynamicLibrary", "+             = new DynamicLibrary(factory, loader);", "+        dynamicLibrary.addComponent(defType, componentName, className);", "+        dynamicLibraries.put(dynamicLibrary.getLibraryId(), dynamicLibrary);", "+        importLibraryDef(dynamicLibrary, componentName, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9898e6d55701baafad382ba21f3901", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object createComponent(AntLibFactory factory, ClassLoader loader,                                   Class componentClass, boolean addTaskAdapter,                                   String componentName)          throws ExecutionException", "signatureAfterChange": "     public Object createComponent(String libraryId, String localName)          throws ExecutionException", "diff": ["-    public Object createComponent(AntLibFactory factory, ClassLoader loader,", "-                                  Class componentClass, boolean addTaskAdapter,", "-                                  String componentName)", "+    public Object createComponent(String libraryId, String localName)", "-        return createComponent(loader, factory, componentClass,", "-            componentName, componentName, addTaskAdapter, null);", "+        AntLibrary library", "+             = (AntLibrary) antLibraries.get(libraryId);", "+        if (library == null) {", "+            throw new ExecutionException(\"No library with libraryId \\\"\"", "+                 + libraryId + \"\\\" is available\");", "+        }", "+", "+        AntLibDefinition libDefinition = library.getDefinition(localName);", "+        if (libDefinition == null) {", "+            throw new ExecutionException(\"No component with name \\\"\"", "+                 + localName + \"\\\" was found in library with libraryId \\\"\"", "+                 + libraryId + \"\\\"\");", "+        }", "+        return createComponentFromDef(localName, library, libDefinition, null);"]}]}