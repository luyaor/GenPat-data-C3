{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1d110da1fca78d60fee6464ebf3199a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64549f81b465929c97245d8c64c8bffd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MParse.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected String[] getOptions() throws TaskException", "signatureAfterChange": "     protected String[] getOptions() throws TaskException", "diff": ["-        if( ! m_classpath.isEmpty() )", "+        final String[] classpath = m_classpath.listFiles( getContext() );", "+        if( classpath.length > 0 )", "-            options.add( PathUtil.formatPath( m_classpath ) );", "+            options.add( PathUtil.formatPath( classpath ) );", "-        if( ! m_sourcepath.isEmpty() )", "+        final String[] sourcepath = m_sourcepath.listFiles( getContext() );", "+        if( sourcepath.length > 0 )", "-            options.add( PathUtil.formatPath( m_sourcepath ) );", "+            options.add( PathUtil.formatPath( sourcepath ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ad9c0f546e318de51b92bb566437f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jdepend/JDependTask.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void executeAsForked( final CommandlineJava commandline )         throws TaskException", "signatureAfterChange": "     private void executeAsForked( final CommandlineJava commandline )         throws TaskException", "diff": ["-        if( m_compileClasspath.toString().length() > 0 )", "+        final String compileClasspath = PathUtil.formatPath( m_compileClasspath );", "+        if( compileClasspath.length() > 0 )", "-            commandline.addVmArgument( m_compileClasspath.toString() );", "+            commandline.addVmArgument( compileClasspath );", "-        final String[] elements = FileUtils.parsePath( m_sourcesPath.toString() );", "+        final String[] elements = m_sourcesPath.list();"]}]}