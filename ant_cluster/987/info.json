{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ceca025320f7faa4775405398c001cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de99241e8ef1867f7c8f300582438bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "62f2142b3431002933bf1281d244c164ed962890", "commitAfterChange": "6cbeee38fa5502baa5d75036ad2c0418cf808d56", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "         private void executeString(String oldValue) throws BuildException", "signatureAfterChange": "         private void executeString(String oldValue) throws BuildException", "diff": ["-            String value = \"\";", "-            String newValue  = \"\";", "+            String newValue  = DEFAULT_STRING_VALUE;", "-            // the order of events is, of course, very important here", "-            // default initially to the old value", "-            if (oldValue != null) {", "-                value = oldValue;", "-            }", "-            // but if a value is specified, use it", "-            if (m_value != null) {", "-                value = m_value;", "-            }", "-            // even if value is specified, ignore it and set to the default", "-            // value if it is specified and there is no previous value", "-            if (m_default != null && oldValue == null) {", "-                value = m_default;", "+            String currentValue = getCurrentValue(oldValue);", "+            ", "+            if (currentValue == null) {", "+                currentValue = DEFAULT_STRING_VALUE;", "-            if (m_operation == Operation.EQUALS_OPER) {", "-                newValue = value;", "+            if (operation == Operation.EQUALS_OPER) {", "+                newValue = currentValue;", "-            else if (m_operation == Operation.INCREMENT_OPER) {", "-                newValue += value;", "+            else if (operation == Operation.INCREMENT_OPER) {", "+                newValue = currentValue + value;", "-            m_value = newValue;", "+            value = newValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53a3e82000702c231ca27878fddb49dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "diff": ["-                File manifestFile = new File(getConfig().descriptorDir, baseName + \"-manifest.mf\");", "-                if (manifestFile.exists()) {", "+                File manifestFile = (File) files.get(MANIFEST);", "+                if (manifestFile != null && manifestFile.exists()) {", "-                } else if (config.manifest != null) {", "-                    in = new FileInputStream(config.manifest);", "-                    if (in == null) {", "-                        throw new BuildException(\"Could not find manifest file: \" + config.manifest,", "-                                                  getLocation());", "-                    }", "+                if (entryName.equals(MANIFEST)) {", "+                    continue;", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d0dc4d2ce4da9ab5368f3339d88c4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exec.java", "commitBeforeChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "commitAfterChange": "b139901cab374b10e2f73a58769fb4ef1c2837bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void run(String command) throws BuildException", "signatureAfterChange": "      protected void run(String command) throws BuildException", "diff": ["-            ", "-            // get process response", "-            BufferedReader din = new BufferedReader(new InputStreamReader(proc.getInputStream()));", "-            // if \"out\" attribute is present, redirect to it", "-            PrintWriter fos = null;", "-            if (out != null)  {", "-                fos = new PrintWriter(new FileWriter(out));", "+            PrintWriter fos=null;", "+            if( out!=null )  {", "+                fos=new PrintWriter( new FileWriter( out ) );", "+            pipeOutput(proc.getInputStream(), \"exec\", fos);", "+            pipeOutput(proc.getErrorStream(), \"error\", fos);", "+            if (null != fos)", "+        \tfos.close();", "-", "-            // pipe the process output", "-            String line;", "-            while((line = din.readLine()) != null) {", "-                if (fos == null) {", "-                    project.log(line, \"exec\", Project.MSG_INFO);", "-                } else {", "-                    fos.println(line);", "-                }", "-            }", "-", "-            // wait until the process is finished"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c751bbf19e128a5e3374d913ec8de287", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "9c8768b75b9fc59bbf87125a4d1a31a6b9253daa", "commitAfterChange": "677491b9276e57da76218487af18cfda70aa28af", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String inputEncoding, String outputEncoding,                          Project project)         throws IOException", "signatureAfterChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String inputEncoding, String outputEncoding,                          Project project)         throws IOException", "diff": ["-                    if (out != null) {", "-                        out.close();", "-                    }", "-                    if (in != null) {", "-                        in.close();", "-                    }", "+                    close(out);", "+                    close(in);", "-                      if (out != null) {", "-                         out.close();", "-                     }", "-                     if (in != null) {", "-                         in.close();", "-                     }", "+                      close(out);", "+                      close(in);", "-                    if (out != null) {", "-                        out.close();", "-                    }", "-                    if (in != null) {", "-                        in.close();", "-                    }", "+                    close(out);", "+                    close(in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79b4d97f511502da0b147e23f664f59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "611d085ff653bcf61d3cea4eb72869095e98439d", "commitAfterChange": "71ecbaefb28107447e2d3875786501ba1a71cc4d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public boolean equals(Object obj)", "signatureAfterChange": "         public boolean equals(Object obj)", "diff": ["+         */", "+        public boolean equals(Object obj) {", "+            if (obj == this) {", "+              return true;", "+            }", "+            if (obj != null && obj.getClass().equals(getClass())) {", "+              equals((Member) obj);", "+            }", "+            return false;", "+        }", "-         */", "-        public boolean equals(Object obj) {", "-            if (obj == null) {", "-                return false;", "-            }", "-            if (obj.getClass() != getClass()) {", "-                return false;", "-            }", "-            Text other = (Text) obj;", "-            if (name == null) {", "-                if (other.name != null) {", "-                    return false;", "-                }", "-            } else if (!name.equals(other.name)) {", "-                return false;", "-            }", "-            if (optional != other.optional) {", "-                return false;", "-            }", "-            if (trim != other.trim) {", "-                return false;", "-            }", "-            return true;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdabdaf85ad284ab6855a2509f520678", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "a9aa3e7efe1a4e4437f575079a89f915936b95dd", "commitAfterChange": "c341e8606d84afbac9fbe08b9814bbb0bf826e3b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 47, "signatureBeforeChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "signatureAfterChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "diff": ["+", "-                if (!name.endsWith(\"/\")) {", "-                    name = name + \"/\";", "-                }", "-            }", "+                addDirectoryResource(resources[i], name, \"\", base, zOut,", "+                                     ArchiveFileSet.DEFAULT_DIR_MODE,", "+                                     ArchiveFileSet.DEFAULT_DIR_MODE);", "-            addParentDirs(base, name, zOut, \"\",", "-                          ArchiveFileSet.DEFAULT_DIR_MODE);", "+            } else {", "+                addParentDirs(base, name, zOut, \"\",", "+                              ArchiveFileSet.DEFAULT_DIR_MODE);", "-            if (!resources[i].isDirectory()) {", "-                    InputStream is = null;", "-                    try {", "-                        is = resources[i].getInputStream();", "-                        zipFile(is, zOut, name,", "-                                resources[i].getLastModified(),", "-                                null, ArchiveFileSet.DEFAULT_FILE_MODE);", "-                    } finally {", "-                        FileUtils.close(is);", "-                    }", "+                    addResource(resources[i], name, \"\", zOut,", "+                                ArchiveFileSet.DEFAULT_FILE_MODE,", "+                                null, null);"]}]}