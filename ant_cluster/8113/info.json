{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8647a7ab5e74e3549e3597f53b9df89e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1488f46eaecc24eb501e68a0b73b94a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "228fb9839c21a0a853598e114faca72c8e9340e7", "commitAfterChange": "9922008d657c72235c402343fd88847b044014ad", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void initBlock()", "signatureAfterChange": "      private void initBlock()", "diff": ["-        //        blockNo++;", "-        mCrc.initialiseCRC();", "-        last = -1;", "-        //        ch = 0;", "+        // blockNo++;", "+        this.crc.initialiseCRC();", "+        this.last = -1;", "+        // ch = 0;", "-        for (int i = 0; i < 256; i++) {", "+        boolean[] inUse = this.data.inUse;", "+        for (int i = 256; --i >= 0;) {", "-        allowableBlockSize = baseBlockSize * blockSize100k - 20;", "+        this.allowableBlockSize = (this.blockSize100k * BZip2Constants.baseBlockSize) - 20;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4673e1a220aa5d83fc7c00375391666d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void initBlock()", "signatureAfterChange": "      private void initBlock()", "diff": ["-        mCrc.initialiseCRC();", "-        last = -1;", "+        this.crc.initialiseCRC();", "+        this.last = -1;", "-        for (int i = 0; i < 256; i++) {", "+        boolean[] inUse = this.data.inUse;", "+        for (int i = 256; --i >= 0;) {", "-        allowableBlockSize = baseBlockSize * blockSize100k - 20;", "+        this.allowableBlockSize", "+            = (this.blockSize100k * BZip2Constants.baseBlockSize) - 20;"]}]}