{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b380ec7f53f8d34a02d762eb61341d5f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0007c4e6a6d072a92158e72d6ddda52a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/deployer/TypeDeployer.java", "commitBeforeChange": "d957fa1151163d513197a174a098e2aac8745b1e", "commitAfterChange": "87ceed8170a6359ac2c4714b6ad22c55d2b1f571", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void deployType( String roleShorthand, String typeName, String className )         throws DeploymentException;", "signatureAfterChange": "     void deployType( TypeDefinition typeDef )         throws DeploymentException;", "diff": ["-    void deployType( String roleShorthand, String typeName, String className )", "-        throws DeploymentException;", "+    void deployType( TypeDefinition typeDef )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00dcaed5bdd48a55d94dd9a075168473", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/SaveAsCmd.java", "commitBeforeChange": "7f4d6335918df35438bf4682250988a5c85516fc", "commitAfterChange": "51073339a0c94a0ad3d1f0f8837d8bbba02ad77c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-                        if(val == JOptionPane.YES_OPTION) {", "-                            try {", "-                                _location = new URL(", "-                                    \"file\", null, file.getAbsolutePath());", "-                            }", "-                            catch(MalformedURLException ex) {", "-                                // Shouldn't happen. Save will just not", "-                                // happen.", "-                                ex.printStackTrace();", "-                            }", "+                        if(val != JOptionPane.YES_OPTION) {", "+                            return;", "+                    }", "+                    try {", "+                        _location = new URL(", "+                            \"file\", null, file.getAbsolutePath());", "+                    }", "+                    catch(MalformedURLException ex) {", "+                        // Shouldn't happen. Save will just not", "+                        // happen.", "+                        ex.printStackTrace();", "-                        postEvent(new ErrorEvent(getContext(), message));", "+                        postEvent(new ErrorEvent(getContext(), message, ex));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f1155f1ffe30550cf2d012efe9c5d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectListener.java", "commitBeforeChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "commitAfterChange": "451ca455d5963fd430ac58e449bb791138f07e1a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void projectStarted( final String projectName )", "signatureAfterChange": "     public void projectStarted()", "diff": ["-    public void projectStarted( final String projectName )", "+    public void projectStarted()", "-        output( \"Starting project \" + projectName + \"\\n\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083e3e2e6f2fb3a5e3baff23a814b0c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2InputStream.java", "commitBeforeChange": "bf73eb74a3cc2a1ecc3268c83e4158d1b027b2dc", "commitAfterChange": "94997ddf2b7b9019a65ec7c0b5637414058d0eb4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public CBZip2InputStream( final InputStream zStream )", "signatureAfterChange": "      public CBZip2InputStream( final InputStream input )", "diff": ["-    public CBZip2InputStream( final InputStream zStream )", "+    public CBZip2InputStream( final InputStream input )", "-        bsSetStream( zStream );", "+        bsSetStream( input );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1322c872aaa807c4fc9a19d00ab407ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jdepend/JDependTask.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void executeInVM( final CommandlineJava commandline )         throws TaskException", "signatureAfterChange": "     private void executeInVM()         throws TaskException", "diff": ["-    private void executeInVM( final CommandlineJava commandline )", "+    private void executeInVM()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a9bbf1670dab8cb11ca66a73931077", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TokenizedPath.java", "commitBeforeChange": "4c0eb6ca6a1bbbf253d0f6f248052680f04ba65e", "commitAfterChange": "9b76a8661bc018586fdbae7e359cee2e6cc2f4e3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static File findFile(File base, final String[] pathElements,                                  final boolean cs, FileLister fileLister)", "signatureAfterChange": "     private static File findFile(File base, final String[] pathElements,                                  final boolean cs)", "diff": ["-                                 final boolean cs, FileLister fileLister) {", "+                                 final boolean cs) {", "-            String[] files = fileLister.list(base);", "+            String[] files = base.list();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1603cd97ab48b6c1b13715c374f4cf29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/ExitCmd.java", "commitBeforeChange": "18b63a1b1afc269c237e2bc05de803544e49ad45", "commitAfterChange": "8785091ee1c92874c44324f0429765539987b048", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ExitCmd(AppContext context)", "signatureAfterChange": "     public ExitCmd()", "diff": ["-    public ExitCmd(AppContext context) {", "-        _window = context.getParentFrame();", "+    public ExitCmd() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17bee8828cd5373411f214249a784710", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "2b925503d71972d8b782eedd6cdf75711377d7b0", "commitAfterChange": "2c4faa154f069f3f69d6c3c95629409a7b8b0cc4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     static boolean matchPath(String[] tokenizedPattern, String str, boolean isCaseSensitive)", "signatureAfterChange": "     static boolean matchPath(String[] tokenizedPattern, String[] strDirs,                              boolean isCaseSensitive)", "diff": ["-    static boolean matchPath(String[] tokenizedPattern, String str, boolean isCaseSensitive) {", "-        String[] strDirs = tokenizePathAsArray(str);", "+     */", "+    static boolean matchPath(String[] tokenizedPattern, String[] strDirs,", "+                             boolean isCaseSensitive) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0ed5e687597eac30f6a45aa0083622", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/PropertyInterceptor.java", "commitBeforeChange": "da1aa04a45eef04b2bf6d1137a7eeb42a28d2801", "commitAfterChange": "589ffa248854725829e0abf16f94bcaef0cdb22d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Object getProperty( Project p, String ns, String name );", "signatureAfterChange": "     public Object getProperty( Object context, String ns, String name );", "diff": ["-    public Object getProperty( Project p, String ns, String name );", "+    public Object getProperty( Object context, String ns, String name );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ebaf716b28518dccd2b89a6a2a2c93b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "69eba07e72da7b69d2ef95717c1e91d7b9b75b00", "commitAfterChange": "d3e00e275a0cb053f2a7020c1c45f94804fc9065", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ZipFile(File f, String encoding, boolean useUnicodeExtraFields)         throws IOException", "signatureAfterChange": "     public ZipFile(File f, String encoding, boolean useUnicodeExtraFields)         throws IOException", "diff": ["-            Map entriesWithoutEFS = populateFromCentralDirectory();", "-            resolveLocalFileHeaderData(entriesWithoutEFS);", "+            Map entriesWithoutUTF8Flag = populateFromCentralDirectory();", "+            resolveLocalFileHeaderData(entriesWithoutUTF8Flag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d49e0ae9d5c393b6a855d69cbd6592", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarInputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TarInputStream( InputStream is, int blockSize )", "signatureAfterChange": "      public TarInputStream( final InputStream input, final int blockSize )", "diff": ["-    public TarInputStream( InputStream is, int blockSize )", "+    public TarInputStream( final InputStream input, final int blockSize )", "-        this( is, blockSize, TarBuffer.DEFAULT_RCDSIZE );", "+        this( input, blockSize, TarBuffer.DEFAULT_RCDSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2306a62881389bad3855656eb134d141", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "69eba07e72da7b69d2ef95717c1e91d7b9b75b00", "commitAfterChange": "d3e00e275a0cb053f2a7020c1c45f94804fc9065", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void resolveLocalFileHeaderData(Map entriesWithoutEFS)         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(Map entriesWithoutUTF8Flag)         throws IOException", "diff": ["-    private void resolveLocalFileHeaderData(Map entriesWithoutEFS)", "+    private void resolveLocalFileHeaderData(Map entriesWithoutUTF8Flag)", "-            if (entriesWithoutEFS.containsKey(ze)) {", "+            if (entriesWithoutUTF8Flag.containsKey(ze)) {", "-                                                 entriesWithoutEFS.get(ze));", "+                                                 entriesWithoutUTF8Flag.get(ze));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2666c5ab4ab93c40872077f622397ef3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final Reader getAssembledReader() throws BuildException", "signatureAfterChange": "     public final Reader getAssembledReader() throws BuildException", "diff": ["-                    final Project project = filter.getProject();", "+                    final Project pro = filter.getProject();", "-                                    = project.createClassLoader(classpath);", "+                                    = pro.createClassLoader(classpath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27873e086c7f82dd1e4105581ce26fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "af97c64cb1b6bea8dd0d7aa333a51c7613cbe5e9", "commitAfterChange": "3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": "         void configureId(Object target, Attributes attr)", "signatureAfterChange": "         void configureId(Object element, Attributes attr)", "diff": ["-        void configureId(Object target, Attributes attr) {", "+        void configureId(Object element, Attributes attr) {", "-                project.addReference(id, target);", "+                project.addReference(id, element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b58afc431916376b4d0c3bddcb88510", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/ClassicConfigurer.java", "commitBeforeChange": "91199f6d2c102ae6c5e449b2f4db4e86ffeeba75", "commitAfterChange": "8cbceeceb45b93c4f39e5f86ae88928955a0bddf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean setValue( final Object object,                               Object value,                               final Method method,                               final Class sourceClass,                               final String source,                               final Context context )         throws ConfigurationException", "signatureAfterChange": "      private boolean setValue( final Object object,                               final Object originalValue,                               final Method method,                               final Context context )         throws ConfigurationException", "diff": ["-                              Object value,", "+                              final Object originalValue,", "-                              final Class sourceClass,", "-                              final String source,", "+        Object value = originalValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b79ad880f94ae4a446cf2e75bcd9007", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/DisplayErrorCmd.java", "commitBeforeChange": "18b63a1b1afc269c237e2bc05de803544e49ad45", "commitAfterChange": "8785091ee1c92874c44324f0429765539987b048", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public DisplayErrorCmd(AppContext context, String message)", "signatureAfterChange": "     public DisplayErrorCmd(String message)", "diff": ["-    public DisplayErrorCmd(AppContext context, String message) {", "-        this(context, message, null);", "+    public DisplayErrorCmd(String message) {", "+        this(message, null);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dfdc780204c4db023379182b44426d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "589691afeb04320ae27578385b12b49398c6c146", "commitAfterChange": "93795db6defdb1059c70826f0e7e15773672f36e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     private boolean isSelected(File basedir, String filename, String cacheKey)", "diff": ["+     */", "+    private boolean isSelected(File basedir, String filename, String cacheKey) {", "-        String newValue    = algorithm.getValue(f);", "+        String newValue = algorithm.getValue(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303de36d98404eb2cad42d60cfdb470e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "74e8a57c93dd534ebfbca3b4d92ea34789c7fe0c", "commitAfterChange": "0b31d6f97a5e41f33dabeda8daae2e13194c1bb5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public String[] getValues()", "signatureAfterChange": "         public String[] getValues()", "diff": ["+        static public final String BASEJARNAME = \"basejarname\";", "+        public String[] getValues() {", "+            return new String[] {EJB_NAME, DIRECTORY, DESCRIPTOR, BASEJARNAME};", "+        }", "-    public static class NamignScheme extends EnumeratedAttribute {", "-        public String[] getValues() {", "-            return new String[] {\"ejb-name\", \"directory\", \"descriptor\"};", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35d2e0f7906fb7650cb6352e9e46a4ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/TaskletEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void execute( Configuration task,                    TaskletContext context,                    ComponentManager componentManager )         throws AntException;", "signatureAfterChange": "     void execute( Configuration task, TaskletContext context )         throws AntException;", "diff": ["-    void execute( Configuration task, ", "-                  TaskletContext context, ", "-                  ComponentManager componentManager )", "+    void execute( Configuration task, TaskletContext context )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3618298ad035d3d743e73d9b2642fcd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/AbstractTypeDefinition.java", "commitBeforeChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "commitAfterChange": "5872737ff5d0006fffd509da87f4bc9115cb5a39", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected abstract void registerResource( String name, String classname, URL url )         throws TaskException;", "signatureAfterChange": "      protected abstract void registerResource( String name, String classname, File file )         throws TaskException;", "diff": ["-    protected abstract void registerResource( String name, String classname, URL url )", "+    protected abstract void registerResource( String name, String classname, File file )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380b47b814d06ad87e670da6cd85e7ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/LoadFileCmd.java", "commitBeforeChange": "d99dd7ac80e616cdc67fb4f017f468d7203d633b", "commitAfterChange": "40ea40eae5001e893c3408de42d32c00b68d8f43", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-            catch(IOException ex) {", "+            catch(Exception ex) {", "-                    postEvent(new ErrorEvent(_context, message));", "+                    postEvent(new ErrorEvent(_context, message, ex));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c62f3e18dbdae43b4dac2e9b1853831", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/Printer.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Printer(String name)", "signatureAfterChange": "      public Printer()", "diff": ["-    public Printer(String name) {", "-        super(name);", "+    public Printer() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c92db3d1fbfb4de45fd27c9d9fd29e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TokenizedPath.java", "commitBeforeChange": "4c0eb6ca6a1bbbf253d0f6f248052680f04ba65e", "commitAfterChange": "9b76a8661bc018586fdbae7e359cee2e6cc2f4e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public File findFile(File base, final boolean cs, FileLister fileLister)", "signatureAfterChange": "     public File findFile(File base, final boolean cs)", "diff": ["-    public File findFile(File base, final boolean cs, FileLister fileLister) {", "+    public File findFile(File base, final boolean cs) {", "-        return findFile(base, tokens, cs, fileLister);", "+        return findFile(base, tokens, cs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e9edc60ed6c0d0783ed443c926df12a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "764ef4fd852696fd3e620583affdd3b439af4d14", "commitAfterChange": "28b68ab7d0689dbc35dbdf26d2308786549b8985", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setFile(File f)", "signatureAfterChange": "     public void setFile(File file)", "diff": ["-    public void setFile(File f) {", "+    public void setFile(File file) {", "-            .removeLeadingPath(getProject().getBaseDir(), f);", "+            .removeLeadingPath(getProject().getBaseDir(), file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40636c820d39d214cd38f4e0d1224a58", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java", "commitBeforeChange": "6c310a371f0d7bfd4dbf4eee70693689164e9b74", "commitAfterChange": "a0ba302efe9a84e4735f08c631e01209496fe522", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void processRevision(final String line)", "signatureAfterChange": "     private void processRevision(final String line)", "diff": ["-            m_revision = line.substring(9);", "-            m_status = GET_DATE;", "+            revision = line.substring(9);", "+            status = GET_DATE;", "-            m_status = GET_FILE;", "+            status = GET_FILE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "420507106215cee990ef90e4ee183392", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/service/ExecService.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void runBuild(BuildKey buildKey, List targets)         throws AntException;", "signatureAfterChange": "     void runBuild(Object key, List targets)         throws AntException;", "diff": ["-    void runBuild(BuildKey buildKey, List targets)", "+    void runBuild(Object key, List targets)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49a9e646a69a545bcdbe93fb442c7abb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/script/org/apache/ant/antlib/script/ScriptFactory.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void init(AntContext context) throws ExecutionException", "signatureAfterChange": "     public void init(AntContext context) throws AntException", "diff": ["-    public void init(AntContext context) throws ExecutionException {", "+    public void init(AntContext context) throws AntException {", "-        componentService = (ComponentService) ", "+        componentService = (ComponentService)", "-            throw new ExecutionException(\"The script Ant library requires \"", "+            throw new ScriptException(\"The script Ant library requires \"", "-            throw new ExecutionException(\"The script Ant library requires \"", "+            throw new ScriptException(\"The script Ant library requires \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9119de7ab57f57cf320a94bdf1d5ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "a456c56dbbaadf93ca1b73ce4b340240c2fea090", "commitAfterChange": "323c0a125257b314fa15c480877f729e94196fa2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private String makeOutputFileRelative(String outputFile)", "signatureAfterChange": "      private String makeOutputFileRelative(String destFile)", "diff": ["-    private String makeOutputFileRelative(String outputFile) {", "+    private String makeOutputFileRelative(String destFile) {", "-        relativePath.append(outputFile);", "+        relativePath.append(destFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8bfd9c72b7764c0d418f5008b2e751", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "6b2e7156fce5c379bb51f9aad53a90bad9e719ce", "commitAfterChange": "75a677f70106e16a72273368148b5cb68711252d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public void setToken(String token)", "signatureAfterChange": "         public void setToken(String t)", "diff": ["-        public void setToken(String token) {", "-            this.token = token;", "+        public void setToken(String t) {", "+            createReplaceToken().addText(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca3a291f8594f026036c8e5e7611272", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setExtension( String name )", "signatureAfterChange": "     public void setExtension( final String targetExtension )", "diff": ["-    public void setExtension( String name )", "+    public void setExtension( final String targetExtension )", "-        m_targetExtension = name;", "+        m_targetExtension = targetExtension;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e995e3fe3c63446b87a7e17738a2da5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void createLogger() throws ConfigException", "signatureAfterChange": "     private void createLogger() throws FrontendException", "diff": ["-    private void createLogger() throws ConfigException {", "+    private void createLogger() throws FrontendException {", "-                throw new ConfigException(\"Unable to instantiate logger \"", "+                throw new FrontendException(\"Unable to instantiate logger \"", "-                throw new ConfigException(\"Unable to instantiate logger \"", "+                throw new FrontendException(\"Unable to instantiate logger \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506cbea2ff30c0f902bf1d74f0b878ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Task.java", "commitBeforeChange": "e8e4255032431746117cf127ef194afd2b4eaa6c", "commitAfterChange": "4010e0a25dc165c31789b76fd9c5a7f434d1c551", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public final void perform()", "signatureAfterChange": "     public final void perform()", "diff": ["+                throw ex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5432ac808f74f23c8f3f27338463c1d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "2584f8e89466f1fbf456326bf2e13154491f0ab9", "commitAfterChange": "0ba9db2412c5caa33ddc91c7bcb5d4abbb325af6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected BuildException getNotFoundException(String what,                                                   String elementName)", "signatureAfterChange": "     protected BuildException getNotFoundException(String what,                                                   String name)", "diff": ["-                                                  String elementName) {", "+                                                  String name) {", "-        String msg = helper.diagnoseCreationFailure(elementName, what);", "+        String msg = helper.diagnoseCreationFailure(name, what);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544f8d31e0b81822a7dc6f99a65f315e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "e211cf05f7df29b7531bd7d1525f7fe8bd8d33e0", "commitAfterChange": "c7ec7ad1a4aa4f52693b354d08914e07e0bcd2a8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        for (int i = 0; i < template.getAttributes().size(); ++i) {", "+        for (int i = 0; i < macroDef.getAttributes().size(); ++i) {", "-                (MacroDef.Attribute) template.getAttributes().get(i);", "+                (MacroDef.Attribute) macroDef.getAttributes().get(i);", "-        UnknownElement c = copy(template.getNestedTask());", "+        UnknownElement c = copy(macroDef.getNestedTask());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f84e66ab7499f66914706b5639b64a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarOutputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public TarOutputStream( OutputStream os )", "signatureAfterChange": "      public TarOutputStream( final OutputStream output )", "diff": ["-    public TarOutputStream( OutputStream os )", "+", "+    public TarOutputStream( final OutputStream output )", "-        this( os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE );", "+        this( output, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ac32195d6af9da4ebf7deb19e0a5411", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/XMLFragment.java", "commitBeforeChange": "476678d4a660bd6077ae4a8389cc29f42fbde0c9", "commitAfterChange": "69cd05e0f91f554bc045a9f9d6549c70dd5f27c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setDynamicAttribute(String uri, String name, String qName, String value)         throws BuildException", "signatureAfterChange": "     public void setDynamicAttribute(String name, String value)         throws BuildException", "diff": ["-    public void setDynamicAttribute(String uri, String name, String qName, String value)", "+    //    public void setDynamicAttribute(String uri, String name, String qName, String value)", "+    public void setDynamicAttribute(String name, String value)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c3a3fc3cf5812340707000331983377", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "4783bc46159826bc33858cfc9145c4be93dfe755", "commitAfterChange": "2a291dca9249d6a4958d9898282fa67343bf59b7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void setAntfile(String s)", "signatureAfterChange": "     public void setAntfile(String antFile)", "diff": ["-    public void setAntfile(String s) {", "+    public void setAntfile(String antFile) {", "-        this.antFile = s;", "+        this.antFile = antFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d285f3970bf0b91bac12042aa8d284d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/model/DefaultProject.java", "commitBeforeChange": "ab8c0b3d29af93c2d263cf2924f98827e365e56c", "commitAfterChange": "a916e82d98c1d699347adb5c1aa75a912f21e3cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Import[] getImports()", "signatureAfterChange": "     public TypeLib[] getTypeLibs()", "diff": ["-    public Import[] getImports()", "+    public TypeLib[] getTypeLibs()", "-        return (Import[])m_imports.toArray( new Import[ 0 ] );", "+        return (TypeLib[])m_imports.toArray( new TypeLib[ 0 ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f9a7fd8198270930577d352742553ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/SuffixLines.java", "commitBeforeChange": "f197ffbdd10002ecd2fee06c74e4115edbcc7f94", "commitAfterChange": "77cba689ceb7e72931ba405bfab50150a21e3271", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setSuffix(final String append)", "signatureAfterChange": "     public void setSuffix(final String suffix)", "diff": ["-    public void setSuffix(final String append) {", "-        this.suffix = append;", "+    public void setSuffix(final String suffix) {", "+        this.suffix = suffix;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60bab2a271144eff5933260b8eef512d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "e01f8574a6b7073a3eea63188b6b838324cef804", "commitAfterChange": "3d047d54a23488140543b9613d658e11d985eb60", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      protected boolean isSigned(String jarFilename)", "signatureAfterChange": "      protected boolean isSigned(File file)", "diff": ["-    protected boolean isSigned(String jarFilename) {", "+    protected boolean isSigned(File file) {", "-        File file = new File(jarFilename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f8293e8d265de9d918411a6cc9c886", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void checkDirectory( final File file, final String name )         throws AntException", "signatureAfterChange": "     private void checkDirectory( final File file, final String name )         throws Exception", "diff": ["-        throws AntException", "+        throws Exception", "-            throw new AntException( name + \" (\" + file + \") does not exist\" );", "+            throw new Exception( name + \" (\" + file + \") does not exist\" );", "-            throw new AntException( name + \" (\" + file + \") is not a directory\" );", "+            throw new Exception( name + \" (\" + file + \") is not a directory\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f8ec53806a473d4c072b7f12870769", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected Project build( final File file, final Configuration configuration )         throws IOException, AntException, ConfigurationException", "signatureAfterChange": "     protected Project build( final File file, final Configuration configuration )         throws Exception", "diff": ["-        throws IOException, AntException, ConfigurationException", "+        throws Exception", "-            throw new AntException( \"Project file must be enclosed in project element\" );", "+            throw new Exception( \"Project file must be enclosed in project element\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6677269b8cb7ed29ce1e610649a75bb7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ProjectBuilder.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Project build( File source )         throws IOException, AntException;", "signatureAfterChange": "     Project build( File source )         throws Exception;", "diff": ["-        throws IOException, AntException;", "+        throws Exception;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6efca6acab6eee99e3b37543bbff7c0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "97150b670e83bc62caac34ee6db7231c6532203d", "commitAfterChange": "8c08f38c4f011cc029b2c45724948479b35c0c42", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void addConfiguredLocation(final LocationResolver location)", "signatureAfterChange": "     public void addConfiguredLocation(final LocationResolver loc)", "diff": ["-    public void addConfiguredLocation(final LocationResolver location) {", "-        resolvers.add(location);", "+    public void addConfiguredLocation(final LocationResolver loc) {", "+        resolvers.add(loc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70337040be63fdbb62e7a95a0147e6f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/model/TypeLib.java", "commitBeforeChange": "cf4a207d885842caa916da71be6b989843124b0e", "commitAfterChange": "8036bb0ebf115113a2a8f21a32071e74a61cc2c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TypeLib( final String library, final String type, final String name )", "signatureAfterChange": "      public TypeLib( final String library, final String role, final String name )", "diff": ["-    public TypeLib( final String library, final String type, final String name )", "+    public TypeLib( final String library, final String role, final String name )", "-        m_type = type;", "+        m_role = role;", "-        if( null == m_type || null == m_name )", "+        if( null == m_role || null == m_name )", "-            if( null != m_type || null != m_name )", "+            if( null != m_role || null != m_name )", "-                                                    \"only one of name or type\" );", "+                                                    \"only one of; name or role\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7284eaf9f577a6dcd250be9f16a39c56", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DateSelector.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setWhen(TimeComparisons cmp)", "signatureAfterChange": "     public void setWhen(TimeComparisons tcmp)", "diff": ["-    public void setWhen(TimeComparisons cmp) {", "-        this.cmp = cmp.getIndex();", "+    public void setWhen(TimeComparisons tcmp) {", "+        this.cmp = tcmp.getIndex();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75898af7c83fbee08a784b37db8a3ce3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "f6c650f5aed7553d0015bb6648bf3e271c4c9a1f", "commitAfterChange": "303b70f86bd394282e39affce9ec2a065b5a4ad1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "      private void expectFileContains(         String target, String filename, String contains)         throws IOException", "signatureAfterChange": "      private void assertFileContains(String filename, String contains) throws IOException", "diff": ["-        String content = getFileString(target, filename);", "-        assertTrue(", "-            \"expecting file \" + filename + \" to contain \" +", "-            contains +", "-            \" but got \" + content, content.indexOf(contains) > -1);", "+    private void assertFileContains(String filename, String contains) throws IOException {", "+        String content = getFileString(filename);", "+        assertTrue(", "+              \"expecting file \" + filename", "+            + \" to contain \" + contains", "+            + \" but got \" + content,", "+            content.indexOf(contains) > -1);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76cfe3952aa89dcad8721cb4a01c9900", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "661f8becc40fa2aa831edcd3a4b94a2299fd05f1", "commitAfterChange": "43e11902e90740f6f5fcce825c3e99372b8c91fd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Override     public void execute() throws BuildException", "signatureAfterChange": "     @Override     public void execute() throws BuildException", "diff": ["-        if (fromUri == null && fileSets == null) {", "+        if (fromUri == null && rcs == null) {", "-                if (fileSets != null) {", "-                    upload(fileSets, toUri);", "+                if (rcs != null) {", "+                    upload(rcs, toUri);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7790516de391aaad650974b79c845516", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/util/ChainReaderHelper.java", "commitBeforeChange": "6f30444010fc3615c59995b50ab19e480122b89b", "commitAfterChange": "3347fc027018fcbc1b67b25e134e53897f33a911", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final String processStream()         throws BuildException, IOException", "signatureAfterChange": "     public final String processStream()         throws BuildException, IOException", "diff": ["-        final int filterReadersCount = filterReaderSets.size();", "+        final int filterReadersCount = filterChains.size();", "-            final FilterReaderSet filterset =", "-                (FilterReaderSet) filterReaderSets.elementAt(i);", "-            final Vector filterReaders = filterset.getFilterReaders();", "+            final FilterChain filterchain =", "+                (FilterChain) filterChains.elementAt(i);", "+            final Vector filterReaders = filterchain.getFilterReaders();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c375c92916dbe94a7fd5aef0413c77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/Mailer.java", "commitBeforeChange": "032ca220dd28da39f4fed6af48c925a4e97f80a4", "commitAfterChange": "7fe6d0a0fe890f6a59aa6a0bf3ca1e756b94dc93", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setSSL(boolean SSL)", "signatureAfterChange": "     public void setSSL(boolean ssl)", "diff": ["-    public void setSSL(boolean SSL) {", "-        this.SSL = SSL;", "+    public void setSSL(boolean ssl) {", "+        this.SSL = ssl;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db870203081c99a45732fcf27f74698", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public TarBuffer( InputStream inStream )", "signatureAfterChange": "      public TarBuffer( final InputStream input )", "diff": ["-    public TarBuffer( InputStream inStream )", "+", "+    public TarBuffer( final InputStream input )", "-        this( inStream, TarBuffer.DEFAULT_BLKSIZE );", "+        this( input, TarBuffer.DEFAULT_BLKSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e66a064d3bae50354f88ce2c4054e8f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java", "commitBeforeChange": "0cab9c1f29b2189d302d6b2e626595290dfef611", "commitAfterChange": "8c22fa33f300cd8587dee8635a7dda5c318f6540", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public FileObject resolveFile( String URI ) throws FileSystemException", "signatureAfterChange": "     public FileObject resolveFile( final String uri ) throws FileSystemException", "diff": ["-    public FileObject resolveFile( String URI ) throws FileSystemException", "+    public FileObject resolveFile( final String uri ) throws FileSystemException", "-        return resolveFile( m_baseFile, URI );", "+        return resolveFile( m_baseFile, uri );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84c953d23e5a299449154932f37b755a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/ProjectListener.java", "commitBeforeChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "commitAfterChange": "451ca455d5963fd430ac58e449bb791138f07e1a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void projectStarted( String projectName );", "signatureAfterChange": "     void projectStarted();", "diff": ["-    void projectStarted( String projectName );", "+    void projectStarted();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8914c477def940f405461c4d86f726a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/LibPath.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void validateComponent() throws ExecutionException", "signatureAfterChange": "     public void validateComponent() throws ValidationException", "diff": ["-    public void validateComponent() throws ExecutionException {", "+    public void validateComponent() throws ValidationException {", "-            throw new ExecutionException(\"You must specify the id of the\"", "+            throw new ValidationException(\"You must specify the id of the\"", "-            throw new ExecutionException(\"You must provide an additional \"", "+            throw new ValidationException(\"You must provide an additional \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5dbe45d214acdc51393538076d3a7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/PropertyConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     Object createValue( Object parent )         throws ConfigurationException;", "signatureAfterChange": "     Object createValue( ConfigurationState state )         throws ConfigurationException;", "diff": ["-    Object createValue( Object parent )", "+    Object createValue( ConfigurationState state )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1ffcf0285ec0b8019b50cb463ef837", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "a7988a63f686fa0249f1ccac7d66f461d182f455", "commitAfterChange": "17fbe62a7d3180404fa527bcc568678870edb7e2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, File srcDir, File descriptorDir, String baseName)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, String baseName)", "diff": ["-    protected void addVendorFiles(Hashtable ejbFiles, File srcDir, File descriptorDir, String baseName) {", "+    protected void addVendorFiles(Hashtable ejbFiles, String baseName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe74b930d670e3e106782fd862b5013", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java", "commitBeforeChange": "88799e0669076c9b0cc114a1e191bf3370820984", "commitAfterChange": "e612a58418f0a8880e8eeb4d82aca14d67a9b7a5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected void visit(Folder starteamFolder, java.io.File targetFolder)             throws BuildException", "signatureAfterChange": "     protected void visit(Folder starteamFolder, java.io.File targetFolder)             throws BuildException", "diff": ["-            throws BuildException ", "-    {  ", "+            throws BuildException {", "-            ", "+", "-            ", "-            ", "+", "+", "-                ", "+", "-                for (int i=0; i < s; i++) {", "-                    ids[i]=filesList[i].getItemID();", "+                for (int i = 0; i < s; i++) {", "+                    ids[i] = filesList[i].getItemID();", "-                for (int i=0; i < s; i++) {", "-                    Integer ID = new Integer(foundIds[i]);", "-                    labeledFiles[i] = ", "-                        filesList[((Integer) labelItems.get(ID)).intValue()];", "+                for (int i = 0; i < s; i++) {", "+                    Integer id = new Integer(foundIds[i]);", "+                    labeledFiles[i] =", "+                        filesList[((Integer) labelItems.get(id)).intValue()];", "-            ", "-            ", "+", "+", "-            UnmatchedFileMap ufm = ", "+            UnmatchedFileMap ufm =", "-                java.io.File subfolder = ", "+                java.io.File subfolder =", "-                com.starbase.starteam.File stFile = ", "+                com.starbase.starteam.File stFile =", "-                processFile( stFile, targetFolder);", "-                ", "+                processFile(stFile, targetFolder);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940c2962fcaae61fd1207b2f4affec4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public TarBuffer( OutputStream outStream )", "signatureAfterChange": "      public TarBuffer( final OutputStream output )", "diff": ["-    public TarBuffer( OutputStream outStream )", "+    public TarBuffer( final OutputStream output )", "-        this( outStream, TarBuffer.DEFAULT_BLKSIZE );", "+        this( output, TarBuffer.DEFAULT_BLKSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95999d5fad9d3bb78f87ee4ab7d4aaa1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "2a816a5361ec39c8693a6a4bbac559ffe5948c6e", "commitAfterChange": "f2d32ac66d804c5dfeb14adcfa0ab31ff8f648e8", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 77, "signatureBeforeChange": "          protected void executeRetryable(RetryHandler h, Retryable r, String filename)      throws IOException", "signatureAfterChange": "          protected void executeRetryable(RetryHandler h, Retryable r, String descr)      throws IOException", "diff": ["-    protected void executeRetryable(RetryHandler h, Retryable r, String filename) ", "+    protected void executeRetryable(RetryHandler h, Retryable r, String descr) ", "-        h.execute(r, filename);", "+        h.execute(r, descr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9731bdab70298ab999be0b8c3c2a1ca2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/TaskContext.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TaskContext(ExecutionFrame frame,                        BuildEventSupport eventSupport)", "signatureAfterChange": "     public TaskContext(ExecutionFrame frame)", "diff": ["-    public TaskContext(ExecutionFrame frame,", "-                       BuildEventSupport eventSupport) {", "-        super(frame, eventSupport);", "+    public TaskContext(ExecutionFrame frame) {", "+        super(frame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd0edbada954e3f0e4a0c1caf2fa7e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/zip/ZipEncodingTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void doSimpleEncodingTest(String name, byte[] testBytes)         throws IOException", "signatureAfterChange": "      private void doSimpleEncodingTest(String name, byte[] testBytes)         throws IOException", "diff": ["-        assertEquals(testBytes, encoded);", "+        assertByteEquals(testBytes, encoded);", "-        assertEquals(\"%U2016\".getBytes(\"US-ASCII\"), enc.encode(UNENC_STRING));", "+        assertByteEquals(\"%U2016\".getBytes(\"US-ASCII\"), enc.encode(UNENC_STRING));", "-        assertEquals(BAD_STRING_ENC.getBytes(\"US-ASCII\"),", "-                     enc.encode(BAD_STRING));", "+        assertByteEquals(BAD_STRING_ENC.getBytes(\"US-ASCII\"),", "+                enc.encode(BAD_STRING));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e514a94b3a4a5b209c04f46e0df64cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Echo.java", "commitBeforeChange": "7932c703d2eb2e092ab2afa38df6edc916ddc98e", "commitAfterChange": "282f346ca230a8dec8d1956af05fcc9d511ad672", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setMessage(String d)", "signatureAfterChange": "     public void setMessage(String msg)", "diff": ["-    public void setMessage(String d) {", "-\tthis.message=d;", "+     */", "+    public void setMessage(String msg) {", "+\tthis.message = msg;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0ddf99f7b9f51d84fc22dcd6819822b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "ed654080ab790e351e7d0e43b3e5638541421a6e", "commitAfterChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setLongfile(String method)", "signatureAfterChange": "     public void setLongfile(String mode)", "diff": ["-    public void setLongfile(String method) {", "-        this.longFileMode = method;", "+    public void setLongfile(String mode) {", "+        this.longFileMode = mode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a16d025c254d81cb1786a94546cebef1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "4783bc46159826bc33858cfc9145c4be93dfe755", "commitAfterChange": "2a291dca9249d6a4958d9898282fa67343bf59b7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void setOutput(String s)", "signatureAfterChange": "     public void setOutput(String outputFile)", "diff": ["-    public void setOutput(String s) {", "-        this.output = s;", "+    public void setOutput(String outputFile) {", "+        this.output = outputFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51b1152926d89034a4c1e8d1ac7289b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "ab8c0b3d29af93c2d263cf2924f98827e365e56c", "commitAfterChange": "a916e82d98c1d699347adb5c1aa75a912f21e3cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void buildImport( final DefaultProject project,                               final Configuration element )         throws Exception", "signatureAfterChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws Exception", "diff": ["-    private void buildImport( final DefaultProject project,", "-                              final Configuration element )", "+    private void buildTypeLib( final DefaultProject project,", "+                               final Configuration element )", "-        project.addImport( new Import( library, type, name ) );", "+        project.addTypeLib( new TypeLib( library, type, name ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a944128389cc345af7c96272a9d0ef3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public TarBuffer( OutputStream outStream, int blockSize )", "signatureAfterChange": "      public TarBuffer( final OutputStream output, final int blockSize )", "diff": ["-    public TarBuffer( OutputStream outStream, int blockSize )", "+    public TarBuffer( final OutputStream output, final int blockSize )", "-        this( outStream, blockSize, TarBuffer.DEFAULT_RCDSIZE );", "+        this( output, blockSize, TarBuffer.DEFAULT_RCDSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b17a5524d3cb3312f409fbf1a1e9381f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private void initBlock()", "signatureAfterChange": "      private void initBlock()", "diff": ["-        last = -1;", "+        m_last = -1;", "-        allowableBlockSize = BASE_BLOCK_SIZE * blockSize100k - 20;", "+        m_allowableBlockSize = BASE_BLOCK_SIZE * m_blockSize100k - 20;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b254027e7a78911905eadfc197731c67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "8947bdbc21d3439529ce0f424f5224c500bc7958", "commitAfterChange": "9bd75d2c4e8bb5387ec65dd76ccf483f2bec59e7", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     protected void outputLog(String line, int messageLevel)", "signatureAfterChange": "     protected void outputLog(String line, int messageLevel)", "diff": ["-                super.outputLog(queuedLine, project.MSG_VERBOSE);", "+                super.outputLog(queuedLine, Project.MSG_VERBOSE);", "-                    super.outputLog(queuedLine, project.MSG_VERBOSE);", "+                    super.outputLog(queuedLine, Project.MSG_VERBOSE);", "-                    super.outputLog(queuedLine, project.MSG_INFO);", "+                    super.outputLog(queuedLine, Project.MSG_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5011d3d9aa349aec7ee8346ca714700", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "c1cadae30e769e118156566b578ef44ea5cc5ffa", "commitAfterChange": "f0d04b5c681dc135066cb65b1973e03672eb5044", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected String resolveExecutable(String exec, boolean searchPath)", "signatureAfterChange": "     protected String resolveExecutable(String exec, boolean mustSearchPath)", "diff": ["-    protected String resolveExecutable(String exec, boolean searchPath) {", "+    protected String resolveExecutable(String exec, boolean mustSearchPath) {", "-", "-", "-", "-        if (searchPath) {", "+        if (mustSearchPath) {", "-                        p = new Path(getProject(),", "-                                     environment[i].substring(5));", "+                        p = new Path(getProject(), environment[i].substring(5));", "-", "-            Vector envVars = Execute.getProcEnvironment();", "-            Enumeration e = envVars.elements();", "-            while (e.hasMoreElements()) {", "-                String line = (String) e.nextElement();", "-                if (isPath(line)) {", "-                    p = new Path(getProject(), line.substring(5));", "-                    break;", "+                Vector envVars = Execute.getProcEnvironment();", "+                Enumeration e = envVars.elements();", "+                while (e.hasMoreElements()) {", "+                    String line = (String) e.nextElement();", "+                    if (isPath(line)) {", "+                        p = new Path(getProject(), line.substring(5));", "+                        break;", "+                    }", "-            }", "-", "-                    executableFile = FILE_UTILS.resolveFile(new File(dirs[i]),", "-                                                           exec);", "+                    executableFile", "+                        = FILE_UTILS.resolveFile(new File(dirs[i]), exec);", "-", "-        // searchPath is false, or no PATH or not found - keep our", "+        // mustSearchPath is false, or no PATH or not found - keep our"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b98119c63df7234451fcfbc35883d421", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/Executor.java", "commitBeforeChange": "c36c9d34ef900252a66c91407e1e1072741f2075", "commitAfterChange": "3ab3efa97049fbfc69075f9ebdefc115babbb3cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void execute( Configuration task, TaskContext context )         throws TaskException;", "signatureAfterChange": "     void execute( Configuration task, ExecutionFrame frame )         throws TaskException;", "diff": ["-    void execute( Configuration task, TaskContext context )", "+    void execute( Configuration task, ExecutionFrame frame )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb227ad0a66bc6a8d171299b6ba4cae6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionManager.java", "commitBeforeChange": "af01f285a19e2502eb29bf8d10083f15cf392b7f", "commitAfterChange": "99dc457c6f7721903927fc6a154a730a36d42e51", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void runBuild(Project project, List targets, Map commandProperties)", "signatureAfterChange": "     public void runBuild(Project project, List targets, Map commandProperties)          throws AntException", "diff": ["-    public void runBuild(Project project, List targets, Map commandProperties) {", "+    public void runBuild(Project project, List targets, Map commandProperties)", "+         throws AntException {", "+            throw e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb544c813d9d4fec69550b37fc47155", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "4fd2002344affdd629fb388e6c9a21a0f62b607f", "commitAfterChange": "c78b5d0baa7d9d1f00e81af7cf53a40044e5a799", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-                    long chunck = Math.min(MAX_IO_CHUNCK_SIZE, count - position);", "+                    long chunk = Math.min(MAX_IO_CHUNCK_SIZE, count - position);", "-                        srcChannel.transferTo(position, chunck,", "+                        srcChannel.transferTo(position, chunk,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13ed12752fcb3f3ff7f920b29c63edc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/ProjectListenerSupport.java", "commitBeforeChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "commitAfterChange": "451ca455d5963fd430ac58e449bb791138f07e1a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void projectStarted( final String projectName )", "signatureAfterChange": "     public void projectStarted()", "diff": ["-    public void projectStarted( final String projectName )", "+    public void projectStarted()", "-            m_listeners[ i ].projectStarted( projectName );", "+            m_listeners[ i ].projectStarted();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5a32f5ab7ea202bb03b35415f2ee1c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/embeddor/Embeddor.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     Workspace createWorkspace( Parameters parameters )         throws Exception;", "signatureAfterChange": "     Workspace createWorkspace( Map properties )         throws Exception;", "diff": ["-    Workspace createWorkspace( Parameters parameters )", "+    Workspace createWorkspace( Map properties )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c72b7425cc832117e805a2da24e52537", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/ClientElement.java", "commitBeforeChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "commitAfterChange": "283bade37c87f86c92763234e886a69eb55cb47d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void doExecute() throws BuildException", "signatureAfterChange": "      protected void doExecute() throws BuildException", "diff": ["-        Execute execute = new Execute(new LogStreamHandler(parent, Project.MSG_INFO, Project.MSG_WARN));", "+        Execute execute = new Execute(new LogStreamHandler(parent, Project.MSG_VERBOSE, Project.MSG_VERBOSE));", "-            if (retVal != 0){", "+            if (retVal != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c773b4446995a37d94cbdd81cb51aea0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "409b0917b6f737faf5c8b804fdbec8bd1f7f5274", "commitAfterChange": "53ff5c31479209ea21fcb72643502a5aae70bf03", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public final Object nextElement() throws NoSuchElementException", "signatureAfterChange": "         public final Object nextElement() throws NoSuchElementException", "diff": ["-                test.setHaltonfailure(haltOnFailure);", "+                test.setHaltonfailure(haltOnFail);", "-                test.setIf(ifCond);", "-                test.setUnless(unlessCond);", "+                test.setIf(ifProperty);", "+                test.setUnless(unlessProperty);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c919487be03c4a06667dfe901e954525", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "03d0b81deb49fb4b6b87fa7dd648daf8f3bcbf4b", "commitAfterChange": "80080d456c543d039426db35bcf35d90694bbd96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setExecuteStreamHandler(ExecuteStreamHandler executeStreamHandler)", "signatureAfterChange": "      public void setExecuteStreamHandler(ExecuteStreamHandler handler)", "diff": ["-    public void setExecuteStreamHandler(ExecuteStreamHandler executeStreamHandler){", "-        this.executeStreamHandler = executeStreamHandler;", "+    public void setExecuteStreamHandler(ExecuteStreamHandler handler){", "+        this.executeStreamHandler = handler;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca6d5b788b7572507495ec8be19c5251", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtraAttribute.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void validate()         throws BuildException", "signatureAfterChange": "     public void validate() throws BuildException", "diff": ["-    public void validate()", "-        throws BuildException", "-    {", "-        if( null == m_name )", "-        {", "+    public void validate() throws BuildException {", "+        if (null == name) {", "-            throw new BuildException( message );", "-        }", "-        else if( null == m_value )", "-        {", "-            final String message = \"Missing value from parameter \" + m_name + \".\";", "-            throw new BuildException( message );", "+            throw new BuildException(message);", "+        } else if (null == value) {", "+            final String message = \"Missing value from parameter \" + name + \".\";", "+            throw new BuildException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d020de5cff9e99c224320e5bcc853b4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/SaveAsCmd.java", "commitBeforeChange": "18b63a1b1afc269c237e2bc05de803544e49ad45", "commitAfterChange": "8785091ee1c92874c44324f0429765539987b048", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SaveAsCmd(AppContext context)", "signatureAfterChange": "     public SaveAsCmd()", "diff": ["-    public SaveAsCmd(AppContext context) {", "-        super(context, null);", "+    public SaveAsCmd() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22b44265392c869a2ff3c18839e8845", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/model/Target.java", "commitBeforeChange": "50fb7f5643cba98640e7d4ce2b00736e9d42cbab", "commitAfterChange": "6ff9bf50ad2e4fcda69911d207c8dfe93e7b4e0b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Target( final Condition condition,                    final Configuration[] tasks,                    final String[] dependencies )", "signatureAfterChange": "     public Target( final Configuration[] tasks,                    final Dependency[] dependencies )", "diff": ["-    public Target( final Condition condition,", "-                   final Configuration[] tasks,", "-                   final String[] dependencies )", "+    public Target( final Configuration[] tasks,", "+                   final Dependency[] dependencies )", "-        m_condition = condition;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4307c37ef10495f24766bf597a1fc78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void configureReference( final ObjectConfigurer configurer,                                      final Object object,                                      final Configuration element,                                      final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void configureReference( final ConfigurationState state,                                      final Configuration element,                                      final Context context )         throws CascadingException", "diff": ["-    private void configureReference( final ObjectConfigurer configurer,", "-                                     final Object object,", "+    private void configureReference( final ConfigurationState state,", "-        throws ConfigurationException", "+        throws CascadingException", "-        setReference( configurer, object, name, id, context );", "+        setReference( state, name, id, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d76625a966a3fcd63d22c2965579f6d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarOutputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TarOutputStream( OutputStream os, int blockSize )", "signatureAfterChange": "      public TarOutputStream( final OutputStream output, final int blockSize )", "diff": ["-    public TarOutputStream( OutputStream os, int blockSize )", "+    public TarOutputStream( final OutputStream output, final int blockSize )", "-        this( os, blockSize, TarBuffer.DEFAULT_RCDSIZE );", "+        this( output, blockSize, TarBuffer.DEFAULT_RCDSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78f4a6d8c044df3896813139ca23463", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/ant1compat/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void processBuildEvent(BuildEvent be)", "signatureAfterChange": "     public void buildStarted(BuildEvent event)", "diff": ["-     */", "-    public void processBuildEvent(BuildEvent be) {", "-    }", "+     */", "+    public void buildStarted(BuildEvent event) {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2fb3575a5a09cd18b21bc2bf24d123", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "da75cd979a4e6778df05c90cb1f5a14aa70f7d05", "commitAfterChange": "29435d2c47d9a91053c9cf1bdba03bd55696ae7a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public BuildFileTest(String name)", "signatureAfterChange": "     public BuildFileTest()", "diff": ["+     */", "+    public BuildFileTest() {", "+        super();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64e78f462b1eb64422677e8cfc5788e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/api/TaskException.java", "commitBeforeChange": "cbeb4704a086bebb4de6c524d16bdc2d087953fd", "commitAfterChange": "ad2a69d6a7075c318abca61fa40a1341dce2cf9e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public TaskException( final String message )", "signatureAfterChange": "     public TaskException()", "diff": ["+     */", "+    public TaskException()", "+    {", "+        this( \"\", null );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b17a0f39d98f65574d1d4b8f1db018", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "5800b026fac0179cb373c1c85261c04bf2b54e8e", "commitAfterChange": "88f1be2d0462de59e99bf085522756a647195248", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void setUseImplicitFileset(boolean b)", "signatureAfterChange": "     public void setUseImplicitFileset(boolean useimplicitfileset)", "diff": ["-    public void setUseImplicitFileset(boolean b) {", "-\tuseImplicitFileset = b;", "+    public void setUseImplicitFileset(boolean useimplicitfileset) {", "+        useImplicitFileset = useimplicitfileset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb110a227901382d0a0dfbd3aec2d9e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarInputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public TarInputStream( InputStream is )", "signatureAfterChange": "      public TarInputStream( final InputStream input )", "diff": ["-", "-    public TarInputStream( InputStream is )", "+    public TarInputStream( final InputStream input )", "-        this( is, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE );", "+        this( input, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5255cf86556aa1d23114018e64e032", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7be61ff46cba15020a14a9d8c83236e929bb5a31", "commitAfterChange": "07a3027bb2230d2add3de5ec0b166a35d50b0236", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void determineOutOfDateClasses(String[] srcPathList)", "signatureAfterChange": "      private void determineOutOfDateClasses()", "diff": ["-    private void determineOutOfDateClasses(String[] srcPathList) {", "+    private void determineOutOfDateClasses() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6e78584f5fea25ce47feff2105c55a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/ssh/ScpTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ScpTest(String testname)", "signatureAfterChange": "      public ScpTest()", "diff": ["-    public ScpTest(String testname) {", "-        super(testname);", "+    public ScpTest() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0aea4e6015bb81c5f81ea0152a7c80b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/service/ComponentService.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void loadLib(String libLocation, boolean importAll, boolean autoImport)          throws ExecutionException;", "signatureAfterChange": "     void loadLib(URL libLocation, boolean importAll)          throws AntException;", "diff": ["-    void loadLib(String libLocation, boolean importAll, boolean autoImport)", "-         throws ExecutionException;", "+    void loadLib(URL libLocation, boolean importAll)", "+         throws AntException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0c8f613ad6c765bf3a6962dceec6e1b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "40bf7243ac6b80a6aca5f4a56b6634b7018db629", "commitAfterChange": "2c8c53f98ad69042c3ecb1dbbb6844c8a7cc4020", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setFile(String File)", "signatureAfterChange": "   public void setFile(String file)", "diff": ["+   */", "+  public void setFile(String file) {", "+    f = project.resolveFile(file);", "+  }", "-    public void setFile(String File) {", "-        f = project.resolveFile(File);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ee52f9cdabd8dc44d91f5bcac9126a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SizeSelector.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setWhen(SizeComparisons cmp)", "signatureAfterChange": "     public void setWhen(SizeComparisons scmp)", "diff": ["-    public void setWhen(SizeComparisons cmp) {", "-        this.cmp = cmp.getIndex();", "+    public void setWhen(SizeComparisons scmp) {", "+        this.cmp = scmp.getIndex();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a02c410aa2f681d16994c88866799f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "160baad4842b3febcd4b47ac35b580cba5d59654", "commitAfterChange": "05b398c9b626e7e0bb8014cbc411d67a17d53886", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setCommand(String e)", "signatureAfterChange": "      public void setCommand(Commandline cmdl)", "diff": ["-    public void setCommand(String e) {", "-        throw new BuildException(taskType+\" doesn\\'t support the command attribute\", location);", "+    public void setCommand(Commandline cmdl) {", "+        throw new BuildException(taskType + \" doesn\\'t support the command attribute\", location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f40ee6d13f7fe09bdb07b9665a718872", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibDisplayTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-    public void execute()", "-        throws BuildException", "-    {", "+     */", "+    public void execute() throws BuildException {", "-        if( !m_filesets.isEmpty() )", "-        {", "-            final Iterator iterator = m_filesets.iterator();", "-            while( iterator.hasNext() )", "-            {", "-                final FileSet fileSet = (FileSet)iterator.next();", "-                final DirectoryScanner scanner = fileSet.getDirectoryScanner( getProject() );", "+        if (!libraryFileSets.isEmpty()) {", "+            final Iterator iterator = libraryFileSets.iterator();", "+            while (iterator.hasNext()) {", "+                final FileSet fileSet = (FileSet) iterator.next();", "+                final DirectoryScanner scanner", "+                    = fileSet.getDirectoryScanner(getProject());", "-                for( int i = 0; i < files.length; i++ )", "-                {", "-                    final File file = new File( basedir, files[ i ] );", "-                    displayer.displayLibrary( file );", "+                for (int i = 0; i < files.length; i++) {", "+                    final File file = new File(basedir, files[ i ]);", "+                    displayer.displayLibrary(file);", "-        }", "-        else", "-        {", "-            displayer.displayLibrary( m_file );", "+        } else {", "+            displayer.displayLibrary(libraryFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51abc3a3be8f00d3270d414d999b6b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/listeners/AbstractProjectListener.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void log( String message )", "signatureAfterChange": "     public void log( final LogEvent event )", "diff": ["-     */", "-    public void log( String message )", "+    public void log( final LogEvent event )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60284487ada1370a50eaec362172ec5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/Cvs.java", "commitBeforeChange": "465dd5dfe1c59094fa0418d949853f54d53fa181", "commitAfterChange": "38aba801e388322cd8db783a1bc350cad4d4d77d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void setNoexec( boolean ne )", "signatureAfterChange": "      public void setNoexec( final boolean noexec )", "diff": ["-    public void setNoexec( boolean ne )", "+    public void setNoexec( final boolean noexec )", "-        m_noexec = ne;", "+        m_noexec = noexec;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a00fb222e56dae0710a8fd39f4f90e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/ProjectManager.java", "commitBeforeChange": "f26fff422c8ac77a5ca16ca226529fbed7630621", "commitAfterChange": "8c0388b0a4094f6782748bef2ae9cf8181cef64b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     void executeTarget( Project project, String target, TaskContext context )         throws TaskException;", "signatureAfterChange": "     void executeProject( Project project, String target )         throws TaskException;", "diff": ["-    void executeTarget( Project project, String target, TaskContext context )", "+    void executeProject( Project project, String target )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc0ca15c42938d0de1cf2c2c4c216d08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TarBuffer( InputStream inStream, int blockSize )", "signatureAfterChange": "      public TarBuffer( final InputStream input, final int blockSize )", "diff": ["-    public TarBuffer( InputStream inStream, int blockSize )", "+    public TarBuffer( final InputStream input, final int blockSize )", "-        this( inStream, blockSize, TarBuffer.DEFAULT_RCDSIZE );", "+        this( input, blockSize, TarBuffer.DEFAULT_RCDSIZE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc72e64dac17f09f589cf8af8b476f54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public CBZip2OutputStream( OutputStream inStream )         throws IOException", "signatureAfterChange": "      public CBZip2OutputStream( final OutputStream output )         throws IOException", "diff": ["-    public CBZip2OutputStream( OutputStream inStream )", "+    public CBZip2OutputStream( final OutputStream output )", "-        this( inStream, 9 );", "+        this( output, 9 );"]}]}