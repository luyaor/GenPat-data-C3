{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c416436dca6b743ba0eb44872f0edc7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f4790cfd5d399588920b1e0895715e8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DependSelector.java", "commitBeforeChange": "8ca6f54b9ad33f769e4ec781c9416c58515bc3e6", "commitAfterChange": "9d74327d0aa7052193a0fcd9430f6f8f3509e619", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     public boolean selectionTest(File srcfile, File destfile)", "diff": ["-     */", "-    public boolean isSelected(File basedir, String filename, File file) {", "-", "-        // throw BuildException on error", "-        validate();", "-", "-        // Determine file whose out-of-dateness is to be checked", "-        String[] destfiles = map.mapFileName(filename);", "-        // If filename does not match the To attribute of the mapper", "-        // then filter it out of the files we are considering", "-        if (destfiles == null) {", "-            return false;", "-        }", "-        // Sanity check", "-        if (destfiles.length != 1 || destfiles[0] == null) {", "-            throw new BuildException(\"Invalid destination file results for \"", "-                + targetdir.getName() + \" with filename \" + filename);", "-        }", "-        String destname = destfiles[0];", "-        File destfile = new File(targetdir,destname);", "-", "-        return SelectorUtils.isOutOfDate(file, destfile, granularity);", "+    public boolean selectionTest(File srcfile, File destfile) {", "+        boolean selected=SelectorUtils.isOutOfDate(srcfile, destfile, granularity);", "+        return selected;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25ff0ec7391ce2a0cee7f2ac0dafff5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/Import.java", "commitBeforeChange": "de190c4094ef4f0bb42d710d95b74bcef765aadc", "commitAfterChange": "e1018ac5bacf39393c79c27d80b07e1825189867", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void validateComponent() throws ExecutionException", "signatureAfterChange": "     public void validateComponent() throws ExecutionException", "diff": ["-        if (libraryId == null) {", "-            throw new ExecutionException(\"You must specify a library identifier\"", "-                 + \" with the \\\"libraryid\\\" attribute\");", "-        }", "-        if (alias != null && name == null) {", "-            throw new ExecutionException(\"You may only specify an alias\"", "-                 + \" when you specify the component name\");", "+        if (ref != null) {", "+            if (libraryId != null || name != null) {", "+                throw new ExecutionException(\"The \\\"ref\\\" attribute can only \"", "+                     + \"be used when \\\"libraryId\\\" and \\\"name\\\" attributes are \"", "+                     + \"not present\");", "+            }", "+        } else {", "+            if (libraryId == null) {", "+                throw new ExecutionException(\"You must specify a library \"", "+                     + \"identifier with the \\\"libraryid\\\" attribute\");", "+            }", "+            if (alias != null && name == null) {", "+                throw new ExecutionException(\"You may only specify an alias\"", "+                     + \" when you specify the \\\"name\\\" or \\\"ref\\\" attributes\");", "+            }"]}]}