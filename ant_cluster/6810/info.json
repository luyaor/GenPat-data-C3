{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13865752be752b351cbd7e2c439b7123", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b6b273f0c09b834c115616dda496ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sequential.java", "commitBeforeChange": "712a7f7c1b13217b58ecb8caad3be944e828531c", "commitAfterChange": "05b68e21f02fc96afdac64432894f46ab153078d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        for (Enumeration e = nestedTasks.elements(); e.hasMoreElements();) {", "-            Task nestedTask = (Task) e.nextElement();", "+        for (Iterator i = nestedTasks.iterator(); i.hasNext();) {", "+            Task nestedTask = (Task) i.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1a694d8dc1dd3a41546e47ba23eeb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "c717727548e7807ced7eeff05871f414a6f57413", "commitAfterChange": "3a896be7fdf1beb063702928ae89b4f7cbe106c2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void copyFile(File fromFile, File toFile,                           boolean filtering, boolean overwrite)", "signatureAfterChange": "     private void copyFile(File fromFile, File toFile, boolean filtering, boolean overwrite)", "diff": ["-    private void copyFile(File fromFile, File toFile,", "-                          boolean filtering, boolean overwrite) {", "+    private void copyFile(File fromFile, File toFile, boolean filtering, boolean overwrite) {", "-            log(\"Copying \" + fromFile + \" to \" + toFile,", "-                verbosity);", "+            log(\"Copying \" + fromFile + \" to \" + toFile, verbosity);", "-            FilterSetCollection executionFilters =", "-                new FilterSetCollection();", "+            FilterSetCollection executionFilters = new FilterSetCollection();", "-                executionFilters", "-                    .addFilterSet(getProject().getGlobalFilterSet());", "+                executionFilters.addFilterSet(getProject().getGlobalFilterSet());", "-            for (Enumeration filterEnum =", "-                    getFilterSets().elements();", "-                filterEnum.hasMoreElements();) {", "-                executionFilters", "-                    .addFilterSet((FilterSet) filterEnum", "-                                .nextElement());", "+            for (Iterator filterIter = getFilterSets().iterator(); filterIter.hasNext();) {", "+                executionFilters.addFilterSet((FilterSet) filterIter.next());", "-", "-", "-                + \" to \" + toFile", "-                + \" due to \" + ioe.getMessage();", "+                    + \" to \" + toFile + \" due to \" + ioe.getMessage();"]}]}