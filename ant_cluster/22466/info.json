{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a5676c83a2a1ff36a1d304634540fb1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7067c9a7ce13868f6b95cc93b10a88d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "9d30d3cd2ada1f4ee9800274f0dbb4d898a73344", "commitAfterChange": "f3e4a4790e917dbb1ba838de047c6826810e09b9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public static byte[] decodeHex(char[] data) throws BuildException", "signatureAfterChange": "     public static byte[] decodeHex(char[] data) throws BuildException", "diff": ["-            int f = Character.digit(data[j++], 16) << 4;", "-            f = f | Character.digit(data[j++], 16);", "-            out[i] = (byte) (f & 0xFF);", "+            int f = Character.digit(data[j++], WORD) << NIBBLE;", "+            f = f | Character.digit(data[j++], WORD);", "+            out[i] = (byte) (f & BYTE_MASK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a80113b7fb273357b90e56ab5fc65fc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "fe4759fae9eacee440d5f9e2c678bea872cd6849", "commitAfterChange": "e29e6c080c8678d3abfab30e43289c855e6c4d84", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String decodeUri(String uri) throws UnsupportedEncodingException", "signatureAfterChange": "     public static String decodeUri(String uri) throws UnsupportedEncodingException", "diff": ["-                    int i1 = Character.digit(c1, 16);", "+                    int i1 = Character.digit(c1, WORD);", "-                        int i2 = Character.digit(c2, 16);", "-                        sb.write((char) ((i1 << 4) + i2));", "+                        int i2 = Character.digit(c2, WORD);", "+                        sb.write((char) ((i1 << NIBBLE) + i2));"]}]}