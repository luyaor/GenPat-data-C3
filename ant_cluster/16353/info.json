{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "976cc741a82c76ffa849d2110de18394", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87517863ece2cfd05ac6e016c1cf6e47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/input/src/main/org/apache/tools/ant/input/PropertyFileInputHandler.java", "commitBeforeChange": "6b61cb14f38a03ce9d2d7c0408ac47e35a984387", "commitAfterChange": "fdcbd434d8c5cb90bd0c7a98acd9a3f26a0e20fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void readProps() throws BuildException", "signatureAfterChange": "      private synchronized void readProps() throws BuildException", "diff": ["-    private void readProps() throws BuildException {", "-        String propsFile = System.getProperty(\"input.properties\");", "-        if (propsFile == null) {", "-            throw new BuildException(\"System property input.properties for PropertyFileInputHandler not set\");", "-        }", "-        ", "-        props = new Properties();", "-        ", "-        try {", "-            props.load(new FileInputStream(propsFile));", "-        } catch (IOException e) {", "-            throw new BuildException(\"Couldn't load \"+propsFile, e);", "+    private synchronized void readProps() throws BuildException {", "+        if (props == null) {", "+            String propsFile = System.getProperty(FILE_NAME_KEY);", "+            if (propsFile == null) {", "+                throw new BuildException(\"System property \"", "+                                         + FILE_NAME_KEY", "+                                         + \" for PropertyFileInputHandler not set\");", "+            }", "+            ", "+            props = new Properties();", "+            ", "+            try {", "+                props.load(new FileInputStream(propsFile));", "+            } catch (IOException e) {", "+                throw new BuildException(\"Couldn't load \"+propsFile, e);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4c3bad9e5d0221f171734560ee6a55", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void executeJava() throws BuildException", "signatureAfterChange": "     protected void executeJava() throws BuildException", "diff": ["+            if ( version == BorlandDeploymentTool.BES)  {", "+                throw new BuildException(\"java mode is supported only for previous version <=\"+BorlandDeploymentTool.BAS);", "+            }", "+", "-            org.apache.tools.ant.taskdefs.Java execTask = null;                ", "+            org.apache.tools.ant.taskdefs.Java execTask = null;", "-                       ", "+", "-                execTask.createArg().setValue(\"-trace\");                ", "-            } // end of if ()", "+                execTask.createArg().setValue(\"-trace\");", "+            }", "-            //", "-            execTask.execute();        ", "+            execTask.execute();"]}]}