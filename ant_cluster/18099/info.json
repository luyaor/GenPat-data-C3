{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd21e5cf55bf0d59f98bb58326b0082f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae86385ee817b60c64d0de38e9e4d175", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "     protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(InputStream in, final ZipOutputStream zOut, final String vPath,                            final long lastModified, final File fromArchive, final int mode)         throws IOException", "diff": ["-    protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,", "-                           long lastModified, File fromArchive, int mode)", "+    protected void zipFile(InputStream in, final ZipOutputStream zOut, final String vPath,", "+                           final long lastModified, final File fromArchive, final int mode)", "-            ZipEntry ze = new ZipEntry(vPath);", "+            final ZipEntry ze = new ZipEntry(vPath);", "-                CRC32 cal = new CRC32();", "+                final CRC32 cal = new CRC32();", "-                    ByteArrayOutputStream bos = new ByteArrayOutputStream();", "+                    final ByteArrayOutputStream bos = new ByteArrayOutputStream();", "-                    byte[] buffer = new byte[BUFFER_SIZE];", "+                    final byte[] buffer = new byte[BUFFER_SIZE];", "-                    byte[] buffer = new byte[BUFFER_SIZE];", "+                    final byte[] buffer = new byte[BUFFER_SIZE];", "-            ZipExtraField[] extra = getCurrentExtraFields();", "+            final ZipExtraField[] extra = getCurrentExtraFields();", "-            byte[] buffer = new byte[BUFFER_SIZE];", "+            final byte[] buffer = new byte[BUFFER_SIZE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc495d3aeacd6bd9e2c64fe5a72e0fbd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void tar(ResourceCollection rc, TarOutputStream tOut)         throws IOException", "signatureAfterChange": "     protected void tar(final ResourceCollection rc, final TarOutputStream tOut)         throws IOException", "diff": ["-    protected void tar(ResourceCollection rc, TarOutputStream tOut)", "+    protected void tar(final ResourceCollection rc, final TarOutputStream tOut)", "-        TarFileSet tfs = asTarFileSet(afs);", "+        final TarFileSet tfs = asTarFileSet(afs);", "-            FileSet fs = (FileSet) rc;", "-            String[] files = getFileNames(fs);", "+            final FileSet fs = (FileSet) rc;", "+            final String[] files = getFileNames(fs);", "-                File f = new File(fs.getDir(getProject()), files[i]);", "-                String name = files[i].replace(File.separatorChar, '/');", "+                final File f = new File(fs.getDir(getProject()), files[i]);", "+                final String name = files[i].replace(File.separatorChar, '/');", "-            for (Resource r : rc) {", "-                File f = r.as(FileProvider.class).getFile();", "+            for (final Resource r : rc) {", "+                final File f = r.as(FileProvider.class).getFile();", "-            for (Resource r : rc) {", "+            for (final Resource r : rc) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6276beb3f4736c3b509e7fa507ae6a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void tarResource(Resource r, TarOutputStream tOut, String vPath,                                TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarResource(final Resource r, final TarOutputStream tOut, String vPath,                                final TarFileSet tarFileSet)         throws IOException", "diff": ["-    protected void tarResource(Resource r, TarOutputStream tOut, String vPath,", "-                               TarFileSet tarFileSet)", "+    protected void tarResource(final Resource r, final TarOutputStream tOut, String vPath,", "+                               final TarFileSet tarFileSet)", "-            String fullpath = tarFileSet.getFullpath(this.getProject());", "+            final String fullpath = tarFileSet.getFullpath(this.getProject());", "-                int l = vPath.length();", "+                final int l = vPath.length();", "-        TarEntry te = new TarEntry(vPath, preserveLeadingSlashes);", "+        final TarEntry te = new TarEntry(vPath, preserveLeadingSlashes);", "-            ArchiveResource ar = (ArchiveResource) r;", "+            final ArchiveResource ar = (ArchiveResource) r;", "-                TarResource tr = (TarResource) r;", "+                final TarResource tr = (TarResource) r;", "-                byte[] buffer = new byte[BUFFER_SIZE];", "+                final byte[] buffer = new byte[BUFFER_SIZE];"]}]}