{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cccb5cd18411158ec781be4f093b5f28", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a42282d01c2d96f0c2c5d91c37c77c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void executeTask( final Configuration model,                               final ExecutionFrame frame )         throws TaskException", "signatureAfterChange": "      private void executeTask( final Configuration model,                               final ExecutionFrame frame )         throws TaskException", "diff": ["-            doContextualize( task, taskModel, frame.getContext() );", "+            final TaskContext context = doCreateContext( frame );", "+            doContextualize( task, taskModel, context, frame );", "-            doConfigure( task, taskModel, frame.getContext() );", "+            doConfigure( task, taskModel, context, frame );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db524a979bebe34478d12ab26ae24abd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute( final Configuration taskModel, final ExecutionFrame frame )         throws TaskException", "signatureAfterChange": "     public void execute( final Configuration taskModel, final ExecutionFrame frame )         throws TaskException", "diff": ["-            doContextualize( task, taskModel, frame.getContext() );", "+            final TaskContext context = doCreateContext( frame );", "+            doContextualize( task, taskModel, context, frame );", "-            doConfigure( task, taskModel, frame.getContext() );", "+            doConfigure( task, taskModel, context, frame );"]}]}