{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "237d0c8376b15d6511948f21f3376662", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426439da1a39a951cd312d960c42d0b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["-        ", "-        final ZipEncoding entryEncoding;", "-        ", "-        if (!encodable && fallbackToUTF8) {", "-            entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;", "-        } else {", "-            entryEncoding = zipEncoding;", "-        }", "-        ", "-        ByteBuffer name = entryEncoding.encode(ze.getName());        ", "+        ByteBuffer name = getName(ze);", "-", "-            if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS", "-                || !encodable) {", "-                ze.addExtraField(new UnicodePathExtraField(ze.getName(),", "-                                                           name.array(),", "-                                                           name.arrayOffset(),", "-                                                           name.limit()));", "-            }", "-", "-            String comm = ze.getComment();", "-            if (comm != null && !\"\".equals(comm)) {", "-", "-                boolean commentEncodable = this.zipEncoding.canEncode(comm);", "-", "-                if (createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS", "-                    || !commentEncodable) {", "-                    ByteBuffer commentB = entryEncoding.encode(comm);", "-                    ze.addExtraField(new UnicodeCommentExtraField(comm,", "-                                                                  commentB.array(),", "-                                                                  commentB.arrayOffset(),", "-                                                                  commentB.limit())", "-                                     );", "-                }", "-            }", "+            addUnicodeExtraFields(ze, encodable, name);", "-        offsets.put(ze, ZipLong.getBytes(written));", "+        offsets.put(ze, Long.valueOf(written));", "-                                                         && fallbackToUTF8);", "+                                                         && fallbackToUTF8,", "+                                                         hasZip64Extra(ze));", "-        writeOut(toDosTime(ze.getTime()));", "+        writeOut(ZipUtil.toDosTime(ze.getTime()));", "-        localDataStart = written;", "+        entry.localDataStart = written;", "-            writeOut(LZERO);", "-            writeOut(LZERO);", "+            if (hasZip64Extra(entry.entry)) {", "+                // point to ZIP64 extended information extra field for", "+                // sizes, may get rewritten once sizes are known if", "+                // stream is seekable", "+                writeOut(ZipLong.ZIP64_MAGIC.getBytes());", "+                writeOut(ZipLong.ZIP64_MAGIC.getBytes());", "+            } else {", "+                writeOut(LZERO);", "+                writeOut(LZERO);", "+            }", "-            writeOut(ZipLong.getBytes(ze.getSize()));", "-            writeOut(ZipLong.getBytes(ze.getSize()));", "+            byte[] size = ZipLong.ZIP64_MAGIC.getBytes();", "+            if (!hasZip64Extra(ze)) {", "+                size = ZipLong.getBytes(ze.getSize());", "+            }", "+            writeOut(size);", "+            writeOut(size);", "-        dataStart = written;", "+        entry.dataStart = written;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c32a5101fd0e8177703dc1341893ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/security/GenerateKey.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private Commandline createCommand()", "signatureAfterChange": "      private Commandline createCommand()", "diff": ["-        cmd.createArgument().setValue( \"-genkey \" );", "+        cmd.addArgument( \"-genkey \" );", "-            cmd.createArgument().setValue( \"-v \" );", "+            cmd.addArgument( \"-v \" );", "-        cmd.createArgument().setValue( \"-alias\" );", "-        cmd.createArgument().setValue( m_alias );", "+        cmd.addArgument( \"-alias\" );", "+        cmd.addArgument( m_alias );", "-            cmd.createArgument().setValue( \"-dname\" );", "-            cmd.createArgument().setValue( m_dname );", "+            cmd.addArgument( \"-dname\" );", "+            cmd.addArgument( m_dname );", "-            cmd.createArgument().setValue( \"-dname\" );", "-            cmd.createArgument().setValue( m_expandedDname.toString() );", "+            cmd.addArgument( \"-dname\" );", "+            cmd.addArgument( m_expandedDname.toString() );", "-            cmd.createArgument().setValue( \"-keystore\" );", "-            cmd.createArgument().setValue( m_keystore );", "+            cmd.addArgument( \"-keystore\" );", "+            cmd.addArgument( m_keystore );", "-            cmd.createArgument().setValue( \"-storepass\" );", "-            cmd.createArgument().setValue( m_storepass );", "+            cmd.addArgument( \"-storepass\" );", "+            cmd.addArgument( m_storepass );", "-            cmd.createArgument().setValue( \"-storetype\" );", "-            cmd.createArgument().setValue( m_storetype );", "+            cmd.addArgument( \"-storetype\" );", "+            cmd.addArgument( m_storetype );", "-        cmd.createArgument().setValue( \"-keypass\" );", "+        cmd.addArgument( \"-keypass\" );", "-            cmd.createArgument().setValue( m_keypass );", "+            cmd.addArgument( m_keypass );", "-            cmd.createArgument().setValue( m_storepass );", "+            cmd.addArgument( m_storepass );", "-            cmd.createArgument().setValue( \"-sigalg\" );", "-            cmd.createArgument().setValue( m_sigalg );", "+            cmd.addArgument( \"-sigalg\" );", "+            cmd.addArgument( m_sigalg );", "-            cmd.createArgument().setValue( \"-keyalg\" );", "-            cmd.createArgument().setValue( m_keyalg );", "+            cmd.addArgument( \"-keyalg\" );", "+            cmd.addArgument( m_keyalg );", "-            cmd.createArgument().setValue( \"-keysize\" );", "-            cmd.createArgument().setValue( \"\" + m_keysize );", "+            cmd.addArgument( \"-keysize\" );", "+            cmd.addArgument( \"\" + m_keysize );", "-            cmd.createArgument().setValue( \"-validity\" );", "-            cmd.createArgument().setValue( \"\" + m_validity );", "+            cmd.addArgument( \"-validity\" );", "+            cmd.addArgument( \"\" + m_validity );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584afd250a83517392f41625af2ccf26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/security/GenerateKey.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private Commandline createCommand()", "signatureAfterChange": "      private Commandline createCommand()", "diff": ["-        cmd.createArgument().setValue( \"-genkey \" );", "+        cmd.addArgument( \"-genkey \" );", "-            cmd.createArgument().setValue( \"-v \" );", "+            cmd.addArgument( \"-v \" );", "-        cmd.createArgument().setValue( \"-alias\" );", "-        cmd.createArgument().setValue( m_alias );", "+        cmd.addArgument( \"-alias\" );", "+        cmd.addArgument( m_alias );", "-            cmd.createArgument().setValue( \"-dname\" );", "-            cmd.createArgument().setValue( m_dname );", "+            cmd.addArgument( \"-dname\" );", "+            cmd.addArgument( m_dname );", "-            cmd.createArgument().setValue( \"-dname\" );", "-            cmd.createArgument().setValue( m_expandedDname.toString() );", "+            cmd.addArgument( \"-dname\" );", "+            cmd.addArgument( m_expandedDname.toString() );", "-            cmd.createArgument().setValue( \"-keystore\" );", "-            cmd.createArgument().setValue( m_keystore );", "+            cmd.addArgument( \"-keystore\" );", "+            cmd.addArgument( m_keystore );", "-            cmd.createArgument().setValue( \"-storepass\" );", "-            cmd.createArgument().setValue( m_storepass );", "+            cmd.addArgument( \"-storepass\" );", "+            cmd.addArgument( m_storepass );", "-            cmd.createArgument().setValue( \"-storetype\" );", "-            cmd.createArgument().setValue( m_storetype );", "+            cmd.addArgument( \"-storetype\" );", "+            cmd.addArgument( m_storetype );", "-        cmd.createArgument().setValue( \"-keypass\" );", "+        cmd.addArgument( \"-keypass\" );", "-            cmd.createArgument().setValue( m_keypass );", "+            cmd.addArgument( m_keypass );", "-            cmd.createArgument().setValue( m_storepass );", "+            cmd.addArgument( m_storepass );", "-            cmd.createArgument().setValue( \"-sigalg\" );", "-            cmd.createArgument().setValue( m_sigalg );", "+            cmd.addArgument( \"-sigalg\" );", "+            cmd.addArgument( m_sigalg );", "-            cmd.createArgument().setValue( \"-keyalg\" );", "-            cmd.createArgument().setValue( m_keyalg );", "+            cmd.addArgument( \"-keyalg\" );", "+            cmd.addArgument( m_keyalg );", "-            cmd.createArgument().setValue( \"-keysize\" );", "-            cmd.createArgument().setValue( \"\" + m_keysize );", "+            cmd.addArgument( \"-keysize\" );", "+            cmd.addArgument( \"\" + m_keysize );", "-            cmd.createArgument().setValue( \"-validity\" );", "-            cmd.createArgument().setValue( \"\" + m_validity );", "+            cmd.addArgument( \"-validity\" );", "+            cmd.addArgument( \"\" + m_validity );"]}]}