{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37c0ae413e0c732281b392316a2d74f8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b08a8c20a0d46faadbe417193089b4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "1beb540cd6584dc7246fecda16a0d10bd6ff6f3a", "commitAfterChange": "d4ebf04094c0866a1d3608f45a3ca80d46ad2702", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-                } catch (BuildException be) {", "+                } catch (UnsupportedAttributeException be) {", "-                    if (!name.equals(\"id\")) {", "+                    if (name.equals(\"id\")) {", "+                        // Do nothing", "+                    } else  if (getElementTag() == null) {", "+                        throw be;", "+                    } else {", "+                        be.setMessage(", "+                            getElementTag()", "+                            +  \" doesn't support the \\\"\"", "+                            + be.getAttribute()", "+                            + \"\\\" attribute\");", "+                        throw be;", "+                    }", "+                } catch (BuildException be) {", "+                    if (name.equals(\"id\")) {", "+                        // Assume that this is an not supported attribute type", "+                        // thrown for example by a dymanic attribute task", "+                        // Do nothing", "+                    } else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c75ad99edce5c15a08167d475cb5670", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "2f7478b5c436752b32f6f6ad1e3eefefd9018149", "commitAfterChange": "388c987ddcb15cebcf5d2afb2ade3c5ec636ca9a", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "      private void logTimeout(FormatterElement[] feArray, JUnitTest test)", "signatureAfterChange": "      private void logTimeout(FormatterElement[] feArray, JUnitTest test)", "diff": ["-                    formatter.setOutput(out);", "-                    formatter.startTestSuite(test);", "-                    test.setCounts(0, 0, 1);", "-                    Test t = new Test() {", "-                        public int countTestCases() { return 0; }", "-                        public void run(TestResult r) {", "-                            throw new AssertionFailedError(\"Timeout occurred\");", "-                        }", "-                    };", "-                    formatter.startTest(t);", "-                    formatter", "-                        .addError(t,", "-                                  new AssertionFailedError(\"Timeout occurred\"));", "-", "-                    formatter.endTestSuite(test);", "+                    addTimeout(test, formatter, out);", "+        if (summary) {", "+            SummaryJUnitResultFormatter f = new SummaryJUnitResultFormatter();", "+            f.setWithOutAndErr(\"withoutanderr\".equalsIgnoreCase(summaryValue));", "+            addTimeout(test, f, getDefaultOutput());", "+        }", "+    }"]}]}