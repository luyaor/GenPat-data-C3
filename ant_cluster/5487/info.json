{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29e414079a269ef69ffe6430b9c51f2e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ae78310f653fb6c262b3542bb7d4d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void setupProjectContext( final Project project, final HashMap defines )         throws AntException", "signatureAfterChange": "     protected void setupProjectContext( final Project project, final HashMap defines )         throws AntException", "diff": ["-        defines.put( AntContextResources.HOME_DIR, m_homeDir );", "-        defines.put( AntContextResources.BIN_DIR, m_binDir );", "-        defines.put( AntContextResources.LIB_DIR, m_libDir );", "-        defines.put( AntContextResources.TASKLIB_DIR, m_taskLibDir );", "-        //defines.put( AntContextResources.USER_DIR, m_userDir );", "-        defines.put( TaskletContext.JAVA_VERSION, getJavaVersion() );", "+        //defines.put( AntContextResources.HOME_DIR, m_homeDir );", "+        //defines.put( AntContextResources.BIN_DIR, m_binDir );", "+        //defines.put( AntContextResources.LIB_DIR, m_libDir );", "+        //defines.put( AntContextResources.TASKLIB_DIR, m_taskLibDir );", "+        //defines.put( TaskletContext.JAVA_VERSION, getJavaVersion() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fea842bfa5d30b3cba66647f87d54de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected void setupProjectContext( final Project project, final HashMap defines )         throws AntException", "signatureAfterChange": "     protected void setupProjectContext( final Project project, final HashMap defines )         throws AntException", "diff": ["+     */", "+        //put these values into defines so that they overide", "+        //user-defined proeprties", "+        defines.put( AntContextResources.HOME_DIR, m_homeDir );", "+        defines.put( AntContextResources.BIN_DIR, m_binDir );", "+        defines.put( AntContextResources.LIB_DIR, m_libDir );", "+        defines.put( AntContextResources.TASKLIB_DIR, m_taskLibDir );", "+        //defines.put( AntContextResources.USER_DIR, m_userDir );", "+        defines.put( TaskletContext.LOGGER, m_logger );", "+        defines.put( TaskletContext.JAVA_VERSION, getJavaVersion() );", "+", "-        ", "-        final Iterator keys = defines.keySet().iterator();", "-        //make sure these come before following so they get overidden if user tries to ", "-        //confuse the system", "+        addToContext( context, defines );", "+", "+        //Add system properties second so that they overide user-defined properties", "+        addToContext( context, System.getProperties() );", "+    }", "-            final String value = (String)defines.get( key );", "-        ", "-        context.setProperty( AntContextResources.HOME_DIR, m_homeDir );", "-        context.setProperty( AntContextResources.BIN_DIR, m_binDir );", "-        context.setProperty( AntContextResources.LIB_DIR, m_libDir );", "-        context.setProperty( AntContextResources.TASKLIB_DIR, m_taskLibDir );", "-        //context.put( AntContextResources.USER_DIR, m_userDir );", "-        context.setProperty( TaskletContext.LOGGER, m_logger );", "-        context.setProperty( TaskletContext.JAVA_VERSION, getJavaVersion() );"]}]}