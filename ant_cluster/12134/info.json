{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2af9401d5dc5ee34d42d07429e30a1c6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3237afa92f21bfd511ee4cfed1c338", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "b8c35567eee957064ae29052eae63ee1b4f9c7aa", "commitAfterChange": "d377aa50f3aef9a5dbb9974d1e5818489ab2db99", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-            for (String[] extensionInfo : getExtensionStack()) {", "-                String tgName = extensionInfo[0];", "-                String name = extensionInfo[1];", "-                OnMissingExtensionPoint missingBehaviour = OnMissingExtensionPoint", "-                        .valueOf(extensionInfo[2]);", "-                Hashtable projectTargets = project.getTargets();", "-                if (!projectTargets.containsKey(tgName)) {", "-                    String message = \"can't add target \" + name", "-                        + \" to extension-point \" + tgName", "-                        + \" because the extension-point is unknown.\";", "-                    if (missingBehaviour == OnMissingExtensionPoint.FAIL) {", "-                        throw new BuildException(message);", "-                    } else if (missingBehaviour == OnMissingExtensionPoint.WARN) {", "-                        Target target = (Target) projectTargets.get(name);", "-                        context.getProject().log(target,", "-                                                 \"Warning: \" + message,", "-                                                 Project.MSG_WARN);", "-                    }", "-                } else {", "-                    Target t = (Target) projectTargets.get(tgName);", "-                    if (!(t instanceof ExtensionPoint)) {", "-                        throw new BuildException(\"referenced target \"", "-                                                 + tgName", "-                                                 + \" is not an extension-point\");", "-                    }", "-                    t.addDependency(name);", "-                }", "-            }", "+            resolveExtensionOfAttributes(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c59c5ccf928fe6d22fb7e3b6fc1b2f05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/runtime/ConverterDef.java", "commitBeforeChange": "d957fa1151163d513197a174a098e2aac8745b1e", "commitAfterChange": "87ceed8170a6359ac2c4714b6ad22c55d2b1f571", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      protected TypeDefinition createTypeDefinition()", "diff": ["+    protected TypeDefinition createTypeDefinition()", "-", "-    public void execute()", "-        throws TaskException", "-    {", "-        if( null == m_classname )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-classname.error\" );", "-            throw new TaskException( message );", "-        }", "-        else if( null == m_sourceType )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-source.error\" );", "-            throw new TaskException( message );", "-        }", "-        else if( null == m_destinationType )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-destination.error\" );", "-            throw new TaskException( message );", "-        }", "-        else if( null == m_lib )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-lib.error\" );", "-            throw new TaskException( message );", "-        }", "-", "-        try", "-        {", "-            // Locate the deployer, then deploy the converter", "-            final Deployer deployer = (Deployer)getService( Deployer.class );", "-            final TypeDeployer typeDeployer = deployer.createDeployer( m_lib );", "-            typeDeployer.deployConverter( m_classname, m_sourceType, m_destinationType );", "-        }", "-        catch( final Exception e )", "-        {", "-            final String message = REZ.getString( \"converterdef.no-register.error\", m_classname );", "-            throw new TaskException( message, e );", "-        }", "+        return new ConverterDefinition();"]}]}