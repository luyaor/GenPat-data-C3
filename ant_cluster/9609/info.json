{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de726ba675272b49d55f6f508ef6c6d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571888b2bfe6e9e5659c43bab090715d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void assertSameMessage( final String message, final Throwable throwable )", "signatureAfterChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "diff": ["+     */", "+    protected void assertSameMessage( final String[] messages, final Throwable throwable )", "+    {", "+        Throwable current = throwable;", "+        for( int i = 0; i < messages.length; i++ )", "+        {", "+            String message = messages[ i ];", "+            assertNotNull( current );", "+            assertEquals( message, current.getMessage() );", "+", "+            if( current instanceof CascadingThrowable )", "+            {", "+                current = ( (CascadingThrowable)current ).getCause();", "+            }", "+            else", "+            {", "+                current = null;", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b066359d7732e14f82152d5c52e88c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void assertSameMessage( final String message, final Throwable throwable )", "signatureAfterChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "diff": ["+     */", "+    protected void assertSameMessage( final String[] messages, final Throwable throwable )", "+    {", "+        Throwable current = throwable;", "+        for( int i = 0; i < messages.length; i++ )", "+        {", "+            String message = messages[ i ];", "+            assertNotNull( current );", "+            assertEquals( message, current.getMessage() );", "+", "+            if( current instanceof CascadingThrowable )", "+            {", "+                current = ( (CascadingThrowable)current ).getCause();", "+            }", "+            else", "+            {", "+                current = null;", "+            }", "+        }", "+    }"]}]}