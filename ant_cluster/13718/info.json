{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "320d658f2a25871ccecf09ca391064db", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430a967453893ff05726e7be18647249", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "8fc57a55d3662cc74427b9b8af0fb375e809acff", "commitAfterChange": "794a883964c3cd6022bd166dbe6f9cda2360222d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void doConfigure( final Task task,                               final Configuration taskData,                               final TaskContext context )         throws TaskException", "signatureAfterChange": "      protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext context )         throws TaskException", "diff": ["-    private void doConfigure( final Task task,", "-                              final Configuration taskData,", "-                              final TaskContext context )", "+    protected final void doConfigure( final Task task,", "+                                      final Configuration taskModel,", "+                                      final TaskContext context )", "-        try { m_configurer.configure( task, taskData, context ); }", "+        try { m_configurer.configure( task, taskModel, context ); }", "-            throw new TaskException( \"Error configuring task \" +  taskData.getName() + \" at \" +", "-                                     taskData.getLocation() + \"(Reason: \" +", "-                                     throwable.getMessage() + \")\", throwable );", "+            throw new TaskException( \"Error configuring task \" +  taskModel.getName() + \" at \" +", "+                                     taskModel.getLocation() + \"(Reason: \" +", "+                                     throwable.getMessage() + \")\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3dae542bab8f578cb7553684b7ae930", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "8fc57a55d3662cc74427b9b8af0fb375e809acff", "commitAfterChange": "794a883964c3cd6022bd166dbe6f9cda2360222d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute( final Configuration taskData, final TaskContext context )         throws TaskException", "signatureAfterChange": "      public void execute( final Configuration taskModel, final TaskContext context )         throws TaskException", "diff": ["-    public void execute( final Configuration taskData, final TaskContext context )", "+    public void execute( final Configuration taskModel, final TaskContext context )", "-        final Task task = createTask( taskData.getName() );", "+        final Task task = createTask( taskModel.getName() );", "-        doContextualize( task, taskData, context );", "+        doContextualize( task, taskModel, context );", "-        doCompose( task, taskData );", "+        doCompose( task, taskModel );", "-        doConfigure( task, taskData, context );", "+        doConfigure( task, taskModel, context );", "-        doInitialize( task, taskData );", "+        doInitialize( task, taskModel );", "-        doDispose( task, taskData );", "+        doDispose( task, taskModel );"]}]}