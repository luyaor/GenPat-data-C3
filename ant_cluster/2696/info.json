{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e1f9fdd3dd698f086d0df9fdfb9a5f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a5a325b6677fca076721c828092aa69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReachableTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testNoTargets() throws Exception", "signatureAfterChange": "      @Test     public void testNoTargets() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testNoTargets\",", "-                \"no params\",", "-                IsReachable.ERROR_NO_HOSTNAME);", "+        try {", "+            buildRule.executeTarget(\"testNoTargets\");", "+            fail(\"Build exception expected: no params\");", "+        } catch(BuildException ex) {", "+            assertEquals(IsReachable.ERROR_NO_HOSTNAME, ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baac86605affd1bc3f81f6b0c9b173c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReachableTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void NotestFile() throws Exception", "signatureAfterChange": "      @Test     @Ignore(\"Previously named in a way to prevent execution\")     public void NotestFile() throws Exception", "diff": ["+    @Test", "+    @Ignore(\"Previously named in a way to prevent execution\")", "-        expectBuildExceptionContaining(\"testFile\",", "-                \"error on file URL\",", "-                IsReachable.ERROR_NO_HOST_IN_URL);", "+        try {", "+            buildRule.executeTarget(\"testFile\");", "+            fail(\"Build exception expected: error on file URL\");", "+        } catch(BuildException ex) {", "+            assertEquals(IsReachable.ERROR_NO_HOST_IN_URL, ex.getMessage());", "+        }"]}]}