{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5392d0bbc42d2f955dfa0358d1c0e0ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ad98e6ab18d90cc6f026b93ba683e34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testWrongClass() throws Exception", "signatureAfterChange": "     @Test     public void testWrongClass() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testWrongClass\",", "-                \"class not an RMIC adapter\",", "-                RmicAdapterFactory.ERROR_NOT_RMIC_ADAPTER);", "+        try {", "+            buildRule.executeTarget(\"testWrongClass\");", "+            fail(\"Class not an RMIC adapter\");", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(RmicAdapterFactory.ERROR_NOT_RMIC_ADAPTER, ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b82edb9a21f76d6a981003f7f4f01fb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void testMagicPropertyOverridesEmptyString() throws Exception", "signatureAfterChange": "     @Test     public void testMagicPropertyOverridesEmptyString() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testMagicPropertyOverridesEmptyString\",", "-                \"magic property not working\",", "-                RmicAdapterFactory.ERROR_UNKNOWN_COMPILER);", "+        try {", "+            buildRule.executeTarget(\"testMagicPropertyOverridesEmptyString\");", "+            fail(\"Magic property not working\");", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(RmicAdapterFactory.ERROR_UNKNOWN_COMPILER, ex.getMessage());", "+        }"]}]}