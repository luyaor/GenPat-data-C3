{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17408d03f2a0849dbe6fd4c18d5eeedc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3019fed9664bfc5fce7250ab6f10cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "0777fa853af3a619d777adaead96e9c0d1aff291", "commitAfterChange": "5061e731c3919a7236bdcdd2ad9965d384313e26", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setEol(CrLf attr)", "signatureAfterChange": "     public void setEol(CrLf attr)", "diff": ["-        String option = attr.getValue();", "-        if (option.equals(\"asis\")) {", "-            eol = ASIS;", "-        } else if (option.equals(\"cr\") || option.equals(\"mac\")) {", "-            eol = CR;", "-            eolstr = \"\\r\";", "-        } else if (option.equals(\"lf\") || option.equals(\"unix\")) {", "-            eol = LF;", "-            eolstr = \"\\n\";", "-        } else {", "-            // Must be \"crlf\"", "-            eol = CRLF;", "-            eolstr = \"\\r\\n\";", "-        }", "+        filter.setEol(FixCrLfFilter.CrLf.newInstance(attr.getValue()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f79dc2e595d8a65fed063ab115160cc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "739c7e224a56b3008c9496d8711fbf8276b46034", "commitAfterChange": "1f06891d003a6f39cd3b456c797bb8ed5a1708ac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static boolean matchPath(String pattern, String str,                                     boolean isCaseSensitive)", "signatureAfterChange": "     static boolean matchPath(String[] tokenizedPattern, String str, boolean isCaseSensitive)", "diff": ["+     */", "+    static boolean matchPath(String[] tokenizedPattern, String str, boolean isCaseSensitive) {", "-        int patIdxEnd = patDirs.length - 1;", "+        int patIdxEnd = tokenizedPattern.length - 1;", "-            String patDir = patDirs[patIdxStart];", "+            String patDir = tokenizedPattern[patIdxStart];", "-                patDirs = null;", "-                strDirs = null;", "-                if (!patDirs[i].equals(\"**\")) {", "-                    patDirs = null;", "-                    strDirs = null;", "+                if (!tokenizedPattern[i].equals(\"**\")) {", "-                patDirs = null;", "-                strDirs = null;", "-            String patDir = patDirs[patIdxEnd];", "+            String patDir = tokenizedPattern[patIdxEnd];", "-                patDirs = null;", "-                strDirs = null;", "-                if (!patDirs[i].equals(\"**\")) {", "-                    patDirs = null;", "-                    strDirs = null;", "+                if (!tokenizedPattern[i].equals(\"**\")) {", "-                if (patDirs[i].equals(\"**\")) {", "+                if (tokenizedPattern[i].equals(\"**\")) {", "-                                String subPat = patDirs[patIdxStart + j + 1];", "+                                String subPat = tokenizedPattern[patIdxStart + j + 1];", "-                patDirs = null;", "-                strDirs = null;", "-            if (!patDirs[i].equals(\"**\")) {", "-                patDirs = null;", "-                strDirs = null;", "+            if (!tokenizedPattern[i].equals(\"**\")) {"]}]}