{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cf6c68db29c779ebd0c137c7a811605", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d48c63c903ab7b7cdc99961a2095aa2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/DependentTargetChooser.java", "commitBeforeChange": "2ff201801b557593afe6cf9dcd4d4c4f4da65b39", "commitAfterChange": "cfa93603e73e635d31be01cdb31dc9959a5ea35c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean checkDepends(String name, ACSTargetElement aTarget)", "signatureAfterChange": "         public void preselectTargets(String[] targetNames)", "diff": ["-    private boolean checkDepends(String name, ACSTargetElement aTarget) {", "-        String[] depend = aTarget.getDepends();", "-        for( int i= 0; i < depend.length; i++) {", "-            if (name.equalsIgnoreCase(depend[i])) return true;", "-        return false;", "+         */", "+        public void preselectTargets(String[] targetNames) {", "+            int i = 0, j = 0;", "+            int iDim = getRowCount();", "+            int jDim = targetNames.length;", "+            for (i = 0; i < iDim; i++) {", "+                String name = getTarget(i).getName();", "+                for( j= 0; j < jDim; j++) {", "+                    if (name.equalsIgnoreCase(targetNames[j])) _selected[i] = true;", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442f228f2fd38bdec874d2b9838e6fdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private String[] getNames( final Extension[] extensions )", "signatureAfterChange": "     private static ArrayList toExtensions( final ArrayList adapters )         throws TaskException", "diff": ["-     */", "-    private String[] getNames( final Extension[] extensions )", "-    {", "-        final String[] results = new String[ extensions.length ];", "-        for( int i = 0; i < results.length; i++ )", "-        {", "-            //Perhaps generate mangled names based on extension in future", "-            results[ i ] = \"lib\" + i;", "-        }", "-", "-        return results;", "+    private static ArrayList toExtensions( final ArrayList adapters )", "+        throws TaskException", "+        final ArrayList results = new ArrayList();", "+", "+        final int size = adapters.size();", "+        for( int i = 0; i < size; i++ )", "+            final ExtensionAdapter adapter =", "+                (ExtensionAdapter)adapters.get( i );", "+            final Extension extension = adapter.toExtension();", "+            results.add( extension );", "+", "+        return results;"]}]}