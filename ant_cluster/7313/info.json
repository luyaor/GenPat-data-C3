{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b20dfc12be7f1b1947e14d1ac92dd4fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8808b848ae10ed52539fa6f5c65701aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "3c6661202656fab045e5becd7f0b2e3f4cba293d", "commitAfterChange": "c32873b51961cb99f47b4ae6da2922b7b46a6f89", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void run(String classname, Vector args) throws BuildException", "signatureAfterChange": "     protected void run(String classname, Vector args) throws BuildException", "diff": ["-        if (cmdl.getClasspath() != null) {", "-            cmdj.createClasspath(project).append(cmdl.getClasspath());", "+        if (cmdl.getClasspath() != null || classpathReferences.size() > 0) {", "+            Path p = cmdj.createClasspath(project);", "+            if (cmdl.getClasspath() != null) {", "+                p.append(cmdl.getClasspath());", "+            }", "+            addReferencesToPath(classpathReferences, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a63c4395b17f2b9b9b8180551e9b0841", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "b0078a54717eaf1f896ce3094adeed0540f6bd8e", "commitAfterChange": "7527ef19625d2d77806b9ce8262b49e667bb7101", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(", "-                \"name, file or resource attribute of \"", "-                + getTaskName() + \" is undefined\", getLocation());", "-        }", "+            //we arent fully defined yet. this is an error unless", "+            //we are in an antlib, in which case the resource name is determined", "+            //automatically.", "+            //NB: URIs in the ant core package will be \"\" at this point.", "+            if (getURI()!=null && getURI().startsWith(MagicNames.ANTLIB_PREFIX)) {", "+                //convert the URI to a resource", "+                String uri1 = getURI();", "+                setResource(makeResourceFromURI(uri1));", "+            } else {", "+                    throw new BuildException(", "+                        \"name, file or resource attribute of \"", "+                        + getTaskName() + \" is undefined\", getLocation());", "+                }", "+            }"]}]}