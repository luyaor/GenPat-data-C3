{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de87bd4382b6402197feec60585df631", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4430cd0d0124f88b5c376a8c4971bf0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "2b0c95d418b4f3646a6e8479123efd8b95147674", "commitAfterChange": "e142e5addaeb50f2c2a7c71c29747150b9fad463", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            target.lastModified() > generatedFile.lastModified();", "+            targetFile.lastModified() > generatedFile.lastModified();", "-                log(\"Compiling \" + target + \" as it is newer than \"", "+                log(\"Compiling \" + targetFile + \" as it is newer than \"", "-                log(\"Compiling \" + target + \" as \" + superGrammar", "+                log(\"Compiling \" + targetFile + \" as \" + superGrammar", "-            commandline.createArgument().setValue(target.toString());", "+            commandline.createArgument().setValue(targetFile.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4956df0e9278f7f47062690f1510dbc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "2b0c95d418b4f3646a6e8479123efd8b95147674", "commitAfterChange": "e142e5addaeb50f2c2a7c71c29747150b9fad463", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void validateAttributes() throws BuildException", "signatureAfterChange": "      private void validateAttributes() throws BuildException", "diff": ["-        if (target == null || !target.isFile()) {", "-            throw new BuildException(\"Invalid target: \" + target);", "+        if (targetFile == null || !targetFile.isFile()) {", "+            throw new BuildException(\"Invalid target: \" + targetFile);", "-            setOutputdirectory(new File(target.getParent()));", "+            setOutputdirectory(new File(targetFile.getParent()));"]}]}