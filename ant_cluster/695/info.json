{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33f84bfaf1c86c13ab19ec8eb2a3f77c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04226d2de5d202c642102b17a5ff818d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/store/DefaultPropertyStore.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object getProperty( String name )         throws Exception", "signatureAfterChange": "     public Object getProperty( final String name )         throws TaskException", "diff": ["-    public Object getProperty( String name )", "-        throws Exception", "+    public Object getProperty( final String name )", "+        throws TaskException", "-        if( value == null && m_parent != null )", "+        if( value != null )", "-            value = m_parent.getProperty( name );", "+            return value;", "-        return value;", "+        if( m_parent != null )", "+        {", "+            return m_parent.getProperty( name );", "+        }", "+", "+        final String message = REZ.getString( \"unknown-prop.error\", name );", "+        throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a30470e73007e9f941d9e726a0db1d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/vfile/selectors/NameFileSelector.java", "commitBeforeChange": "6ab3e313864e62f2c77a52d8c636daa20a7dfcb8", "commitAfterChange": "bc7c6eddecf32bf0f73fda243e4f399ed8c0c32e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected String getNameForMatch( final String path,                                       final FileObject file )", "signatureAfterChange": "     protected String getNameForMatch( final String path,                                       final FileObject file )         throws TaskException", "diff": ["+        throws TaskException", "+        if( path == null )", "+        {", "+            final String message = REZ.getString( \"namefileselector.no-path.error\" );", "+            throw new TaskException( message );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a23a6082e853a42ff964a757e62ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void normalisePath( final StringBuffer path ) throws FileSystemException", "signatureAfterChange": "     public void normalisePath( final StringBuffer path )         throws FileSystemException", "diff": ["-    public void normalisePath( final StringBuffer path ) throws FileSystemException", "+    public void normalisePath( final StringBuffer path )", "+        throws FileSystemException", "-                if( startElem > startFirstElem )", "+                if( startElem == startFirstElem )", "-                    int pos = startElem - 2;", "-                    for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos -- )", "-                    {", "-                    }", "-                    startElem = pos + 1;", "+                    // Previous element is missing", "+                    final String message = REZ.getString( \"invalid-relative-path.error\" );", "+                    throw new FileSystemException( message );", "+", "+                // Find start of previous element", "+                int pos = startElem - 2;", "+                for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos-- )", "+                {", "+                }", "+                startElem = pos + 1;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7047d4a342bef20c05341e2fd72170e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/conditions/NotCondition.java", "commitBeforeChange": "7b8efdc41ecb858d66d1e1e27cc4421e4f211d01", "commitAfterChange": "90933557a169db41cbbc635d29d5d68f4a95d94a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void set( final Condition condition )", "signatureAfterChange": "     public void add( final Condition condition )         throws TaskException", "diff": ["-    public void set( final Condition condition )", "+    public void add( final Condition condition )", "+        throws TaskException", "+        if( m_condition != null )", "+        {", "+            final String message = REZ.getString( \"not.too-many-conditions.error\" );", "+            throw new TaskException( message );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0702cf90ede972a8fe23340ff7ca2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/type/DefaultTypeFactory.java", "commitBeforeChange": "0dcd7b3f686790a9f7e5e85ffa6d588854641bb2", "commitAfterChange": "b6e062af22ec64196ed8d8c65ff5d8b7c98689ee", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object create( final String name )         throws TypeException", "signatureAfterChange": "     public Object create( final String name )         throws TypeException", "diff": ["+        // Determine the name of the class to instantiate", "+        if( null == className )", "+        {", "+            final String message = REZ.getString( \"no-mapping.error\", name );", "+            throw new TypeException( message );", "+        }", "+", "+        // Instantiate the object"]}]}