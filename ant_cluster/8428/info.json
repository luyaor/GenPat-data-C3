{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "348f15733cc053e52f8d55e39cc55eaa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e82e5f89358f1505e6f102e2026bcb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "5909b77dc45210c94075bceb1f5fda411213d50f", "commitAfterChange": "14ea08b49e98e020cde9265cc199b40a42990337", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Properties getProperties()", "signatureAfterChange": "     public Properties getProperties()", "diff": ["-        Set names = null;", "-        Project prj = getProject();", "-        Hashtable props =", "-            prj == null ? getAllSystemProperties() : prj.getProperties();", "+        Hashtable props = getEffectiveProperties();", "+        Set names = getPropertyNames(props);", "-        //quick & dirty, to make nested mapped p-sets work:", "-        for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "-            PropertySet set = (PropertySet) e.nextElement();", "-            props.putAll(set.getProperties());", "-        }", "-", "-        if (getDynamic() || cachedNames == null) {", "-            names = new HashSet();", "-            addPropertyNames(names, props);", "-            // Add this PropertySet's nested PropertySets' property names.", "-            for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "-                PropertySet set = (PropertySet) e.nextElement();", "-                names.addAll(set.getProperties().keySet());", "-            }", "-            if (negate) {", "-                //make a copy...", "-                HashSet complement = new HashSet(props.keySet());", "-                complement.removeAll(names);", "-                names = complement;", "-            }", "-            if (!getDynamic()) {", "-                cachedNames = names;", "-            }", "-        } else {", "-            names = cachedNames;", "-        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d2df09474a8b5ecf912a4d47fd21fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "ce89090b466c00d8a218ff572a4cfe92eebc9d96", "commitAfterChange": "996e16066a9450f18df34582a163957d365bcee1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public Properties getProperties()", "signatureAfterChange": "      public Properties getProperties()", "diff": ["-        Vector names = null;", "+        Set names = null;", "-            names = new Vector(); // :TODO: should be a Set!", "+            names = new HashSet();", "-", "+            // Add this PropertySet's nested PropertySets' property names.", "+            for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "+                PropertySet set = (PropertySet) e.nextElement();", "+                names.addAll(set.getProperties().keySet());", "+            }", "+            if (negate) {", "+                //make a copy...", "+                HashSet complement = new HashSet(props.keySet());", "+                complement.removeAll(names);", "+                names = complement;", "+            }", "-        for (Enumeration e = names.elements(); e.hasMoreElements();) {", "-            String name = (String) e.nextElement();", "+        for (Iterator iter = names.iterator(); iter.hasNext();) {", "+            String name = (String) iter.next();"]}]}