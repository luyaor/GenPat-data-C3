{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44fd43a99a43a0252a48ca01a6caebee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f4debb537ae76dd322cb1ab7eb304a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "1620dd543b86a7edd25522b6ff8601f8e294fcbb", "commitAfterChange": "9a7f0056b4528f47a119c02b36242f21e96e9346", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "diff": ["-                        } catch (InstantiationException ie) {", "-                            throw new BuildException(ie);", "-                        }", "-                    }", "-                };", "-", "-        // ValidatedFileAttributes have their own helper class", "-        } else if (ValidatedFileAttribute.class.isAssignableFrom(arg)) {", "-            return new AttributeSetter() {", "-                    public void set(Project p, Object parent, String value)", "-                        throws InvocationTargetException, IllegalAccessException, BuildException {", "-                        try {", "-                            ValidatedFileAttribute[] vfa = {", "-                                (ValidatedFileAttribute) arg.newInstance()", "-                            };", "-                            File f = p.resolveFile(value);", "-                            vfa[0].setFile(f);", "-                            m.invoke(parent, vfa);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc712841d4a45bce4952b8503afe7409", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Reflector.java", "commitBeforeChange": "2cf032e2ec39726aed4c77622b59eadd3828072e", "commitAfterChange": "2e31f97888f11646bebb8939fed00c37c4c863e2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void addConvertingSetter(final Method m, String propertyName,                                            final Converter converter,                                            final Class type)", "signatureAfterChange": "     private void addConvertingSetter(Method m, int depth,                                      String propertyName, Converter converter)", "diff": ["-    private void addConvertingSetter(final Method m, String propertyName,", "-                                           final Converter converter,", "-                                           final Class type) {", "-        attributeSetters.put(propertyName.toLowerCase(),", "-            new AttributeSetter() {", "-                public void set(Object obj, String value)", "-                     throws InvocationTargetException, ExecutionException,", "-                    IllegalAccessException {", "-                    Object convertedValue = converter.convert(value, type);", "-                    m.invoke(obj, new Object[]{convertedValue});", "-                }", "-            });", "+    private void addConvertingSetter(Method m, int depth,", "+                                     String propertyName, Converter converter) {", "+        addAttributeSetter(propertyName, ", "+            new AttributeSetter(m, depth, converter));"]}]}