{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aadad1204c88e5df285eff19455685cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a442216051428cfcb45ffde7cc6f02f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "3ce64dd501a7e5dfd84967399cc4c68c643de810", "commitAfterChange": "b941f2ef443cbbaec2b995b3c34958067c4979c3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-     */", "-    public void execute() {", "-        ResourceCollection c = validate();", "-        if (c == null) {", "-            return;", "-        }", "-        // Do nothing if no resources (including nested text)", "-        if (c.size() < 1 && header == null && footer == null) {", "-            log(\"No existing resources and no nested text, doing nothing\",", "-                Project.MSG_INFO);", "-            return;", "-        }", "-        if (binary) {", "-            binaryCat(c);", "-        } else {", "-            cat(c);", "-        }", "-    }", "+     */", "+    public void execute() {", "+        validate();", "+        if (binary && destinationFile == null) {", "+            throw new BuildException(", "+                \"destfile attribute is required for binary concatenation\");", "+        }", "+        ResourceCollection c = getResources();", "+        if (isUpToDate(c)) {", "+            log(destinationFile + \" is up-to-date.\", Project.MSG_VERBOSE);", "+            return;", "+        }", "+        if (c.size() == 0) {", "+            return;", "+        }", "+        OutputStream out;", "+        if (destinationFile == null) {", "+            // Log using WARN so it displays in 'quiet' mode.", "+            out = new LogOutputStream(this, Project.MSG_WARN);", "+        } else {", "+            try {", "+                // ensure that the parent dir of dest file exists", "+                File parent = destinationFile.getParentFile();", "+                if (!parent.exists()) {", "+                    parent.mkdirs();", "+                }", "+                // use getPath() for pre-JDK 1.4 compatibility:", "+                out = new FileOutputStream(destinationFile.getPath(), append);", "+            } catch (Throwable t) {", "+                throw new BuildException(\"Unable to open \"", "+                    + destinationFile + \" for writing\", t);", "+            }", "+        }", "+        InputStream catStream;", "+        try {", "+            catStream = new ConcatResource(c).getInputStream();", "+        } catch (IOException e) {", "+            throw new BuildException(\"error getting concatenated resource content\", e);", "+        }", "+        pump(catStream, out);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c860c20cedb6119c999b3b77720f4182", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "3ae69e82c33e0e03941387a3506561accc2697d3", "commitAfterChange": "1e962d0d6d74a53709e9cff40a0c6422d27ec3bf", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        if (binary && destinationFile == null) {", "+        if (binary && dest == null) {", "-                \"destfile attribute is required for binary concatenation\");", "+                \"dest|destfile attribute is required for binary concatenation\");", "-            log(destinationFile + \" is up-to-date.\", Project.MSG_VERBOSE);", "+            log(dest + \" is up-to-date.\", Project.MSG_VERBOSE);", "-        OutputStream out;", "-        if (destinationFile == null) {", "-            // Log using WARN so it displays in 'quiet' mode.", "-            out = new LogOutputStream(this, Project.MSG_WARN);", "-        } else {", "-            try {", "-                // ensure that the parent dir of dest file exists", "-                File parent = destinationFile.getParentFile();", "-                if (!parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-                // use getPath() for pre-JDK 1.4 compatibility:", "-                out = new FileOutputStream(destinationFile.getPath(), append);", "-            } catch (Throwable t) {", "-                throw new BuildException(\"Unable to open \"", "-                    + destinationFile + \" for writing\", t);", "-            }", "-        }", "-        InputStream catStream;", "-            catStream = new ConcatResource(c).getInputStream();", "+            //most of these are defaulted because the concat-as-a-resource code hijacks a lot:", "+            ResourceUtils.copyResource(new ConcatResource(c), dest == null ? new LogOutputResource(", "+                    this, Project.MSG_WARN) : dest, null, null, true, false, append, null, null,", "+                    getProject());", "-            throw new BuildException(\"error getting concatenated resource content\", e);", "+            throw new BuildException(\"error concatenating content to \" + dest, e);", "-        pump(catStream, out);"]}]}