{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f09613210ffc1dd52f0ca144d51263b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ccac6e08de3fe9d211430554bff2e0e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "64d951bcfa8ee32137eaa6ee2d5f2fce98e6b64d", "commitAfterChange": "18b9849780a2470442ed5e3c402fff7b6a104ca9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static CompilerAdapter getCompiler( String compilerType, AbstractTask task )         throws TaskException", "signatureAfterChange": "     public static CompilerAdapter getCompiler( String compilerType, TaskContext context )         throws TaskException", "diff": ["-    public static CompilerAdapter getCompiler( String compilerType, AbstractTask task )", "+    public static CompilerAdapter getCompiler( String compilerType, TaskContext context )", "+        throws TaskException", "+    {", "+        final CompilerAdapter adapter = createAdapter( compilerType );", "+        adapter.setTaskContext( context );", "+        return adapter;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bd32bc65c5975080cbf8e7917b8f2b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jsp/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "64d951bcfa8ee32137eaa6ee2d5f2fce98e6b64d", "commitAfterChange": "18b9849780a2470442ed5e3c402fff7b6a104ca9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static CompilerAdapter getCompiler( String compilerType, AbstractTask task )         throws TaskException", "signatureAfterChange": "     public static CompilerAdapter getCompiler( String compilerType, TaskContext context )         throws TaskException", "diff": ["-    public static CompilerAdapter getCompiler( String compilerType, AbstractTask task )", "+    public static CompilerAdapter getCompiler( String compilerType, TaskContext context )", "+        throws TaskException", "+    {", "+        final CompilerAdapter adapter = createAdapter( compilerType );", "+        adapter.setTaskContext( context );", "+        return adapter;", "+    }"]}]}