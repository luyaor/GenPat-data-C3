{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2b580326694929039781ce75aac0992", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f795ee416e1d6bf5f6e4dc49f39bc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void putNextEntry(ZipEntry ze) throws IOException", "signatureAfterChange": "     public void putNextEntry(ZipEntry ze) throws IOException", "diff": ["-        if (entry.getMethod() == STORED) {", "+        // Size/CRC not required if RandomAccessFile is used", "+        if (entry.getMethod() == STORED && raf == null) {", "-                throw new ZipException(\"uncompressed size is required for STORED method\");", "+                throw new ZipException(\"uncompressed size is required for\"", "+                                       + \" STORED method when not writing to a\"", "+                                       + \" file\");", "-                throw new ZipException(\"crc checksum is required for STORED method\");", "+                throw new ZipException(\"crc checksum is required for STORED\"", "+                                       + \" method when not writing to a file\");", "-        } else if (hasCompressionLevelChanged) {", "+        } ", "+", "+        if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa581a06fb8b9294a7cb3b7eda608fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "75110026aa35fe98da6c696598361977c3c46c48", "commitAfterChange": "f47e4095c872219cfb2054556307c5c12cbb2b81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void validate() throws BuildException", "signatureAfterChange": "      private void validate() throws BuildException", "diff": ["-            throw new BuildException(\"srcdir attribute must be set!\");", "+            throw new BuildException(FIXCRLF_ERROR +\"srcdir attribute must be set!\");", "-            throw new BuildException(\"srcdir does not exist!\");", "+            throw new BuildException(FIXCRLF_ERROR +\"srcdir does not exist: '\"+srcDir+\"'\");", "-            throw new BuildException(\"srcdir is not a directory!\");", "+            throw new BuildException(FIXCRLF_ERROR +\"srcdir is not a directory: '\"+srcDir+\"'\");", "-                throw new BuildException(\"destdir does not exist!\");", "+                throw new BuildException(FIXCRLF_ERROR +\"destdir does not exist: '\" + destDir + \"'\");", "-                throw new BuildException(\"destdir is not a directory!\");", "+                throw new BuildException(FIXCRLF_ERROR +\"destdir is not a directory: '\" + destDir + \"'\");"]}]}