{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c8d9b4e9ad2b0898907959aa5e1de67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3698e17655bcd3dc03eea345185ef1b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbcHelper.java", "commitBeforeChange": "205151486acb02a98f17a73c8367302d53fb56b8", "commitAfterChange": "34b083983d52d1bc7eaf31b312924fdf83a76b07", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void regenerateSupportClasses(File descriptorFile)", "signatureAfterChange": "     private void regenerateSupportClasses(File descriptorFile) throws Exception", "diff": ["-    private void regenerateSupportClasses(File descriptorFile) {", "-        Project project = ejbcTask.getProject();", "-        String javaHome = System.getProperty(\"java.home\");", "+    private void regenerateSupportClasses(File descriptorFile) throws Exception {", "+        // create a Java task to do the rebuild", "-        String compiler = project.getProperty(\"build.compiler\");", "-        String[] args = null;", "+        String[] args = {\"-noexit\",", "+                         \"-keepgenerated\",", "+                         \"-d\", generatedFilesDirectory.getPath(),", "+                         descriptorFile.getPath()};", "-        if (compiler != null && compiler.equalsIgnoreCase(\"jikes\")) {", "-            Path execClassPath = new Path(project);", "-            if (Project.getJavaVersion() == Project.JAVA_1_1) {", "-                execClassPath.addExisting(new Path(project, System.getProperty(\"java.home\")", "-                                          + \"/lib/classes.zip\"));", "-            } else {", "-                execClassPath.addExisting(new Path(project,", "-                                                System.getProperty(\"java.home\")", "-                                                + \"/lib/rt.jar\"));", "-                // Just keep the old version as well and let addExisting", "-                // sort it out.", "-                execClassPath.addExisting(new Path(project,", "-                                                System.getProperty(\"java.home\")", "-                                                + \"/jre/lib/rt.jar\"));", "-            }", "-            execClassPath.append(classpath);", "-    ", "-            args = new String[] {\"-noexit\",", "-                                 \"-keepgenerated\",", "-                                 \"-compiler\", \"Jikes\",", "-                                 \"-d\", generatedFilesDirectory.getPath(),", "-                                 \"-classpath\", execClassPath.toString(), ", "-                                 descriptorFile.getPath()};", "-        }", "-        else {            ", "-            args = new String[]{\"-noexit\",", "-                                \"-keepgenerated\",", "-                                \"-d\", generatedFilesDirectory.getPath(),", "-                                \"-classpath\", classpath.toString(), ", "-                                descriptorFile.getPath()};", "-        }", "-                                       ", "-            e.printStackTrace();", "-            throw new BuildException(e);", "+            // run with no exit for better reporting", "+            String[] newArgs = {\"-keepgenerated\",", "+                         \"-d\", generatedFilesDirectory.getPath(),", "+                         descriptorFile.getPath()};", "+            weblogic.ejbc.main(newArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcb214d184a7864e5cfe3c90e1dc710a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbcHelper.java", "commitBeforeChange": "403c32e5c5322f65e184f6d21496d0295d74f6e1", "commitAfterChange": "655df7f9e198a141defc9dcfb45f7f14cd7749f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void regenerateSupportClasses(File descriptorFile) throws Exception", "signatureAfterChange": "     private void regenerateSupportClasses(File descriptorFile)", "diff": ["-    private void regenerateSupportClasses(File descriptorFile) throws Exception {", "-        // create a Java task to do the rebuild", "+    private void regenerateSupportClasses(File descriptorFile) {", "+        Project project = ejbcTask.getProject();", "+        String javaHome = System.getProperty(\"java.home\");", "-        String[] args = {\"-noexit\",", "-                         \"-keepgenerated\",", "-                         \"-d\", generatedFilesDirectory.getPath(),", "-                         descriptorFile.getPath()};", "+        String compiler = project.getProperty(\"build.compiler\");", "+        String[] args = null;", "+        if (compiler.equalsIgnoreCase(\"jikes\")) {", "+            Path execClassPath = new Path(project);", "+            if (Project.getJavaVersion() == Project.JAVA_1_1) {", "+                execClassPath.addExisting(new Path(project, System.getProperty(\"java.home\")", "+                                          + \"/lib/classes.zip\"));", "+            } else {", "+                execClassPath.addExisting(new Path(project,", "+                                                System.getProperty(\"java.home\")", "+                                                + \"/lib/rt.jar\"));", "+                // Just keep the old version as well and let addExisting", "+                // sort it out.", "+                execClassPath.addExisting(new Path(project,", "+                                                System.getProperty(\"java.home\")", "+                                                + \"/jre/lib/rt.jar\"));", "+            }", "+            execClassPath.append(classpath);", "+    ", "+            args = new String[] {\"-noexit\",", "+                                 \"-keepgenerated\",", "+                                 \"-compiler\", \"Jikes\",", "+                                 \"-d\", generatedFilesDirectory.getPath(),", "+                                 \"-classpath\", execClassPath.toString(), ", "+                                 descriptorFile.getPath()};", "+        }", "+        else {            ", "+            args = new String[]{\"-noexit\",", "+                                \"-keepgenerated\",", "+                                \"-d\", generatedFilesDirectory.getPath(),", "+                                \"-classpath\", classpath.toString(), ", "+                                descriptorFile.getPath()};", "+        }", "+                                       ", "-            // run with no exit for better reporting", "-            String[] newArgs = {\"-keepgenerated\",", "-                         \"-d\", generatedFilesDirectory.getPath(),", "-                         descriptorFile.getPath()};", "-            weblogic.ejbc.main(newArgs);", "+            e.printStackTrace();", "+            throw new BuildException(e);"]}]}