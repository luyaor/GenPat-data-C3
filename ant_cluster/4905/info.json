{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b99339ebbd0eaa5e62d45f769865a979", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eecc40e8c2f06e186cf19933b58469a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "a89ffe281a56c3c51e376d8927fe300423b43bc7", "commitAfterChange": "f9c551b16e64afb9541e8e5507b9ac1a8c2eb436", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void copyFile(File sourceFile, File destFile,                           FilterSetCollection filters, boolean overwrite,                           boolean preserveLastModified, String encoding)         throws IOException", "signatureAfterChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String encoding, Project project)         throws IOException", "diff": ["-    public void copyFile(File sourceFile, File destFile, ", "-                         FilterSetCollection filters, boolean overwrite, ", "-        ", "+     */", "+    public void copyFile(File sourceFile, File destFile,", "+                         FilterSetCollection filters, Vector filterChains,", "+                         boolean overwrite, boolean preserveLastModified,", "+                         String encoding, Project project)", "+        throws IOException {", "+", "-            if (filters != null && filters.hasFilters()) {", "+            final boolean filterSetsAvailable = (filters != null", "+                                                 && filters.hasFilters());", "+            final boolean filterChainsAvailable = (filterChains != null", "+                                                   && filterChains.size() > 0);", "+", "+            if (filterSetsAvailable || filterChainsAvailable) {", "-                    in = new BufferedReader(new InputStreamReader(new FileInputStream(sourceFile), encoding));", "-                    out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(destFile), encoding));", "+                    in = new BufferedReader(new InputStreamReader(", "+                            new FileInputStream(sourceFile), encoding));", "+                    out = new BufferedWriter(new OutputStreamWriter(", "+                            new FileOutputStream(destFile), encoding));", "+                }", "+", "+                if (filterChainsAvailable) {", "+                    ChainReaderHelper crh = new ChainReaderHelper();", "+                    crh.setBufferSize(8192);", "+                    crh.setPrimaryReader(in);", "+                    crh.setFilterChains(filterChains);", "+                    crh.setProject(project);", "+                    Reader rdr = crh.getAssembledReader();", "+                    in = new BufferedReader(rdr);", "-                        newline = filters.replaceTokens(line);", "+                        if (filterSetsAvailable) {", "+                            newline = filters.replaceTokens(line);", "+                        } else {", "+                            newline = line;", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1ed1ec13c26f121661b04b9b147c8bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/PropertyFileCLITest.java", "commitBeforeChange": "3f4cb68defbf5f5b4c642c2e5cebded4172707d1", "commitAfterChange": "fb2d2b20ba111990c473116f488661b5dd7c86c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testPropertyResolution() throws Exception", "signatureAfterChange": "      public void testPropertyResolution() throws Exception", "diff": ["-        File props = File.createTempFile(\"propertyfilecli\", \".properties\");", "-        props.deleteOnExit();", "-        FileWriter fw = new FileWriter(props);", "-        fw.write(\"w=world\\nmessage=Hello, ${w}\\n\");", "-        fw.close();", "-        File build = File.createTempFile(\"propertyfilecli\", \".xml\");", "-        build.deleteOnExit();", "-        fw = new FileWriter(build);", "-        fw.write(\"<project><echo>${message}</echo></project>\");", "-        fw.close();", "-        PrintStream sysOut = System.out;", "-        StringBuffer sb = new StringBuffer();", "+        FileUtils fu = FileUtils.getFileUtils();", "+        File props = fu.createTempFile(\"propertyfilecli\", \".properties\",", "+                                       null, true, true);", "+        File build = fu.createTempFile(\"propertyfilecli\", \".xml\", null, true,", "+                                       true);", "+        File log = fu.createTempFile(\"propertyfilecli\", \".log\", null, true,", "+                                     true);", "+        FileWriter fw = null;", "+        FileReader fr = null;", "-            PrintStream out =", "-                new PrintStream(new BuildFileTest.AntOutputStream(sb));", "-            System.setOut(out);", "+            fw = new FileWriter(props);", "+            fw.write(\"w=world\\nmessage=Hello, ${w}\\n\");", "+            fw.close();", "+            fw = new FileWriter(build);", "+            fw.write(\"<project><echo>${message}</echo></project>\");", "+            fw.close();", "+            fw = null;", "-                    \"-f\", build.getAbsolutePath()", "+                    \"-f\", build.getAbsolutePath(),", "+                    \"-l\", log.getAbsolutePath()", "+            String l = FileUtils.safeReadFully(fr = new FileReader(log));", "+            assertTrue(\"expected log to contain 'Hello, world' but was \" + l,", "+                       l.indexOf(\"Hello, world\") > -1);", "-            System.setOut(sysOut);", "+            FileUtils.close(fw);", "+            FileUtils.close(fr);", "-        String log = sb.toString();", "-        assertTrue(\"expected log to contain 'Hello, world' but was \" + log,", "-                   log.indexOf(\"Hello, world\") > -1);"]}]}