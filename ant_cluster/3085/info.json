{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da4f65c0054c7fdc354ddd213f8b817a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d1ec7002989e2b0ff74acdafc7b265", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "080101731f642239c2807cdc34dd74754a74e7a6", "commitAfterChange": "abf794a6a572d1ba8c88a5c42a6bb377d238a95f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected ClassLoader getClassLoaderFromJar(File classjar) throws IOException", "signatureAfterChange": "     protected ClassLoader getClassLoaderFromJar(File classjar) throws IOException", "diff": ["-        URLClassLoader loader;", "-        URL[] aURL = new URL[1];", "-", "-        aURL[0] = new URL(\"file\",\"\",0,classjar.getAbsolutePath());", "-        loader = new URLClassLoader(aURL);", "-        return loader;", "+        Path lookupPath = new Path(getTask().getProject());", "+        lookupPath.setLocation(classjar);", "+        ", "+        Path classpath = getClasspath();", "+        if (classpath != null) {", "+            lookupPath.append(classpath);", "+        }", "+        ", "+        return new AntClassLoader(getTask().getProject(), lookupPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "875818a026a35da04df15e7afc2fe519", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "bd2c472af4fc8428f494cfd929dfd098100ceb41", "commitAfterChange": "64c4989ed4575a005c66a87a194791cf15ce27f4", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 21, "signatureBeforeChange": "      protected ClassLoader getClassLoaderForBuild()", "signatureAfterChange": "      protected ClassLoader getClassLoaderForBuild()", "diff": ["-        // only generate a URLClassLoader if we have a classpath", "-        if (classpath == null) {", "+        Path combinedClasspath = getCombinedClasspath();", "+        ", "+        // only generate a new ClassLoader if we have a classpath", "+        if (combinedClasspath == null) {", "-            classpathLoader = new AntClassLoader(getTask().getProject(), classpath);", "+            classpathLoader = new AntClassLoader(getTask().getProject(), combinedClasspath);"]}]}