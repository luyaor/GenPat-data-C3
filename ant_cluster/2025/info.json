{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f2ba2d496154853cf0d8d2419acd504", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014d30b9be68d3c4d4ad7dbf1cd7ce47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "faba017869b796b137c9147c00a00cd11dd94f1e", "commitAfterChange": "2c68e6ab607fa6a70e414eee76d56afe00c29c31", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void executeTargets(Vector targetNames) throws BuildException", "signatureAfterChange": "     public void executeTargets(Vector names) throws BuildException", "diff": ["-    public void executeTargets(Vector targetNames) throws BuildException {", "-                classname = (keepGoingMode)", "-                    ? KeepGoingExecutor.class.getName()", "-                    : DefaultExecutor.class.getName();", "-            if (o != null) {", "-                addReference(\"ant.executor\", o);", "-        if (o == null) {", "-            throw new BuildException(\"Unable to obtain a Target Executor instance.\");", "-        } else {", "-            String[] targetNameArray = (String[]) (targetNames.toArray(", "-                new String[targetNames.size()]));", "-            ((Executor) o).executeTargets(this, targetNameArray);", "-        }", "+     */", "+    public void executeTargets(Vector names) throws BuildException {", "+        getExecutor().executeTargets(this,", "+            (String[]) (names.toArray(new String[names.size()])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54f4088518b1227341d8f26d2a135f4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/monitor/org/apache/ant/antlib/monitor/MonitorAspect.java", "commitBeforeChange": "26d9c6536e7e605b92a6e4b20eb0cd25e116a689", "commitAfterChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public MonitorAspect()", "signatureAfterChange": "     public MonitorAspect()", "diff": ["-    private static long lastMessageTime;", "+     */", "-        if (monitorLog == null) {", "-            try {", "-                monitorLog", "-                    = new PrintStream(new FileOutputStream(\"monitor.log\"));", "-                monitorLog.println(\"Logging started at \" + new Date());", "-                lastMessageTime = System.currentTimeMillis();", "-            } catch (IOException e) {", "-                log(\"Unable to open monitor log\", MessageLevel.MSG_WARN);", "+        synchronized (MonitorAspect.class) {", "+            if (monitorLog == null) {", "+                try {", "+                    monitorLog", "+                        = new PrintStream(new FileOutputStream(\"monitor.log\"));", "+                    monitorLog.println(\"Logging started at \" + new Date());", "+                } catch (IOException e) {", "+                    log(\"Unable to open monitor log\", MessageLevel.MSG_WARN);", "+                }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e817b5f458f7b5b2045d0faa6ea19330", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "39e82431e7d1e46a8b4d7f8b20babddcc53281db", "commitAfterChange": "3b3a4cd29fa515153b8ed025398ccb6da474257e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int executeJava() throws BuildException", "signatureAfterChange": "     public int executeJava() throws BuildException", "diff": ["-", "+        if (spawn && !fork) {", "+            throw new BuildException(\"Cannot spawn a java process in non-forked mode.\"", "+                                     + \" Please set fork='true'. \");", "+        }", "+        if (spawn && incompatibleWithSpawn) {", "+            getProject().log(\"spawn does not allow attributes related to input, \"", "+            + \"output, error, result\", Project.MSG_ERR);", "+            getProject().log(\"spawn does not also not allow timeout\", Project.MSG_ERR);", "+            throw new BuildException(\"You have used an attribute which is \"", "+            + \"not compatible with spawn\");", "+        }", "-                return run(cmdl.getCommandline());", "+                if (!spawn) {", "+                    return run(cmdl.getCommandline());", "+                } else {", "+                    spawn(cmdl.getCommandline());", "+                    return 0;", "+                }", "+    }"]}]}