{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "626d4ed29155630629c2ed0b6cca146a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34dbd1ebcdeec249d21244b74ddbcfdd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javah/JavahAdapterFactory.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static JavahAdapter resolveClassName(String className)         throws BuildException", "signatureAfterChange": "     private static JavahAdapter resolveClassName(String className)             throws BuildException", "diff": ["-        throws BuildException {", "-        try {", "-            Class c = Class.forName(className);", "-            Object o = c.newInstance();", "-            return (JavahAdapter) o;", "-        } catch (ClassNotFoundException cnfe) {", "-            throw new BuildException(\"Can't load \" + className, cnfe);", "-        } catch (ClassCastException cce) {", "-            throw new BuildException(className ", "-                                     + \" is not a Javah adapter\", cce);", "-        } catch (Throwable t) {", "-            // for all other possibilities", "-            throw new BuildException(className + \" caused an interesting \"", "-                                     + \"exception.\", t);", "-        }", "+            throws BuildException {", "+        return (JavahAdapter) ClasspathUtils.newInstance(className,", "+                JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eda21d974ac64feeadf77dd9941b3de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/Native2AsciiAdapterFactory.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static Native2AsciiAdapter resolveClassName(String className)         throws BuildException", "signatureAfterChange": "     private static Native2AsciiAdapter resolveClassName(String className)         throws BuildException", "diff": ["-        throws BuildException {", "-        try {", "-            Class c = Class.forName(className);", "-            Object o = c.newInstance();", "-            return (Native2AsciiAdapter) o;", "-        } catch (ClassNotFoundException cnfe) {", "-            throw new BuildException(\"Can't load \" + className, cnfe);", "-        } catch (ClassCastException cce) {", "-            throw new BuildException(className ", "-                                     + \" is not a Native2Ascii adapter\", cce);", "-        } catch (Throwable t) {", "-            // for all other possibilities", "-            throw new BuildException(className + \" caused an interesting \"", "-                                     + \"exception.\", t);", "-        }", "+        throws BuildException ", "+    {", "+        return (Native2AsciiAdapter) ClasspathUtils.newInstance(className,", "+            Native2AsciiAdapterFactory.class.getClassLoader(), ", "+            Native2AsciiAdapter.class);"]}]}