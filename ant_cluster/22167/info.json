{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3efae8e0f98ea35dc8e4403283f13b3c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b169751a3b9265b0580b1f71ed527c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public File getSource()", "signatureAfterChange": "         public File getSource()", "diff": ["-                    Vector files = new Vector();", "+                    ArrayList files = new ArrayList();", "-                            files.addElement( f );", "+                            files.add( f );", "-                    this.source = (File)files.elementAt( x );", "+                    this.source = (File)files.get( x );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0716d70ab51c971d7830b5d4f6d902f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f735f5f44df9fa52266e7b8b7f2741c2b7560d22", "commitAfterChange": "400ba5d1981259cc07b41f08cd1b53f048f8ef52", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void makeRemoteDir( FTPClient ftp, String dir )         throws IOException, TaskException", "signatureAfterChange": "     protected void makeRemoteDir( FTPClient ftp, String dir )         throws IOException, TaskException", "diff": ["-        if( verbose )", "+        if( m_verbose )", "-            if( !( ignoreNoncriticalErrors && ( rc == 550 || rc == 553 || rc == 521 ) ) )", "+            if( !( m_ignoreNoncriticalErrors && ( rc == 550 || rc == 553 || rc == 521 ) ) )", "-            if( verbose )", "+            if( m_verbose )", "-            if( verbose )", "+            if( m_verbose )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bcb52ef9d5580f7db483cc5e8539269", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public int size()         throws TaskException", "signatureAfterChange": "     public int size()         throws TaskException", "diff": ["-        int size = getActualVMCommand().size() + javaCommand.size() + sysProperties.size();", "+        int size = getActualVMCommand().size() + m_javaCommand.size() + m_sysProperties.size();", "-        if( classpath != null && classpath.toString().trim().length() > 0 )", "+        if( m_classpath != null && m_classpath.toString().trim().length() > 0 )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df0892654c84e12e2aaf45ef30582ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTPTaskMirrorImpl.java", "commitBeforeChange": "01ca57a3170fe917f71d809eedfb4c3c059d38aa", "commitAfterChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void scan()", "signatureAfterChange": "         public void scan()", "diff": ["-            filesIncluded = new Vector();", "+            filesIncluded = new VectorSet();", "-            filesExcluded = new Vector();", "-            dirsIncluded = new Vector();", "+            filesExcluded = new VectorSet();", "+            dirsIncluded = new VectorSet();", "-            dirsExcluded = new Vector();", "+            dirsExcluded = new VectorSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8b9eef8d5b4295c9a65d1ae90399e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "commitAfterChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws TaskException", "signatureAfterChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws TaskException", "diff": ["-            if( emptyBehavior.equals( \"skip\" ) )", "+            if( m_emptyBehavior.equals( \"skip\" ) )", "-                final String message = \"Warning: skipping \" + archiveType + \" archive \" + zipFile +", "+                final String message = \"Warning: skipping \" + m_archiveType + \" archive \" + zipFile +", "-            else if( emptyBehavior.equals( \"fail\" ) )", "+            else if( m_emptyBehavior.equals( \"fail\" ) )", "-                throw new TaskException( \"Cannot create \" + archiveType + \" archive \" + zipFile +", "+                throw new TaskException( \"Cannot create \" + m_archiveType + \" archive \" + zipFile +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146253b1c2337f91da4461fcef2ffec9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testNestedCatalog()", "signatureAfterChange": "      public void testNestedCatalog()", "diff": ["-        DTDLocation dtd = new DTDLocation();", "+        ResourceLocation dtd = new ResourceLocation();", "-        DTDLocation entity = new DTDLocation();", "+        ResourceLocation entity = new ResourceLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "167db83a3d3e1c4b0e8eef12a7f3ee83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testContent()         throws Exception", "signatureAfterChange": "     public void testContent()         throws Exception", "diff": ["-        final ConfigTestStringProps test = new ConfigTestStringProps();", "+        final ConfigTestContent test = new ConfigTestContent();", "-        final ConfigTestStringProps expected = new ConfigTestStringProps();", "+        final ConfigTestContent expected = new ConfigTestContent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a79a1e4666a3acfe9a0c6f4eb2953da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testAttributeConvert()         throws Exception", "signatureAfterChange": "     public void testAttributeConvert()         throws Exception", "diff": ["-        final ConfigTestPrimConvert test = new ConfigTestPrimConvert();", "+        final ConfigTestAttributeConvert test = new ConfigTestAttributeConvert();", "-        final ConfigTestPrimConvert expected = new ConfigTestPrimConvert();", "+        final ConfigTestAttributeConvert expected = new ConfigTestAttributeConvert();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a7d8181b9a132a103e5f6907c7a1459", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testTypedAdderRole()         throws Exception", "signatureAfterChange": "     public void testTypedAdderRole()         throws Exception", "diff": ["-        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdderRole test = new ConfigTestTypedAdderRole();", "-        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdderRole expected = new ConfigTestTypedAdderRole();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d98624dbac18a4c45d552534b10ff5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testReferenceAttribute() throws Exception", "signatureAfterChange": "     public void testReferenceAttribute() throws Exception", "diff": ["-        final ConfigTestStringProps test = new ConfigTestStringProps();", "+        final ConfigTestReferenceAttribute test = new ConfigTestReferenceAttribute();", "-        final ConfigTestStringProps expected = new ConfigTestStringProps();", "+        final ConfigTestReferenceAttribute expected = new ConfigTestReferenceAttribute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f03c6845beb894c10896a57fee21a6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/manifest/Section.java", "commitBeforeChange": "0595affdf0cc45086d9055cf1e3cfb4e50bc2d76", "commitAfterChange": "78a7fbf3d909ad842f9e6f3e193a1017eb2f9cbb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public boolean equals( Object rhs )", "signatureAfterChange": "      public boolean equals( Object rhs )", "diff": ["-        if( attributes.size() != rhsSection.attributes.size() )", "+        if( m_attributes.size() != rhsSection.m_attributes.size() )", "-        for( Enumeration e = attributes.elements(); e.hasMoreElements(); )", "+        for( Enumeration e = m_attributes.elements(); e.hasMoreElements(); )", "-            Attribute rshAttribute = (Attribute)rhsSection.attributes.get( attribute.getName().toLowerCase() );", "+            Attribute rshAttribute = (Attribute)rhsSection.m_attributes.get( attribute.getName().toLowerCase() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22523f88dd0a485eda28eb895ff4b5be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f735f5f44df9fa52266e7b8b7f2741c2b7560d22", "commitAfterChange": "400ba5d1981259cc07b41f08cd1b53f048f8ef52", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void makeRemoteDir( FTPClient ftp, String dir )         throws IOException, TaskException", "signatureAfterChange": "     protected void makeRemoteDir( FTPClient ftp, String dir )         throws IOException, TaskException", "diff": ["-        if( verbose )", "+        if( m_verbose )", "-            if( !( ignoreNoncriticalErrors && ( rc == 550 || rc == 553 || rc == 521 ) ) )", "+            if( !( m_ignoreNoncriticalErrors && ( rc == 550 || rc == 553 || rc == 521 ) ) )", "-            if( verbose )", "+            if( m_verbose )", "-            if( verbose )", "+            if( m_verbose )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d8a0aec363137a3ee9a011d68f802b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/JavaEnvUtils.java", "commitBeforeChange": "819cbc3ecfa4545f0c4ea997bf22cbcab9e4bd6c", "commitAfterChange": "7498cc00cba66fb695849e1c0d8cd34db1a15f7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static String getJdkExecutable(String command)", "signatureAfterChange": "     public static String getJdkExecutable(String command)", "diff": ["-        if (isNetware) {", "+        if (IS_NETWARE) {", "-        if (isAix) {", "+        if (IS_AIX) {", "-            jExecutable = findInDir(javaHome + \"/../sh\", command);", "+            jExecutable = findInDir(JAVA_HOME + \"/../sh\", command);", "-            jExecutable = findInDir(javaHome + \"/../bin\", command);", "+            jExecutable = findInDir(JAVA_HOME + \"/../bin\", command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261c815ef380728b14c70a8c77f55a8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected File[] getMetamataLibs()", "signatureAfterChange": "     protected File[] getMetamataLibs()", "diff": ["-        Vector files = new Vector();", "-        files.addElement( new File( metahome, \"lib/metamata.jar\" ) );", "-        files.addElement( new File( metahome, \"bin/lib/JavaCC.zip\" ) );", "+        ArrayList files = new ArrayList();", "+        files.add( new File( metahome, \"lib/metamata.jar\" ) );", "+        files.add( new File( metahome, \"bin/lib/JavaCC.zip\" ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266f8daa5c1a42ca33e88c21809bc2fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "01ca57a3170fe917f71d809eedfb4c3c059d38aa", "commitAfterChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void scan()", "signatureAfterChange": "         public void scan()", "diff": ["-            filesIncluded = new Vector();", "+            filesIncluded = new VectorSet();", "-            filesExcluded = new Vector();", "-            dirsIncluded = new Vector();", "+            filesExcluded = new VectorSet();", "+            dirsIncluded = new VectorSet();", "-            dirsExcluded = new Vector();", "+            dirsExcluded = new VectorSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29128f115ad6e08d07e0656c00a6e449", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void testInterfaceAdder()         throws Exception", "signatureAfterChange": "     public void testInterfaceAdder()         throws Exception", "diff": ["-        final ConfigTestInterfaceProp test = new ConfigTestInterfaceProp();", "+        final ConfigTestInterfaceAdder test = new ConfigTestInterfaceAdder();", "-        final ConfigTestInterfaceProp expected = new ConfigTestInterfaceProp();", "+        final ConfigTestInterfaceAdder expected = new ConfigTestInterfaceAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a7babfe91b264cd724d9fa4157d4d5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testTypedConfigAdder()         throws Exception", "signatureAfterChange": "     public void testTypedConfigAdder()         throws Exception", "diff": ["-        final ConfigTestTypedConfigProp test = new ConfigTestTypedConfigProp();", "+        final ConfigTestTypedConfigAdder test = new ConfigTestTypedConfigAdder();", "-        final ConfigTestTypedConfigProp expected = new ConfigTestTypedConfigProp();", "+        final ConfigTestTypedConfigAdder expected = new ConfigTestTypedConfigAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b4b81b160b60afc76c0ec304613014f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testEntryReference()", "signatureAfterChange": "      public void testEntryReference()", "diff": ["-        DTDLocation dtd = new DTDLocation();", "+        ResourceLocation dtd = new ResourceLocation();", "-        DTDLocation entity = new DTDLocation();", "+        ResourceLocation entity = new ResourceLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f84bd9f769b50233d3a93bbc0c17874", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "a6ab0235192d311e0846d196589b71a02e2a7a43", "commitAfterChange": "9d5b717a0d741048246f41ed4835c14236cdc359", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( inputFile == null )", "+        if( m_inputFile == null )", "-            paramfile = inputFile;", "+            paramfile = m_inputFile;", "-            cmdl.setExecutable( new File( home, \"jplauncher\" ).getAbsolutePath() );", "+            cmdl.setExecutable( new File( m_home, \"jplauncher\" ).getAbsolutePath() );", "-            if( inputFile == null && paramfile != null )", "+            if( m_inputFile == null && paramfile != null )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3501f8d7d8215d1c569acc1d074c4125", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdder test = new ConfigTestTypedAdder();", "-        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdder expected = new ConfigTestTypedAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f89c85706e659ff0e1428b6932fbd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java", "commitBeforeChange": "a0ba302efe9a84e4735f08c631e01209496fe522", "commitAfterChange": "2ca7dca3a61c1dfaf641aaae01d923a018e418c5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private CVSEntry[] filterEntrySet(final CVSEntry[] entrySet)", "signatureAfterChange": "     private CVSEntry[] filterEntrySet(final CVSEntry[] entrySet)", "diff": ["-            if (null != m_start && m_start.after(date)) {", "+            if (null != startDate && startDate.after(date)) {", "-            if (null != m_stop && m_stop.before(date)) {", "+            if (null != endDate && endDate.before(date)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4a85c6b22357e9741883fb28cfc848", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/GUnzip.java", "commitBeforeChange": "7451a066cb3c801bbb62d05de03619c153161c80", "commitAfterChange": "7f0eeea180a809355885bfcb6dbb65d5da307849", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void extract()", "signatureAfterChange": "     protected void extract()", "diff": ["-        if (source.lastModified() > dest.lastModified()) {", "-            log(\"Expanding \" + source.getAbsolutePath() + \" to \"", "+        if (srcResource.getLastModified() > dest.lastModified()) {", "+            log(\"Expanding \" + srcResource.getName() + \" to \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8b4590241652f4c301fc3d00be011f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdder test = new ConfigTestTypedAdder();", "-        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdder expected = new ConfigTestTypedAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50ebedbb5ece2f7e639ede930927b10c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/property/test/AbstractPropertyResolverTestCase.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void testPropertyValue( final Object propObject )         throws Exception", "signatureAfterChange": "     private void testPropertyValue( final Object propObject )         throws Exception", "diff": ["-        m_context.setProperty( \"typedProp\", propObject );", "+        m_store.setProperty( \"typedProp\", propObject );", "-        doTestResolution( \"${typedProp}\", propObject, m_context );", "+        doTestResolution( \"${typedProp}\", propObject, m_store );", "-                          propString + \" with following text\", m_context );", "+                          propString + \" with following text\", m_store );", "-                          \"Preceding text with \" + propString, m_context );", "+                          \"Preceding text with \" + propString, m_store );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514992800bf3945318aaf5c212e6c01f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testConfigAdder()         throws Exception", "signatureAfterChange": "     public void testConfigAdder()         throws Exception", "diff": ["-        final ConfigTestConfigProps test = new ConfigTestConfigProps();", "+        final ConfigTestConfigAdder test = new ConfigTestConfigAdder();", "-        final ConfigTestConfigProps expected = new ConfigTestConfigProps();", "+        final ConfigTestConfigAdder expected = new ConfigTestConfigAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57164b56c15b30d329492a6a85696879", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "commitAfterChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws TaskException", "signatureAfterChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws TaskException", "diff": ["-            if( emptyBehavior.equals( \"skip\" ) )", "+            if( m_emptyBehavior.equals( \"skip\" ) )", "-                final String message = \"Warning: skipping \" + archiveType + \" archive \" + zipFile +", "+                final String message = \"Warning: skipping \" + m_archiveType + \" archive \" + zipFile +", "-            else if( emptyBehavior.equals( \"fail\" ) )", "+            else if( m_emptyBehavior.equals( \"fail\" ) )", "-                throw new TaskException( \"Cannot create \" + archiveType + \" archive \" + zipFile +", "+                throw new TaskException( \"Cannot create \" + m_archiveType + \" archive \" + zipFile +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a76b713d97c6078af0c8ebc4df69337", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        if( property == null )", "+        if( m_property == null )", "-            if( null == getProject().getProperty( property ) )", "+            if( null == getProject().getProperty( m_property ) )", "-                setProperty( property, value );", "+                setProperty( m_property, m_value );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f5dd85b2efe74c8e8ee152aba719d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Manifest()         throws TaskException", "signatureAfterChange": "     public Manifest()         throws TaskException", "diff": ["-        mode = new Mode();", "-        mode.setValue( \"replace\" );", "-        manifestVersion = null;", "+        m_mode = new ManifestMode();", "+        m_mode.setValue( \"replace\" );", "+        m_manifestVersion = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67475cc297a8d850d7a14b43c7528a41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testTypedAdderRole()         throws Exception", "signatureAfterChange": "     public void testTypedAdderRole()         throws Exception", "diff": ["-        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdderRole test = new ConfigTestTypedAdderRole();", "-        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        final ConfigTestTypedAdderRole expected = new ConfigTestTypedAdderRole();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e41856b072bb8fcc13a6671c3d2b0c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Object getService( final Class serviceClass )         throws TaskException", "signatureAfterChange": "     public Object getService( final Class serviceClass )         throws TaskException", "diff": ["-        if( m_serviceManager != null && m_serviceManager.hasService( serviceClass ) )", "+        if( m_serviceManager != null && m_serviceManager.hasService( name ) )", "-                return m_serviceManager.getService( serviceClass );", "+                return m_serviceManager.lookup( name );", "-            catch( final AntServiceException se )", "+            catch( final ServiceException se )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "737c16f70a91df1e84a5e6c17ea4e844", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testReferenceAttribute() throws Exception", "signatureAfterChange": "     public void testReferenceAttribute() throws Exception", "diff": ["-        final ConfigTestStringProps test = new ConfigTestStringProps();", "+        final ConfigTestReferenceAttribute test = new ConfigTestReferenceAttribute();", "-        final ConfigTestStringProps expected = new ConfigTestStringProps();", "+        final ConfigTestReferenceAttribute expected = new ConfigTestReferenceAttribute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7465fa5ebd95ce81673b4ad1b2b79b09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Manifest( Reader r )         throws ManifestException, TaskException, IOException", "signatureAfterChange": "     public Manifest( Reader r )         throws ManifestException, TaskException, IOException", "diff": ["-        String nextSectionName = mainSection.read( reader );", "-        String readManifestVersion = mainSection.getAttributeValue( ATTRIBUTE_MANIFEST_VERSION );", "+        String nextSectionName = m_mainSection.read( reader );", "+        String readManifestVersion = m_mainSection.getAttributeValue( ATTRIBUTE_MANIFEST_VERSION );", "-            manifestVersion = readManifestVersion;", "-            mainSection.removeAttribute( ATTRIBUTE_MANIFEST_VERSION );", "+            m_manifestVersion = readManifestVersion;", "+            m_mainSection.removeAttribute( ATTRIBUTE_MANIFEST_VERSION );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774d46f16c5f19058c70d3782620b99a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected File[] getMetamataLibs()", "signatureAfterChange": "     protected File[] getMetamataLibs()", "diff": ["-        Vector files = new Vector();", "-        files.addElement( new File( metahome, \"lib/metamata.jar\" ) );", "-        files.addElement( new File( metahome, \"bin/lib/JavaCC.zip\" ) );", "+        ArrayList files = new ArrayList();", "+        files.add( new File( metahome, \"lib/metamata.jar\" ) );", "+        files.add( new File( metahome, \"bin/lib/JavaCC.zip\" ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e42d166b4e07f38eea2c4c780659454", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/JavaEnvUtils.java", "commitBeforeChange": "819cbc3ecfa4545f0c4ea997bf22cbcab9e4bd6c", "commitAfterChange": "7498cc00cba66fb695849e1c0d8cd34db1a15f7a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static String getJreExecutable(String command)", "signatureAfterChange": "     public static String getJreExecutable(String command)", "diff": ["-        if (isNetware) {", "+        if (IS_NETWARE) {", "-        if (isAix) {", "+        if (IS_AIX) {", "-            jExecutable = findInDir(javaHome + \"/sh\", command);", "+            jExecutable = findInDir(JAVA_HOME + \"/sh\", command);", "-            jExecutable = findInDir(javaHome + \"/bin\", command);", "+            jExecutable = findInDir(JAVA_HOME + \"/bin\", command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa855990f717e27c33a6ffa25f4f5f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static synchronized Vector getProcEnvironment()         throws TaskException", "signatureAfterChange": "     public static synchronized ArrayList getProcEnvironment()         throws TaskException", "diff": ["-    public static synchronized Vector getProcEnvironment()", "+    public static synchronized ArrayList getProcEnvironment()", "-        c_procEnvironment = new Vector();", "+        c_procEnvironment = new ArrayList();", "-            while( (line = in.readLine()) != null )", "+            while( ( line = in.readLine() ) != null )", "-                        c_procEnvironment.addElement( var );", "+                        c_procEnvironment.add( var );", "-            c_procEnvironment.addElement( var );", "+            c_procEnvironment.add( var );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807ec04167f3c5f178e9250ed4c5ee4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/manifest/Section.java", "commitBeforeChange": "0595affdf0cc45086d9055cf1e3cfb4e50bc2d76", "commitAfterChange": "78a7fbf3d909ad842f9e6f3e193a1017eb2f9cbb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public boolean equals( Object rhs )", "signatureAfterChange": "      public boolean equals( Object rhs )", "diff": ["-        if( attributes.size() != rhsSection.attributes.size() )", "+        if( m_attributes.size() != rhsSection.m_attributes.size() )", "-        for( Enumeration e = attributes.elements(); e.hasMoreElements(); )", "+        for( Enumeration e = m_attributes.elements(); e.hasMoreElements(); )", "-            Attribute rshAttribute = (Attribute)rhsSection.attributes.get( attribute.getName().toLowerCase() );", "+            Attribute rshAttribute = (Attribute)rhsSection.m_attributes.get( attribute.getName().toLowerCase() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c36e6c81258d2d3e57d4c27727d990", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/GenerateKey.java", "commitBeforeChange": "0b7ecfb32ed587e063003090000b7baec362f7aa", "commitAfterChange": "353fc665612ee8e26b794f4e59a91e4d1787495a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public DistinguishedName createDname()         throws TaskException", "signatureAfterChange": "      public DistinguishedName createDname()         throws TaskException", "diff": ["-        if( null != expandedDname )", "+        if( null != m_expandedDname )", "-        if( null != dname )", "+        if( null != m_dname )", "-        expandedDname = new DistinguishedName();", "-        return expandedDname;", "+        m_expandedDname = new DistinguishedName();", "+        return m_expandedDname;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8410e6b5f04bb89f19a7bc7148b7fdd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Manifest()         throws TaskException", "signatureAfterChange": "     public Manifest()         throws TaskException", "diff": ["-        mode = new Mode();", "-        mode.setValue( \"replace\" );", "-        manifestVersion = null;", "+        m_mode = new ManifestMode();", "+        m_mode.setValue( \"replace\" );", "+        m_manifestVersion = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84457a46666e91a054287451c5a77827", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "676c2c7cbc53cf43d91f5cb64da1cb84495b0e4f", "commitAfterChange": "ce6c8d711c59101ecf7c4bbef534d5d66daec1f7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "     boolean hasPatterns()", "signatureAfterChange": "     boolean hasPatterns()", "diff": ["-        return includesFileList.size() > 0 || excludesFileList.size() > 0", "-            || includeList.size() > 0 || excludeList.size() > 0;", "-    }", "+        return m_includesFileList.size() > 0 || m_excludesFileList.size() > 0 ||", "+            m_includeList.size() > 0 || m_excludeList.size() > 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b0322439b495b7c3d4adac5243a09b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testMultipleTypedAdder()         throws Exception", "signatureAfterChange": "     public void testMultipleTypedAdder()         throws Exception", "diff": ["-        final ConfigTest5 test = new ConfigTest5();", "+        final ConfigTestMultiTypedAdder test = new ConfigTestMultiTypedAdder();", "-            m_configurer.configure( test, config, m_adaptor );", "+            m_configurer.configure( test, config, m_context );", "-                               ConfigTest5.class.getName(),", "+                               ConfigTestMultiTypedAdder.class.getName(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9318e0484b3cc8baa0bd558ed76784", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testAttributeConvert()         throws Exception", "signatureAfterChange": "     public void testAttributeConvert()         throws Exception", "diff": ["-        final ConfigTestPrimConvert test = new ConfigTestPrimConvert();", "+        final ConfigTestAttributeConvert test = new ConfigTestAttributeConvert();", "-        final ConfigTestPrimConvert expected = new ConfigTestPrimConvert();", "+        final ConfigTestAttributeConvert expected = new ConfigTestAttributeConvert();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ecc346d0f502512fe47468d1c37cbb2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public int size()         throws TaskException", "signatureAfterChange": "     public int size()         throws TaskException", "diff": ["-        int size = getActualVMCommand().size() + javaCommand.size() + sysProperties.size();", "+        int size = getActualVMCommand().size() + m_javaCommand.size() + m_sysProperties.size();", "-        if( classpath != null && classpath.toString().trim().length() > 0 )", "+        if( m_classpath != null && m_classpath.toString().trim().length() > 0 )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fe4c576095f6d31ee6ca38d3edc615e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Manifest( Reader r )         throws ManifestException, TaskException, IOException", "signatureAfterChange": "     public Manifest( Reader r )         throws ManifestException, TaskException, IOException", "diff": ["-        String nextSectionName = mainSection.read( reader );", "-        String readManifestVersion = mainSection.getAttributeValue( ATTRIBUTE_MANIFEST_VERSION );", "+        String nextSectionName = m_mainSection.read( reader );", "+        String readManifestVersion = m_mainSection.getAttributeValue( ATTRIBUTE_MANIFEST_VERSION );", "-            manifestVersion = readManifestVersion;", "-            mainSection.removeAttribute( ATTRIBUTE_MANIFEST_VERSION );", "+            m_manifestVersion = readManifestVersion;", "+            m_mainSection.removeAttribute( ATTRIBUTE_MANIFEST_VERSION );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940b9cf4ef97ffc945edefed3233ea95", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "dc783273b09bd69dee29f8afd61706e328b9e666", "commitAfterChange": "bf736586fa0347cd87d9bcb450dfe16c7263c1e4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public boolean equals(Object obj)", "signatureAfterChange": "         public boolean equals(Object obj)", "diff": ["+         */", "+        public boolean equals(Object obj) {", "+            if (obj == null) {", "+                return false;", "+            }", "+            if (obj.getClass() != getClass()) {", "+                return false;", "+            }", "+            Text other = (Text) obj;", "+            if (name == null) {", "+                if (other.name != null) {", "+                    return false;", "+                }", "+            } else if (!name.equals(other.name)) {", "+                return false;", "+            }", "+            if (optional != other.optional) {", "+                return false;", "+            }", "+            if (trim != other.trim) {", "+                return false;", "+            }", "+            return true;", "+        }", "-        if (textName == null) {", "-            if (other.textName != null) {", "-            if (!textName.equals(other.textName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941877dfa16534f1b525b4ab848b5881", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testContent()         throws Exception", "signatureAfterChange": "     public void testContent()         throws Exception", "diff": ["-        final ConfigTestStringProps test = new ConfigTestStringProps();", "+        final ConfigTestContent test = new ConfigTestContent();", "-        final ConfigTestStringProps expected = new ConfigTestStringProps();", "+        final ConfigTestContent expected = new ConfigTestContent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9433ceac6c9d93783230598d9f6bb26e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJLocalUtil.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void importFiles(                              String importProject, File srcDir,                              String[] includePatterns, String[] excludePatterns,                              boolean importClasses, boolean importResources,                              boolean importSources, boolean useDefaultExcludes )         throws BuildException", "signatureAfterChange": "     public void importFiles(         String importProject, File srcDir,         String[] includePatterns, String[] excludePatterns,         boolean importClasses, boolean importResources,         boolean importSources, boolean useDefaultExcludes )         throws TaskException", "diff": ["-                             String importProject, File srcDir,", "-                             String[] includePatterns, String[] excludePatterns,", "-                             boolean importClasses, boolean importResources,", "-                             boolean importSources, boolean useDefaultExcludes )", "-        throws BuildException", "+        String importProject, File srcDir,", "+        String[] includePatterns, String[] excludePatterns,", "+        boolean importClasses, boolean importResources,", "+        boolean importSources, boolean useDefaultExcludes )", "+        throws TaskException", "-            throw new BuildException( \"The VisualAge for Java project \"", "-                 + \"name is required!\" );", "+            throw new TaskException( \"The VisualAge for Java project \"", "+                                     + \"name is required!\" );", "-                throw new BuildException( \"Unable to import into Workspace!\" );", "+                throw new TaskException( \"Unable to import into Workspace!\" );", "-                    log( importedTypes[i].getPackage().getName()", "-                         + \".\" + importedTypes[i].getName()", "-                         + \" into \" + importedTypes[i].getProject().getName(),", "-                        MSG_DEBUG );", "+                    log( importedTypes[ i ].getPackage().getName()", "+                         + \".\" + importedTypes[ i ].getName()", "+                         + \" into \" + importedTypes[ i ].getProject().getName(),", "+                         MSG_DEBUG );", "-            throw createBuildException( \"Error while importing into workspace: \",", "-                ivje );", "+            throw createTaskException( \"Error while importing into workspace: \",", "+                                       ivje );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990635ac60b874220298832b5629da6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected File[] getSnapshots()         throws TaskException", "signatureAfterChange": "     protected File[] getSnapshots()         throws TaskException", "diff": ["-        Vector v = new Vector();", "+        ArrayList v = new ArrayList();", "-            FileSet fs = (FileSet)filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.get( i );", "-                v.addElement( file );", "+                v.add( file );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991dff9fc03fc8f91b62760f8fb20dff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected File[] getSnapshots()         throws TaskException", "signatureAfterChange": "     protected File[] getSnapshots()         throws TaskException", "diff": ["-        Vector v = new Vector();", "+        ArrayList v = new ArrayList();", "-            FileSet fs = (FileSet)filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.get( i );", "-                v.addElement( file );", "+                v.add( file );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b0a403fb5fb99a5032a48d59e489d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testTypedConfigAdder()         throws Exception", "signatureAfterChange": "     public void testTypedConfigAdder()         throws Exception", "diff": ["-        final ConfigTestTypedConfigProp test = new ConfigTestTypedConfigProp();", "+        final ConfigTestTypedConfigAdder test = new ConfigTestTypedConfigAdder();", "-        final ConfigTestTypedConfigProp expected = new ConfigTestTypedConfigProp();", "+        final ConfigTestTypedConfigAdder expected = new ConfigTestTypedConfigAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0c2dedaba58f59ce3bbf0f596260cb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testConfigAdder()         throws Exception", "signatureAfterChange": "     public void testConfigAdder()         throws Exception", "diff": ["-        final ConfigTestConfigProps test = new ConfigTestConfigProps();", "+        final ConfigTestConfigAdder test = new ConfigTestConfigAdder();", "-        final ConfigTestConfigProps expected = new ConfigTestConfigProps();", "+        final ConfigTestConfigAdder expected = new ConfigTestConfigAdder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4235a0829847c0265f3fa48763291da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/property/test/AbstractPropertyResolverTestCase.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void testPropertyValue( final Object propObject )         throws Exception", "signatureAfterChange": "     private void testPropertyValue( final Object propObject )         throws Exception", "diff": ["-        m_store.setProperty( \"typedProp\", propObject );", "+        m_context.setProperty( \"typedProp\", propObject );", "-        doTestResolution( \"${typedProp}\", propObject, m_store );", "+        doTestResolution( \"${typedProp}\", propObject, m_context );", "-                          propString + \" with following text\", m_store );", "+                          propString + \" with following text\", m_context );", "-                          \"Preceding text with \" + propString, m_store );", "+                          \"Preceding text with \" + propString, m_context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88ce3fb22fd69bef96ad50669e040f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static synchronized Vector getProcEnvironment()         throws TaskException", "signatureAfterChange": "     public static synchronized ArrayList getProcEnvironment()         throws TaskException", "diff": ["-    public static synchronized Vector getProcEnvironment()", "+    public static synchronized ArrayList getProcEnvironment()", "-        c_procEnvironment = new Vector();", "+        c_procEnvironment = new ArrayList();", "-            while( (line = in.readLine()) != null )", "+            while( ( line = in.readLine() ) != null )", "-                        c_procEnvironment.addElement( var );", "+                        c_procEnvironment.add( var );", "-            c_procEnvironment.addElement( var );", "+            c_procEnvironment.add( var );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8aefaebbdd60ff72efed99e2858ece1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "676c2c7cbc53cf43d91f5cb64da1cb84495b0e4f", "commitAfterChange": "ce6c8d711c59101ecf7c4bbef534d5d66daec1f7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "     boolean hasPatterns()", "signatureAfterChange": "     boolean hasPatterns()", "diff": ["-        return includesFileList.size() > 0 || excludesFileList.size() > 0", "-            || includeList.size() > 0 || excludeList.size() > 0;", "-    }", "+        return m_includesFileList.size() > 0 || m_excludesFileList.size() > 0 ||", "+            m_includeList.size() > 0 || m_excludeList.size() > 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1e2cbe616a3e0a6a32d488b7572d6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testMultipleTypedAdder()         throws Exception", "signatureAfterChange": "     public void testMultipleTypedAdder()         throws Exception", "diff": ["-        final ConfigTest5 test = new ConfigTest5();", "+        final ConfigTestMultiTypedAdder test = new ConfigTestMultiTypedAdder();", "-            m_configurer.configure( test, config, m_adaptor );", "+            m_configurer.configure( test, config, m_context );", "-                               ConfigTest5.class.getName(),", "+                               ConfigTestMultiTypedAdder.class.getName(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc6ab910f51e2fbe232293135a48b425", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/GenerateKey.java", "commitBeforeChange": "0b7ecfb32ed587e063003090000b7baec362f7aa", "commitAfterChange": "353fc665612ee8e26b794f4e59a91e4d1787495a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public DistinguishedName createDname()         throws TaskException", "signatureAfterChange": "      public DistinguishedName createDname()         throws TaskException", "diff": ["-        if( null != expandedDname )", "+        if( null != m_expandedDname )", "-        if( null != dname )", "+        if( null != m_dname )", "-        expandedDname = new DistinguishedName();", "-        return expandedDname;", "+        m_expandedDname = new DistinguishedName();", "+        return m_expandedDname;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c05f01e64ea1cfe55a3b87dfff227a3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Vector getFileList()         throws TaskException", "signatureAfterChange": "     protected ArrayList getFileList()         throws TaskException", "diff": ["-    protected Vector getFileList()", "+    protected ArrayList getFileList()", "-        Vector files = new Vector();", "+        ArrayList files = new ArrayList();", "-                FileSet fs = (FileSet)filesets.elementAt( i );", "+                FileSet fs = (FileSet)filesets.get( i );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c189bba0c99e7beb94786327b4ddc5d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/BUnzip2.java", "commitBeforeChange": "7f0eeea180a809355885bfcb6dbb65d5da307849", "commitAfterChange": "3c2ed1374f54be5918921d64304ca2c82ca06548", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void extract()", "signatureAfterChange": "     protected void extract()", "diff": ["-        if (source.lastModified() > dest.lastModified()) {", "-            log(\"Expanding \" + source.getAbsolutePath() + \" to \"", "+        if (srcResource.getLastModified() > dest.lastModified()) {", "+            log(\"Expanding \" + srcResource.getName() + \" to \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd7e197ba15d95c6ae7cd924cb6f2fb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        if( property == null )", "+        if( m_property == null )", "-            if( null == getProject().getProperty( property ) )", "+            if( null == getProject().getProperty( m_property ) )", "-                setProperty( property, value );", "+                setProperty( m_property, m_value );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf972f0509e6125b3948861a8419b6e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Vector getFileList()         throws TaskException", "signatureAfterChange": "     protected ArrayList getFileList()         throws TaskException", "diff": ["-    protected Vector getFileList()", "+    protected ArrayList getFileList()", "-        Vector files = new Vector();", "+        ArrayList files = new ArrayList();", "-                FileSet fs = (FileSet)filesets.elementAt( i );", "+                FileSet fs = (FileSet)filesets.get( i );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e4cd6465ed015cd7b5315b0ebf954f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "10fff2b9fa4ad9397d1c037bc7752f42940fff16", "commitAfterChange": "475184608355b90b59307f5462e11a89e37be228", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "signatureAfterChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "diff": ["-            getLogger().info( \"IIOP has been turned on.\" );", "+            getTaskContext().info( \"IIOP has been turned on.\" );", "-                getLogger().info( \"IIOP Options: \" + attributes.getIiopopts() );", "+                getTaskContext().info( \"IIOP Options: \" + attributes.getIiopopts() );", "-            getLogger().info( \"IDL has been turned on.\" );", "+            getTaskContext().info( \"IDL has been turned on.\" );", "-                getLogger().info( \"IDL Options: \" + attributes.getIdlopts() );", "+                getTaskContext().info( \"IDL Options: \" + attributes.getIdlopts() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16ee85d5f8fd41900ca4d1cb75c0620", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "a6ab0235192d311e0846d196589b71a02e2a7a43", "commitAfterChange": "9d5b717a0d741048246f41ed4835c14236cdc359", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( inputFile == null )", "+        if( m_inputFile == null )", "-            paramfile = inputFile;", "+            paramfile = m_inputFile;", "-            cmdl.setExecutable( new File( home, \"jplauncher\" ).getAbsolutePath() );", "+            cmdl.setExecutable( new File( m_home, \"jplauncher\" ).getAbsolutePath() );", "-            if( inputFile == null && paramfile != null )", "+            if( m_inputFile == null && paramfile != null )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf0a1ad15244b54937aea9d2b9f0e54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJLocalUtil.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void importFiles(                              String importProject, File srcDir,                              String[] includePatterns, String[] excludePatterns,                              boolean importClasses, boolean importResources,                              boolean importSources, boolean useDefaultExcludes )         throws BuildException", "signatureAfterChange": "     public void importFiles(         String importProject, File srcDir,         String[] includePatterns, String[] excludePatterns,         boolean importClasses, boolean importResources,         boolean importSources, boolean useDefaultExcludes )         throws TaskException", "diff": ["-                             String importProject, File srcDir,", "-                             String[] includePatterns, String[] excludePatterns,", "-                             boolean importClasses, boolean importResources,", "-                             boolean importSources, boolean useDefaultExcludes )", "-        throws BuildException", "+        String importProject, File srcDir,", "+        String[] includePatterns, String[] excludePatterns,", "+        boolean importClasses, boolean importResources,", "+        boolean importSources, boolean useDefaultExcludes )", "+        throws TaskException", "-            throw new BuildException( \"The VisualAge for Java project \"", "-                 + \"name is required!\" );", "+            throw new TaskException( \"The VisualAge for Java project \"", "+                                     + \"name is required!\" );", "-                throw new BuildException( \"Unable to import into Workspace!\" );", "+                throw new TaskException( \"Unable to import into Workspace!\" );", "-                    log( importedTypes[i].getPackage().getName()", "-                         + \".\" + importedTypes[i].getName()", "-                         + \" into \" + importedTypes[i].getProject().getName(),", "-                        MSG_DEBUG );", "+                    log( importedTypes[ i ].getPackage().getName()", "+                         + \".\" + importedTypes[ i ].getName()", "+                         + \" into \" + importedTypes[ i ].getProject().getName(),", "+                         MSG_DEBUG );", "-            throw createBuildException( \"Error while importing into workspace: \",", "-                ivje );", "+            throw createTaskException( \"Error while importing into workspace: \",", "+                                       ivje );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df745f574b51c27724f207ea55673f1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public File getSource()", "signatureAfterChange": "         public File getSource()", "diff": ["-                    Vector files = new Vector();", "+                    ArrayList files = new ArrayList();", "-                            files.addElement( f );", "+                            files.add( f );", "-                    this.source = (File)files.elementAt( x );", "+                    this.source = (File)files.get( x );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec0a02d45f2d313254a18b7505ca2916", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "dc783273b09bd69dee29f8afd61706e328b9e666", "commitAfterChange": "bf736586fa0347cd87d9bcb450dfe16c7263c1e4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public boolean equals(Object obj)", "signatureAfterChange": "     public boolean equals(Object obj)", "diff": ["-        if (textName == null) {", "-            if (other.textName != null) {", "+        if (text == null) {", "+            if (other.text != null) {", "-            if (!textName.equals(other.textName)) {", "+            if (!text.equals(other.text)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f13f2e9b4c9ad4ffe12caa743521770d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "10fff2b9fa4ad9397d1c037bc7752f42940fff16", "commitAfterChange": "475184608355b90b59307f5462e11a89e37be228", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "signatureAfterChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "diff": ["-            getLogger().info( \"IIOP has been turned on.\" );", "+            getTaskContext().info( \"IIOP has been turned on.\" );", "-                getLogger().info( \"IIOP Options: \" + attributes.getIiopopts() );", "+                getTaskContext().info( \"IIOP Options: \" + attributes.getIiopopts() );", "-            getLogger().info( \"IDL has been turned on.\" );", "+            getTaskContext().info( \"IDL has been turned on.\" );", "-                getLogger().info( \"IDL Options: \" + attributes.getIdlopts() );", "+                getTaskContext().info( \"IDL Options: \" + attributes.getIdlopts() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1952cbec13c14dacc6bc7af297c98d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void testInterfaceAdder()         throws Exception", "signatureAfterChange": "     public void testInterfaceAdder()         throws Exception", "diff": ["-        final ConfigTestInterfaceProp test = new ConfigTestInterfaceProp();", "+        final ConfigTestInterfaceAdder test = new ConfigTestInterfaceAdder();", "-        final ConfigTestInterfaceProp expected = new ConfigTestInterfaceProp();", "+        final ConfigTestInterfaceAdder expected = new ConfigTestInterfaceAdder();"]}]}