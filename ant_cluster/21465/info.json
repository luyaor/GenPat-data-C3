{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e3757809fdb02f279d4cc3ffb4f3679", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c866c3598ab0bd6688504000b44036f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultConverterRegistry.java", "commitBeforeChange": "414575a432489206adb9cbaf9496cc51b320239a", "commitAfterChange": "362616390fb06104b98d1ddcab5e2bc8d998a793", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void registerConverterInfo( final String className, final ConverterInfo info )", "signatureAfterChange": "      public void registerConverter( final String className,                                     final String source,                                     final String destination )", "diff": ["-    public void registerConverterInfo( final String className, final ConverterInfo info )", "+    public void registerConverter( final String className, ", "+                                   final String source, ", "+                                   final String destination )", "-        final String source = info.getSource();", "-        final String destination = info.getDestination();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32fd0676a36a077fabc59da9649ed9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/repository/HttpRepository.java", "commitBeforeChange": "4d831bb7cbb2bb2839303380a28f888c587802a0", "commitAfterChange": "f630ef56ed68316b07aaa27e05cf871de1070498", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean fetch(Library library) throws IOException", "signatureAfterChange": "     public boolean fetch(Library library, boolean useTimestamp) throws IOException", "diff": ["-    public boolean fetch(Library library) throws IOException {", "+    public boolean fetch(Library library, boolean useTimestamp) throws IOException {", "-        finish = System.currentTimeMillis();", "-        boolean useTimestamps = !getOwner().isForceDownload() &&", "-                !library.exists();", "-        boolean success=get(remoteURL, library.getLibraryFile(),useTimestamps,", "+        boolean success=get(remoteURL, library.getLibraryFile(),useTimestamp,", "+        finish = System.currentTimeMillis();"]}]}