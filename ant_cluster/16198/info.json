{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "210877c81f84121056a70b8c32c9d33d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ea430951139020adbe4fa3ac9c7fcdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "1cd764447cbd26e40fb0b78aaa4b4cf3398d2a9a", "commitAfterChange": "a50b60cdd9337ee2978a7f1522cf4963785f7aa9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected boolean needToRebuild(Hashtable ejbFiles, File jarFile)", "signatureAfterChange": "     protected boolean needToRebuild(Hashtable ejbFiles, File jarFile)", "diff": ["-        // By default we assume we need to build.", "-        boolean needBuild = true;", "-", "-            long    lastBuild = jarFile.lastModified();", "+            long lastBuild = jarFile.lastModified();", "+            if (config.manifest != null && config.manifest.exists() &&", "+                config.manifest.lastModified() > lastBuild) {", "+                log(\"Build needed because manifest \" + config.manifest + \" is out of date\",", "+                    Project.MSG_VERBOSE);", "+                return true;", "+            }", "+                            ", "+            ", "-            // Set the need build to false until we find out otherwise.", "-            needBuild = false;", "-            while( (needBuild == false) && (fileIter.hasNext()) ) {", "+            while(fileIter.hasNext()) {", "-                needBuild = ( lastBuild < currentFile.lastModified() );", "-                if (needBuild) {", "+                if (lastBuild < currentFile.lastModified()) {", "+                    return true;                        ", "+            return false;", "-        return needBuild;", "+        return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1628ac082cb31f0157e8fb5281243c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "e8d51eb4bc21a345a14940b7f5dd5f4f6242c9a4", "commitAfterChange": "4cf2a60f945bc9d3a479672765bab3fdaadc0c78", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 31, "signatureBeforeChange": "         protected boolean equals(Member m)", "signatureAfterChange": "         public boolean equals(Object obj)", "diff": ["-        /** {@inheritDoc}. */", "-        protected boolean equals(Member m) {", "-            Attribute a = (Attribute) m;", "-            return super.equals(m) &&", "-                   (defaultValue == null)? a.defaultValue == null:", "-                                           defaultValue.equals(a.defaultValue);", "+         */", "+        public boolean equals(Object obj) {", "+            if (obj == null) {", "+                return false;", "+            }", "+            if (obj.getClass() != getClass()) {", "+                return false;", "+            }", "+            Attribute other = (Attribute) obj;", "+            if (name == null) {", "+                if (other.name != null) {", "+                    return false;", "+                }", "+            } else if (!name.equals(other.name)) {", "+                return false;", "+            }", "+            if (defaultValue == null) {", "+                if (other.defaultValue != null) {", "+                    return false;", "+                }", "+            } else if (!defaultValue.equals(other.defaultValue)) {", "+                return false;", "+            }", "+            return true;", "+        }"]}]}