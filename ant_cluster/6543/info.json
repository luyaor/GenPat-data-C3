{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47325361ac8c3d38dbbac38cb0730d1e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09acaf1b11a393fa2cf3cfe472ce09e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/ProjectTest.java", "commitBeforeChange": "2ce327371f96d68b299916b83b35a97b835cd1fe", "commitAfterChange": "3e7907c8550f987601c6f3f9ccdd93057393f9bc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testDuplicateTargets()", "signatureAfterChange": "      public void testDuplicateTargets()", "diff": ["-        BFT bft = new BFT(\"\", \"core/duplicate-target.xml\");", "-        bft.expectBuildException(\"twice\", \"Duplicate target\");", "+        try {", "+            BFT bft = new BFT(\"\", \"core/duplicate-target.xml\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"specific message\",", "+                         \"Duplicate target 'twice'\",", "+                         ex.getMessage());", "+            return;", "+        }", "+        fail(\"Should throw BuildException about duplicate target\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b48fc1e094cd9b1cc4c01bdd6d00fe1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "fc7e960e14d08b836f9816357297c3f56e421e8b", "commitAfterChange": "c9ee19786b722aebf77cc88cfbe984e145f179a2", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public void executeTargets(Vector targetNames) throws BuildException", "signatureAfterChange": "     public void executeTargets(Vector targetNames) throws BuildException", "diff": ["+        BuildException thrownException = null;", "-            executeTarget((String) targetNames.elementAt(i));", "+            try {", "+                executeTarget((String) targetNames.elementAt(i));", "+            } catch (BuildException ex) {", "+                if (!(keepGoingMode)) {", "+                    throw ex; // Throw further", "+                }", "+                thrownException = ex;", "+            }", "+        }", "+        if (thrownException != null) {", "+            throw thrownException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3777c5c993d729efbbf9f69d58e62000", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/DefaultExecutor.java", "commitBeforeChange": "faba017869b796b137c9147c00a00cd11dd94f1e", "commitAfterChange": "2c68e6ab607fa6a70e414eee76d56afe00c29c31", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void executeTargets(Project project, String[] targetNames)         throws BuildException", "signatureAfterChange": "     public void executeTargets(Project project, String[] targetNames)         throws BuildException", "diff": ["+        BuildException thrownException = null;", "-            project.executeTarget(targetNames[i]);", "+            try {", "+                project.executeTarget(targetNames[i]);", "+            } catch (BuildException ex) {", "+                if (project.isKeepGoingMode()) {", "+                    thrownException = ex;", "+                } else {", "+                    throw ex;", "+                }", "+            }", "+        if (thrownException != null) {", "+            throw thrownException;", "+        }", "+    }"]}]}