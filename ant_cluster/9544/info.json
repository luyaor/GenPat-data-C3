{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28b819652d54476cdf9eecbb1fafc4e4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e461017ab25b474871b48172f14d83f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "7b9199aaadefdcca61d3f7c6207011214c3bcb95", "commitAfterChange": "4a8cd1490b700125218abd9d6de8e09ed3fbaa59", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        /*", "+         * In Ant 1.1, <chmod dir=\"foo\" /> means, change the permissions", "+         * of directory foo, not anything inside of it.  This is the case the", "+         * second branch of the if statement below catches for backwards", "+         * compatibility.", "+         */", "-                filesets.removeElement(defaultSet);", "+                if (defaultSetDefined && defaultSet.getDir(project) != null) {", "+                    filesets.removeElement(defaultSet);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ab366ab8787a2a0431c28cd7d09692", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "7aaf095c51dcb4b22dd8a7aec2a63676a73ad8e0", "commitAfterChange": "6d54725ac9d2fc606d5b4d8ec6574b648399f68d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "diff": ["+        if (nc == null && parent instanceof DynamicConfigurator) {", "+            DynamicConfigurator dc = (DynamicConfigurator) parent;", "+            Object nestedElement = dc.createDynamicElement(elementName);", "+            if (nestedElement != null) {", "+                if (nestedElement instanceof ProjectComponent) {", "+                    ((ProjectComponent) nestedElement).setProject(project);", "+                }", "+                return nestedElement;", "+            }", "+        }"]}]}