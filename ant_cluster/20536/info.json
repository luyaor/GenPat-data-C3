{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "867c1beb6e2181c36706939b00dd3c45", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b258386eb17bc2feec81ba3b2d5416a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavadocTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testDirsetPathWithoutPackagenames() throws Exception", "signatureAfterChange": "     @Test     public void testDirsetPathWithoutPackagenames()", "diff": ["-    public void testDirsetPathWithoutPackagenames() throws Exception {", "-        try {", "-            executeTarget(\"dirsetPathWithoutPackagenames\");", "-        } catch (BuildException e) {", "-            fail(\"Contents of path should be picked up without specifying package names: \" + e);", "-        }", "+    @Test", "+    public void testDirsetPathWithoutPackagenames() {", "+        buildRule.executeTarget(\"dirsetPathWithoutPackagenames\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ba169e4733476c2fefe343f1363dfa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavadocTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void testPathelementLocationPath() throws Exception", "signatureAfterChange": "     @Test     public void testPathelementLocationPath()", "diff": ["-    public void testPathelementLocationPath() throws Exception {", "-        try {", "-            executeTarget(\"pathelementLocationPath\");", "-        } catch (BuildException e) {", "-            fail(\"A path can contain pathelements pointing to a file: \" + e);", "-        }", "+    @Test", "+    public void testPathelementLocationPath() {", "+        buildRule.executeTarget(\"pathelementLocationPath\");"]}]}