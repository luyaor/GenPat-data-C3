{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bde2199ae5a6f95c60a0b992ee014e68", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6406b06e8fe31cba41f67703b236862f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "9bab4dab1ab3b86354929a1929906fe471d9fa93", "commitAfterChange": "e47b4d5aca65c519f01afabb9479b8443abd2ccf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setAntRun(Project project) throws BuildException", "signatureAfterChange": "     public void setAntRun(Project project) throws BuildException", "diff": ["-    \tif (myos.equals(\"Mac OS\") || execWithCWD != null)", "-            return;", "-", "-        String ant = project.getProperty(\"ant.home\");", "-        if (ant == null) {", "-            throw new BuildException(\"Property 'ant.home' not found\");", "-        }", "-", "-        if (myos.toLowerCase().indexOf(\"windows\") >= 0) {", "-            antRun = project.resolveFile(ant + \"/bin/antRun.bat\").toString();", "-        } else {", "-            antRun = project.resolveFile(ant + \"/bin/antRun\").toString();", "-        }", "+        this.project = project;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce8e8f3d5beda2710db49402a7f96fa0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelperRepository.java", "commitBeforeChange": "8dd8b1bb02f9992909c7bd08f8922eb9f35a5052", "commitAfterChange": "fdc711e2e2805a41b766e9d1e07d83512d97f658", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void registerProjectHelper(ProjectHelper projectHelper)", "signatureAfterChange": "     public void registerProjectHelper(String helperClassName)             throws BuildException", "diff": ["-    private void registerProjectHelper(ProjectHelper projectHelper) {", "-        if (projectHelper == null) {", "+     */", "+    public void registerProjectHelper(String helperClassName)", "+            throws BuildException {", "+        registerProjectHelper(getHelperConstructor(helperClassName));", "+    }", "-            System.out.println(\"ProjectHelper \" +", "-                               projectHelper.getClass().getName()", "-                               + \" registered.\");", "-        try {", "-            helpers.add(projectHelper.getClass().getConstructor(NO_CLASS));", "-        } catch (NoSuchMethodException nse) {", "-            // impossible to get here", "-            throw new BuildException(\"Couldn't find no-arg constructor in \"", "-                                     + projectHelper.getClass().getName());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d027e31688f065f11135c746714f8690", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "d16eabe443005885baa17713017934136b8b22cf", "commitAfterChange": "6d857af2bf5078df3560a1092405b8f3245abb19", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     protected boolean haveBootclasspath(boolean log)", "signatureAfterChange": "     protected boolean haveBootclasspath(boolean log)", "diff": ["-        if (bootclasspath != null", "-            && bootclasspath.toString().trim().length() > 0) {", "-", "-            if (!bootclasspath.toString()", "-                .equals(bootclasspath.concatSystemClasspath(\"ignore\")", "-                        .toString())) {", "-                if (log) {", "-                    bootclasspath.log(\"Ignoring bootclasspath as \"", "-                                       + \"build.sysclasspath has been set.\");", "-                }", "-            } else if (vmVersion.startsWith(\"1.1\")) {", "-                if (log) {", "-                    bootclasspath.log(\"Ignoring bootclasspath as \"", "-                                       + \"the target VM doesn't support it.\");", "-                }", "-            } else {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return calculateBootclasspath(log).size() > 0;"]}]}