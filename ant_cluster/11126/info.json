{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3ad602b7acab24cef389398f04c25b5", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdb511a6a4ff9df7302602be68ceddc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private boolean checkClass( String classname )", "signatureAfterChange": "      private boolean checkClass( String classname )", "diff": ["-            if( loader != null )", "-            {", "-                loader.loadClass( classname );", "-            }", "-            else", "-            {", "-                ClassLoader l = this.getClass().getClassLoader();", "-                // Can return null to represent the bootstrap class loader.", "-                // see API docs of Class.getClassLoader.", "-                if( l != null )", "-                {", "-                    l.loadClass( classname );", "-                }", "-                else", "-                {", "-                    Class.forName( classname );", "-                }", "-            }", "+            final ClassLoader classLoader = getClassLoader();", "+            classLoader.loadClass( classname );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ea056de1f299c97ae093dca9c0e5fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private boolean checkClass( String classname )", "signatureAfterChange": "      private boolean checkClass( String classname )", "diff": ["-            if( loader != null )", "-            {", "-                loader.loadClass( classname );", "-            }", "-            else", "-            {", "-                ClassLoader l = this.getClass().getClassLoader();", "-                // Can return null to represent the bootstrap class loader.", "-                // see API docs of Class.getClassLoader.", "-                if( l != null )", "-                {", "-                    l.loadClass( classname );", "-                }", "-                else", "-                {", "-                    Class.forName( classname );", "-                }", "-            }", "+            final ClassLoader classLoader = getClassLoader();", "+            classLoader.loadClass( classname );"]}]}