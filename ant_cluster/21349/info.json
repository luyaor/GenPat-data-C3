{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "224d3c6aee7273a7a414bb8cadd2417f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df4ca037b9b4b79ef2caf45ccc68ba2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java", "commitBeforeChange": "b229582ff1c616ed7c315bcca67b4f9c7d7b1598", "commitAfterChange": "b1e478fd6c05115eb8640d7c1de1781a4ba80080", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testFailureRecorder()", "signatureAfterChange": "     public void testFailureRecorder()", "diff": ["+        if (JavaEnvUtils.isAtLeastJavaVersion(JavaEnvUtils.JAVA_1_5)) {", "+            try {", "+                Class.forName(\"junit.framework.JUnit4TestAdapter\");", "+                System.err.println(\"skipping tests since it fails when\"", "+                                   + \" using JUnit 4\");", "+                return;", "+            } catch (ClassNotFoundException e) {", "+                // OK, this is JUnit3, can run test", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1243edcffe064b2e869a8499692764a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "4248bab8eaef8265c62fc3a612bfee1943086133", "commitAfterChange": "4464369821e5824727322622259f6ffd3ab8880b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["+        File savedBase = basedir;", "+", "+                if (basedir != null && !followSymlinks", "+                    && FILE_UTILS.isSymbolicLink(basedir.getParentFile(),", "+                                                 basedir.getName())) {", "+                    basedir = null;", "+                }", "+        } catch (IOException ex) {", "+            throw new BuildException(ex);", "+            basedir = savedBase;"]}]}