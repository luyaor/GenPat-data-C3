{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "437f43d0f141baa473b37204c470fa55", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc8ca9d387c9df5ca1d9734b677cbda", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/manifest/Section.java", "commitBeforeChange": "0595affdf0cc45086d9055cf1e3cfb4e50bc2d76", "commitAfterChange": "78a7fbf3d909ad842f9e6f3e193a1017eb2f9cbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void merge( Section section )         throws ManifestException", "signatureAfterChange": "     public void merge( Section section )         throws ManifestException", "diff": ["-        if( name == null && section.getName() != null ||", "-            name != null && !( name.equalsIgnoreCase( section.getName() ) ) )", "+        if( m_name == null && section.getName() != null ||", "+            m_name != null && !( m_name.equalsIgnoreCase( section.getName() ) ) )", "-        for( Enumeration e = section.attributes.keys(); e.hasMoreElements(); )", "+        for( Enumeration e = section.m_attributes.keys(); e.hasMoreElements(); )", "-            if( attributeName.equals( Manifest.ATTRIBUTE_CLASSPATH ) &&", "-                attributes.containsKey( attributeName ) )", "+            if( attributeName.equals( ManifestUtil.ATTRIBUTE_CLASSPATH ) &&", "+                m_attributes.containsKey( attributeName ) )", "-                ArrayList classpathAttrs = (ArrayList)section.attributes.get( attributeName );", "-                ArrayList ourClasspathAttrs = (ArrayList)attributes.get( attributeName );", "+                ArrayList classpathAttrs = (ArrayList)section.m_attributes.get( attributeName );", "+                ArrayList ourClasspathAttrs = (ArrayList)m_attributes.get( attributeName );", "-                attributes.put( attributeName, section.attributes.get( attributeName ) );", "+                m_attributes.put( attributeName, section.m_attributes.get( attributeName ) );", "-        for( Iterator e = section.warnings.iterator(); e.hasNext(); )", "+        for( Iterator e = section.m_warnings.iterator(); e.hasNext(); )", "-            warnings.add( e.next() );", "+            m_warnings.add( e.next() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76830fca8e285d8c990c8a4f2deaae20", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/manifest/Section.java", "commitBeforeChange": "0595affdf0cc45086d9055cf1e3cfb4e50bc2d76", "commitAfterChange": "78a7fbf3d909ad842f9e6f3e193a1017eb2f9cbb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void merge( Section section )         throws ManifestException", "signatureAfterChange": "     public void merge( Section section )         throws ManifestException", "diff": ["-        if( name == null && section.getName() != null ||", "-            name != null && !( name.equalsIgnoreCase( section.getName() ) ) )", "+        if( m_name == null && section.getName() != null ||", "+            m_name != null && !( m_name.equalsIgnoreCase( section.getName() ) ) )", "-        for( Enumeration e = section.attributes.keys(); e.hasMoreElements(); )", "+        for( Enumeration e = section.m_attributes.keys(); e.hasMoreElements(); )", "-            if( attributeName.equals( Manifest.ATTRIBUTE_CLASSPATH ) &&", "-                attributes.containsKey( attributeName ) )", "+            if( attributeName.equals( ManifestUtil.ATTRIBUTE_CLASSPATH ) &&", "+                m_attributes.containsKey( attributeName ) )", "-                ArrayList classpathAttrs = (ArrayList)section.attributes.get( attributeName );", "-                ArrayList ourClasspathAttrs = (ArrayList)attributes.get( attributeName );", "+                ArrayList classpathAttrs = (ArrayList)section.m_attributes.get( attributeName );", "+                ArrayList ourClasspathAttrs = (ArrayList)m_attributes.get( attributeName );", "-                attributes.put( attributeName, section.attributes.get( attributeName ) );", "+                m_attributes.put( attributeName, section.m_attributes.get( attributeName ) );", "-        for( Iterator e = section.warnings.iterator(); e.hasNext(); )", "+        for( Iterator e = section.m_warnings.iterator(); e.hasNext(); )", "-            warnings.add( e.next() );", "+            m_warnings.add( e.next() );"]}]}