{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ff86c9c3436e036ffffe8357b373b48", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50732d8712b4379cb9a3d214ad6d83bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "3def9c5ed8dd13b7caf924d25dcd230391b17da6", "commitAfterChange": "2b925503d71972d8b782eedd6cdf75711377d7b0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public static String rtrimWildcardTokens(String input)", "signatureAfterChange": "     public static String rtrimWildcardTokens(String input)", "diff": ["-        String[] tokens = tokenizePathAsArray(input);", "-        StringBuffer sb = new StringBuffer();", "-        for (int i = 0; i < tokens.length; i++) {", "-            if (hasWildcards(tokens[i])) {", "-                break;", "-            }", "-            if (i > 0 && sb.charAt(sb.length() - 1) != File.separatorChar) {", "-                sb.append(File.separator);", "-            }", "-            sb.append(tokens[i]);", "-        }", "-        return sb.toString();", "+        return new TokenizedPattern(input).rtrimWildcardTokens().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c57d19bdb517f368fe7b81823bc2f70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "130b9317efa86bc6509e592b52df18c89743d95a", "commitAfterChange": "8d48bc67994f396712c0b6552ebd857d4f52f521", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void addExtraField(ZipExtraField ze)", "signatureAfterChange": "     public void addExtraField(ZipExtraField ze)", "diff": ["-            extraFields = new Vector();", "+            extraFields = new LinkedHashMap();", "-        ZipShort type = ze.getHeaderId();", "-        boolean done = false;", "-        for (int i = 0, fieldsSize = extraFields.size(); !done && i < fieldsSize; i++) {", "-            if (((ZipExtraField) extraFields.elementAt(i)).getHeaderId().equals(type)) {", "-                extraFields.setElementAt(ze, i);", "-                done = true;", "-            }", "-        }", "-        if (!done) {", "-            extraFields.addElement(ze);", "-        }", "+        extraFields.put(ze.getHeaderId(), ze);"]}]}