{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da90c5ee60767f6283b93effd5d55d4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb04ca6c09ad36bafb5369fa2ceb60f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java", "commitBeforeChange": "824c630ff9c0aeb0e01d9d08c1541d65dfb3fa99", "commitAfterChange": "f02f90064bbd969d79995103290b722750fe67ba", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \r     private String getClassName(Test test)", "signatureAfterChange": "\r         public int compareTo(Object other)", "diff": ["-\r", "-    private String getClassName(Test test) {\r", "-        return test.getClass().getName();\r", "+         */\r", "+        public int compareTo(Object other) {\r", "+            if (other instanceof TestInfos) {\r", "+                TestInfos otherInfos = (TestInfos) other;\r", "+                return toString().compareTo(otherInfos.toString());\r", "+            } else {\r", "+                return -1;\r", "+            }\r", "+        }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7769000dc9b4f54a33acbd891f74459", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "c8ae289ddd72e9f5858612fba38393a3c8698c27", "commitAfterChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-        final File homeDir = getHomeDir();", "+        checkHomeDir();", "-        final ProjectListener listener = prepareListener( embeddor );", "-        //create the project", "-        final Project project =", "-            embeddor.createProject( buildFile.toString(), null, m_builderParameters );", "-", "-        //loop over build if we are in incremental mode..", "-        final boolean incremental = m_parameters.getParameterAsBoolean( \"incremental\", false );", "-        if( !incremental )", "+        try", "-            executeBuild( embeddor, project, listener );", "-        }", "-        else", "-        {", "-            executeIncrementalBuild( embeddor, project, listener );", "-        }", "+            final ProjectListener listener = prepareListener( embeddor );", "-        shutdownEmbeddor( embeddor );", "+            //create the project", "+            final Project project =", "+                embeddor.createProject( buildFile.toString(), null, m_builderParameters );", "+", "+            //loop over build if we are in incremental mode..", "+            final boolean incremental = m_parameters.getParameterAsBoolean( \"incremental\", false );", "+            if( !incremental )", "+            {", "+                executeBuild( embeddor, project, listener );", "+            }", "+            else", "+            {", "+                executeIncrementalBuild( embeddor, project, listener );", "+            }", "+        }", "+        catch( final Exception e )", "+        {", "+            final String message = REZ.getString( \"build-failed.error\" );", "+            throw new CascadingException( message, e );", "+        }", "+        finally", "+        {", "+            shutdownEmbeddor( embeddor );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd95d8361d38f5c62308a59a25c70d0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void setValue( final AttributeSetter setter,                            final Object object,                            final String value,                            final Context context )         throws Exception", "signatureAfterChange": "     private void setValue( final PropertyConfigurer setter,                            final Object object,                            final String value,                            final Context context )         throws Exception", "diff": ["-    private void setValue( final AttributeSetter setter,", "+    private void setValue( final PropertyConfigurer setter,", "+        // Check if the creator method must be used", "+        if( setter.useCreator() )", "+        {", "+            final String message = REZ.getString( \"must-be-element.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "-        Class clazz = setter.getType();", "-        if( clazz.isPrimitive() )", "-        {", "-            clazz = getComplexTypeFor( clazz );", "-        }", "-", "+        final Class clazz = setter.getType();", "-        setter.setAttribute( object, objValue );", "+        setter.setValue( object, objValue );"]}]}