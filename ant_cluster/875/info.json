{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8b665436250831d5cb2a982492ae5de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "384b4914f8c52d98a70abd396ee6ae52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "fc7cfffc89d82da7426c14b0fcd48682b026a56d", "commitAfterChange": "1dfa5ca002e81a1b89dbfd0fdd172bad141b829a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private static CommandLauncher createCommandLauncher()", "signatureAfterChange": "     public void setVMLauncher(boolean useVMLauncher)", "diff": ["-    private static CommandLauncher createCommandLauncher()", "-    {", "-            return new Java13CommandLauncher();", "-            return new MacCommandLauncher(new CommandLauncher());", "-            return new WinNTCommandLauncher(new CommandLauncher());", "-                return new WinNTCommandLauncher(baseLauncher);", "-                return new ScriptCommandLauncher(\"bin/antRun.bat\", baseLauncher);", "-            return new ScriptCommandLauncher(\"bin/antRun\", new CommandLauncher());", "+     */", "+    public void setVMLauncher(boolean useVMLauncher) {", "+        this.useVMLauncher = useVMLauncher;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a8784dd3301cbf47ec68ce74e05149", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/DependentTargetChooser.java", "commitBeforeChange": "2ff201801b557593afe6cf9dcd4d4c4f4da65b39", "commitAfterChange": "cfa93603e73e635d31be01cdb31dc9959a5ea35c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void actionPerformed(ActionEvent e)", "signatureAfterChange": "         public void actionPerformed(ActionEvent e)", "diff": ["-            TargetsTableModel srcModel = (TargetsTableModel)_srcTable.getModel();", "-            TargetsTableModel dstModel = (TargetsTableModel)_dstTable.getModel();", "-            int srcRow = _srcTable.getSelectedRow();", "-            int dstRow = _dstTable.getSelectedRow();", "-                _target.setDepends( dstModel.getTargetsAsStringArray() );", "+                _target.setDepends( ((SelectableTargetsTableModel)_targetsTable.getModel()).getSelectedTargetsAsStringArray() );", "-            } else if (e.getSource()==_moveUp) {", "-                // Move dependent target up (one row)", "-                dstModel.moveTarget(dstRow, -1);", "-                _dstTable.getSelectionModel().setSelectionInterval(dstRow - 1, dstRow - 1);", "-            } else if (e.getSource()==_moveDown) {", "-                // Move dependent target down (one row)", "-                dstModel.moveTarget(dstRow, 1);", "-                _dstTable.getSelectionModel().setSelectionInterval(dstRow + 1, dstRow + 1);", "-            } else if (e.getSource()==_append) {", "-                // Append selected target to depends", "-                if (srcRow >= 0) dstModel.addTarget(srcModel.getTarget(srcRow));", "-            } else if (e.getSource()==_remove) {", "-                // Remove dependent target", "-                if (dstRow >= 0) dstModel.removeTarget(dstRow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e9fab3608eaae89ce2b123dc4a1a494", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Os.java", "commitBeforeChange": "a376c57ae162bb14f507c677767dfd8e6b3e7139", "commitAfterChange": "ab9f91736afcdd65e4ca1da6c627f4df71f5289a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        String osName = System.getProperty(\"os.name\").toLowerCase(Locale.US);", "-        String pathSep = System.getProperty(\"path.separator\");", "+        return isFamily(family);", "+    }", "-                return pathSep.equals(\";\");", "-                    && (!osName.startsWith(\"mac\") || osName.endsWith(\"x\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d97e9ffde0057a4194f57911256c77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "c75a494bd88e6e148918337dfb68d08013d973eb", "commitAfterChange": "54166cfaf09c222a4fc9bb2abd7719c6d452921e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public TarEntry(File file)", "signatureAfterChange": "     public TarEntry(File file)", "diff": ["-        String fileName = file.getPath();", "-        String osname = System.getProperty(\"os.name\").toLowerCase(Locale.US);", "-", "-        if (osname != null) {", "-", "-            // Strip off drive letters!", "-            // REVIEW Would a better check be \"(File.separator == '\\')\"?", "-", "-            if (osname.startsWith(\"windows\")) {", "-                if (fileName.length() > 2) {", "-                    char ch1 = fileName.charAt(0);", "-                    char ch2 = fileName.charAt(1);", "-", "-                    if (ch2 == ':'", "-                            && ((ch1 >= 'a' && ch1 <= 'z')", "-                                || (ch1 >= 'A' && ch1 <= 'Z'))) {", "-                        fileName = fileName.substring(2);", "-                    }", "-                }", "-            } else if (osname.indexOf(\"netware\") > -1) {", "-                int colon = fileName.indexOf(':');", "-                if (colon != -1) {", "-                    fileName = fileName.substring(colon + 1);", "-                }", "-            }", "-        }", "-", "-        fileName = fileName.replace(File.separatorChar, '/');", "-", "-        // No absolute pathnames", "-        // Windows (and Posix?) paths can start with \"\\\\NetworkDrive\\\",", "-        // so we loop on starting /'s.", "-        while (fileName.startsWith(\"/\")) {", "-            fileName = fileName.substring(1);", "-        }", "-", "+        String fileName = normalizeFileName(file.getPath());", "-            if (this.name.charAt(this.name.length() - 1) != '/') {", "+            int nameLength = name.length();", "+            if (nameLength == 0 || name.charAt(nameLength - 1) != '/') {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a002023fc975ce6fadedcc9dd90b911b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "ec4f3457422ecd2218feeb6181a56f6238b28144", "commitAfterChange": "4a2da130a89cb00a8b2170a9514e26b06f1f5725", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "diff": ["-        } else if ((assumeJava15() || assumeJava16() || assumeJava17() || assumeJava18())", "+        } else if (!assumeJava13() && !assumeJava14()", "-            if (t.equals(\"1.1\") || t.equals(\"1.2\") || t.equals(\"1.3\")", "-                || t.equals(\"1.4\")) {", "-                setImplicitSourceSwitch((assumeJava15() || assumeJava16())", "-                                        ? \"1.5 in JDK 1.5 and 1.6\"", "-                                        : (assumeJava17()", "-                                           ? \"1.7 in JDK 1.7\"", "-                                           : \"1.8 in JDK 1.8\"),", "-                                        cmd, t, s);", "-            } else if (assumeJava17() && (t.equals(\"1.5\") || t.equals(\"1.6\") || t.equals(\"5\") || t.equals(\"6\"))) {", "-                setImplicitSourceSwitch(\"1.7 in JDK 1.7\", cmd, t, t);", "-            } else if (assumeJava18() &&", "-                       (t.equals(\"1.5\") || t.equals(\"1.6\") || t.equals(\"1.7\")", "-                        || t.equals(\"5\") || t.equals(\"6\") || t.equals(\"7\"))) {", "-                setImplicitSourceSwitch(\"1.8 in JDK 1.8\", cmd, t, t);", "+            if (mustSetSourceForTarget(t)) {", "+                setImplicitSourceSwitch(cmd, t, s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b63579d240ce11e73dab8d52558e057d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "92ba08996fc4224f2653057f06bfc7fefb72a81b", "commitAfterChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String[] getCommandline()", "signatureAfterChange": "     public String[] getCommandline()", "diff": ["-        String[] commandLine = cmdl;", "-", "-        if (workingDirectory != null && ", "-            !antWorkingDirectory.equals(workingDirectory.getAbsolutePath()) &&", "-            !myos.equals(\"Mac OS\")) {", "-", "-            if (myos.toLowerCase().indexOf(\"windows\") >= 0 &&", "-                (myos.toLowerCase().indexOf(\"nt\") >= 0 ||", "-                 myos.indexOf(\"2000\") >= 0)) {", "-", "-                commandLine = new String[cmdl.length+5];", "-                commandLine[0] = \"cmd\";", "-                commandLine[1] = \"/c\";", "-                commandLine[2] = \"cd\";", "-                commandLine[3] = workingDirectory.getAbsolutePath();", "-                commandLine[4] = \"&&\";", "-                System.arraycopy(cmdl, 0, commandLine, 5, cmdl.length);", "-", "-            } else {", "-                commandLine = new String[cmdl.length+2];", "-                commandLine[0] = antRun;", "-                commandLine[1] = workingDirectory.getAbsolutePath();", "-                System.arraycopy(cmdl, 0, commandLine, 2, cmdl.length);", "-            }", "-        }", "-        ", "-        return commandLine;", "+        return cmdl;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ab00a60fd1c0c9c7af0b16e4b6be7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Os.java", "commitBeforeChange": "3c83a073444415028bdcb5acec910d7de1a90825", "commitAfterChange": "82cc947b9811486570e9a00853bf3b2f9b4d4f10", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static boolean isFamily(String family)", "signatureAfterChange": "     public static boolean isFamily(String family)", "diff": ["-        if (family != null) {", "-            if (family.equals(\"windows\")) {", "-                return osName.indexOf(\"windows\") > -1;", "-            } else if (family.equals(\"os/2\")) {", "-                return osName.indexOf(\"os/2\") > -1;", "-            } else if (family.equals(\"netware\")) {", "-                return osName.indexOf(\"netware\") > -1;", "-            } else if (family.equals(\"dos\")) {", "-                return pathSep.equals(\";\") && !isFamily(\"netware\");", "-            } else if (family.equals(\"mac\")) {", "-                return osName.indexOf(\"mac\") > -1;", "-            } else if (family.equals(\"unix\")) {", "-                return pathSep.equals(\":\")", "-                    && (!isFamily(\"mac\") || osName.endsWith(\"x\"));", "-            }", "-            throw new BuildException(\"Don\\'t know how to detect os family \\\"\"", "-                                     + family + \"\\\"\");", "-        }", "-        return false;", "+        return isOs(family, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e19a21bf4a1c54f3feaed6c3473f4d21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory.java", "commitBeforeChange": "964bac4fa40b3ab8ce7227d70d2abecf02cc2218", "commitAfterChange": "c5a945fe3c7f09577a7b3ad96953f2a09a8da824", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static RmicAdapter getRmic(String rmicType, Task task)         throws BuildException", "signatureAfterChange": "     public static RmicAdapter getRmic(String rmicType, Task task)         throws BuildException", "diff": ["+        return getRmic(rmicType, task, null);", "+    }", "-        return resolveClassName(rmicType);"]}]}