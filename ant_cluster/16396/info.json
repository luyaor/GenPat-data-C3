{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad1085a685e467384791ad5dc86c48a7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700629c6584476da778e98da1c038e6b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "0c25b6891413a3af1006c54d9d68459b1a5609b5", "commitAfterChange": "3fe578a16dfaae9a9bb1f24561e3bba6b9c88830", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private String[] patchEnvironment()", "signatureAfterChange": "     private String[] patchEnvironment()", "diff": ["+            String keyValue = env[i];", "-            String key = env[i].substring(0, env[i].indexOf('=') + 1);", "+            String key = keyValue.substring(0, keyValue.indexOf('=') + 1);", "+            // Find the key in the current enviroment copy", "+            // and remove it.", "-                if (environmentCaseInSensitive) {", "-                    osEnvItem = osEnvItem.toLowerCase();", "-                }", "-                if (osEnvItem.startsWith(key)) {", "+                String convertedItem = environmentCaseInSensitive", "+                    ? osEnvItem.toLowerCase() : osEnvItem;", "+                if (convertedItem.startsWith(key)) {", "+                    if (environmentCaseInSensitive) {", "+                        // Use the original casiness of the key", "+                        keyValue = osEnvItem.substring(0, key.length())", "+                            + keyValue.substring(key.length());", "+                    }", "-            osEnv.addElement(env[i]);", "+            // Add the key to the enviromnent copy", "+            osEnv.addElement(keyValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf9dc77cb57b6d472672a4ebe7bda9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "a500ff1e5013cbbb7830d5b47fa24dc4db1bc400", "commitAfterChange": "bcf84f5f14a9f80df80ca5836fc5b08d8be7c295", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static File getResourceSource(ClassLoader c, String resource)", "signatureAfterChange": "     public static File getResourceSource(ClassLoader c, String resource)", "diff": ["-            if (u.startsWith(\"jar:file:\")) {", "-                int pling = u.indexOf(\"!\");", "-                String jarName = u.substring(4, pling);", "-                return new File(fromURI(jarName));", "-            } else if (u.startsWith(\"file:\")) {", "-                int tail = u.indexOf(resource);", "-                String dirName = u.substring(0, tail);", "-                return new File(fromURI(dirName));", "+            try {", "+                if (u.startsWith(\"jar:file:\")) {", "+                    int pling = u.indexOf(\"!\");", "+                    String jarName = u.substring(4, pling);", "+                    return new File(fromURI(jarName));", "+                } else if (u.startsWith(\"file:\")) {", "+                    int tail = u.indexOf(resource);", "+                    String dirName = u.substring(0, tail);", "+                    return new File(fromURI(dirName));", "+                }", "+            } catch (IllegalArgumentException e) {", "+                //unable to determine the URI for reasons unknown.", "+                return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec147b2ad2be8be9be57d2da93a3737", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "c99b33079f5cd10abf44645de85729fe35b82cda", "commitAfterChange": "161579a6d082eac88d197ee70491745c54d48b92", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static String getClassLocation( Class clazz)", "signatureAfterChange": "      private static String getClassLocation( Class clazz)", "diff": ["-        try {", "-            java.net.URL url = clazz.getProtectionDomain().getCodeSource().getLocation();", "-            String location = url.toString();", "-            if (location.startsWith(\"jar\")) {", "-                url = ((java.net.JarURLConnection) url.openConnection()).getJarFileURL();", "-                location = url.toString();", "-            }", "-", "-            if (location.startsWith(\"file\")) {", "-                java.io.File file = new java.io.File(url.getFile());", "-                return file.getAbsolutePath();", "-            } else {", "-                return url.toString();", "-            }", "-        } catch (Throwable t) {", "-        }", "-        return null;", "+        File f = LoaderUtils.getClassSource(clazz);", "+        return f == null ? null : f.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1be79ef53ed2cc80e2e7169a629430d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LoaderUtils.java", "commitBeforeChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "commitAfterChange": "f3939727d9e11188d266beed7e9dfa8e2fd0bc9a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static File getResourceSource(ClassLoader c, String resource)", "signatureAfterChange": "     public static File getResourceSource(ClassLoader c, String resource)", "diff": ["-        FileUtils fileUtils = FileUtils.newFileUtils();", "-        ", "-        URL url = c.getResource(resource);", "-        if (url != null) {", "-            String u = url.toString();", "-            if (u.startsWith(\"jar:file:\")) {", "-                int pling = u.indexOf(\"!\");", "-                String jarName = u.substring(4, pling);", "-                return new File(fileUtils.fromURI(jarName));", "-            } else if (u.startsWith(\"file:\")) {", "-                int tail = u.indexOf(resource);", "-                String dirName = u.substring(0, tail);", "-                return new File(fileUtils.fromURI(dirName));", "-            }", "-        }", "-        return null;", "+        return normalizeSource(Locator.getResourceSource(c, resource));"]}]}