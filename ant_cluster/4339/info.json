{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fb96f75f9fcded56b38b90929682ba9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1d7f15c968015498334d6f421f5487", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "6b3d8a02956aad55938df6c7a1b2994a4acc5f6a", "commitAfterChange": "fe4a5cb02940376fddc661302141394be20d1f02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private static void configureTasks(Project project,                                        Target target,                                        Element targetElement)         throws BuildException", "signatureAfterChange": "          public void init(String tag, AttributeList attrs) throws SAXParseException", "diff": ["-    private static void configureTasks(Project project,", "-                                       Target target,", "-                                       Element targetElement)", "-        throws BuildException", "-    {", "-        NodeList list = targetElement.getChildNodes();", "-        for (int i = 0; i < list.getLength(); i++) {", "-            Node node = list.item(i);", "-            // right now, all we are interested in is element nodes", "-            // not quite sure what to do with others except drop 'em", "-            if (node.getNodeType() == Node.ELEMENT_NODE) {", "-                Element element = (Element)node;", "-                String taskType = element.getTagName();", "-                // XXX", "-                // put in some sanity checking", "+        public void init(String tag, AttributeList attrs) throws SAXParseException {", "+            task = project.createTask(tag);", "+            configure(task, attrs);", "+            task.setLocation(new Location(buildFile.toString(), locator.getLineNumber(), locator.getColumnNumber()));", "+            task.init();", "-                Task task = project.createTask(taskType);", "-", "-                // get the attributes of this element and reflect them", "-                // into the task", "-", "-                configure(project, task, element);", "-                task.init();", "+            // Top level tasks don't have associated targets", "+            if (target != null) {", "-", "-                processNestedProperties(project, task, element);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeed9c7cea7b1a7b82e11e29f6fdb48c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/VerifyJar.java", "commitBeforeChange": "d99445bb67a0feecbc78238c54ff468fc72d2315", "commitAfterChange": "4cf9ef09a97e2c53eacb9e629d8470ab856acc2c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        final boolean hasFileset = filesets.size() > 0;", "-        if (!hasJar && !hasFileset) {", "+        if (!hasJar && !hasResources()) {", "-            Vector sources = createUnifiedSources();", "-            for (int i = 0; i < sources.size(); i++) {", "-                FileSet fs = (FileSet) sources.elementAt(i);", "-                //get all included files in a fileset", "-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-                String[] jarFiles = ds.getIncludedFiles();", "-                File baseDir = fs.getDir(getProject());", "-", "-                //loop through all jars in the fileset", "-                for (int j = 0; j < jarFiles.length; j++) {", "-                    String jarFile = jarFiles[j];", "-                    File jarSource = new File(baseDir, jarFile);", "-                    verifyOneJar(jarSource);", "-                }", "+            Path sources = createUnifiedSourcePath();", "+            Iterator iter = sources.iterator();", "+            while (iter.hasNext()) {", "+                FileResource fr = (FileResource) iter.next();", "+                verifyOneJar(fr.getFile());"]}]}