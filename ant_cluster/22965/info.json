{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c9b88143c77b50ea5981b9ba623eca0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a949887a4d2c5d009477c4e0cb8504", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Os.java", "commitBeforeChange": "3348a18a7d1cbb552b3e2e09e86d2b4bfba19343", "commitAfterChange": "68c5a1567e0b16d4ba1ca4e41d4fa69984c934b7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private static boolean familyMatches( final String family )", "signatureAfterChange": "      private static boolean familyMatches( final String family )", "diff": ["-                isFamily = m_osName.indexOf( \"windows\" ) > -1;", "+                isFamily = OS_NAME.indexOf( \"windows\" ) > -1;", "-                isFamily = m_osName.indexOf( \"os/2\" ) > -1;", "+                isFamily = OS_NAME.indexOf( \"os/2\" ) > -1;", "-                isFamily = m_osName.indexOf( \"netware\" ) > -1;", "+                isFamily = OS_NAME.indexOf( \"netware\" ) > -1;", "-                isFamily = m_pathSep.equals( \";\" ) && !isFamily( \"netware\" );", "+                isFamily = PATH_SEP.equals( \";\" ) && !isFamily( \"netware\" );", "-                isFamily = m_osName.indexOf( \"mac\" ) > -1;", "+                isFamily = OS_NAME.indexOf( \"mac\" ) > -1;", "-                isFamily = m_pathSep.equals( \":\" ) &&", "-                    ( !isFamily( \"mac\" ) || m_osName.endsWith( \"x\" ) );", "+                isFamily = PATH_SEP.equals( \":\" ) &&", "+                    ( !isFamily( \"mac\" ) || OS_NAME.endsWith( \"x\" ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "341cba3188c398259de4b9b33a29d187", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJDoc.java", "commitBeforeChange": "7ffe5725b354fcb2af5eb239e2c7ab62adba41d6", "commitAfterChange": "bcc7e3dff34ce66d4f1af34c5d5fbb1603808210", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (target == null || !target.isFile()) {", "-            throw new BuildException(\"Invalid target: \" + target);", "+        if (targetFile == null || !targetFile.isFile()) {", "+            throw new BuildException(\"Invalid target: \" + targetFile);", "-        File javaFile = new File(createOutputFileName(target, outputFile,", "+        File javaFile = new File(createOutputFileName(targetFile, outputFile,", "-             && target.lastModified() < javaFile.lastModified()) {", "-            log(\"Target is already built - skipping (\" + target + \")\",", "+             && targetFile.lastModified() < javaFile.lastModified()) {", "+            log(\"Target is already built - skipping (\" + targetFile + \")\",", "-        cmdl.createArgument().setValue(target.getAbsolutePath());", "+        cmdl.createArgument().setValue(targetFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a868bfe358cd01538b10674830c5280", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/Xalan2Executor.java", "commitBeforeChange": "cc2236d797b597bf6f68b272f5af2c9cc7cc8d1a", "commitAfterChange": "2c3c58bb7f2cb9428f399cbad9b7c8dd0698dd09", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected String getProcVersion(String classNameImpl)         throws BuildException", "signatureAfterChange": "     protected String getProcVersion(String classNameImpl)         throws BuildException", "diff": ["+    /** {@inheritDoc}. */", "-            if (classNameImpl.equals(aPack + \"processor.TransformerFactoryImpl\")", "+            if (classNameImpl.equals(APAC + \"processor.TransformerFactoryImpl\")", "-                classNameImpl.equals(aPack + \"xslt.XSLTProcessorFactory\")) {", "-                return getXalanVersion(aPack + \"processor.XSLProcessorVersion\");", "+                classNameImpl.equals(APAC + \"xslt.XSLTProcessorFactory\")) {", "+                return getXalanVersion(APAC + \"processor.XSLProcessorVersion\");", "-            if (classNameImpl.equals(aPack", "+            if (classNameImpl.equals(APAC", "-                return getXSLTCVersion(aPack + \"xsltc.ProcessorVersion\");", "+                return getXSLTCVersion(APAC + \"xsltc.ProcessorVersion\");", "-                .equals(sPack + \"internal.xsltc.trax.TransformerFactoryImpl\")) {", "-                return getXSLTCVersion(sPack", "+                .equals(SPAC + \"internal.xsltc.trax.TransformerFactoryImpl\")) {", "+                return getXSLTCVersion(SPAC"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eacabbe513110a70d6fc9ab65eef370", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void bsW( int n, int v )         throws IOException", "signatureAfterChange": "      private void bsW( int n, int v )         throws IOException", "diff": ["-        while( bsLive >= 8 )", "+        while( m_bsLive >= 8 )", "-            int ch = ( bsBuff >> 24 );", "+            int ch = ( m_bsBuff >> 24 );", "-                bsStream.write( ch );// write 8-bit", "+                m_bsStream.write( ch );// write 8-bit", "-            bsBuff <<= 8;", "-            bsLive -= 8;", "-            bytesOut++;", "+            m_bsBuff <<= 8;", "+            m_bsLive -= 8;", "+            m_bytesOut++;", "-        bsBuff |= ( v << ( 32 - bsLive - n ) );", "-        bsLive += n;", "+        m_bsBuff |= ( v << ( 32 - m_bsLive - n ) );", "+        m_bsLive += n;"]}]}