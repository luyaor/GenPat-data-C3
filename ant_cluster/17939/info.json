{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16f5e2f363fcd98388b03260b6b888e1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb011a1fb11800e3d2a502bb5431840", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "26f6bfe2be0861267eca5624537b48daa7574dd6", "commitAfterChange": "8701272b2418d74536d09b289f118d1833d42217", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 18, "signatureBeforeChange": "       public void execute() throws BuildException", "signatureAfterChange": "       public void execute() throws BuildException", "diff": ["-        if (file == null && resource == null) {", "-", "-            // simple case - one definition", "-            if (name == null || value == null) {", "-                String msg = \"name or classname attributes of \"", "-                    + getTaskName() + \" element \"", "-                    + \"are undefined\";", "-                throw new BuildException(msg);", "+        if (!definerSet) {", "+            throw new BuildException(", "+                \"name, file or resource attribute of \"", "+                + getTaskName() + \" is undefined\", getLocation());", "+        }", "+        ", "+        if (name != null) {", "+            if (classname == null) {", "+                throw new BuildException(", "+                    \"classname attribute of \" + getTaskName() + \" element \"", "+                    + \"is undefined\", getLocation());", "-            addDefinition(al, name, value);", "-", "+            addDefinition(al, name, classname);", "+            if (classname != null) {", "+                String msg = \"You must not specify classname \"", "+                    + \"together with file or resource.\";", "+                throw new BuildException(msg, getLocation());", "+            }", "+            URL url = null;", "+            if (file != null) {", "+                url = fileToURL();", "+            }", "+            if (resource != null) {", "+                url = resourceToURL(al);", "+            }", "-            InputStream is = null;", "-            try {", "-                if (name != null || value != null) {", "-                    String msg = \"You must not specify name or value \"", "-                        + \"together with file or resource.\";", "-                    throw new BuildException(msg, getLocation());", "-                }", "+            if (url == null) {", "+                return;", "+            }", "-                if (file != null && resource != null) {", "-                    String msg = \"You must not specify both, file and \"", "-                        + \"resource.\";", "-                    throw new BuildException(msg, getLocation());", "-                }", "+            loadProperties(al, url);", "+        }", "+    }", "-                Properties props = new Properties();", "-                if (file != null) {", "-                    log(\"Loading definitions from file \" + file,", "-                        Project.MSG_VERBOSE);", "-                    is = new FileInputStream(file);", "-                    if (is == null) {", "-                        log(\"Could not load definitions from file \" + file", "-                            + \". It doesn\\'t exist.\", Project.MSG_WARN);", "-                    }", "-                }", "-                if (resource != null) {", "-                    log(\"Loading definitions from resource \" + resource,", "-                        Project.MSG_VERBOSE);", "-                    is = al.getResourceAsStream(resource);", "-                    if (is == null) {", "-                        log(\"Could not load definitions from resource \"", "-                            + resource + \". It could not be found.\",", "-                            Project.MSG_WARN);", "-                    }", "-                }", "-", "-                if (is != null) {", "-                    props.load(is);", "-                    Enumeration keys = props.keys();", "-                    while (keys.hasMoreElements()) {", "-                        String n = (String) keys.nextElement();", "-                        String v = props.getProperty(n);", "-                        addDefinition(al, n, v);", "-                    }", "-                }", "-            } catch (IOException ex) {", "-                throw new BuildException(ex, getLocation());", "-            } finally {", "-                if (is != null) {", "-                    try {", "-                        is.close();", "-                    } catch (IOException e) {}", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30158eb3c3c7e6ac6b368786ca89660", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "49f0cadf53584f85d31718f3413ea2c8fbf77274", "commitAfterChange": "94e18bdaaa70e6e4f333cae68ee7721e062b9807", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (file != null) {", "-                if (file.exists()) {", "-                    if (destFile == null) {", "-                        destFile = new File(destDir, file.getName());", "-                    }", "-                    if (forceOverwrite || !destFile.exists()", "-                        || (file.lastModified() - granularity", "-                                > destFile.lastModified())) {", "-                        fileCopyMap.put(file.getAbsolutePath(),", "-                                        new String[] {destFile.getAbsolutePath()});", "-                    } else {", "-                        log(file + \" omitted as \" + destFile", "-                            + \" is up to date.\", Project.MSG_VERBOSE);", "-                    }", "-                } else {", "-                    String message = \"Warning: Could not find file \"", "-                        + file.getAbsolutePath() + \" to copy.\";", "-                    if (!failonerror) {", "-                        log(message, Project.MSG_ERR);", "-                    } else {", "-                        throw new BuildException(message);", "-                    }", "-                }", "-            }", "+            copySingleFile();", "+", "-            Iterator iter = baseDirs.iterator();", "-            while (iter.hasNext()) {", "-                File f = (File) iter.next();", "-                List files = (List) filesByBasedir.get(f);", "-                List dirs = (List) dirsByBasedir.get(f);", "-", "-                String[] srcFiles = new String[0];", "-                if (files != null) {", "-                    srcFiles = (String[]) files.toArray(srcFiles);", "-                }", "-                String[] srcDirs = new String[0];", "-                if (dirs != null) {", "-                    srcDirs = (String[]) dirs.toArray(srcDirs);", "-                }", "-                scan(f == NULL_FILE_PLACEHOLDER ? null : f, destDir, srcFiles,", "-                     srcDirs);", "-            }", "+            iterateOverBaseDirs(baseDirs, dirsByBasedir, filesByBasedir);"]}]}