{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "592f79bd2ef8267c44c56629c0061e58", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6061422342f19692726a39c642013049", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/ccm/Continuus.java", "commitBeforeChange": "69cff8fa828c6ad507c770e5726aebe83668a722", "commitAfterChange": "b6410584b65289fce8b334f40163fa2b6203479d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected int run( final Commandline cmd, final ExecOutputHandler handler )         throws TaskException", "signatureAfterChange": "      protected void run( final Commandline cmd, final ExecOutputHandler handler )         throws TaskException", "diff": ["-    protected int run( final Commandline cmd, final ExecOutputHandler handler )", "+    protected void run( final Commandline cmd, final ExecOutputHandler handler )", "-        final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "-        final Execute exe = new Execute( execManager );", "+        final Execute exe = new Execute();", "-        return exe.execute();", "+        exe.setReturnCode( 0 );", "+        exe.execute( getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f1f90bf69fda8e86951464d31b6fd3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/vss/MSVSS.java", "commitBeforeChange": "69cff8fa828c6ad507c770e5726aebe83668a722", "commitAfterChange": "b6410584b65289fce8b334f40163fa2b6203479d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected int run( Commandline cmd )         throws TaskException", "signatureAfterChange": "      protected void run( final Commandline cmd )         throws TaskException", "diff": ["-    protected int run( Commandline cmd )", "+    protected void run( final Commandline cmd )", "-        final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "-        final Execute exe = new Execute( execManager );", "+        final Execute exe = new Execute();", "-        return exe.execute();", "+        exe.setReturnCode( 0 );", "+        exe.execute( getContext() );"]}]}