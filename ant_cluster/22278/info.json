{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aac38f43f55cfbbb93d4af4fc10a020d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "032ca64b16e2078e78739b56f4a90dc8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "d5bfb5609dde48b93877185c1f61067e009e8499", "commitAfterChange": "1ba5087df429abe38dd22fe5c9ddbc343280f0ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-\t", "-\tif( output != null ) {", "-\t    try {", "-\t\tPrintStream out=new PrintStream(new FileOutputStream(output));", "-\t\tp1.setOutput( out );", "-\t    } catch( IOException ex ) {", "-\t\tproject.log( \"Ant: Can't set output to \" + output );", "-\t    }", "-\t}", "-\tp1.setBasedir(dir);", "+        p1.setBasedir(dir);", "-\t// Override with local-defined properties", "-\tEnumeration e = properties.elements();", "+        // Override with local-defined properties", "+        Enumeration e = properties.elements();", "-\t    //\t    System.out.println(\"Setting \" + p.getName()+ \" \" + p.getValue());", "-\t    p.init();", "+            //\t    System.out.println(\"Setting \" + p.getName()+ \" \" + p.getValue());", "+            p.init();", "-\tif (antFile == null) antFile = dir + \"/build.xml\";", "+        if (antFile == null) antFile = dir + \"/build.xml\";", "-\tp1.setUserProperty( \"ant.file\" , antFile );", "+        p1.setUserProperty( \"ant.file\" , antFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920cd33366634ac7317e473ed7e9c987", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": " \tpublic void execute() throws BuildException", "diff": ["-     */", "-    public void execute() throws BuildException {", "-        if (filesets.size() == 0) {", "-            throw new BuildException(\"At least one fileset is required!\");", "-        }", "-        if (importProject == null || \"\".equals(importProject)) {", "-            throw new BuildException(\"The VisualAge for Java Project name is required!\");", "-        }", "-        vajproject = getVAJProject();", "-        if (vajproject == null) {", "-            try {", "-                vajproject = VAJUtil.getWorkspace().createProject(this.importProject, true);", "-            } catch (IvjException e) {", "-                throw VAJUtil.createBuildException( \"Error while creating Project \" + ", "-                                                    importProject + \": \", ", "-                                                    e ); ", "-            }", "-        }", "+\t */", "+\tpublic void execute() throws BuildException {", "+\t\tif (filesets.size() == 0) {", "+\t\t\tthrow new BuildException(\"At least one fileset is required!\");", "+\t\t}", "-        for (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "-            importFileset((FileSet) e.nextElement());", "-        }", "-    }", "+\t\tif (importProject == null || \"\".equals(importProject)) {", "+\t\t\tthrow new BuildException(\"The VisualAge for Java Project name is required!\");", "+\t\t}", "+\t\tfor (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "+\t\t\timportFileset((FileSet) e.nextElement());", "+\t\t}", "+\t}"]}]}