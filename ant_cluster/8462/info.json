{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f97d3b6f191e97bddd55613b3d98b55a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ab6d35fc3bf155b5099d43d1950804", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "43a69a7b6e52e95a4d65390f603e1fbe4ca8fcb9", "commitAfterChange": "3742656f6d8175a8004cfc7187801e84e2f7172d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["+        ByteArrayInputStream tis = null;", "-                ByteArrayInputStream tis = null;", "-                final Enumeration e = props.keys();", "-                while (e.hasMoreElements()) {", "-                    final String key = (String) e.nextElement();", "-                    final String value = props.getProperty(key);", "-                    if (key != null && value != null", "-                            && value.trim().length() > 0) {", "-                        getProject().setNewProperty(key, value);", "-                    }", "-                }", "-                tis.close();", "+", "+                Property propertyTask = ", "+                    (Property) getProject().createTask(\"property\");", "+                propertyTask.setTaskName(getTaskName());", "+                propertyTask.addProperties(props);", "+            try {", "+                if (tis != null) {", "+                    tis.close();", "+                }", "+            } catch (IOException ioex) {", "+                //ignore", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d26ce5ce3682a77e4f2dc548f8c88597", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java", "commitBeforeChange": "a6169fa4e0a767e97f8e8b9f6c451fa9174dc6d9", "commitAfterChange": "fa99b4cc4482aeeaf7b19b2372078d5f16998138", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            /**  Login if userid and password were specified */", "-            if (userid != null && password != null) {", "-                login(rexec);", "-            }", "-            /**  Process each sub command */", "-            Enumeration tasksToRun = rexecTasks.elements();", "-            while (tasksToRun != null && tasksToRun.hasMoreElements()) {", "-                RExecSubTask task = (RExecSubTask) tasksToRun.nextElement();", "-                if (task instanceof RExecRead && defaultTimeout != null) {", "-                    ((RExecRead) task).setDefaultTimeout(defaultTimeout);", "-                }", "-                task.execute(rexec);", "+            if (userid != null && password != null && command != null", "+                && rexecTasks.size() == 0) {", "+                // simple one-shot execution", "+                rexec.rexec(userid, password, command);", "+            } else {", "+                // need nested read/write elements", "+                handleMultipleTasks(rexec);", "-       } finally {", "+        } catch (IOException e) {", "+            throw new BuildException(\"Error r-executing command\", e);", "+        } finally {"]}]}