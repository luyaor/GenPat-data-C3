{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea21bfd661b181a8cc0f1523e7fb16a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6cbd64237f20a72a396bd27cf98faf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "1523b24a93d8e4b849afd938ab7eaffcb6031969", "commitAfterChange": "ce1af4647df3f1fab5344250d1751b334e774d77", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-                failureCause = e;", "-                throw e;", "+                ExecutionException ee =", "+                    new ExecutionException(e.getClass().getName() + \": \"", "+                     + e.getMessage(), e, model.getLocation());", "+                failureCause = ee;", "+                throw ee;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a7d73f1287e3f908ff6c2d06218543", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "1523b24a93d8e4b849afd938ab7eaffcb6031969", "commitAfterChange": "ce1af4647df3f1fab5344250d1751b334e774d77", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void createNestedElement(Reflector reflector, Object element,                                      BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void createNestedElement(AntLibFactory factory, Reflector reflector,                                      Object element, BuildElement model)          throws ExecutionException", "diff": ["-    private void createNestedElement(Reflector reflector, Object element,", "-                                     BuildElement model)", "+    private void createNestedElement(AntLibFactory factory, Reflector reflector,", "+                                     Object element, BuildElement model)", "-        Object nestedElement", "-             = reflector.createElement(element, nestedElementName);", "+            Object nestedElement", "+                 = reflector.createElement(element, nestedElementName);", "+            factory.registerCreatedElement(nestedElement);", "+                System.out.println(\"element is an execution component\");", "-                configureElement(nestedElement, model);", "+                configureElement(factory, nestedElement, model);", "-                configureElement(nestedElement, model);", "+                configureElement(factory, nestedElement, model);", "+        } catch (RuntimeException e) {", "+            throw new ExecutionException(e.getClass().getName() + \": \"", "+                 + e.getMessage(), e, model.getLocation());"]}]}