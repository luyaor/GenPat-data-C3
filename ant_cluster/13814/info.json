{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fadf879e395d8530bfc2b96c784daed4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ed899bf1b707b39df79e0b23e06e87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/image/ColorMapper.java", "commitBeforeChange": "f8c14ca446cbd22d0d9e633ff2b0a13a10ccd313", "commitAfterChange": "ff9b546d81da21c253e71319dc8a756380bac15c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static final Color getColorByName(String color_name)", "signatureAfterChange": "     public static Color getColorByName(String colorName)", "diff": ["-    public static final Color getColorByName(String color_name) {", "-        color_name = color_name.toLowerCase();", "+    public static Color getColorByName(String colorName) {", "+        colorName = colorName.toLowerCase();", "-        if (color_name.equals(COLOR_BLACK)) {", "+        if (colorName.equals(COLOR_BLACK)) {", "-        } else if (color_name.equals(COLOR_BLUE)) {", "+        } else if (colorName.equals(COLOR_BLUE)) {", "-        } else if (color_name.equals(COLOR_CYAN)) {", "+        } else if (colorName.equals(COLOR_CYAN)) {", "-        } else if (color_name.equals(COLOR_DARKGRAY) || color_name.equals(COLOR_DARKGREY)) {", "+        } else if (colorName.equals(COLOR_DARKGRAY) || colorName.equals(COLOR_DARKGREY)) {", "-        } else if (color_name.equals(COLOR_GRAY) || color_name.equals(COLOR_GREY)) {", "+        } else if (colorName.equals(COLOR_GRAY) || colorName.equals(COLOR_GREY)) {", "-        } else if (color_name.equals(COLOR_LIGHTGRAY) || color_name.equals(COLOR_LIGHTGREY)) {", "+        } else if (colorName.equals(COLOR_LIGHTGRAY) || colorName.equals(COLOR_LIGHTGREY)) {", "-        } else if (color_name.equals(COLOR_GREEN)) {", "+        } else if (colorName.equals(COLOR_GREEN)) {", "-        } else if (color_name.equals(COLOR_MAGENTA)) {", "+        } else if (colorName.equals(COLOR_MAGENTA)) {", "-        } else if (color_name.equals(COLOR_ORANGE)) {", "+        } else if (colorName.equals(COLOR_ORANGE)) {", "-        } else if (color_name.equals(COLOR_PINK)) {", "+        } else if (colorName.equals(COLOR_PINK)) {", "-        } else if (color_name.equals(COLOR_RED)) {", "+        } else if (colorName.equals(COLOR_RED)) {", "-        } else if (color_name.equals(COLOR_WHITE)) {", "+        } else if (colorName.equals(COLOR_WHITE)) {", "-        } else if (color_name.equals(COLOR_YELLOW)) {", "+        } else if (colorName.equals(COLOR_YELLOW)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebae0328e6233a06c961b30cd4faaf3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Os.java", "commitBeforeChange": "89847cdf7d0bfd13dc1431e1e7128ea587550c4b", "commitAfterChange": "a643eaf19bd0fdb7640e07ae1c1e44e537ae2e66", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public static boolean isOs(String family, String name, String arch,                                String version)", "signatureAfterChange": "     public static boolean isOs(String family, String name, String arch,                                String version)", "diff": ["-                    isFamily = osName.indexOf(\"windows\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"windows\") > -1;", "-                    isFamily = osName.indexOf(\"os/2\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"os/2\") > -1;", "-                    isFamily = osName.indexOf(\"netware\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"netware\") > -1;", "-                    isFamily = pathSep.equals(\";\") && !isFamily(\"netware\");", "+                    isFamily = PATH_SEP.equals(\";\") && !isFamily(\"netware\");", "-                    isFamily = osName.indexOf(\"mac\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"mac\") > -1;", "-                    isFamily = osName.indexOf(\"nonstop_kernel\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"nonstop_kernel\") > -1;", "-                    isFamily = pathSep.equals(\":\")", "+                    isFamily = PATH_SEP.equals(\":\")", "-                        && (!isFamily(\"mac\") || osName.endsWith(\"x\"));", "+                        && (!isFamily(\"mac\") || OS_NAME.endsWith(\"x\"));", "-                        && (osName.indexOf(\"95\") >= 0", "-                            || osName.indexOf(\"98\") >= 0", "-                            || osName.indexOf(\"me\") >= 0", "-                            || osName.indexOf(\"ce\") >= 0);", "+                        && (OS_NAME.indexOf(\"95\") >= 0", "+                            || OS_NAME.indexOf(\"98\") >= 0", "+                            || OS_NAME.indexOf(\"me\") >= 0", "+                            || OS_NAME.indexOf(\"ce\") >= 0);", "-                    isFamily = osName.indexOf(\"z/os\") > -1", "-                        || osName.indexOf(\"os/390\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"z/os\") > -1", "+                        || OS_NAME.indexOf(\"os/390\") > -1;", "-                    isFamily = osName.indexOf(\"os/400\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"os/400\") > -1;", "-                    isFamily = osName.indexOf(\"openvms\") > -1;", "+                    isFamily = OS_NAME.indexOf(\"openvms\") > -1;", "-                isName = name.equals(osName);", "+                isName = name.equals(OS_NAME);", "-                isArch = arch.equals(osArch);", "+                isArch = arch.equals(OS_ARCH);", "-                isVersion = version.equals(osVersion);", "+                isVersion = version.equals(OS_VERSION);"]}]}