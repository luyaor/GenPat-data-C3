{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1939f646e04ca3ec2165a2de3d4b38e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f0ba11e0c60adc58770b2192f8bf5da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void testUserPropertyWinsNoInheritAll()", "signatureAfterChange": "      @Test     public void testUserPropertyWinsNoInheritAll()", "diff": ["+    @Test", "-        getProject().setUserProperty(\"test\", \"7\");", "-        expectLogContaining(\"test-property-override-no-inheritall-start\",", "-                            \"The value of test is 7\");", "+        buildRule.getProject().setUserProperty(\"test\", \"7\");", "+        buildRule.executeTarget(\"test-property-override-no-inheritall-start\");", "+", "+        AntAssert.assertContains(\"The value of test is 7\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48a18c8bf4c7e15d3a0113dde1d4d0c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testSimpleScaleWithMapper()", "signatureAfterChange": "      @Test     public void testSimpleScaleWithMapper()", "diff": ["+    @Test", "-        expectLogContaining(\"testSimpleScaleWithMapper\", \"Processing File\");", "-        File f = new File(getOutputDir(), \"scaled-\" + LARGEIMAGE);", "+        buildRule.executeTarget(\"testSimpleScaleWithMapper\");", "+        AntAssert.assertContains(\"Processing File\", buildRule.getLog());", "+        File f = new File(buildRule.getOutputDir(), \"scaled-\" + LARGEIMAGE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525549ca2e4216a0b98c84b3f4794fae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void testUserPropertyWinsInheritAll()", "signatureAfterChange": "      @Test     public void testUserPropertyWinsInheritAll()", "diff": ["+    @Test", "-        getProject().setUserProperty(\"test\", \"7\");", "-        expectLogContaining(\"test-property-override-inheritall-start\",", "-                            \"The value of test is 7\");", "+        buildRule.getProject().setUserProperty(\"test\", \"7\");", "+        buildRule.executeTarget(\"test-property-override-inheritall-start\");", "+", "+        AntAssert.assertContains(\"The value of test is 7\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7557cb995c4ba29ea0f05ddf8e2249", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AbstractCvsTaskTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testPackageAttribute()", "signatureAfterChange": "      @Test     public void testPackageAttribute()", "diff": ["+", "+    @Test", "-        File f = new File(getProject().getProperty(\"output\") + \"/src/Makefile\");", "+        File f = new File(buildRule.getProject().getProperty(\"output\") + \"/src/Makefile\");", "-        expectLogContaining(\"package-attribute\", \"U src/Makefile\");", "+        buildRule.executeTarget(\"package-attribute\");", "+        AntAssert.assertContains(\"U src/Makefile\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13f57472ceacd15c70e612a4f576a76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testSimpleScale()", "signatureAfterChange": "      @Test     public void testSimpleScale()", "diff": ["+    @Test", "-        expectLogContaining(\"testSimpleScale\", \"Processing File\");", "-        File f = new File(getOutputDir(), LARGEIMAGE);", "+        buildRule.executeTarget(\"testSimpleScale\");", "+        AntAssert.assertContains(\"Processing File\", buildRule.getLog());", "+", "+        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d287f69c6a2ca8a999dfa368fd61f57c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AbstractCvsTaskTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testTagAttribute()", "signatureAfterChange": "      @Test     public void testTagAttribute()", "diff": ["+    @Test", "-        File f = new File(getProject().getProperty(\"output\") + \"/src/Makefile\");", "+        File f = new File(buildRule.getProject().getProperty(\"output\") + \"/src/Makefile\");", "-        expectLogContaining(\"tag-attribute\", \"OPENBSD_5_3\");", "+        buildRule.executeTarget(\"tag-attribute\");", "+        AntAssert.assertContains(\"OPENBSD_5_3\", buildRule.getLog());"]}]}