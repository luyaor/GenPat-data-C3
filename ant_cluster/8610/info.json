{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78c59950ead0bc9ff18a33802eb555ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298d6c1b06b1f55c964e129642da83c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/frontend/FrontendUtils.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static AntConfig getAntConfigFile(File configFile)          throws ConfigException, FileNotFoundException", "signatureAfterChange": "     public static AntConfig getAntConfigFile(File configFile)          throws FrontendException, FileNotFoundException", "diff": ["-         throws ConfigException, FileNotFoundException {", "+         throws FrontendException, FileNotFoundException {", "-            throw new ConfigException(\"Unable to form URL to read config from \"", "-                 + configFile, e);", "+            throw new FrontendException(\"Unable to form URL to read \"", "+                + \"config from \" + configFile, e);", "-            throw new ConfigException(\"Unable to parse config file from \"", "-                 + configFile, e);", "+            throw new FrontendException(\"Unable to parse config file from \"", "+                 + configFile, e, e.getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5774a43acf4340fe209734057a4fcf29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void addBuildListeners(ExecutionManager execManager)          throws ConfigException", "signatureAfterChange": "     protected void addBuildListeners(Frame eventSource)          throws FrontendException", "diff": ["-    protected void addBuildListeners(ExecutionManager execManager)", "-         throws ConfigException {", "+    protected void addBuildListeners(Frame eventSource)", "+         throws FrontendException {", "-        execManager.addBuildListener(logger);", "+        eventSource.addBuildListener(logger);", "-                execManager.addBuildListener(listener);", "+                eventSource.addBuildListener(listener);", "-                throw new ConfigException(\"Unable to instantiate listener \"", "+                throw new FrontendException(\"Unable to instantiate listener \"", "-                throw new ConfigException(\"Unable to instantiate listener \"", "+                throw new FrontendException(\"Unable to instantiate listener \""]}]}