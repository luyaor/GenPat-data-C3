{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "916a4f96b06304c9e8e9e9337684dca8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0711980a0debd00cf1e2d488612b8c6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Property.java", "commitBeforeChange": "2f4b71ebb9a0b10e189a803e3ad565302736d060", "commitAfterChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-            final Object object = getContext().resolveValue( value );", "+            ", "+            Object object = null;", "+", "+            try { object = getContext().resolveValue( value ); }", "+            catch( final AntException ae )", "+            {", "+                throw new ConfigurationException( \"Error resolving value: \" + value, ae );", "+            }", "-                throw new AntException( \"Value for attribute \" + name + \"resolved to null\" );", "+                throw new ConfigurationException( \"Value for attribute \" + name + \"resolved to null\" );", "-                setValue( object );", "+                try { setValue( object ); }", "+                catch( final AntException ae )", "+                {", "+                    throw new ConfigurationException( \"Error setting value: \" + value, ae );", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0af16c3bf30e77251b963b4e8c8c4ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "b25ce96904f9a4ab9d757913186d23ec1a0ac6c9", "commitAfterChange": "86a183cc1fc7fa465d192916e0ce97b99fc0cfc4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private URL resourceToURL(ClassLoader classLoader)", "signatureAfterChange": "      private Enumeration resourceToURLs(ClassLoader classLoader)", "diff": ["-    private URL resourceToURL(ClassLoader classLoader) {", "-        URL ret = classLoader.getResource(resource);", "-        if (ret == null) {", "+    private Enumeration/*<URL>*/ resourceToURLs(ClassLoader classLoader) {", "+        Enumeration ret;", "+        try {", "+            ret = classLoader.getResources(resource);", "+        } catch (IOException e) {", "+            throw new BuildException(", "+                \"Could not fetch resources named \" + resource,", "+                e, getLocation());", "+        }", "+        if (!ret.hasMoreElements()) {"]}]}