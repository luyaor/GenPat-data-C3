{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af298310079fcadfb512b076c6a2ad65", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "910c137939f42449a966a97a48ca6a2a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java", "commitBeforeChange": "d66e29f62b09b97f4d2d47cd7ee6442ddf41770d", "commitAfterChange": "314a73ff1e695e7d262dbd5dc226ccbacf8f84c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-        if( ! (source instanceof File) )", "+        if (!(source instanceof File)) {", "-        File buildFile=(File)source;", "+        }", "+        File buildFile = (File)source;", "+            ", "-                uri = uri.substring(0, index) + \"%23\" + uri.substring(index+1);", "+                uri = uri.substring(0, index) + \"%23\" + uri.substring(index + 1);", "-            project.log(\"parsing buildfile \" + buildFile + \" with URI = \" + uri, Project.MSG_VERBOSE);", "+            project.log(\"parsing buildfile \" + buildFile + \" with URI = \" ", "+                + uri, Project.MSG_VERBOSE);", "-        }", "-        catch(ParserConfigurationException exc) {", "+        } catch (ParserConfigurationException exc) {", "-        }", "-        catch(SAXParseException exc) {", "+        } catch (SAXParseException exc) {", "-                new Location(buildFile.toString(), exc.getLineNumber(), exc.getColumnNumber());", "+                new Location(buildFile.toString(), exc.getLineNumber(), ", "+                    exc.getColumnNumber());", "-        }", "-        catch(SAXException exc) {", "+        } catch (SAXException exc) {", "-        }", "-        catch(FileNotFoundException exc) {", "+        } catch (FileNotFoundException exc) {", "-        }", "-        catch(IOException exc) {", "+        } catch (IOException exc) {", "-        }", "-        finally {", "+        } finally {", "-                }", "-                catch (IOException ioe) {", "+                } catch (IOException ioe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe688d824ae3c53afcd67f02780871d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "d3ce4da4f14e4068b23b223fa70388f5e6da170c", "commitAfterChange": "03b6e25418f4b94cbb94e191d23d8ab0ba7b8f6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-        project.addDataTypeDefinition( \"systemPath\" , SystemPath.class );", "+        try {", "+            Class c=Class.forName(\"org.apache.tools.ant.types.SystemPath\");", "+            project.addDataTypeDefinition( \"systemPath\" , c );", "+        } catch (Exception ex ) {", "+        }", "-            if (parserFactory == null) {", "-                parserFactory = SAXParserFactory.newInstance();", "-            }", "-", "-            SAXParser saxParser = parserFactory.newSAXParser();", "-            parser =saxParser.getXMLReader();", "+            parser =JAXPUtils.getXMLReader();", "-        }", "-        catch(ParserConfigurationException exc) {", "-            throw new BuildException(\"Parser has not been configured correctly\", exc);", "-        }", "-        catch(SAXParseException exc) {", "+        } catch(SAXParseException exc) {", "-                new Location(context.buildFile.toString(), exc.getLineNumber(), exc.getColumnNumber());", "+                new Location(exc.getSystemId(), exc.getLineNumber(), exc.getColumnNumber());", "+        catch(UnsupportedEncodingException exc) {", "+              throw new BuildException(\"Encoding of project file is invalid.\",exc);", "+        }", "-            throw new BuildException(\"Error reading project file\", exc);", "+            throw new BuildException(\"Error reading project file: \" +exc.getMessage(), exc);"]}]}