{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3070d3fbbbf707ac59171c53699722cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360949fcdfea2e7c44c1ac4524b4d286", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "ca77bf7cd306d07ef1a37b97a97b1de17f07f701", "commitAfterChange": "d09fc12e5806f0129b029350af8e7b75ab8743fe", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void runCommand( final CommandlineJava cmdline )         throws TaskException", "signatureAfterChange": "      private void runCommand( final CommandlineJava cmdline )         throws TaskException", "diff": ["-        try", "-        {", "-            getLogger().debug( cmdline.toString() );", "-            final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "-            final Execute exe = new Execute( execManager );", "-            final String[] commandline = cmdline.getCommandline();", "-            exe.setCommandline( new Commandline( commandline ) );", "-            int retval = exe.execute();", "-            if( retval != 0 )", "-            {", "-                throw new TaskException( cmdline + \" failed with return code \" + retval );", "-            }", "-        }", "-        catch( final IOException ioe )", "-        {", "-            throw new TaskException( \"Could not launch \" + cmdline + \": \" + ioe );", "-        }", "+        getLogger().debug( cmdline.toString() );", "+        final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "+        final Execute exe = new Execute( execManager );", "+        final String[] commandline = cmdline.getCommandline();", "+        exe.setCommandline( new Commandline( commandline ) );", "+        exe.setReturnCode( 0 );", "+        exe.execute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6b853f008510ed1b94f0d1d35ce4cb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "ca77bf7cd306d07ef1a37b97a97b1de17f07f701", "commitAfterChange": "d09fc12e5806f0129b029350af8e7b75ab8743fe", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void runCommand( final CommandlineJava cmdline )         throws TaskException", "signatureAfterChange": "      private void runCommand( final CommandlineJava cmdline )         throws TaskException", "diff": ["-        try", "-        {", "-            getLogger().debug( cmdline.toString() );", "-            final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "-            final Execute exe = new Execute( execManager );", "-            final String[] commandline = cmdline.getCommandline();", "-            exe.setCommandline( new Commandline( commandline ) );", "-            int retval = exe.execute();", "-            if( retval != 0 )", "-            {", "-                throw new TaskException( cmdline + \" failed with return code \" + retval );", "-            }", "-        }", "-        catch( final IOException ioe )", "-        {", "-            throw new TaskException( \"Could not launch \" + cmdline + \": \" + ioe );", "-        }", "+        getLogger().debug( cmdline.toString() );", "+        final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "+        final Execute exe = new Execute( execManager );", "+        final String[] commandline = cmdline.getCommandline();", "+        exe.setCommandline( new Commandline( commandline ) );", "+        exe.setReturnCode( 0 );", "+        exe.execute();"]}]}