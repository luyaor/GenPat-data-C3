{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ef140958513281aab2430cadff4e705", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "175d8a195217dac9ecc904d2c2d4fc8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "e72340e0a1f68e91bb515aeb4dcad300a14c6434", "commitAfterChange": "9361281f36fe9a45067848d2ae8465befb2f3dd1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "signatureAfterChange": "     private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "diff": ["-        org.apache.tools.ant.taskdefs.ExecTask execTask = null;", "-        File java2iiopOut = null;", "-        try {", "-            java2iiopOut = File.createTempFile(\"java2iiop\",\"log\");", "-            log(\" iiop log file : \"+ java2iiopOut ,Project.MSG_DEBUG);", "+        Execute execTask = null;", "-            execTask = (ExecTask) getTask().getProject().createTask(\"exec\");", "-            execTask.setOutput(java2iiopOut);", "-            if ( java2iiopdebug ) {", "-                execTask.createArg().setValue(\"-VBJdebug\");                ", "-            } // end of if ()", "-                       ", "-            execTask.setDir(getConfig().srcDir);", "-            execTask.setExecutable(JAVA2IIOP);", "-            //set the classpath ", "-            execTask.createArg().setValue(\"-VBJclasspath\");", "-            execTask.createArg().setPath(getCombinedClasspath());", "-            //list file", "-            execTask.createArg().setValue(\"-list_files\");", "-            //no TIE classes", "-            execTask.createArg().setValue(\"-no_tie\");", "-            //root dir", "-            execTask.createArg().setValue(\"-root_dir\");", "-            execTask.createArg().setValue(getConfig().srcDir.getAbsolutePath());", "-            //compiling order", "-            execTask.createArg().setValue(\"-compile\");", "-            //add the home class", "-            while ( ithomes.hasNext()) {", "-                execTask.createArg().setValue(ithomes.next().toString());                ", "-            } // end of while ()", "+        execTask = new Execute(this);", "+        Project project = getTask().getProject();", "+        execTask.setAntRun(project);", "+        execTask.setWorkingDirectory(project.getBaseDir());", "+        ", "+        Commandline commandline = new Commandline();", "+        commandline.setExecutable(JAVA2IIOP);", "+        //debug ?", "+        if ( java2iiopdebug ) {", "+            commandline.createArgument().setValue(\"-VBJdebug\");                ", "+        } // end of if ()", "+        //set the classpath ", "+        commandline.createArgument().setValue(\"-VBJclasspath\");", "+        commandline.createArgument().setPath(getCombinedClasspath());", "+        //list file", "+        commandline.createArgument().setValue(\"-list_files\");", "+        //no TIE classes", "+        commandline.createArgument().setValue(\"-no_tie\");", "+        //root dir", "+        commandline.createArgument().setValue(\"-root_dir\");", "+        commandline.createArgument().setValue(getConfig().srcDir.getAbsolutePath());", "+        //compiling order", "+        commandline.createArgument().setValue(\"-compile\");", "+        //add the home class", "+        while ( ithomes.hasNext()) {", "+            commandline.createArgument().setValue(ithomes.next().toString());                ", "+        } // end of while ()", "+", "+        try {", "-            execTask.execute();", "+            log(commandline.toString(),Project.MSG_DEBUG);", "+            execTask.setCommandline(commandline.getCommandline());", "+            int result = execTask.execute();", "+            if ( result != 0 ) {", "+                String msg = \"Failed executing java2iiop (ret code is \"+result+\")\";", "+                throw new BuildException(msg, getTask().getLocation());", "+            }                       ", "-        catch (Exception e) {", "-            // Have to catch this because of the semantics of calling main()", "-            String msg = \"Exception while calling java2iiop. Details: \" + e.toString();", "-            throw new BuildException(msg, e);", "-        }", "-", "-        try {", "-            FileReader fr = new FileReader(java2iiopOut);", "-            LineNumberReader lnr = new LineNumberReader(fr);", "-            String javafile;", "-            while ( ( javafile = lnr.readLine()) != null) {", "-                if ( javafile.endsWith(\".java\") ) {", "-                    String classfile = toClassFile(javafile);", "-                    ", "-                    String key = classfile.substring(getConfig().srcDir.getAbsolutePath().length()+1);", "-                    log(\" generated : \"+ classfile ,Project.MSG_DEBUG);", "-                    log(\" key       : \"+ key       ,Project.MSG_DEBUG);", "-                    files.put(key, new File(classfile));                                           ", "-                } // end of if ()                ", "-            } // end of while ()", "-            lnr.close();            ", "-        }", "-        catch(Exception e) {", "-            String msg = \"Exception while parsing  java2iiop output. Details: \" + e.toString();", "-            throw new BuildException(msg, e);", "-        }", "-", "-        //delete the output , only if all is succesfull", "-        java2iiopOut.delete();", "+        catch (java.io.IOException e) {", "+            log(\"java2iiop exception :\"+e.getMessage(),Project.MSG_ERR);", "+            throw new BuildException(e,getTask().getLocation());", "+        }            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "543e47efce57a66add9ed171ba92dcc5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "86029316faa68d77a37eab0a07714c5bd2dd46e1", "commitAfterChange": "f923ab50f9caea6910391d866039acd889f99077", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        cmd.setExecutable(\"javadoc\");", "+        Commandline toExecute = (Commandline)cmd.clone();", "+        toExecute.setExecutable(\"javadoc\");", "-            cmd.createArgument().setValue(\"-classpath\");", "-            cmd.createArgument().setPath(classpath);", "-            cmd.createArgument().setValue(\"-sourcepath\");", "-            cmd.createArgument().setPath(sourcePath);", "+            toExecute.createArgument().setValue(\"-classpath\");", "+            toExecute.createArgument().setPath(classpath);", "+            toExecute.createArgument().setValue(\"-sourcepath\");", "+            toExecute.createArgument().setPath(sourcePath);", "-            cmd.createArgument().setValue(\"-classpath\");", "-            cmd.createArgument().setValue(sourcePath.toString() +", "+            toExecute.createArgument().setValue(\"-classpath\");", "+            toExecute.createArgument().setValue(sourcePath.toString() +", "-            cmd.createArgument().setValue(\"-version\");", "+            toExecute.createArgument().setValue(\"-version\");", "-            cmd.createArgument().setValue(\"-author\");", "+            toExecute.createArgument().setValue(\"-author\");", "-                    cmd.createArgument().setValue(\"-doclet\");", "-                    cmd.createArgument().setValue(doclet.getName());", "+                    toExecute.createArgument().setValue(\"-doclet\");", "+                    toExecute.createArgument().setValue(doclet.getName());", "-                        cmd.createArgument().setValue(\"-docletpath\");", "-                        cmd.createArgument().setPath(doclet.getPath());", "+                        toExecute.createArgument().setValue(\"-docletpath\");", "+                        toExecute.createArgument().setPath(doclet.getPath());", "-                        cmd.createArgument().setValue(param.getName());", "+                        toExecute.createArgument().setValue(param.getName());", "-                            cmd.createArgument().setValue(param.getValue());", "+                            toExecute.createArgument().setValue(param.getValue());", "-                cmd.createArgument().setValue(\"-bootclasspath\");", "-                cmd.createArgument().setPath(bootclasspath);", "+                toExecute.createArgument().setValue(\"-bootclasspath\");", "+                toExecute.createArgument().setPath(bootclasspath);", "-                        cmd.createArgument().setValue(\"-linkoffline\");", "-                        cmd.createArgument().setValue(la.getHref());", "-                        cmd.createArgument().setValue(packageListLocation);", "+                        toExecute.createArgument().setValue(\"-linkoffline\");", "+                        toExecute.createArgument().setValue(la.getHref());", "+                        toExecute.createArgument().setValue(packageListLocation);", "-                        cmd.createArgument().setValue(\"-link\");", "-                        cmd.createArgument().setValue(la.getHref());", "+                        toExecute.createArgument().setValue(\"-link\");", "+                        toExecute.createArgument().setValue(la.getHref());", "-                    cmd.createArgument().setValue(\"-group\");", "-                    cmd.createArgument().setValue(name);", "-                    cmd.createArgument().setValue(pkgList);", "+                    toExecute.createArgument().setValue(\"-group\");", "+                    toExecute.createArgument().setValue(name);", "+                    toExecute.createArgument().setValue(pkgList);", "-                    cmd.createArgument().setValue(\"-group\");", "-                    cmd.createArgument().setValue(title);", "-                    cmd.createArgument().setValue(packages);", "+                    toExecute.createArgument().setValue(\"-group\");", "+                    toExecute.createArgument().setValue(title);", "+                    toExecute.createArgument().setValue(packages);", "-                    cmd.createArgument().setValue(name);", "+                    toExecute.createArgument().setValue(name);", "-                evaluatePackages(sourcePath, packages);", "+                evaluatePackages(toExecute, sourcePath, packages);", "-                cmd.createArgument().setValue(tok.nextToken().trim());", "+                toExecute.createArgument().setValue(tok.nextToken().trim());", "-            cmd.createArgument().setValue(\"@\" + packageList);", "+            toExecute.createArgument().setValue(\"@\" + packageList);", "-        log(\"Javadoc args: \" + cmd, Project.MSG_VERBOSE);", "+        log(\"Javadoc args: \" + toExecute, Project.MSG_VERBOSE);", "-            exe.setCommandline(cmd.getCommandline());", "+            exe.setCommandline(toExecute.getCommandline());"]}]}