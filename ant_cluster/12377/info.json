{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41149e0823fee8bcf5aae6ec597d300d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d027e31688f065f11135c746714f8690", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "d16eabe443005885baa17713017934136b8b22cf", "commitAfterChange": "6d857af2bf5078df3560a1092405b8f3245abb19", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     protected boolean haveBootclasspath(boolean log)", "signatureAfterChange": "     protected boolean haveBootclasspath(boolean log)", "diff": ["-        if (bootclasspath != null", "-            && bootclasspath.toString().trim().length() > 0) {", "-", "-            if (!bootclasspath.toString()", "-                .equals(bootclasspath.concatSystemClasspath(\"ignore\")", "-                        .toString())) {", "-                if (log) {", "-                    bootclasspath.log(\"Ignoring bootclasspath as \"", "-                                       + \"build.sysclasspath has been set.\");", "-                }", "-            } else if (vmVersion.startsWith(\"1.1\")) {", "-                if (log) {", "-                    bootclasspath.log(\"Ignoring bootclasspath as \"", "-                                       + \"the target VM doesn't support it.\");", "-                }", "-            } else {", "-                return true;", "-            }", "-        }", "-        return false;", "+        return calculateBootclasspath(log).size() > 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc9c1bd4f5442a862b4191d086911b2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "dd59f330e28468c67b69a1d4e352f4e5bafcb27f", "commitAfterChange": "a5a1cf23953be08f91c28840a830e295eb7b171c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "diff": ["-        boolean renamed = true;", "-        if ((getFilterSets() != null && getFilterSets().size() > 0)", "-            || (getFilterChains() != null && getFilterChains().size() > 0)) {", "-            renamed = false;", "-        } else {", "-            if (!filtering) {", "-                // ensure that parent dir of dest file exists!", "-                File parent = destFile.getParentFile();", "-                if (parent != null && !parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-", "-                if (destFile.exists()) {", "-                    if (sourceFile.isDirectory()) {", "-                     throw new BuildException(", "-                        new StringBuffer(\"Cannot replace \").append(", "-                        ((destFile.isFile()) ? \"file \" : \"directory \")).append(", "-                        destFile).append(\" with directory \").append(", "-                        sourceFile).toString());", "-                    } else if (destFile.isFile() && !destFile.delete()) {", "-                        throw new BuildException(\"Unable to remove existing \"", "-                                                 + \"file \" + destFile);", "-                    }", "-                }", "-                renamed = sourceFile.renameTo(destFile);", "-            } else {", "-                renamed = false;", "+        boolean renamed = false;", "+        if ((getFilterSets().size() + getFilterChains().size() == 0)", "+            && !(filtering || destFile.isDirectory())) {", "+            // ensure that parent dir of dest file exists!", "+            File parent = destFile.getParentFile();", "+            if (parent != null && !parent.exists()) {", "+                parent.mkdirs();", "+            if (destFile.isFile() && !destFile.delete()) {", "+                throw new BuildException(\"Unable to remove existing \"", "+                                         + \"file \" + destFile);", "+            }", "+            renamed = sourceFile.renameTo(destFile);"]}]}