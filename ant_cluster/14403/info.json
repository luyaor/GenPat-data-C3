{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26391da62f1b5d7c86277cafdcd5aee9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3b6185b4003c63656e8d3fbf2c90fba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ParallelTest.java", "commitBeforeChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "commitAfterChange": "2d0707e1315f5b49ed01c4476f79ccd1c57ff2f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testDemux()", "signatureAfterChange": "     public void testDemux()", "diff": ["-        Project project = getProject();", "-        project.addTaskDefinition(\"demuxtest\", DemuxOutputTask.class);", "+        Project p = getProject();", "+        p.addTaskDefinition(\"demuxtest\", DemuxOutputTask.class);", "-        System.setOut(new PrintStream(new DemuxOutputStream(project, false)));", "-        System.setErr(new PrintStream(new DemuxOutputStream(project, true)));", "+        System.setOut(new PrintStream(new DemuxOutputStream(p, false)));", "+        System.setErr(new PrintStream(new DemuxOutputStream(p, true)));", "-            project.executeTarget(\"testDemux\");", "+            p.executeTarget(\"testDemux\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb85dc25b478ea0b75a5303e8cc409f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/XmlPropertyTest.java", "commitBeforeChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "commitAfterChange": "2d0707e1315f5b49ed01c4476f79ccd1c57ff2f1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void doTest(String msg, boolean keepRoot, boolean collapse,                         boolean semantic, boolean include, boolean localRoot)", "signatureAfterChange": "     private void doTest(String msg, boolean keepRoot, boolean collapse,                         boolean semantic, boolean include, boolean localRoot)", "diff": ["-                Project project = new Project();", "+                Project p = new Project();", "-                xmlproperty.setProject(project);", "+                xmlproperty.setProject(p);", "-                project.setNewProperty(\"override.property.test\", \"foo\");", "+                p.setNewProperty(\"override.property.test\", \"foo\");", "-                //printProperties(project.getProperties());", "+                //printProperties(p.getProperties());", "-                ensureProperties(msg, inputFile, workingDir, project, props);", "-                ensureReferences(msg, inputFile, project.getReferences());", "+                ensureProperties(msg, inputFile, workingDir, p, props);", "+                ensureReferences(msg, inputFile, p.getReferences());"]}]}