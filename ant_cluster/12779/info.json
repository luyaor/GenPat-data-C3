{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a46fdefc9911d257318bbbed7302901", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18585b3611a807f4ec2e8518a43b03fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectBuilder.java", "commitBeforeChange": "32dc44001f1d8348ce37d9b551feab8158e7b35f", "commitAfterChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Project build( final File file, final Configuration configuration )         throws IOException, AntException, ConfigurationException", "signatureAfterChange": "     protected Project build( final File file, final Configuration configuration )         throws IOException, AntException, ConfigurationException", "diff": ["-        final String projectName = configuration.getAttribute( \"name\" );", "+", "+        //Ignore Project name in the future ok??", "+        //final String projectName = configuration.getAttribute( \"name\" );", "-        getLogger().debug( \"Project \" + projectName + \" base directory: \" + baseDirectory );", "+        getLogger().debug( \"Project \" + file + \" base directory: \" + baseDirectory );", "-", "-        //setup basic context of project", "-        final TaskContext context = project.getContext();", "-        context.setProperty( TaskContext.BASE_DIRECTORY, baseDirectory );", "-        context.setProperty( Project.PROJECT_FILE, file );", "-        context.setProperty( Project.PROJECT, projectName );", "+        project.setBaseDirectory( baseDirectory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d141bd1b21470249c53f965ef0b507", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "commitAfterChange": "15f44e67b5df552231f6afcaa71495b289c44b15", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-        final ProjectBuilder builder = embeddor.getProjectBuilder();", "-", "-        final Project project = builder.build( buildFile );", "-", "-        final ProjectManager manager = embeddor.getProjectManager();", "-        manager.addProjectListener( listener );", "+        final Project project = ", "+            embeddor.createProject( buildFile.toString(), null, null );", "-            final TaskContext context = new DefaultTaskContext();", "+            final ProjectManager manager = ", "+                embeddor.createProjectManager( project, m_defines );", "+            manager.addProjectListener( listener );", "-            //Add CLI m_defines", "-            addToContext( context, m_defines );", "-", "-            //Add system properties second so that they overide user-defined properties", "-            addToContext( context, System.getProperties() );", "-", "-            context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-            context.setProperty( Project.PROJECT_FILE, buildFile );", "-            //context.setProperty( Project.PROJECT, project.getName() );", "-", "-            doBuild( manager, project, context, m_targets );", "+            doBuild( manager, project, m_targets );"]}]}