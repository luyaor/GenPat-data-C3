{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a45a683b58698695ca7c8e0529aa5c7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdb511a6a4ff9df7302602be68ceddc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private boolean checkClass( String classname )", "signatureAfterChange": "      private boolean checkClass( String classname )", "diff": ["-            if( loader != null )", "-            {", "-                loader.loadClass( classname );", "-            }", "-            else", "-            {", "-                ClassLoader l = this.getClass().getClassLoader();", "-                // Can return null to represent the bootstrap class loader.", "-                // see API docs of Class.getClassLoader.", "-                if( l != null )", "-                {", "-                    l.loadClass( classname );", "-                }", "-                else", "-                {", "-                    Class.forName( classname );", "-                }", "-            }", "+            final ClassLoader classLoader = getClassLoader();", "+            classLoader.loadClass( classname );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6c8da8912b3a352c047e85a653ceb0f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java", "commitBeforeChange": "0d63880cccc77def418c52f41cfdef4f57a8c5fe", "commitAfterChange": "26a42bd2034a7ecb1e5bd0f0dfbd179a2185502a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Reader getAssembledReader() throws BuildException", "signatureAfterChange": "     public Reader getAssembledReader() throws BuildException", "diff": ["+            boolean success = false;", "+            try {", "-                                clazz = Class.forName(className, true, al);", "+                                clazz = Class.forName(className, true, al);", "+            success = true;", "+            } finally {", "+                if (!success && classLoadersToCleanUp.size() > 0) {", "+                    cleanUpClassLoaders(classLoadersToCleanUp);", "+                }", "+            }", "-                        for (Iterator it = classLoadersToCleanUp.iterator();", "-                             it.hasNext(); ) {", "-                            ((AntClassLoader) it.next()).cleanup();", "-                        }", "+                        cleanUpClassLoaders(classLoadersToCleanUp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ea056de1f299c97ae093dca9c0e5fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private boolean checkClass( String classname )", "signatureAfterChange": "      private boolean checkClass( String classname )", "diff": ["-            if( loader != null )", "-            {", "-                loader.loadClass( classname );", "-            }", "-            else", "-            {", "-                ClassLoader l = this.getClass().getClassLoader();", "-                // Can return null to represent the bootstrap class loader.", "-                // see API docs of Class.getClassLoader.", "-                if( l != null )", "-                {", "-                    l.loadClass( classname );", "-                }", "-                else", "-                {", "-                    Class.forName( classname );", "-                }", "-            }", "+            final ClassLoader classLoader = getClassLoader();", "+            classLoader.loadClass( classname );"]}]}