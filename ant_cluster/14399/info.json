{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28d45f6d1488392637848491987023f8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "802634968e125ac688fb0f7655f0f4e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "126daf8b31f6c01d1c6891581195db9956142970", "commitAfterChange": "a898d14776143b295b706a5e38a2f979e753356d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["+        cmd.createArgument().setValue(\"logtestlistenerevents=true\"); // #31885", "-        Execute execute = new Execute(new LogStreamHandler(this,", "-                                                           Project.MSG_INFO,", "-                                                           Project.MSG_WARN),", "+        Execute execute = new Execute(new JUnitLogStreamHandler(this,", "+                                                                Project.MSG_INFO,", "+                                                                Project.MSG_WARN),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b200d049048d32584bc3867dc3139f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "394d5011e34f6f5346e752348c12a24508f09fe6", "commitAfterChange": "79f24fd579a41a9c6a82611e7b9210c0113187da", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["+        cmd.createArgument().setValue(Constants.OUTPUT_TO_FORMATTERS", "+                                      + String.valueOf(outputToFormatters));", "+        ", "-        Execute execute = new Execute(new JUnitLogStreamHandler(this,", "-                                                                Project.MSG_INFO,", "-                                                                Project.MSG_WARN),", "-                                      watchdog);", "+        Execute execute = new Execute(", "+            new JUnitLogStreamHandler(", "+                this,", "+                Project.MSG_INFO,", "+                Project.MSG_WARN),", "+            watchdog);"]}]}