{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ea47c3159218f69fef55dbf6d20f8ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e874c95a33f29348cb45ce144fa6187", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/KaffeRmic.java", "commitBeforeChange": "eca527f22bfff2af0e9b57e1c10e6f25424fe653", "commitAfterChange": "6cfcccdb388eea1af2b53c208e382b3c0d5c9be4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public boolean execute() throws BuildException", "signatureAfterChange": "       public boolean execute() throws BuildException", "diff": ["+        cmd.setExecutable(c.getName());", "+            getRmic().log(Commandline.describeCommand(cmd));", "-        getRmic().log(\"Using: \" + c.getName());", "-        getRmic().log(Commandline.describeCommand(cmd));", "-", "-        try {", "-            Constructor cons = c.getConstructor(new Class[] {String[].class});", "-            Object rmic = cons.newInstance(new Object[] {cmd.getArguments()});", "-            Method doRmic = c.getMethod(\"run\", (Class[]) null);", "-            Boolean ok = (Boolean) doRmic.invoke(rmic, (Object[]) null);", "-", "-            return ok.booleanValue();", "-        } catch (BuildException ex) {", "-            //rethrow", "-            throw ex;", "-        } catch (Exception ex) {", "-            //wrap", "-           throw new BuildException(\"Error starting Kaffe rmic: \",", "-                                    ex, getRmic().getLocation());", "-        }", "+        ExecuteJava ej = new ExecuteJava();", "+        ej.setJavaCommand(cmd);", "+        return ej.fork(getRmic()) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe51265a5b13f6a21835c5e0700a215", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "3ae69e82c33e0e03941387a3506561accc2697d3", "commitAfterChange": "1e962d0d6d74a53709e9cff40a0c6422d27ec3bf", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": "     private ResourceCollection getResources()", "signatureAfterChange": "     private ResourceCollection getResources()", "diff": ["+        if (dest != null) {", "+            Intersect checkDestNotInSources = new Intersect();", "+            checkDestNotInSources.setProject(getProject());", "+            checkDestNotInSources.add(rc);", "+            checkDestNotInSources.add(dest);", "+            if (checkDestNotInSources.size() > 0) {", "+                throw new BuildException(\"Destination resource \" + dest", "+                        + \" was specified as an input resource.\");", "+            }", "+        }", "-        }", "-        if (destinationFile != null) {", "-            for (Iterator i = rc.iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof FileProvider) {", "-                    File f = ((FileProvider) o).getFile();", "-                    if (FILE_UTILS.fileNameEquals(f, destinationFile)) {", "-                        throw new BuildException(\"Input file \\\"\"", "-                            + f + \"\\\" is the same as the output file.\");", "-                    }", "-                }", "-            }"]}]}