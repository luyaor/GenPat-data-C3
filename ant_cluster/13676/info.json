{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4335310a5adb84af9ccf02e7c33e25b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47090d9a903746acb93dd17b12326db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testClasspath()", "signatureAfterChange": "      @Test     public void testClasspath() throws IOException, TransformerException, SAXException", "diff": ["-    public void testClasspath() {", "+    @Test", "+    public void testClasspath() throws IOException, TransformerException, SAXException {", "-        try {", "-            InputSource result = catalog.resolveEntity(publicId,", "-                                                       \"nap:chemical+brothers\");", "-            assertNotNull(result);", "-            String resultStr = new URL(result.getSystemId()).getFile();", "-            assertTrue(toURLString(dtdFile).endsWith(resultStr));", "-        } catch (Exception e) {", "-            fail(\"resolveEntity() failed!\" + e.toString());", "-        }", "+        InputSource isResult = catalog.resolveEntity(publicId,", "+                                                   \"nap:chemical+brothers\");", "+        assertNotNull(isResult);", "+        String resultStr1 = new URL(isResult.getSystemId()).getFile();", "+        assertTrue(toURLString(dtdFile).endsWith(resultStr1));", "-        try {", "-            Source result = catalog.resolve(uri, null);", "-            assertNotNull(result);", "-            String resultStr = new URL(result.getSystemId()).getFile();", "-            assertTrue(toURLString(xmlFile).endsWith(resultStr));", "-        } catch (Exception e) {", "-            fail(\"resolve() failed!\" + e.toString());", "-        }", "+        Source result = catalog.resolve(uri, null);", "+        assertNotNull(result);", "+        String resultStr = new URL(result.getSystemId()).getFile();", "+        assertTrue(toURLString(xmlFile).endsWith(resultStr));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe169ca3e968b5193f0dfd23eca6918f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testNestedCatalog()", "signatureAfterChange": "      @Test     public void testNestedCatalog() throws IOException, SAXException, TransformerException", "diff": ["-    public void testNestedCatalog() {", "+    @Test", "+    public void testNestedCatalog() throws IOException, SAXException, TransformerException {", "-        try {", "-            InputSource result = catalog1.resolveEntity(publicId,", "-                                                        \"nap:chemical+brothers\");", "-            assertNotNull(result);", "-            assertEquals(toURLString(dtdFile),", "-                         result.getSystemId());", "-        } catch (Exception e) {", "-            fail(\"resolveEntity() failed!\" + e.toString());", "-        }", "+        InputSource isResult = catalog1.resolveEntity(publicId,", "+                                                    \"nap:chemical+brothers\");", "+        assertNotNull(isResult);", "+        assertEquals(toURLString(dtdFile),", "+                     isResult.getSystemId());", "-        try {", "-            Source result = catalog.resolve(uri, null);", "-            assertNotNull(result);", "-            assertEquals(toURLString(xmlFile),", "-                         result.getSystemId());", "-        } catch (Exception e) {", "-            fail(\"resolve() failed!\" + e.toString());", "-        }", "+        Source result = catalog.resolve(uri, null);", "+        assertNotNull(result);", "+        assertEquals(toURLString(xmlFile),", "+                     result.getSystemId());"]}]}