{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8d08eb12130cc87b2b183b1a26acfd6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f78c5db97a4e5f523f39ccb335a665", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "f87b5ed7757c30daca5cf875c95520a00dce2269", "commitAfterChange": "010a31e84477b60ff536725b388b38323540dcca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-            getLogger().debug( \"Configuring \" + object );", "+            getLogger().debug( message );", "-                getLogger().debug( \"Configuring object via Configurable interface\" );", "+                getLogger().debug( message );", "+            // Let the object configure itself", "+            // Locate the configurer for this object", "+            final ObjectConfigurer configurer = getConfigurer( object.getClass() );", "+", "+            // Set each of the attributes", "-                if( DEBUG )", "-                {", "-                    final String message = REZ.getString( \"configure-attribute.notice\", name, value );", "-                    getLogger().debug( message );", "-                }", "-", "-                configureAttribute( object, name, value, context );", "+                // Set the attribute", "+                setAttribute( configurer, object, name, value, context );", "-            final Configuration[] children = configuration.getChildren();", "+            // Set the text content", "+            final String content = configuration.getValue( null );", "+            if( null != content && content.length() > 0 )", "+            {", "+                setContent( configurer, object, content, context );", "+            }", "+            // Create and configure each of the child elements", "+            final Configuration[] children = configuration.getChildren();", "-                final Configuration child = children[ i ];", "-", "-                if( DEBUG )", "-                {", "-                    final String message =", "-                        REZ.getString( \"configure-subelement.notice\", child.getName() );", "-                    getLogger().debug( message );", "-                }", "-", "-                configureElement( object, child, context );", "+                final Configuration childConfig = children[ i ];", "+                configureElement( configurer, object, childConfig, context );", "+        }", "+    }", "-            final String content = configuration.getValue( null );", "-            if( null != content )", "-            {", "-                if( !content.trim().equals( \"\" ) )", "-                {", "-                    if( DEBUG )", "-                    {", "-                        final String message =", "-                            REZ.getString( \"configure-content.notice\", content );", "-                        getLogger().debug( message );", "-                    }", "-                    configureContent( object, content, context );", "-                }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdca22c63de7029fb1d23db0eef2fa77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "be938b1e8fe6d68aec358cb6982c7d70fe827886", "commitAfterChange": "ef420c53bf5756a4e14afb47a54cef25e01017a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object getService( final Class serviceClass )         throws TaskException", "signatureAfterChange": "     public Object getService( final Class serviceClass )         throws TaskException", "diff": ["-        if( m_componentManager.hasComponent( name ) )", "+        if( m_serviceManager != null && m_serviceManager.hasService( serviceClass ) )", "-                final Component service = m_componentManager.lookup( name );", "-                if( !serviceClass.isInstance( service ) )", "-                {", "-                    final String message =", "-                        REZ.getString( \"bad-service-class.error\",", "-                                       name,", "-                                       service.getClass().getName(),", "-                                       serviceClass.getName() );", "-                    throw new TaskException( message );", "-                }", "-", "-                return service;", "+                return m_serviceManager.getService( serviceClass );", "-            catch( final ComponentException ce )", "+            catch( final ServiceException se )", "-                final String message = REZ.getString( \"bad-find-service.error\", name );", "-                throw new TaskException( message, ce );", "+                throw new TaskException( se.getMessage(), se );"]}]}