{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0538a8ab340b0167b5f587e2a3e69469", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215ac9357bdfc12099f20c140f65c2ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void startAnt(String[] args, Properties additionalUserProperties,                          ClassLoader coreLoader)", "signatureAfterChange": "     @Override \tpublic void startAnt(final String[] args, final Properties additionalUserProperties,                          final ClassLoader coreLoader)", "diff": ["-    public void startAnt(String[] args, Properties additionalUserProperties,", "-                         ClassLoader coreLoader) {", "+    @Override", "+\tpublic void startAnt(final String[] args, final Properties additionalUserProperties,", "+                         final ClassLoader coreLoader) {", "-        } catch (Throwable exc) {", "+        } catch (final Throwable exc) {", "-            for (Enumeration<?> e = additionalUserProperties.keys();", "+            for (final Enumeration<?> e = additionalUserProperties.keys();", "-                String key = (String) e.nextElement();", "-                String property = additionalUserProperties.getProperty(key);", "+                final String key = (String) e.nextElement();", "+                final String property = additionalUserProperties.getProperty(key);", "-            } catch (ExitStatusException ese) {", "+            } catch (final ExitStatusException ese) {", "-        } catch (BuildException be) {", "+        } catch (final BuildException be) {", "-        } catch (Throwable exc) {", "+        } catch (final Throwable exc) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8fa9ecc503c42eed01233ce54cb477f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     @Override \tpublic void run()", "diff": ["-    public void run() {", "+    @Override", "+\tpublic void run() {", "-        ByteArrayOutputStream errStrm = new ByteArrayOutputStream();", "-        ByteArrayOutputStream outStrm = new ByteArrayOutputStream();", "+        final ByteArrayOutputStream errStrm = new ByteArrayOutputStream();", "+        final ByteArrayOutputStream outStrm = new ByteArrayOutputStream();", "-                } catch (NoSuchMethodException e) {", "+                } catch (final NoSuchMethodException e) {", "-                    } catch (ClassNotFoundException e) {", "+                    } catch (final ClassNotFoundException e) {", "-                       if (!containsTests( testClass, junit4)) {", "+                       if (!containsTests(testClass, junit4)) {", "-                            TestSuite testSuite = new TestSuite(testClass.getName());", "+                            final TestSuite testSuite = new TestSuite(testClass.getName());", "-            } catch (Throwable e) {", "+            } catch (final Throwable e) {", "-            long start = System.currentTimeMillis();", "+            final long start = System.currentTimeMillis();", "-                        int[] cnts = findJUnit4FailureErrorCount(res);", "+                        final int[] cnts = findJUnit4FailureErrorCount(res);", "-                } catch (OutOfMemoryError ex) {", "+                } catch (final OutOfMemoryError ex) {", "-                } catch (OutOfMemoryError ex) {", "+                } catch (final OutOfMemoryError ex) {"]}]}