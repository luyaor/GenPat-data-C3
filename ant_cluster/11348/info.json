{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24850566323206baf30795b058096c3c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd5988ea40e4343317f998bf8dbb11b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "a94ef2aa3bc2c2129b8cbe32eb41ef4f21023284", "commitAfterChange": "1e7d5dd17be982cf12c4b326b38d52977208cc2c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public int executeAsForked(CommandlineJava commandline,                                ExecuteWatchdog watchdog) throws BuildException", "signatureAfterChange": "     public int executeAsForked(CommandlineJava commandline,                                ExecuteWatchdog watchdog) throws BuildException", "diff": ["+        runtimeClasses = new Path(getProject());", "+        addClasspathEntry(\"/jdepend/textui/JDepend.class\");", "+", "+        }", "+", "+        if (includeRuntime) {", "+            Vector v = Execute.getProcEnvironment();", "+            Enumeration e = v.elements();", "+            while (e.hasMoreElements()) {", "+                String s = (String) e.nextElement();", "+                if (s.startsWith(\"CLASSPATH=\")) {", "+                    commandline.createClasspath(getProject()).createPath()", "+                        .append(new Path(getProject(),", "+                                         s.substring(\"CLASSPATH=\".length()", "+                                                     )));", "+                }", "+            }", "+            log(\"Implicitly adding \" + runtimeClasses + \" to CLASSPATH\",", "+                Project.MSG_VERBOSE);", "+            commandline.createClasspath(getProject()).createPath()", "+                .append(runtimeClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96970ceea4417229480f2a0e9fe6869", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1266e53bd199e68ea11ce1bcf38b58d8fc1ea0a1", "commitAfterChange": "3ef74849efee36e856e6a1a37199a13ee15499a6", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["-        if (includeAntRuntime) {", "-            Vector v = Execute.getProcEnvironment();", "-            Enumeration e = v.elements();", "-            while (e.hasMoreElements()) {", "-                String s = (String) e.nextElement();", "-                if (s.startsWith(CLASSPATH)) {", "-                    cmd.createClasspath(getProject()).createPath()", "-                        .append(new Path(getProject(),", "-                                         s.substring(CLASSPATH.length()", "-                                                     )));", "-                }", "-            }", "-            log(\"Implicitly adding \" + antRuntimeClasses + \" to CLASSPATH\",", "-                Project.MSG_VERBOSE);", "-            cmd.createClasspath(getProject()).createPath()", "-                .append(antRuntimeClasses);", "-        }", "+        checkIncludeAntRuntime(cmd);", "-        if (summary) {", "-            String prefix = \"\";", "-            if (\"withoutanderr\".equalsIgnoreCase(summaryValue)) {", "-                prefix = \"OutErr\";", "-            }", "-            cmd.createArgument()", "-                .setValue(Constants.FORMATTER", "-                          + \"org.apache.tools.ant.taskdefs.optional.junit.\"", "-                          + prefix + \"SummaryJUnitResultFormatter\");", "-        }", "+        checkIncludeSummary(cmd);"]}]}