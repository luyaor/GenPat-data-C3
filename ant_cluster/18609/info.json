{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ea518dbc4d851ec7b7e41ffd59e03e9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05141884c9c63481c8713e0064693744", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 23, "signatureBeforeChange": "         public String getAttributeValue(String attributeName)", "signatureAfterChange": "         public String getAttributeValue(String attributeName)", "diff": ["-            Object attribute = attributes.get(attributeName.toLowerCase());", "+            Attribute attribute = getAttribute(attributeName.toLowerCase());", "-            if (attribute instanceof Attribute) {", "-                return ((Attribute)attribute).getValue();", "-            }", "-            else {", "-                String value = \"\";", "-                for (Enumeration e = ((Vector)attribute).elements(); e.hasMoreElements();) {", "-                    Attribute classpathAttribute = (Attribute)e.nextElement();", "-                    value += classpathAttribute.getValue() + \" \";", "-                }", "-                return value.trim();", "-            }", "+            return attribute.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f2a1a443f0c4837e0f62d46577530ca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "b2b649d12de2918643d1aa910f194df3be345df9", "commitAfterChange": "781a2ed11e930ead82864bf494d4d3c0b3e945f8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        PropertyHelper propertyHelper =", "-            PropertyHelper.getPropertyHelper(getProject());", "-        propertyHelper.enterLocalPropertyScope();", "-        for (Iterator i = macroDef.getLocalProperties().values().iterator();", "-             i.hasNext();) {", "-            MacroDef.LocalPropertyElement el = (MacroDef.LocalPropertyElement) i.next();", "-            propertyHelper.addLocalProperty(el.getName(), null);", "-        }", "-", "-            propertyHelper.exitLocalPropertyScope();"]}]}