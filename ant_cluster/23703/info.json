{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d6d61d6adb20cd8c59770c6097f8d5a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb4aab14792ff9643f40dac2d734143", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "signatureAfterChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "diff": ["+        String ifCondition = target.getIfCondition();", "+        String unlessCondition = target.getUnlessCondition();", "+        ", "+        if (ifCondition != null) {", "+            ifCondition = dataService.replacePropertyRefs(ifCondition.trim());", "+            if (!isDataValueSet(ifCondition)) {", "+                return;", "+            }", "+        }", "+        ", "+        if (unlessCondition != null) {", "+            unlessCondition ", "+                = dataService.replacePropertyRefs(unlessCondition.trim());", "+            if (isDataValueSet(unlessCondition)) {", "+                return;", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87789e893d4e06c48a314a660a3fa619", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "e7de779f7c1e189f3d1528d0b26b5af5613648c0", "commitAfterChange": "944aa460d4c23ae00ef6ead10666d67b9db82a6c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void start(String[] args, Properties additionalUserProperties,                              ClassLoader coreLoader)", "signatureAfterChange": "     public static void start(String[] args, Properties additionalUserProperties,                              ClassLoader coreLoader)", "diff": ["-        } catch(Throwable exc) {", "+        } catch (Throwable exc) {", "-            for (Enumeration e = additionalUserProperties.keys(); e.hasMoreElements(); ) {", "+            for (Enumeration e = additionalUserProperties.keys();", "+                    e.hasMoreElements();) {", "-        ", "+", "-        } catch(Throwable exc) {", "+        } catch (Throwable exc) {", "+        } finally {", "+            if (isLogFileUsed) {", "+                if (out != null) {", "+                    try {", "+                        out.close();", "+                    } catch (final Exception e) {", "+                        //ignore", "+                    }", "+                }", "+                if (err != null) {", "+                    try {", "+                        err.close();", "+                    } catch (final Exception e) {", "+                        //ignore", "+                    }", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbee2da1d02fb5260db0b5e64021638e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/ActionManager.java", "commitBeforeChange": "113069f80d96fff735116abb27b70951799106fc", "commitAfterChange": "9996345251656eb38c5326fa7e5f394bc5f43882", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Command getActionCommand(String actionID, AppContext context)", "signatureAfterChange": "     public Command getActionCommand(String actionID,                                     AppContext context,                                     EventObject event)", "diff": ["-    public Command getActionCommand(String actionID, AppContext context) {", "+    public Command getActionCommand(String actionID,", "+                                    AppContext context,", "+                                    EventObject event) {", "-                    Constructor ctor =", "+                    Constructor ctor = ", "-                    // XXX log me.", "-                    ex.printStackTrace();", "+                    try {", "+                        Constructor ctor = clazz.getConstructor(", "+                            COMMAND_CTOR_PARAMS_WITH_EVENT);", "+                        retval = (Command) ctor.newInstance(", "+                            new Object[] { context, event });", "+                    }", "+                    catch (Exception ex2) {", "+                        // XXX log me.", "+                        ex.printStackTrace();", "+                    }"]}]}