{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cc09f37a66c10543910522110154684", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1211cf217a846bc3a6d64150c31bd5f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "b25ce96904f9a4ab9d757913186d23ec1a0ac6c9", "commitAfterChange": "86a183cc1fc7fa465d192916e0ce97b99fc0cfc4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            URL url = null;", "+            Enumeration/*<URL>*/ urls = null;", "-                url = fileToURL();", "-            }", "-            if (resource != null) {", "-                url = resourceToURL(al);", "-            }", "-", "-            if (url == null) {", "-                return;", "-            }", "-", "-            if (url.toString().toLowerCase(Locale.US).endsWith(\".xml\")) {", "-                format = Format.XML;", "-            }", "-", "-            if (format == Format.PROPERTIES) {", "-                loadProperties(al, url);", "+                final URL url = fileToURL();", "+                urls = new Enumeration() {", "+                    private boolean more = true;", "+                    public boolean hasMoreElements() {", "+                        return more;", "+                    }", "+                    public Object nextElement() throws NoSuchElementException {", "+                        if (more) {", "+                            more = false;", "+                            return url;", "+                        } else {", "+                            throw new NoSuchElementException();", "+                        }", "+                    }", "+                };", "-                loadAntlib(al, url);", "+                urls = resourceToURLs(al);", "+            }", "+", "+            while (urls.hasMoreElements()) {", "+                URL url = (URL) urls.nextElement();", "+", "+                int format = this.format;", "+                if (url.toString().toLowerCase(Locale.US).endsWith(\".xml\")) {", "+                    format = Format.XML;", "+                }", "+", "+                if (format == Format.PROPERTIES) {", "+                    loadProperties(al, url);", "+                } else {", "+                    loadAntlib(al, url);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0410d71278c4300a6f76ba6a310ee0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "476678d4a660bd6077ae4a8389cc29f42fbde0c9", "commitAfterChange": "69cd05e0f91f554bc045a9f9d6549c70dd5f27c1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value) throws BuildException", "signatureAfterChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value) throws BuildException", "diff": ["-            if (element instanceof DynamicConfiguratorNS) {", "-                DynamicConfiguratorNS dc = (DynamicConfiguratorNS) element;", "-                String uriPlusPrefix =", "-                    ProjectHelper.extractUriFromComponentName(attributeName);", "-                String uri =", "-                    ProjectHelper.extractUriFromComponentName(uriPlusPrefix);", "-                String localName =", "-                    ProjectHelper.extractNameFromComponentName(attributeName);", "-                String qName = (\"\".equals(uri)", "-                                ? localName : (uri + \":\" + localName));", "-", "-                dc.setDynamicAttribute(uri, localName, qName, value);", "-                return;", "-            } else if (element instanceof DynamicConfigurator) {", "+//            if (element instanceof DynamicConfiguratorNS) {", "+//                DynamicConfiguratorNS dc = (DynamicConfiguratorNS) element;", "+//                String uriPlusPrefix =", "+//                    ProjectHelper.extractUriFromComponentName(attributeName);", "+//                String uri =", "+//                    ProjectHelper.extractUriFromComponentName(uriPlusPrefix);", "+//                String localName =", "+//                    ProjectHelper.extractNameFromComponentName(attributeName);", "+//                String qName = (\"\".equals(uri)", "+//                                ? localName : (uri + \":\" + localName));", "+//", "+//                dc.setDynamicAttribute(uri, localName, qName, value);", "+//                return;", "+//            } else ", "+            if (element instanceof DynamicConfigurator) {"]}]}