{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a5548be10f2f4fe210bf3101f2a2747", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16943535b5305fbc361ece8176db683a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private Class loadClass( String classname )         throws Exception", "signatureAfterChange": "      private String getSystemId( final File file )         throws IOException", "diff": ["+", "+    private String getSystemId( final File file )", "+        throws IOException", "+    {", "+        return file.getCanonicalFile().toURL().toExternalForm();", "+    }", "-     */", "-    private Class loadClass( String classname )", "-        throws Exception", "-    {", "-        if( m_classpath == null )", "-        {", "-            return Class.forName( classname );", "-        }", "-        else", "-        {", "-            final URL[] urls = PathUtil.toURLs( m_classpath );", "-            final ClassLoader classLoader = new URLClassLoader( urls );", "-            return classLoader.loadClass( classname );", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19d01e4e413898414862925a8c2ee55d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "4ab1c363ef3aa8889a3c9bd5653c41ec751e2205", "commitAfterChange": "6ab3e313864e62f2c77a52d8c636daa20a7dfcb8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private Condition buildCondition( final String ifCondition, final String unlessCondition, final Configuration target ) throws Exception", "signatureAfterChange": "      private Condition buildCondition( final String ifCondition,                                       final String unlessCondition )         throws Exception", "diff": ["-    private Condition buildCondition( final String ifCondition, final String unlessCondition, final Configuration target ) throws Exception", "+    private Condition buildCondition( final String ifCondition,", "+                                      final String unlessCondition )", "+        throws Exception", "-        if( null != ifCondition && null != unlessCondition )", "-        {", "-            final String message =", "-                REZ.getString( \"ant.target-bad-logic.error\", target.getLocation() );", "-            throw new Exception( message );", "-        }", "+        final AndCondition condition = new AndCondition();", "-        Condition condition = null;", "-", "+        // Add the 'if' condition", "-            condition = new Condition( true, ifCondition );", "+            condition.add( new IsSetCondition( ifCondition ) );", "-        else if( null != unlessCondition )", "+", "+        // Add the 'unless' condition", "+        if( null != unlessCondition )", "-            condition = new Condition( false, unlessCondition );", "+            condition.add( new NotCondition( new IsSetCondition( unlessCondition ) ) );", "+"]}]}