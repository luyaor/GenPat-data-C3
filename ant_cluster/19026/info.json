{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4d8ae4660b520b82d758affd94b364b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69fde1089446125048fa4a08a1a21d1b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/api/DefaultTaskContext.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void checkPropertyValid( final String name, final Object value )         throws AntException", "signatureAfterChange": "     protected void checkPropertyValid( final String name, final Object value )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Property \" + BASE_DIRECTORY +", "-                                    \" must have a value of type \" +", "-                                    File.class.getName() );", "+            throw new TaskException( \"Property \" + BASE_DIRECTORY +", "+                                     \" must have a value of type \" +", "+                                     File.class.getName() );", "-            throw new AntException( \"Property \" + NAME +", "-                                    \" must have a value of type \" +", "-                                    String.class.getName() );", "+            throw new TaskException( \"Property \" + NAME +", "+                                     \" must have a value of type \" +", "+                                     String.class.getName() );", "-            throw new AntException( \"property \" + JAVA_VERSION +", "-                                    \" must have a value of type \" +", "-                                    JavaVersion.class.getName() );", "+            throw new TaskException( \"property \" + JAVA_VERSION +", "+                                     \" must have a value of type \" +", "+                                     JavaVersion.class.getName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f150316da33fc7520fd47fa5e2f7ec96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "5f35e5e952c7732af5b98e484a87b8a90d8f2fa4", "commitAfterChange": "f09afe103c9bd8540483fbdafab92df1cdf049e2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void checkPropertyValid( final String name, final Object value )         throws TaskException", "signatureAfterChange": "     protected void checkPropertyValid( final String name, final Object value )         throws TaskException", "diff": ["-            throw new TaskException( \"Property \" + BASE_DIRECTORY +", "-                                     \" must have a value of type \" +", "-                                     File.class.getName() );", "+            final String message = ", "+                REZ.getString( \"bad-property.error\", BASE_DIRECTORY, File.class.getName() );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Property \" + NAME +", "-                                     \" must have a value of type \" +", "-                                     String.class.getName() );", "+            final String message = ", "+                REZ.getString( \"bad-property.error\", NAME, String.class.getName() );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Property \" + JAVA_VERSION +", "-                                     \" must have a value of type \" +", "-                                     JavaVersion.class.getName() );", "+            final String message = ", "+                REZ.getString( \"bad-property.error\", JAVA_VERSION, JavaVersion.class.getName() );", "+            throw new TaskException( message );"]}]}