{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4210c3196c322d41a9e6cafd36f4e1bb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dc8b82f6bcbcfdfa0e36b0e0cd10b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setWorkdir(final File inValue)", "signatureAfterChange": "      public void processDescriptor(String aDescriptorName, SAXParser saxParser)", "diff": ["-     */", "-    public void setWorkdir(final File inValue) {", "-        setOuputdir(inValue);", "-    }", "+", "+    public void processDescriptor(String aDescriptorName, SAXParser saxParser) {", "+\t", "+        descriptorName = aDescriptorName;", "+ ", "+        log(\"JOnAS Deployment Tool processing: \" + descriptorName,", "+        super.processDescriptor(descriptorName, saxParser);", "+", "+\tif ( outputdir != null ) {", "+\t    // the method deleteOnExit() do not work because the directory is not empty\t     ", "+\t    log(\"Deleting temp output directory '\" + outputdir + \"'.\", Project.MSG_VERBOSE);", "+\t    deleteAllFiles(outputdir);", "+\t}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f853678d6debf18e7fc3bcbe821fb91c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/ConditionBase.java", "commitBeforeChange": "e6819672d1af265d9d65c21910c3fc06bd7af4fd", "commitAfterChange": "82353694ecf9d89b56f4b09ff0cb2efc836d037a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void addHasMethod(HasMethod test)", "signatureAfterChange": "     public Object createDynamicElement(String name)", "diff": ["-     */", "-    public void addHasMethod(HasMethod test) {", "-        add(test);", "-    }", "+     */", "+    public Object createDynamicElement(String name) {", "+        Object cond = ComponentHelper.getComponentHelper(getProject())", "+            .createComponent(CONDITION_ANTLIB + name);", "+        if (!(cond instanceof Condition)) {", "+            return null;", "+        }", "+        log(\"Dynamically discovered '\" + name + \"' \" + cond,", "+            Project.MSG_DEBUG);", "+        add((Condition) cond);", "+        return cond;", "+    }"]}]}