{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "312e4474004fcb47f44ef35ffa7cd973", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11046367f93bac6404cc437834c7f3b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "a177bc702d6f9cdcd37e0fff65f577e66b297735", "commitAfterChange": "22b84e3a90aa69d0b0de53d108af5b9caf75a59a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "     protected static String getMainClass(File home, int type)         throws BuildException", "signatureAfterChange": "     protected static String getMainClass(Path path, int type)         throws BuildException", "diff": ["-        int majorVersion = getMajorVersionNumber(home);", "+     */", "+    protected static String getMainClass(Path path, int type)", "+        throws BuildException {", "-        switch (majorVersion) {", "-        case 1:", "-        case 2:", "+        AntClassLoader l = new AntClassLoader();", "+        l.setClassPath(path.concatSystemClasspath(\"ignore\"));", "+        String javaccClass = COM_PACKAGE + COM_JAVACC_CLASS;", "+        InputStream is = l.getResourceAsStream(javaccClass.replace('.', '/')", "+                                               + \".class\");", "+        if (is != null) {", "-", "-", "-            break;", "-", "-        case 3:", "-            /*", "-             * This is where the fun starts, JavaCC 3.0 uses", "-             * org.netbeans.javacc, 3.1 uses org.javacc - I wonder", "-             * which version is going to use net.java.javacc.", "-             *", "-             * Look into to the archive to pick up the best", "-             * package.", "-             */", "-            ZipFile zf = null;", "-            try {", "-                zf = new ZipFile(getArchiveFile(home));", "-                if (zf.getEntry(ORG_PACKAGE_3_0.replace('.', '/')) != null) {", "+        } else {", "+            javaccClass = ORG_PACKAGE_3_1 + ORG_JAVACC_CLASS;", "+            is = l.getResourceAsStream(javaccClass.replace('.', '/')", "+                                       + \".class\");", "+            if (is != null) {", "+                packagePrefix = ORG_PACKAGE_3_1;", "+            } else {", "+                javaccClass = ORG_PACKAGE_3_0 + ORG_JAVACC_CLASS;", "+                is = l.getResourceAsStream(javaccClass.replace('.', '/')", "+                                           + \".class\");", "+                if (is != null) {", "-                } else {", "-                    packagePrefix = ORG_PACKAGE_3_1;", "-                }", "-            } catch (IOException e) {", "-                throw new BuildException(\"Error reading javacc.jar\", e);", "-            } finally {", "-                if (zf != null) {", "-                    try {", "-                        zf.close();", "-                    } catch (IOException e) {", "-                        throw new BuildException(e);", "-                    }", "-            switch (type) {", "-            case TASKDEF_TYPE_JAVACC:", "-                mainClass = ORG_JAVACC_CLASS;", "-", "+            if (is != null) {", "+                switch (type) {", "+                case TASKDEF_TYPE_JAVACC:", "+                    mainClass = ORG_JAVACC_CLASS;", "+                    ", "+                ", "+                case TASKDEF_TYPE_JJTREE:", "+                    mainClass = ORG_JJTREE_CLASS;", "+                    ", "+                    break;", "-            case TASKDEF_TYPE_JJTREE:", "-                mainClass = ORG_JJTREE_CLASS;", "-", "-                break;", "-", "-            case TASKDEF_TYPE_JJDOC:", "-                mainClass = ORG_JJDOC_CLASS;", "-", "-                break;", "+                case TASKDEF_TYPE_JJDOC:", "+                    mainClass = ORG_JJDOC_CLASS;", "+                    ", "+                    break;", "+                }", "-", "-            break;", "+        if (packagePrefix == null) {", "+            throw new BuildException(\"failed to load JavaCC\");", "+        }", "+        if (mainClass == null) {", "+            throw new BuildException(\"unknown task type \" + type);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0f80bab2d092b48abf6659083e57b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "46c40044e121ccf6096148a2def4159a4887e405", "commitAfterChange": "5c5152c705ed97f52e319498b7fcb7e639f75cc8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected static String getMainClass(File home, int type)          throws BuildException", "signatureAfterChange": "     protected static String getMainClass(File home, int type)          throws BuildException", "diff": ["-            case 1:", "-            case 2:", "-                packagePrefix = COM_PACKAGE;", "+        case 1:", "+        case 2:", "+            packagePrefix = COM_PACKAGE;", "-                switch (type) {", "-                    case TASKDEF_TYPE_JAVACC:", "-                        mainClass = COM_JAVACC_CLASS;", "-", "-                        break;", "-", "-                    case TASKDEF_TYPE_JJTREE:", "-                        mainClass = COM_JJTREE_CLASS;", "-", "-                        break;", "-", "-                    case TASKDEF_TYPE_JJDOC:", "-                        mainClass = COM_JJDOC_CLASS;", "-", "-                        break;", "-                }", "+            switch (type) {", "+            case TASKDEF_TYPE_JAVACC:", "+                mainClass = COM_JAVACC_CLASS;", "-            case 3:", "-                packagePrefix = ORG_PACKAGE;", "-", "-                switch (type) {", "-                    case TASKDEF_TYPE_JAVACC:", "-                        mainClass = ORG_JAVACC_CLASS;", "-", "-                        break;", "-", "-                    case TASKDEF_TYPE_JJTREE:", "-                        mainClass = ORG_JJTREE_CLASS;", "-", "-                        break;", "-", "-                    case TASKDEF_TYPE_JJDOC:", "-                        mainClass = ORG_JJDOC_CLASS;", "-", "-                        break;", "-                }", "+            case TASKDEF_TYPE_JJTREE:", "+                mainClass = COM_JJTREE_CLASS;", "+", "+            case TASKDEF_TYPE_JJDOC:", "+                mainClass = COM_JJDOC_CLASS;", "+", "+                break;", "+            }", "+", "+            break;", "+", "+        case 3:", "+            /* ", "+             * This is where the fun starts, JavaCC 3.0 uses", "+             * org.netbeans.javacc, 3.1 uses org.javacc - I wonder", "+             * which version is going to use net.java.javacc.", "+             *", "+             * Look into to the archive to pick up the best", "+             * package.", "+             */", "+            ZipFile zf = null;", "+            try {", "+                zf = new ZipFile(getArchiveFile(home));", "+                if (zf.getEntry(ORG_PACKAGE.replace('.', '/')) != null) {", "+                    packagePrefix = ORG_PACKAGE;", "+                } else {", "+                    packagePrefix = ORG_JAVACC_PACKAGE;", "+                }", "+            } catch (IOException e) {", "+                throw new BuildException(\"Error reading javacc.jar\", e);", "+            } finally {", "+                if (zf != null) {", "+                    try {", "+                        zf.close();", "+                    } catch (IOException e) {", "+                        throw new BuildException(e);", "+                    }", "+                }", "+            }", "+", "+            switch (type) {", "+            case TASKDEF_TYPE_JAVACC:", "+                mainClass = ORG_JAVACC_CLASS;", "+", "+                break;", "+", "+            case TASKDEF_TYPE_JJTREE:", "+                mainClass = ORG_JJTREE_CLASS;", "+", "+                break;", "+", "+            case TASKDEF_TYPE_JJDOC:", "+                mainClass = ORG_JJDOC_CLASS;", "+", "+                break;", "+            }", "+", "+            break;"]}]}