{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a021cd6d10748e57f300c3f0f3b737d0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ff10258ed4270e9f734e917a4049d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/dotnet/src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WixTask.java", "commitBeforeChange": "00fda119478c715878e724d0de3cda557d01de02", "commitAfterChange": "e3bbc7c3c043ec2f36aa5cb5f8dba72d3698a38e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void run(String executable, List s, File target)", "signatureAfterChange": "     private void run(String executable, List s, File target)", "diff": ["-        DotNetExecTask exec = new DotNetExecTask();", "-        if (vm != null) {", "-            exec.setVm(vm);", "-        }", "-        exec.setProject(getProject());", "-        exec.setExecutable(executable);", "-        exec.setTaskName(getTaskName());", "+        DotNetExecTask exec = DotNetExecTask.getTask(this, vm, ", "+                                                     executable, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84df2507bc601c193fb6112d41cf7e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "e76559e2f3bc99467718b186f5d5d89315b70777", "commitAfterChange": "b2b649d12de2918643d1aa910f194df3be345df9", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 37, "signatureBeforeChange": "          public LocalProperties shallowCopy()", "signatureAfterChange": "          private void shallowCopyParent()", "diff": ["-        public LocalProperties shallowCopy() {", "-            LocalPropertyStack copy = new LocalPropertyStack();", "-            copy.stack = new ArrayList();", "-            copy.level = level;", "-            for (int i = 0; i < stack.size(); ++i) {", "-                copy.stack.add(((ArrayList) stack.get(i)).clone());", "+        private void shallowCopyParent() {", "+            if (stack != null) {", "+                return;", "-            copy.props = new HashMap();", "-            for (Iterator i = props.entrySet().iterator(); i.hasNext();) {", "+            stack = new ArrayList();", "+            level = owner.level;", "+            for (int i = 0; i < stack.size(); ++i) {", "+                stack.add(((ArrayList) owner.stack.get(i)).clone());", "+            }", "+            props = new HashMap();", "+            for (Iterator i = owner.props.entrySet().iterator(); i.hasNext();) {", "-                copy.props.put(entry.getKey(), l2);", "+                props.put(entry.getKey(), l2);", "-            return copy;"]}]}