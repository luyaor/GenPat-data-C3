{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed6a8be2ea6d62da75bb34567863f413", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057077abd91556a1d247f1d4e3daaefe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java", "commitBeforeChange": "028ba47c8246f510012ef061d879d05240b90c71", "commitAfterChange": "efd287b871106edf3efb9e1b96aeea16b85f0549", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Regexp newRegexp(Project p) throws BuildException", "signatureAfterChange": "     public Regexp newRegexp(Project p) throws BuildException", "diff": ["-        Throwable cause = null;", "-", "-        try {", "-            testAvailability(\"java.util.regex.Matcher\");", "-            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\");", "-        } catch (BuildException be) {", "-            cause = orCause(", "-                cause, be,", "-                JavaEnvUtils.getJavaVersionNumber() < JavaEnvUtils.VERSION_1_4);", "-        }", "-", "-        try {", "-            testAvailability(\"org.apache.oro.text.regex.Pattern\");", "-            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaOroRegexp\");", "-        } catch (BuildException be) {", "-            cause = orCause(cause, be, true);", "-        }", "-", "-        try {", "-            testAvailability(\"org.apache.regexp.RE\");", "-            return createRegexpInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\");", "-        } catch (BuildException be) {", "-            cause = orCause(cause, be, true);", "-        }", "-        throw new BuildException(\"No supported regular expression matcher found\"", "-                + (cause != null ? \": \" + cause : \"\"), cause);", "+        return new Jdk14RegexpRegexp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e200ee9b276b5ad44e51f2d848e9de77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "028ba47c8246f510012ef061d879d05240b90c71", "commitAfterChange": "efd287b871106edf3efb9e1b96aeea16b85f0549", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public RegexpMatcher newRegexpMatcher(Project p) throws BuildException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher(Project p) throws BuildException", "diff": ["-        Throwable cause = null;", "-", "-        try {", "-            testAvailability(\"java.util.regex.Matcher\");", "-            return createInstance(\"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\");", "-        } catch (BuildException be) {", "-            cause = orCause(", "-                cause, be,", "-                JavaEnvUtils.getJavaVersionNumber() < JavaEnvUtils.VERSION_1_4);", "-        }", "-", "-        try {", "-            testAvailability(\"org.apache.oro.text.regex.Pattern\");", "-            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");", "-        } catch (BuildException be) {", "-            cause = orCause(cause, be, true);", "-        }", "-", "-        try {", "-            testAvailability(\"org.apache.regexp.RE\");", "-            return createInstance(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");", "-        } catch (BuildException be) {", "-            cause = orCause(cause, be, true);", "-        }", "-        throw new BuildException(\"No supported regular expression matcher found\"", "-                + (cause != null ? \": \" + cause : \"\"), cause);", "-    }", "+        return new Jdk14RegexpMatcher();"]}]}