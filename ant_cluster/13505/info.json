{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1aa25e1ba5898d1511c180b1dca77a5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c76f26b177c93f22eca092be9359aa1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTrimFileByLine() throws IOException", "signatureAfterChange": "      @Test     public void testTrimFileByLine() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"trimfilebyline\", getProject().getProperty(\"output\") + \"/trimfilebyline\");", "+    \tbuildRule.executeTarget(\"trimfilebyline\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfilebyline\");", "-        assertStringNotContains(contents, \"  This is the second\");", "-        assertStringContains(contents, \"file.\\nThis is the second\");", "+        assertNotContains(\"  This is the second\", contents);", "+        assertContains(\"file.\\nThis is the second\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e0af7cf0fa1f98b9b52086fcbda6a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testFilterReplaceString() throws IOException", "signatureAfterChange": "      @Test     public void testFilterReplaceString() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"filterreplacestring\", getProject().getProperty(\"output\") + \"/filterreplacestring\");", "-        assertStringContains(contents, \"This is the moon\");", "+    \tbuildRule.executeTarget(\"filterreplacestring\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filterreplacestring\");", "+        assertContains(\"This is the moon\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ee6e5ff5f13467194bb135ecb43db9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testFileTokenizer() throws IOException", "signatureAfterChange": "      @Test     public void testFileTokenizer() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"filetokenizer\", getProject().getProperty(\"output\") + \"/filetokenizer\");", "-        assertStringContains(contents, \"   of words\");", "-        assertStringNotContains(contents, \" This is\");", "+    \tbuildRule.executeTarget(\"filetokenizer\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filetokenizer\");", "+        assertContains(\"   of words\", contents);", "+        assertNotContains(\" This is\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3791a11b7b5f291ba1d61863e684470", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testContainsString() throws IOException", "signatureAfterChange": "      @Test     public void testContainsString() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"containsstring\", getProject().getProperty(\"output\") + \"/containsstring\");", "-        assertStringContains(contents, \"this is a line contains foo\");", "-        assertStringNotContains(contents, \"this line does not\");", "+    \tbuildRule.executeTarget(\"containsstring\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/containsstring\");", "+        assertContains(\"this is a line contains foo\", contents);", "+        assertNotContains(\"this line does not\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d765c60f650a7cef003c4a5445628c64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testTrimFile() throws IOException", "signatureAfterChange": "      @Test     public void testTrimFile() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"trimfile\", getProject().getProperty(\"output\") + \"/trimfile\");", "+    \tbuildRule.executeTarget(\"trimfile\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfile\");", "-        assertStringContains(contents, \"  This is the second\");", "+        assertContains(\"  This is the second\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54049596ea7b7a00c0050fe2278c72b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void testDeleteCharacters() throws IOException", "signatureAfterChange": "      @Test     public void testDeleteCharacters() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"deletecharacters\", getProject().getProperty(\"output\") + \"/deletechars\");", "-        assertStringNotContains(contents, \"#\");", "-        assertStringNotContains(contents, \"*\");", "-        assertStringContains(contents, \"This is some \");", "+    \tbuildRule.executeTarget(\"deletecharacters\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/deletechars\");", "+        assertNotContains(\"#\", contents);", "+        assertNotContains(\"*\", contents);", "+        assertContains(\"This is some \", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87c3a2d2190644a45c2779415bf2f36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/DynamicFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testCustomFilter() throws IOException", "signatureAfterChange": "      @Test     public void testCustomFilter() throws IOException", "diff": ["+    @Test", "-        expectFileContains(\"dynamicfilter\", getProject().getProperty(\"output\") + \"/dynamicfilter\",", "-                           \"hellO wOrld\");", "+        buildRule.executeTarget(\"dynamicfilter\");", "+        String content = FileUtilities.getFileContents(", "+                new File(buildRule.getProject().getProperty(\"output\") + \"/dynamicfilter\"));", "+        assertContains(\"hellO wOrld\", content);"]}]}