{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8915f127e241f142078ad0206cd1bd0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5225dc33b1e6f5c0680dcfa7162d3778", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/Environment.java", "commitBeforeChange": "50ed19a8ede1bafce47dd7fc00f7af6aab7ed4f0", "commitAfterChange": "8e89e1b214d2d228a66c7766a04e37e57b5270b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static synchronized Properties retrieveEnvironmentVariables()         throws IOException, ExecException", "signatureAfterChange": "     private static synchronized Properties retrieveEnvironmentVariables()         throws IOException, ExecException", "diff": ["-        String var = null;", "+        final StringBuffer var = new StringBuffer();", "-        while( ( line = in.readLine() ) != null )", "+        while( null != ( line = in.readLine() ) )", "-            if( line.indexOf( '=' ) == -1 )", "+            if( -1 == line.indexOf( '=' ) )", "-                if( var == null )", "-                {", "-                    var = StringUtil.LINE_SEPARATOR + line;", "-                }", "-                else", "-                {", "-                    var += StringUtil.LINE_SEPARATOR + line;", "-                }", "+                var.append( StringUtil.LINE_SEPARATOR );", "-                if( var != null )", "+                if( 0 != var.length() )", "-                    addProperty( properties, var );", "+                    addProperty( properties, var.toString() );", "+                    var.setLength( 0 );", "-                var = line;", "+            var.append( line );", "-        if( null != var )", "+        if( 0 != var.length() )", "-            addProperty( properties, var );", "+            addProperty( properties, var.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c105a7550e8df5e11776983aa50b1bd3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "1d600fe6da225ed331cf90bfcf836da4c90fecc8", "commitAfterChange": "7171341fc60cfd4d7cd4f92bda0778bf98c17094", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "+        StringBuffer output = new StringBuffer();", "-                ByteArrayOutputStream out = executeCommand(session, command);", "-                if (outputProperty != null) {", "-                    //#bugzilla 43437", "-                    getProject().setNewProperty(outputProperty, command + \" : \" + out);", "-                }", "+                output.append(command).append(\" : \");", "+                executeCommand(session, command, output);", "-                    String output = \"\";", "-                        ByteArrayOutputStream out = executeCommand(session, cmd);", "-                        output += cmd + \" : \" + out + \"\\n\";", "-                    }", "-                    if (outputProperty != null) {", "-                        //#bugzilla 43437", "-                        getProject().setNewProperty(outputProperty, output);", "+                        output.append(cmd).append(\" : \");", "+                        executeCommand(session, cmd, output);", "+                        output.append(\"\\n\");", "+            if (outputProperty != null) {", "+                getProject().setNewProperty(outputProperty, output.toString());", "+            }"]}]}