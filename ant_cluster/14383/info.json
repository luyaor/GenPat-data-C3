{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f368662d193447028f2991950ed57459", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629ae08c16c77fb19a19b14ebecf55c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public FileObject resolveFile( final FileObject baseFile, final String uri )         throws FileSystemException", "signatureAfterChange": "     public FileObject resolveFile( final FileObject baseFile, final String uri )         throws FileSystemException", "diff": ["-                return provider.findFile( uri );", "+                return provider.findFile( baseFile, uri );", "+        // Decode the URI (remove %nn encodings)", "+        final String decodedUri = UriParser.decode( uri );", "+", "-        if( m_localFileProvider.isAbsoluteLocalName( uri ) )", "+        if( m_localFileProvider.isAbsoluteLocalName( decodedUri ) )", "-            return m_localFileProvider.findLocalFile( uri );", "+            return m_localFileProvider.findLocalFile( decodedUri );", "-        return baseFile.resolveFile( uri );", "+        return baseFile.resolveFile( decodedUri );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4201b9982ae9a516096e4ffabe70c97", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void enableContent()         throws ConfigurationException", "signatureAfterChange": "     public void enableContent()         throws ConfigurationException", "diff": ["-            if( null != m_contentSetter )", "+            // Check for multiple content setters", "+            if( null != m_contentConfigurer )", "-            m_contentSetter = new DefaultAttributeSetter( method );", "+            Class type = method.getParameterTypes()[0];", "+            m_contentConfigurer = new DefaultPropertyConfigurer( type, null, method );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c00b74d009db1b3f23c2c11ab2cc30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/DataType.java", "commitBeforeChange": "fcd9581d6121602489e491a92dea0109a186a274", "commitAfterChange": "e539f6378221559dd8f18f43ceb941801e9a9820", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void dieOnCircularReference(final Stack stack,                                           final Project project)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(final Stack stack,                                           final Project project)         throws BuildException", "diff": ["-            if (stack.contains(o)) {", "+            IdentityStack id = IdentityStack.getInstance(stack);", "+", "+            if (id.contains(o)) {", "-                stack.push(o);", "-                ((DataType) o).dieOnCircularReference(stack, project);", "-                stack.pop();", "+                id.push(o);", "+                ((DataType) o).dieOnCircularReference(id, project);", "+                id.pop();"]}]}