{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f3d00fff276f8dc27f282e77a78776e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240652d66424542858052ee0791c50e8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "427c2d293d2ae1e6fd446967a5936e948dfb647b", "commitAfterChange": "267492df5827611c5fa13f2ff35a05a8152e2664", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkConfiguration() throws BuildException", "diff": ["-            throw new BuildException(\"basedir attribute or at least one \"", "-                                     + \"nested filest is required!\",", "+            throw new BuildException(\"basedir attribute or one \"", "+                                     + \"nested fileset is required!\",", "+        }", "+        if (baseDir != null && filesets.size() > 0) {", "+            throw new BuildException(", "+                \"Both basedir attribute and a nested fileset is not allowed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "475531017d298a31d04624a89c49695f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "5f07fcba5784e16cac1024aeeb2b625b39a4ad81", "commitAfterChange": "2ccd335cf3ef08f0f79e5a5c9c624deae323e4a9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        }", "+        ", "+        if (file == null && resource == null && prefix != null) {", "+            throw new BuildException(\"Prefix is only valid when loading from a file or resource\", location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627b3f096caf1650abecc07bd2fa6fcc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "5d4b03bbeb9331459ec521427beb8959cad5be3a", "commitAfterChange": "f5fb02e4934074f9b1ec52c7435e282231bae7bc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkAttributes()", "signatureAfterChange": "     private void checkAttributes()", "diff": ["+", "+        if (userAgent == null || userAgent.trim().length() == 0) {", "+            throw new BuildException(\"userAgent may not be null or empty\");", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989f89dab9404a0c94e7d51ebbd2a8bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "90164753d1d14e419c59128c236c02d0e6030c50", "commitAfterChange": "1620dd543b86a7edd25522b6ff8601f8e294fcbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean validateAndExecute() throws BuildException", "signatureAfterChange": "     private boolean validateAndExecute() throws BuildException", "diff": ["+        if (file != null && file.exists() && file.isDirectory()) {", "+            throw new BuildException(", "+                \"Checksum cannot be generated for directories\");", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad28cae4b5e68918a415e5328c7fed9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "d1bc937f76bfe650c3c2a530e848140cadedd785", "commitAfterChange": "53252afb1bddd6f52511e03e3136e5210495db59", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-", "+        if (getOwningTarget() == null", "+            || !\"\".equals(getOwningTarget().getName())) {", "+            throw new BuildException(\"import only allowed as a top-level task\");", "+        }", "+        ", "+", "-//        ProjectHelper2.AntXmlContext context;", "-//        context=(ProjectHelper2.AntXmlContext)project.getReference(\"ant.parsing.context\");", "-", "-//        File buildFile=context.buildFile;", "-//        File buildFileParent=context.buildFileParent;", "-        //System.out.println(\"Importing from \" + currentSource);", "+", "-", "-//        // Add parent build file to the map to avoid cycles...", "-//        String parentFilename = getPath(buildFile);", "-//        if (!context.importedFiles.containsKey(parentFilename)) {", "-//            context.importedFiles.put(parentFilename, buildFile);", "-//        }", "-//", "-//        // Make sure we import the file only once", "-//        String importedFilename = getPath(importedFile);", "-//        if (context.importedFiles.containsKey(importedFilename)) {", "-//            project.log(\"\\nSkipped already imported file:\\n   \"+", "-//                    importedFilename+\"\\n\",Project.MSG_WARN);", "-//            return;", "-//        } else {", "-//            context.importedFiles.put(importedFilename, importedFile);", "-//        }", "-", "-//        context.ignoreProjectTag=true;", "-//        context.helper.parse(project, importedFile,", "-//                new ProjectHelper2.RootHandler(context));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b38d5b6986f7d51b36a1764d265add", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "f2bc3fe7c89755a2e53e79aaf636b4177fe8928d", "commitAfterChange": "cc911f59921cda9a230eebd58c4ab6d9e292d5e9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public String addAttribute(Attribute attribute) throws ManifestException", "signatureAfterChange": "         public String addAttributeAndCheck(Attribute attribute) throws ManifestException", "diff": ["-        public String addAttribute(Attribute attribute) throws ManifestException {", "+        public String addAttributeAndCheck(Attribute attribute) throws ManifestException {", "+            if (attribute.getName() == null || attribute.getValue() == null) {", "+                throw new BuildException(\"Attributes must have name and value\");", "+            }"]}]}