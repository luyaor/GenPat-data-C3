{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02789893cce6b5149cb5bcfab4c1ed47", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e95d57d7b1bfeb1928380af9d740d31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/TaskAdapter.java", "commitBeforeChange": "6454a8ffac2091edc8f849725916f1300d157abd", "commitAfterChange": "0c253dc762efa243956ee90970e13fae9aec4d2f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void checkTaskClass(final Class taskClass, final Project project)", "signatureAfterChange": "     public static void checkTaskClass(final Class taskClass,                                        final Project project)", "diff": ["-    public static void checkTaskClass(final Class taskClass, final Project project) {", "+    public static void checkTaskClass(final Class taskClass, ", "+                                      final Project project) {", "-            final Method executeM = taskClass.getMethod( \"execute\", null );", "+            final Method executeM = taskClass.getMethod(\"execute\", null);", "-            if(!Void.TYPE.equals(executeM.getReturnType())) {", "-                final String message = \"return type of execute() should be void but was \\\"\"+executeM.getReturnType()+\"\\\" in \" + taskClass;", "+            if (!Void.TYPE.equals(executeM.getReturnType())) {", "+                final String message = \"return type of execute() should be \" ", "+                    + \"void but was \\\"\" + executeM.getReturnType() + \"\\\" in \" ", "+                    + taskClass;", "-        } catch(NoSuchMethodException e) {", "+        } catch (NoSuchMethodException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43f9d8de44af02cecbf73f33f35e311", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Override \tpublic void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-        for (Resource r : sources) {", "-            URLProvider up = r.as(URLProvider.class);", "-            URL source = up.getURL();", "+        for (final Resource r : sources) {", "+            final URLProvider up = r.as(URLProvider.class);", "+            final URL source = up.getURL();", "-                    int slash = path.lastIndexOf(\"/\");", "+                    final int slash = path.lastIndexOf(\"/\");", "-                    FileNameMapper mapper = mapperElement.getImplementation();", "-                    String[] d = mapper.mapFileName(source.toString());", "+                    final FileNameMapper mapper = mapperElement.getImplementation();", "+                    final String[] d = mapper.mapFileName(source.toString());", "-        int logLevel = Project.MSG_INFO;", "+        final int logLevel = Project.MSG_INFO;", "-        } catch (IOException ioe) {", "+        } catch (final IOException ioe) {"]}]}