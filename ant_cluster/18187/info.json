{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e32f3c8fa34ddaa405451923e9c84590", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af8f66906c237fbc07057c3bcf0c3ae7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/antlib/StandardLibFactory.java", "commitBeforeChange": "83dc385bd01fbc8ee2fb166b9a5605bdc6958d76", "commitAfterChange": "bf844382c856f7b51c56024189c93f11d34cb720", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Object createTypeInstance(Class typeClass, String localName)          throws InstantiationException, IllegalAccessException,         ExecutionException", "signatureAfterChange": "     public Object createComponent(Class componentClass, String localName)          throws InstantiationException, IllegalAccessException,         ExecutionException", "diff": ["+    public Object createComponent(Class componentClass, String localName)", "-     */", "-    public Object createTypeInstance(Class typeClass, String localName)", "-         throws InstantiationException, IllegalAccessException,", "-        ExecutionException {", "-        return typeClass.newInstance();", "+        return componentClass.newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c265eb2cba6ae5e374a9d3541066707d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/antlib/StandardLibFactory.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Converter createConverter(Class converterClass)          throws InstantiationException, IllegalAccessException,         ExecutionException", "signatureAfterChange": "     public Object createInstance(Class requiredClass)          throws InstantiationException, IllegalAccessException,         ExecutionException", "diff": ["-    public Converter createConverter(Class converterClass)", "+    public Object createInstance(Class requiredClass)", "-        return (Converter) converterClass.newInstance();", "+        return requiredClass.newInstance();"]}]}