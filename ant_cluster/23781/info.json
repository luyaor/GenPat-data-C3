{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4f44f2ac2fa5aa9d16c7cf09dc87954", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffd7d94760c01258c89716812a883b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "63363f91c8fc49f6b46adefab32b1f50c0c7c3ce", "commitAfterChange": "e7e63a0e7a7cb40a720e48b3a7477d3d3bbd94d1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "+            // delete a bogus ZIP file", "+\t    if (zOut != null) {", "+\t        try {", "+\t            zOut.close();", "+                    zOut = null;", "+\t        } catch (IOException e) {}", "+                if (!zipFile.delete()) {", "+                    msg = zipFile + \" is probably corrupt but I could not delete it\";", "+                }", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c159470149c881081b9fbdb100630838", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "7fb467a74ddff0c39412e3dd1e789edd15341e99", "commitAfterChange": "bca3e675c3bb2dedb5b3f0bae20a816f12187e32", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (baseDir == null && filesets.size() == 0 && \"zip\".equals(archiveType))", "+        if (baseDir == null && filesets.size() == 0 && ", "+            locFileSets.size() == 0 && \"zip\".equals(archiveType)) {", "-                                      \"one fileset must be given!\" );", "+                                      \"one fileset or prefixedfileset must be given!\" );", "+        }", "+            boolean success = false;", "+ ", "+                success = true;", "-                zOut.close ();", "+                // Close the output stream.", "+                try {", "+                    if (zOut != null)", "+                        zOut.close ();", "+                } catch(IOException ex) {", "+                    // If we're in this finally clause because of an exception, we don't ", "+                    // really care if there's an exception when closing the stream. E.g. if it", "+                    // throws \"ZIP file must have at least one entry\", because an exception happened", "+                    // before we added any files, then we must swallow this exception. Otherwise,", "+                    // the error that's reported will be the close() error, which is not the real ", "+                    // cause of the problem.", "+                    if (success)", "+                        throw ex;", "+                }"]}]}