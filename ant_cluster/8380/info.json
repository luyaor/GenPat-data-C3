{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7299ccc9389eabe7ee983e11599f854", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53f708be6bc47c198e8c068115cc7ff7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/script/org/apache/ant/antlib/script/ScriptFactory.java", "commitBeforeChange": "83dc385bd01fbc8ee2fb166b9a5605bdc6958d76", "commitAfterChange": "bf844382c856f7b51c56024189c93f11d34cb720", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object createTaskInstance(Class taskClass, String localName)          throws InstantiationException, IllegalAccessException,         ExecutionException", "signatureAfterChange": "     public Object createComponent(Class componentClass, String localName)          throws InstantiationException, IllegalAccessException,         ExecutionException", "diff": ["-    public Object createTaskInstance(Class taskClass, String localName)", "+    public Object createComponent(Class componentClass, String localName)", "-        Object task = super.createTaskInstance(taskClass, localName);", "+        Object component = super.createComponent(componentClass, localName);", "-        if (task instanceof ScriptDef) {", "-            ScriptDef scriptDef = (ScriptDef)task;", "+        if (component instanceof ScriptDef) {", "+            ScriptDef scriptDef = (ScriptDef)component;", "-        } else if (task instanceof ScriptBase) {", "-            ScriptBase scriptBase = (ScriptBase)task;", "+        } else if (component instanceof ScriptBase) {", "+            ScriptBase scriptBase = (ScriptBase)component;", "-        return task;", "+        return component;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c19391a5f5b68f6d1e7bdf78b18e88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "5bd6ee510120476b8b16c70cb2719c7a619af500", "commitAfterChange": "02c264aee45f29a2936f681099661a31ad206500", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void signOneJar(File jarSource, File jarTarget)             throws BuildException", "signatureAfterChange": "     private void signOneJar(File jarSource, File jarTarget)             throws BuildException", "diff": ["-        File target = jarTarget;", "-        if (target == null) {", "-            target = jarSource;", "+        File targetFile = jarTarget;", "+        if (targetFile == null) {", "+            targetFile = jarSource;", "-        if (isUpToDate(jarSource, target)) {", "+        if (isUpToDate(jarSource, targetFile)) {", "-        if (null != target && !jarSource.equals(target)) {", "+        if (null != targetFile && !jarSource.equals(targetFile)) {", "-            addValue(cmd, target.getPath());", "+            addValue(cmd, targetFile.getPath());", "-                target.getAbsolutePath()", "+                targetFile.getAbsolutePath()", "-            target.setLastModified(lastModified);", "+            targetFile.setLastModified(lastModified);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f754e5730f9250a3ef7fc16619ecfde5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "08e4c1a818075c432fb53d67052211be64478562", "commitAfterChange": "8de96cafd7f3f5a23fe1e03f5325d0a7f2b7f006", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static void configureTask(Project project,                                       Task taskInst,                                       NamedNodeMap nodeMap)         throws BuildException", "signatureAfterChange": "      private static void configure(Project project,                                   Object target,                                   NamedNodeMap nodeMap)         throws BuildException", "diff": ["-    private static void configureTask(Project project,", "-                                      Task taskInst,", "-                                      NamedNodeMap nodeMap)", "-        Object task=taskInst;", "-        if( task instanceof TaskAdapter )", "-            task=((TaskAdapter)task).getProxy();", "+", "+    private static void configure(Project project,", "+                                  Object target,", "+                                  NamedNodeMap nodeMap)", "+        throws BuildException", "+    {", "+        if( target instanceof TaskAdapter )", "+            target=((TaskAdapter)target).getProxy();", "-            beanInfo = Introspector.getBeanInfo(task.getClass());", "+            beanInfo = Introspector.getBeanInfo(target.getClass());", "-            String msg = \"Can't introspect task class: \" + task.getClass();", "+            String msg = \"Can't introspect class: \" + target.getClass();", "-                // reflect these into the task", "+                // reflect these into the target", "-                        \"\\\" does not have a setMethod in \" + task.getClass();", "+                        \"\\\" does not have a setMethod in \" + target.getClass();", "-                    setMethod.invoke(task, new String[] {value});", "+                    setMethod.invoke(target, new String[] {value});", "-                        attr.getName() + \" in \" + task.getClass().getName();", "+                        attr.getName() + \" in \" + target.getClass().getName();"]}]}