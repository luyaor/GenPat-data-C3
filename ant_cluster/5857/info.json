{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f634299298a8f2d7e4baa730781467a2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e7b5293bf427a21d8df1282a87c611", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "27b0172aac056d0a4710e82e259bd31a24841b16", "commitAfterChange": "6b2378c2e6dfde13698cbe45bf633854c817bbd6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "      public void execute()", "diff": ["+", "+        String oldSep = ProjectHelper.getCurrentPrefixSeparator();", "-            ProjectHelper.setCurrentTargetPrefix(targetPrefix);", "-            ProjectHelper.setInIncludeMode(isInIncludeMode());", "+            String prefix = targetPrefix;", "+            if (isInIncludeMode() && oldPrefix != null", "+                && targetPrefix != null) {", "+                prefix = oldPrefix + oldSep + targetPrefix;", "+            }", "+            setProjectHelperProps(prefix, prefixSeparator,", "+                                  isInIncludeMode());", "+", "-            ProjectHelper.setCurrentTargetPrefix(oldPrefix);", "-            ProjectHelper.setInIncludeMode(oldIncludeMode);", "+            setProjectHelperProps(oldPrefix, oldSep, oldIncludeMode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ad4b9a16350fd3153be60d1a1b39f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageWriter.java", "commitBeforeChange": "48a9017850dc1a302304a057ad05640175a2dd15", "commitAfterChange": "626c685b1dd04334dcdebcdaa39f5f438a51be2e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void notifySystemProperties()", "signatureAfterChange": "      public void notifySystemProperties()", "diff": ["-            ByteArrayOutputStream out = new ByteArrayOutputStream();", "-            ObjectOutputStream oos = new ObjectOutputStream(out);", "-            oos.writeObject(System.getProperties());", "-            oos.close();", "-            String msg = new String(Base64.encode(out.toByteArray()));", "-            sendMessage(MessageIds.PROPS_START + msg + MessageIds.PROPS_END);", "-        } catch (IOException e){", "+            StringBuffer msg = new StringBuffer(512);", "+            msg.append(MessageIds.PROPS_START);", "+            byte[] data = SocketUtil.serialize(System.getProperties());", "+            msg.append(Base64.encode(data));", "+            msg.append(MessageIds.PROPS_END);", "+            sendMessage(msg.toString());", "+        } catch (Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6cbb14082e8041575fdfe28a478433", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "0c2d03d031ecacd79ea8d77cd88b8428e84a3c7c", "commitAfterChange": "44ecc125fa2df70025e742ba113dd793c0e27580", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["-        formatterArg.append(\"nocrashfile=\");", "+        formatterArg.append(\"crashfile=\");", "+            String vmCrashString = \"unknown\";", "+            try {", "+                BufferedReader br = new BufferedReader(new FileReader(vmWatcher));", "+                vmCrashString = br.readLine();", "+            } catch (Exception e) {", "+                e.printStackTrace();", "+                // ignored.", "+            }", "-                logTimeout(feArray, test);", "-            } else if (vmWatcher.length() == 0) {", "+                logTimeout(feArray, test, vmCrashString);", "+            } else if (!\"terminated successfully\".equals(vmCrashString)) {", "-                logVmCrash(feArray, test);", "+                logVmCrash(feArray, test, vmCrashString);"]}]}