{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54fb20172406d9a81108b8e22ef26b62", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ed31344e4c3fbc1527ecfa4ba7f8831", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sound/AntSoundPlayer.java", "commitBeforeChange": "a91aa63252bcd19a4e2610487d696636ca3a6ac0", "commitAfterChange": "b30e40b92a0f65dccc98417385209cf0350b3fb5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void playClip(Clip clip, int loops)", "signatureAfterChange": "      private void playClip(Clip clip, int loops)", "diff": ["-        while (clip.isRunning()) {", "-            // Empty block", "+        do {", "+            try {", "+                long timeLeft =", "+                    (clip.getMicrosecondLength() - clip.getMicrosecondPosition())", "+                    / 1000;", "+                if (timeLeft > 0) {", "+                    Thread.sleep(timeLeft);", "+                }", "+            } catch (InterruptedException e) {", "+                break;", "+            }", "+        } while (clip.isRunning());", "+", "+        if (clip.isRunning()) {", "+            clip.stop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ec40bcdb82b1d1b51d32808313b17b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "2590a640ce546d8fdce8dc864f929b53e6bb1138", "commitAfterChange": "89847cdf7d0bfd13dc1431e1e7128ea587550c4b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public void run()", "signatureAfterChange": "                 public synchronized void run()", "diff": ["+            Thread timeoutThread = new Thread() {", "+                public synchronized void run() {", "+                    try {", "+                        wait(timeout);", "+                        synchronized(semaphore) {", "+                            stillRunning = false;", "+                            timedOut = true;", "+                            semaphore.notifyAll();", "+                        }", "+                    } catch (InterruptedException e) {", "+                        // ignore", "+                    }", "+                }"]}]}