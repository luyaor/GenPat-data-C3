{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0db5c50e7e9f023c82cc9205408faf83", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f1b29bbddce32f0fa510979d9050ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "3e2cbab6ba443daf0abf6e02535fb6cc1df72e04", "commitAfterChange": "b33d33d754378862953b0243500d94eaaf983923", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void addPathFile(File pathComponent) throws IOException", "signatureAfterChange": "     protected void addPathFile(File pathComponent) throws IOException", "diff": ["-            ZipFile jarFile = null;", "-            InputStream manifestStream = null;", "+            JarFile jarFile = null;", "-                jarFile = new ZipFile(pathComponent);", "-                manifestStream = jarFile.getInputStream(new ZipEntry(\"META-INF/MANIFEST.MF\"));", "-", "-                if (manifestStream == null) {", "+                jarFile = new JarFile(pathComponent);", "+                Manifest manifest = jarFile.getManifest();", "+                if (manifest == null) {", "-                Reader manifestReader = new InputStreamReader(manifestStream, \"UTF-8\");", "-                org.apache.tools.ant.taskdefs.Manifest manifest", "-                        = new org.apache.tools.ant.taskdefs.Manifest(manifestReader);", "-                classpath = manifest.getMainSection().getAttributeValue(\"Class-Path\");", "-            } catch (org.apache.tools.ant.taskdefs.ManifestException e) {", "-                // ignore", "+                classpath = manifest.getMainAttributes()", "+                    .getValue(Attributes.Name.CLASS_PATH);", "-                FileUtils.close(manifestStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1cc73da4f52158880f1cead45557e17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "444a953257a1f383b6e417326194b7556b85ea58", "commitAfterChange": "9d3c394c5d1c57194e8e49cd62837855411cb98f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        /* parallel test execution is only supported for multi-process execution */", "+        int threads = ((!fork) || (forkMode.getValue().equals(ForkMode.ONCE))", "+                       ? 1", "+                       : this.threads);", "-            Iterator iter = testLists.iterator();", "-            while (iter.hasNext()) {", "-                List l = (List) iter.next();", "-                if (l.size() == 1) {", "-                    execute((JUnitTest) l.get(0));", "-                } else {", "-                    execute(l);", "-                }", "-            }", "+            /* prior to parallel the code in 'oneJunitThread' used to be here. */", "+            runTestsInThreads(testLists, threads);", "+        }", "+    }"]}]}