{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "621ad77682d7106cc6752b785d7671fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f06c27c2a2e5d5bd68e2680bb3eaefb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/ant1compat/org/apache/tools/ant/Task.java", "commitBeforeChange": "32452cc99f5c05c8796b142c4f4d2ec5e94eb91d", "commitAfterChange": "422ca8ee1e22130fc63be365497ffc07be74fe58", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void init(AntContext context, String componentType)          throws ExecutionException", "signatureAfterChange": "     public void init(AntContext context, String componentType)          throws ExecutionException", "diff": ["+        ", "+        org.apache.ant.common.util.Location contextLocation", "+             = context.getLocation();", "+", "+        if (contextLocation", "+             == org.apache.ant.common.util.Location.UNKNOWN_LOCATION) {", "+            location = Location.UNKNOWN_LOCATION;", "+        } else {", "+            location = new Location(contextLocation.getSource(),", "+                contextLocation.getLineNumber(),", "+                contextLocation.getColumnNumber());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb75a5f888e728c6bfed9b6a9591b46e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java", "commitBeforeChange": "ef2d4639325a9580d6357793271ae32a0a919542", "commitAfterChange": "a40f5fbc661d21426b9e147021c9bff6af807813", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": "     private void scanDir(File srcDir, File destDir, String[] files)", "signatureAfterChange": "     private void scanDir(File srcDir, File destDir, String[] files)", "diff": ["+                File javaFile =", "+                    new File(destDir,", "+                    filename.substring(0, filename.lastIndexOf('.'))", "+                    + (removeKeepExtension ? \".java\" : \".java.keep\"));", "-                if (!compile || srcFile.lastModified() > classFile.lastModified()) {", "+                // nocompile case tests against .java[.keep] file", "+                if (!compile && srcFile.lastModified() > javaFile.lastModified()) {", "+                    filecopyList.put(srcFile.getAbsolutePath(), destFile.getAbsolutePath());", "+                    compileList.addElement(destFile.getAbsolutePath());", "+                }", "+                // compile case tests against .class file", "+                else if (compile && srcFile.lastModified() > classFile.lastModified()) {"]}]}