{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bfe0faf6667add4ee872b5b80b5b565", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41071db02e39b8d5370f24ab79dc27a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected DescriptorHandler getWeblogicDescriptorHandler(File srcDir)", "signatureAfterChange": "      protected DescriptorHandler getWeblogicDescriptorHandler(final File srcDir)", "diff": ["-    protected DescriptorHandler getWeblogicDescriptorHandler(File srcDir) {", "+    protected DescriptorHandler getWeblogicDescriptorHandler(final File srcDir) {", "-                        File descriptorFile = new File(getConfig().descriptorDir, fileName);", "+                        File descriptorFile = new File(srcDir, fileName);", "+                        ", "+                            ", "+        for (Iterator i = getConfig().dtdLocations.iterator(); i.hasNext();) {", "+            EjbJar.DTDLocation dtdLocation = (EjbJar.DTDLocation)i.next();", "+            handler.registerDTD(dtdLocation.getPublicId(), dtdLocation.getLocation());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a7a4f2e6e1d171fa23ade8e3da6134", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool.java", "commitBeforeChange": "efbd99c9ae96fb6656ba9d03742917aacd2b5e69", "commitAfterChange": "fb1e6a07ee2914bbc899aad1b0f4e376630bd4a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Hashtable parseEjbFiles(String descriptorFileName,                          SAXParser saxParser) throws IOException, SAXException", "signatureAfterChange": "     protected Hashtable parseEjbFiles(String descriptorFileName,                          SAXParser saxParser) throws IOException, SAXException", "diff": ["+        if (getConfig().dtdLocations != null) {", "+            for (Iterator i = getConfig().dtdLocations.iterator();", "+                 i.hasNext(); ) {", "+                EjbJar.DTDLocation dtdLocation =", "+                    (EjbJar.DTDLocation) i.next();", "+                ejbc.registerDTD(dtdLocation.getPublicId(),", "+                                 dtdLocation.getLocation());", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff1701feb88b1854263d8076aeebc27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "8a21be498479cb838b88fc0f77547e82ed1c5334", "commitAfterChange": "f71b0b02959caf4a48c67b06f818b74cfaca7541", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected DescriptorHandler getDescriptorHandler(File srcDir)", "signatureAfterChange": "      protected DescriptorHandler getDescriptorHandler(File srcDir)", "diff": ["-    protected DescriptorHandler getDescriptorHandler(File srcDir) {", "-        return new DescriptorHandler(task, srcDir);", "-    }", "+    protected DescriptorHandler getDescriptorHandler(File srcDir) { ", "+        DescriptorHandler handler = new DescriptorHandler(getTask(), srcDir); ", "+        ", "+        registerKnownDTDs(handler);", "+        ", "+        // register any DTDs supplied by the user", "+        for (Iterator i = getConfig().dtdLocations.iterator(); i.hasNext();) { ", "+            EjbJar.DTDLocation dtdLocation = (EjbJar.DTDLocation)i.next(); ", "+            handler.registerDTD(dtdLocation.getPublicId(), dtdLocation.getLocation()); ", "+        } ", "+        return handler; ", "+    } "]}]}