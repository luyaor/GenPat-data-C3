{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aafcac179ad1215498c1c1d6eeedc135", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02716dee4c70fef4246d875f82fa3e80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bd02671bd0f52793b970f73014668574bf9833c6", "commitAfterChange": "13eb95ae4d6f35ee540b77b1d8eef2e44c7b2720", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private boolean checkClass(String classname)", "signatureAfterChange": "      private boolean checkClass(String classname)", "diff": ["-                this.getClass().getClassLoader().loadClass(classname);", "+                ClassLoader l = this.getClass().getClassLoader();", "+                // Can return null to represent the bootstrap class loader.", "+                // see API docs of Class.getClassLoader.", "+                if (l != null) {", "+                    l.loadClass(classname);", "+                } else {", "+                    Class.forName(classname);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233d38bd7470716e28965ec3aa51161f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "d9e69473683976b55bf9fdd93da9bb982f4b3ba1", "commitAfterChange": "fe7c38e3a07f773e5c6a761dfdb5a4fdd283019c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void start(String frontend, String[] args)", "signatureAfterChange": "     public void start(String frontend, String[] args)", "diff": ["+            String mainClass = getMainClass(frontendJar);", "+            System.out.println(\"Front end main class = \" + mainClass);", "+            if (mainClass == null) {", "+                mainClass = DEFAULT_COMMANDLINE_CLASS;", "+            }", "+            ", "-            Class commandLineClass = Class.forName(COMMANDLINE_CLASS, true,", "+            Class commandLineClass = Class.forName(mainClass, true,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a4dd4215bdf04f2c842e3c636f0b0d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "08c6cab4cc097564fe1df9dbb1a5be647b919595", "commitAfterChange": "ccfc216622568ccf99c231bf0de224ef3a24aa33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Object loadClass(String classname, String msg, Class type)", "signatureAfterChange": "     protected Object loadClass(String classname, String msg, Class type)", "diff": ["-            Object rv = getClassLoader().loadClass(classname).newInstance();", "+            ClassLoader cl = getClassLoader();", "+            Class clazz = null;", "+            if (cl != null) {", "+                clazz = cl.loadClass(classname);", "+            } else {", "+                clazz = Class.forName(classname);", "+            }", "+            ", "+            Object rv = clazz.newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e7fcfa9b8656b9a141a78d9ed097eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ClasspathUtils.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Object newInstance(         String className,         ClassLoader userDefinedLoader)", "signatureAfterChange": "     public static Object newInstance(             String className,             ClassLoader userDefinedLoader)", "diff": ["+            String className,", "+            ClassLoader userDefinedLoader) {", "+        return newInstance(className, userDefinedLoader, Object.class);", "+    }", "-        ClassLoader userDefinedLoader) {", "-            Class clazz = userDefinedLoader.loadClass(className);", "-                \"Class \"", "-                    + className", "-                    + \" not found by the specific classLoader.\","]}]}