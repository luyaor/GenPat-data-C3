{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7922a354afd2d40f32a5cab2ee34789f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd9faea1e1e358b466dec5db6249fb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "commitAfterChange": "7e05b3d981ceab1b87536eed26f67d82470f1a0c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "signatureAfterChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "diff": ["+        ", "+        try {", "+            result = File.createTempFile(prefix, suffix, new File(parent));", "+        } catch (IOException e) {", "+            throw new BuildException(\"Could not create tempfile in \" + parent, e);", "+        }", "+        ", "+        if (deleteOnExit) {", "+            result.deleteOnExit();", "+        }", "+        return result;", "+    }", "-                result = new File(parent, prefix + fmt.format(Math.abs(rand.nextInt())) + suffix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8356d4222637e5e600f1d2f6d352eda2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "0777fa853af3a619d777adaead96e9c0d1aff291", "commitAfterChange": "5061e731c3919a7236bdcdd2ad9965d384313e26", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setTablength(int tlength) throws BuildException", "signatureAfterChange": "     public void setTablength(int tlength) throws BuildException", "diff": ["-        if (tlength < 2 || tlength > 80) {", "-            throw new BuildException(\"tablength must be between 2 and 80\",", "-                                     getLocation());", "+        try {", "+            filter.setTablength(tlength);", "+        } catch (IOException e) {", "+            throw new BuildException(e);", "-        tablength = tlength;", "-        StringBuffer sp = new StringBuffer();", "-        for (int i = 0; i < tablength; i++) {", "-            sp.append(' ');", "-        }", "-        spaces = sp.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a1c51d470d80b1337288715470fe38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "ab5fb066bd93c7713f4628ba564ab6e91890f811", "commitAfterChange": "b456160d70409bf1b5b6a2cfd211a4d012378f00", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void initSubProject(ComponentHelper helper)", "signatureAfterChange": "     public void initSubProject(ComponentHelper helper)", "diff": ["-", "-        // Add the restricted definitions", "-        for (Iterator i = helper.restrictedDefinitions.entrySet().iterator();", "-             i.hasNext();) {", "-            Map.Entry entry = (Map.Entry) i.next();", "-            restrictedDefinitions.put(", "-                entry.getKey(), new ArrayList((List) entry.getValue()));", "+        Map inheritedRestrictedDef = helper.getRestrictedDefintion();", "+        synchronized (restrictedDefinitions) {", "+            restrictedDefinitions.putAll(inheritedRestrictedDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57542c21a5b724232daeb1a715a8593", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "1fa24dc235453d37357a5ffb190f5a3c15a49295", "commitAfterChange": "bba4624fac50881dcc5e81de48fffe05f92e2116", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "     protected void compile()", "signatureAfterChange": "     protected void compile()", "diff": ["-                // Success - check", "-                for (Iterator i = updateDirList.iterator(); i.hasNext();) {", "-                    File file = (File) i.next();", "-                    file.setLastModified(System.currentTimeMillis());", "+                // Success", "+                try {", "+                    generateMissingPackageInfoClasses();", "+                } catch (IOException x) {", "+                    // Should this be made a nonfatal warning?", "+                    throw new BuildException(x, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cee84667f1249823fc3dfc40f97e6488", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "1523b24a93d8e4b849afd938ab7eaffcb6031969", "commitAfterChange": "ce1af4647df3f1fab5344250d1751b334e774d77", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void setInitialProperties(Map properties)          throws ExecutionException", "signatureAfterChange": "     protected void setInitialProperties(Map properties)          throws ExecutionException", "diff": ["-        if (properties == null) {", "-            return;", "+        if (properties != null) {", "+            addProperties(properties);", "-        for (Iterator i = properties.keySet().iterator(); i.hasNext(); ) {", "-            String name = (String)i.next();", "-            Object value = properties.get(name);", "-            setDataValue(name, value, false);", "-        }", "+", "+        // add in system properties", "+        addProperties(System.getProperties());"]}]}