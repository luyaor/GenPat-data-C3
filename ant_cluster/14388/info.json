{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05f5686d25d77998b42d02ead0d5d72d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5bff31798a47e66839b5721275a1225", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = selectors.iterator(); i.hasNext(); ) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectors) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);", "-            for (Iterator i = additionalPatterns.iterator(); i.hasNext(); ) {", "-                PatternSet ps = (PatternSet) i.next();", "+            for (PatternSet ps : additionalPatterns) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1adebfd5942361c148005cf61304208", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/DataType.java", "commitBeforeChange": "74f104a7d1a7db5bc378cd4427a4e33720f34d6d", "commitAfterChange": "de93400d04ba220ab724125f4e869e3daa37f1d4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void dieOnCircularReference(Stack stk, Project p)          throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference( final Stack stack,                                            final Project project )         throws BuildException", "diff": ["-    protected void dieOnCircularReference(Stack stk, Project p) ", "+    protected void dieOnCircularReference( final Stack stack,", "+                                           final Project project )", "-        Object o = ref.getReferencedObject(p);", "+        Object o = ref.getReferencedObject(project);", "-            if (stk.contains(o)) {", "+            if (stack.contains(o)) {", "-                stk.push(o);", "-                ((DataType) o).dieOnCircularReference(stk, p);", "-                stk.pop();", "+                stack.push(o);", "+                ((DataType) o).dieOnCircularReference(stack, project);", "+                stack.pop();"]}]}