{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4ac584c3d14ae937402f9ec4bddc5fd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06e1605c799b487b9fa0dacfcabca830", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UntarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testDocumentationClaimsOnCopy()", "signatureAfterChange": "      @Test     public void testDocumentationClaimsOnCopy()", "diff": ["+    @Test", "-        executeTarget(\"testDocumentationClaimsOnCopy\");", "-        assertFalse(new File(getProject().getProperty(\"output\"), \"untar/1/foo\").exists());", "-        assertTrue(new File(getProject().getProperty(\"output\"), \"untar/2/bar\").exists());", "+        buildRule.executeTarget(\"testDocumentationClaimsOnCopy\");", "+        assertFalse(new File(buildRule.getProject().getProperty(\"output\"), \"untar/1/foo\").exists());", "+        assertTrue(new File(buildRule.getProject().getProperty(\"output\"), \"untar/2/bar\").exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a986e4825408befc9b3f2021657bca3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testDocumentationClaimsOnCopy()", "signatureAfterChange": "      @Test     public void testDocumentationClaimsOnCopy()", "diff": ["+    @Test", "-        executeTarget(\"testDocumentationClaimsOnCopy\");", "-        assertFileMissing(\"1/foo is excluded\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"2/bar is not excluded\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testDocumentationClaimsOnCopy\");", "+        assertFileMissing(\"1/foo is excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"2/bar is not excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}]}