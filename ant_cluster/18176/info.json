{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77d425f15f0f081eae8fa0a4b44de6f3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035364cd4b856b526cb54ea0b97cfd01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testDelete()", "signatureAfterChange": "      @Test     public void testDelete()", "diff": ["+    @Test", "-        if (supportsSymlinks) {", "-            executeTarget(\"test-delete\");", "-            p = getProject();", "-            String linkDeleted = p.getProperty(\"test.delete.link.still.there\");", "-            assertNotNull(\"Actual file deleted by symlink\",", "-                          p.getProperty(\"test.delete.file.still.there\"));", "-            if (linkDeleted != null) {", "-                fail(linkDeleted);", "-            }", "+        buildRule.executeTarget(\"test-delete\");", "+        Project p = buildRule.getProject();", "+        String linkDeleted = p.getProperty(\"test.delete.link.still.there\");", "+        assertNotNull(\"Actual file deleted by symlink\",", "+                      p.getProperty(\"test.delete.file.still.there\"));", "+        if (linkDeleted != null) {", "+            fail(linkDeleted);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e94d885ae832b789ad7bd17f35733f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "       public void testSingle()", "signatureAfterChange": "      @Test     public void testSingle()", "diff": ["-", "+    @Test", "-        if (supportsSymlinks) {", "-            executeTarget(\"test-single\");", "-            p = getProject();", "-            assertNotNull(\"Failed to create file\",", "+        buildRule.executeTarget(\"test-single\");", "+        Project p = buildRule.getProject();", "+        assertNotNull(\"Failed to create file\",", "-            assertNotNull(\"Failed to create link\",", "+        assertNotNull(\"Failed to create link\",", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82ad039d80f896d05e445f95f2e4b478", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testRecreate()", "signatureAfterChange": "      @Test     public void testRecreate()", "diff": ["+    @Test", "-        if (supportsSymlinks) {", "-            executeTarget(\"test-recreate\");", "-            p = getProject();", "-            String link1Rem = p.getProperty(\"test.recreate.link1.not.removed\");", "-            String link2Rem = p.getProperty(\"test.recreate.link2.not.removed\");", "-            String link3Rem = p.getProperty(\"test.recreate.link3.not.removed\");", "-            String dirlinkRem = p.getProperty(\"test.recreate.dirlink.not.removed\");", "-            if (link1Rem != null) {", "-                fail(link1Rem);", "-            }", "-            if (link2Rem != null) {", "-                fail(link2Rem);", "-            }", "-            if (link3Rem != null) {", "-                fail(link3Rem);", "-            }", "-            if (dirlinkRem != null) {", "-                fail(dirlinkRem);", "-            }", "-            assertNotNull(\"Failed to recreate link1\",", "-                          p.getProperty(\"test.recreate.link1.recreated\"));", "-            assertNotNull(\"Failed to recreate link2\",", "-                          p.getProperty(\"test.recreate.link2.recreated\"));", "-            assertNotNull(\"Failed to recreate link3\",", "-                          p.getProperty(\"test.recreate.link3.recreated\"));", "-            assertNotNull(\"Failed to recreate dirlink\",", "-                          p.getProperty(\"test.recreate.dirlink.recreated\"));", "-            ", "-            String doubleRecreate = p.getProperty(\"test.recreate.dirlink2.recreated.twice\");", "-", "-            if (doubleRecreate != null) {", "-                fail(doubleRecreate);", "-            }", "-", "-            assertNotNull(\"Failed to alter dirlink3\",", "-                          p.getProperty(\"test.recreate.dirlink3.was.altered\"));", "-", "+        buildRule.executeTarget(\"test-recreate\");", "+        Project p = buildRule.getProject();", "+        String link1Rem = p.getProperty(\"test.recreate.link1.not.removed\");", "+        String link2Rem = p.getProperty(\"test.recreate.link2.not.removed\");", "+        String link3Rem = p.getProperty(\"test.recreate.link3.not.removed\");", "+        String dirlinkRem = p.getProperty(\"test.recreate.dirlink.not.removed\");", "+        if (link1Rem != null) {", "+            fail(link1Rem);", "+        if (link2Rem != null) {", "+            fail(link2Rem);", "+        }", "+        if (link3Rem != null) {", "+            fail(link3Rem);", "+        }", "+        if (dirlinkRem != null) {", "+            fail(dirlinkRem);", "+        }", "+        assertNotNull(\"Failed to recreate link1\",", "+                      p.getProperty(\"test.recreate.link1.recreated\"));", "+        assertNotNull(\"Failed to recreate link2\",", "+                      p.getProperty(\"test.recreate.link2.recreated\"));", "+        assertNotNull(\"Failed to recreate link3\",", "+                      p.getProperty(\"test.recreate.link3.recreated\"));", "+        assertNotNull(\"Failed to recreate dirlink\",", "+                      p.getProperty(\"test.recreate.dirlink.recreated\"));", "+", "+        String doubleRecreate = p.getProperty(\"test.recreate.dirlink2.recreated.twice\");", "+", "+        if (doubleRecreate != null) {", "+            fail(doubleRecreate);", "+        }", "+", "+        assertNotNull(\"Failed to alter dirlink3\",", "+                      p.getProperty(\"test.recreate.dirlink3.was.altered\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adcb4a4cc447d312b1058f8856625c83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testRecord()", "signatureAfterChange": "      @Test     public void testRecord()", "diff": ["+    @Test", "-        if (supportsSymlinks) {", "-            executeTarget(\"test-record\");", "-            p = getProject();", "+        buildRule.executeTarget(\"test-record\");", "+        Project p = buildRule.getProject();", "-            assertNotNull(\"Failed to create dir1\",", "-                          p.getProperty(\"test.record.dir1.created\"));", "+        assertNotNull(\"Failed to create dir1\",", "+                      p.getProperty(\"test.record.dir1.created\"));", "-            assertNotNull(\"Failed to create dir2\",", "-                          p.getProperty(\"test.record.dir2.created\"));", "+        assertNotNull(\"Failed to create dir2\",", "+                      p.getProperty(\"test.record.dir2.created\"));", "-            assertNotNull(\"Failed to create file1\",", "-                          p.getProperty(\"test.record.file1.created\"));", "+        assertNotNull(\"Failed to create file1\",", "+                      p.getProperty(\"test.record.file1.created\"));", "-            assertNotNull(\"Failed to create file2\",", "-                          p.getProperty(\"test.record.file2.created\"));", "+        assertNotNull(\"Failed to create file2\",", "+                      p.getProperty(\"test.record.file2.created\"));", "-            assertNotNull(\"Failed to create fileA\",", "-                          p.getProperty(\"test.record.fileA.created\"));", "+        assertNotNull(\"Failed to create fileA\",", "+                      p.getProperty(\"test.record.fileA.created\"));", "-            assertNotNull(\"Failed to create fileB\",", "-                          p.getProperty(\"test.record.fileB.created\"));", "+        assertNotNull(\"Failed to create fileB\",", "+                      p.getProperty(\"test.record.fileB.created\"));", "-            assertNotNull(\"Failed to create fileC\",", "-                          p.getProperty(\"test.record.fileC.created\"));", "+        assertNotNull(\"Failed to create fileC\",", "+                      p.getProperty(\"test.record.fileC.created\"));", "-            assertNotNull(\"Failed to create link1\",", "-                          p.getProperty(\"test.record.link1.created\"));", "+        assertNotNull(\"Failed to create link1\",", "+                      p.getProperty(\"test.record.link1.created\"));", "-            assertNotNull(\"Failed to create link2\",", "-                          p.getProperty(\"test.record.link2.created\"));", "+        assertNotNull(\"Failed to create link2\",", "+                      p.getProperty(\"test.record.link2.created\"));", "-            assertNotNull(\"Failed to create link3\",", "-                          p.getProperty(\"test.record.link3.created\"));", "+        assertNotNull(\"Failed to create link3\",", "+                      p.getProperty(\"test.record.link3.created\"));", "-            assertNotNull(\"Failed to create dirlink\",", "-                          p.getProperty(\"test.record.dirlink.created\"));", "+        assertNotNull(\"Failed to create dirlink\",", "+                      p.getProperty(\"test.record.dirlink.created\"));", "-            assertNotNull(\"Failed to create dirlink2\",", "-                          p.getProperty(\"test.record.dirlink2.created\"));", "+        assertNotNull(\"Failed to create dirlink2\",", "+                      p.getProperty(\"test.record.dirlink2.created\"));", "-            assertNotNull(\"Couldn't record links in dir1\",", "-                          p.getProperty(\"test.record.dir1.recorded\"));", "+        assertNotNull(\"Couldn't record links in dir1\",", "+                      p.getProperty(\"test.record.dir1.recorded\"));", "-            assertNotNull(\"Couldn't record links in dir2\",", "-                          p.getProperty(\"test.record.dir2.recorded\"));", "+        assertNotNull(\"Couldn't record links in dir2\",", "+                      p.getProperty(\"test.record.dir2.recorded\"));", "-            String dir3rec = p.getProperty(\"test.record.dir3.recorded\");", "+        String dir3rec = p.getProperty(\"test.record.dir3.recorded\");", "-            if (dir3rec != null) {", "-                fail(dir3rec);", "-            }", "-", "+        if (dir3rec != null) {", "+            fail(dir3rec);", "+"]}]}