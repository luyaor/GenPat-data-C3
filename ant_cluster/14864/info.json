{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64252368c0d8651561c34469ae17e9ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6669baa36323e6003646fc89f6049250", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testNoRecompile()", "signatureAfterChange": "      @Test     public void testNoRecompile()", "diff": ["+    @Test", "-        executeTarget(\"test9\");", "-        assertEquals(-1, getFullLog().indexOf(\"Skipped grammar file.\"));", "-        executeTarget(\"noRecompile\");", "-        assertTrue(-1 != getFullLog().indexOf(\"Skipped grammar file.\"));", "+        buildRule.executeTarget(\"test9\");", "+        assertNotContains(\"Skipped grammar file.\", buildRule.getFullLog());", "+        buildRule.executeTarget(\"noRecompile\");", "+        assertContains(\"Skipped grammar file.\", buildRule.getFullLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21d9ecd35ac8bfc0cea5c40d63ef30b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/ANTLRTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testSupergrammarChangeRecompile()", "signatureAfterChange": "      @Test     public void testSupergrammarChangeRecompile()", "diff": ["+    @Test", "-        executeTarget(\"test9\");", "-        assertEquals(-1, getFullLog().indexOf(\"Skipped grammar file.\"));", "-        executeTarget(\"supergrammarChangeRecompile\");", "-        assertEquals(-1, getFullLog().indexOf(\"Skipped grammar file.\"));", "-    }", "+        buildRule.executeTarget(\"test9\");", "+        assertNotContains(\"Skipped grammar file.\", buildRule.getFullLog());", "+        FileUtilities.rollbackTimetamps(buildRule.getOutputDir(), 5);", "+", "+        buildRule.executeTarget(\"supergrammarChangeRecompile\");", "+        assertNotContains(\"Skipped grammar file.\", buildRule.getFullLog());", "+"]}]}