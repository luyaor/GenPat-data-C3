{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dca69e051de06a0a808729c782dc2b61", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "606a5793857bb561699b6c1ebb3080db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     protected Map buildMap(Resource[] fromResources, final File toDir,                            FileNameMapper mapper)", "signatureAfterChange": "     protected Map<Resource, String[]> buildMap(Resource[] fromResources, final File toDir,                            FileNameMapper mapper)", "diff": ["-    protected Map buildMap(Resource[] fromResources, final File toDir,", "+    protected Map<Resource, String[]> buildMap(Resource[] fromResources, final File toDir,", "-        HashMap map = new HashMap();", "+        HashMap<Resource, String[]> map = new HashMap<Resource, String[]>();", "-            Vector v = new Vector();", "+            Vector<Resource> v = new Vector<Resource>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cbb745bd83c20bd14dfacd9f865c5a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public Object initialValue()", "signatureAfterChange": "         protected Map<URL, Location> initialValue()", "diff": ["-    private static class ResourceStack extends ThreadLocal {", "-        public Object initialValue() {", "-            return new HashMap();", "+    private static final ThreadLocal<Map<URL, Location>> RESOURCE_STACK = new ThreadLocal<Map<URL, Location>>() {", "+        protected Map<URL, Location> initialValue() {", "+            return new HashMap<URL, Location>();"]}]}