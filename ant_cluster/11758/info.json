{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75419cc09a8082b9ad50884a61303b43", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e29aae4a8fdd320c283f30f72a2f86", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "c5e898eba1186671ae711c74497362310391b6b5", "commitAfterChange": "bcb846c8052a13d203836f221d8e2d7bf636e2f0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static void doReportSystemProperties(PrintStream out)", "signatureAfterChange": "     private static void doReportSystemProperties(PrintStream out)", "diff": ["-        for (Enumeration keys = System.getProperties().propertyNames();", "+        Properties sysprops = null;", "+        try {", "+            sysprops = System.getProperties();", "+        } catch (SecurityException  e) {", "+            out.println(\"Access to System.getProperties() blocked \" +", "+                    \"by a security manager\");", "+        }", "+        for (Enumeration keys = sysprops.propertyNames();", "-            out.println(key + \" : \" + System.getProperty(key));", "+            String value;", "+            try {", "+                value = System.getProperty(key);", "+            } catch (SecurityException e) {", "+                value = \"Access to this property blocked by a security manager\";", "+            }", "+            out.println(key + \" : \" + value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7243a5917d1d95fcd9e09ff9a49c0662", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "c098b9c80d5ef451dfd683510c9f6c28489a8685", "commitAfterChange": "313479bb3569061c2598d90274930c4957d36364", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-                sendOutAndErr(new String(outStrm.toByteArray()),", "-                              new String(errStrm.toByteArray()));", "+                String out, err;", "+                try {", "+                    out = new String(outStrm.toByteArray());", "+                } catch (OutOfMemoryError ex) {", "+                    out = \"out of memory on output stream\";", "+                }", "+                try {", "+                    err = new String(errStrm.toByteArray());", "+                } catch (OutOfMemoryError ex) {", "+                    err = \"out of memory on error stream\";", "+                }", "+                sendOutAndErr(out, err);"]}]}