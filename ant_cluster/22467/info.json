{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e4c03e9a8f02430441612ca2c4df2ab", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a87d35356d943b917c02f70109bc3da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Echo.java", "commitBeforeChange": "f7cec58a607900954a1686009fb5ebe4ea6ddea6", "commitAfterChange": "3ae69e82c33e0e03941387a3506561accc2697d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (output == null) {", "-            log(message, logLevel);", "-        } else {", "-            Writer out = null;", "-            try {", "-                OutputStream os = output instanceof FileProvider ? os = new FileOutputStream(", "-                        ((FileProvider) output).getFile(), append) : output.getOutputStream();", "-                OutputStreamWriter osw = (encoding == null || \"\".equals(encoding)) ? new OutputStreamWriter(", "-                        os)", "-                        : new OutputStreamWriter(os, encoding);", "-                out = new BufferedWriter(osw);", "-                out.write(message, 0, message.length());", "-            } catch (IOException ioe) {", "-                throw new BuildException(ioe, getLocation());", "-            } finally {", "-                FileUtils.close(out);", "-            }", "+        final String msg = \"\".equals(message) ? StringUtils.LINE_SEP : message;", "+        try {", "+            ResourceUtils", "+                    .copyResource(new StringResource(msg), output == null ? new LogOutputResource(", "+                            this, logLevel) : output, null, null, false, false, append, null, \"\"", "+                            .equals(encoding) ? null : encoding, getProject());", "+        } catch (IOException ioe) {", "+            throw new BuildException(ioe, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c860c20cedb6119c999b3b77720f4182", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "3ae69e82c33e0e03941387a3506561accc2697d3", "commitAfterChange": "1e962d0d6d74a53709e9cff40a0c6422d27ec3bf", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        if (binary && destinationFile == null) {", "+        if (binary && dest == null) {", "-                \"destfile attribute is required for binary concatenation\");", "+                \"dest|destfile attribute is required for binary concatenation\");", "-            log(destinationFile + \" is up-to-date.\", Project.MSG_VERBOSE);", "+            log(dest + \" is up-to-date.\", Project.MSG_VERBOSE);", "-        OutputStream out;", "-        if (destinationFile == null) {", "-            // Log using WARN so it displays in 'quiet' mode.", "-            out = new LogOutputStream(this, Project.MSG_WARN);", "-        } else {", "-            try {", "-                // ensure that the parent dir of dest file exists", "-                File parent = destinationFile.getParentFile();", "-                if (!parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-                // use getPath() for pre-JDK 1.4 compatibility:", "-                out = new FileOutputStream(destinationFile.getPath(), append);", "-            } catch (Throwable t) {", "-                throw new BuildException(\"Unable to open \"", "-                    + destinationFile + \" for writing\", t);", "-            }", "-        }", "-        InputStream catStream;", "-            catStream = new ConcatResource(c).getInputStream();", "+            //most of these are defaulted because the concat-as-a-resource code hijacks a lot:", "+            ResourceUtils.copyResource(new ConcatResource(c), dest == null ? new LogOutputResource(", "+                    this, Project.MSG_WARN) : dest, null, null, true, false, append, null, null,", "+                    getProject());", "-            throw new BuildException(\"error getting concatenated resource content\", e);", "+            throw new BuildException(\"error concatenating content to \" + dest, e);", "-        pump(catStream, out);"]}]}