{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e26893dc5341cd6078006714a83dcf7d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51c440dc7af1646578f337033d8d1673", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/CvsTagDiff.java", "commitBeforeChange": "b5c4bdbec2f8a8c26b6466a588ba64d0f375152e", "commitAfterChange": "c19671d815432f4a9b18a3d7986d611f6f6ca57e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private CvsTagEntry[] parseRDiff(File tmpFile) throws BuildException", "signatureAfterChange": "     private CvsTagEntry[] parseRDiff(File tmpFile) throws BuildException", "diff": ["+            //CVS 1.11", "+            //CVS 1.11.9", "+            // File module/filename is new; cvstag_2003_11_03_2  revision 1.1", "-", "+            //CVS 1.11.9", "+            // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1", "+            //", "-            int headerLength = FILE_STRING.length() + mypackage.length() + 1;", "+            String toBeRemoved = FILE_STRING + mypackage + \"/\";", "+            int headerLength = toBeRemoved.length();", "-                    line = line.substring(headerLength);", "+                    if (line.startsWith(toBeRemoved)) {", "+                        line = line.substring(headerLength);", "+                    } else {", "+                        line = line.substring(FILE_STRING.length());", "+                    }", "-//CVS 1.11", "-//File apps/websphere/lib/something.jar is new; current revision 1.2", "-//CVS 1.11.9", "-//File apps/websphere/lib/something.jar is new; cvstag_2003_11_03_2 revision 1.2", "-                        entry = new CvsTagEntry(filename);", "+                        String rev = null;", "+                        int indexrev = -1;", "+                        if ((indexrev = line.indexOf(REVISION, index)) != -1) {", "+                            rev = line.substring(indexrev + REVISION.length());", "+                        }", "+                        entry = new CvsTagEntry(filename, null, rev);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60bf1cceb3ace596ef5d183bc389581", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/CvsTagDiff.java", "commitBeforeChange": "a1853e2770a23f6ec76fd0c3ed2c0ea428ae40c6", "commitAfterChange": "70f35e75416468e31f537f33b248caaae29ee587", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private static String removePackageName(String line, List packageNames)", "signatureAfterChange": "     private static String removePackageName(String line,                                             String[] packagePrefixes,                                             int[] prefixLengths)", "diff": ["-    private static String removePackageName(String line, List packageNames) {", "+    private static String removePackageName(String line,", "+                                            String[] packagePrefixes,", "+                                            int[] prefixLengths) {", "+        if (line.length() < FILE_STRING_LENGTH) {", "+            return null;", "+        }", "-        for (Iterator iter = packageNames.iterator(); iter.hasNext(); ) {", "-            String toBeRemoved = FILE_STRING + iter.next() + \"/\";", "-            int len = toBeRemoved.length();", "-            if (line.length() > len) {", "-                if (line.startsWith(toBeRemoved)) {", "-                    matched = true;", "-                    line = line.substring(len);", "-                    break;", "-                }", "+        for (int i = 0; i < packagePrefixes.length; i++) {", "+            if (line.startsWith(packagePrefixes[i])) {", "+                matched = true;", "+                line = line.substring(prefixLengths[i]);", "+                break;", "-        if (!matched && line.length() > FILE_STRING.length()) {", "-            line = line.substring(FILE_STRING.length());", "-            matched = true;", "+        if (!matched) {", "+            line = line.substring(FILE_STRING_LENGTH);", "-        return !matched ? null : line;", "+        return line;"]}]}