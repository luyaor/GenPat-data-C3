{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75b768ad4ee28f8e62fd9b5b599e67ee", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39a0e4f078b8f235f4061bf44fa560ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 35, "signatureBeforeChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model)          throws ExecutionException", "diff": ["-                     = new ExecutionContext(this, eventSupport);", "+                     = new ExecutionContext(this);", "+                configureElement(typeInstance, model);", "+                component.validateComponent();", "+            } else {", "+                configureElement(typeInstance, model);", "-", "-            configureElement(typeInstance, model);", "-            e.setLocation(model.getLocation());", "+            e.setLocation(model.getLocation(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7348054d3f27199e034b8ffc05ebe3f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void createNestedElement(Reflector reflector, Object element,                                      BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void createNestedElement(Reflector reflector, Object element,                                      BuildElement model)          throws ExecutionException", "diff": ["-        if (nestedElement instanceof ExecutionComponent) {", "-            ExecutionComponent component = (ExecutionComponent)nestedElement;", "-            ExecutionContext context", "-                 = new ExecutionContext(this, eventSupport);", "-            context.setModelElement(model);", "-            component.init(context);", "-        }", "-", "-            configureElement(nestedElement, model);", "+            if (nestedElement instanceof ExecutionComponent) {", "+                ExecutionComponent component", "+                     = (ExecutionComponent)nestedElement;", "+                ExecutionContext context", "+                     = new ExecutionContext(this);", "+                context.setModelElement(model);", "+                component.init(context);", "+                configureElement(nestedElement, model);", "+                component.validateComponent();", "+            } else {", "+                configureElement(nestedElement, model);", "+            }", "-            e.setLocation(model.getLocation());", "+            e.setLocation(model.getLocation(), false);"]}]}