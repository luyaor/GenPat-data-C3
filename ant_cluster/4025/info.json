{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f679a725ea1340ed571490313fa395ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8006264aa81ed10e18e479801cc6a1ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "commitAfterChange": "abd749ac59547f30196666617311f6737bf4369d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void catFiles(File base, String[] files)", "signatureAfterChange": "     private void catFiles(File base, String[] files)", "diff": ["-        final int len = files.length;", "-        String[] input = new String[len];", "-        for (int i = 0; i < len; i++) {", "+        Vector inputFileNames = new Vector();", "+        for (int i = 0; i < files.length; i++) {", "-            input[i] = current.getAbsolutePath();", "+            inputFileNames.addElement(current.getAbsolutePath());", "+        final int len = inputFileNames.size();", "+        String[] input = new String[len];", "+        inputFileNames.copyInto(input);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba28c8a8b433db29164e60e0bdeb1900", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "ae16bb711b331f6c8a20ee1298cf171de43266f7", "commitAfterChange": "e0ad7527a06eb0e9513160b0c5b49bc9f8ab5f5b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        project.log(\"Building \"+ archiveType +\": \"+ zipFile.getAbsolutePath());", "-", "+        // quick exit if the target is up to date", "+        boolean upToDate = true;", "+        for (int i=0; i<files.length && upToDate; i++)", "+            if (new File(baseDir,files[i]).lastModified() > ", "+                zipFile.lastModified())", "+                upToDate = false;", "+        if (upToDate) return;", "+", "+        project.log(\"Building \"+ archiveType +\": \"+ zipFile.getAbsolutePath());", "+"]}]}