{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54166c343762b9a0aaec6290688fe14c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50723026cd34083b2892a60683813f7f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "0e3229eb49859abf9016131228c195b2174d931f", "commitAfterChange": "cdd1db5a99ce25571948be5fd185baf25cb624d0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Object processNode (Node node, String prefix, Object container)", "signatureAfterChange": "     public Object processNode (Node node, String prefix, Object container)", "diff": ["+        String nodeText = null;", "+            // For the text node, add a property.", "+            nodeText = getAttributeValue(node);", "+        } else if ((node.getNodeType() == Node.ELEMENT_NODE) ", "+            && (node.getChildNodes().getLength() == 1)", "+            && (node.getFirstChild().getNodeType() == Node.CDATA_SECTION_NODE)) {", "+", "+            nodeText = node.getFirstChild().getNodeValue();", "+        }", "+        ", "+        if (nodeText != null) {", "+                System.out.println(\"Setting id = \" + id);", "-            // For the text node, add a property.", "-            String nodeText = getAttributeValue(node);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e547953969e0a572c06fa20ae2c5d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory.java", "commitBeforeChange": "18aa085b70f966d82f90709bbe6ab276617057e6", "commitAfterChange": "85f05e8b8d719e03559e6b07e480b6c0812dfd56", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static RmicAdapter getRmic(String rmicType, Task task)         throws BuildException", "signatureAfterChange": "     public static RmicAdapter getRmic(String rmicType, Task task)         throws BuildException", "diff": ["-        if (rmicType.equalsIgnoreCase(\"sun\")) {", "+", "+        //handle default specially.", "+        if(DEFAULT_COMPILER.equalsIgnoreCase(rmicType) || rmicType.length()==0) {", "+            String adapter = KaffeRmic.isAvailable() ?", "+                    KaffeRmic.COMPILER_NAME", "+                    :SunRmic.COMPILER_NAME;", "+            return getRmic(adapter,task);", "+        }", "+", "+        if (SunRmic.COMPILER_NAME.equalsIgnoreCase(rmicType)) {", "-        } else if (rmicType.equalsIgnoreCase(\"kaffe\")) {", "+        } else if (KaffeRmic.COMPILER_NAME.equalsIgnoreCase(rmicType)) {", "-        } else if (rmicType.equalsIgnoreCase(\"weblogic\")) {", "+        } else if (WLRmic.COMPILER_NAME.equalsIgnoreCase(rmicType)) {", "-        } else if (rmicType.equalsIgnoreCase(\"forking\")) {", "+        } else if (ForkingSunRmic.COMPILER_NAME.equalsIgnoreCase(rmicType)) {"]}]}