{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1eb6fd0a7340f928e7281c8f68b18367", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "041d72f0838b6f66e203e4118a183e6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/TokenFilter.java", "commitBeforeChange": "9daeaaf04e9a32dce7e51c19184e0e1c894e673f", "commitAfterChange": "6e2df44c948e89915d089a6bd1504a2f4de73532", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 42, "signatureBeforeChange": "         public void setDelims(String delims)", "signatureAfterChange": "     public static String resolveBackSlash(String input)", "diff": ["-         */", "-        public void setDelims(String delims) {", "-            this.delims = resolveBackSlash(delims).toCharArray();", "-        }", "+        return StringUtils.resolveBackSlash(input);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97150bd54a3118b5a5ec081df362ba6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "commitAfterChange": "af0505dd8ad69538cef3c64f9674c27c1d1775fb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  public void read(BufferedReader reader) throws IOException", "signatureAfterChange": "                  public String read(BufferedReader reader) throws IOException", "diff": ["-        public void read(BufferedReader reader) throws IOException {", "+        public String read(BufferedReader reader) throws IOException {", "-                    return;", "+                    return null;", "-                    if (name == null && attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                        throw new IOException(\"The \" + ATTR_NAME + \" header may not occur in the main section \");", "+                    if (attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "+                        return attribute.getValue();"]}]}