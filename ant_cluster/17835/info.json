{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5984af8262a5964ff357d0623235cd1e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3019fed9664bfc5fce7250ab6f10cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "0777fa853af3a619d777adaead96e9c0d1aff291", "commitAfterChange": "5061e731c3919a7236bdcdd2ad9965d384313e26", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setEol(CrLf attr)", "signatureAfterChange": "     public void setEol(CrLf attr)", "diff": ["-        String option = attr.getValue();", "-        if (option.equals(\"asis\")) {", "-            eol = ASIS;", "-        } else if (option.equals(\"cr\") || option.equals(\"mac\")) {", "-            eol = CR;", "-            eolstr = \"\\r\";", "-        } else if (option.equals(\"lf\") || option.equals(\"unix\")) {", "-            eol = LF;", "-            eolstr = \"\\n\";", "-        } else {", "-            // Must be \"crlf\"", "-            eol = CRLF;", "-            eolstr = \"\\r\\n\";", "-        }", "+        filter.setEol(FixCrLfFilter.CrLf.newInstance(attr.getValue()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98692079709fea72e16ed63fbfe24cd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "c1a5419faf39033ffc2db1dcf8000f6a796f2dad", "commitAfterChange": "4ca5683c2a54ff4a141ed562a0f3b431b153b2c2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        // scan source directories and dest directory to build up both copy lists and", "+        // scan source directories and dest directory to build up ", "+", "+            CompilerAdapter adapter = CompilerAdapterFactory.getCompiler(", "+              compiler, this );", "-            boolean compileSucceeded = false;", "-", "-            if (compiler.equalsIgnoreCase(\"classic\")) {", "-                compileSucceeded = doClassicCompile();", "-            } else if (compiler.equalsIgnoreCase(\"modern\")) {", "-                compileSucceeded = doModernCompile();", "-            } else if (compiler.equalsIgnoreCase(\"jikes\")) {", "-                compileSucceeded = doJikesCompile();", "-            } else if (compiler.equalsIgnoreCase(\"jvc\")) {", "-                compileSucceeded = doJvcCompile();", "-            } else {", "-                String msg = \"Don't know how to use compiler \" + compiler;", "-                throw new BuildException(msg, location);", "-            }", "+            // now we need to populate the compiler adapter", "+            adapter.setJavac( this );", "-            if (!compileSucceeded) {", "+            // finally, lets execute the compiler!!", "+            if (!adapter.execute()) {"]}]}