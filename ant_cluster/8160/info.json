{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f374e08bfd5b3eee1b1ce34550e932cc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c0c6fe93ebf44ffb1b8ce2cb0c082be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "c82099323bbec8331592ef51593616b6ffa10dba", "commitAfterChange": "14770e40d56326507876f30b20ea4494f441694f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public FileNameMapper getImplementation() throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation() throws BuildException", "diff": ["-            return getRef().getImplementation();", "+            dieOnCircularReference();", "+            Reference r = getRefid();", "+            Object o = r.getReferencedObject(getProject());", "+            if (o instanceof FileNameMapper) {", "+                return (FileNameMapper) o;", "+            }", "+            if (o instanceof Mapper) {", "+                return ((Mapper) o).getImplementation();", "+            }", "+            String od = o == null ? \"null\" : o.getClass().getName();", "+            throw new BuildException(od + \" at reference '\"", "+                + r.getRefId() + \"' is not a valid mapper reference.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b771d0b801a945363fec8b1486afcb99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "b3dffa5f955c1cd32b73ac3b100e648e1106de6c", "commitAfterChange": "b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void parse() throws BuildException", "signatureAfterChange": "     private void parse() throws BuildException", "diff": ["-            throw new BuildException(exc.getMessage(), exc.getException(), location);", "+", "+            Throwable t = exc.getException();", "+            if (t instanceof BuildException) {", "+                BuildException be = (BuildException) t;", "+                if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "+                    be.setLocation(location);", "+                }", "+                throw be;", "+            }", "+            ", "+            throw new BuildException(exc.getMessage(), t, location);", "-            throw new BuildException(exc.getMessage(), exc.getException());", "+            Throwable t = exc.getException();", "+            if (t instanceof BuildException) {", "+                throw (BuildException) t;", "+            }", "+            throw new BuildException(exc.getMessage(), t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fabe46668bae98e57e6e3b99e6ad3b88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "89fcd5b57af66a3699964a5b445a3c94bfdd901c", "commitAfterChange": "78b414381f8d0da9249558b3dd922319fa89c5fa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                FileSet fs = (FileSet) filesets.elementAt(i);", "+", "+                Object o = filesets.elementAt(i);", "+                FileSet fs = null;", "+                if (o instanceof FileSet) {", "+                    fs = (FileSet) o;", "+                } else {", "+                    Reference r = (Reference) o;", "+                    o = r.getReferencedObject(project);", "+                    if (o instanceof FileSet) {", "+                        fs = (FileSet) o;", "+                    } else {", "+                        String msg = r.getRefId()+\" doesn\\'t denote a fileset\";", "+                        throw new BuildException(msg, location);", "+                    }", "+                }", "+                "]}]}