{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4879be30161b2c3f6bc4e49ee6cd6970", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2259cdf8d27b33c94dbcb0599dbdf691", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "23a58df47dca238cc3a25e99845e14584c68d686", "commitAfterChange": "7517bc70580950fd744751a673d7c9b77ca06d94", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public synchronized void setNewProperty(String ns, String name,                                             Object value)", "signatureAfterChange": "     public synchronized void setNewProperty(String ns, String name,                                             Object value)", "diff": ["-        if (null != properties.get(name)) {", "+        LocalProperty local = threadLocalProperties.getLocalProperty(name);", "+        boolean localPropertySet =", "+            local != null && local.getValue() != null;", "+        boolean localProperty = local != null;", "+", "+        if ((properties.get(name) != null && !localProperty)", "+            || localPropertySet) {", "-                + \"\\\"\", Project.MSG_VERBOSE);", "+                        + \"\\\"\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23bd1dae39726ce5f0f74095a3fed90e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void buildProjectRef( final DefaultProject project,                                   final Configuration element,                                   final HashMap projects )         throws Exception", "signatureAfterChange": "      private void buildProjectRef( final DefaultProject project,                                   final Configuration element,                                   final HashMap projects )         throws Exception", "diff": ["-            throw new Exception( \"Malformed projectref without a name attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.projectref-no-name.error\", element.getLocation() );", "+            throw new Exception( message );", "-            throw new Exception( \"Projectref with an invalid name attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.projectref-bad-name.error\", element.getLocation() );", "+            throw new Exception( message );", "-            throw new Exception( \"Malformed projectref without a location attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.projectref-no-location.error\", element.getLocation() );", "+            throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64549f81b465929c97245d8c64c8bffd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MParse.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected String[] getOptions() throws TaskException", "signatureAfterChange": "     protected String[] getOptions() throws TaskException", "diff": ["-        if( ! m_classpath.isEmpty() )", "+        final String[] classpath = m_classpath.listFiles( getContext() );", "+        if( classpath.length > 0 )", "-            options.add( PathUtil.formatPath( m_classpath ) );", "+            options.add( PathUtil.formatPath( classpath ) );", "-        if( ! m_sourcepath.isEmpty() )", "+        final String[] sourcepath = m_sourcepath.listFiles( getContext() );", "+        if( sourcepath.length > 0 )", "-            options.add( PathUtil.formatPath( m_sourcepath ) );", "+            options.add( PathUtil.formatPath( sourcepath ) );"]}]}