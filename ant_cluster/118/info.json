{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6b082a926d97524aca57c3b91177489", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "491d7b8814559f3dda129064d46a07a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "1efb922bf591d5a8b083c5984b51fd46b0ebb9af", "commitAfterChange": "e12c63a6ee1b0bb45e9821ff84392c9391d76bd9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["+        // #8031: first try Java 1.4.", "+        Class uriClazz = null;", "+        try {", "+            uriClazz = Class.forName(\"java.net.URI\");", "+        } catch (ClassNotFoundException cnfe) {", "+            // Fine, Java 1.3 or earlier, do it by hand.", "+        }", "+        // Also check for properly formed URIs. Ant formerly recommended using", "+        // nonsense URIs such as \"file:./foo.xml\" in XML includes. You shouldn't", "+        // do that (just \"foo.xml\" is correct) but for compatibility we special-case", "+        // things when the path is not absolute, and fall back to the old parsing behavior.", "+        if (uriClazz != null && uri.startsWith(\"file:/\")) {", "+            try {", "+                java.lang.reflect.Method createMethod = uriClazz.getMethod(\"create\", new Class[] {String.class});", "+                Object uriObj = createMethod.invoke(null, new Object[] {uri});", "+                java.lang.reflect.Constructor fileConst = File.class.getConstructor(new Class[] {uriClazz});", "+                File f = (File)fileConst.newInstance(new Object[] {uriObj});", "+                return f.getAbsolutePath();", "+            } catch (java.lang.reflect.InvocationTargetException e) {", "+                Throwable e2 = e.getTargetException();", "+                if (e2 instanceof IllegalArgumentException) {", "+                    // Bad URI, pass this on.", "+                    throw (IllegalArgumentException)e2;", "+                } else {", "+                    // Unexpected target exception? Should not happen.", "+                    e2.printStackTrace();", "+                }", "+            } catch (Exception e) {", "+                // Reflection problems? Should not happen, debug.", "+                e.printStackTrace();", "+            }", "+        }", "+", "+        // Fallback method for Java 1.3 or earlier.", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6febef6aa9aaf28e37b90367abf0099f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "1efb922bf591d5a8b083c5984b51fd46b0ebb9af", "commitAfterChange": "e12c63a6ee1b0bb45e9821ff84392c9391d76bd9", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public String toURI(String path)", "signatureAfterChange": "     public String toURI(String path)", "diff": ["+        // #8031: first try Java 1.4.", "+        Class uriClazz = null;", "+        try {", "+            uriClazz = Class.forName(\"java.net.URI\");", "+        } catch (ClassNotFoundException e) {", "+            // OK, Java 1.3.", "+        }", "+        if (uriClazz != null) {", "+            try {", "+                File f = new File(path).getAbsoluteFile();", "+                java.lang.reflect.Method toURIMethod = File.class.getMethod(\"toURI\", new Class[0]);", "+                Object uriObj = toURIMethod.invoke(f, new Object[] {});", "+                java.lang.reflect.Method toASCIIStringMethod = uriClazz.getMethod(\"toASCIIString\", new Class[0]);", "+                return (String) toASCIIStringMethod.invoke(uriObj, new Object[] {});", "+            } catch (Exception e) {", "+                // Reflection problems? Should not happen, debug.", "+                e.printStackTrace();", "+            }", "+        }"]}]}