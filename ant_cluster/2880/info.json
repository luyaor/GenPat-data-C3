{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da074dc9c216720225ea289fdf176861", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107996bba507a05f5b177ff08dfda460", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/store/DefaultPropertyStore.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public PropertyStore createChildStore( final String name )         throws Exception", "signatureAfterChange": "     public PropertyStore createChildStore( final String name )         throws TaskException", "diff": ["-        throws Exception", "+        throws TaskException", "-        final DefaultPropertyStore store = new DefaultPropertyStore( this, m_validator );", "+        // Build the name for the new store", "+        final String thisName = (String)m_contextData.get( TaskContext.NAME );", "+        final String newName;", "+        if( name == null || name.length() == 0 )", "+        {", "+            newName = thisName;", "+        }", "+        else if( thisName.length() == 0 )", "+        {", "+            newName = name;", "+        }", "+        else", "+        {", "+            newName = thisName + \".\" + name;", "+        }", "-        final String newName = getProperty( TaskContext.NAME ) + \".\" + name;", "-        store.setProperty( TaskContext.NAME, newName );", "-", "-        return store;", "+        return new DefaultPropertyStore( newName, this, m_validator );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3396604bb82d1860f3675fbca807269", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void resolveAllProperties( Properties props )         throws BuildException", "signatureAfterChange": "      private void resolveAllProperties( Properties props )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Enumeration e = props.keys(); e.hasMoreElements();  )", "+        for( Enumeration e = props.keys(); e.hasMoreElements(); )", "-            String name = ( String )e.nextElement();", "+            String name = (String)e.nextElement();", "-                        String fragment = ( String )i.nextElement();", "+                        String fragment = (String)i.nextElement();", "-                            String propertyName = ( String )j.nextElement();", "+                            String propertyName = (String)j.nextElement();", "-                                throw new BuildException( \"Property \" + name + \" was circularly defined.\" );", "+                                throw new TaskException( \"Property \" + name + \" was circularly defined.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e775fecf96538d6ceddcec29e9efbcee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void resolveAllProperties( Properties props )         throws BuildException", "signatureAfterChange": "      private void resolveAllProperties( Properties props )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Enumeration e = props.keys(); e.hasMoreElements();  )", "+        for( Enumeration e = props.keys(); e.hasMoreElements(); )", "-            String name = ( String )e.nextElement();", "+            String name = (String)e.nextElement();", "-                        String fragment = ( String )i.nextElement();", "+                        String fragment = (String)i.nextElement();", "-                            String propertyName = ( String )j.nextElement();", "+                            String propertyName = (String)j.nextElement();", "-                                throw new BuildException( \"Property \" + name + \" was circularly defined.\" );", "+                                throw new TaskException( \"Property \" + name + \" was circularly defined.\" );"]}]}