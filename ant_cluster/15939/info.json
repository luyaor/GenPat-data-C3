{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0cb110dc1fc082fa68d7cda4b01f9d5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85352cfdf29294f6275ce6dd68311fdd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "2f546331b3ac116789f736919ea35c17d069e5ed", "commitAfterChange": "989be3547827d3e3bbfb89f2f245f997689bba56", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\ttry {", "-\t    // Create a new XSL processor with the specified stylesheet", "-\t    if (xslFile != null) {", "-                String file = new File(baseDir,xslFile.toString()).toString();", "-\t\tlog(\"Loading stylesheet \" + file, Project.MSG_INFO);", "-                liaison.setStylesheet( file );", "-\t    }", "-\t} catch (Exception ex) {", "-\t    log(\"Failed to read stylesheet \" + xslFile, Project.MSG_INFO);", "-            throw new BuildException(ex);", "-\t}", "+        long styleSheetLastModified = 0;", "+        if (xslFile != null) {", "+            try {", "+                // Create a new XSL processor with the specified stylesheet", "+                File file = new File( baseDir, xslFile.toString() );", "+                styleSheetLastModified = file.lastModified();", "+                log( \"Loading stylesheet \" + file, Project.MSG_INFO);", "+                liaison.setStylesheet( file.toString() );", "+            } catch (Exception ex) {", "+                log(\"Failed to read stylesheet \" + xslFile, Project.MSG_INFO);", "+                throw new BuildException(ex);", "+            }", "+        }", "-\t    process(baseDir,list[i],destDir);", "+            process( baseDir, list[i], destDir, styleSheetLastModified );", "-", "+        ", "-\t\tprocess(baseDir,list[i],destDir);", "+                process( baseDir, list[i], destDir, styleSheetLastModified );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b5ac28cb15729180c103b4a0733112", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "27a94488495b231cc5a3c748e33452d8df13971d", "commitAfterChange": "ea31a2b83a156d121d2759b1f233c74401f8feb3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void normalisePath( StringBuffer path ) throws FileSystemException", "signatureAfterChange": "     public void normalisePath( StringBuffer path ) throws FileSystemException", "diff": ["-            if( elemLen == 2", "-                && path.charAt( startElem ) == '.'", "-                && path.charAt( startElem + 1 ) == '.' )", "+            if( elemLen == 2 &&", "+                path.charAt( startElem ) == '.' &&", "+                path.charAt( startElem + 1 ) == '.' )", "-                    for( ; path.charAt( pos ) != m_separatorChar; pos-- )", "+                    char ch = path.charAt( pos );", "+                    while( ch != m_separatorChar )", "+                        pos--;", "+                        ch = path.charAt( pos );"]}]}