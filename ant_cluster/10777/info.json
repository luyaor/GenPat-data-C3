{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8fe96bf5c206020a7fbbf0b702b7985", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49857189e0561c84ddce60a9e36ac4a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "d95bfb6e605b1eefc16889b9dfdf081072c82e51", "commitAfterChange": "a3a3b03fb1464ce1c026671dd8456402263b73f7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private Object createComponent(ClassLoader loader, AntLibFactory factory,                                    Class componentClass, String componentName,                                    String localName, boolean addTaskAdapter,                                    BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private Object createComponent(ClassLoader loader, AntLibFactory factory,                                    Class componentClass, String componentName,                                    String localName, boolean addTaskAdapter,                                    BuildElement model)          throws ExecutionException", "diff": ["-            throw new ExecutionException(e.getClass().getName() + \": \"", "-                 + e.getMessage(), e, location);", "+            throw new ExecutionException(e, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1931676bf0a2f73bc8acdaae9aab559", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "d95bfb6e605b1eefc16889b9dfdf081072c82e51", "commitAfterChange": "a3a3b03fb1464ce1c026671dd8456402263b73f7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model, String localName)          throws ExecutionException", "signatureAfterChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model, String localName)          throws ExecutionException", "diff": ["-            throw new ExecutionException(e.getClass().getName() + \": \"", "-                 + e.getMessage(), e, model.getLocation());", "+            throw new ExecutionException(e, model.getLocation());"]}]}