{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8773f35fdfc549f9a605edc3beba71d5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a2d84f64cec5fa9232731eff381490", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/Java.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int run( final Commandline command )         throws TaskException", "signatureAfterChange": "     private void run( final Commandline command )         throws TaskException", "diff": ["-    private int run( final Commandline command )", "+    private void run( final Commandline command )", "-", "-        if( m_dir == null )", "-        {", "-            m_dir = getBaseDirectory();", "-        }", "-        else if( !m_dir.exists() || !m_dir.isDirectory() )", "-        {", "-            final String message = m_dir.getAbsolutePath() + \" is not a valid directory\";", "-            throw new TaskException( message );", "-        }", "-", "-        return exe.execute( getContext() );", "+        exe.execute( getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b5d42973d7185ef09b8dd08473b72c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private String extractRootPrefix( final String uri,                                       final StringBuffer name )         throws FileSystemException", "signatureAfterChange": "     protected abstract String extractRootPrefix( final String uri,                                                  final StringBuffer name )         throws FileSystemException;", "diff": ["-    private String extractRootPrefix( final String uri,", "-                                      final StringBuffer name )", "-        throws FileSystemException", "-    {", "-        // TODO - split this into sub-classes", "-        if( m_windowsNames )", "-        {", "-            return extractWindowsRootPrefix( uri, name );", "-        }", "-        else", "-        {", "-            // Looking for <sep>", "-            if( name.length() == 0 || name.charAt( 0 ) != '/' )", "-            {", "-                final String message = REZ.getString( \"not-absolute-file-name.error\", uri );", "-                throw new FileSystemException( message );", "-            }", "+    protected abstract String extractRootPrefix( final String uri,", "+                                                 final StringBuffer name )", "+        throws FileSystemException;", "-            // TODO - this isn't always true", "-            return \"/\";", "-        }", "-    }"]}]}