{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "658dd79b820b7799708c97e060d88fd4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e6e1a4e8c7aeb1b7c64204690050f11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/script/ScriptDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testNoName()", "signatureAfterChange": "      @Test     public void testNoName()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"noname\",", "-            \"Absence of name attribute not detected\",", "-            \"scriptdef requires a name attribute\");", "+        try {", "+            buildRule.executeTarget(\"noname\");", "+            fail(\"Absence of name attribute not detected\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"scriptdef requires a name attribute\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7062a839aee70d70029cd90c4c308c83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/script/ScriptDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testDoubleAttribute()", "signatureAfterChange": "      @Test     public void testDoubleAttribute()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"doubleAttributeDef\",", "-            \"Should have detected duplicate attribute definition\",", "-            \"attr1 attribute more than once\");", "+        try {", "+            buildRule.executeTarget(\"doubleAttributeDef\");", "+            fail(\"Should have detected duplicate attirbute definition\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"attr1 attribute more than once\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db9cbf58cf51ce985a3e0607072302b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/optional/ScriptSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testNolanguage()", "signatureAfterChange": "      @Test     public void testNolanguage()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testNolanguage\",", "-                \"Absence of language attribute not detected\",", "-                \"script language must be specified\");", "+        try {", "+            buildRule.executeTarget(\"testNolanguage\");", "+            fail(\"Absence of language attribute not detected\");", "+        } catch(BuildException ex) {", "+            assertContains(\"script language must be specified\", ex.getMessage());", "+", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa075cd4c2a5d804c41d826656679b1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/script/ScriptDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNoLang()", "signatureAfterChange": "      @Test     public void testNoLang()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"nolang\",", "-            \"Absence of language attribute not detected\",", "-            \"requires a language attribute\");", "+        try {", "+            buildRule.executeTarget(\"nolang\");", "+            fail(\"Absence of language attribute not detected\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"requires a language attribute\", ex.getMessage());", "+        }"]}]}