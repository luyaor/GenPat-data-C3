{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "825ec86978a9607643fd1879175ff134", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc6c19aca5f8dfe262f323114bca4ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1b25a5ab7943f4210ddf2cbb62317e8ea8aa980d", "commitAfterChange": "12f19c932133ae8e0eaae97b14eb718262cb0843", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if( dir==null) dir=\".\";", "+        try {", "+            if (p1 == null) {", "+                reinit();", "+            }", "+        ", "+            if( dir==null) dir=\".\";", "-        p1.setBasedir(dir);", "-        p1.setUserProperty(\"basedir\" , dir);", "+            initializeProject();", "-        // Override with local-defined properties", "-        Enumeration e = properties.elements();", "-        while (e.hasMoreElements()) {", "-            Property p=(Property) e.nextElement();", "-            //\t    System.out.println(\"Setting \" + p.getName()+ \" \" + p.getValue());", "-            p.init();", "+            p1.setBasedir(dir);", "+            p1.setUserProperty(\"basedir\" , dir);", "+            ", "+            // Override with local-defined properties", "+            Enumeration e = properties.elements();", "+            while (e.hasMoreElements()) {", "+                Property p=(Property) e.nextElement();", "+                p.init();", "+            }", "+            ", "+            if (antFile == null) antFile = dir + \"/build.xml\";", "+", "+            p1.setUserProperty( \"ant.file\" , antFile );", "+            ProjectHelper.configureProject(p1, new File(antFile));", "+            ", "+            if (target == null) {", "+                target = p1.getDefaultTarget();", "+            }", "+", "+            p1.executeTarget(target);", "+        } finally {", "+            // help the gc", "+            p1 = null;", "-", "-        if (antFile == null) antFile = dir + \"/build.xml\";", "-", "-        p1.setUserProperty( \"ant.file\" , antFile );", "-        ProjectHelper.configureProject(p1, new File(antFile));", "-", "-        if (target == null) {", "-            target = p1.getDefaultTarget();", "-        }", "-", "-        p1.executeTarget(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7318f644f5fc7528cb0183ed32af9bce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/WhichResource.java", "commitBeforeChange": "96932a3c788bf970f72fe5927d4a44e1527447d3", "commitAfterChange": "e931e7bad1b82f459c34b7de1ba191d269322d3b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            classpath = classpath.concatSystemClasspath(\"ignore\");", "-            classpath = classpath.concatSystemClasspath(\"ignore\");", "-        AntClassLoader loader;", "+        AntClassLoader loader = null;", "+        try {", "+        } finally {", "+            if (loader != null) {", "+                loader.cleanup();", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8eb34f27e03e5c9a077ea43059ab9e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "66676d22f4163163a8f7b567577705159d7d4d60", "commitAfterChange": "dfaa904e5c39c7c3b0481e1d44fb64fb69efca18", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        try {", "+        }", "+        } finally {", "+            if (classLoader != null && reloading) {", "+                classLoader.cleanup();", "+            }"]}]}