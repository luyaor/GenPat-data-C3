{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c625fc5f25445ef6fbcc6381926c3f25", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd48f4aa83a7a616095055334bba6138", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["-        out.write(LFH_SIG.getBytes());", "+        writeOut(LFH_SIG.getBytes());", "-        if (ze.getMethod() == DEFLATED) {", "+        if (ze.getMethod() == DEFLATED && raf == null) {", "-            out.write((new ZipShort(20)).getBytes());", "+            writeOut((new ZipShort(20)).getBytes());", "-            out.write((new ZipShort(8)).getBytes());", "+            writeOut((new ZipShort(8)).getBytes());", "-            out.write((new ZipShort(10)).getBytes());", "-            out.write(ZERO);", "+            writeOut((new ZipShort(10)).getBytes());", "+            writeOut(ZERO);", "-        out.write((new ZipShort(ze.getMethod())).getBytes());", "+        writeOut((new ZipShort(ze.getMethod())).getBytes());", "-        out.write(toDosTime(new Date(ze.getTime())).getBytes());", "+        writeOut(toDosTime(new Date(ze.getTime())).getBytes());", "-        if (ze.getMethod() == DEFLATED) {", "-            out.write(LZERO);", "-            out.write(LZERO);", "-            out.write(LZERO);", "+        localDataStart = written;", "+        if (ze.getMethod() == DEFLATED || raf != null) {", "+            writeOut(LZERO);", "+            writeOut(LZERO);", "+            writeOut(LZERO);", "-            out.write((new ZipLong(ze.getCrc())).getBytes());", "-            out.write((new ZipLong(ze.getSize())).getBytes());", "-            out.write((new ZipLong(ze.getSize())).getBytes());", "+            writeOut((new ZipLong(ze.getCrc())).getBytes());", "+            writeOut((new ZipLong(ze.getSize())).getBytes());", "+            writeOut((new ZipLong(ze.getSize())).getBytes());", "-        out.write((new ZipShort(name.length)).getBytes());", "+        writeOut((new ZipShort(name.length)).getBytes());", "-        out.write((new ZipShort(extra.length)).getBytes());", "+        writeOut((new ZipShort(extra.length)).getBytes());", "-        out.write(name);", "+        writeOut(name);", "-        out.write(extra);", "+        writeOut(extra);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ac43f2723cb571a26b8115739e53fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "677491b9276e57da76218487af18cfda70aa28af", "commitAfterChange": "a05d1f12196d34b23d4ab80c3598f6fb63410ac5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["-        offsets.put(ze, new ZipLong(written));", "+        offsets.put(ze, ZipLong.getBytes(written));", "-        writeOut(LFH_SIG.getBytes());", "+        writeOut(LFH_SIG);", "-            writeOut((new ZipShort(20)).getBytes());", "+            writeOut(ZipShort.getBytes(20));", "-            writeOut((new ZipShort(8)).getBytes());", "+            writeOut(ZipShort.getBytes(8));", "-            writeOut((new ZipShort(10)).getBytes());", "+            writeOut(ZipShort.getBytes(10));", "-        writeOut((new ZipShort(ze.getMethod())).getBytes());", "+        writeOut(ZipShort.getBytes(ze.getMethod()));", "-            writeOut((new ZipLong(ze.getCrc())).getBytes());", "-            writeOut((new ZipLong(ze.getSize())).getBytes());", "-            writeOut((new ZipLong(ze.getSize())).getBytes());", "+            writeOut(ZipLong.getBytes(ze.getCrc()));", "+            writeOut(ZipLong.getBytes(ze.getSize()));", "+            writeOut(ZipLong.getBytes(ze.getSize()));", "-        writeOut((new ZipShort(name.length)).getBytes());", "+        writeOut(ZipShort.getBytes(name.length));", "-        writeOut((new ZipShort(extra.length)).getBytes());", "+        writeOut(ZipShort.getBytes(extra.length));"]}]}