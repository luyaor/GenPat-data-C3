{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abe6922fa12c178f7ad86f358cde270e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883b3dce37a262c5efca6264045b26a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/launch/LocatorTest.java", "commitBeforeChange": "422d55a338cb9c45364aad4d3e2b5a515340cbb1", "commitAfterChange": "c4176305c366227881f051e9352a3184209843a1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void assertResolves(String path) throws Exception", "signatureAfterChange": "     private String assertResolves(String path) throws Exception", "diff": ["-    private void assertResolves(String path) throws Exception {", "+    private String assertResolves(String path) throws Exception {", "-        logURI(path +\" => \"+asuri);", "-        resolveTo(asuri,path);", "+        String fullpath = System.getProperty(\"user.dir\") + File.separator + path;", "+        String result=resolveTo(asuri, fullpath, fullpath);", "+        return result.substring(result.lastIndexOf(File.separatorChar)+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b81b415e99bc35b9e8770ddfc1c0a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "9de9f96130722fdc5761aa186dd87e7fbe84f994", "commitAfterChange": "f948bb98aabcf47939c53e349b1a054f00ecc833", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private NestedCreator getNestedCreator(Project project, Object parent,         String elementName) throws BuildException", "signatureAfterChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName) throws BuildException", "diff": ["-    private NestedCreator getNestedCreator(Project project, Object parent,", "-        String elementName) throws BuildException {", "-", "-        NestedCreator nc = (NestedCreator) nestedCreators.get(", "-            elementName.toLowerCase(Locale.US));", "-        if (nc == null) {", "-            nc = createAddTypeCreator(project, parent, elementName);", "-        }", "-        if (nc == null && parent instanceof DynamicConfigurator) {", "-            DynamicConfigurator dc = (DynamicConfigurator) parent;", "-            final Object nestedElement = dc.createDynamicElement(elementName);", "-            if (nestedElement != null) {", "-                nc = new NestedCreator() {", "-                    public boolean isPolyMorphic() {", "-                        return false;", "-                    }", "-                    public Class getElementClass() {", "-                        return null;", "-                    }", "-", "-                    public Object getRealObject() {", "-                        return null;", "-                    }", "-", "-                    public Object create(", "-                        Project project, Object parent, Object ignore) {", "-                        return nestedElement;", "-                    }", "-                    public void store(Object parent, Object child) {", "-                    }", "-                };", "-            }", "-        }", "-        if (nc == null) {", "-            throwNotSupported(project, parent, elementName);", "-        }", "-        return nc;", "-    }"]}]}