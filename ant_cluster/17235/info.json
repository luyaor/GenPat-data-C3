{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ba333268c820c384904e539df606bc2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4607a4ee70a950d54ba9acac929ca583", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/VerifyJar.java", "commitBeforeChange": "25e6c497c3d1b68f412ad7fc47fad735edee37d7", "commitAfterChange": "b02d774374b614d4520b6396e56f90d0d0c84257", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void verifyOneJar(File jar)", "signatureAfterChange": "     private void verifyOneJar(File jar)", "diff": ["-", "+        outputCache.clear();", "+        String results=outputCache.toString();", "+        if(results.indexOf(VERIFIED_TEXT)<0) {", "+            throw new BuildException(ERROR_NO_VERIFY+jar);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49b0895f85eb1c604f357016341a903e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Cvs.java", "commitBeforeChange": "18485227c0f1c2c7c2f45eaeea3aa9cd7d63100e", "commitAfterChange": "18ea21ee7d078ff1b74271b5a56c6d51dc7f0108", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public void execute() throws BuildException", "signatureAfterChange": "        public void execute() throws BuildException", "diff": ["+", "-            exe.execute();", "+\t    int retCode = exe.execute();", "+\t    /*Throw an exception if cvs exited with error. (Iulian)*/", "+\t    if(failOnError && retCode != 0)", "+\t\tthrow new BuildException(\"cvs exited with error code \"+ retCode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a86a534b944ff9a324db7ac121314c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "bdad876fd6dd79bc631e4ae41edfcd380d366f07", "commitAfterChange": "73db4788f651cb51e829b92b92b462b5bfb1f0ee", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "-            exe.execute();", "+            int ret = exe.execute();", "+            if (ret != 0 && failOnError) {", "+                throw new BuildException(\"Javadoc returned \"+ret, location);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "784deb223e84fb5cfe5955cc2d43e23c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionUtil.java", "commitBeforeChange": "1b2a0d0f3ec8a3ee0cc1c98709a4d64a4b1fcc2f", "commitAfterChange": "9402248914f981c040f0e81eadf20ad6e86d425c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     static Manifest getManifest(final File file)         throws BuildException", "signatureAfterChange": "     static Manifest getManifest(final File file)         throws BuildException", "diff": ["-            return jarFile.getManifest();", "+            Manifest m = jarFile.getManifest();", "+            if (m == null) {", "+                throw new BuildException(file + \" doesn't have a MANIFEST\");", "+            }", "+            return m;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f010ac6f07fbc705e7591830a2b9e381", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "965917ea136e553faaca230cc2ba13d0db78a842", "commitAfterChange": "8128522925929ecbc8c2b80dcfb0cb3837188797", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 132, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                                         getLocation());", "+            }", "+            if (out.sawWarnings() && failOnWarning) {", "+                throw new BuildException(\"Javadoc issued warnings.\","]}]}