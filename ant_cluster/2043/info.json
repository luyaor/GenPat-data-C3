{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df98e24f227618315757a3980cd542f0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a3dfab58e71cad814a0b533b48f566f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "e7ab62bc9179b392804835d02155e43d3d2cf5d6", "commitAfterChange": "2e6e170fb375181f4438e1de44808c7adab508a2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void setupComponent( final Component component )         throws Exception", "signatureAfterChange": "     private void setupObject( final Object object,                               final Parameters parameters )         throws Exception", "diff": ["-     */", "-    private void setupComponent( final Component component )", "-        throws Exception", "-    {", "-        setupLogger( component );", "-", "-        if( component instanceof Composable )", "-            ( (Composable)component ).compose( m_componentManager );", "-        }", "-", "-        if( component instanceof Parameterizable )", "-        {", "-            ( (Parameterizable)component ).parameterize( m_parameters );", "-        }", "-", "-        if( component instanceof Initializable )", "-        {", "-            ( (Initializable)component ).initialize();", "+     */", "+    private void setupObject( final Object object,", "+                              final Parameters parameters )", "+        throws Exception", "+    {", "+        setupLogger( object );", "+", "+        if( object instanceof Composable )", "+        {", "+            ( (Composable)object ).compose( m_componentManager );", "+        }", "+", "+        if( object instanceof Parameterizable )", "+        {", "+            ( (Parameterizable)object ).parameterize( parameters );", "+        }", "+", "+        if( object instanceof Initializable )", "+        {", "+            ( (Initializable)object ).initialize();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee0053466fa24938c04f77f67ad8aabb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "06931fc27d82d9e50168a6e9496fbba5e4e8f66c", "commitAfterChange": "9243e2436d957b1b2ad1b4b17eeb4c99924ac247", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private ProjectBuilder getProjectBuilder( final String type )         throws Exception", "signatureAfterChange": "      private ProjectBuilder getProjectBuilder( final String type,                                                final Parameters parameters )         throws Exception", "diff": ["-    private ProjectBuilder getProjectBuilder( final String type )", "+    private ProjectBuilder getProjectBuilder( final String type, ", "+                                              final Parameters parameters )", "-        //FIXME: Should not be ignoring type", "-        return m_builder;", "+", "+        final TypeFactory factory = m_typeManager.getFactory( ProjectBuilder.ROLE );", "+        final ProjectBuilder builder = (ProjectBuilder)factory.create( type );", "+", "+        setupLogger( builder );", "+", "+        if( builder instanceof Composable )", "+        {", "+            ((Composable)builder).compose( m_componentManager );", "+        }", "+", "+        if( builder instanceof Parameterizable )", "+        {", "+            ((Parameterizable)builder).parameterize( parameters );", "+        }        ", "+", "+        if( builder instanceof Initializable )", "+        {", "+            ((Initializable)builder).initialize();", "+        }        ", "+", "+        return builder;"]}]}