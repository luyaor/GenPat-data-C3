{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ad689613d2b6fb486794b109d942662", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e29033e179b34c26f26d47a237fb5a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "36b62a7ed1b8ae93aad5e2fc841e67efc7cef749", "commitAfterChange": "a1608d62d4c274d15e2ad27ddfc2c96a1762dcb8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "signatureAfterChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "diff": ["-        File file = new File(fileName);", "-", "+        ", "+        String name;", "+        String dir;", "+        int lastDirSep = fileName.lastIndexOf(\"/\");", "+        if (lastDirSep > -1) {", "+            name = fileName.substring(lastDirSep + 1);", "+            dir  = fileName.substring(0, lastDirSep);", "+        } else {", "+            name = fileName;", "+            dir  = \".\";      // so a dir+\"/\"+name would not result in an absolute path", "+        }", "+        ", "-            liaison.addParam(fileNameParameter, inFile.getName());", "+            liaison.addParam(fileNameParameter, name);", "-            liaison.addParam(fileDirParameter, (file.getParent()!=null) ? file.getParent() : \"\" );", "+            liaison.addParam(fileDirParameter, dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72166fe3dbdd9f59b64d359982ad83ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "e4e8d52117e72aa39fa0a6f3948a6e2058030b99", "commitAfterChange": "9d42b05f174699cda1de0ea34f0ddbce6dee3a37", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "signatureAfterChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "diff": ["-        String fileName = FileUtils.getRelativePath(baseDir, inFile);", "-        ", "-        String name;", "-        String dir;", "-        int lastDirSep = fileName.lastIndexOf(\"/\");", "-        if (lastDirSep > -1) {", "-            name = fileName.substring(lastDirSep + 1);", "-            dir  = fileName.substring(0, lastDirSep);", "-        } else {", "-            name = fileName;", "-            dir  = \".\";      // so a dir+\"/\"+name would not result in an absolute path", "-        }", "-        ", "-            liaison.addParam(fileNameParameter, name);", "+            liaison.addParam(fileNameParameter, inFile.getName());", "-            liaison.addParam(fileDirParameter, dir);", "+            String fileName = FileUtils.getRelativePath(baseDir, inFile);", "+            File file = new File(fileName);", "+            // Give always a slash as file separator, so the stylesheet could be sure about that", "+            // Use '.' so a dir+\"/\"+name would not result in an absolute path", "+            liaison.addParam(fileDirParameter, (file.getParent()!=null) ? file.getParent().replace('\\\\','/') : \".\" );"]}]}