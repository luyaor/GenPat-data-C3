{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d2632f1b51de2ad54ad1d59587f193f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d931897f4a3c379294dabb160127e7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "d957fa1151163d513197a174a098e2aac8745b1e", "commitAfterChange": "87ceed8170a6359ac2c4714b6ad22c55d2b1f571", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        m_typeManager.registerType( MyRole1.class, \"my-type1\", factory );", "-        m_typeManager.registerType( MyRole1.class, \"my-type2\", factory );", "+        getTypeManager().registerType( MyRole1.class, \"my-type1\", factory );", "+        getTypeManager().registerType( MyRole1.class, \"my-type2\", factory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "547bfb712a78b6916d790029eddd0aa6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "d957fa1151163d513197a174a098e2aac8745b1e", "commitAfterChange": "87ceed8170a6359ac2c4714b6ad22c55d2b1f571", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        m_typeManager.registerType( MyRole1.class, \"my-type1\", factory );", "-        m_typeManager.registerType( MyRole1.class, \"my-type2\", factory );", "+        getTypeManager().registerType( MyRole1.class, \"my-type1\", factory );", "+        getTypeManager().registerType( MyRole1.class, \"my-type2\", factory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556ec97c8497fd4524a789cf49315c2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void doBuild( final ProjectEngine engine,                              final Project project,                              final ArrayList targets )", "signatureAfterChange": "     protected void doBuild( final ProjectEngine engine,                              final Project project,                              final ArrayList targets )", "diff": ["-            m_logger.error( \"BUILD FAILED\" );", "-            m_logger.error( \"Reason:\\n\" + StringUtil.printStackTrace( ae, 5, true ) );", "+            getLogger().error( \"BUILD FAILED\" );", "+            getLogger().error( \"Reason:\\n\" + StringUtil.printStackTrace( ae, 5, true ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8175257475fe7aa9d135c1594b158510", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "signatureAfterChange": "     protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["+     */", "+        //check the condition associated with target.", "+        //if it is not satisfied then skip target", "-", "-                m_logger.debug( \"Skipping target \" + name + ", "-                                \" as it does not satisfy condition\" );", "+                getLogger().debug( \"Skipping target \" + name + ", "+                                   \" as it does not satisfy condition\" );", "-        m_logger.debug( \"Executing target \" + name );", "+        getLogger().debug( \"Executing target \" + name );", "+        //execute all tasks assciated with target"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49d2b1c00f419d93d98cdfc5a42198f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "d99dce793ee296df0d68ba8bf990d99660ce805d", "commitAfterChange": "b4c31671f5df6d48bbf2d039eb33dc6fd95427ab", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void addAssertions(Assertions asserts)", "signatureAfterChange": "     public void addAssertions(Assertions asserts)", "diff": ["-        if (commandline.getAssertions() != null) {", "+        if (getCommandline().getAssertions() != null) {", "-        commandline.setAssertions(asserts);", "+        getCommandline().setAssertions(asserts);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9bbf30a173630926e7aeb1d5d4c7e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "d99dce793ee296df0d68ba8bf990d99660ce805d", "commitAfterChange": "b4c31671f5df6d48bbf2d039eb33dc6fd95427ab", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private int executeInVM(JUnitTest arg) throws BuildException", "signatureAfterChange": "     private int executeInVM(JUnitTest arg) throws BuildException", "diff": ["-        if (commandline.getBootclasspath() != null) {", "+        if (getCommandline().getBootclasspath() != null) {", "-            commandline.getSystemProperties();", "+                getCommandline().getSystemProperties();"]}]}