{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44ce21ed5513b5c9eaef86aa0dd2c0cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e41f25f73b265da81e550f6417580d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void sendDirectory(ChannelSftp channel,                                Directory current)         throws IOException, SftpException", "signatureAfterChange": "      private void sendDirectory(final ChannelSftp channel,                                final Directory current)         throws IOException, SftpException", "diff": ["-    private void sendDirectory(ChannelSftp channel,", "-                               Directory current)", "+    private void sendDirectory(final ChannelSftp channel,", "+                               final Directory current)", "-        for (Iterator fileIt = current.filesIterator(); fileIt.hasNext();) {", "+        for (final Iterator fileIt = current.filesIterator(); fileIt.hasNext();) {", "-        for (Iterator dirIt = current.directoryIterator(); dirIt.hasNext();) {", "-            Directory dir = (Directory) dirIt.next();", "+        for (final Iterator dirIt = current.directoryIterator(); dirIt.hasNext();) {", "+            final Directory dir = (Directory) dirIt.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce733e010375feccd04a60e269fc669", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private boolean isParentFirst(String resourceName)", "signatureAfterChange": "     private boolean isParentFirst(final String resourceName)", "diff": ["-    private boolean isParentFirst(String resourceName) {", "+    private boolean isParentFirst(final String resourceName) {", "-        for (Enumeration<String> e = systemPackages.elements(); e.hasMoreElements();) {", "-            String packageName = e.nextElement();", "+        for (final Enumeration<String> e = systemPackages.elements(); e.hasMoreElements();) {", "+            final String packageName = e.nextElement();", "-        for (Enumeration<String> e = loaderPackages.elements(); e.hasMoreElements();) {", "-            String packageName = e.nextElement();", "+        for (final Enumeration<String> e = loaderPackages.elements(); e.hasMoreElements();) {", "+            final String packageName = e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d59df7af47088af597a39242a32fc771", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Xalan2TraceSupport.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void configureTrace(Transformer t,                                XSLTProcess.TraceConfiguration conf)", "signatureAfterChange": "     public void configureTrace(final Transformer t,                                final XSLTProcess.TraceConfiguration conf)", "diff": ["-    public void configureTrace(Transformer t,", "-                               XSLTProcess.TraceConfiguration conf) {", "+    public void configureTrace(final Transformer t,", "+                               final XSLTProcess.TraceConfiguration conf) {", "-            PrintWriter w = new PrintWriter(conf.getOutputStream(), false);", "-            PrintTraceListener tl = new PrintTraceListener(w);", "+            final PrintWriter w = new PrintWriter(conf.getOutputStream(), false);", "+            final PrintTraceListener tl = new PrintTraceListener(w);", "-            } catch (TooManyListenersException tml) {", "+            } catch (final TooManyListenersException tml) {"]}]}