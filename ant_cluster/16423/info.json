{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2698bbe5db54f5df157785d83c753040", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9719e970597ac9adbb505046ae9e65d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "7c24f9164c6c8c840010e49f7780f9158b2e2e46", "commitAfterChange": "222693b10f20a17af93ca107ba09dc2a679ab5cd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean validateAndExecute() throws BuildException", "signatureAfterChange": "     private boolean validateAndExecute() throws BuildException", "diff": ["+        String savedFileExt = fileext;", "-        if (fileext == null) {", "-            fileext = \".\" + algorithm;", "-        } else if (fileext.trim().length() == 0) {", "-            throw new BuildException(", "-                \"File extension when specified must not be an empty string\");", "-        }", "-", "-        addToIncludeFileMap(file);", "-", "-        int sizeofFileSet = filesets.size();", "-        for (int i = 0; i < sizeofFileSet; i++) {", "-            FileSet fs = (FileSet) filesets.elementAt(i);", "-            DirectoryScanner ds = fs.getDirectoryScanner(project);", "-            String[] srcFiles = ds.getIncludedFiles();", "-            for (int j = 0; j < srcFiles.length; j++) {", "-                File src = new File(fs.getDir(project), srcFiles[j]);", "-                addToIncludeFileMap(src);", "-            }", "+        if (fileext == null) {", "+            fileext = \".\" + algorithm;", "+        } else if (fileext.trim().length() == 0) {", "+            throw new BuildException(", "+                \"File extension when specified must not be an empty string\");", "-        return generateChecksums();", "+        try {", "+            addToIncludeFileMap(file);", "+            ", "+            int sizeofFileSet = filesets.size();", "+            for (int i = 0; i < sizeofFileSet; i++) {", "+                FileSet fs = (FileSet) filesets.elementAt(i);", "+                DirectoryScanner ds = fs.getDirectoryScanner(project);", "+                String[] srcFiles = ds.getIncludedFiles();", "+                for (int j = 0; j < srcFiles.length; j++) {", "+                    File src = new File(fs.getDir(project), srcFiles[j]);", "+                    addToIncludeFileMap(src);", "+                }", "+            }", "+", "+            return generateChecksums();", "+        } finally {", "+            fileext = savedFileExt;", "+            includeFileMap.clear();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ffbaf6ee2be03ce8ea795e1a74d026", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "b04c338caa73cc14ad6e8b258280426c3522de38", "commitAfterChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public File resolveFile(File file, String filename)", "signatureAfterChange": "     public File resolveFile(File file, String filename)", "diff": ["-        filename = filename.replace('/', File.separatorChar)", "-            .replace('\\\\', File.separatorChar);", "-", "-        // deal with absolute files", "-        if (isAbsolutePath(filename)) {", "-            return normalize(filename);", "-        }", "-        if (file == null) {", "-            return new File(filename);", "-        }", "-        File helpFile = new File(file.getAbsolutePath());", "-        StringTokenizer tok = new StringTokenizer(filename, File.separator);", "-        while (tok.hasMoreTokens()) {", "-            String part = tok.nextToken();", "-            if (part.equals(\"..\")) {", "-                helpFile = helpFile.getParentFile();", "-                if (helpFile == null) {", "-                    String msg = \"The file or path you specified (\"", "-                        + filename + \") is invalid relative to \"", "-                        + file.getPath();", "-                    throw new BuildException(msg);", "+        if (!isAbsolutePath(filename)) {", "+            char sep = File.separatorChar;", "+            filename = filename.replace('/', sep).replace('\\\\', sep);", "+            if (isContextRelativePath(filename)) {", "+                file = null;", "+                // on cygwin, our current directory can be a UNC;", "+                // assume user.dir is absolute or all hell breaks loose...", "+                String udir = System.getProperty(\"user.dir\");", "+                if (filename.charAt(0) == sep && udir.charAt(0) == sep) {", "+                    filename = dissect(udir)[0] + filename.substring(1);", "-            } else if (part.equals(\".\")) {", "-                // Do nothing here", "-            } else {", "-                helpFile = new File(helpFile, part);", "+            filename = new File(file, filename).getAbsolutePath();", "-        return new File(helpFile.getAbsolutePath());", "+        return normalize(filename);", "+    }"]}]}