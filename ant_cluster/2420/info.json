{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40b2605ecdf5225345f82bafe143b171", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a4b395cc7051ecf6c4e524e33504e08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 28, "signatureBeforeChange": "      private int bsGetIntVS(int numBits)", "signatureAfterChange": "         final int[] initTT(int length)", "diff": ["-    private int bsGetIntVS(int numBits) {", "-        return (int) bsR(numBits);", "-    }", "+         */", "+        final int[] initTT(int length) {", "+            int[] tt = this.tt;", "+", "+            // tt.length should always be >= length, but theoretically", "+            // it can happen, if the compressor mixed small and large", "+            // blocks.  Normally only the last block will be smaller", "+            // than others.", "+            if ((tt == null) || (tt.length < length)) {", "+                this.tt = tt = new int[length];", "+            }", "+", "+            return tt;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661bab4497e9a6778d726ad2192e50ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/FileResource.java", "commitBeforeChange": "4662a4c1e4614a8c8e7dbd2b036905da64a84576", "commitAfterChange": "3bfca0664b64b24abc88c93295babee6d3719b35", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public int compareTo(Object another)", "signatureAfterChange": "     public int compareTo(Object another)", "diff": ["-        return this.equals(another) ? 0 : super.compareTo(another);", "+        if (this.equals(another)) {", "+            return 0;", "+        }", "+        if (another.getClass().equals(getClass())) {", "+            FileResource otherfr = (FileResource) another;", "+            File f = getFile();", "+            if (f == null) {", "+                return -1;", "+            }", "+            File of = otherfr.getFile();", "+            if (of == null) {", "+                return 1;", "+            }", "+            return f.compareTo(of);", "+        }", "+        return super.compareTo(another);"]}]}