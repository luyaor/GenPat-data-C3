{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b20297301d2eebd1f165ccaaf3f97b93", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01266cfde6cd43cb2bff5337ba1ae810", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavacTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testForkedExecutableName()", "signatureAfterChange": "     @Test     public void testForkedExecutableName()", "diff": ["+    @Test", "-        assertTrue(\"name should contain \\\"javac\\\"\",", "-                   javac.getJavacExecutable().indexOf(\"javac\") > -1);", "+        assertContains(\"name should contain \\\"javac\\\"\", \"javac\",", "+                   javac.getJavacExecutable());", "-        assertTrue(\"name should contain \\\"javac\\\"\",", "-                   javac.getJavacExecutable().indexOf(\"javac\") > -1);", "+        assertContains(\"name should contain \\\"javac\\\"\", \"javac\", javac.getJavacExecutable());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "813998d20d98e0a49d2dc235a846f0ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/launch/LocatorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testHttpURI() throws Exception", "signatureAfterChange": "      @Test     public void testHttpURI() throws Exception", "diff": ["+    @Test", "+            fail(\"Exception should have been thrown\");", "-            assertTrue(message, message.indexOf(Locator.ERROR_NOT_FILE_URI) >= 0);", "-            assertTrue(message, message.indexOf(url) >= 0);", "+            assertContains(Locator.ERROR_NOT_FILE_URI, message);", "+            assertContains(url, message);"]}]}