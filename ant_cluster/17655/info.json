{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8106ab6f6e58aa8063490a9570affd4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de4c5fea2d20041a4976020645877eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Equals.java", "commitBeforeChange": "910c937723c4710cb1309c939dbcd4b8c3e8b6ce", "commitAfterChange": "bdfee6de49421e9d026d6f0f1b48db07ec31621d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        if (arg1 == null || arg2 == null) {", "-            throw new BuildException(\"both arg1 and arg2 are required in \"", "-                                     + \"equals\");", "+        if ((args & REQUIRED) != REQUIRED) {", "+            throw new BuildException(\"both arg1 and arg2 are required in equals\");", "-        if (trim) {", "-            arg1 = arg1.trim();", "-            arg2 = arg2.trim();", "+        if (arg1 instanceof String && arg2 instanceof String) {", "+            String s1 = (String) arg1;", "+            String s2 = (String) arg2;", "+            if (trim) {", "+                s1 = s1.trim();", "+                s2 = s2.trim();", "+            }", "+            return caseSensitive ? s1.equals(s2) : s1.equalsIgnoreCase(s2);", "-", "-        return caseSensitive ? arg1.equals(arg2) : arg1.equalsIgnoreCase(arg2);", "+        return arg1 == arg2 || arg1 != null && arg1.equals(arg2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b92c3236e59a89154f39a7e02d18912", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "aeee70243a354c5951ec655556f8a1530e7713eb", "commitAfterChange": "ca5799fd8c1780abcc25f63745faf95bd2cdb06a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "signatureAfterChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "diff": ["-        Object o = makeTask(ue, w);", "+        ComponentHelper helper = ComponentHelper.getComponentHelper(", "+            getProject());", "+        String name = ue.getComponentName();", "+        Object o = helper.createComponent(ue, ue.getNamespace(), name);", "-            o = getProject().createDataType(ue.getTag());", "+            throw getNotFoundException(\"task or type\", name);", "-        if (o == null) {", "-            throw getNotFoundException(\"task or type\", ue.getTag());", "+        if (o instanceof Task) {", "+            Task task = (Task) o;", "+            task.setOwningTarget(getOwningTarget());", "+            task.init();"]}]}