{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46d500c827c9fca6f9cefb364e168891", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602a154387dca59dc1d128b7ee8f232d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "6885f5ccadd471cc33c19bdcca4271aa3086d3ca", "commitAfterChange": "8dfa7abd4d64b0cbef6166a28440f39f46d6efd1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Class add(String role, String name, Class clz)", "signatureAfterChange": "     public Class add(String role, String name, Class clz)", "diff": ["-\tFactory old = get(role, name);", "+\tClass old = get(role, name);", "-\t    if (old.getOriginalClass().equals(clz)) {", "+\t    if (old.equals(clz)) {", "-\t\treturn old.getOriginalClass();", "+\t\treturn old;", "-\tFactory f = checkClass(clz);", "+\tcheckClass(clz);", "-\tf = r.verifyAdaptability(role, f);", "+\tr.verifyAdaptability(role, clz);", "-\tdefTable.put(name, f);", "-", "-        String msg = ", "-\t    \" +User \" + role + \": \" + name + \"     \" + clz.getName();", "-        project.log(msg, project.MSG_DEBUG);", "-\treturn (old != null ? old.getOriginalClass() : null);", "+\tdefTable.put(name, clz);", "+\treturn old;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba7887d6873278670d0e7f6412555ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "2bcc3b328adcc97c10be2efba1077ccf28b92caa", "commitAfterChange": "4ad59f0fc5eb69936f4322c1394993d33299959b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Class add(String role, String name, Class clz)", "signatureAfterChange": "     public Class add(String role, String name, Class clz)", "diff": ["-\tClass old = get(role, name);", "+\tFactory old = get(role, name);", "-\t    if (old.equals(clz)) {", "+\t    if (old.getOriginalClass().equals(clz)) {", "-\t\treturn old;", "+\t\treturn old.getOriginalClass();", "-\tcheckClass(clz);", "+\tFactory f = checkClass(clz);", "-\tr.verifyAdaptability(role, clz);", "+\tf = r.verifyAdaptability(role, f);", "-\tdefTable.put(name, clz);", "-\treturn old;", "+\tdefTable.put(name, f);", "+", "+        String msg = ", "+\t    \" +User \" + role + \": \" + name + \"     \" + clz.getName();", "+        project.log(msg, project.MSG_DEBUG);", "+\treturn (old != null ? old.getOriginalClass() : null);"]}]}