{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5556390413d3f3fb76d292cddc03a449", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5e24662f9f9c2a532e43a2fa2177c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Resolve.java", "commitBeforeChange": "787728897a6052af385456788bc4e578ba170ba5", "commitAfterChange": "a12cf63191aece501e0c5b2603c6b72cad03caf8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setResolvemode(String resolvemode)", "signatureAfterChange": "     public void setResolvemode(String resolvemode)", "diff": ["-        boolean found=false;", "-        for (int counter=0; counter < resolvemodes.length; counter++)", "-        {", "-            if (resolvemode.equals(resolvemodes[counter])) {", "-                found=true;", "+        boolean found = false;", "+        for (int counter = 0; counter < RESOLVE_MODES.length; counter++) {", "+            if (resolvemode.equals(RESOLVE_MODES[counter])) {", "+                found = true;", "-        if (found==false) {", "+        if (found == false) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f408e4cc32bde511558fd4fcd85fbe29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/xdocs/src/org/apache/tools/ant/xdoclet/AntSubTask.java", "commitBeforeChange": "f29de55fee3269af96bc2c5b2c70ce930d131195", "commitAfterChange": "9b35ad50ac0efc39cce65a99274f0f7acf2775c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static final boolean isAntTask(ClassDoc clazz)", "signatureAfterChange": "     public static final boolean isAntTask(ClassDoc clazz)", "diff": ["-        MethodDoc[] methods = clazz.methods();", "-        for (int i = 0; i < methods.length; i++) {", "-            if (\"execute\".equals(methods[i].name())) {", "-                return true;", "+        // remove deprecated tasks (controversial!)", "+        Tag[] tags = clazz.tags();", "+        for (int i=0; i < tags.length; i++) {", "+            if (\"@deprecated\".equals(tags[i].name())) {", "+                return false;", "+        if (hasExecuteMethod(clazz)) {", "+            return true;", "+        }", "+"]}]}