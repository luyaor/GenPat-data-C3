{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e99e851358a30b74cbf6805eedbbe83c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0264e7cbc52eda7da07cc4149707d62e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/launch/LocatorTest.java", "commitBeforeChange": "50333ecba9313e1b0b85368279daf50e5b7db649", "commitAfterChange": "74fb3d870dc2bb95466ba7672eb63ff3d106ad96", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testInternationalURI() throws Exception", "signatureAfterChange": "      public void testInternationalURI() throws Exception", "diff": ["+        assertEquals(\"file:/tmp/a%C3%A7a%C3%AD%20berry\", Locator.encodeURI(\"file:/tmp/a\\u00E7a\\u00ED berry\"));", "+        assertEquals(\"file:/tmp/a\\u00E7a\\u00ED berry\", Locator.decodeUri(\"file:/tmp/a%C3%A7a%C3%AD%20berry\"));", "+        assertEquals(\"file:/tmp/a\\u00E7a\\u00ED berry\", Locator.decodeUri(\"file:/tmp/a\\u00E7a\\u00ED%20berry\")); // #50543", "+        assertEquals(\"file:/tmp/hezky \\u010Desky\", Locator.decodeUri(\"file:/tmp/hezky%20\\u010Desky\")); // non-ISO-8859-1 variant"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "718c03c4b1668960543656c5876b367c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "16218478e15fb5e9c80609e50190afcc0bbc83ed", "commitAfterChange": "edd396be180db9bf362a71771449b6daff0cf53c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "signatureAfterChange": "     private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "diff": ["-    private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "-    {", "+    private void buildBorlandStubs(Iterator ithomes,Hashtable files ) {", "-        File java2iiopOut = new File(\"java2iiop.log\");", "-        try ", "-        {", "+        //File java2iiopOut = new File(\"java2iiop.log\");", "+        File java2iiopOut = null;", "+        try {", "+            java2iiopOut = File.createTempFile(\"java2iiop\",\"log\");", "+            log(\" iiop log file : \"+ java2iiopOut ,Project.MSG_DEBUG);", "+", "-            if ( java2iiopdebug ) ", "-            {", "+            if ( java2iiopdebug ) {", "+            //no TIE classes", "+            execTask.createArg().setValue(\"-no_tie\");", "-            while ( ithomes.hasNext()) ", "-            {", "+            while ( ithomes.hasNext()) {", "-        try", "-        {", "+        try {", "-            while ( ( javafile = lnr.readLine()) != null) ", "-            {", "-                if ( javafile.endsWith(\".java\") )", "-                {", "+            while ( ( javafile = lnr.readLine()) != null) {", "+                if ( javafile.endsWith(\".java\") ) {", "-        catch(Exception e)", "-        {", "+        catch(Exception e) {", "+", "+        //delete the output , only if all is succesfull", "+        java2iiopOut.delete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c45dfd10284b0995f8ffee9e7418d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "ab08e2cd2569fe20d71c5b268b5f0994161b8187", "commitAfterChange": "2d1c5924e54f556642b92ec702cdbee071db3e75", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "             private String getRelativePath(String currentPath, String currentRelativePath)", "signatureAfterChange": "             private String getRelativePath(String currentPath, String currentRelativePath)", "diff": ["+                    if (!relPath.equals(\"\")) {", "+                        relPath = relPath + remoteFileSep;", "+                    }", "-                        throw new BuildException(\"could not find \" + currentElement", "-                            + \" from \" + currentPath);", "+                        // hit a hidden file assume not a symlink", "+                        relPath = relPath + currentElement;", "+                        currentPath = currentPath + remoteFileSep + currentElement;", "+                        log(\"Hidden file \" + relPath + \" assumed to not be a symlink.\", Project.MSG_VERBOSE);", "-                        if (!relPath.equals(\"\")) {", "-                            relPath = relPath + remoteFileSep;", "-                        }"]}]}