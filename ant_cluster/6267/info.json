{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1727d16906b416786620441ac2b69d28", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02002368d9d5a656be16103b6650644f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "12a8163d89f051f1950a8e2b136edbe08b6cc711", "commitAfterChange": "5db106732ce0f855fd2b03fd68104a708acf7996", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["-        LogOutputStream logstr = new LogOutputStream(getRmic(), Project.MSG_WARN);", "+        LogOutputStream logstr = new LogOutputStream(getRmic(), ", "+                                                     Project.MSG_WARN);", "-            Boolean ok = (Boolean)doRmic.invoke(rmic, ", "-                                                (new Object[] {cmd.getArguments()} ));", "+            Boolean ok = ", "+                (Boolean)doRmic.invoke(rmic, ", "+                                       (new Object[] {cmd.getArguments()} ));", "-            throw new BuildException(\"Cannot use SUN rmic, as it is not available\"+", "-                                     \" A common solution is to set the environment variable\"+", "-                                     \" JAVA_HOME or CLASSPATH.\", getRmic().getLocation() );", "-        }", "-        catch (Exception ex) {", "+            throw new BuildException(\"Cannot use SUN rmic, as it is not \"", "+                                     + \"available.  A common solution is to \"", "+                                     + \"set the environment variable \"", "+                                     + \"JAVA_HOME or CLASSPATH.\",", "+                                     getRmic().getLocation() );", "+        } catch (Exception ex) {", "-                throw new BuildException(\"Error starting SUN rmic: \", ex, getRmic().getLocation());", "+                throw new BuildException(\"Error starting SUN rmic: \", ", "+                                         ex, getRmic().getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ac0708a913b0140bc8fd9f01b415d3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/WLRmic.java", "commitBeforeChange": "12a8163d89f051f1950a8e2b136edbe08b6cc711", "commitAfterChange": "5db106732ce0f855fd2b03fd68104a708acf7996", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["-            throw new BuildException(\"Cannot use WebLogic rmic, as it is not available\"+", "-                                     \" A common solution is to set the environment variable\"+", "-                                     \" CLASSPATH.\", getRmic().getLocation() );", "-        }", "-        catch (Exception ex) {", "+            throw new BuildException(\"Cannot use WebLogic rmic, as it is not \"", "+                                     + \"available.  A common solution is to \"", "+                                     + \"set the environment variable \"", "+                                     + \"CLASSPATH.\", getRmic().getLocation() );", "+        } catch (Exception ex) {", "-                throw new BuildException(\"Error starting WebLogic rmic: \", ex, getRmic().getLocation());", "+                throw new BuildException(\"Error starting WebLogic rmic: \", ex,", "+                                         getRmic().getLocation());"]}]}