{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "806a0e47b5f0cbf211f585b945f17476", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ddf1c4d3f53cfd0a4b470b5225155e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["+        throws TaskException", "-            throw new BuildException( \"Could not create task of type: \"", "-                 + elementName, location );", "+            throw new TaskException( \"Could not create task of type: \"", "+                                     + elementName );", "-            ( ( Task )realThing ).perform();", "+            ( (Task)realThing ).perform();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ebc806a2797737a2b140a4396734dba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["+        throws TaskException", "-            throw new BuildException( \"Could not create task of type: \"", "-                 + elementName, location );", "+            throw new TaskException( \"Could not create task of type: \"", "+                                     + elementName );", "-            ( ( Task )realThing ).perform();", "+            ( (Task)realThing ).perform();"]}]}