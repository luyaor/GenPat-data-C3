{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f865f13c3b9ad356506a683708875bae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1146258e31f9858c02e0deab5a9aea27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "c05fecf453869e6962a7f3ba8ec302b628a997ba", "commitAfterChange": "7ac20d949c1479a45698ca673b1de7321e9977f2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private int bsR( int n )", "signatureAfterChange": "      private int bsR( final int n )", "diff": ["-    private int bsR( int n )", "+    private int bsR( final int n )", "-        int v;", "+        while( m_bsLive < n )", "-            while( bsLive < n )", "+            char ch = 0;", "+            try", "-                int zzi;", "-                char thech = 0;", "-                try", "-                {", "-                    thech = (char)bsStream.read();", "-                }", "-                catch( IOException e )", "-                {", "-                    compressedStreamEOF();", "-                }", "-                if( thech == -1 )", "-                {", "-                    compressedStreamEOF();", "-                }", "-                zzi = thech;", "-                bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                bsLive += 8;", "+                ch = (char)m_input.read();", "+            catch( final IOException ioe )", "+            {", "+                compressedStreamEOF();", "+            }", "+", "+            if( ch == -1 )", "+            {", "+                compressedStreamEOF();", "+            }", "+", "+            m_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );", "+            m_bsLive += 8;", "-        v = ( bsBuff >> ( bsLive - n ) ) & ( ( 1 << n ) - 1 );", "-        bsLive -= n;", "-        return v;", "+        final int result = ( m_bsBuff >> ( m_bsLive - n ) ) & ( ( 1 << n ) - 1 );", "+        m_bsLive -= n;", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f153026d934b587d298a46b4092412", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "c05fecf453869e6962a7f3ba8ec302b628a997ba", "commitAfterChange": "7ac20d949c1479a45698ca673b1de7321e9977f2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private int bsR( int n )", "signatureAfterChange": "      private int bsR( final int n )", "diff": ["-    private int bsR( int n )", "+    private int bsR( final int n )", "-        int v;", "+        while( m_bsLive < n )", "-            while( bsLive < n )", "+            char ch = 0;", "+            try", "-                int zzi;", "-                char thech = 0;", "-                try", "-                {", "-                    thech = (char)bsStream.read();", "-                }", "-                catch( IOException e )", "-                {", "-                    compressedStreamEOF();", "-                }", "-                if( thech == -1 )", "-                {", "-                    compressedStreamEOF();", "-                }", "-                zzi = thech;", "-                bsBuff = ( bsBuff << 8 ) | ( zzi & 0xff );", "-                bsLive += 8;", "+                ch = (char)m_input.read();", "+            catch( final IOException ioe )", "+            {", "+                compressedStreamEOF();", "+            }", "+", "+            if( ch == -1 )", "+            {", "+                compressedStreamEOF();", "+            }", "+", "+            m_bsBuff = ( m_bsBuff << 8 ) | ( ch & 0xff );", "+            m_bsLive += 8;", "-        v = ( bsBuff >> ( bsLive - n ) ) & ( ( 1 << n ) - 1 );", "-        bsLive -= n;", "-        return v;", "+        final int result = ( m_bsBuff >> ( m_bsLive - n ) ) & ( ( 1 << n ) - 1 );", "+        m_bsLive -= n;", "+        return result;"]}]}