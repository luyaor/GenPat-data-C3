{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55e3b44d6aae7da9501ccf6c4e8cef42", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e63cd893e456afe866abcec0235e96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java", "commitBeforeChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "commitAfterChange": "3b349325f1e1f10b3c4616a1c7a3e9b4ec24c40b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected ExecuteStreamHandler createStreamHandler() throws BuildException", "signatureAfterChange": "      protected ExecuteStreamHandler createStreamHandler() throws BuildException", "diff": ["-        ExecuteStreamHandler handler = null;", "-            handler = new LogStreamHandler(this, Project.MSG_INFO, Project.MSG_INFO);", "-        } else {", "-            try {", "-                //XXX", "-                OutputStream out = new FileOutputStream(outFile);", "-                handler = new MAuditStreamHandler(this, out);", "-            } catch (IOException e) {", "-                throw new BuildException(e);", "+            return new LogStreamHandler(this, Project.MSG_INFO, Project.MSG_ERR);", "+        }", "+        ExecuteStreamHandler handler = null;", "+        OutputStream out = null;", "+        try {", "+            out = new FileOutputStream(outFile);", "+            handler = new MAuditStreamHandler(this, out);", "+        } catch (IOException e) {", "+            throw new BuildException(e);", "+        } finally {", "+            if (out == null){", "+                try {", "+                    out.close();", "+                } catch (IOException e){", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3affa4691cbcb3f63f802e55a56a9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "0022fa2365dff486750da547135c9339b7a67526", "commitAfterChange": "984ad3c0217344ebdeb3b55fe2ba4018384fcfa3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private int run(String[] command) throws BuildException", "signatureAfterChange": "     private int run(String[] command) throws BuildException", "diff": ["-        FileOutputStream fos = null;", "-        try {", "-            Execute exe = null;", "-            if (out == null) {", "-                exe = new Execute(new LogStreamHandler(this, Project.MSG_INFO,", "-                                                       Project.MSG_WARN), ", "-                                  createWatchdog());", "-            } else {", "-                fos = new FileOutputStream(out.getAbsolutePath(), append);", "-                exe = new Execute(new PumpStreamHandler(fos),", "-                                  createWatchdog());", "-            }", "+            Execute exe ", "+                = new Execute(redirector.createHandler(), createWatchdog());", "+                redirector.complete();", "-        } catch (IOException io) {", "-            throw new BuildException(io, getLocation());", "-        } finally {", "-            if (fos != null) {", "-                try {fos.close();} catch (IOException io) {}", "-            }", "-        }"]}]}