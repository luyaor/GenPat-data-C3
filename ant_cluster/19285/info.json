{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c54e46eb7cc5cdb7734cea606ced017", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d719c6f1a07c557d9d1a232020cd541", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Untar.java", "commitBeforeChange": "a7d38cf2639a85056062bdc2c3da1067cb84644a", "commitAfterChange": "f027ced8e7799c021f5678ba73fba07faca9de8f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void expandFile(FileUtils fileUtils, File srcF, File dir)", "signatureAfterChange": "     protected void expandFile(FileUtils fileUtils, File srcF, File dir)", "diff": ["-        TarInputStream tis = null;", "-            log(\"Expanding: \" + srcF + \" into \" + dir, Project.MSG_INFO);", "-            fis = new FileInputStream(srcF);", "-            tis = new TarInputStream(", "-                compression.decompress(srcF, new BufferedInputStream(fis)));", "-            TarEntry te = null;", "-            FileNameMapper mapper = getMapper();", "-            while ((te = tis.getNextEntry()) != null) {", "-                extractFile(fileUtils, srcF, dir, tis,", "-                            te.getName(), te.getModTime(),", "-                            te.isDirectory(), mapper);", "-            }", "-            log(\"expand complete\", Project.MSG_VERBOSE);", "-", "+\t    fis = new FileInputStream(srcF);", "+\t    expandStream(srcF.getPath(), fis, dir);", "-            FileUtils.close(tis);", "-            if (tis == null) {", "-                FileUtils.close(fis);", "-            }", "-            ", "+\t    FileUtils.close(fis);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d9524954b976e510dc0d3bd7a31772", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "41373655c7e93243aa140ab41cfc2fbf680b6dc6", "commitAfterChange": "d796e53fea54cad6b5c2dfb6f892d704504b09f4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private ByteArrayOutputStream executeCommand(Session session, String cmd)         throws BuildException", "signatureAfterChange": "      private ByteArrayOutputStream executeCommand(Session session, String cmd)         throws BuildException", "diff": ["+        InputStream istream = null ;", "+        if (inputFile != null) {", "+            try {", "+                istream = new FileInputStream(inputFile) ;", "+            } catch (IOException e) {", "+                // because we checked the existence before, this one", "+                // shouldn't happen What if the file exists, but there", "+                // are no read permissions?", "+                log(\"Failed to read \" + inputFile + \" because of: \"", "+                    + e.getMessage(), Project.MSG_WARN);", "+            }", "+        }", "+        if (inputProperty != null) {", "+            String inputData = getProject().getProperty(inputProperty) ;", "+            if (inputData != null) {", "+                istream = new ByteArrayInputStream(inputData.getBytes()) ;", "+            }        \t", "+        }", "+", "+            if (istream != null) {", "+                channel.setInputStream(istream);", "+            }", "+        } finally {", "+            FileUtils.close(istream);", "+"]}]}