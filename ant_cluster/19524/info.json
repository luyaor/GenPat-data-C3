{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52cf29f19aa094914deac408b08a4284", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "152969606f64e09489597696e12ae38e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7be61ff46cba15020a14a9d8c83236e929bb5a31", "commitAfterChange": "07a3027bb2230d2add3de5ec0b166a35d50b0236", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private Hashtable readCachedDependencies() throws IOException", "signatureAfterChange": "     private Hashtable readCachedDependencies(File depFile) throws IOException", "diff": ["-    private Hashtable readCachedDependencies() throws IOException {", "+    private Hashtable readCachedDependencies(File depFile) throws IOException {", "-        if (cache != null) {", "-            File depFile = new File(cache, CACHE_FILE_NAME);", "-            BufferedReader in = null;", "-            if (depFile.exists()) {", "-                try {", "-                    in = new BufferedReader(new FileReader(depFile));", "-                    String line = null;", "-                    Vector dependencyList = null;", "-                    String className = null;", "-                    int prependLength = CLASSNAME_PREPEND.length();", "-                    while ((line = in.readLine()) != null) {", "-                        if (line.startsWith(CLASSNAME_PREPEND)) {", "-                            dependencyList = new Vector();", "-                            className = line.substring(prependLength);", "-                            dependencyMap.put(className, dependencyList);", "-                        } else {", "-                            dependencyList.addElement(line);", "-                        }", "-                    }", "-                } finally {", "-                    if (in != null) {", "-                        in.close();", "-                    }", "+        BufferedReader in = null;", "+        try {", "+            in = new BufferedReader(new FileReader(depFile));", "+            String line = null;", "+            Vector dependencyList = null;", "+            String className = null;", "+            int prependLength = CLASSNAME_PREPEND.length();", "+            while ((line = in.readLine()) != null) {", "+                if (line.startsWith(CLASSNAME_PREPEND)) {", "+                    dependencyList = new Vector();", "+                    className = line.substring(prependLength);", "+                    dependencyMap.put(className, dependencyList);", "+                } else {", "+                    dependencyList.addElement(line);", "+            }", "+        } finally {", "+            if (in != null) {", "+                in.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef686e41dd62afd187eeedc35478e11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Vector readDependencyList(File depFile) throws IOException", "signatureAfterChange": "     private Hashtable readCachedDependencies() throws IOException", "diff": ["-", "-    private Vector readDependencyList(File depFile) throws IOException {", "-        Vector dependencyList = null;", "-        BufferedReader in = null;", "-        try {", "-            in = new BufferedReader(new FileReader(depFile));", "-            String line = null;", "-            dependencyList = new Vector();", "-            while ((line = in.readLine()) != null) {", "-                dependencyList.addElement(line);", "-            }", "-        }", "-        finally {", "-            if (in != null) { ", "-                in.close();", "+     */", "+    private Hashtable readCachedDependencies() throws IOException{", "+        Hashtable dependencyMap = new Hashtable();", "+        ", "+        if (cache != null) {", "+            File depFile = new File(cache, CACHE_FILE_NAME);", "+            BufferedReader in = null;", "+            if (depFile.exists()) {", "+                try {", "+                    in = new BufferedReader(new FileReader(depFile));", "+                    String line = null;", "+                    Vector dependencyList = null;", "+                    String className = null;", "+                    int prependLength = CLASSNAME_PREPEND.length();", "+                    while ((line = in.readLine()) != null) {", "+                        if (line.startsWith(CLASSNAME_PREPEND)) {", "+                            dependencyList = new Vector();", "+                            className = line.substring(prependLength);", "+                            dependencyMap.put(className, dependencyList);", "+                        }", "+                        else {", "+                            dependencyList.addElement(line);", "+                        }", "+                    }", "+                }", "+                finally {", "+                    if (in != null) { ", "+                        in.close();", "+                    }", "+                }", "-        return dependencyList;", "+        return dependencyMap;", "+    }"]}]}