{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd3ce2939a444a2b43e57cac95d3c80c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a914e3ba5fe2ef7047099c0e20ac33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSGet.java", "commitBeforeChange": "fb47a21d21a0c42e6cb789776d7a6c2d42df3202", "commitAfterChange": "753f33937fab2726887a2f1b0fb02d1db3827fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Commandline buildCmdLine()", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-        // Get the path to the soscmd(.exe)", "-        commandLine.setExecutable(getSosCommand());", "+", "-        // SOS server address is required", "-        if (getSosServerPath() == null) {", "-            throw new BuildException(\"sosserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_SOS_SERVER);", "-        commandLine.createArgument().setValue(getSosServerPath());", "-        // Login info is required", "-        if (getUsername() == null) {", "-            throw new BuildException(\"username attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_USERNAME);", "-        commandLine.createArgument().setValue(getUsername());", "-        // The SOS class knows that the SOS server needs the password flag,", "-        // even if there is no password ,so we send a \" \"", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PASSWORD);", "-        commandLine.createArgument().setValue(getPassword());", "-        // VSS Info is required", "-        if (getVssServerPath() == null) {", "-            throw new BuildException(\"vssserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_VSS_SERVER);", "-        commandLine.createArgument().setValue(getVssServerPath());", "-        // SS project path is required", "-        if (getProjectPath() == null) {", "-            throw new BuildException(\"projectpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PROJECT);", "-        commandLine.createArgument().setValue(getProjectPath());", "-        // The following options are optional.", "+        getRequiredAttributes();", "+        getOptionalAttributes();", "-        // -verbose", "-        commandLine.createArgument().setValue(getVerbose());", "-        // Disable Compression", "-        commandLine.createArgument().setValue(getNoCompress());", "-        // Path to the SourceOffSite home directory /home/user/.sos", "-        if (getSosHome() == null) {", "-            // If -soshome was not specified then we can look for nocache", "-            commandLine.createArgument().setValue(getNoCache());", "-        } else {", "-            commandLine.createArgument().setValue(SOSCmd.FLAG_SOS_HOME);", "-            commandLine.createArgument().setValue(getSosHome());", "-        }", "-        //If a working directory was specified then add it to the command line", "-        if (getLocalPath() != null) {", "-            commandLine.createArgument().setValue(SOSCmd.FLAG_WORKING_DIR);", "-            commandLine.createArgument().setValue(getLocalPath());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f9b57099e1e6e041f7acff7b6513c22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSCheckout.java", "commitBeforeChange": "fb47a21d21a0c42e6cb789776d7a6c2d42df3202", "commitAfterChange": "753f33937fab2726887a2f1b0fb02d1db3827fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected Commandline buildCmdLine()", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-        // Get the path to the soscmd(.exe)", "-        commandLine.setExecutable(getSosCommand());", "+", "-        // SOS server address is required", "-        if (getSosServerPath() == null) {", "-            throw new BuildException(\"sosserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_SOS_SERVER);", "-        commandLine.createArgument().setValue(getSosServerPath());", "-        // Login info is required", "-        if (getUsername() == null) {", "-            throw new BuildException(\"username attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_USERNAME);", "-        commandLine.createArgument().setValue(getUsername());", "-        // The SOS class knows that the SOS server needs the password flag,", "-        // even if there is no password ,so we send a \" \"", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PASSWORD);", "-        commandLine.createArgument().setValue(getPassword());", "-        // VSS Info is required", "-        if (getVssServerPath() == null) {", "-            throw new BuildException(\"vssserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_VSS_SERVER);", "-        commandLine.createArgument().setValue(getVssServerPath());", "-        // VSS project is required", "-        if (getProjectPath() == null) {", "-            throw new BuildException(\"projectpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PROJECT);", "-        commandLine.createArgument().setValue(getProjectPath());", "-        // The following options are optional.", "+        getRequiredAttributes();", "+        getOptionalAttributes();", "-        // -verbose", "-        commandLine.createArgument().setValue(getVerbose());", "-        // Disable Compression", "-        commandLine.createArgument().setValue(getNoCompress());", "-        // Path to the SourceOffSite home directory /home/user/.sos", "-        if (getSosHome() == null) {", "-            // If -soshome was not specified then we can look for nocache", "-            commandLine.createArgument().setValue(getNoCache());", "-        } else {", "-            commandLine.createArgument().setValue(SOSCmd.FLAG_SOS_HOME);", "-            commandLine.createArgument().setValue(getSosHome());", "-        }", "-        // If a working directory was specified then add it to the command line", "-        if (getLocalPath() != null) {", "-            commandLine.createArgument().setValue(SOSCmd.FLAG_WORKING_DIR);", "-            commandLine.createArgument().setValue(getLocalPath());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a2b91f241613642bf8ab1040280be7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sos/SOSLabel.java", "commitBeforeChange": "fb47a21d21a0c42e6cb789776d7a6c2d42df3202", "commitAfterChange": "753f33937fab2726887a2f1b0fb02d1db3827fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Commandline buildCmdLine()", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-        // Get the path to the soscmd(.exe)", "-        commandLine.setExecutable(getSosCommand());", "+", "-        // SOS server address is required", "-        if (getSosServerPath() == null) {", "-            throw new BuildException(\"sosserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_SOS_SERVER);", "-        commandLine.createArgument().setValue(getSosServerPath());", "-        // Login info is required", "-        if (getUsername() == null) {", "-            throw new BuildException(\"username attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_USERNAME);", "-        commandLine.createArgument().setValue(getUsername());", "-        // The SOS class knows that the SOS server needs the password flag,", "-        // even if there is no password ,so we send a \" \"", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PASSWORD);", "-        commandLine.createArgument().setValue(getPassword());", "-        // VSS Info is required", "-        if (getVssServerPath() == null) {", "-            throw new BuildException(\"vssserverpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_VSS_SERVER);", "-        commandLine.createArgument().setValue(getVssServerPath());", "-        // SS project path is required", "-        if (getProjectPath() == null) {", "-            throw new BuildException(\"projectpath attribute must be set!\", getLocation());", "-        }", "-        commandLine.createArgument().setValue(SOSCmd.FLAG_PROJECT);", "-        commandLine.createArgument().setValue(getProjectPath());", "+", "+        getRequiredAttributes();", "+", "-", "-        // The following options are optional."]}]}