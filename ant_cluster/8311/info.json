{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d91c4bd415d442c94b55625abeb28af9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "177c276852b2aa2e3ff4fd0359763428", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "3a94f3d9dc3e5086b874a4f1f363b3c1adba644a", "commitAfterChange": "4f8bb2ee77ac387500caffe5b3b830547b465bd2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private static void runBuild()", "diff": ["+                ProjectHelper.configureProject(project, buildFile);", "+            } catch (NoClassDefFoundError ncdfe) {", "+                throw new BuildException(\"No JAXP compliant XML parser found. See http://java.sun.com/xml for the\\nreference implementation.\", ncdfe);", "-                throw new BuildException(cnfe);", "+                throw new BuildException(\"No JAXP compliant XML parser found. See http://java.sun.com/xml for the\\nreference implementation.\", cnfe);", "+            } catch (NullPointerException npe) {", "+                throw new BuildException(\"No JAXP compliant XML parser found. See http://java.sun.com/xml for the\\nreference implementation.\", npe);", "-            ProjectHelper.configureProject(project, buildFile);", "+            System.out.println(be.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309ff9150b4e7f4c892b4344d7c45dd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-        configureObject( object, configuration, context );", "+        try", "+        {", "+            // Configure the object", "+            configureObject( object, configuration, context );", "+        }", "+        catch( final ReportableConfigurationException e )", "+        {", "+            // Already have a reasonable error message - so rethrow", "+            throw e.getCause();", "+        }", "+        catch( final Exception e )", "+        {", "+            // Wrap all other errors with general purpose error message", "+            final String message = REZ.getString( \"bad-configure-element.error\", configuration.getName() );", "+            throw new ConfigurationException( message, e );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641b4292e2ce413ee4f51d7f76c30f29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "commitAfterChange": "80793a20ada49e7453e836ffeab1e41c8a88d49d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void process( final URL systemID,                             final SAXConfigurationHandler handler )         throws Exception", "signatureAfterChange": "     private Configuration parseProject( final URL systemID )         throws ProjectException", "diff": ["-    protected void process( final URL systemID,", "-                            final SAXConfigurationHandler handler )", "-        throws Exception", "+     */", "+    private Configuration parseProject( final URL systemID )", "+        throws ProjectException", "-        final SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();", "-        final SAXParser saxParser = saxParserFactory.newSAXParser();", "-        final XMLReader parser = saxParser.getXMLReader();", "-        parser.setFeature( \"http://xml.org/sax/features/namespace-prefixes\", false );", "-        parser.setFeature( \"http://xml.org/sax/features/namespaces\", false );", "-        //parser.setFeature( \"http://xml.org/sax/features/validation\", false );", "+        try", "+        {", "+            final SAXConfigurationHandler handler = new SAXConfigurationHandler();", "+            final SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();", "+            final SAXParser saxParser = saxParserFactory.newSAXParser();", "+            final XMLReader parser = saxParser.getXMLReader();", "+            parser.setFeature( \"http://xml.org/sax/features/namespace-prefixes\", false );", "+            parser.setFeature( \"http://xml.org/sax/features/namespaces\", false );", "+            //parser.setFeature( \"http://xml.org/sax/features/validation\", false );", "-        parser.setContentHandler( handler );", "-        parser.setErrorHandler( handler );", "-        parser.parse( systemID.toString() );", "+            parser.setContentHandler( handler );", "+            parser.setErrorHandler( handler );", "+            parser.parse( systemID.toString() );", "+", "+            return handler.getConfiguration();", "+        }", "+        catch( Exception e )", "+        {", "+            String message = REZ.getString( \"ant.project-parse.error\" );", "+            throw new ProjectException( message, e );", "+        }"]}]}