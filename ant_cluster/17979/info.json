{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2eb982daf6593df1f0f69d840e45683f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "995af43e4d8f161d2e48f22d9397fae5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Javah.java", "commitBeforeChange": "5ffacddada00339f7c26549ff306e1d4fa04fc41", "commitAfterChange": "13b07b313fdc7ab2620f71517ab16698be496f24", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private Commandline setupJavahCommand()", "signatureAfterChange": "     public void logAndAddFiles(Commandline cmd)", "diff": ["-    private Commandline setupJavahCommand() {", "-        Commandline cmd = new Commandline();", "-", "-        if (destDir != null) {", "-            cmd.createArgument().setValue(\"-d\");", "-            cmd.createArgument().setFile(destDir);", "-        }", "-", "-        if (outputFile != null) {", "-            cmd.createArgument().setValue(\"-o\");", "-            cmd.createArgument().setFile(outputFile);", "-        }", "-", "-        if (classpath != null) {", "-            cmd.createArgument().setValue(\"-classpath\");", "-            cmd.createArgument().setPath(classpath);", "-        }", "-", "-        // JDK1.1 is rather simpler than JDK1.2", "-        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "-            if (verbose) {", "-                cmd.createArgument().setValue(\"-v\");", "-            }", "-        } else {", "-            if (verbose) {", "-                cmd.createArgument().setValue(\"-verbose\");", "-            }", "-            if (old) {", "-                cmd.createArgument().setValue(\"-old\");", "-            }", "-            if (force) {", "-                cmd.createArgument().setValue(\"-force\");", "-            }", "-        }", "-", "-        if (stubs) {", "-            if (!old) {", "-                throw new BuildException(\"stubs only available in old mode.\", getLocation());", "-            }", "-            cmd.createArgument().setValue(\"-stubs\");", "-        }", "-        Path bcp = new Path(getProject());", "-        if (bootclasspath != null) {", "-            bcp.append(bootclasspath);", "-        }", "-        bcp = bcp.concatSystemBootClasspath(\"ignore\");", "-        if (bcp.size() > 0) {", "-            cmd.createArgument().setValue(\"-bootclasspath\");", "-            cmd.createArgument().setPath(bcp);", "-        }", "-", "+    public void logAndAddFiles(Commandline cmd) {", "-        return cmd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd169fa5f78f099785508345bc5fbf84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "3fce5ce0142330b06cb5ad940808d4d0b42c56e2", "commitAfterChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "-", "-        Commandline toExecute = new Commandline();", "-", "-        toExecute.setExecutable(\"cvs\");", "-        if (cvsRoot != null) {", "-            toExecute.createArgument().setValue(\"-d\");", "-            toExecute.createArgument().setValue(cvsRoot);", "-        }", "-        if (noexec) {", "-            toExecute.createArgument().setValue(\"-n\");", "-        }", "-        if (quiet) {", "-            toExecute.createArgument().setValue(\"-q\");", "-        }", "-", "-        toExecute.createArgument().setLine(command);", "-", "-        //", "-        // get the other arguments.", "-        //", "-        toExecute.addArguments(cmd.getCommandline());", "-", "-        if (cvsPackage != null) {", "-            toExecute.createArgument().setLine(cvsPackage);", "-        }", "-", "-        if(port>0){", "-        if(passFile!=null){", "-        if(cvsRsh!=null){", "-            log(\"Executing: \" + executeToString(exe), Project.MSG_DEBUG);", "-", "-                throw new BuildException(\"cvs exited with error code \"+ retCode);", "-            throw new BuildException(e, location);", "-", "+", "+    public void execute() throws BuildException {", "+", "+", "+        if( this.getCommand() == null", "+            && vecCommandlines.size() == 0 ) {", "+            // re-implement legacy behaviour:", "+            this.setCommand( AbstractCvsTask.default_command );", "+        }", "+", "+        String c = this.getCommand();", "+        if( c != null ) {", "+            this.addConfiguredCommandline( this.cmd, true );", "+            this.cmd.createArgument().setLine(c);", "+        }", "+", "+        for( int i = 0; i < vecCommandlines.size(); i++ ) {", "+            this.runCommand( (Commandline)vecCommandlines.elementAt( i ) );"]}]}