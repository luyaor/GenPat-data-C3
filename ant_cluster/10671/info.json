{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbee852233dcf49edfaf7a5de1bf7b5e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4308a4c576e96336999ca4f6657c01f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "da4aeef1c3a7217efcdf679bccff3d5af3ec874e", "commitAfterChange": "923140f496d57209baedf1b1921d0a2cb30f5e54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(String[] args)", "diff": ["+            } else if (arg.equals(\"-cp\") || arg.equals(\"-lib\")) {", "+                //catch script/ant mismatch with a meaningful message", "+                //we could ignore it, but there are likely to be other", "+                //version problems, so we stamp down on the configuration now", "+                String msg = \"Ant's Main method is being handed \"", "+                        + \"an option \"+arg+\" that is only for the launcher class.\"", "+                        + \"\\nThis can be caused by a version mismatch between \"", "+                        + \"the ant script/.bat file and Ant itself.\";", "+                throw new BuildException(msg);", "-                if (fis != null) {", "-                    try {", "-                        fis.close();", "-                    } catch (IOException e) {", "-                        // ignore", "-                    }", "-                }", "+                FileUtils.close(fis);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eb55def7f4df99c45262589ffe1f6a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "443bf819ed21ca24bcdf71d48e0c2fbc8cd1be3d", "commitAfterChange": "84b6f69d71494069683bc7d041c31e471fc697cf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-            Task t = ue.getTask();", "-            if (t == null) {", "+            Object configuredObject = ue.getRealThing();", "+            if (configuredObject == null) {", "-            if (!(t instanceof AntlibInterface)) {", "+            if (!(configuredObject instanceof AntlibDefinition)) {", "-                    \"Invalid element in antlib \" + ue.getTag());", "+                    \"Invalid task in antlib \" + ue.getTag()", "+                    + \" \" + configuredObject.getClass() + \" does not \"", "+                    + \"extend org.apache.tools.ant.taskdefs.AntlibDefinition\");", "-            if (t instanceof AntlibInterface) {", "-                AntlibInterface d = (AntlibInterface) t;", "-                d.setURI(uri);", "-                d.setAntlibClassLoader(getClassLoader());", "-            }", "-            t.init();", "-            t.execute();", "+            AntlibDefinition def = (AntlibDefinition) configuredObject;", "+            def.setURI(uri);", "+            def.setAntlibClassLoader(getClassLoader());", "+            def.init();", "+            def.execute();"]}]}