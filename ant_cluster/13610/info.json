{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be7b2e919f05e87c9106d227f6acec24", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0033de3cfc875e4cf18d5666c36ad049", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "      public void testContainsIncomplete2()", "signatureAfterChange": "      @Test     public void testContainsIncomplete2()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"contains-incomplete2\",", "-                    \"Missing contains attribute\",", "-                    \"both string and substring are required in contains\");", "+        try {", "+            buildRule.executeTarget(\"contains-incomplete2\");", "+            fail(\"BuildException should have been thrown - Missing contains attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"both string and substring are required in contains\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2314871bb1fface1f73ebc0c66b2ae99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MacroDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testImplicitExplicit()", "signatureAfterChange": "     @Test     public void testImplicitExplicit()", "diff": ["+    @Test", "-        expectSpecificBuildException(", "-            \"implicit.explicit\",", "-            \"Only one element allowed when using implicit elements\",", "-            \"Only one element allowed when using implicit elements\");", "+        try {", "+            buildRule.executeTarget(\"implicit.explicit\");", "+            fail(\"BuildException expected: Only one element allowed when using implicit elements\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"Only one element allowed when using implicit elements\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "655bfec71e8ec4a45f2ad13d9420141b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testConditionIncomplete()", "signatureAfterChange": "      @Test     public void testConditionIncomplete()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"condition-incomplete\",", "-                                     \"property attribute has been omitted\",", "-                                     \"The property attribute is required.\");", "+        try {", "+            buildRule.executeTarget(\"condition-incomplete\");", "+            fail(\"BuildException should have been thrown - property attribute has been omitted\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"The property attribute is required.\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dafbfb97a654362c9827308dc2f1701", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": "       public void testIstrueIncomplete1()", "signatureAfterChange": "      @Test     public void testIstrueIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"istrue-incomplete\",", "-                    \"Missing attribute\",", "-                    \"Nothing to test for truth\");", "+        try {", "+            buildRule.executeTarget(\"istrue-incomplete\");", "+            fail(\"BuildException should have been thrown - Missing attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"Nothing to test for truth\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a41a78d84f420dbcb8470f80cbc3563", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": "       public void testContainsIncomplete1()", "signatureAfterChange": "      @Test     public void testContainsIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"contains-incomplete1\",", "-                    \"Missing contains attribute\",", "-                    \"both string and substring are required in contains\");", "+        try {", "+            buildRule.executeTarget(\"contains-incomplete1\");", "+            fail(\"BuildException should have been thrown - Missing contains attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"both string and substring are required in contains\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd1a46d5f6a3e598bacc9352befe8df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MacroDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testImplicitNotOptional()", "signatureAfterChange": "     @Test     public void testImplicitNotOptional()", "diff": ["+    @Test", "-        expectSpecificBuildException(", "-            \"implicit.notoptional\",", "-            \"Missing nested elements for implicit element implicit\",", "-            \"Missing nested elements for implicit element implicit\");", "+        try {", "+            buildRule.executeTarget(\"implicit.notoptional\");", "+            fail(\"BuildException expected: Missing nested elements for implicit element implicit\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"Missing nested elements for implicit element implicit\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1012ea2a35a264845ebd2a97756b33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testConditionEmpty()", "signatureAfterChange": "      @Test     public void testConditionEmpty()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"condition-empty\",", "-                                     \"no conditions\",", "-                                     \"You must nest a condition into <condition>\");", "+        try {", "+            buildRule.executeTarget(\"condition-empty\");", "+            fail(\"BuildException should have been thrown - no conditions\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"You must nest a condition into <condition>\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea89082381a05e6a3774b22f4590dcf3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public void testFilesmatchIncomplete()", "signatureAfterChange": "      @Test     public void testFilesmatchIncomplete()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"filesmatch-incomplete\",", "-                                     \"Missing file2 attribute\",", "-                                     \"both file1 and file2 are required in filesmatch\");", "+        try {", "+            buildRule.executeTarget(\"filesmatch-incomplete\");", "+            fail(\"Build exception should have been thrown - Missing file2 attirbute\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"both file1 and file2 are required in filesmatch\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec84595a64639aef520584519f5ec4f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "       public void testIsfalseIncomplete1()", "signatureAfterChange": "      @Test     public void testIsfalseIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"isfalse-incomplete\",", "-                    \"Missing attribute\",", "-                    \"Nothing to test for falsehood\");", "+        try {", "+            buildRule.executeTarget(\"isfalse-incomplete\");", "+            fail(\"BuildException should have been thrown - Missing attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"Nothing to test for falsehood\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe991bfd911ca026eb2f9a34c70a4ba9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testNegationIncomplete()", "signatureAfterChange": "      @Test     public void testNegationIncomplete()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"negationincomplete\",", "-                                     \"no conditions in <not>\",", "-                                     \"You must nest a condition into <not>\");", "+        try {", "+            buildRule.executeTarget(\"negationincomplete\");", "+            fail(\"BuildException should have been thrown - no conditions in <not>\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"You must nest a condition into <not>\", ex.getMessage());", "+        }"]}]}