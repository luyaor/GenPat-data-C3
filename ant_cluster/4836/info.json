{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0a3f35096a3c7955156d32835aa3536", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018889c96281e8534876654c42be0da2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/dotnet/Ilasm.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void executeOneFile( final String targetFile )         throws TaskException", "signatureAfterChange": "     public void executeOneFile( final String targetFile )         throws TaskException", "diff": ["-        final Commandline cmd = exe.getCommandline();", "-        cmd.setExecutable( EXE_NAME );", "-        addArgument( cmd, getDebugParameter() );", "-        addArgument( cmd, getTargetTypeParameter() );", "-        addArgument( cmd, getListingParameter() );", "-        addArgument( cmd, getOutputFileParameter() );", "-        addArgument( cmd, getResourceFileParameter() );", "-        addArgument( cmd, getVerboseParameter() );", "-        addArgument( cmd, getKeyfileParameter() );", "-        addArgument( cmd, getExtraOptionsParameter() );", "-        addArgument( cmd, targetFile );", "+        exe.setExecutable( EXE_NAME );", "+        addArgument( exe, getDebugParameter() );", "+        addArgument( exe, getTargetTypeParameter() );", "+        addArgument( exe, getListingParameter() );", "+        addArgument( exe, getOutputFileParameter() );", "+        addArgument( exe, getResourceFileParameter() );", "+        addArgument( exe, getVerboseParameter() );", "+        addArgument( exe, getKeyfileParameter() );", "+        addArgument( exe, getExtraOptionsParameter() );", "+        addArgument( exe, targetFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d25c6a7c121c4a8bb84a9661a69a80b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "451ca455d5963fd430ac58e449bb791138f07e1a", "commitAfterChange": "a44c5e5b95f895c6e7b3f7115f5ca471c7578cdf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void execute( final String[] args )         throws Exception", "signatureAfterChange": "      protected void execute( final String[] args )         throws Exception", "diff": ["-        final Properties properties = new Properties();", "-        properties.setProperty( \"ant.home\", homeDir );", "+        final Parameters parameters = new Parameters();", "+        parameters.setParameter( \"ant.home\", homeDir );", "-        if( null != taskLibDir ) properties.setProperty( \"ant.path.task-lib\", taskLibDir );", "+        if( null != taskLibDir ) parameters.setParameter( \"ant.path.task-lib\", taskLibDir );", "-        final AntEngine antEngine = new DefaultAntEngine();", "-        setupLogger( antEngine );", "-        antEngine.setProperties( properties );", "-        antEngine.initialize();", "+        final Embeddor embeddor = new MyrmidonEmbeddor();", "+        setupLogger( embeddor );", "+        embeddor.parameterize( parameters );", "+        embeddor.initialize();", "-        final ProjectBuilder builder = antEngine.getProjectBuilder();", "+        final ProjectBuilder builder = embeddor.getProjectBuilder();", "-        final ProjectEngine engine = antEngine.getProjectEngine();", "+        final ProjectEngine engine = embeddor.getProjectEngine();", "-        antEngine.dispose();", "+        embeddor.dispose();"]}]}