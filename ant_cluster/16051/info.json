{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55101ce1b551546ec42dc35df40f5ed8", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0105d15ebad8a00bd550636aafa383ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testBadNoProperty()", "signatureAfterChange": "  \t@Test     public void testBadNoProperty()", "diff": ["+\t@Test", "-        expectBuildExceptionContaining(\"test-bad-no-property\", \"no-property\",", "-                                       \"Missing 'property' attribute!\");", "-        assertPropertyUnset(\"jar.classpath\");", "+        try {", "+\t\t\tbuildRule.executeTarget(\"test-bad-no-property\");", "+\t\t\tfail(\"Build exception should have been thrown on no property\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"Missing 'property' attribute!\", ex.getMessage());", "+\t\t}", "+        assertNull(buildRule.getProject().getProperty(\"jar.classpath\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "869cb8926a2522c9a0d676ff33744146", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testBadPropertyExists()", "signatureAfterChange": "  \t@Test     public void testBadPropertyExists()", "diff": ["+\t@Test", "-        expectBuildExceptionContaining(\"test-bad-property-exists\",", "-            \"property-exits\", \"Property 'jar.classpath' already set!\");", "-        assertPropertyEquals(\"jar.classpath\", \"exists\");", "+        try {", "+\t\t\tbuildRule.executeTarget(\"test-bad-property-exists\");", "+\t\t\tfail(\"Build exception should have been thrown on bad property\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"Property 'jar.classpath' already set!\", ex.getMessage());", "+\t\t}", "+        assertEquals(buildRule.getProject().getProperty(\"jar.classpath\"), \"exists\");"]}]}