{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "514eb3a72237b521cd96a24685b07b5b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87bb3a78cd25bb681f55138dae0e4113", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void enableAdders()         throws ConfigurationException", "signatureAfterChange": "     private void enableProperties()         throws ConfigurationException", "diff": ["-    public void enableAdders()", "+    private void enableProperties()", "+            final boolean isTypedProp = (propName.length() == 0);", "+            if( isTypedProp && !type.isInterface() )", "+            {", "+                final String message =", "+                    REZ.getString( \"typed-adder-non-interface.error\",", "+                                   m_class.getName(),", "+                                   type.getName() );", "+                throw new ConfigurationException( message );", "+            }", "+", "-            m_props.put( propName, configurer );", "+            if( isTypedProp )", "+            {", "+                m_typedPropConfigurer = configurer;", "+            }", "+            else", "+            {", "+                m_props.put( propName, configurer );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa39fcaf742cfe932cfa2ded71df8855", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void configure( final Object object,                            final String name,                            final String value,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final String name,                            final String value,                            final Context context )         throws ConfigurationException", "diff": ["+        // TODO - this ain't right, the validation is going to be screwed up", "+        final ConfigurationState state = configurer.startConfiguration( object );", "+", "-        setAttribute( configurer, object, name, value, context );", "-    }", "+            setAttribute( state, name, value, context );", "+        catch( final CascadingException ce )", "+            final String message =", "+                REZ.getString( \"bad-set-class-attribute.error\",", "+                               name,", "+                               object.getClass().getName() );", "+            throw new ConfigurationException( message, ce );", "+", "+        // Finish up", "+        configurer.finishConfiguration( state );"]}]}