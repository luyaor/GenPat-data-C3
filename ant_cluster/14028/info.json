{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8067ecbf92a305f1146011a77208d8c0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50bf83ab406a15419c904174abab5f7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "32cfa5b1066c1de3e18484d533ecddad213b02bb", "commitAfterChange": "dbf806213104986bab6864d85b55bf0912d64cc7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public static String[] translateCommandline(String to_process)", "signatureAfterChange": "      public static String[] translateCommandline(String to_process)", "diff": ["-                        current.append(tok.nextToken());", "+                        String escapedToken = tok.nextToken();", "+                        char escapedChar = escapedToken.charAt(0);", "+                        if (escapedChar == '\\\\' || escapedChar == '\\'' ||", "+                             escapedChar == '\\\"') {", "+                            current.append(escapedToken);", "+                        }", "+                        else {", "+                            current.append(\"\\\\\" + escapedToken);", "+                        }", "-                        throw new BuildException(\"stray backslash in \"", "-                                                 + to_process);", "+                        // just add the backslash", "+                        current.append(\"\\\\\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8dda66009e9642eea54f9eb7b1cbf9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DeweyDecimal( final String string )         throws NumberFormatException", "signatureAfterChange": "     public DeweyDecimal(final String string)         throws NumberFormatException", "diff": ["-    public DeweyDecimal( final String string )", "-        throws NumberFormatException", "-    {", "-        final StringTokenizer tokenizer = new StringTokenizer( string, \".\", true );", "+    public DeweyDecimal(final String string)", "+        throws NumberFormatException {", "+        final StringTokenizer tokenizer = new StringTokenizer(string, \".\", true);", "-        m_components = new int[ ( size + 1 ) / 2 ];", "+        components = new int[ (size + 1) / 2 ];", "-        for( int i = 0; i < m_components.length; i++ )", "-        {", "+        for (int i = 0; i < components.length; i++) {", "-            if( component.equals( \"\" ) )", "-            {", "-                throw new NumberFormatException( \"Empty component in string\" );", "+            if (component.equals(\"\")) {", "+                throw new NumberFormatException(\"Empty component in string\");", "-            m_components[ i ] = Integer.parseInt( component );", "+            components[ i ] = Integer.parseInt(component);", "-            if( tokenizer.hasMoreTokens() )", "-            {", "+            if (tokenizer.hasMoreTokens()) {", "-                if( !tokenizer.hasMoreTokens() )", "-                {", "-                    throw new NumberFormatException( \"DeweyDecimal ended in a '.'\" );", "+                if (!tokenizer.hasMoreTokens()) {", "+                    throw new NumberFormatException(\"DeweyDecimal ended in a '.'\");"]}]}