{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1f20c10c1050abba5b05a088853dd2b", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9e58370fada651f814ab305a6786ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "4c36f7cb5aca402d90ea046454939860ba5457e8", "commitAfterChange": "4a9c6d79bc91a3a35d222c8f037830feb7de0cfe", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "          public String[] getJavaVariables()             throws TaskException", "signatureAfterChange": "          public String[] getJavaVariables()             throws TaskException", "diff": ["-            String props[] = Environment.toNativeFormat( super.getVariables() );", "+            String props[] = new String[ 0 ];", "+            try", "+            {", "+                props = Environment.toNativeFormat( super.getVariables() );", "+            }", "+            catch( final ExecException ee )", "+            {", "+                throw new TaskException( ee.getMessage(), ee );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72d181d21ecab0dc7824bc39a250cfa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "4c36f7cb5aca402d90ea046454939860ba5457e8", "commitAfterChange": "4a9c6d79bc91a3a35d222c8f037830feb7de0cfe", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "          public String[] getJavaVariables()             throws TaskException", "signatureAfterChange": "          public String[] getJavaVariables()             throws TaskException", "diff": ["-            String props[] = Environment.toNativeFormat( super.getVariables() );", "+            String props[] = new String[ 0 ];", "+            try", "+            {", "+                props = Environment.toNativeFormat( super.getVariables() );", "+            }", "+            catch( final ExecException ee )", "+            {", "+                throw new TaskException( ee.getMessage(), ee );", "+            }"]}]}