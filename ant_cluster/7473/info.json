{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3ee0df54b50de150f7fa797fa34683b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4abadb6b53a84bf5044b766ba46053f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "a5e27b42aa51d0ee4c5d5daa70bc17f131706364", "commitAfterChange": "02d8419021922685f4379c1e95a7fb5c8897e712", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static String encodeUri(String path) throws UnsupportedEncodingException", "signatureAfterChange": "     public static String encodeUri(String path) throws UnsupportedEncodingException", "diff": ["-        StringBuffer sb = new StringBuffer(len);", "+        StringBuffer sb = null;", "+                if (sb == null) {", "+                    sb = new StringBuffer(path.substring(0, i));", "+                }", "-            else {", "-                sb.append((char)ch);", "+            else if (sb != null) {", "+                sb.append((char) ch);", "+            if (sb == null) {", "+                sb = new StringBuffer(path.substring(0, i));", "+            }", "-                }", "-                else if (gNeedEscaping[b]) {", "+                } else if (gNeedEscaping[b]) {", "-                    sb.append((char)b);", "+                    sb.append((char) b);", "-        return sb.toString();", "+        return sb == null ? path : sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf1248c70e9692d0878b77b44ac1f01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Taskdef.java", "commitBeforeChange": "4fbcfdedafc75b08541c4ad4d54b75d35300d4e7", "commitAfterChange": "8c59db789549a81eb86b2d1161a9b8294da2da17", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\t\tClass taskClass = Class.forName(value);", "-\t\t\tproject.addTaskDefinition(name, taskClass);", "+                ClassLoader loader = null;", "+                if (classpath != null) {", "+                    loader = new AntClassLoader(project, classpath, false);", "+                } else {", "+                    loader = this.getClass().getClassLoader();", "+                }", "+", "+                Class taskClass = null;", "+                if (loader != null) {", "+                    taskClass = loader.loadClass(value);", "+                } else {", "+                    taskClass = Class.forName(value);", "+                }", "+                project.addTaskDefinition(name, taskClass);"]}]}