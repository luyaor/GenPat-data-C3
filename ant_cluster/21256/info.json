{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee82760af36f44e6ce37d30754aa6dba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc081a5a35d62365d0dde5bdae769c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "9bab4dab1ab3b86354929a1929906fe471d9fa93", "commitAfterChange": "e47b4d5aca65c519f01afabb9479b8443abd2ccf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public static String toString(String [] line)", "signatureAfterChange": "      public static String toString(String [] line)", "diff": ["+", "-", "-            // try to place quotes around arguments that need them", "-            if (line[i].indexOf(\"\\\"\") > -1) {", "-                if (line[i].indexOf(\"\\'\") > -1) {", "-                    throw new BuildException(\"Can\\'t handle single and double quotes in same argument\");", "-                } else {", "-                    result.append('\\'').append(line[i]).append('\\'');", "-                }", "-            } else if (line[i].indexOf(\"\\'\") > -1 ", "-                       || line[i].indexOf(\" \") > -1) {", "-                result.append('\\\"').append(line[i]).append('\\\"');", "-            } else {", "-                result.append(line[i]);", "-            }", "+            result.append(quoteArgument(line[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4559c3880a460f5e80aafc2614eaebb7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "f1548aec2b4a57bfdca206f32178a9e03c39d3a1", "commitAfterChange": "7ed240811799349f5a0932e7a464086e5ce31527", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public InputSource resolveEntity(String publicId,                 String systemId)", "signatureAfterChange": "         private boolean isRoleInUse(String name)", "diff": ["-        public InputSource resolveEntity(String publicId,", "-                String systemId) {", "-", "-            log(\"Looking for entiry with PublicID=\" + publicId +", "-                    \" and SystemId=\" + systemId, Project.MSG_VERBOSE);", "-            if (matchDtdId(systemId)) {", "-                String resId = systemId.substring(ANTLIB_DTD_URL.length());", "-                InputSource is =", "-                        new InputSource(this.getClass().getResourceAsStream(resId));", "-", "-                is.setSystemId(systemId);", "-                return is;", "-            }", "-            return null;", "+        private boolean isRoleInUse(String name) {", "+            return (symbols.getRole(name) != null);"]}]}