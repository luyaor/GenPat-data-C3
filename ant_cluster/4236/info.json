{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89233c805b2c5743962ad6e0f7674fcd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e83a32880b5876266b37b8d411ccf24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "diff": ["-        Path classpath = getCompileClasspath();", "+        Path classpath = new Path();", "+        addCompileClasspath( classpath );", "-        cmd.addArguments( FileUtils.translateCommandline( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath ) );", "-        cmd.addArguments( FileUtils.translateCommandline( src ) );", "+        cmd.addArgument( PathUtil.formatPath( src ) );", "-            cmd.addArguments( FileUtils.translateCommandline( m_bootclasspath ) );", "+            cmd.addArgument( PathUtil.formatPath( m_bootclasspath ) );", "-            cmd.addArguments( FileUtils.translateCommandline( m_extdirs ) );", "+            cmd.addArgument( PathUtil.formatPath( m_extdirs ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adb30039945c9fcf8c0c32122bfff8f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "diff": ["-        cmd.addArgument( PathUtil.formatPath( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath, getTaskContext() ) );", "-        cmd.addArgument( PathUtil.formatPath( src ) );", "+        cmd.addArgument( PathUtil.formatPath( src, getTaskContext() ) );", "-        if( m_bootclasspath != null )", "+        final String[] bootclasspath = m_bootclasspath.listFiles( getTaskContext() );", "+        if( bootclasspath.length > 0 )", "-            cmd.addArgument( PathUtil.formatPath( m_bootclasspath ) );", "+            cmd.addArgument( PathUtil.formatPath( bootclasspath ) );", "-            cmd.addArgument( PathUtil.formatPath( m_extdirs ) );", "+            cmd.addArgument( PathUtil.formatPath( m_extdirs, getTaskContext() ) );"]}]}