{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b1b50b8aa0c757c672a685971081ba6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b6cb6a411093ca39d3dd474cad835c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "22d3473e8e322ed72558e92c17cdf5c6366613a9", "commitAfterChange": "c8e91147e37e34c4024c33ecf454e7c46639baa2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     protected Class defineClassFromData(File container, byte[] classData, String classname)             throws IOException", "signatureAfterChange": "     protected Class defineClassFromData(File container, byte[] classData, String classname)             throws IOException", "diff": ["-        // XXX should instead make a new ProtectionDomain with a CodeSource", "-        // corresponding to container.toURI().toURL() and the same", "-        // PermissionCollection as Project.class.protectionDomain had", "-        return defineClass(classname, classData, 0, classData.length, Project.class", "-                .getProtectionDomain());", "+        ProtectionDomain currentPd = Project.class.getProtectionDomain();", "+        String classResource = getClassFilename(classname);", "+        CodeSource src = new CodeSource(FILE_UTILS.getFileURL(container),", "+                                        getCertificates(container,", "+                                                        classResource));", "+        ProtectionDomain classesPd =", "+            new ProtectionDomain(src, currentPd.getPermissions(),", "+                                 this,", "+                                 currentPd.getPrincipals());", "+        return defineClass(classname, classData, 0, classData.length,", "+                           classesPd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8737dff58f43056f5eec68f23f64513", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "36edbf6dcb3c83de2e14f93d934b0e1042a2942f", "commitAfterChange": "4e2558dd261ba0fed920fd79a13d74986ec1bc5d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void setMagicProperties() throws ExecutionException", "signatureAfterChange": "     protected void setMagicProperties() throws ExecutionException", "diff": ["-        // set up various magic properties", "-        setDataValue(MagicProperties.ANT_HOME,", "-            initConfig.getAntHome().toString(), true);", "+        URL antHomeURL = initConfig.getAntHome();", "+        String antHomeString = null;", "+        if (antHomeURL.getProtocol().equals(\"file\")) {", "+            File antHome = new File(antHomeURL.getFile());", "+            antHomeString = antHome.getAbsolutePath();", "+        } else {", "+            antHomeString = antHomeURL.toString();", "+        }", "+        setDataValue(MagicProperties.ANT_HOME, antHomeString, true);"]}]}