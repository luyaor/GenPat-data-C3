{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77146342e11ec5371c7f8b725c880d60", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55abf3b8b3f92972fff9a4cec8c99cb5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "cf6d4fb6ccbb1a73bdfb3b7ffbb3727ce9fbe958", "commitAfterChange": "4c695bbb72867aa13029de177f468c38ab787174", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "signatureAfterChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "diff": ["+                } else {", "+                    referenceList.append('\\\"');", "-        //add it all to an argument", "-        command.addArgument(referenceList.toString());", "+        // hack: This means we've added at least one reference that's", "+        // a managed binary", "+        if (!firstEntry) {", "+            //add it all to an argument", "+            command.addArgument(referenceList.toString() + '\\\"');", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f786eba58484db8a78b2b7cfbb88c87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "640b7f41f039dd3ef8e41c5af7d86c201918d09a", "commitAfterChange": "35845f7053e12288a95bf9720532d772ea2fa60b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void runExecute(Execute exe) throws IOException", "signatureAfterChange": "     protected final void runExecute(Execute exe) throws IOException", "diff": ["-        returnCode = exe.execute();", "+        if (!spawn) {", "+            returnCode = exe.execute();", "-        //test for and handle a forced process death", "-        if (exe.killedProcess()) {", "-            log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "-        }", "-        maybeSetResultPropertyValue(returnCode);", "-        if (Execute.isFailure(returnCode)) {", "-            if (failOnError) {", "-                throw new BuildException(getTaskType() + \" returned: \"", "-                    + returnCode, getLocation());", "-            } else {", "-                log(\"Result: \" + returnCode, Project.MSG_ERR);", "+            //test for and handle a forced process death", "+            if (exe.killedProcess()) {", "+                log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "+            maybeSetResultPropertyValue(returnCode);", "+            if (Execute.isFailure(returnCode)) {", "+                if (failOnError) {", "+                    throw new BuildException(getTaskType() + \" returned: \"", "+                        + returnCode, getLocation());", "+                } else {", "+                    log(\"Result: \" + returnCode, Project.MSG_ERR);", "+                }", "+            }", "+            redirector.complete();", "+        } else {", "+            exe.spawn();", "-        redirector.complete();"]}]}