{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25a3a5e0e5895e89608967b18a0159d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2008d2e8ef6b721647154499b46e1da8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/listeners/DefaultProjectListener.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void log( final String message, final Throwable throwable )", "signatureAfterChange": "     public void log( final LogEvent event )", "diff": ["-     */", "-    public void log( final String message, final Throwable throwable )", "-    {", "-        output( message + \"\\n\" + ExceptionUtil.printStackTrace( throwable, 5, true ) );", "-    }", "+     */", "+    public void log( final LogEvent event )", "+    {", "+        // Write the target header, if necessary", "+        final String target = event.getTargetName();", "+        if( target != null && !m_targetOutput )", "+        {", "+            writeTargetHeader( event );", "+        // Write the message", "+        super.log( event );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1843c5348390b68d0f5c14f2e46f4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/listeners/ClassicProjectListener.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void output( final String data )", "signatureAfterChange": "     private void writeThrowable( final LogEvent event )", "diff": ["-    private void output( final String data )", "-        final String task = getTask();", "-            System.out.println( \"\\t[\" + task + \"] \" + data );", "-            System.out.println( data );", "+     */", "+    private void writeThrowable( final LogEvent event )", "+    {", "+        // Write the exception, if any", "+        final Throwable throwable = event.getThrowable();", "+        if( throwable != null )", "+        {", "+            getWriter().println( ExceptionUtil.printStackTrace( throwable, 5, true ) );"]}]}