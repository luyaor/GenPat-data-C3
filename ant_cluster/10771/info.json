{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34ead28610ef0f884e76cd2df721f4bc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c61affe6621c47f1af560b084bd8302", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "6a2d05b7a8541f09b4ac41d92d54ce3cc80e2036", "commitAfterChange": "55811ba73b5aed3169e1d003a069a4f83f161d1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "diff": ["-        // we cannot be using Java 1.0 when forking, so we only have to", "-        // distinguish between Java 1.1, and Java 1.2 and higher, as Java 1.1", "-        // has its own parameter format", "-        boolean usingJava1_1 ", "-            = Project.getJavaVersion().equals(Project.JAVA_1_1);", "-        String memoryParameterPrefix = usingJava1_1 ? \"-J-\" : \"-J-X\";", "+        String memoryParameterPrefix = assumeJava11() ? \"-J-\" : \"-J-X\";", "-        if (Project.getJavaVersion().startsWith(\"1.1\")) {", "+        if (assumeJava11()) {", "-            if (useDebugLevel", "-                && Project.getJavaVersion() != Project.JAVA_1_0", "-                && Project.getJavaVersion() != Project.JAVA_1_1) {", "-", "+            if (useDebugLevel && !assumeJava11()) {", "-        } else if (Project.getJavaVersion() != Project.JAVA_1_0 &&", "-                   Project.getJavaVersion() != Project.JAVA_1_1) {", "+        } else if (!assumeJava11()) {", "-            if (Project.getJavaVersion().startsWith(\"1.1\")) {", "+            if (assumeJava11()) {", "-            } else if (Project.getJavaVersion().startsWith(\"1.2\")) {", "+            } else if (assumeJava12()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62b32a6f80ee24f71c0d08be2f9031de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "a8d43912400fdf1627f23abcfb1c27879c5e8153", "commitAfterChange": "df14132289636640ade9cc52ecf8bfdc4ba52433", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd)", "diff": ["+        // we cannot be using Java 1.0 when forking, so we only have to", "+        // distinguish between Java 1.1, and Java 1.2 and higher, as Java 1.1", "+        // has its own parameter format", "+        boolean usingJava1_1 = Project.getJavaVersion().equals(Project.JAVA_1_1);", "+        String memoryParameterPrefix = usingJava1_1 ? \"-J-\" : \"-J-X\";", "+        if (memoryInitialSize != null) {", "+            cmd.createArgument().setValue(memoryParameterPrefix+\"ms\"+memoryInitialSize);", "+        }", "+", "+        if (memoryMaximumSize != null) {", "+            cmd.createArgument().setValue(memoryParameterPrefix+\"mx\"+memoryMaximumSize);", "+        }", "+", "-        ", "+", "-        ", "+"]}]}