{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e48cd77d21886cba5dce4ee00c5908a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b1d233e70386ba0dd59ae53318aa543", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/ClassConstants.java", "commitBeforeChange": "a172bceca6b32c0fca99f651053e0805bc50c5c3", "commitAfterChange": "ce2a2bc4bcd641a5feb7e435783a4473e4d0b659", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final int read() throws IOException", "signatureAfterChange": "     public final int read() throws IOException", "diff": ["-                final StringBuffer sb = new StringBuffer();", "-                final ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "-                final ClassParser parser = new ClassParser(bis, \"\");", "-                final JavaClass javaClass = parser.parse();", "-                final Field[] fields = javaClass.getFields();", "-                for (int i = 0; i < fields.length; i++) {", "-                    final Field field = fields[i];", "-                    if (field != null) {", "-                        final ConstantValue cv = field.getConstantValue();", "-                        if (cv != null) {", "-                            String cvs = cv.toString();", "-                            //Remove start and end quotes if field is a String", "-                            if (cvs.startsWith(\"\\\"\") && cvs.endsWith(\"\\\"\")) {", "-                                cvs = cvs.substring(1, cvs.length() - 1);", "-                            }", "-                            sb.append(field.getName());", "-                            sb.append('=');", "-                            sb.append(cvs);", "-                            sb.append(LS);", "-                        }", "-                    }", "-                }", "-", "+                final StringBuffer sb = JavaClassHelper.getConstants(bytes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef525a90c745662d6536df2fce96b174", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/ClassConstants.java", "commitBeforeChange": "741e2cbbd7529bd6fd62a8885e4fe2ba91a55ee7", "commitAfterChange": "4f2c7ee53989389d3c8d85f259b811ed962a46f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final int read() throws IOException", "signatureAfterChange": "     public final int read() throws IOException", "diff": ["-            String clazz = readFully();", "+            final String clazz = readFully();", "-                byte[] bytes = clazz.getBytes();", "-                StringBuffer sb = new StringBuffer();", "-                ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "-                ClassParser parser = new ClassParser(bis, \"\");", "-                JavaClass javaClass = parser.parse();", "-                Field[] fields = javaClass.getFields();", "+                final byte[] bytes = clazz.getBytes();", "+                final StringBuffer sb = new StringBuffer();", "+                final ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "+                final ClassParser parser = new ClassParser(bis, \"\");", "+                final JavaClass javaClass = parser.parse();", "+                final Field[] fields = javaClass.getFields();", "-                    Field field = fields[i];", "+                    final Field field = fields[i];", "-                        ConstantValue cv = field.getConstantValue();", "+                        final ConstantValue cv = field.getConstantValue();"]}]}