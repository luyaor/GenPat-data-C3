{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57816772e4a98bc3cc152375bc6b3ac3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b4e26045ae308ac310e2850da7865a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReaderTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testTestFailedError() throws Exception", "signatureAfterChange": "      public void testTestFailedError() throws Exception", "diff": ["-        writer.notifyTestFailed(TestRunListener.STATUS_ERROR, \"xxxxxx\", \"1\\n2\\n3\\n4\\n5\");", "-        reader.process( new ByteArrayInputStream(out.toByteArray()) );", "-        TestRunRecorder.TestFailedInfo info = (TestRunRecorder.TestFailedInfo)recorder.testFailed.elementAt(0);", "-        assertEquals(\"xxxxxx\", info.testname);", "-        assertEquals(TestRunListener.STATUS_ERROR, info.status);", "-        assertEquals(\"1\\n2\\n3\\n4\\n5\", info.trace);", "+        Exception e = new Exception(\"error\");", "+        e.fillInStackTrace();", "+        TestRunEvent evt = new TestRunEvent(new Integer(99), TestRunEvent.TEST_ERROR, \"xxxx\", e);", "+        dispatcher.fireTestError( evt );", "+        assertEquals(evt, recorder.testError.elementAt(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5246e151476336e7221b3c4e6fe4765", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReaderTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testTestFailedFailure() throws Exception", "signatureAfterChange": "      public void testTestFailedFailure() throws Exception", "diff": ["-        writer.notifyTestFailed(TestRunListener.STATUS_FAILURE, \"xxxxxx\", \"1\\n2\\n3\\n4\\n5\");", "-        reader.process( new ByteArrayInputStream(out.toByteArray()) );", "-        TestRunRecorder.TestFailedInfo info = (TestRunRecorder.TestFailedInfo)recorder.testFailed.elementAt(0);", "-        assertEquals(\"xxxxxx\", info.testname);", "-        assertEquals(TestRunListener.STATUS_FAILURE, info.status);", "-        assertEquals(\"1\\n2\\n3\\n4\\n5\", info.trace);", "+        Exception e = new Exception(\"error\");", "+        e.fillInStackTrace();", "+        TestRunEvent evt = new TestRunEvent(new Integer(99), TestRunEvent.TEST_FAILURE, \"xxxx\", e);", "+        dispatcher.fireTestFailure( evt );", "+        assertEquals(evt, recorder.testFailed.elementAt(0));"]}]}