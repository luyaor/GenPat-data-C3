{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddd9e1d8eccd55e487d5314ed3dd094b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "896b4a8fd1de235f8467d7e0d0aea2e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e713682ea69123ef5ca4935776b817a2b81645cf", "commitAfterChange": "695ce2ed1c7ffb7ce113fcdc05d12cd70abad525", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void removeBuildListener(BuildListener listener)", "signatureAfterChange": "     public void removeBuildListener(BuildListener listener)", "diff": ["-            Vector newListeners = getBuildListeners();", "-            newListeners.removeElement(listener);", "-            listeners = newListeners;", "+            for (int i = 0; i < listeners.length; i++) {", "+                if (listeners[i] == listener) {", "+                    BuildListener[] newListeners = new BuildListener[listeners.length - 1];", "+                    System.arraycopy(listeners, 0, newListeners, 0, i);", "+                    System.arraycopy(listeners, i + 1, newListeners, i, listeners.length - i - 1);", "+                    listeners = newListeners;", "+                    break;", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47669716ac95cb1b70107bd60a8c420", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e713682ea69123ef5ca4935776b817a2b81645cf", "commitAfterChange": "695ce2ed1c7ffb7ce113fcdc05d12cd70abad525", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void addBuildListener(BuildListener listener)", "signatureAfterChange": "     public void addBuildListener(BuildListener listener)", "diff": ["-            if (listeners.contains(listener)) {", "-                return;", "+            for (int i = 0; i < listeners.length; i++) {", "+                if (listeners[i] == listener) {", "+                    return;", "+                }", "-            Vector newListeners = getBuildListeners();", "-            newListeners.addElement(listener);", "+            BuildListener[] newListeners = new BuildListener[listeners.length + 1];", "+            System.arraycopy(listeners, 0, newListeners, 0, listeners.length);", "+            newListeners[listeners.length] = listener;"]}]}