{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48a919999e41a1bdc144f609ed5d17e4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d77aba9c250e02327f759c2b6e7bd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     protected Resource[][] grabNonFileSetResources(ResourceCollection[] rcs)", "signatureAfterChange": "     protected Resource[][] grabNonFileSetResources(ResourceCollection[] rcs)", "diff": ["-            ArrayList dirs = new ArrayList();", "-            ArrayList files = new ArrayList();", "+            ArrayList<Resource> dirs = new ArrayList<Resource>();", "+            ArrayList<Resource> files = new ArrayList<Resource>();", "-            Collections.sort(dirs, new Comparator() {", "-                    public int compare(Object o1, Object o2) {", "-                        Resource r1 = (Resource) o1;", "-                        Resource r2 = (Resource) o2;", "+            Collections.sort(dirs, new Comparator<Resource>() {", "+                    public int compare(Resource r1, Resource r2) {", "-            ArrayList rs = new ArrayList(dirs);", "+            ArrayList<Resource> rs = new ArrayList<Resource>(dirs);", "-            result[i] = (Resource[]) rs.toArray(new Resource[rs.size()]);", "+            result[i] = rs.toArray(new Resource[rs.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eaa54bff19a20031b6777d01cc07196", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "e24b8aa6a0ca6c3984c88e6b71b3335315fb20b1", "commitAfterChange": "4b52f604ad91f25d0c83d387e8d37eaa1f4d46ef", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "     protected Resource[][] grabNonFileSetResources(ResourceCollection[] rcs)", "signatureAfterChange": "     protected Resource[][] grabNonFileSetResources(ResourceCollection[] rcs)", "diff": ["-            ArrayList rs = new ArrayList();", "-            int lastDir = 0;", "+            ArrayList dirs = new ArrayList();", "+            ArrayList files = new ArrayList();", "-                        rs.add(lastDir++, r);", "+                        dirs.add(r);", "-                        rs.add(r);", "+                        files.add(r);", "+            // make sure directories are in alpha-order - this also", "+            // ensures parents come before their children", "+            Collections.sort(dirs, new Comparator() {", "+                    public int compare(Object o1, Object o2) {", "+                        Resource r1 = (Resource) o1;", "+                        Resource r2 = (Resource) o2;", "+                        return r1.getName().compareTo(r2.getName());", "+                    }", "+                });", "+            ArrayList rs = new ArrayList(dirs);", "+            rs.addAll(files);"]}]}