{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0c765c902cf73af7e42a0005b0d069c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "580e306d2286e452dc535a6cdbcf5b6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "0f3a4ae2e2f52ddb7ea22dc8da6fd1b9e4ccbb20", "commitAfterChange": "ac27a40d3fd155a39880ed7bc9b1dfa044000e7f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          MyCollection()", "signatureAfterChange": "          MyCollection()", "diff": ["-            for (Iterator rci = rc.iterator(); rci.hasNext();) {", "+            for (Iterator rci = getNested().iterator(); rci.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b63cf3e979c5e98a940eac8f929e661", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "0f3a4ae2e2f52ddb7ea22dc8da6fd1b9e4ccbb20", "commitAfterChange": "ac27a40d3fd155a39880ed7bc9b1dfa044000e7f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean isFilesystemOnly()", "signatureAfterChange": "     public boolean isFilesystemOnly()", "diff": ["-        for (Iterator i = rc.iterator(); i.hasNext();) {", "+        for (Iterator i = getNested().iterator(); i.hasNext();) {", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4dbda786190bd5ccde37c9ab43f2bc3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "0f3a4ae2e2f52ddb7ea22dc8da6fd1b9e4ccbb20", "commitAfterChange": "ac27a40d3fd155a39880ed7bc9b1dfa044000e7f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["-     */", "-    protected void dieOnCircularReference(Stack stk, Project p)", "-        throws BuildException {", "-        if (isChecked()) {", "-            return;", "-        }", "-        if (isReference()) {", "-            super.dieOnCircularReference(stk, p);", "-        } else {", "-            for (Iterator i = rc.iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    invokeCircularReferenceCheck((DataType) o, stk, p);", "-                }", "-            }", "-            setChecked(true);", "-        }", "-    }", "+     */", "+    protected void dieOnCircularReference(Stack stk, Project p)", "+        throws BuildException {", "+        if (isChecked()) {", "+            return;", "+        }", "+        if (isReference()) {", "+            super.dieOnCircularReference(stk, p);", "+        } else {", "+            for (Iterator i = getNested().iterator(); i.hasNext();) {", "+                Object o = i.next();", "+                if (o instanceof DataType) {", "+                    invokeCircularReferenceCheck((DataType) o, stk, p);", "+                }", "+            }", "+            setChecked(true);", "+        }", "+    }"]}]}