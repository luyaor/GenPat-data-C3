{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f85ef6647d60d2193dd0521e6b805ea", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143204ddf0634777bae15a1af032242f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/Project.java", "commitBeforeChange": "5168496109edbff91558a4d654082a36a1f74a69", "commitAfterChange": "1dcdf4c05f0685b9cac061c9ea9d7f5b6822cde3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void flattenDependency(List flattenedList, String fullTargetName)          throws ConfigException", "signatureAfterChange": "     private void flattenDependency(List flattenedList, String fullTargetName)          throws ConfigException", "diff": ["-        String fullProjectName = getFullProjectName(fullTargetName);", "-        Target target = getRefTarget(fullTargetName);", "-        if (target == null) {", "-            throw new ConfigException(\"Target \" + fullTargetName", "-                 + \" does not exist\");", "-        }", "-        for (Iterator i = target.getDependencies(); i.hasNext(); ) {", "-            String localDependencyName = (String)i.next();", "-            String fullDependencyName", "-                 = fullProjectName == null ? localDependencyName", "-                 : fullProjectName + REF_DELIMITER + localDependencyName;", "-            flattenDependency(flattenedList, fullDependencyName);", "-            flattenedList.add(fullDependencyName);", "+        try {", "+            String fullProjectName = getFullProjectName(fullTargetName);", "+            Target target = getRefTarget(fullTargetName);", "+            if (target == null) {", "+                throw new ConfigException(\"Target \" + fullTargetName", "+                     + \" does not exist\");", "+            }", "+            for (Iterator i = target.getDependencies(); i.hasNext(); ) {", "+                String localDependencyName = (String)i.next();", "+                String fullDependencyName", "+                     = fullProjectName == null ? localDependencyName", "+                     : fullProjectName + REF_DELIMITER + localDependencyName;", "+                flattenDependency(flattenedList, fullDependencyName);", "+                flattenedList.add(fullDependencyName);", "+            }", "+        } catch (ModelException e) {", "+            throw new ConfigException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897b6708425acef6d75702b27c338f88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "1e01d1142cc73b63bdf8748408d87bf6d30a032a", "commitAfterChange": "4bcc44728551a0152f09f0fdf23553029e7bbde1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "    void sendQuit() throws IOException", "signatureAfterChange": "      void sendQuit() throws IOException", "diff": ["-  void sendQuit() throws IOException {", "-    int[] ok = { 221 };", "-    send(\"QUIT\", ok);", "-  }", "+    void sendQuit() throws IOException {", "+        int[] ok = { 221 };", "+        try {", "+            send(\"QUIT\", ok);", "+        } catch (IOException e) {", "+            throw new ErrorInQuitException(e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a718b53b5762a78d87db6e3b9240980", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["-        output.write(sb.toString());", "-        output.flush();", "+        try {", "+            output.write(sb.toString());", "+            output.flush();", "+        } catch (IOException ex) {", "+            throw new BuildException(ex);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8b656c1371df9eb895c4997c6aafd1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite)", "diff": ["+            } catch (IOException ex) {", "+                throw new BuildException(ex);"]}]}