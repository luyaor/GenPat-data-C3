{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f88665d73145b70692a7a5c60068c8c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970a18ecdaffd4d931a14987fefe4792", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private String macroSubs(String s, Map macroMapping)", "signatureAfterChange": "          private String macroSubs(String s, Map macroMapping)", "diff": ["+    ", "-        StringBuffer macroName = new StringBuffer();", "+        StringBuffer macroName = null;", "+        int state = STATE_NORMAL;", "-            if (s.charAt(i) == '$') {", "-                inMacro = true;", "-            } else {", "-                if (inMacro) {", "-                    if (s.charAt(i) == '{') {", "-                        continue;", "-                    } else if (s.charAt(i) == '}') {", "+            char ch = s.charAt(i);", "+            switch (state) {", "+                case STATE_NORMAL:", "+                    if (ch == '$') {", "+                        state = 1;", "+                    } else {", "+                        ret.append(ch);", "+                    }                    ", "+                    break;", "+                case STATE_EXPECT_BRACKET:", "+                    if (ch == '{') {", "+                        state = 2;", "+                        macroName = new StringBuffer();", "+                    } else {", "+                        state = 0;", "+                        ret.append('$');", "+                        ret.append(ch);", "+                    }", "+                    break;", "+                case STATE_EXPECT_NAME:", "+                    if (ch == '}') {", "+                        state = 0;", "-                        macroName = new StringBuffer();", "-                        inMacro = false;", "+                        macroName = null;", "-                } else {", "-                    ret.append(s.charAt(i));", "-                }", "+        }", "+        switch (state) {", "+            case STATE_NORMAL:", "+                break;", "+            case STATE_EXPECT_BRACKET:", "+                ret.append('$');", "+                break;", "+            case STATE_EXPECT_NAME:", "+                ret.append(\"${\");", "+                ret.append(macroName.toString());", "+                break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e8f6079fa3ea09bdafd875333a35f52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "2a426f599fb6e67d13f24abff7457fd9f9b87fd9", "commitAfterChange": "8dd4e0ba76f304d2a1bfde2ddd614d750d83560f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          private String macroSubs(String s, Map macroMapping)", "signatureAfterChange": "      private String macroSubs(String s, Map macroMapping)", "diff": ["-    ", "+", "+        if (s == null) {", "+            return null;", "+        }", "-                    if (ch == '$') {", "-                        state = 1;", "+                    if (ch == '@') {", "+                        state = STATE_EXPECT_BRACKET;", "-                    }                    ", "+                    }", "-                        state = 2;", "+                        state = STATE_EXPECT_NAME;", "+                    } else if (ch == '@') {", "+                        state = STATE_EXPECT_EXCAPE;", "-                        state = 0;", "-                        ret.append('$');", "+                        state = STATE_NORMAL;", "+                        ret.append('@');", "-                        state = 0;", "+                        state = STATE_NORMAL;", "-                            ret.append(\"${\" + name + \"}\");", "+                            ret.append(\"@{\" + name + \"}\");", "-                        macroName.append(s.charAt(i));", "+                        macroName.append(ch);", "+                    break;", "+                case STATE_EXPECT_EXCAPE:", "+                    state = STATE_NORMAL;", "+                    if (ch == '{') {", "+                        ret.append(\"@\");", "+                    } else {", "+                        ret.append(\"@@\");", "+                    }", "+                    ret.append(ch);", "+                    break;", "+                default:", "+                    break;", "-                ret.append('$');", "+                ret.append('@');", "-                ret.append(\"${\");", "+                ret.append(\"@{\");", "+                break;", "+            case STATE_EXPECT_EXCAPE:", "+                ret.append(\"@@\");", "+                break;", "+            default:"]}]}