{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1ca90f33e6f38c5886f6307c4bb6d5b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e7c2d60a780eda1248b4a1b79057180", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void loadResources( final ZipFile zipFile, final String location, final URL url )         throws DeploymentException", "signatureAfterChange": "      protected void loadResources( final ZipFile zipFile, final String location, final URL url )         throws DeploymentException", "diff": ["+            }", "+", "+            final Iterator datatypes = taskdefs.getChildren( \"datatype\" );", "+            while( datatypes.hasNext() )", "+            {", "+                final Configuration datatype = (Configuration)datatypes.next();", "+                handleDataType( datatype, url );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa41886f12cee73945a5183e53eb50f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "cbe9978c14108b0ce3235e6c695b21efd9c2937e", "commitAfterChange": "a738000acab66d8d7ce5cf563f6dd96d9c7024fb", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["+            for (Iterator i = additionalPatterns.iterator(); i.hasNext(); ) {", "+                PatternSet ps = (PatternSet) i.next();", "+                pushAndInvokeCircularReferenceCheck(ps, stk, p);", "+            }"]}]}