{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08329c1d86ee98ac7792a161a2bac9fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef5b6c784ae9a09bb2d68e5d476b367", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "6540a295cd786c80c28c14f6c544aa1d64ab3778", "commitAfterChange": "5cdfabc038e26f67080037ea0c7ad6ab284d821c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value)         throws BuildException", "signatureAfterChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value) throws BuildException", "diff": ["-                             String value)", "-        throws BuildException {", "-        AttributeSetter as = (AttributeSetter) attributeSetters.get(attributeName);", "+                             String value) throws BuildException {", "+        AttributeSetter as", "+            = (AttributeSetter) attributeSetters.get(attributeName);", "-            String msg = getElementName(p, element) +", "-            //String msg = \"Class \" + element.getClass().getName() +", "-                \" doesn't support the \\\"\" + attributeName + \"\\\" attribute.\";", "-            throw new BuildException(msg);", "+            if (element instanceof DynamicConfigurator) {", "+                DynamicConfigurator dc = (DynamicConfigurator) element;", "+                dc.setDynamicAttribute(attributeName, value);", "+                return;", "+            }", "+            else {", "+                String msg = getElementName(p, element) +", "+                    \" doesn't support the \\\"\" + attributeName +", "+                    \"\\\" attribute.\";", "+                throw new BuildException(msg);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29559761cfa4e5fe40e36bd1c357afc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "7aaf095c51dcb4b22dd8a7aec2a63676a73ad8e0", "commitAfterChange": "6d54725ac9d2fc606d5b4d8ec6574b648399f68d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value)         throws BuildException", "signatureAfterChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value) throws BuildException", "diff": ["-                             String value)", "-        throws BuildException {", "-        AttributeSetter as ", "-            = (AttributeSetter) attributeSetters.get(attributeName);", "+                             String value) throws BuildException {", "+        AttributeSetter as = (AttributeSetter) attributeSetters.get(attributeName);", "-            String msg = p.getElementName(element) +", "-            //String msg = \"Class \" + element.getClass().getName() +", "-                \" doesn't support the \\\"\" + attributeName + \"\\\" attribute.\";", "-            throw new BuildException(msg);", "+            if (element instanceof DynamicConfigurator) {", "+                DynamicConfigurator dc = (DynamicConfigurator) element;", "+                dc.setDynamicAttribute(attributeName, value);", "+                return;", "+            }", "+            else {", "+                String msg = getElementName(p, element) +", "+                    \" doesn't support the \\\"\" + attributeName + \"\\\" attribute.\";", "+                throw new BuildException(msg);", "+            }"]}]}