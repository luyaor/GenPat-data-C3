{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c28b953efd8f3cad51e8e31e8b2ed23", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544007a404ba7237ed2ed86cfe8d4b30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void setupObject( final Object object,                               final ServiceManager serviceManager,                               final Parameters parameters )         throws Exception", "signatureAfterChange": "     private void setupObject( final Object object,                               final ServiceManager serviceManager,                               final Parameters parameters )         throws Exception", "diff": ["+        if(object instanceof Contextualizable )", "+        {", "+            ( (Contextualizable)object ).contextualize( m_context );", "+", "+        }", "-        if( object instanceof Parameterizable )", "+        if( parameters != null && object instanceof Parameterizable )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41a5b5a2170d0d2771716ccc7e38190", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/service/InstantiatingServiceManager.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void setupObject( final Object object )         throws Exception", "signatureAfterChange": "     private void setupObject( final Object object )         throws Exception", "diff": ["+        if( m_context != null && object instanceof Contextualizable )", "+        {", "+            ( (Contextualizable)object ).contextualize( m_context );", "+        }", "+", "-        if( object instanceof Parameterizable )", "+        if( m_parameters != null && object instanceof Parameterizable )"]}]}