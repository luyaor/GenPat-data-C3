{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0274bcc60f23a93a3a63a50fb4cd58f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0edc689e2b3b76215423fe42a06605ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/converter/AbstractConverter.java", "commitBeforeChange": "bdc61a32291b2c159193085f23e6f16d28b910e5", "commitAfterChange": "1125ea2c35794791145083b7f5ab5656698500cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( final Class destination, final Object original, Context context )         throws ConverterException", "signatureAfterChange": "     public Object convert( final Class destination, final Object original, Context context )         throws ConverterException", "diff": ["-            throw new IllegalArgumentException( \"Destination type \" + destination.getName() +", "-                                                \" is not equal to \" + m_destination );", "+            final String message =", "+                REZ.getString( \"bad-destination.error\", destination.getName(), m_destination );", "+            throw new IllegalArgumentException( message );", "-            throw new IllegalArgumentException( \"Object '\" + original + \"' is not an \" +", "-                                                \"instance of \" + m_source.getName() );", "+            final String message =", "+                REZ.getString( \"bad-instance.error\", original, m_source.getName() );", "+            throw new IllegalArgumentException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23bd1dae39726ce5f0f74095a3fed90e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void buildProjectRef( final DefaultProject project,                                   final Configuration element,                                   final HashMap projects )         throws Exception", "signatureAfterChange": "      private void buildProjectRef( final DefaultProject project,                                   final Configuration element,                                   final HashMap projects )         throws Exception", "diff": ["-            throw new Exception( \"Malformed projectref without a name attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.projectref-no-name.error\", element.getLocation() );", "+            throw new Exception( message );", "-            throw new Exception( \"Projectref with an invalid name attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.projectref-bad-name.error\", element.getLocation() );", "+            throw new Exception( message );", "-            throw new Exception( \"Malformed projectref without a location attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.projectref-no-location.error\", element.getLocation() );", "+            throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f02f2b7c21d881fc43da7f4021873e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws Exception", "signatureAfterChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws Exception", "diff": ["-            throw new Exception( \"Malformed import without a library attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.import-no-library.error\", element.getLocation() );", "+            throw new Exception( message );", "-                throw new Exception( \"Malformed import at \" + element.getLocation() +", "-                                     \". If name or type attribute is specified, both \" +", "-                                     \"attributes must be specified.\" );", "+                final String message = ", "+                    REZ.getString( \"ant.import-malformed.error\", element.getLocation() );", "+                throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98cac23a31e7e6beebaca0dbbce1dec0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ATIProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private String[] parseAttribute( final String data )         throws SAXException", "signatureAfterChange": "      private String[] parseAttribute( final String data )         throws SAXException", "diff": ["-            throw new SAXException( \"Expecting an attribute but received '\" + ", "-                                    data + \"'\" );", "+            final String message = REZ.getString( \"ati.attribue-expected.error\", data );", "+            throw new SAXException( message );", "-        if( '\\\"' != data.charAt( index + 1 ) || ", "+        if( '\\\"' != data.charAt( index + 1 ) ||", "-            throw new SAXException( \"Expecting the value of attribute \" + ", "-                                    data.substring( 0, index ) +", "-                                    \" to be enclosed in quotes\" );", "+            final String message =", "+                REZ.getString( \"ati.attribue-unquoted.error\", data.substring( 0, index ) );", "+            throw new SAXException( message );", "-        ", "+"]}]}