{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e86a02e83d2c2e67826e6b4b66efb45c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d2241c844c5f02bb6b80130e72bd4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadFile.java", "commitBeforeChange": "a89ffe281a56c3c51e376d8927fe300423b43bc7", "commitAfterChange": "f9c551b16e64afb9541e8e5507b9ac1a8c2eb436", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected String stripLineBreaks(String source)", "signatureAfterChange": "     public final void addFilterChain(FilterChain filter)", "diff": ["-    protected String stripLineBreaks(String source) {", "-        //Linebreaks. What do to on funny IBM mainframes with odd line endings?", "-        String linebreaks=\"\\r\\n\";", "-        int len=source.length();", "-", "-        StringBuffer dest=new StringBuffer(len);", "-        for(int i=0;i<len;++i) {", "-            char ch=source.charAt(i);", "-            if(linebreaks.indexOf(ch)==-1) {", "-                dest.append(ch);", "-            }", "-        }", "-        return new String(dest);", "-", "+    public final void addFilterChain(FilterChain filter) {", "+        filterChains.addElement(filter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd04f8b317622cea6d19f622c192427d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "af7fb0127af235ba48a1e9ada6f7fc45847e53fa", "commitAfterChange": "a794b2b204995a03c2e3c117ff2c4749710e6840", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setTablength(int tlength) throws BuildException", "signatureAfterChange": "     public void setTablength(int tlength) throws BuildException", "diff": ["-        if (tlength < 2 || (tlength & (tlength-1)) != 0) {", "-            throw new BuildException(\"tablength must be a positive power of 2\",", "-                                     location);", "+        if (tlength < 2 || tlength >80) {", "+            throw new BuildException(\"tablength must be between 2 and 80\",", "+\t\t\t\t     location);", "+        StringBuffer sp = new StringBuffer();", "+\tfor (int i = 0; i < tablength; i++) {", "+\t    sp.append(' ');", "+\t}", "+        spaces = sp.toString();"]}]}