{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31a0b23f863aa1e08df36bf9e122f772", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c1175696c3f8df944817b167812cae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "b1cc0a4edb49ab8e1155a6a9394a980a0196f454", "commitAfterChange": "7b84ae34e5dda8ff45d94e73e2537b369d1dedf1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir)", "signatureAfterChange": "     private int[] removeOrphanFiles(Set nonOrphans, File toDir,                                     Set preservedDirectories)", "diff": ["-    private int[] removeOrphanFiles(Set nonOrphans, File toDir) {", "+    private int[] removeOrphanFiles(Set nonOrphans, File toDir,", "+                                    Set preservedDirectories) {", "-            log(\"Removing orphan directory: \" + f, Project.MSG_DEBUG);", "-            f.delete();", "-            ++removedCount[0];", "+                log(\"Removing orphan directory: \" + f, Project.MSG_DEBUG);", "+                f.delete();", "+                ++removedCount[0];", "+", "+        if (syncTarget != null) {", "+            if (syncTarget.getPreserveEmptyDirs() != null", "+                || myCopy.getIncludeEmptyDirs()) {", "+                String[] preservedDirs = ds.getExcludedDirectories();", "+                for (int i = preservedDirs.length - 1; i >= 0; --i) {", "+                    preservedDirectories.add(new File(toDir, preservedDirs[i]));", "+                }", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c12e1916a4427430aac12d24467c6d1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public AntClassLoader(Project project, Path classpath)", "signatureAfterChange": "     public AntClassLoader(Project project, Path classpath)", "diff": ["+        parent = AntClassLoader.class.getClassLoader();", "-        this.project.addBuildListener(this);", "-        this.classpath = classpath.concatSystemClasspath(\"ignore\");", "+        project.addBuildListener(this);", "+        if (classpath != null) {", "+            Path actualClasspath = classpath.concatSystemClasspath(\"ignore\");", "+            String[] pathElements = actualClasspath.list();", "+            for (int i = 0; i < pathElements.length; ++i) {", "+                try {", "+                    addPathElement((String)pathElements[i]);", "+                }", "+                catch (BuildException e) {", "+                    // ignore path elements which are invalid relative to the project", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da2da4bc9c723468901ce9d9172d5781", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/ActionManager.java", "commitBeforeChange": "113069f80d96fff735116abb27b70951799106fc", "commitAfterChange": "9996345251656eb38c5326fa7e5f394bc5f43882", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public JPopupMenu createPopup(String[] actionIDs)", "signatureAfterChange": "     public JPopupMenu createPopup(String[] actionIDs, String defaultID)", "diff": ["-    public JPopupMenu createPopup(String[] actionIDs) {", "+    public JPopupMenu createPopup(String[] actionIDs, String defaultID) {", "+       ", "-            if(action != null) {", "+            ", "+            // If the ID is not found, use the default.", "+            if (action == null && defaultID != null) {", "+                action = (AntAction) _actions.get(defaultID);", "+                AbstractButton button = retval.add(action);", "+                ", "+                // Set the button text to the action ID.", "+                button.setText(actionIDs[i]);", "+                addNiceStuff(button, action);", "+            } else {", "+                if(action.isPopupPreceededBySeparator() &&", "+                    retval.getComponentCount() > 0) {", "+                    retval.addSeparator();", "+                }", "+                "]}]}