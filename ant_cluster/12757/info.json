{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b9b245d7ca5748698aaa18bc6073907", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079b59b07add4503537ba9d89b88575b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "c9b993c41d442ba16b68f0a6e54c770044ff7a01", "commitAfterChange": "33c937a716a5c4684fa45fa7da0800e3a85d068b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            LogStreamHandler handler = new LogStreamHandler( this, Project.MSG_INFO, Project.MSG_WARN );", "-            Execute exec = new Execute( handler );", "+            final Execute exe = new Execute();", "+            exe.setOutput( new LogOutputStream( this, Project.MSG_INFO ) );", "+            exe.setError( new LogOutputStream( this, Project.MSG_WARN ) );", "-            exec.setCommandline( cmdl.getCommandline() );", "+            exe.setCommandline( cmdl.getCommandline() );", "-            int exitValue = exec.execute();", "+            int exitValue = exe.execute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "470132242fae2a7c61f2fa0ce274acf4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "c9b993c41d442ba16b68f0a6e54c770044ff7a01", "commitAfterChange": "33c937a716a5c4684fa45fa7da0800e3a85d068b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            LogStreamHandler handler = new LogStreamHandler( this, Project.MSG_INFO, Project.MSG_WARN );", "-            Execute exec = new Execute( handler );", "+            final Execute exe = new Execute();", "+            exe.setOutput( new LogOutputStream( this, Project.MSG_INFO ) );", "+            exe.setError( new LogOutputStream( this, Project.MSG_WARN ) );", "-            exec.setCommandline( cmdl.getCommandline() );", "+            exe.setCommandline( cmdl.getCommandline() );", "-            int exitValue = exec.execute();", "+            int exitValue = exe.execute();"]}]}