{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1b05d0d0e09269babd8cc3c07586880", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65dafa8deb6a607f35cb20ea7fa3b265", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )         throws TaskException", "signatureAfterChange": "     private void executeTarget( final String name,                                 final Target target,                                 final ExecutionFrame frame )         throws TaskException", "diff": ["+    private void executeTarget( final String name,", "-     */", "-    private void executeTargetWork( final String name,", "-                                    final Target target,", "-                                    final TaskContext context )", "+                                final ExecutionFrame frame )", "-            if( false == condition.evaluate( context ) )", "+            if( false == condition.evaluate( frame.getContext() ) )", "+        //frame.getContext().setProperty( Project.TARGET, target );", "+", "-            executeTask( tasks[ i ], context );", "+            executeTask( tasks[ i ], frame );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8fb8e46964f8c0479d12e5cac4aa0e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void executeTask( final Configuration task, final TaskContext context )         throws TaskException", "signatureAfterChange": "     private void executeTask( final Configuration task, final ExecutionFrame frame )         throws TaskException", "diff": ["-    private void executeTask( final Configuration task, final TaskContext context )", "+    private void executeTask( final Configuration task, final ExecutionFrame frame )", "-        //Set up context for task...", "-        //is Only necessary if we are multi-threaded", "-        //final TaskletContext targetContext = new DefaultTaskletContext( context );", "-", "-        context.setProperty( TaskContext.NAME, name );", "+        frame.getContext().setProperty( TaskContext.NAME, name );", "-        m_executor.execute( task, context );", "+        m_executor.execute( task, frame );"]}]}