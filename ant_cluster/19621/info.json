{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c635da815e4c64db73a580ab4512f689", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25d7710cba934c582cfd1f775ef0618", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4HandlerAdapter.java", "commitBeforeChange": "9a177657a630bfda7961b10ddcf76b8c199fdfda", "commitAfterChange": "ec0ed5336208c963b32eb8c3858532828a4e2997", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public void start() throws BuildException", "signatureAfterChange": "      public void start() throws BuildException", "diff": ["-", "-        try {", "-            //First write any output to P4", "-            if (p4input != null && p4input.length() > 0 && os != null) {", "-                os.write(p4input.getBytes());", "-                os.flush();", "-                os.close();", "-            }", "-", "-            //Now read any input and process", "-            Thread output = new Thread(new Reader(is));", "-            Thread error = new Thread(new Reader(es));", "-            output.start();", "-            error.start();", "-            output.join();", "-            error.join();", "-        } catch (Exception e) {", "-            throw new BuildException(e);", "+        if (p4input != null && p4input.length() > 0) {", "+            myHandler = new PumpStreamHandler(new P4OutputStream(this),new P4OutputStream(this), new ByteArrayInputStream(p4input.getBytes()));", "+        else {", "+            myHandler = new PumpStreamHandler(new P4OutputStream(this), new P4OutputStream(this));", "+        }", "+        myHandler.setProcessInputStream(os);", "+        myHandler.setProcessErrorStream(es);", "+        myHandler.setProcessOutputStream(is);", "+        myHandler.start();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e57d07f31b96753c1233b9d32b9961fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void addInputHandler(Project project) throws BuildException", "signatureAfterChange": "     private void addInputHandler(Project project) throws BuildException", "diff": ["-            try {", "-                handler = (InputHandler)", "-                    (Class.forName(inputHandlerClassname).newInstance());", "-                if (project != null) {", "-                    project.setProjectReference(handler);", "-                }", "-            } catch (ClassCastException e) {", "-                String msg = \"The specified input handler class \"", "-                    + inputHandlerClassname", "-                    + \" does not implement the InputHandler interface\";", "-                throw new BuildException(msg);", "-            } catch (Exception e) {", "-                String msg = \"Unable to instantiate specified input handler \"", "-                    + \"class \" + inputHandlerClassname + \" : \"", "-                    + e.getClass().getName();", "-                throw new BuildException(msg);", "+            handler = (InputHandler) ClasspathUtils.newInstance(", "+                    inputHandlerClassname, Main.class.getClassLoader(),", "+                    InputHandler.class);", "+            if (project != null) {", "+                project.setProjectReference(handler);"]}]}