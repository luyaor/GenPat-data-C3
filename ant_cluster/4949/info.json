{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbfe803e78f2777bbe8b6688dc3f2f70", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755ff5d4d20e37f355b3d6110476cc26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private void executeCommand(Session session, String cmd, StringBuffer sb)         throws BuildException", "signatureAfterChange": "      private void executeCommand(final Session session, final String cmd, final StringBuffer sb)         throws BuildException", "diff": ["-    private void executeCommand(Session session, String cmd, StringBuffer sb)", "+    private void executeCommand(final Session session, final String cmd, final StringBuffer sb)", "-        ByteArrayOutputStream out = new ByteArrayOutputStream();", "-        ByteArrayOutputStream errout = new ByteArrayOutputStream();", "-        OutputStream teeErr = suppressSystemErr ? errout : new TeeOutputStream(errout, KeepAliveOutputStream.wrapSystemErr());", "-        OutputStream tee = suppressSystemOut ? out : new TeeOutputStream(out, KeepAliveOutputStream.wrapSystemOut());", "+        final ByteArrayOutputStream out = new ByteArrayOutputStream();", "+        final ByteArrayOutputStream errout = new ByteArrayOutputStream();", "+        final OutputStream teeErr = suppressSystemErr ? errout : new TeeOutputStream(errout, KeepAliveOutputStream.wrapSystemErr());", "+        final OutputStream tee = suppressSystemOut ? out : new TeeOutputStream(out, KeepAliveOutputStream.wrapSystemOut());", "-        InputStream istream = null ;", "+        InputStream istream = null;", "-                istream = new FileInputStream(inputFile) ;", "-            } catch (IOException e) {", "+                istream = new FileInputStream(inputFile);", "+            } catch (final IOException e) {", "-            String inputData = getProject().getProperty(inputProperty) ;", "+            final String inputData = getProject().getProperty(inputProperty);", "-                istream = new ByteArrayInputStream(inputData.getBytes()) ;", "+                istream = new ByteArrayInputStream(inputData.getBytes());", "-                    public void run() {", "+                    @Override", "+\t\t\t\t\tpublic void run() {", "-                            } catch (Exception e) {", "+                            } catch (final Exception e) {", "-                int ec = channel.getExitStatus();", "+                final int ec = channel.getExitStatus();", "-                    String msg = \"Remote command failed with exit status \" + ec;", "+                    final String msg = \"Remote command failed with exit status \" + ec;", "-        } catch (BuildException e) {", "+        } catch (final BuildException e) {", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {", "-        } catch (Exception e) {", "+        } catch (final Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b0b5ac38327bc8c8d439e33ad866a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/selectors/SizeSelectorTest.java", "commitBeforeChange": "0e46158a11af3c375fda7fd10a7e1baca429b2c7", "commitAfterChange": "f94d46e400edfa11907e688e07921807412b86a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "     public void testSelectionBehaviour()", "diff": ["-            assertEquals(\"TTFFTFFFFFFT\", results);", "+            assertEquals(\"TFFFTFFFFFFT\", results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32c9318fe24d32b48cfaf0e11d98b34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void         readCentralDirectoryEntry(Map<ZipEntry, NameAndComment> noUTF8Flag)         throws IOException", "signatureAfterChange": "     private void         readCentralDirectoryEntry(final Map<ZipEntry, NameAndComment> noUTF8Flag)         throws IOException", "diff": ["-        readCentralDirectoryEntry(Map<ZipEntry, NameAndComment> noUTF8Flag)", "+        readCentralDirectoryEntry(final Map<ZipEntry, NameAndComment> noUTF8Flag)", "-        OffsetEntry offset = new OffsetEntry();", "-        Entry ze = new Entry(offset);", "+        final OffsetEntry offset = new OffsetEntry();", "+        final Entry ze = new Entry(offset);", "-        int versionMadeBy = ZipShort.getValue(CFH_BUF, off);", "+        final int versionMadeBy = ZipShort.getValue(CFH_BUF, off);", "-        long time = ZipUtil.dosToJavaTime(ZipLong.getValue(CFH_BUF, off));", "+        final long time = ZipUtil.dosToJavaTime(ZipLong.getValue(CFH_BUF, off));", "-        int fileNameLen = ZipShort.getValue(CFH_BUF, off);", "+        final int fileNameLen = ZipShort.getValue(CFH_BUF, off);", "-        int extraLen = ZipShort.getValue(CFH_BUF, off);", "+        final int extraLen = ZipShort.getValue(CFH_BUF, off);", "-        int commentLen = ZipShort.getValue(CFH_BUF, off);", "+        final int commentLen = ZipShort.getValue(CFH_BUF, off);", "-        int diskStart = ZipShort.getValue(CFH_BUF, off);", "+        final int diskStart = ZipShort.getValue(CFH_BUF, off);", "-        byte[] fileName = new byte[fileNameLen];", "+        final byte[] fileName = new byte[fileNameLen];", "-        byte[] cdExtraData = new byte[extraLen];", "+        final byte[] cdExtraData = new byte[extraLen];", "-        byte[] comment = new byte[commentLen];", "+        final byte[] comment = new byte[commentLen];"]}]}