{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "082a4762f4acdd2d0615999c065fa304", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008a5d3f97881086b8bef8d4e56b7fd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "5f35e5e952c7732af5b98e484a87b8a90d8f2fa4", "commitAfterChange": "f09afe103c9bd8540483fbdafab92df1cdf049e2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setProperty( final String name, final Object value, final ScopeEnum scope )         throws TaskException", "signatureAfterChange": "     public void setProperty( final String name, final Object value, final ScopeEnum scope )         throws TaskException", "diff": ["-                throw new TaskException( \"Can't set a property with parent scope when context \" +", "-                                         \" has no parent\" );", "+                final String message = REZ.getString( \"no-parent.error\" );", "+                throw new TaskException( message );", "-            throw new IllegalStateException( \"Unknown property scope! (\" + scope + \")\" );", "+            final String message = REZ.getString( \"bad-scope.error\", scope );", "+            throw new IllegalStateException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d8f3c296ea6ab7db40774f817b01fe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ATIProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private String getStylesheet( final String data, final URL baseSource )         throws SAXException", "signatureAfterChange": "      private String getStylesheet( final String data, final URL baseSource )         throws SAXException", "diff": ["-            throw new SAXException( STYLE_EXCEPTION );", "+            final String message = REZ.getString( \"ati.style.error\" );", "+            throw new SAXException( message );", "-            throw new SAXException( \"Error locating stylesheet '\" + stylesheet[ 1 ] + ", "-                                    \"' due to \" + e );", "+            final String message =", "+                REZ.getString( \"ati.loading-style.error\", stylesheet[ 1 ], e );", "+            throw new SAXException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "268211dc41e999e12647fe2e12195f8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/Facility.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-        if( 1 == children.length ) ", "+        if( 1 == children.length )", "-                throw new ConfigurationException( \"Failed to create aspect handler of type '\" + ", "-                                                  children[ 0 ].getName() + \"'\", e );", "+                final String message = ", "+                    REZ.getString( \"facility.no-create.error\", children[ 0 ].getName() );", "+                throw new ConfigurationException( message, e );", "-            ", "+", "-            throw new ConfigurationException( \"Expected one sub-element to \" + ", "-                                              \"configure facility\" );", "+            final String message = REZ.getString( \"facility.multi-element.error\" );", "+            throw new ConfigurationException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e41fe8cb85f51b6bfecb1fdbec43ef3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/ant1compat/org/apache/tools/ant/Ant1CompatTaskAdapter.java", "commitBeforeChange": "18234144e7ee3f2a087c9427f7b04a34d4db82c3", "commitAfterChange": "83061b17b0a39cc1bbf9642469a6ec58bc56dbef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void configure( Configuration configuration ) throws ConfigurationException", "signatureAfterChange": "     public void configure( Configuration configuration )         throws ConfigurationException", "diff": ["-    public void configure( Configuration configuration ) throws ConfigurationException", "+     */", "+    public void configure( Configuration configuration )", "+        throws ConfigurationException", "-            throw new ConfigurationException( \"Invalid task name for TaskAdapter: \" + taskName );", "+            String message =", "+                REZ.getString( \"taskadapter.invalid-task-name.error\", taskName );", "+            throw new ConfigurationException( message );", "-            throw new ConfigurationException( \"Could not instantiate adapted task: \" + taskClass.getName() );", "+            String message =", "+                REZ.getString( \"taskadapter.no-create.error\", taskClass.getName() );", "+            throw new ConfigurationException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d0ee7f3e567c339c74dd2ddb7bd5df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private File findTypeLib( final String libraryName )         throws TaskException", "signatureAfterChange": "      private File findTypeLib( final String libraryName )         throws TaskException", "diff": ["-        //users to specify search path or automagically ", "-        //add entries to lib path (like user specific or ", "+        //users to specify search path or automagically", "+        //add entries to lib path (like user specific or", "-        ", "+", "-                throw new TaskException( \"Unable to read library at \" + library );", "+                final String message = REZ.getString( \"no-read.error\", library );", "+                throw new TaskException( message );", "-        throw new TaskException( \"Unable to locate Type Library \" + libraryName );", "+        final String message = REZ.getString( \"no-library.error\", libraryName );", "+        throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ac30c0c9f1ef738f1112da21f6e92e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ATIProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void handleParameters( final String data, final URL baseSource )         throws SAXException", "signatureAfterChange": "      private void handleParameters( final String data, final URL baseSource )         throws SAXException", "diff": ["-            throw new SAXException( PARAMS_EXCEPTION );", "+            final String message = REZ.getString( \"ati.params.error\" );", "+            throw new SAXException( message );", "-            throw new SAXException( \"Error loading parameters: \" + e );", "+            final String message = REZ.getString( \"ati.loading-params.error\", params[ 1 ], e );", "+            throw new SAXException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76f02f2b7c21d881fc43da7f4021873e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws Exception", "signatureAfterChange": "      private void buildTypeLib( final DefaultProject project,                                final Configuration element )         throws Exception", "diff": ["-            throw new Exception( \"Malformed import without a library attribute at \" +", "-                                 element.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.import-no-library.error\", element.getLocation() );", "+            throw new Exception( message );", "-                throw new Exception( \"Malformed import at \" + element.getLocation() +", "-                                     \". If name or type attribute is specified, both \" +", "-                                     \"attributes must be specified.\" );", "+                final String message = ", "+                    REZ.getString( \"ant.import-malformed.error\", element.getLocation() );", "+                throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98cac23a31e7e6beebaca0dbbce1dec0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ATIProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private String[] parseAttribute( final String data )         throws SAXException", "signatureAfterChange": "      private String[] parseAttribute( final String data )         throws SAXException", "diff": ["-            throw new SAXException( \"Expecting an attribute but received '\" + ", "-                                    data + \"'\" );", "+            final String message = REZ.getString( \"ati.attribue-expected.error\", data );", "+            throw new SAXException( message );", "-        if( '\\\"' != data.charAt( index + 1 ) || ", "+        if( '\\\"' != data.charAt( index + 1 ) ||", "-            throw new SAXException( \"Expecting the value of attribute \" + ", "-                                    data.substring( 0, index ) +", "-                                    \" to be enclosed in quotes\" );", "+            final String message =", "+                REZ.getString( \"ati.attribue-unquoted.error\", data.substring( 0, index ) );", "+            throw new SAXException( message );", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a8ac4df2d1243c00f307974c82499f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractContainerTask.java", "commitBeforeChange": "b30c144309f56e380bbc34897b8ab7ff29c40f17", "commitAfterChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final Object resolve( final String value )         throws ConfigurationException", "signatureAfterChange": "     protected final Object resolve( final String value )         throws ConfigurationException", "diff": ["-            final Object object = ", "+            final Object object =", "-                throw new ConfigurationException( \"Value (\" + value +", "-                                                  \") resolved to null\" );", "+                final String message = REZ.getString( \"container.null-value.error\", value );", "+                throw new ConfigurationException( message );", "-            throw new ConfigurationException( \"Error resolving value: \" + value, pe );", "+            final String message = REZ.getString( \"container.bad-resolve.error\", value );", "+            throw new ConfigurationException( message, pe );"]}]}