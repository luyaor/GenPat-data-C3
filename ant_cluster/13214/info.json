{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3be9b14ddc1ab10d2e79b929722837a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd1d17d4c38108fa48d9811dbb5933d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Condition.java", "commitBeforeChange": "d0042ba43710fe5113e2ec75b291aa6faf86673a", "commitAfterChange": "c9e46c0f286041715632656f0b4d09d016be2aa2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean evaluate( final Context context )         throws ContextException", "signatureAfterChange": "      public boolean evaluate( final TaskContext context )         throws ContextException", "diff": ["-    public boolean evaluate( final Context context )", "+    public boolean evaluate( final TaskContext context )", "-            final Object resolved =", "-                PropertyUtil.resolveProperty( getCondition(), context, false );", "-", "+            final Object resolved = context.resolveValue( getCondition() );", "-                //TODO: Do more than just check for presence????????????", "-", "-                //true as object present", "-                result = true;", "+                final String string = object.toString();", "+                if( null == string || string.equals( \"false\" ) )", "+                {", "+                    result = false;", "+                }", "+                else", "+                {", "+                    result = true;", "+                }", "-        catch( final ContextException ce )", "+        catch( final TaskException te )", "-        catch( final PropertyException pe )", "-        {", "-            final String message = REZ.getString( \"condition.no-resolve.error\", m_condition );", "-            throw new ContextException( message, pe );", "-        }", "-", "+        /*", "+                catch( final PropertyException pe )", "+                {", "+                    final String message = REZ.getString( \"condition.no-resolve.error\", m_condition );", "+                    throw new ContextException( message, pe );", "+                }", "+        */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439f40745a262b07172ec85c0331b8a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Condition.java", "commitBeforeChange": "2941067384b5af577d0d3f98a6503af84f5692b7", "commitAfterChange": "07c3b5de55282058c5a6353f9231803f37b769e8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean evaluate( final TaskContext context )         throws TaskException", "signatureAfterChange": "      public boolean evaluate( final TaskContext context )         throws TaskException", "diff": ["-        try", "+        final Object resolved = context.resolveValue( getCondition() );", "+        if( null != resolved )", "-            final Object resolved = context.resolveValue( getCondition() );", "-            if( null != resolved )", "+            final Object object = context.getProperty( resolved.toString() );", "+            if( object != null && !object.toString().equals( \"false\" ) )", "-                final Object object = context.get( resolved );", "-                final String string = object.toString();", "-                if( null == string || string.equals( \"false\" ) )", "-                {", "-                    result = false;", "-                }", "-                else", "-                {", "-                    result = true;", "-                }", "+                result = true;", "-        catch( final ContextException ce )", "-        {", "-            // Unknown property", "-            result = false;", "-        }", "-        /*", "-                catch( final PropertyException pe )", "-                {", "-                    final String message = REZ.getString( \"condition.no-resolve.error\", m_condition );", "-                    throw new ContextException( message, pe );", "-                }", "-        */", "+"]}]}