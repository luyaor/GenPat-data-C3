{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf7ee4b0c5e0bd7f185217bcd5f30052", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "461c3483f0d5db29f6e7c493ba339005", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1a22123f5c7a236164cadc975673d2b3bcc4033f", "commitAfterChange": "362376d624ba86f6a8f54b47806ac4b40f74df9f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void resolveLocalFileHeaderData(Map<ZipEntry, NameAndComment>                                             entriesWithoutUTF8Flag)         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(Map<ZipEntry, NameAndComment>                                             entriesWithoutUTF8Flag)         throws IOException", "diff": ["-        // changing the name of a ZipEntry is going to change", "-        // the hashcode - see COMPRESS-164", "-        // Map needs to be reconstructed in order to keep central", "-        // directory order", "-        Map<ZipEntry, OffsetEntry> origMap =", "-            new LinkedHashMap<ZipEntry, OffsetEntry>(entries);", "-        entries.clear();", "-        for (Map.Entry<ZipEntry, OffsetEntry> ent : origMap.entrySet()) {", "-            ZipEntry ze = ent.getKey();", "-            OffsetEntry offsetEntry = ent.getValue();", "+        for (Iterator<ZipEntry> it = entries.iterator(); it.hasNext(); ) {", "+            // entries is filled in populateFromCentralDirectory and", "+            // never modified", "+            Entry ze = (Entry) it.next();", "+            OffsetEntry offsetEntry = ze.getOffsetEntry();", "-                String orig = ze.getName();", "-                if (!orig.equals(ze.getName())) {", "-                    nameMap.remove(orig);", "-                    nameMap.put(ze.getName(), ze);", "-                }", "-            entries.put(ze, offsetEntry);", "+", "+            String name = ze.getName();", "+            LinkedList<ZipEntry> entriesOfThatName = nameMap.get(name);", "+            if (entriesOfThatName == null) {", "+                entriesOfThatName = new LinkedList<ZipEntry>();", "+                nameMap.put(name, entriesOfThatName);", "+            }", "+            entriesOfThatName.addLast(ze);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4325fc0d5aead9a73824d0c234f81da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void resolveLocalFileHeaderData(Map<ZipEntry, NameAndComment>                                             entriesWithoutUTF8Flag)         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(final Map<ZipEntry, NameAndComment>                                             entriesWithoutUTF8Flag)         throws IOException", "diff": ["-    private void resolveLocalFileHeaderData(Map<ZipEntry, NameAndComment>", "+    private void resolveLocalFileHeaderData(final Map<ZipEntry, NameAndComment>", "-        for (Iterator<ZipEntry> it = entries.iterator(); it.hasNext();) {", "+        for (final Iterator<ZipEntry> it = entries.iterator(); it.hasNext();) {", "-            Entry ze = (Entry) it.next();", "-            OffsetEntry offsetEntry = ze.getOffsetEntry();", "-            long offset = offsetEntry.headerOffset;", "+            final Entry ze = (Entry) it.next();", "+            final OffsetEntry offsetEntry = ze.getOffsetEntry();", "+            final long offset = offsetEntry.headerOffset;", "-            int fileNameLen = ZipShort.getValue(SHORT_BUF);", "+            final int fileNameLen = ZipShort.getValue(SHORT_BUF);", "-            int extraFieldLen = ZipShort.getValue(SHORT_BUF);", "+            final int extraFieldLen = ZipShort.getValue(SHORT_BUF);", "-                int skipped = archive.skipBytes(lenToSkip);", "+                final int skipped = archive.skipBytes(lenToSkip);", "-            byte[] localExtraData = new byte[extraFieldLen];", "+            final byte[] localExtraData = new byte[extraFieldLen];", "-                NameAndComment nc = entriesWithoutUTF8Flag.get(ze);", "+                final NameAndComment nc = entriesWithoutUTF8Flag.get(ze);", "-            String name = ze.getName();", "+            final String name = ze.getName();"]}]}