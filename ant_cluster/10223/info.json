{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e08eedae213c536d721de8d0cfdf571", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22027cf6702fdd41217e7c3f2ea06b65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/ant1compat/org/apache/tools/ant/Ant1Factory.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object createTaskInstance(Class taskClass)          throws InstantiationException, IllegalAccessException", "signatureAfterChange": "     public Object createTaskInstance(Class taskClass)          throws InstantiationException, IllegalAccessException", "diff": ["-        Object o = taskClass.newInstance();", "-        if (o instanceof ProjectComponent) {", "-            ((ProjectComponent)o).setProject(project);", "+        Object instance = taskClass.newInstance();", "+        if (instance instanceof ProjectComponent) {", "+            ((ProjectComponent)instance).setProject(project);", "-        // XXX task.setTaskType(taskType);", "-", "-        // set default value, can be changed by the user", "-        // XXX task.setTaskName(taskType);", "-", "-        return o;", "+        return instance;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c86480cd294a7f90735366868cd712", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "1fd75097c96033d43e78ad1d21bcba3bfc6e3c2e", "commitAfterChange": "26a9faff104e1786d28d7855210de58f0b818184", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,         String elementName) throws BuildException", "diff": ["-    public Object createElement(Project project, Object parent, ", "+    public Object createElement(Project project, Object parent,", "-                Project.setProjectOnObject(project, nestedElement);", "+                if ( project != null ) {", "+                    project.setProjectReference( nestedElement );", "+                }", "-            Project.setProjectOnObject(project, nestedElement);", "+            if ( project != null ) {", "+                project.setProjectReference( nestedElement );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf73e13b7c1613003d5619272a8ed63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "f3e9ec622f89b35e9ccfb3fcfa30ab010381bc0f", "commitAfterChange": "c4fc48f69dc1a3abe436e42c103e6b53eb92d918", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "diff": ["-                if (nestedElement instanceof ProjectComponent) {", "-                    ((ProjectComponent) nestedElement).setProject(project);", "-                }", "+                Project.setProjectOnObject(project, nestedElement);", "-            if (nestedElement instanceof ProjectComponent) {", "-                ((ProjectComponent) nestedElement).setProject(project);", "-            }", "+            Project.setProjectOnObject(project, nestedElement);"]}]}