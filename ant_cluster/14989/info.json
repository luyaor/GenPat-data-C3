{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07d210e691b0662b5142a86de979ca87", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab5bb86c7f0df0b5a3321194271b828f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "776c80d8ec4791029cc3601b7a6d0a1b0a45bc24", "commitAfterChange": "866b754aadc0d8f482a569e0fd9e136dd7df824c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["-    public void startTestSuite(JUnitTest suite) throws BuildException {", "-    }", "+    public void startTestSuite(JUnitTest suite) {", "+        if (output == null) {", "+            return; // Quick return - no output do nothing.", "+        }", "+        output.write(sb.toString());", "+        output.flush();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c061cb165126085b147baa372ae9d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "776c80d8ec4791029cc3601b7a6d0a1b0a45bc24", "commitAfterChange": "866b754aadc0d8f482a569e0fd9e136dd7df824c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite) throws BuildException", "diff": ["-    public void startTestSuite(JUnitTest suite) {", "-    }", "+    public void startTestSuite(JUnitTest suite) throws BuildException {", "+        if (out == null) {", "+            return; // Quick return - no output do nothing.", "+        }", "+        try {", "+            out.write(sb.toString().getBytes());", "+            out.flush();", "+        } catch (IOException ex) {", "+            throw new BuildException(\"Unable to write output\", ex);", "+        }", "+    }"]}]}