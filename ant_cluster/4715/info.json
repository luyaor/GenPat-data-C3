{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75077486bc1b05238c08406a1f540836", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b30c871381165498c41422194e7519", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "c05fecf453869e6962a7f3ba8ec302b628a997ba", "commitAfterChange": "7ac20d949c1479a45698ca673b1de7321e9977f2", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private void makeMaps()", "signatureAfterChange": "      private void makeMaps()", "diff": ["-        int i;", "-        nInUse = 0;", "-        for( i = 0; i < 256; i++ )", "-            if( inUse[ i ] )", "+        m_nInUse = 0;", "+        for( int i = 0; i < 256; i++ )", "+        {", "+            if( m_inUse[ i ] )", "-                seqToUnseq[ nInUse ] = (char)i;", "-                unseqToSeq[ i ] = (char)nInUse;", "-                nInUse++;", "+                m_seqToUnseq[ m_nInUse ] = (char)i;", "+                m_unseqToSeq[ i ] = (char)m_nInUse;", "+                m_nInUse++;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9843394a42748ea57cc7eb303874f9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "c05fecf453869e6962a7f3ba8ec302b628a997ba", "commitAfterChange": "7ac20d949c1479a45698ca673b1de7321e9977f2", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private void makeMaps()", "signatureAfterChange": "      private void makeMaps()", "diff": ["-        int i;", "-        nInUse = 0;", "-        for( i = 0; i < 256; i++ )", "-            if( inUse[ i ] )", "+        m_nInUse = 0;", "+        for( int i = 0; i < 256; i++ )", "+        {", "+            if( m_inUse[ i ] )", "-                seqToUnseq[ nInUse ] = (char)i;", "-                unseqToSeq[ i ] = (char)nInUse;", "-                nInUse++;", "+                m_seqToUnseq[ m_nInUse ] = (char)i;", "+                m_unseqToSeq[ i ] = (char)m_nInUse;", "+                m_nInUse++;", "+        }"]}]}