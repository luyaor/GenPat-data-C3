{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e039d8e77437079920782315390bd6af", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ad662bbc27f4da22ed31a9cd658b94", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractContainerTask.java", "commitBeforeChange": "80712682289dee8200289b46365bdb5066d1d2f7", "commitAfterChange": "697cacf736c15c1cc0af4d9acb2309f56069037e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final Object resolve( final String value )         throws ConfigurationException", "signatureAfterChange": "     protected final Object resolve( final String value )         throws ConfigurationException", "diff": ["-            final Object object = getContext().resolveValue( value );", "+            final Object object = ", "+                PropertyUtil.resolveProperty( value, getContext(), false );", "-        catch( final TaskException te )", "+        catch( final PropertyException pe )", "-            throw new ConfigurationException( \"Error resolving value: \" + value, te );", "+            throw new ConfigurationException( \"Error resolving value: \" + value, pe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be42821887abde0b69a12dc06ae6feb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object resolveValue( final String value )         throws TaskException", "signatureAfterChange": "     public Object resolveValue( final String value )         throws TaskException", "diff": ["-            final TaskContextAdapter context = new TaskContextAdapter( this );", "-", "-                PropertyUtil.resolveProperty( value, context, false );", "+                PropertyUtil.resolveProperty( value, this, false );", "-        catch( final PropertyException pe )", "+        catch( final TaskException te )", "-            throw new TaskException( message, pe );", "+            throw new TaskException( message, te );"]}]}