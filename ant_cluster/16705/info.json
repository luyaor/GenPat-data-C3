{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf441546a0eadaee97a247fe0f2c669b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ae1279586e88f9bd613589ab76c117", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "00d14d398fdee8aed882a7b77c4c4767339c11fd", "commitAfterChange": "82d37706ea0eee342ceee50d1982bbbbf38c6056", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public static Manifest getDefaultManifest() throws BuildException", "signatureAfterChange": "     public static Manifest getDefaultManifest() throws BuildException", "diff": ["-                return new Manifest(new InputStreamReader(in, \"ASCII\"));", "+                Manifest defaultManifest ", "+                    = new Manifest(new InputStreamReader(in, \"ASCII\"));", "+                Attribute createdBy = new Attribute(\"Created-By\", ", "+                    System.getProperty(\"java.vm.version\") + \" (\"", "+                    + System.getProperty(\"java.vm.vendor\") + \")\" );", "+                defaultManifest.getMainSection().storeAttribute(createdBy);", "+                return defaultManifest;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d85a6094ce3be040fa8beb93c821b6ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/launcher/Main.java", "commitBeforeChange": "cb412d5547ace06f83204cca0de52bb594e818b5", "commitAfterChange": "cc0bf7e707542ff4c331cb0988c585459e9a2a6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public final static void main( final String[] args )         throws Exception", "signatureAfterChange": "     public final static void main( final String[] args )         throws Exception", "diff": ["-            final URL[] urls = buildURLList( libDir );", "+            final URL[] libUrls = buildURLList( libDir );", "+            final URLClassLoader libClassLoader = new URLClassLoader( libUrls );", "-            final URLClassLoader classLoader = new URLClassLoader( urls );", "+            final File containerLibDir = new File( installDirectory, \"bin\" + File.separator + \"lib\" );", "+            final URL[] containerLibUrls = buildURLList( containerLibDir );", "+            final URLClassLoader classLoader = ", "+                new URLClassLoader( containerLibUrls, libClassLoader );"]}]}