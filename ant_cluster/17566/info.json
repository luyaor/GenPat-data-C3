{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5fcdad469267ecbe92d767b2caee4a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092118b36feb625cdf3a47accf38b60f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/TargetMonitor.java", "commitBeforeChange": "ffa6e24ba429847c04da9162971b6203151a7ce1", "commitAfterChange": "1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public boolean eventPosted(EventObject event)", "signatureAfterChange": "         public boolean eventPosted(EventObject event)", "diff": ["+            ACSElement[] selected = e.getSelectedElements();", "-            ProjectProxy p =  getContext().getProject();", "-            if(p != null) {", "-                ElementTreeSelectionModel selections = ", "-                    p.getTreeSelectionModel();", "-                ACSTargetElement[] targets = selections.getSelectedTargets();", "-                if(targets != null && targets.length > 0) {", "-                    StringBuffer buf = new StringBuffer();", "-                    for(int i = 0; i < targets.length; i++) {", "-                        buf.append(targets[i].getName());", "-                        if(i < targets.length - 1) {", "+            if(selected != null && selected.length > 0) {", "+                StringBuffer buf = new StringBuffer();", "+", "+                for(int i = 0; i < selected.length; i++) {", "+                    if(selected[i] instanceof ACSTargetElement) {", "+                        if(buf.length() > 0) {", "+                        buf.append(((ACSTargetElement)selected[i]).getName());", "+                }", "+", "+                if(buf.length() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9d7cc3a7d977da4978397abfbb88816", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "12f1e22e1fcc43be641c3f557ce282e97bfbc06a", "commitAfterChange": "84bfc9dabe08de4ecafaa47de7b125fc4ce8724e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "diff": ["-                // not using getParentFile method to stay 1.1 compatibility", "-                String parentPath = destFile.getParent();", "-                if (parentPath != null) {", "-                    File parent = new File(parentPath);", "-                    if (!parent.exists()) {", "-                        parent.mkdirs();", "-                    }", "+                File parent = destFile.getParentFile();", "+                if (parent != null && !parent.exists()) {", "+                    parent.mkdirs();", "-                if (destFile.exists() && destFile.isFile()) {", "-                    if (!destFile.delete()) {", "+                if (destFile.exists()) {", "+                    if (sourceFile.isDirectory()) {", "+                     throw new BuildException(", "+                        new StringBuffer(\"Cannot replace \").append(", "+                        ((destFile.isFile()) ? \"file \" : \"directory \")).append(", "+                        destFile).append(\" with directory \").append(", "+                        sourceFile).toString());", "+                    } else if (destFile.isFile() && !destFile.delete()) {"]}]}