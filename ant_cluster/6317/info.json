{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5864e30aad55a327acf44726d7b5745", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b26593a0db70bb7d3e6fa9bdb3717d47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void loadLib(String libLocation, boolean importAll,                         boolean autoImport)          throws ExecutionException", "signatureAfterChange": "     public void loadLib(URL libLocation, boolean importAll)          throws AntException", "diff": ["-    public void loadLib(String libLocation, boolean importAll,", "-                        boolean autoImport)", "-         throws ExecutionException {", "-        try {", "-            Map librarySpecs = new HashMap();", "-            libManager.loadLibs(librarySpecs, libLocation);", "-            Map newLibraries = libManager.configLibraries(frame.getInitConfig(),", "-                librarySpecs, antLibraries, libPathsMap);", "-", "-            antLibraries.putAll(newLibraries);", "-            Iterator i = antLibraries.keySet().iterator();", "-            while (i.hasNext()) {", "-                String libraryId = (String) i.next();", "-                boolean doAuto = autoImport", "-                     && libraryId.startsWith(Constants.ANT_LIB_PREFIX);", "-                if (importAll || doAuto) {", "-                    importLibrary(libraryId);", "-                }", "+    public void loadLib(URL libLocation, boolean importAll)", "+         throws AntException {", "+        Map newLibraries = libManager.loadLibs(libLocation);", "+        Iterator i = newLibraries.keySet().iterator();", "+        while (i.hasNext()) {", "+            String libraryId = (String) i.next();", "+            if (importAll) {", "+                importLibrary(libraryId);", "-        } catch (MalformedURLException e) {", "-            throw new ExecutionException(\"Unable to load libraries from \"", "-                 + libLocation, e);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d0359a219cc37e07bd30d1c9d7099d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ExecutionFrame(Map antLibraries) throws ConfigException", "signatureAfterChange": "     protected ExecutionFrame(Map standardLibs, InitConfig initConfig,                              AntConfig config) throws ConfigException", "diff": ["-    public ExecutionFrame(Map antLibraries) throws ConfigException {", "-        this.antLibraries = antLibraries;", "+    protected ExecutionFrame(Map standardLibs, InitConfig initConfig,", "+                             AntConfig config) throws ConfigException {", "+        this.standardLibs = standardLibs;", "+        this.config = config;", "+        this.initConfig = initConfig;", "-        // go through the libraries and import all standard ant libraries", "-        for (Iterator i = antLibraries.keySet().iterator(); i.hasNext(); ) {", "-            String libraryId = (String)i.next();", "-            if (libraryId.startsWith(ANT_LIB_PREFIX)) {", "-                // standard library - import whole library", "-                importLibrary(libraryId);", "-            }", "-        }", "-    }", "+        configureServices();", "+        ", "+        antLibraries = new HashMap(standardLibs);", "+        try {", "+            // go through the libraries and import all standard ant libraries", "+            for (Iterator i = antLibraries.keySet().iterator(); i.hasNext(); ) {", "+                String libraryId = (String)i.next();", "+                if (libraryId.startsWith(ANT_LIB_PREFIX)) {", "+                    // standard library - import whole library", "+                    importLibrary(libraryId);", "+        } catch (ExecutionException e) {", "+            throw new ConfigException(e);"]}]}