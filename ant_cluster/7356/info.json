{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f07006c8460af88b9a6a56361f83989c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c9f10513c835531a96e8183d421951", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Archives.java", "commitBeforeChange": "450b3ce6a4b325635e38b544890eee9985e087b6", "commitAfterChange": "020546329950689f337c188a4a80e7a40e8b6fb9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["-            stk.push(zips);", "-            invokeCircularReferenceCheck(zips, stk, p);", "-            stk.pop();", "-            stk.push(tars);", "-            invokeCircularReferenceCheck(tars, stk, p);", "-            stk.pop();", "+            checkForCircularReference(zips, stk, p);", "+            checkForCircularReference(tars, stk, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7da831ec93dbd0f7ba6813c6af3237b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/selectors/Compare.java", "commitBeforeChange": "6eb8c15ed0134b406f9db1dd6822137b30794039", "commitAfterChange": "aa373b9f5e7548bf96a51588c9e67b8de6c05404", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["-                stk.push(control);", "-                DataType.invokeCircularReferenceCheck(control, stk, p);", "-                stk.pop();", "+                DataType.pushAndInvokeCircularReferenceCheck(control, stk, p);", "-            stk.push(comp);", "-            DataType.invokeCircularReferenceCheck(comp, stk, p);", "-            stk.pop();", "+            DataType.pushAndInvokeCircularReferenceCheck(comp, stk, p);"]}]}