{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68a44609523147a56634687e5f838a39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a6b414a45fda1244cbbd777e75be54a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReaderTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testTestEnded() throws Exception", "signatureAfterChange": "      public void testTestEnded() throws Exception", "diff": ["-        writer.notifyTestEnded(\"xxxxxx\");", "-        reader.process( new ByteArrayInputStream(out.toByteArray()) );", "-        assertEquals(\"xxxxxx\", recorder.testEnded.elementAt(0));", "+        TestRunEvent evt = new TestRunEvent(new Integer(99), TestRunEvent.TEST_ENDED, \"xxxx\");", "+        dispatcher.fireTestEnded( evt );", "+        assertEquals(evt, recorder.testEnded.elementAt(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9ff6d880312c399114fc2efd2e4457", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReaderTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testTestStarted() throws Exception", "signatureAfterChange": "      public void testTestStarted() throws Exception", "diff": ["-        writer.notifyTestStarted(\"xxxxxx\");", "-        reader.process( new ByteArrayInputStream(out.toByteArray()) );", "-        assertEquals(\"xxxxxx\", recorder.testStarted.elementAt(0));", "+        TestRunEvent evt = new TestRunEvent(new Integer(99), TestRunEvent.TEST_STARTED, \"xxxx\");", "+        dispatcher.fireTestStarted( evt );", "+        assertEquals(evt, recorder.testStarted.elementAt(0));"]}]}