{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ae448d35ec4e2a874d9fec8c50d730d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f38b5d2192a4d1222c03f4e7753938f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "6650efb105e0cdd4941ffc2c98f2aa8ee6e1dfea", "commitAfterChange": "e42bd46a51dd6347c0961e311bd3717c24d4ea8c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void initValidator()", "signatureAfterChange": "     private void initValidator()", "diff": ["-                throw new BuildException(INIT_FAILED_MSG + readerClassName", "+                throw new BuildException(INIT_FAILED_MSG ", "+                                         + reader.getClass().getName()", "-                boolean ok = setFeature(\"http://xml.org/sax/features/validation\", true, true);", "-                if (!ok) {", "-                    throw new BuildException(INIT_FAILED_MSG", "-                                             + readerClassName", "-                                             + \" doesn't provide validation\");", "-                }", "+                setFeature(\"http://xml.org/sax/features/validation\", true);", "-                setFeature(feature.getName(),", "-                           feature.getValue(),", "-                           true);", "+                setFeature(feature.getName(), feature.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d91b10d5f2a1ace41bbd119e6e30482", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "              public boolean isFilesystemOnly()", "diff": ["+    ", "+        public boolean isFilesystemOnly() {", "+            return true;", "+        }", "-     */", "-    protected void dieOnCircularReference(Stack stk, Project p)", "-        throws BuildException {", "-", "-        if (isChecked()) {", "-            return;", "-        }", "-", "-        Enumeration e = elements.elements();", "-        while (e.hasMoreElements()) {", "-            Object o = e.nextElement();", "-            if (o instanceof Reference) {", "-                o = ((Reference) o).getReferencedObject(p);", "-            }", "-", "-            if (o instanceof DataType) {", "-                if (stk.contains(o)) {", "-                    throw circularReference();", "-                } else {", "-                    stk.push(o);", "-                    ((DataType) o).dieOnCircularReference(stk, p);", "-                    stk.pop();", "-                }", "-            }", "-        }", "-        setChecked(true);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e131cab9a5ce7289f2dadf18e0f1b590", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "f18d3adfa8305e32fe9af31480247eec7e73e857", "commitAfterChange": "7da091a46f02f686fb6c2f960b2f6c261a7fbdf2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void readPatterns(File patternfile, Vector patternlist, Project p)         throws BuildException", "signatureAfterChange": "     private void readPatterns(File patternfile, Vector patternlist, Project p)             throws BuildException", "diff": ["-        throws BuildException {", "+            throws BuildException {", "-            patternReader =", "-                new BufferedReader(new FileReader(patternfile));", "+            patternReader = new BufferedReader(new FileReader(patternfile));", "-            String msg = \"An error occurred while reading from pattern file: \"", "-                + patternfile;", "-            throw new BuildException(msg, ioe);", "+            throw new BuildException(\"An error occurred while reading from pattern file: \"", "+                    + patternfile, ioe);", "-            if (null != patternReader) {", "-                try {", "-                    patternReader.close();", "-                } catch (IOException ioe) {", "-                    //Ignore exception", "-                }", "-            }", "+            FileUtils.close(patternReader);"]}]}