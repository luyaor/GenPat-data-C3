{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64816be2e7f937489bc89a6ce3a7b052", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478f0a704549e98ef58a0ba1935d8898", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "6f3185926cb4b1fa7f76c0541f2cba0eb5085c79", "commitAfterChange": "dc37a17ff84af8e9c7fec2aa93d7b2b989fb304c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(final Resource source, final Resource dest,                             final FilterSetCollection filters, final Vector filterChains,                             final boolean overwrite, final boolean preserveLastModified,                                     final boolean append,                                     final String inputEncoding, final String outputEncoding,                                     final Project project, final boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(final Resource source, final Resource dest,                             final FilterSetCollection filters, final Vector filterChains,                             final boolean overwrite, final boolean preserveLastModified,                                     final boolean append,                                     final String inputEncoding, final String outputEncoding,                                     final Project project, final boolean force)         throws IOException", "diff": ["-                    project.log(\"Attempt to copy \" + sourceFile", "-                                + \" to \" + destFile + \" using NIO Channels\"", "-                                + \" failed due to '\" + ex.getMessage()", "-                                + \"'.  Falling back to streams.\",", "-                                Project.MSG_WARN);", "+                    String msg = \"Attempt to copy \" + sourceFile", "+                        + \" to \" + destFile + \" using NIO Channels\"", "+                        + \" failed due to '\" + ex.getMessage()", "+                        + \"'.  Falling back to streams.\";", "+                    if (project != null) {", "+                        project.log(msg, Project.MSG_WARN);", "+                    } else {", "+                        System.err.println(msg);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bc0f71bc9643e8fcedc89b5c88ac42", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "55641903fb9a4b029554bed4e14b7544d0829f5a", "commitAfterChange": "608424c6506d921af836902200b6b14dc8272493", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "diff": ["-                included = true;", "-                if (incls != null) {", "-                    for (int w = 0; w < incls.length; w++) {", "-                        included = DirectoryScanner.match(incls[w], name);", "-                        if (included) {", "-                            break;", "-                        }", "+                if (incls == null || incls.length == 0) {", "+                    // no include pattern implicitly means includes=\"**\"", "+                    incls = new String[] {\"**\"};", "+                }", "+                    ", "+                for (int w = 0; w < incls.length; w++) {", "+                    included = DirectoryScanner.match(incls[w], name);", "+                    if (included) {", "+                        break;", "+                ", "+                if (!included) {", "+                    break;", "+                }", "+                ", "+"]}]}