{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10fd7004f4a7c02bf2449b8f383b51df", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4f8617d8e1b43667ee657fb56e5aa4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public String[] getVariables() throws BuildException", "signatureAfterChange": "         public String[] getVariables() throws BuildException", "diff": ["-            List definitions = new LinkedList();", "-            ListIterator list = definitions.listIterator();", "-            addDefinitionsToList(list);", "+            List<String> definitions = new LinkedList<String>();", "+            addDefinitionsToList(definitions.listIterator());", "-                return (String[]) definitions.toArray(new String[definitions.size()]);", "+                return definitions.toArray(new String[definitions.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e78a72ba66f7ba33700e8942d76165", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Task[] getTasks()", "signatureAfterChange": "     public Task[] getTasks()", "diff": ["-        List tasks = new ArrayList(children.size());", "-        Iterator it = children.iterator();", "-        while (it.hasNext()) {", "-            Object o = it.next();", "+        List<Task> tasks = new ArrayList<Task>(children.size());", "+        for (Object o : children) {", "-                tasks.add(o);", "+                tasks.add((Task) o);", "-        return (Task[]) tasks.toArray(new Task[tasks.size()]);", "+        return tasks.toArray(new Task[tasks.size()]);"]}]}