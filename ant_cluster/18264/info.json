{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6c9e06d89e15a2873a979edd66bdd05", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e1edfd9e4957b192cd900575b1897f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "commitAfterChange": "e16a4c7b1db880e29d37406177e983142302af57", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args) throws Exception", "diff": ["-    public static void main(String[] args) {", "+    public static void main(String[] args) throws Exception {", "-        main.start(DEFAULT_FRONTEND, args);", "+        int frontendIndex = -1;", "+        String frontend = DEFAULT_FRONTEND;", "+", "+        for (int i = 0; i < args.length; ++i) {", "+            if (args[i].equals(\"-frontend\")) {", "+                frontendIndex = i;", "+                break;", "+            }", "+        }", "+", "+        if (frontendIndex != -1) {", "+            try {", "+                frontend = args[frontendIndex + 1];", "+            } catch (IndexOutOfBoundsException e) {", "+                throw new InitException(\"You must specify a value for the \"", "+                     + \"-frontend argument\");", "+            }", "+", "+            String[] newArgs = new String[args.length - 2];", "+", "+            System.arraycopy(args, 0, newArgs, 0, frontendIndex);", "+            if (args.length > (frontendIndex + 2)) {", "+                System.arraycopy(args, frontendIndex + 2, newArgs,", "+                    frontendIndex, args.length - frontendIndex - 2);", "+            }", "+            args = newArgs;", "+        }", "+", "+        String defaultClass = frontend.equals(DEFAULT_FRONTEND)", "+             ? DEFAULT_COMMANDLINE_CLASS : null;", "+", "+        main.start(frontend, defaultClass, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293f7b362796379d47709276d70bd12f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["+        if (!followSymlinks) {", "+            Vector noLinks = new Vector();", "+            for (int i = 0; i < newfiles.length; i++) {", "+                try {", "+                    if (fileUtils.isSymbolicLink(dir, newfiles[i])) {", "+                        String name = vpath + newfiles[i];", "+                        File   file = new File(dir, newfiles[i]);", "+                        if (file.isDirectory()) {", "+                            dirsExcluded.addElement(name);", "+                        } else {", "+                            filesExcluded.addElement(name);", "+                        }", "+                    } else {", "+                        noLinks.addElement(newfiles[i]);", "+                    }", "+                } catch (IOException ioe) {", "+                    String msg = \"IOException caught while checking \"", "+                        + \"for links, couldn't get cannonical path!\";", "+                    // will be caught and redirected to Ant's logging system", "+                    System.err.println(msg);", "+                    noLinks.addElement(newfiles[i]);", "+                }", "+            }", "+            newfiles = new String[noLinks.size()];", "+            noLinks.copyInto(newfiles);", "+        }", "+"]}]}