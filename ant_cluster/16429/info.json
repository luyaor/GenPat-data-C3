{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "565096ec975d083b722dc46add059b5d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc84d3fe1d4dccdffeff3502e03b110", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/runtime/DefaultAntEngine.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupComponent( final Component component )         throws Exception", "signatureAfterChange": "     protected void setupComponent( final Component component )         throws Exception", "diff": ["-        if( component instanceof Composer )", "+        if( component instanceof Composable )", "-            ((Composer)component).compose( m_componentManager );", "+            ((Composable)component).compose( m_componentManager );", "-            ((Initializable)component).init();", "+            ((Initializable)component).initialize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0311a29715a35a87c238268cacedd3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void doCompose( final Tasklet tasklet, final Configuration task )         throws AntException", "signatureAfterChange": "          protected void doCompose( final Tasklet tasklet, final Configuration task )         throws AntException", "diff": ["-        if( tasklet instanceof Composer )", "+        if( tasklet instanceof Composable )", "-            try { ((Composer)tasklet).compose( m_componentManager ); }", "+            try { ((Composable)tasklet).compose( m_componentManager ); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd2b8f3a302970779e8ac570be3f9190", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void setupObject( final Object object,                               final Parameters parameters )         throws Exception", "signatureAfterChange": "     private void setupObject( final Object object,                               final ServiceManager serviceManager,                               final Parameters parameters )         throws Exception", "diff": ["+                              final ServiceManager serviceManager,", "-            ( (Serviceable)object ).service( m_serviceManager );", "+            ( (Serviceable)object ).service( serviceManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb1c2dc13fc38e3e8dcf39b401ea04f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void setupObject( final Object object,                               final Parameters parameters )         throws Exception", "signatureAfterChange": "     private void setupObject( final Object object,                               final Parameters parameters )         throws Exception", "diff": ["-        if( object instanceof Composable )", "+        if( object instanceof Serviceable )", "-            ( (Composable)object ).compose( m_componentManager );", "+            ( (Serviceable)object ).service( m_serviceManager );"]}]}