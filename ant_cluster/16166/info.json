{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38b521fc2e74ba1630cdd503a54f8723", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cc25eecae3855e209778b7c709d8c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b361fabe04c2d8e6dec41af36a728575d1399e90", "commitAfterChange": "bf283617dbb972d27c295814d9bdce53886c621d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void copyInheritedProperties(Project other)", "signatureAfterChange": "     public void copyInheritedProperties(Project other)", "diff": ["-        Enumeration e = inheritedProperties.keys();", "-        while (e.hasMoreElements()) {", "-            String arg = e.nextElement().toString();", "-            if (other.getUserProperty(arg) != null) {", "-                continue;", "+        //avoid concurrent modification:", "+        synchronized (inheritedProperties) {", "+            Enumeration e = inheritedProperties.keys();", "+            while (e.hasMoreElements()) {", "+                String arg = e.nextElement().toString();", "+                if (other.getUserProperty(arg) != null) {", "+                    continue;", "+                }", "+                Object value = inheritedProperties.get(arg);", "+                other.setInheritedProperty(arg, value.toString());", "-            Object value = inheritedProperties.get(arg);", "-            other.setInheritedProperty(arg, value.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990e48d87832e3a1c3660123957abfad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "b361fabe04c2d8e6dec41af36a728575d1399e90", "commitAfterChange": "bf283617dbb972d27c295814d9bdce53886c621d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void copyUserProperties(Project other)", "signatureAfterChange": "     public void copyUserProperties(Project other)", "diff": ["-        Enumeration e = userProperties.keys();", "-        while (e.hasMoreElements()) {", "-            Object arg = e.nextElement();", "-            if (inheritedProperties.containsKey(arg)) {", "-                continue;", "+        //avoid concurrent modification:", "+        synchronized (userProperties) {", "+            Enumeration e = userProperties.keys();", "+            while (e.hasMoreElements()) {", "+                Object arg = e.nextElement();", "+                if (inheritedProperties.containsKey(arg)) {", "+                    continue;", "+                }", "+                Object value = userProperties.get(arg);", "+                other.setUserProperty(arg.toString(), value.toString());", "-            Object value = userProperties.get(arg);", "-            other.setUserProperty(arg.toString(), value.toString());"]}]}