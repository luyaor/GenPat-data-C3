{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b543b616e52c141636697d38cbee4b5e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a4ffc85b625594940c5d6d1327db24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Task.java", "commitBeforeChange": "5f037857b64eec462d45aefb97997f37733dbbb7", "commitAfterChange": "e8e4255032431746117cf127ef194afd2b4eaa6c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public final void perform()", "signatureAfterChange": "     public final void perform()", "diff": ["-            } catch (RuntimeException exc) {", "-                if (exc instanceof BuildException) {", "-                    BuildException be = (BuildException) exc;", "-                    if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "-                        be.setLocation(getLocation());", "-                    }", "+            } catch (BuildException ex) {", "+                if (ex.getLocation() == Location.UNKNOWN_LOCATION) {", "+                    ex.setLocation(getLocation());", "-                reason = exc;", "-                throw exc;", "+                reason = ex;", "+            } catch (Exception ex) {", "+                reason = ex;", "+                BuildException be = new BuildException(ex);", "+                be.setLocation(getLocation());", "+                throw be;", "+            } catch (Error ex) {", "+                reason = ex;", "+                throw ex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b771d0b801a945363fec8b1486afcb99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "b3dffa5f955c1cd32b73ac3b100e648e1106de6c", "commitAfterChange": "b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void parse() throws BuildException", "signatureAfterChange": "     private void parse() throws BuildException", "diff": ["-            throw new BuildException(exc.getMessage(), exc.getException(), location);", "+", "+            Throwable t = exc.getException();", "+            if (t instanceof BuildException) {", "+                BuildException be = (BuildException) t;", "+                if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "+                    be.setLocation(location);", "+                }", "+                throw be;", "+            }", "+            ", "+            throw new BuildException(exc.getMessage(), t, location);", "-            throw new BuildException(exc.getMessage(), exc.getException());", "+            Throwable t = exc.getException();", "+            if (t instanceof BuildException) {", "+                throw (BuildException) t;", "+            }", "+            throw new BuildException(exc.getMessage(), t);"]}]}