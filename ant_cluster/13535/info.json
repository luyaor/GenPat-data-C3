{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "944281aa332dd53596bfe20f5dbae3f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b68b5a245f40c30fd047ffda18372d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 33, "signatureBeforeChange": "      private void vswap(int p1, int p2, int n)", "signatureAfterChange": "      private static void vswap(int[] fmap, int p1, int p2, int n)", "diff": ["+", "+    private static void vswap(int[] fmap, int p1, int p2, int n) {", "+        n += p1;", "+        while (p1 < n) {", "+            int t = fmap[p1];", "+            fmap[p1++] = fmap[p2];", "+            fmap[p2++] = t;", "+        }", "+    }", "-    private void vswap(int p1, int p2, int n) {", "-        int temp = 0;", "-        while (n > 0) {", "-            temp = zptr[p1];", "-            zptr[p1] = zptr[p2];", "-            zptr[p2] = temp;", "-            p1++;", "-            p2++;", "-            n--;", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcc8b019c903da2b7f55aabf51613d11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 24, "signatureBeforeChange": "      private static void vswap(int[] fmap, int p1, int p2, int n)", "signatureAfterChange": "      private void vswap(int p1, int p2, int n)", "diff": ["-", "-    private static void vswap(int[] fmap, int p1, int p2, int n) {", "-        n += p1;", "-        while (p1 < n) {", "-            int t = fmap[p1];", "-            fmap[p1++] = fmap[p2];", "-            fmap[p2++] = t;", "-        }", "-    }", "+", "+    private void vswap(int p1, int p2, int n) {", "+        int temp = 0;", "+        while (n > 0) {", "+            temp = zptr[p1];", "+            zptr[p1] = zptr[p2];", "+            zptr[p2] = temp;", "+            p1++;", "+            p2++;", "+            n--;", "+        }", "+    }"]}]}