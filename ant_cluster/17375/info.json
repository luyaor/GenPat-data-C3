{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a84e0771ce7857a537988c1ce3ac6b94", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "044641e4ca2a9f6d1ed019ba26b1d903", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "7d18fc9d2131ec5f1f3c1f59995f70b1a69f71dd", "commitAfterChange": "03d8b12829680840c24e878d3d65fb4e7f808018", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                if (getOwningTarget().getName().equals(\"\")) {", "+", "+                String owningTargetName = getOwningTarget().getName();", "+", "+                if (owningTargetName.equals(\"\")) {", "-                } else if (getOwningTarget().getName().equals(target)) {", "+                } else if (owningTargetName.equals(target)) {", "+                } else {", "+                    Target other = ", "+                        (Target) getProject().getTargets().get(target);", "+                    if (other != null && other.dependsOn(owningTargetName)) {", "+                        throw new BuildException(getTaskName() ", "+                                                 + \" task calling a target\"", "+                                                 + \" that depends on\"", "+                                                 + \" its parent target \\'\"", "+                                                 + owningTargetName", "+                                                 + \"\\'.\");", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "869c2e04bc1b4fc1af556f4fd8622207", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e30f1cdbcc2a30a4012e2cf2219f3c8140420d5b", "commitAfterChange": "c692a67a30db602f835f31f127862ed581779f5e", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": "     public final Vector topoSort(String[] root, Hashtable targets)         throws BuildException", "signatureAfterChange": "     public final Vector topoSort(String[] root, Hashtable targets,                                  boolean returnAll) throws BuildException", "diff": ["-    public final Vector topoSort(String[] root, Hashtable targets)", "-        throws BuildException {", "+    public final Vector topoSort(String[] root, Hashtable targets,", "+                                 boolean returnAll) throws BuildException {", "-            tsort(root[i], targets, state, visiting, ret);", "+            String st = (String)(state.get(root[i]));", "+            if (st == null) {", "+                tsort(root[i], targets, state, visiting, ret);", "+            } else if (st == VISITING) {", "+                throw new RuntimeException(\"Unexpected node in visiting state: \"", "+                    + root[i]);", "+            }", "+        Vector complete = (returnAll) ? ret : new Vector(ret);", "-                tsort(curTarget, targets, state, visiting, ret);", "+                tsort(curTarget, targets, state, visiting, complete);", "-        log(\"Complete build sequence is \" + ret, MSG_VERBOSE);", "+        log(\"Complete build sequence is \" + complete, MSG_VERBOSE);"]}]}