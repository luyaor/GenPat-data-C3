{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d166162838e3c427335b479e752d452b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41baa6b91391828c43eb43212a482887", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1400dc3c1b536c70697f83be990b0725121cba90", "commitAfterChange": "b5fcf10604f56a8061d10f332570342b34cc7a9d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["-        FileInputStream fIn = null;", "+        tarResource(new FileResource(file), tOut, vPath, tarFileSet);", "+    }", "-        String fullpath = tarFileSet.getFullpath();", "-        if (fullpath.length() > 0) {", "-            vPath = fullpath;", "-        } else {", "-            // don't add \"\" to the archive", "-            if (vPath.length() <= 0) {", "-                return;", "-            }", "-            if (file.isDirectory() && !vPath.endsWith(\"/\")) {", "-                vPath += \"/\";", "-            }", "-", "-            String prefix = tarFileSet.getPrefix();", "-            // '/' is appended for compatibility with the zip task.", "-            if (prefix.length() > 0 && !prefix.endsWith(\"/\")) {", "-                prefix = prefix + \"/\";", "-            }", "-            vPath = prefix + vPath;", "-        if (vPath.startsWith(\"/\") && !tarFileSet.getPreserveLeadingSlashes()) {", "-            int l = vPath.length();", "-            if (l <= 1) {", "-                // we would end up adding \"\" to the archive", "-                return;", "-            }", "-            vPath = vPath.substring(1, l);", "-        }", "-", "-        try {", "-            if (vPath.length() >= TarConstants.NAMELEN) {", "-                if (longFileMode.isOmitMode()) {", "-                    log(\"Omitting: \" + vPath, Project.MSG_INFO);", "-                } else if (longFileMode.isWarnMode()) {", "-                    log(\"Entry: \" + vPath + \" longer than \"", "-                        + TarConstants.NAMELEN + \" characters.\",", "-                    if (!longWarningGiven) {", "-                        log(\"Resulting tar file can only be processed \"", "-                            + \"successfully by GNU compatible tar commands\",", "-                            Project.MSG_WARN);", "-                        longWarningGiven = true;", "-                    }", "-                } else if (longFileMode.isFailMode()) {", "-                    throw new BuildException(\"Entry: \" + vPath", "-                }", "-            TarEntry te = new TarEntry(vPath);", "-            te.setModTime(file.lastModified());", "-            if (!file.isDirectory()) {", "-                if (file.length() > TarConstants.MAXSIZE) {", "-                    throw new BuildException(\"File: \" + file + \" larger than \" +", "-                            TarConstants.MAXSIZE + \" bytes.\");", "-                }", "-                te.setSize(file.length());", "-            } else {", "-                te.setMode(tarFileSet.getDirMode());", "-            te.setUserName(tarFileSet.getUserName());", "-            te.setGroupName(tarFileSet.getGroup());", "-            te.setUserId(tarFileSet.getUid());", "-            te.setGroupId(tarFileSet.getGid());", "-            if (!file.isDirectory()) {", "-                fIn = new FileInputStream(file);", "-                    count = fIn.read(buffer, 0, buffer.length);", "-            if (fIn != null) {", "-                fIn.close();", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5711b1ede069b039b8b5393ddebb0f24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "a6e42833f664835fa3f5352d379e3ec520d54eab", "commitAfterChange": "5c440d24815308e7d65366c36742f71c026cd812", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive,                            int mode)         throws IOException", "diff": ["-                           long lastModified, File fromArchive, int mode)", "+                           long lastModified,", "+                           /* unused, BWC */ File fromArchive,", "+                           int mode)", "+        throws IOException {", "+        zipFile(in, zOut, vPath, lastModified, mode, null);", "+    }"]}]}