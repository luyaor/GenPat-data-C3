{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "685e3037409cafbaa708db70065f95ea", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a69e740bc641661f04bfd168859a1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Parameters buildParameters()         throws TaskException", "signatureAfterChange": "     private Map buildParameters()         throws TaskException", "diff": ["-    private Parameters buildParameters()", "+    private Map buildParameters()", "-        final Parameters parameters = new Parameters();", "+        final Map parameters = new HashMap();", "-            final Map properties = getContext().getProperties();", "-            final Iterator keys = properties.keySet().iterator();", "-            while( keys.hasNext() )", "-            {", "-                final String key = (String)keys.next();", "-                final Object value = properties.get( key );", "-                setProperty( parameters, key, value );", "-            }", "+            parameters.putAll( getContext().getProperties() );", "-            final String value = param.getValue().toString();", "-            setProperty( parameters, name, value );", "+            final Object value = param.getValue();", "+            parameters.put( name, value );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de06466ecf53bbce2a79d8db83e53f28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/Cvs.java", "commitBeforeChange": "42f63164a88175351e9fccdacbe1b4944b655f9f", "commitAfterChange": "dcef853babac1b7007a169d7741dcbf945d73df1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private EnvironmentData buildEnvironment()", "signatureAfterChange": "      private Properties buildEnvironment()", "diff": ["-    private EnvironmentData buildEnvironment()", "+    private Properties buildEnvironment()", "-        final EnvironmentData env = new EnvironmentData();", "+        final Properties env = new Properties();", "-            final EnvironmentVariable var = new EnvironmentVariable();", "-            var.setKey( \"CVS_CLIENT_PORT\" );", "-            var.setValue( String.valueOf( m_port ) );", "-            env.addVariable( var );", "+            env.setProperty( \"CVS_CLIENT_PORT\", String.valueOf( m_port ) );", "-            final EnvironmentVariable var = new EnvironmentVariable();", "-            var.setKey( \"CVS_PASSFILE\" );", "-            var.setValue( String.valueOf( m_passwordFile ) );", "-            env.addVariable( var );", "+            env.setProperty( \"CVS_PASSFILE\", String.valueOf( m_passwordFile ) );", "-            final EnvironmentVariable var = new EnvironmentVariable();", "-            var.setKey( \"CVS_RSH\" );", "-            var.setValue( String.valueOf( m_cvsRsh ) );", "-            env.addVariable( var );", "+            env.setProperty( \"CVS_RSH\", String.valueOf( m_cvsRsh ) );"]}]}