{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d35d9bde9fe998cb99102951a3f9b43c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73de1ef3e1ebed33ef6096399120a5fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "commitAfterChange": "9c6515959f5bf9016b0dd8c12691e1e7549b2dd0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private PropertyConfigurer getConfigurerFromName( final ObjectConfigurer configurer,                                                       final String name,                                                       boolean ignoreRoleName )         throws Exception", "signatureAfterChange": "     private PropertyConfigurer getConfigurerFromName( final ObjectConfigurer configurer,                                                       final String name,                                                       boolean ignoreRoleName,                                                       final boolean isAdder )         throws Exception", "diff": ["-                                                      boolean ignoreRoleName )", "+                                                      boolean ignoreRoleName,", "+                                                      final boolean isAdder )", "-        PropertyConfigurer propertyConfigurer = configurer.getProperty( name );", "-        if( propertyConfigurer != null )", "+        if( !isAdder )", "-            return propertyConfigurer;", "-        }", "-", "-        // Try a typed property", "-        propertyConfigurer = configurer.getTypedProperty();", "-        if( propertyConfigurer != null )", "-        {", "-            if( ignoreRoleName )", "+            PropertyConfigurer propertyConfigurer = configurer.getSetter( name );", "+            if( propertyConfigurer != null )", "-            else", "+        }", "+        else", "+        {", "+            PropertyConfigurer propertyConfigurer = configurer.getAdder( name );", "+            if( propertyConfigurer != null )", "-                // Check the role name", "-                final RoleInfo roleInfo = m_roleManager.getRoleByType( propertyConfigurer.getType() );", "-                if( roleInfo != null && name.equalsIgnoreCase( roleInfo.getShorthand() ) )", "+                return propertyConfigurer;", "+            }", "+", "+            // Try a typed property", "+            propertyConfigurer = configurer.getTypedProperty();", "+            if( propertyConfigurer != null )", "+            {", "+                if( ignoreRoleName )", "+                else", "+                {", "+                    // Check the role name", "+                    final RoleInfo roleInfo = m_roleManager.getRoleByType( propertyConfigurer.getType() );", "+                    if( roleInfo != null && name.equalsIgnoreCase( roleInfo.getShorthand() ) )", "+                    {", "+                        return propertyConfigurer;", "+                    }", "+                }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba481a8deff965af21d3ea0cbeb05783", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private PropertyConfigurer getConfigurerFromName( final ObjectConfigurer configurer,                                                       final String name,                                                       boolean ignoreRoleName )         throws Exception", "signatureAfterChange": "     private PropertyConfigurer getConfigurerFromName( final ObjectConfigurer configurer,                                                       final String name,                                                       boolean ignoreRoleName )         throws Exception", "diff": ["-        final NoSuchPropertyException exc;", "-        try", "+        PropertyConfigurer propertyConfigurer = configurer.getProperty( name );", "+        if( propertyConfigurer != null )", "-            return configurer.getProperty( name );", "-        }", "-        catch( NoSuchPropertyException e )", "-        {", "-            // Keep for later", "-            exc = e;", "+            return propertyConfigurer;", "-        final PropertyConfigurer propertyConfigurer = configurer.getTypedProperty();", "-        if( !ignoreRoleName )", "+        propertyConfigurer = configurer.getTypedProperty();", "+        if( propertyConfigurer != null )", "-            final RoleInfo roleInfo = m_roleManager.getRoleByType( propertyConfigurer.getType() );", "-            if( roleInfo == null || !name.equalsIgnoreCase( roleInfo.getShorthand() ) )", "+            if( ignoreRoleName )", "-                // Rethrow the original exception", "-                throw exc;", "+                return propertyConfigurer;", "+            }", "+            else", "+            {", "+                // Check the role name", "+                final RoleInfo roleInfo = m_roleManager.getRoleByType( propertyConfigurer.getType() );", "+                if( roleInfo != null && name.equalsIgnoreCase( roleInfo.getShorthand() ) )", "+                {", "+                    return propertyConfigurer;", "+                }", "-        return propertyConfigurer;", "+        // Unknown prop", "+        throw new NoSuchPropertyException();"]}]}