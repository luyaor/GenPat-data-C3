{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "706ed726fd27145384aededca6416466", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ae4ffd64bcf05780078e99d81cba358", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public InputStream getResourceAsStream(String name)", "signatureAfterChange": "     @Override \tpublic InputStream getResourceAsStream(final String name)", "diff": ["-    public InputStream getResourceAsStream(String name) {", "+    @Override", "+\tpublic InputStream getResourceAsStream(final String name) {", "-                resourceStream = getRootLoader() == null ? null : getRootLoader().getResourceAsStream(name);", "+                resourceStream = getRootLoader() == null", "+                \t\t       ? null", "+                \t\t       : getRootLoader().getResourceAsStream(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ccd55ad46c978e545652eba08a1c201", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public InputStream getInputStream(ZipEntry ze)         throws IOException, ZipException", "signatureAfterChange": "     public InputStream getInputStream(final ZipEntry ze)         throws IOException, ZipException", "diff": ["-    public InputStream getInputStream(ZipEntry ze)", "+    public InputStream getInputStream(final ZipEntry ze)", "-        OffsetEntry offsetEntry = ((Entry) ze).getOffsetEntry();", "+        final OffsetEntry offsetEntry = ((Entry) ze).getOffsetEntry();", "-        long start = offsetEntry.dataOffset;", "-        BoundedInputStream bis =", "+        final long start = offsetEntry.dataOffset;", "+        final BoundedInputStream bis ="]}]}