{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b412f0cc4a426b4d5f452ae42e447c7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c18ab7cf40a087bec06aa0eb6c19413", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "16a5d1b56ceb8dca9875b074ebb36c626ce06763", "commitAfterChange": "931a037496b3bc1c55734fd221a3ef773dc8cabb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void addToIncludeFileMap(File file) throws BuildException", "signatureAfterChange": "     private void addToIncludeFileMap(File file) throws BuildException", "diff": ["-                    File dest", "-                        = new File(file.getParent(), file.getName() + fileext);", "+                    File checksumFile = getChecksumFile(file);", "-                        (file.lastModified() > dest.lastModified())) {", "-                        includeFileMap.put(file, dest);", "+                        (file.lastModified() > checksumFile.lastModified())) {", "+                        includeFileMap.put(file, checksumFile);", "-                        log(file + \" omitted as \" + dest + \" is up to date.\",", "+                        log(file + \" omitted as \" + checksumFile + \" is up to date.\",", "+                        if (totalproperty != null) {", "+                            // Read the checksum from disk.", "+                            String checksum = null;", "+                            try {", "+                                BufferedReader diskChecksumReader = new BufferedReader(new FileReader(checksumFile));", "+                                checksum = diskChecksumReader.readLine();", "+                            } catch (IOException e) {", "+                                throw new BuildException(\"Couldn't read checksum file \" + checksumFile, e);", "+                            }", "+                            byte[] digest = decodeHex(checksum.toCharArray());", "+                            allDigests.put(file,digest );", "+                        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d13a7ecb8900e906a6dc2df39c09062", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "e4a95755b95687bac2de13e36c61926ae4ccd33e", "commitAfterChange": "11f6c1a20bbb4a5c8b1b961f7c9870e11781c178", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                        Hashtable dependencies = (Hashtable)classpathDependencies.get(className);", "-                        for (Enumeration e2 = dependencies.elements(); e2.hasMoreElements();) {", "-                            File classpathFile = (File)e2.nextElement();", "-                            if (classpathFile.lastModified() > info.absoluteFile.lastModified()) {", "-                                log(\"Class \" + className + ", "+                        ", "+                        // if we have no info about the class - it may have been deleted already and we ", "+                        // are using cached info.", "+                        if (info != null) {", "+                            Hashtable dependencies = (Hashtable)classpathDependencies.get(className);", "+                            for (Enumeration e2 = dependencies.elements(); e2.hasMoreElements();) {", "+                                File classpathFile = (File)e2.nextElement();", "+                                if (classpathFile.lastModified() > info.absoluteFile.lastModified()) {", "+                                    log(\"Class \" + className + ", "-                                outOfDateClasses.put(className, className);", "-                                break;", "+                                    outOfDateClasses.put(className, className);", "+                                    break;", "+                                }"]}]}