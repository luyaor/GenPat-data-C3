{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cea9b63c60eff1347f102f90cf836acb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ef780bcf5d4d8fc1e4e0a3d88cdd63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void testGlobMapper()", "signatureAfterChange": "     @Test     public void testGlobMapper()", "diff": ["+    @Test", "-        executeTarget(\"testGlobMapper\");", "-        assertFileMissing(\"1/foo is not mapped\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"1/foo is mapped\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo.txt\");", "+        buildRule.executeTarget(\"testGlobMapper\");", "+        assertFileMissing(\"1/foo is not mapped\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"1/foo is mapped\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7473ae02bb21d576b286e49d4e8107", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testFlattenMapper()", "signatureAfterChange": "     @Test     public void testFlattenMapper()", "diff": ["+    @Test", "-        executeTarget(\"testFlattenMapper\");", "-        assertFileMissing(\"1/foo is not flattened\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"foo is flattened\", getProject().getProperty(\"output\") + \"/unziptestout/foo\");", "+        buildRule.executeTarget(\"testFlattenMapper\");", "+        assertFileMissing(\"1/foo is not flattened\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"foo is flattened\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/foo\");"]}]}