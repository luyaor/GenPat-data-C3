{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4ee8af441e7f359f91bdc1f7691660d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8da039c261a1aadabdf47a3050847db6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Deprecated     public static synchronized Vector getProcEnvironment()", "signatureAfterChange": "     @Deprecated     public static synchronized Vector<String> getProcEnvironment()", "diff": ["-    public static synchronized Vector getProcEnvironment() {", "-        Vector v = new Vector();", "-        Iterator it = getEnvironmentVariables().entrySet().iterator();", "-        while (it.hasNext()) {", "-            Map.Entry entry = (Map.Entry) it.next();", "+    public static synchronized Vector<String> getProcEnvironment() {", "+        Vector<String> v = new Vector<String>();", "+        for (Entry<String, String> entry : getEnvironmentVariables().entrySet()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae5eca83b4501b15a54ef528a168515", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Input.java", "commitBeforeChange": "c78d3f894ef997a88406bbad2d848f3e8d7c3649", "commitAfterChange": "1318b84a90132e21390aa464d8a86aacc6c50a60", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute () throws BuildException", "signatureAfterChange": "     public void execute () throws BuildException", "diff": ["-        Vector exit = null;", "-        if (exitargs != null) {", "-            exit = new Vector();", "-            StringTokenizer stok = new StringTokenizer(exitargs, \",\", false);", "-            while (stok.hasMoreTokens()) {", "-                exit.addElement(stok.nextToken());", "-            }", "-        }", "-        if (exit != null && exit.contains(input)) {", "-            throw  new BuildException(exitmessage);", "-        }"]}]}