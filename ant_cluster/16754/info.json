{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "124dab4144b53b288b35f16e1da00083", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c14f2c6412a0caafe11f2d6fc16d55b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testPreserveLastModified() throws Exception", "signatureAfterChange": "      @Test     public void testPreserveLastModified() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"lastModifiedSetup\");", "-        long ts1 = new File(getOutputDir(), \"test.txt\").lastModified();", "-        Thread.sleep(3000);", "-        executeTarget(\"testPreserve\");", "-        assertTrue(ts1 == new File(getOutputDir(), \"test.txt\").lastModified());", "+        buildRule.executeTarget(\"lastModifiedSetup\");", "+        File testFile = new File(buildRule.getOutputDir(), \"test.txt\");", "+        assumeTrue(\"Could not change file modification time\",", "+                testFile.setLastModified(testFile.lastModified() - (FileUtils.getFileUtils().getFileTimestampGranularity() * 5)));", "+        long ts1 = testFile.lastModified();buildRule.executeTarget(\"testPreserve\");", "+        assertTrue(ts1 == new File(buildRule.getOutputDir(), \"test.txt\").lastModified());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a49a6ea752f77722551d650526fd14b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ReplaceTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testNoPreserveLastModified() throws Exception", "signatureAfterChange": "      @Test     public void testNoPreserveLastModified() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"lastModifiedSetup\");", "-        long ts1 = new File(getOutputDir(), \"test.txt\").lastModified();", "-        Thread.sleep(3000);", "-        executeTarget(\"testNoPreserve\");", "-        assertTrue(ts1 < new File(getOutputDir(), \"test.txt\").lastModified());", "+        buildRule.executeTarget(\"lastModifiedSetup\");", "+        File testFile = new File(buildRule.getOutputDir(), \"test.txt\");", "+        assumeTrue(\"Could not change file modification time\",", "+                testFile.setLastModified(testFile.lastModified() - (FileUtils.getFileUtils().getFileTimestampGranularity() * 5)));", "+        long ts1 = testFile.lastModified();", "+        buildRule.executeTarget(\"testNoPreserve\");", "+        assertTrue(ts1 < new File(buildRule.getOutputDir(), \"test.txt\").lastModified());"]}]}