{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44e2a8682edbfb0358cb459fc28517f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "577a895b5bc252c0c2e5b5ef2ef24fd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "aeee70243a354c5951ec655556f8a1530e7713eb", "commitAfterChange": "ca5799fd8c1780abcc25f63745faf95bd2cdb06a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-", "+            task.setQName(qname);", "-                wrapper.setAttribute(attrs.getQName(i),", "-                        attrs.getValue(i));", "+                String name = attrs.getLocalName(i);", "+                String value = attrs.getValue(i);", "+                // PR: Hack for ant-type value", "+                //  an ant-type is a component name which can", "+                // be namespaced, need to extract the name", "+                // and convert from qualifed name to uri/name", "+                if (name.equals(\"ant-type\")) {", "+                    int index = value.indexOf(\":\");", "+                    if (index != -1) {", "+                        String prefix = value.substring(0, index);", "+                        String mappedUri = context.getPrefixMapping(prefix);", "+                        if (mappedUri == null) {", "+                            throw new BuildException(", "+                                \"Unable to find XML NS prefix \" + prefix);", "+                        }", "+                        value = ProjectHelper.genComponentName(", "+                            mappedUri, value.substring(index + 1));", "+                    }", "+                }", "+                wrapper.setAttribute(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc74fd06d5fa51907ed0c230fe937ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "a5ad127be2cc2c71abdbf4f10c474d5ab6fd55c6", "commitAfterChange": "0c41850a5477f82db678bbc85e6fccc04f66e661", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-        } else if (source.as(FileProvider.class) != null", "-                   && destFile != null && !append) {", "-            File sourceFile =", "-                source.as(FileProvider.class).getFile();", "-            copyUsingFileChannels(sourceFile, destFile);", "-            copyUsingStreams(source, dest, append, project);", "+            boolean copied = false;", "+            if (source.as(FileProvider.class) != null", "+                && destFile != null && !append) {", "+                File sourceFile =", "+                    source.as(FileProvider.class).getFile();", "+                try {", "+                    copyUsingFileChannels(sourceFile, destFile);", "+                    copied = true;", "+                } catch (IOException ex) {", "+                    project.log(\"Attempt to copy \" + sourceFile", "+                                + \" to \" + destFile + \" using NIO Channels\"", "+                                + \" failed due to '\" + ex.getMessage()", "+                                + \"'.  Falling back to streams.\",", "+                                Project.MSG_WARN);", "+                }", "+            }", "+            if (!copied) {", "+                copyUsingStreams(source, dest, append, project);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fa00812bc05ac6e9f5c2bf131340df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/ContentTransformingResource.java", "commitBeforeChange": "0da719e8f5610a4adf656aee25d38776ce60d3f4", "commitAfterChange": "ade0b033e372b018de5ed333904223d4a8e0ef80", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Object as(Class clazz)", "signatureAfterChange": "     public Object as(Class clazz)", "diff": ["-            final Appendable a =", "-                (Appendable) getResource().as(Appendable.class);", "-            if (a != null) {", "-                return new Appendable() {", "-                    public OutputStream getAppendOutputStream()", "-                        throws IOException {", "-                        OutputStream out = a.getAppendOutputStream();", "-                        if (out != null) {", "-                            out = wrapStream(out);", "+            if (isAppendSupported()) {", "+                final Appendable a =", "+                    (Appendable) getResource().as(Appendable.class);", "+                if (a != null) {", "+                    return new Appendable() {", "+                        public OutputStream getAppendOutputStream()", "+                            throws IOException {", "+                            OutputStream out = a.getAppendOutputStream();", "+                            if (out != null) {", "+                                out = wrapStream(out);", "+                            }", "+                            return out;", "-                        return out;", "-                    }", "-                };", "+                    };", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41dee5801473d6aa6d4c9424fb88a83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/ActionManager.java", "commitBeforeChange": "3ddbc0b6c9ac6420db40ac98fd25c9960a28880b", "commitAfterChange": "821004a5407db28a7482cff8f928d92b7615ea36", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public AntAction(String id)", "signatureAfterChange": "         public void eventPosted(EventObject event)", "diff": ["+         */", "+        public void eventPosted(EventObject event) {", "+            _mapper.applyEvent(event);", "-        public AntAction(String id) {", "-            _id = id;", "-            putValue(NAME, getString(id, \"name\"));", "-            putValue(SHORT_DESCRIPTION, getString(id, \"shortDescription\"));", "-            putValue(PARENT_MENU_NAME, getString(id, PARENT_MENU_NAME));", "-            putValue(SEPARATOR, getString(id, SEPARATOR));", "-", "-            String accelerator = getString(id, ACCELERATOR);", "-", "-            if(accelerator != null) {", "-                putValue(ACCELERATOR, KeyStroke.getKeyStroke(accelerator));", "-            }", "-", "-            String iconName = getString(id, \"icon\");", "-            if(iconName != null) {", "-                try {", "-                    URL imageLoc = ", "-                        AntAction.class.getResource(\"resources/\" + iconName);", "-                    if(imageLoc != null) {", "-                        putValue(SMALL_ICON, new ImageIcon(imageLoc));", "-                    }", "-                }", "-                catch(Exception ex) {", "-                    // XXX log me.", "-                    ex.printStackTrace();", "-                }", "-            }", "-        }"]}]}