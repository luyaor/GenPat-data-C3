{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7d37ea6358fc157ed4d55683b6cd8ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b95ae7d7196bcf48bac3c55aec15c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java", "commitBeforeChange": "d928ea97f2a6d49a8ceb9d130d2ef1a8e1440e79", "commitAfterChange": "04408cb596d6a5a0bc1261a75adaf46ebf9d644a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testCheckoutExceptions()", "signatureAfterChange": "     public void testCheckoutExceptions()", "diff": ["-     */", "+    /**  Test SOSCheckout required attributes.  */", "-        boolean buildEx = false;", "-", "-        // Set up a sosCheckout task", "-        sosCheckout.setProject(project);", "-        // No options set - SosServerPath should fail", "-        try {", "-            commandline = sosCheckout.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"sosserverpath attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"CheckoutException SosServerPath\", buildEx);", "-        buildEx = false;", "-", "-        // Set SosServerPath - Username should fail", "-        sosCheckout.setSosServerPath(SOS_SERVER_PATH);", "-        try {", "-            commandline = sosCheckout.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"username attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"CheckoutException Username\", buildEx);", "-        buildEx = false;", "-", "-        // Set Username - VssServerPath should fail", "-        sosCheckout.setUsername(SOS_USERNAME);", "-        try {", "-            commandline = sosCheckout.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"vssserverpath attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"CheckoutException VssServerPath\", buildEx);", "-        buildEx = false;", "-", "-        // Set VssServerPath - ProjectPath should fail", "-        sosCheckout.setVssServerPath(VSS_SERVER_PATH);", "-        try {", "-            commandline = sosCheckout.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"projectpath attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"CheckoutException ProjectPath\", buildEx);", "-", "-        // Set ProjectPath - All required options set", "-        sosCheckout.setProjectPath(VSS_PROJECT_PATH);", "-        try {", "-            commandline = sosCheckout.buildCmdLine();", "-            buildEx = true;", "-        } catch (BuildException be) {", "-            buildEx = false;", "-        }", "-        assertTrue(\"CheckoutException All required options set\", buildEx);", "+        configureProject(\"src/etc/testcases/taskdefs/optional/sos/sos.xml\");", "+        expectSpecificBuildException(\"soscheckout.1\", \"some cause\", \"sosserverpath attribute must be set!\");", "+        expectSpecificBuildException(\"soscheckout.2\", \"some cause\", \"username attribute must be set!\");", "+        expectSpecificBuildException(\"soscheckout.3\", \"some cause\", \"vssserverpath attribute must be set!\");", "+        expectSpecificBuildException(\"soscheckout.4\", \"some cause\", \"projectpath attribute must be set!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d68704b3fcf8fcb2f95642682e8b1526", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/sos/SOSTest.java", "commitBeforeChange": "d928ea97f2a6d49a8ceb9d130d2ef1a8e1440e79", "commitAfterChange": "04408cb596d6a5a0bc1261a75adaf46ebf9d644a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void testLabelExceptions()", "signatureAfterChange": "     public void testLabelExceptions()", "diff": ["+    /**  Test SOSLabel required attributes.  */", "+    public void testLabelExceptions() {", "+        configureProject(\"src/etc/testcases/taskdefs/optional/sos/sos.xml\");", "+        expectSpecificBuildException(\"soslabel.1\", \"some cause\", \"sosserverpath attribute must be set!\");", "+        expectSpecificBuildException(\"soslabel.2\", \"some cause\", \"username attribute must be set!\");", "+        expectSpecificBuildException(\"soslabel.3\", \"some cause\", \"vssserverpath attribute must be set!\");", "+        expectSpecificBuildException(\"soslabel.4\", \"some cause\", \"projectpath attribute must be set!\");", "+        expectSpecificBuildException(\"soslabel.5\", \"some cause\", \"label attribute must be set!\");", "-    public void testLabelExceptions() {", "-        boolean buildEx = false;", "-", "-        // Set up a sosLabel task", "-        sosLabel.setProject(project);", "-        // No options set - SosServerPath should fail", "-        try {", "-            commandline = sosLabel.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"sosserverpath attribute must be set!\") == 0) {", "-                buildEx = true;", "-        assertTrue(\"LabelException SosServerPath\", buildEx);", "-        buildEx = false;", "-", "-        // Set SosServerPath - Username should fail", "-        sosLabel.setSosServerPath(SOS_SERVER_PATH);", "-        try {", "-            commandline = sosLabel.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"username attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        assertTrue(\"LabelException Username\", buildEx);", "-        buildEx = false;", "-", "-        // Set Username - VssServerPath should fail", "-        sosLabel.setUsername(SOS_USERNAME);", "-        try {", "-            commandline = sosLabel.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"vssserverpath attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"LabelException VssServerPath\", buildEx);", "-        buildEx = false;", "-", "-        // Set VssServerPath - ProjectPath should fail", "-        sosLabel.setVssServerPath(VSS_SERVER_PATH);", "-        try {", "-            commandline = sosLabel.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"projectpath attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"LabelException ProjectPath\", buildEx);", "-", "-        // Set ProjectPath - Label should fail", "-        sosLabel.setProjectPath(VSS_PROJECT_PATH);", "-        try {", "-            commandline = sosLabel.buildCmdLine();", "-        } catch (BuildException be) {", "-            if (be.getMessage().compareTo(\"label attribute must be set!\") == 0) {", "-                buildEx = true;", "-            }", "-        }", "-        assertTrue(\"LabelException Label\", buildEx);", "-", "-        // Set Label - All required options set", "-        sosLabel.setLabel(SRC_LABEL);", "-        try {", "-            commandline = sosLabel.buildCmdLine();", "-            buildEx = true;", "-        } catch (BuildException be) {", "-            buildEx = false;", "-        }", "-        assertTrue(\"LabelException All required options set\", buildEx);"]}]}