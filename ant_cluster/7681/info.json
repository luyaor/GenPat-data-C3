{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e430c4a582d8e6a1bdfd36b24649f540", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4020557b0c9a08c541d9baa416f911b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "165ec8163b70ab6415e2ca549bd5d2a621a8e39b", "commitAfterChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "diff": ["-        m_selector = (ComponentSelector)typeManager.lookup( Task.ROLE + \"Selector\" );", "+        try { m_factory = typeManager.getFactory( Task.ROLE ); }", "+        catch( final TypeException te )", "+        {", "+            throw new ComponentException( \"Unable to retrieve factory from TypeManager\", te );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabef6b3ae13319059634f1fa63305b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "165ec8163b70ab6415e2ca549bd5d2a621a8e39b", "commitAfterChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "diff": ["-        m_selector = (ComponentSelector)typeManager.lookup( Converter.ROLE + \"Selector\" );", "+        try { m_factory = typeManager.getFactory( Converter.ROLE ); }", "+        catch( final TypeException te )", "+        {", "+            throw new ComponentException( \"Unable to retrieve factory from TypeManager\", te );", "+        }"]}]}