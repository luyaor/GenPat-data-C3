{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05c5747dad3a470eb2c5edc6ed6eda20", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970a18ecdaffd4d931a14987fefe4792", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private String macroSubs(String s, Map macroMapping)", "signatureAfterChange": "          private String macroSubs(String s, Map macroMapping)", "diff": ["+    ", "-        StringBuffer macroName = new StringBuffer();", "+        StringBuffer macroName = null;", "+        int state = STATE_NORMAL;", "-            if (s.charAt(i) == '$') {", "-                inMacro = true;", "-            } else {", "-                if (inMacro) {", "-                    if (s.charAt(i) == '{') {", "-                        continue;", "-                    } else if (s.charAt(i) == '}') {", "+            char ch = s.charAt(i);", "+            switch (state) {", "+                case STATE_NORMAL:", "+                    if (ch == '$') {", "+                        state = 1;", "+                    } else {", "+                        ret.append(ch);", "+                    }                    ", "+                    break;", "+                case STATE_EXPECT_BRACKET:", "+                    if (ch == '{') {", "+                        state = 2;", "+                        macroName = new StringBuffer();", "+                    } else {", "+                        state = 0;", "+                        ret.append('$');", "+                        ret.append(ch);", "+                    }", "+                    break;", "+                case STATE_EXPECT_NAME:", "+                    if (ch == '}') {", "+                        state = 0;", "-                        macroName = new StringBuffer();", "-                        inMacro = false;", "+                        macroName = null;", "-                } else {", "-                    ret.append(s.charAt(i));", "-                }", "+        }", "+        switch (state) {", "+            case STATE_NORMAL:", "+                break;", "+            case STATE_EXPECT_BRACKET:", "+                ret.append('$');", "+                break;", "+            case STATE_EXPECT_NAME:", "+                ret.append(\"${\");", "+                ret.append(macroName.toString());", "+                break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980d7f2d31bb217817810fc8a15ee056", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/StringUtils.java", "commitBeforeChange": "e261f46af20c574e83b1636fbe9808850f8fcd34", "commitAfterChange": "16bab4de70072d2c7fbcc17609068ed036e17ecf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "signatureAfterChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "diff": ["+        long factor = 1L;", "+        char s = humanSize.charAt(0);", "+        switch (s) {", "+            case '+':", "+                humanSize = humanSize.substring(1);", "+                break;", "+            case '-':", "+                factor = -1L;", "+                humanSize = humanSize.substring(1);", "+                break;", "+            default:", "+                break;", "+        }", "-        if (!Character.isDigit(humanSize.charAt(humanSize.length() - 1))) {", "-            char c = humanSize.charAt(humanSize.length() - 1);", "-            long value = Long.valueOf(", "-                humanSize.substring(", "-                    0, humanSize.length() - 1)).longValue();", "+        char c = humanSize.charAt(humanSize.length() - 1);", "+        if (!Character.isDigit(c)) {", "-                    return value * KILOBYTE;", "+                    factor *= KILOBYTE;", "+                    break;", "-                    return value * MEGABYTE;", "+                    factor *= MEGABYTE;", "+                    break;", "-                    return value * GIGABYTE;", "+                    factor *= GIGABYTE;", "+                    break;", "-                    return value * TERABYTE;", "+                    factor *= TERABYTE;", "+                    break;", "-                    return value * PETABYTE;", "+                    factor *= PETABYTE;", "+                    break;", "-                    return value;", "+                    break;", "-        } else {", "-            return Long.parseLong(humanSize);", "+            humanSize = humanSize.substring(0, humanSize.length() - 1);", "+        return factor * Long.parseLong(humanSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0240bd5b5afc6feeee6c8bfb33122c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "a5ae6a2bfec933af410de9ad415789bfde653666", "commitAfterChange": "f3e3462d86183541ed6f0c9b8a1c3c963d0d6ce1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "diff": ["+        URL  url = null;", "+        String buildFileName = null;", "-//         } else if (source instanceof InputStream) {", "-//         } else if (source instanceof URL) {", "-//         } else if (source instanceof InputSource) {", "+            buildFile = new File(buildFile.getAbsolutePath());", "+            context.setBuildFile(buildFile);", "+            buildFileName = buildFile.toString();", "+//         } else if (source instanceof InputStream ) {", "+        } else if (source instanceof URL) {", "+            if (handler.getCurrentAntHandler() != elementHandler) {", "+                throw new BuildException(", "+                    \"Source \" + source.getClass().getName()", "+                    + \" not supported by this plugin for \"", "+                    + \" non task xml\");", "+            }", "+            url = (URL) source;", "+            buildFileName = url.toString();", "+//         } else if (source instanceof InputSource ) {", "-                + \" not supported by this plugin\");", "+                                     + \" not supported by this plugin\");", "-        FileInputStream inputStream = null;", "+        InputStream inputStream = null;", "-        buildFile = new File(buildFile.getAbsolutePath());", "-        context.setBuildFile(buildFile);", "-            String uri = fu.toURI(buildFile.getAbsolutePath());", "+            String uri = null;", "+            if (buildFile != null) {", "+                uri = fu.toURI(buildFile.getAbsolutePath());", "+                inputStream = new FileInputStream(buildFile);", "+            } else {", "+                inputStream = url.openStream();", "+                uri = url.toString(); // ?? OK ??", "+            }", "-            inputStream = new FileInputStream(buildFile);", "-            inputSource.setSystemId(uri);", "-            project.log(\"parsing buildfile \" + buildFile", "-                + \" with URI = \" + uri, Project.MSG_VERBOSE);", "+            if (uri != null) {", "+                inputSource.setSystemId(uri);", "+            }", "+            project.log(\"parsing buildfile \" + buildFileName", "+                        + \"with URI = \" + uri, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c244f0a84ceeb03bd1b06d0a3cfd1cfe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "7b6a46d13193059c7ea056ad646fe5620e2bb79d", "commitAfterChange": "740ed5fbfbb7f59db596062f9e853fba40a65722", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void execSQL(String sql, PrintStream out) throws SQLException", "signatureAfterChange": "     protected void execSQL(String sql, PrintStream out) throws SQLException", "diff": ["-            if (!statement.execute(sql)) {", "-                log(statement.getUpdateCount() + \" rows affected\",", "-                    Project.MSG_VERBOSE);", "-            } else {", "-                if (print) {", "-                    printResults(out);", "+", "+            boolean ret;", "+            int updateCount = 0, updateCountTotal = 0;", "+            ResultSet resultSet = null;", "+", "+            ret = statement.execute(sql);", "+            updateCount = statement.getUpdateCount();", "+            resultSet = statement.getResultSet();", "+            do", "+            {", "+                if (!ret)", "+                {", "+                    if (updateCount != -1)", "+                    {", "+                        updateCountTotal += updateCount;", "+                    }", "+                else", "+                {", "+                    if (print)", "+                    {", "+                        printResults(out);", "+                    }", "+                }", "+                ret = statement.getMoreResults();", "+                updateCount = statement.getUpdateCount();", "+                resultSet = statement.getResultSet();", "+            } while ((resultSet != null) || (updateCount != -1));", "+", "+            log(updateCountTotal + \" rows affected\",", "+                Project.MSG_VERBOSE);", "+", "+            if (print)", "+            {", "+                StringBuffer line = new StringBuffer();", "+                line.append(updateCountTotal + \" rows affected\");", "+                out.println(line);"]}]}