{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc9e02adc322e848c39770de52b53d1a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0711980a0debd00cf1e2d488612b8c6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Property.java", "commitBeforeChange": "2f4b71ebb9a0b10e189a803e3ad565302736d060", "commitAfterChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-            final Object object = getContext().resolveValue( value );", "+            ", "+            Object object = null;", "+", "+            try { object = getContext().resolveValue( value ); }", "+            catch( final AntException ae )", "+            {", "+                throw new ConfigurationException( \"Error resolving value: \" + value, ae );", "+            }", "-                throw new AntException( \"Value for attribute \" + name + \"resolved to null\" );", "+                throw new ConfigurationException( \"Value for attribute \" + name + \"resolved to null\" );", "-                setValue( object );", "+                try { setValue( object ); }", "+                catch( final AntException ae )", "+                {", "+                    throw new ConfigurationException( \"Error setting value: \" + value, ae );", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf7fc42d5df36065c04f017abf31b81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "d24621d411a4747336fc76f8dcd2910b43b888ca", "commitAfterChange": "ddf5cd73c9f609b1fc5da325e186b68e6093e717", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "signatureAfterChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "diff": ["+        PrintWriter pw = null;", "-            jdepend.setWriter(new PrintWriter(fw));", "+            pw = new PrintWriter(fw);", "+            jdepend.setWriter(pw);", "+            if (pw.checkError()) {", "+                throw new IOException(\"Encountered an error writing JDepend\"", "+                                      + \" output\");", "+            }", "+        } catch (IOException ex) {", "+            throw new BuildException(ex);", "+            FileUtils.close(pw);"]}]}