{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96f6928607584d8d6d7eae3c76c8013d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0197bdf60b4bea610fa34eb1c51ae17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "5c861cf9e6cd98112dd92eeda447879612783c90", "commitAfterChange": "138108b44b0a96807a4d9335a220e528d040df33", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void useParameter(Parameter parameter)", "signatureAfterChange": "     public void useParameter(Parameter parameter)", "diff": ["-        } else if (key.startsWith(CACHE_START)) {", "-            String name = key.substring(CACHE_START.length());", "+        } else if (key.startsWith(CACHE_PREFIX)) {", "+            String name = key.substring(CACHE_PREFIX.length());", "-        } else if (key.startsWith(ALGORITHM_START)) {", "-            String name = key.substring(ALGORITHM_START.length());", "+        } else if (key.startsWith(ALGORITHM_PREFIX)) {", "+            String name = key.substring(ALGORITHM_PREFIX.length());", "-        } else if (key.startsWith(COMPARATOR_START)) {", "-            String name = key.substring(COMPARATOR_START.length());", "+        } else if (key.startsWith(COMPARATOR_PREFIX)) {", "+            String name = key.substring(COMPARATOR_PREFIX.length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96edccd57581b9d0d80665a97499af6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "1dc00cb1d11437ed4284e6a8de584435f13e2564", "commitAfterChange": "190db7ce1a9cdad175a551c410fe22a85f03fb4a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void executeTask( Configuration taskModel, final TaskContext context )         throws TaskException", "signatureAfterChange": "      private void executeTask( Configuration taskModel, final TaskContext context )         throws TaskException", "diff": ["-        taskModel = getAspectHandler().preCreate( taskModel );", "+        taskModel = getAspectManager().preCreate( taskModel );", "-        getAspectHandler().postCreate( task );", "+        getAspectManager().postCreate( task );", "-        getAspectHandler().preLoggable( getLogger() );", "+        getAspectManager().preLoggable( getLogger() );", "-        getAspectHandler().preConfigure( taskModel );", "+        getAspectManager().preConfigure( taskModel );", "-        getAspectHandler().preExecute();", "+        getAspectManager().preExecute();", "-        getAspectHandler().preDestroy();", "+        getAspectManager().preDestroy();"]}]}