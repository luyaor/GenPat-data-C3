{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9876ec8edacd6123cf786ae4db0b9e4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cff782fce930ee949dc806047424990", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "commitAfterChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        if( baseDir == null && filesets.size() == 0 && \"zip\".equals( archiveType ) )", "+        if( m_baseDir == null && m_filesets.size() == 0 &&", "+            \"zip\".equals( m_archiveType ) )", "-            throw new TaskException( \"basedir attribute must be set, or at least \" +", "-                                     \"one fileset must be given!\" );", "+            final String message = \"basedir attribute must be set, or at least \" +", "+                \"one fileset must be given!\";", "+            throw new TaskException( message );", "-        if( zipFile == null )", "+        if( m_file == null )", "-            throw new TaskException( \"You must specify the \" + archiveType + \" file to create!\" );", "+            final String message = \"You must specify the \" +", "+                m_archiveType + \" file to create!\";", "+            throw new TaskException( message );", "-        addingNewFiles = true;", "-        doUpdate = doUpdate && zipFile.exists();", "-        if( doUpdate )", "+        m_addingNewFiles = true;", "+        m_update = m_update && m_file.exists();", "+        if( m_update )", "-                                                   zipFile.getParentFile() );", "+                                                   m_file.getParentFile() );", "-                if( !zipFile.renameTo( renamedFile ) )", "+                if( !m_file.renameTo( renamedFile ) )", "-        if( baseDir != null )", "+        if( m_baseDir != null )", "-            dss.add( getDirectoryScanner( baseDir ) );", "+            dss.add( getDirectoryScanner( m_baseDir ) );", "-        for( int i = 0; i < filesets.size(); i++ )", "+        for( int i = 0; i < m_filesets.size(); i++ )", "-            FileSet fs = (FileSet)filesets.get( i );", "+            FileSet fs = (FileSet)m_filesets.get( i );", "-        if( isUpToDate( scanners, zipFile ) )", "+        if( isUpToDate( scanners, m_file ) )", "-        String action = doUpdate ? \"Updating \" : \"Building \";", "+        String action = m_update ? \"Updating \" : \"Building \";", "-        getLogger().info( action + archiveType + \": \" + zipFile.getAbsolutePath() );", "+        getLogger().info( action + m_archiveType + \": \" + m_file.getAbsolutePath() );", "-                new ZipOutputStream( new FileOutputStream( zipFile ) );", "-            zOut.setEncoding( encoding );", "+                new ZipOutputStream( new FileOutputStream( m_file ) );", "+            zOut.setEncoding( m_encoding );", "-                if( doCompress )", "+                if( m_compress )", "-                if( baseDir != null )", "+                if( m_baseDir != null )", "-                    addFiles( getDirectoryScanner( baseDir ), zOut, \"\", \"\" );", "+                    addFiles( getDirectoryScanner( m_baseDir ), zOut, \"\", \"\" );", "-                addFiles( filesets, zOut );", "-                if( doUpdate )", "+                addFiles( m_filesets, zOut );", "+                if( m_update )", "-                    addingNewFiles = false;", "+                    m_addingNewFiles = false;", "-                    for( int i = 0; i < addedFiles.size(); i++ )", "+                    for( int i = 0; i < m_addedFiles.size(); i++ )", "-                        exclusionPattern.append( (String)addedFiles.get( i ) );", "+                        exclusionPattern.append( (String)m_addedFiles.get( i ) );", "-            String msg = \"Problem creating \" + archiveType + \": \" + ioe.getMessage();", "+            String msg = \"Problem creating \" + m_archiveType + \": \" + ioe.getMessage();", "-            if( !zipFile.delete() )", "+            if( !m_file.delete() )", "-            if( doUpdate )", "+            if( m_update )", "-                if( !renamedFile.renameTo( zipFile ) )", "+                if( !renamedFile.renameTo( m_file ) )", "-        finally", "-        {", "-            cleanUp();", "-        }", "-        if( success && doUpdate )", "+        if( success && m_update )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9698124d508bdcb84e5366b7836e5028", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1dfdf1d555692ec5e025a285e71284cf90b25786", "commitAfterChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        if( baseDir == null && filesets.size() == 0 && \"zip\".equals( archiveType ) )", "+        if( m_baseDir == null && m_filesets.size() == 0 &&", "+            \"zip\".equals( m_archiveType ) )", "-            throw new TaskException( \"basedir attribute must be set, or at least \" +", "-                                     \"one fileset must be given!\" );", "+            final String message = \"basedir attribute must be set, or at least \" +", "+                \"one fileset must be given!\";", "+            throw new TaskException( message );", "-        if( zipFile == null )", "+        if( m_file == null )", "-            throw new TaskException( \"You must specify the \" + archiveType + \" file to create!\" );", "+            final String message = \"You must specify the \" +", "+                m_archiveType + \" file to create!\";", "+            throw new TaskException( message );", "-        addingNewFiles = true;", "-        doUpdate = doUpdate && zipFile.exists();", "-        if( doUpdate )", "+        m_addingNewFiles = true;", "+        m_update = m_update && m_file.exists();", "+        if( m_update )", "-                                                   zipFile.getParentFile() );", "+                                                   m_file.getParentFile() );", "-                if( !zipFile.renameTo( renamedFile ) )", "+                if( !m_file.renameTo( renamedFile ) )", "-        if( baseDir != null )", "+        if( m_baseDir != null )", "-            dss.add( getDirectoryScanner( baseDir ) );", "+            dss.add( getDirectoryScanner( m_baseDir ) );", "-        for( int i = 0; i < filesets.size(); i++ )", "+        for( int i = 0; i < m_filesets.size(); i++ )", "-            FileSet fs = (FileSet)filesets.get( i );", "+            FileSet fs = (FileSet)m_filesets.get( i );", "-        if( isUpToDate( scanners, zipFile ) )", "+        if( isUpToDate( scanners, m_file ) )", "-        String action = doUpdate ? \"Updating \" : \"Building \";", "+        String action = m_update ? \"Updating \" : \"Building \";", "-        getLogger().info( action + archiveType + \": \" + zipFile.getAbsolutePath() );", "+        getLogger().info( action + m_archiveType + \": \" + m_file.getAbsolutePath() );", "-                new ZipOutputStream( new FileOutputStream( zipFile ) );", "-            zOut.setEncoding( encoding );", "+                new ZipOutputStream( new FileOutputStream( m_file ) );", "+            zOut.setEncoding( m_encoding );", "-                if( doCompress )", "+                if( m_compress )", "-                if( baseDir != null )", "+                if( m_baseDir != null )", "-                    addFiles( getDirectoryScanner( baseDir ), zOut, \"\", \"\" );", "+                    addFiles( getDirectoryScanner( m_baseDir ), zOut, \"\", \"\" );", "-                addFiles( filesets, zOut );", "-                if( doUpdate )", "+                addFiles( m_filesets, zOut );", "+                if( m_update )", "-                    addingNewFiles = false;", "+                    m_addingNewFiles = false;", "-                    for( int i = 0; i < addedFiles.size(); i++ )", "+                    for( int i = 0; i < m_addedFiles.size(); i++ )", "-                        exclusionPattern.append( (String)addedFiles.get( i ) );", "+                        exclusionPattern.append( (String)m_addedFiles.get( i ) );", "-            String msg = \"Problem creating \" + archiveType + \": \" + ioe.getMessage();", "+            String msg = \"Problem creating \" + m_archiveType + \": \" + ioe.getMessage();", "-            if( !zipFile.delete() )", "+            if( !m_file.delete() )", "-            if( doUpdate )", "+            if( m_update )", "-                if( !renamedFile.renameTo( zipFile ) )", "+                if( !renamedFile.renameTo( m_file ) )", "-        finally", "-        {", "-            cleanUp();", "-        }", "-        if( success && doUpdate )", "+        if( success && m_update )"]}]}