{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d56880b1795285baddaa66da460670cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7999f8a878d4a8279fe000705c864e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/archive/Expand.java", "commitBeforeChange": "fa273bcbb416d9048ccbf038eb05379d540f5727", "commitAfterChange": "c6cabe48e1bf9f7b46e560d46e88e5f879f97e13", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected void extractFile( final File dir,                                 final InputStream input,                                 final String entryName,                                 final Date date,                                 final boolean isDirectory )         throws IOException, TaskException", "signatureAfterChange": "      protected void extractFile( final File dir,                                 final InputStream input,                                 final String entryName,                                 final Date date,                                 final boolean isDirectory )         throws IOException, TaskException", "diff": ["-        File f = FileUtil.resolveFile( dir, entryName );", "+        final File file = FileUtil.resolveFile( dir, entryName );", "-            if( !m_overwrite && f.exists()", "-                && f.lastModified() >= date.getTime() )", "+            if( !m_overwrite && file.exists() &&", "+                file.lastModified() >= date.getTime() )", "-                getLogger().debug( \"Skipping \" + f + \" as it is up-to-date\" );", "+                final String message = \"Skipping \" + file + \" as it is up-to-date\";", "+                getLogger().debug( message );", "-            getLogger().debug( \"expanding \" + entryName + \" to \" + f );", "+            getLogger().debug( \"expanding \" + entryName + \" to \" + file );", "+", "-            File dirF = f.getParentFile();", "-            dirF.mkdirs();", "+            final File parent = file.getParentFile();", "+            parent.mkdirs();", "-                f.mkdirs();", "+                file.mkdirs();", "-                    fos = new FileOutputStream( f );", "+                    fos = new FileOutputStream( file );", "-            f.setLastModified( date.getTime() );", "+            file.setLastModified( date.getTime() );", "-        catch( FileNotFoundException ex )", "+        catch( final FileNotFoundException fnfe )", "-            getLogger().warn( \"Unable to expand to file \" + f.getPath() );", "+            final String message = \"Unable to expand to file \" + file.getPath();", "+            getLogger().warn( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8525812470b141ef7933341121c3ffd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/archive/Expand.java", "commitBeforeChange": "fa273bcbb416d9048ccbf038eb05379d540f5727", "commitAfterChange": "c6cabe48e1bf9f7b46e560d46e88e5f879f97e13", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected void extractFile( final File dir,                                 final InputStream input,                                 final String entryName,                                 final Date date,                                 final boolean isDirectory )         throws IOException, TaskException", "signatureAfterChange": "      protected void extractFile( final File dir,                                 final InputStream input,                                 final String entryName,                                 final Date date,                                 final boolean isDirectory )         throws IOException, TaskException", "diff": ["-        File f = FileUtil.resolveFile( dir, entryName );", "+        final File file = FileUtil.resolveFile( dir, entryName );", "-            if( !m_overwrite && f.exists()", "-                && f.lastModified() >= date.getTime() )", "+            if( !m_overwrite && file.exists() &&", "+                file.lastModified() >= date.getTime() )", "-                getLogger().debug( \"Skipping \" + f + \" as it is up-to-date\" );", "+                final String message = \"Skipping \" + file + \" as it is up-to-date\";", "+                getLogger().debug( message );", "-            getLogger().debug( \"expanding \" + entryName + \" to \" + f );", "+            getLogger().debug( \"expanding \" + entryName + \" to \" + file );", "+", "-            File dirF = f.getParentFile();", "-            dirF.mkdirs();", "+            final File parent = file.getParentFile();", "+            parent.mkdirs();", "-                f.mkdirs();", "+                file.mkdirs();", "-                    fos = new FileOutputStream( f );", "+                    fos = new FileOutputStream( file );", "-            f.setLastModified( date.getTime() );", "+            file.setLastModified( date.getTime() );", "-        catch( FileNotFoundException ex )", "+        catch( final FileNotFoundException fnfe )", "-            getLogger().warn( \"Unable to expand to file \" + f.getPath() );", "+            final String message = \"Unable to expand to file \" + file.getPath();", "+            getLogger().warn( message );"]}]}