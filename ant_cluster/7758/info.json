{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "722b1b0e4fa4c6ff1b11338ab043dc04", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197c14da8c2555fc50ea1a3ff3fa18ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "f6a78a634593cd4660e2efa17a80f71a927df3d5", "commitAfterChange": "1d3dc3765d4efd6ae54488feab07f6a17315ebe6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected TaskletContext getContextFor( final Project project, final String targetName )", "signatureAfterChange": "      protected void executeTarget( final String targetName,                                    final Target target,                                    final TaskletContext context )         throws AntException", "diff": ["-    protected TaskletContext getContextFor( final Project project, final String targetName )", "-    {", "-        final DefaultTaskletContext context = ", "-            new DefaultTaskletContext( project.getContext() );", "-", "-        context.setProperty( Project.TARGET, targetName );", "-        context.put( TaskletContext.LOGGER, m_logger );", "-", "-        return context;", "-    }", "+    protected void executeTarget( final String targetName, ", "+                                  final Target target, ", "+                                  final TaskletContext context )", "+        m_componentManager.put( \"org.apache.ant.project.Target\", target );", "+", "+        final TaskletContext targetContext = new DefaultTaskletContext( context );", "+        targetContext.setProperty( Project.TARGET, targetName );", "+        m_listenerSupport.targetStarted( targetName );", "+", "+        executeTargetWork( targetName, target, targetContext );", "+        ", "+        m_listenerSupport.targetFinished();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb7a9cc53506455f8af040956cf86f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "f6a78a634593cd4660e2efa17a80f71a927df3d5", "commitAfterChange": "1d3dc3765d4efd6ae54488feab07f6a17315ebe6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "              public void execute( final Project project, final String target )         throws AntException", "signatureAfterChange": "              public void execute( final Project project, final String target )         throws AntException", "diff": ["-        m_taskletEngine.contextualize( project.getContext() );", "-        executeTarget( \"<init>\", project.getImplicitTarget() );", "+        m_componentManager.put( \"org.apache.ant.project.Project\", project );", "-        final ArrayList done = new ArrayList();", "-        execute( project, target, done );", "+        final TaskletContext context = project.getContext();", "+", "+        final String projectName = (String)context.getProperty( Project.PROJECT );", "+", "+        m_listenerSupport.projectStarted( projectName );", "+", "+        executeTargetWork( \"<init>\", project.getImplicitTarget(), context );", "+", "+        //context = new DefaultTaskletContext( context );", "+        ", "+        //placing logger lower (at targetlevel or at task level)", "+        //is possible if you want more fine grained control", "+        context.setProperty( TaskletContext.LOGGER, m_logger );", "+", "+        execute( project, target, context );", "+", "+        m_listenerSupport.projectFinished();", "+    }"]}]}