{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00bde13ff1bb87564d544173bb5adfbb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50bf83ab406a15419c904174abab5f7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "32cfa5b1066c1de3e18484d533ecddad213b02bb", "commitAfterChange": "dbf806213104986bab6864d85b55bf0912d64cc7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public static String[] translateCommandline(String to_process)", "signatureAfterChange": "      public static String[] translateCommandline(String to_process)", "diff": ["-                        current.append(tok.nextToken());", "+                        String escapedToken = tok.nextToken();", "+                        char escapedChar = escapedToken.charAt(0);", "+                        if (escapedChar == '\\\\' || escapedChar == '\\'' ||", "+                             escapedChar == '\\\"') {", "+                            current.append(escapedToken);", "+                        }", "+                        else {", "+                            current.append(\"\\\\\" + escapedToken);", "+                        }", "-                        throw new BuildException(\"stray backslash in \"", "-                                                 + to_process);", "+                        // just add the backslash", "+                        current.append(\"\\\\\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "664930139518fdba1f80530284445f22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "b469445f8442be585a98b28f3e44c8e2083de93f", "commitAfterChange": "a252eb85435070911a166bc108952067a9a2d061", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public static String[] translateCommandline(String to_process)", "signatureAfterChange": "      public static String[] translateCommandline(String to_process)", "diff": ["-        StringTokenizer tok = new StringTokenizer(to_process, \"\\\\\\\"\\' \", true);", "+        StringTokenizer tok = new StringTokenizer(to_process, \"\\\"\\' \", true);", "-                    }", "-                } else if (\"\\\\\".equals(nextTok)) {", "-                    if (tok.hasMoreTokens()) {", "-                        String escapedToken = tok.nextToken();", "-                        char escapedChar = escapedToken.charAt(0);", "-                        if (escapedChar == '\\\\' || escapedChar == '\\'' ||", "-                            escapedChar == '\\\"') {", "-                            current.append(escapedToken);", "-                        }", "-                        else {", "-                            current.append(\"\\\\\" + escapedToken);", "-                        }", "-                    } else {", "-                        // just add the backslash", "-                        current.append(\"\\\\\");"]}]}