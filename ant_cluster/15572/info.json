{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9542958d52b3156846b7a3a710901fc9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e23c94e8855f4e0fa89166d7a685e2c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MAudit.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected ArrayList getOptions()         throws TaskException", "signatureAfterChange": "      protected ArrayList getOptions()         throws TaskException", "diff": ["+", "+        final Path classpath = new Path();", "+", "-        if( getSourcePath() != null )", "+        final Path sourcePath = getSourcePath();", "+        if( sourcePath != null )", "-            getSourcePath().append( getClassPath() );// srcpath is prepended", "-            setClassPath( getSourcePath() );", "+            classpath.addPath( sourcePath );", "-        if( getClassPath() != null )", "+        classpath.addPath( getClassPath() );", "+", "+        final String formattedClasspath = PathUtil.formatPath( classpath );", "+        if( formattedClasspath.length() > 0 )", "-            options.add( getClassPath().toString() );", "+            options.add( formattedClasspath );", "+", "-            options.add( getSourcePath().toString() );", "+            options.add( PathUtil.formatPath( getSourcePath() ) );", "-            options.add( m_searchPath.toString() );", "+            options.add( PathUtil.formatPath( m_searchPath ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4c6f911e35cee6eb6686d4fd1decb5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "4a63f3b33824d1af6537636e50dc9f0bf73221aa", "commitAfterChange": "0380eac20a5d2f2fef36091bc8a51135eb916c27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected ArrayList getOptions()", "signatureAfterChange": "      protected ArrayList getOptions()         throws TaskException", "diff": ["+        throws TaskException", "-        if( sourcePath != null )", "+        if( getSourcePath() != null )", "-            sourcePath.append( classPath );// srcpath is prepended", "-            classPath = sourcePath;", "-            sourcePath = null;// prevent from using -sourcepath", "+            getSourcePath().append( getClassPath() );// srcpath is prepended", "+            setClassPath( getSourcePath() );", "+            setSourcePath( null );// prevent from using -sourcepath", "-        if( classPath != null )", "+        if( getClassPath() != null )", "-            options.add( classPath );", "+            options.add( getClassPath() );", "-        String[] dirs = path.list();", "+        final String[] dirs = path.list();", "-        addAllArrayList( options, includedFiles.keySet().iterator() );", "+        addAllArrayList( options, getIncludedFiles().keySet().iterator() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8699012b9ba529e661c86a0164609d95", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "4a63f3b33824d1af6537636e50dc9f0bf73221aa", "commitAfterChange": "0380eac20a5d2f2fef36091bc8a51135eb916c27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected ArrayList getOptions()", "signatureAfterChange": "      protected ArrayList getOptions()         throws TaskException", "diff": ["+        throws TaskException", "-        if( sourcePath != null )", "+        if( getSourcePath() != null )", "-            sourcePath.append( classPath );// srcpath is prepended", "-            classPath = sourcePath;", "-            sourcePath = null;// prevent from using -sourcepath", "+            getSourcePath().append( getClassPath() );// srcpath is prepended", "+            setClassPath( getSourcePath() );", "+            setSourcePath( null );// prevent from using -sourcepath", "-        if( classPath != null )", "+        if( getClassPath() != null )", "-            options.add( classPath );", "+            options.add( getClassPath() );", "-        String[] dirs = path.list();", "+        final String[] dirs = path.list();", "-        addAllArrayList( options, includedFiles.keySet().iterator() );", "+        addAllArrayList( options, getIncludedFiles().keySet().iterator() );"]}]}