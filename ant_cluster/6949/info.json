{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c7b80e30682d583fd8d82ffa11f8c5b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2783434fadec3c730192227aa0f38419", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cbce4bf09d398a8f7cb9011b3f859f09274aa82", "commitAfterChange": "c2dba687256b368d6ca095487a17d432dcab22e4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-                                   AntXmlContext context)", "-            throws SAXParseException", "-        {", "+                                   AntXMLContext context)", "+            throws SAXParseException {", "-            Project project=context.getProject();", "+            Project project = context.getProject();", "-            context.currentTarget=target;", "-            context.targetVector.addElement( target );", "+            context.addTarget(target);", "-                    if (\"\".equals( name ) )", "-                        throw new BuildException(\"name attribute must not be empty\");", "+                    if (\"\".equals(name)) {", "+                        throw new BuildException(\"name attribute must \"", "+                            + \"not be empty\");", "+                    }", "-                    throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\", context.locator);", "+                    throw new SAXParseException(\"Unexpected attribute \\\"\"", "+                        + key + \"\\\"\", context.getLocator());", "-                throw new SAXParseException(\"target element appears without a name attribute\",", "-                                            context.locator);", "+                throw new SAXParseException(\"target element appears without \"", "+                    + \"a name attribute\", context.getLocator());", "-            if(currentTargets.containsKey(name)) {", "+            if (currentTargets.containsKey(name)) {", "-                if (context.currentProjectName != null ) {", "-                    String newName=context.currentProjectName + \".\" + name;", "-                    project.log(\"Already defined in main or a previous import, define \"", "-                                + name + \" as \" + newName,", "+                if (context.getCurrentProjectName() != null) {", "+                    String newName = context.getCurrentProjectName()", "+                        + \".\" + name;", "+                    project.log(\"Already defined in main or a previous import, \"", "+                        + \"define \" + name + \" as \" + newName,", "-                    name=newName;", "+                    name = newName;", "-                    project.log(\"Already defined in main or a previous import, ignore \"", "-                                + name,", "-                                Project.MSG_VERBOSE);", "-                    name=null;", "+                    project.log(\"Already defined in main or a previous import, \"", "+                        + \"ignore \" + name, Project.MSG_VERBOSE);", "+                    name = null;", "-            if (name != null ) {", "+            if (name != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f2fd87f58fcfc5e76a69f68a543967", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cbce4bf09d398a8f7cb9011b3f859f09274aa82", "commitAfterChange": "c2dba687256b368d6ca095487a17d432dcab22e4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-                                   AntXmlContext context)", "-            throws SAXParseException", "-        {", "+                                   AntXMLContext context)", "+            throws SAXParseException {", "-            Project project=context.getProject();", "+            Project project = context.getProject();", "-                    if ( value != null && !value.equals(\"\")) {", "-                        if (!context.ignoreProjectTag )", "+                    if (value != null && !value.equals(\"\")) {", "+                        if (!context.isIgnoringProjectTag()) {", "+                        }", "-                        context.currentProjectName=value;", "+                        context.setCurrentProjectName(value);", "-                        if (!context.ignoreProjectTag ) {", "+                        if (!context.isIgnoringProjectTag()) {", "-                        if (!context.ignoreProjectTag ) {", "+                        if (!context.isIgnoringProjectTag()) {", "-                    if (!context.ignoreProjectTag )", "+                    if (!context.isIgnoringProjectTag()) {", "+                    }", "-                    throw new SAXParseException(\"Unexpected attribute \\\"\" + attrs.getQName(i) + \"\\\"\", context.locator);", "+                    throw new SAXParseException(\"Unexpected attribute \\\"\"", "+                        + attrs.getQName(i) + \"\\\"\", context.getLocator());", "-            String antFileProp = \"ant.file.\" + context.currentProjectName;", "+            String antFileProp = \"ant.file.\" + context.getCurrentProjectName();", "-                if( context.ignoreProjectTag &&", "-                    !dupFile.equals(context.buildFile)) {", "-                    project.log(\"Duplicated project name in import. Project \"+", "-                        context.currentProjectName + \" defined first in \" +", "-                        dup + \" and again in \" + context.buildFile,", "+                if (context.isIgnoringProjectTag() &&", "+                    !dupFile.equals(context.getBuildFile())) {", "+                    project.log(\"Duplicated project name in import. Project \" +", "+                        context.getCurrentProjectName() + \" defined first in \" +", "+                        dup + \" and again in \" + context.getBuildFile(),", "-            if (context.buildFile != null ) {", "-                project.setUserProperty(\"ant.file.\"+context.currentProjectName,", "-                        context.buildFile.toString());", "+            if (context.getBuildFile() != null) {", "+                project.setUserProperty(\"ant.file.\"", "+                    + context.getCurrentProjectName(),", "+                    context.getBuildFile().toString());", "-            if (context.ignoreProjectTag ) {", "+            if (context.isIgnoringProjectTag()) {", "-                    project.setBasedir(context.buildFileParent.getAbsolutePath());", "+                    project.setBasedir(context.getBuildFileParent().getAbsolutePath());", "-                                                               context.buildFileParent));", "+                                                               context.getBuildFileParent()));", "-            project.addTarget(\"\", context.implicitTarget);", "-            context.currentTarget=context.implicitTarget;", "+            project.addTarget(\"\", context.getImplicitTarget());", "+            context.setCurrentTarget(context.getImplicitTarget());"]}]}