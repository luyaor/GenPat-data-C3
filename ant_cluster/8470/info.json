{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e399747ee696b30788a4701bfb346587", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b14a73ff3efd04adf35eb4f955253fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void configLibrary(Map librarySpecs, String libraryId,                                CircularDependencyChecker configuring,                                Map newLibraries)          throws AntLibException", "signatureAfterChange": "     private void configLibrary(Map librarySpecs, String libraryId,                                CircularDependencyChecker configuring,                                Map newLibraries)          throws AntLibException", "diff": ["-                 && initConfig.getToolsJarURL() != null) {", "-                urlsList.add(initConfig.getToolsJarURL());", "+                 && antEnv.getToolsJarURL() != null) {", "+                urlsList.add(antEnv.getToolsJarURL());", "-                URL[] parserURLs = initConfig.getParserURLs();", "+                URL[] parserURLs = antEnv.getParserURLs();", "-            antLibrary.setParentLoader(initConfig.getCommonLoader());", "+            antLibrary.setParentLoader(antEnv.getCommonLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9c29dac1142d39d632ea08cb343662", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/JavaResource.java", "commitBeforeChange": "63c9a29e543bc611031eb28922256df187fce1af", "commitAfterChange": "6352c4ac1c23080a7d0a9b214272a89ac11d3ab7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int compareTo(Object another)", "signatureAfterChange": "     public int compareTo(Object another)", "diff": ["-            if (loader != otherjr.loader) {", "-                if (loader == null) {", "+            if (getLoader() != otherjr.getLoader()) {", "+                if (getLoader() == null) {", "-                if (otherjr.loader == null) {", "+                if (otherjr.getLoader() == null) {", "-                return loader.getRefId().compareTo(otherjr.loader.getRefId());", "+                return getLoader().getRefId()", "+                    .compareTo(otherjr.getLoader().getRefId());"]}]}