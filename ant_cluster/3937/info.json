{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37404df00cb56f8c9e6c404b8f57e74f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "534e32f033a2e1bf6e84d364dbe152b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "e7fb9570418c8f963123c259470373667ac8a84e", "commitAfterChange": "f5b5a8b53cad568d5a5ab97ed35c91f698fb1c8e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-    /** Sends an email  */", "+     */", "-                    mailer =", "-                        (Mailer) Class.forName(\"org.apache.tools.ant.taskdefs.email.MimeMailer\")", "+                    mailer = (Mailer) Class.forName(", "+                        \"org.apache.tools.ant.taskdefs.email.MimeMailer\")", "-", "-", "-", "-", "-", "-", "-", "-                throw new BuildException(\"At least one of to,cc or bcc must \"", "+                throw new BuildException(\"At least one of to, cc or bcc must \"", "-", "-                } else {", "-                    message.setMimeType(messageMimeType);", "+                message.setMimeType(messageMimeType);", "-                } else {", "-                    message.setCharset(charset);", "+                message.setCharset(charset);", "-", "-                    File file = new File(baseDir, includedFiles[j]);", "-", "-                    files.addElement(file);", "+                    files.addElement(new File(baseDir, includedFiles[j]));", "-", "+            mailer.setHeaders(headers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dfa0aa16692e362700ee24e704e313d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "51d2ae9068cde0e8a071a48a5f1188ebba14587a", "commitAfterChange": "e20a25b59653ec883676504b42c70591040fa2f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void scanme()", "signatureAfterChange": "     private void scanme()", "diff": ["-        if (lastScannedResource != null ", "+        if (lastScannedResource != null", "-            && lastScannedResource.getLastModified() ", "-               == thisresource.getLastModified()) {", "+            && lastScannedResource.getLastModified()", "+            == thisresource.getLastModified()) {", "-        Vector vResult = new Vector();", "-        myentries = new Vector();", "+        myentries = new Hashtable();", "-                    task.log(\"opening input stream from \" + srcFile, ", "+                    task.log(\"opening input stream from \" + srcFile,", "-            ", "+", "-                    myentries.addElement(new Resource(entry.getName(),", "-                                               true,", "-                                               entry.getTime(),", "+                    myentries.put(new String(entry.getName()),", "+                                  new Resource(entry.getName(), true,", "+                                               entry.getTime(), ", "-                    ", "+"]}]}