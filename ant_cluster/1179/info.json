{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b858558adb2478b709ac7f351df66f2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8351d1d1dccf7f25eaabac24459ec53f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarInputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void skip( int numToSkip )         throws IOException", "signatureAfterChange": "     public void skip( final int numToSkip )         throws IOException", "diff": ["-    public void skip( int numToSkip )", "+    public void skip( final int numToSkip )", "-", "-        byte[] skipBuf = new byte[ 8 * 1024 ];", "-", "+        final byte[] skipBuf = new byte[ 8 * 1024 ];", "-            int numRead = this.read( skipBuf, 0,", "-                                     ( num > skipBuf.length ? skipBuf.length", "-                                       : num ) );", "-", "+            final int count = ( num > skipBuf.length ) ? skipBuf.length : num;", "+            final int numRead = read( skipBuf, 0, count );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38275cdb2dbdce723f50fd197bf91ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarInputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void copyEntryContents( OutputStream out )         throws IOException", "signatureAfterChange": "     public void copyEntryContents( final OutputStream output )         throws IOException", "diff": ["-    public void copyEntryContents( OutputStream out )", "+    public void copyEntryContents( final OutputStream output )", "-        byte[] buf = new byte[ 32 * 1024 ];", "-", "+        final byte[] buffer = new byte[ 32 * 1024 ];", "-            int numRead = this.read( buf, 0, buf.length );", "-", "+            final int numRead = read( buffer, 0, buffer.length );", "-            out.write( buf, 0, numRead );", "+            output.write( buffer, 0, numRead );"]}]}