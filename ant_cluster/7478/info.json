{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5bece73a460fdfcc846857d3c7447a7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "320b3837b0110340f7636358f130a688", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "cf2fcaff65289fb09eedaf4f3003aedb57a6aee1", "commitAfterChange": "1ddaea8055b242a63505cf20bc65708000ca5009", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void touch(File file) throws BuildException", "signatureAfterChange": "     protected void touch(File file)", "diff": ["-    protected void touch(File file) throws BuildException {", "+    protected void touch(File file) {", "+        touch(file, getTimestamp());", "+    }", "-            log(\"Creating \" + file, Project.MSG_INFO);", "-                fileUtils.createNewFile(file);", "-", "-        fileUtils.setFileLastModified(file, millis);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ad662bac9803dac62af53aab91661c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "596d7e465f62f4783ed3ac41870098d56d018322", "commitAfterChange": "f4fc4080573cc5711f0e2b888fe9d0af6720eaca", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void printResults() throws java.sql.SQLException", "signatureAfterChange": "     protected void printResults(PrintStream out) throws java.sql.SQLException", "diff": ["-    protected void printResults() throws java.sql.SQLException {", "+    protected void printResults(PrintStream out) throws java.sql.SQLException {", "-        PrintStream out = System.out;", "-        try {", "-            if (output != null) {", "-\t\tlog(\"Opening PrintStream to output file \" + output, Project.MSG_VERBOSE);", "-                out = new PrintStream(new BufferedOutputStream(new FileOutputStream(output)));", "-            }", "-            do {", "-                rs = statement.getResultSet();", "-                if (rs != null) {", "-        \t    log(\"Processing new result set.\", Project.MSG_VERBOSE);", "-                    ResultSetMetaData md = rs.getMetaData();", "-                    int columnCount = md.getColumnCount();", "-                    StringBuffer line = new StringBuffer();", "-                    if (showheaders) {", "-                        for (int col = 1; col < columnCount; col++) {", "-                            line.append(md.getColumnName(col));", "+        do {", "+            rs = statement.getResultSet();", "+            if (rs != null) {", "+      \t        log(\"Processing new result set.\", Project.MSG_VERBOSE);", "+                ResultSetMetaData md = rs.getMetaData();", "+                int columnCount = md.getColumnCount();", "+                StringBuffer line = new StringBuffer();", "+                if (showheaders) {", "+                    for (int col = 1; col < columnCount; col++) {", "+                         line.append(md.getColumnName(col));", "+                         line.append(\",\");", "+                    }", "+                    line.append(md.getColumnName(columnCount));", "+                    out.println(line);", "+                    line.setLength(0);", "+                }", "+                while (rs.next()) {", "+                    boolean first = true;", "+                    for (int col = 1; col <= columnCount; col++) {", "+                        String columnValue = rs.getString(col);", "+                        if (columnValue != null) {", "+                            columnValue = columnValue.trim();", "+                        }", "+                         ", "+                        if (first) {", "+                            first = false;", "+                        }", "+                        else {", "-                        line.append(md.getColumnName(columnCount));", "-                        out.println(line);", "-                        line.setLength(0);", "+                        line.append(columnValue);", "-                    while (rs.next()) {", "-                        boolean first = true;", "-                        for (int col = 1; col <= columnCount; col++) {", "-                            String columnValue = rs.getString(col);", "-                            if (columnValue != null) {", "-                                columnValue = columnValue.trim();", "-                            }", "-                             ", "-                            if (first) {", "-                                first = false;", "-                            }", "-                            else {", "-                                line.append(\",\");", "-                            }", "-                            line.append(columnValue);", "-                        }", "-                        out.println(line);", "-                        line.setLength(0);", "-                    }", "+                    out.println(line);", "+                    line.setLength(0);", "-            while (statement.getMoreResults());", "-        catch (IOException ioe) {", "-            throw new BuildException(\"Error writing \" + output.getAbsolutePath(), ioe, location);", "-        }", "-        finally {", "-            if (out != null && out != System.out) {", "-                out.close();", "-            }", "-        }", "+        while (statement.getMoreResults());", "+        out.println();"]}]}