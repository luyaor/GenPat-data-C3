{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd5c0269d8b568363e6638244e9583e1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa032c9b9b53fbea2518b65d6f8f48d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/execution/ExecutionFrame.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public ExecutionFrame(Project project, Map taskDefs, Map converterDefs,                           String namespace) throws ConfigException", "signatureAfterChange": "          private ExecutionFrame(Project project, AntLibrary[] libraries, String namespace)          throws ConfigException", "diff": ["-    public ExecutionFrame(Project project, Map taskDefs, Map converterDefs,", "-                          String namespace) throws ConfigException {", "-        this.project = project;", "-        this.taskDefs = taskDefs;", "+     */     ", "+    private ExecutionFrame(Project project, AntLibrary[] libraries, String namespace) ", "+        throws ConfigException {", "+    ", "+        setupFrame(project, libraries);", "+    }", "-        // We create a set of converters from the converter definitions we", "-        // have been given and initialise them. They should be AntConverters", "-        setupConverters(converterDefs);", "-        ", "-                = new ExecutionFrame(importedProject, taskDefs, converterDefs, importNamespace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9915424723902d0805fb5c43f0ed29e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "1373656ec70ce70aac738040dea7473e5edb5608", "commitAfterChange": "664ecfc45914448ebe4de4e5853641090e72c5c8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void setAttribute( final ConfigurationState state,                                final String name,                                final String value,                                final TaskContext context )         throws Exception", "signatureAfterChange": "     private void setAttribute( final ConfigurationState state,                                final String name,                                final String value,                                final TaskContext context )         throws Exception", "diff": ["-        if( name.toLowerCase().endsWith( \"-ref\" ) )", "-        {", "-            // A reference", "-            setReference( state, name, value, context, false );", "-        }", "-        else", "-        {", "-            // Set the value", "-            final PropertyConfigurer property =", "-                getConfigurerFromName( state.getConfigurer(), name, false, false );", "-            setValue( property, state, value, context );", "-        }", "+        // Set the value", "+        final PropertyConfigurer property =", "+            getConfigurerFromName( state.getConfigurer(), name, false, false );", "+        setValue( property, state, value, context );"]}]}