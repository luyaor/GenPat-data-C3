{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd1ee983765caecd8507b750332d592b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2037c48939019db92ceca2eac502ab48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "0a9a3cc1f80e139aa4ca8bba7080bdbf728ed311", "commitAfterChange": "f40450a1ea9d49a2fe1a3c01da37f89fc7bfed7f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "signatureAfterChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "diff": ["-            try {", "-                PrintStream out = null;", "-", "-                    out = new PrintStream(", "-                        new FileOutputStream(name));", "+                    entry.openFile(false);", "-                    out = new PrintStream(", "-                        new FileOutputStream(name, append.booleanValue()));", "+                    entry.openFile(append.booleanValue());", "-                entry.setErrorPrintStream(out);", "-                entry.setOutputPrintStream(out);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Problems creating a recorder entry\",", "-                    ioe);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275d1b1e16659b28b0e1e8609b411811", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException, ServiceException", "signatureAfterChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException, ServiceException", "diff": ["-        // Create a service manager that aggregates the contents of the context's", "-        // component manager, and service manager", "-        final MultiSourceServiceManager msServiceManager = new MultiSourceServiceManager();", "-        msServiceManager.add( (AntServiceManager)serviceManager.lookup( AntServiceManager.ROLE ) );", "-        msServiceManager.add( new ServiceManagerAdaptor( serviceManager ) );", "-", "-            new DefaultTaskContext( m_baseContext, msServiceManager );", "+            new DefaultTaskContext( m_baseContext, serviceManager );"]}]}