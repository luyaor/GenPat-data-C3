{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "641309c89a3d6542298da80d764e255d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b8c04ee6e8ebac074624c2fd2777452", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "74e8a57c93dd534ebfbca3b4d92ea34789c7fe0c", "commitAfterChange": "0b31d6f97a5e41f33dabeda8daae2e13194c1bb5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "signatureAfterChange": "      public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "diff": ["+            handler = getDescriptorHandler(config.srcDir);", "+", "+            String ddPrefix = getVendorDDPrefix(baseName, descriptorFileName);", "+", "-            addVendorFiles(ejbFiles, baseName, descriptorFileName);", "+            addVendorFiles(ejbFiles, ddPrefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e429138a1c074a5573564e3964786c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void addContinuation(String line)", "signatureAfterChange": "         public void addContinuation(String line)", "diff": ["-            value += line.substring(1);", "+            String currentValue = (String)values.elementAt(currentIndex);", "+            setValue(currentValue + line.substring(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e5e2f08e8e0007decf174f6354d512e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "ccfc216622568ccf99c231bf0de224ef3a24aa33", "commitAfterChange": "1c48e016c22d2e836f1926b4edbba6774e6ce3f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parse(Project project, Object source)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source)             throws BuildException", "diff": ["+            Target currentImplicit = context.getImplicitTarget();", "+                context.setImplicitTarget(newCurrent);", "+                context.setImplicitTarget(currentImplicit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643a54566814c569a6812234b3d5bb32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "76f5174e7c5e445a20eb0c1cbcb22f81e2c72503", "commitAfterChange": "c6d10f6ffcfc9ba5ebf41d7ea079047833f97642", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["+        Element currentTest = null;", "-            currentTest.appendChild(nested);", "+            currentTest = (Element) testElements.get(test);", "-            rootElement.appendChild(nested);", "+            currentTest = rootElement;", "+        currentTest.appendChild(nested);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68eb90b4a9a1a4ebaa03d6867de4b949", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "9ec9a279f5b0d54e1d1362475edc52717b2197ab", "commitAfterChange": "4d8702d1f414ef88110183568a3aa502d18e06f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "signatureAfterChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "diff": ["+                        AntLibrarySpec currentSpec ", "+                            = (AntLibrarySpec)librarySpecs.get(libraryId);", "-                             + \"copy of library with id = \" + libraryId +", "-                            \" (\" + libURLs[i] + \")\");", "+                             + \"copy of library with id = \" + libraryId ", "+                             + \" (\" + libURLs[i] + \") + existing library at (\"", "+                             + currentSpec.getLibraryURL() + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a5e09f1114170cfc7acf3982a2c5e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "5b1dbf444c9b88e7803585fd069feaa072b30bfc", "commitAfterChange": "6ecbe242189a8d7feba3d56c8ec89582e77b1b29", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void init(String tag, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "          public void init(String tag, AttributeList attrs) throws SAXParseException", "diff": ["-            configure(task, attrs);", "+", "+            configureId(task, attrs);", "+                wrapper = task.getRuntimeConfigurableWrapper();", "+                wrapper.setAttributes(attrs);", "+                configure(task, attrs, project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "750b47a3f5b5cbfa9cccb94eab4d946f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "86029316faa68d77a37eab0a07714c5bd2dd46e1", "commitAfterChange": "f923ab50f9caea6910391d866039acd889f99077", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        cmd.setExecutable(\"patch\");", "+        Commandline toExecute = (Commandline)cmd.clone();", "+        toExecute.setExecutable(\"patch\");", "-            cmd.createArgument().setFile(originalFile);", "+            toExecute.createArgument().setFile(originalFile);", "-        exe.setCommandline(cmd.getCommandline());", "+        exe.setCommandline(toExecute.getCommandline());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7657a1d1eeaf28da02f97d82727cd4a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "7bca21470cfb4927f8ff2c576a1d4e41a1d889e5", "commitAfterChange": "5f7fbe8b732d8ad675be2e58acf2fde106b484b5", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "      private void scandir(File dir, TokenizedPath path, boolean fast,                          String[] newfiles, LinkedList directoryNamesFollowed)", "signatureAfterChange": "      private void scandir(File dir, TokenizedPath path, boolean fast,                          String[] newfiles, LinkedList directoryNamesFollowed)", "diff": ["+                        if (!isExcluded(name)) {", "+                            notFollowedSymlinks.add(file.getAbsolutePath());", "+                        }", "+                    notFollowedSymlinks.add(file.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8672f7b36c9af36842d386cc806e5935", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java", "commitBeforeChange": "a9cbacc4f8c19d9a7ed68e5b70505a3f693680ba", "commitAfterChange": "eb64d092a48900216af76452f0fb33e371d30d17", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public InputStream getInputStream() throws IOException", "signatureAfterChange": "     public InputStream getInputStream() throws IOException", "diff": ["-                cl = getProject().createClassLoader(p);", "+                if (parentFirst) {", "+                    cl = getProject().createClassLoader(p);", "+                } else {", "+                    cl = AntClassLoader.newAntClassLoader(getProject()", "+                                                          .getCoreLoader(),", "+                                                          getProject(),", "+                                                          p, false);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3e485903ff45022d2f6ce5baa980cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java", "commitBeforeChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "commitAfterChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "                  public void characters(char ch[], int start, int length) throws SAXException", "signatureAfterChange": "                  public void characters(char ch[], int start, int length) throws SAXException", "diff": ["+            StringBuffer buf = (StringBuffer)tagCharDataStack.elementAt(0);", "+            buf.append(ch, start, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1cbe1ac0dd26766e00d8c6770de0590", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "6e7154321d3e95449b4a9ab838d0872384e641a0", "commitAfterChange": "8618d4a229e12be568a735f8de5ac0a93b751bcd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected File createParamFile() throws BuildException", "signatureAfterChange": "     protected File createParamFile() throws BuildException", "diff": ["+            if (!isJProbe4Plus()) {", "+                // last file is the output snapshot - JProbe 4.x doesn't", "+                // like it in the parameter file.", "+                pw.println(getProject().resolveFile(tofile.getPath()));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ca9572c27d9c6ce2b7621d60dc16f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java", "commitBeforeChange": "ae202f6ff114e143e5d5a520b2e8e10009409958", "commitAfterChange": "80d45d8dbdc9cd56b35dfdd702e779429cead4e4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            if (!remote) {", "+            }", "+            } else {", "+                // supply 'rlog' as argument instead of command", "+                setCommand(\"\");", "+                addCommandArgument(\"rlog\");", "+                // Do not print name/header if no revisions", "+                // selected. This is quicker: less output to parse.", "+                addCommandArgument(\"-S\");", "+                // Do not list tags. This is quicker: less output to", "+                // parse.", "+                addCommandArgument(\"-N\");", "-            final ChangeLogParser parser = new ChangeLogParser();", "+            final ChangeLogParser parser = new ChangeLogParser(remote,", "+                                                               getPackage(),", "+                                                               getModules());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b836ff4d917b22341bcd39632a545d22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "951046ee10abb3a02c4f3a102dd8d85f92add240", "commitAfterChange": "9b79c03c8acbd5b4cd2940b8f44b3f4d4ce13bba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if( dir==null) dir=\".\";", "+            if(dir == null) ", "+                dir = project.getBaseDir();", "-            p1.setBasedir(dir);", "-            p1.setUserProperty(\"basedir\" , dir);", "+            p1.setBaseDir(dir);", "+            p1.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "-            if (antFile == null) antFile = dir + \"/build.xml\";", "+            if (antFile == null) ", "+                antFile = \"build.xml\";", "+", "+            antFile = (new File(dir, antFile)).getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86e61bfd012fee2bd4d8c8481130d31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/ant1compat/org/apache/tools/ant/Ant1Factory.java", "commitBeforeChange": "6518cd22e07e4c95cbb65a9ce11232b9744c73f4", "commitAfterChange": "132115ec2f8ed74dea76b79268319b9716cdb73b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void init(AntContext context) throws ExecutionException", "signatureAfterChange": "     public void init(AntContext context) throws ExecutionException", "diff": ["+        ", "+        EventService eventService = ", "+            (EventService)context.getCoreService(EventService.class);", "+        eventService.addBuildListener(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d546b40fc42e019b1d72c637b67b9d40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/script/ScriptDef.java", "commitBeforeChange": "2f9e3c1127662cf164ce69f0a9d394fa55a542e2", "commitAfterChange": "14805c9fcdf4b354aed1f746c7076d49cb6634f8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        if (runner.getLanguage() == null) {", "+        if (helper.getLanguage() == null) {", "+", "+        // Check if need to set the loader", "+        if (getAntlibClassLoader() != null || hasCpDelegate()) {", "+            helper.setClassLoader(createLoader());", "+        }", "+", "+        // Now create the scriptRunner", "+        runner = helper.getScriptRunner();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbffc6fcdcbcf1c4969ef83527e14b55", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/TempFile.java", "commitBeforeChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "commitAfterChange": "7e05b3d981ceab1b87536eed26f67d82470f1a0c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        File tfile = FILE_UTILS.createTempFile(", "-                prefix, suffix, destDir, deleteOnExit);", "+        File tfile;", "+        if (createFile) {", "+            tfile = FILE_UTILS.createTempFile(prefix, suffix, destDir,", "+                    deleteOnExit);", "+        } else {", "+            tfile = FILE_UTILS.createTempFileName(prefix, suffix, destDir,", "+                    deleteOnExit);", "+        }"]}]}