{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "238b0e77bfb32833439f8201b48c459b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48fee14b06640cfcb3295521ae1644fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "cca008dd0001628eefae7a0ebffba4815a6909f1", "commitAfterChange": "021fdf251c92ecb3981724d83c0265dc770280b3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private static void transferFormatters(JUnitTestRunner runner)", "signatureAfterChange": "      private static void transferFormatters(JUnitTestRunner runner,                                            JUnitTest test)", "diff": ["-    private static void transferFormatters(JUnitTestRunner runner) {", "+    private static void transferFormatters(JUnitTestRunner runner,", "+                                           JUnitTest test) {", "-            runner.addFormatter((JUnitResultFormatter) fromCmdLine", "-                                .elementAt(i));", "+            FormatterElement fe = (FormatterElement) fromCmdLine.elementAt(i);", "+            if (multipleTests && fe.getUseFile()) {", "+                File destFile = ", "+                    new File(test.getTodir(), ", "+                             test.getOutfile() + fe.getExtension());", "+                fe.setOutfile(destFile);", "+            }", "+            runner.addFormatter(fe.createFormatter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df9a6f120b2ab5d283a738c3e33ab015", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "b1cc0a4edb49ab8e1155a6a9394a980a0196f454", "commitAfterChange": "7b84ae34e5dda8ff45d94e73e2537b369d1dedf1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private int removeEmptyDirectories(File dir, boolean removeIfEmpty)", "signatureAfterChange": "     private int removeEmptyDirectories(File dir, boolean removeIfEmpty,                                        Set preservedEmptyDirectories)", "diff": ["-    private int removeEmptyDirectories(File dir, boolean removeIfEmpty) {", "+    private int removeEmptyDirectories(File dir, boolean removeIfEmpty,", "+                                       Set preservedEmptyDirectories) {", "-        if (dir.isDirectory()) {", "+        if (!preservedEmptyDirectories.contains(dir) && dir.isDirectory()) {", "-                if (file.isDirectory()) {", "-                    removedCount += removeEmptyDirectories(file, true);", "+                if (!preservedEmptyDirectories.contains(file)", "+                    && file.isDirectory()) {", "+                    removedCount +=", "+                        removeEmptyDirectories(file, true,", "+                                               preservedEmptyDirectories);"]}]}