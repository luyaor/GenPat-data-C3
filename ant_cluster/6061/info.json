{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75c8538b38eeea927dcaaa32995213cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00800310361b7dcb8b88877770ba7127", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "4a7b9de346e3b0e98c952fc981eff871527ffead", "commitAfterChange": "4e7f82aede337093ce7bf8bfe03f930500e22551", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private File getChecksumFile(File file)", "signatureAfterChange": "      private File getChecksumFile(File file)", "diff": ["+            if(path==null) {", "+                //bug 37386. this should not occur, but it has, once.", "+                throw new BuildException(\"Internal error: \" +", "+                        \"relativeFilePaths could not match file\"+", "+                        file+", "+                        \"\\n\" +", "+                        \"please file a bug report on this\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57acbfdb70bab3f600f489d76d0fc737", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "b0702935362003552b8c456725f3b68b597ab443", "commitAfterChange": "f16a5cd623bf73ae80a737e38e025d9354e20ef2", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws ExecutionException", "diff": ["-        } else {", "+        } else if (nestedType != null) {", "+        } else {", "+            throw new ExecutionException(\"The type of the <\" ", "+                + nestedElementName + \"> nested element is not known. \"", "+                + \"Please specify by the type using the \\\"ant:type\\\" \" ", "+                + \"attribute or provide a reference to an instance with \" ", "+                + \"the \\\"ant:id\\\" attribute\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c16264ed07d12b1771151225ddc657", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     private void flattenDependency(List flattenedList, String fullTargetName,                                    Location targetRefLocation)          throws ExecutionException", "signatureAfterChange": "     private void flattenDependency(List flattenedList, String fullTargetName,                                    Location targetRefLocation)          throws ExecutionException", "diff": ["+        if (frame == null) {", "+            throw new ExecutionException(\"No project available under the \"", "+                + \"referenced name \\\"\" + fullTargetName, targetRefLocation);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f5d247e80372be9905a5829dff2b01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/HasMethod.java", "commitBeforeChange": "11af84f764212f34d8f2a8efa4d381f08e3b7339", "commitAfterChange": "171a1f35e390455d105aaf43370c0475711a74c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private Class loadClass(String classname)", "signatureAfterChange": "     private Class loadClass(String classname)", "diff": ["-                    // class found but restricted name; this is", "-                    // actually the case we're looking for in JDK 1.3+,", "-                    // so catch the exception and return", "-                    return null;", "+                    // class found but restricted name", "+                    throw new BuildException(\"class \\\"\" + classname", "+                                             + \"\\\" was found but a\"", "+                                             + \" SecurityException has been\"", "+                                             + \" raised while loading it\",", "+                                             se);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2c65accef7860c6da1ae31ade3334d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/modelparser/ProjectHandler.java", "commitBeforeChange": "5168496109edbff91558a4d654082a36a1f74a69", "commitAfterChange": "1dcdf4c05f0685b9cac061c9ea9d7f5b6822cde3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void startElement(String uri, String localName, String qualifiedName,                              Attributes attributes)          throws SAXParseException", "signatureAfterChange": "     public void startElement(String uri, String localName, String qualifiedName,                              Attributes attributes)          throws SAXParseException", "diff": ["-             ", "-        if (qualifiedName.equals(\"ref\")) {", "+", "+        if (qualifiedName.equals(REF_ELEMENT)) {", "-        } else if (qualifiedName.equals(\"include\")) {", "+        } else if (qualifiedName.equals(INCLUDE_ELEMENT)) {", "-        } else if (qualifiedName.equals(\"target\")) {", "+        } else if (qualifiedName.equals(TARGET_ELEMENT)) {", "-        } else {", "+        } else if (localName != null) {", "+        } else {", "+          // ignore namespaced elements", "+          throw new SAXParseException(\"Only the \\\"ant\\\" namespace is \"", "+            + \"currently recognized (\" + qualifiedName + \")\", getLocator());"]}]}