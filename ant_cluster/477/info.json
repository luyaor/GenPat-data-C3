{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "315850024e5064ab0502a61d66b5c1d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83783d62084504c947f7493bb476189c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "261050f72e9a86e4249c9ee91495ec796f3c382b", "commitAfterChange": "e5f3393251f3b7b8b8df1e5300559828bc73d8f0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-            for (Iterator iter = attributeMap.entrySet().iterator(); iter.hasNext();) {", "-                Map.Entry entry = (Map.Entry) iter.next();", "-                String name = (String) entry.getKey();", "-                String value = (String) entry.getValue();", "+            for (Entry<String, Object> entry : attributeMap.entrySet()) {", "+                String name = entry.getKey();", "+                Object value = entry.getValue();", "-                Object attrValue = PropertyHelper.getPropertyHelper(p).parseProperties(value);", "+                Object attrValue;", "+                if (value instanceof Evaluable) {", "+                    attrValue = ((Evaluable) value).eval();", "+                } else {", "+                    attrValue = PropertyHelper.getPropertyHelper(p).parseProperties(value.toString());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0cdff54eb7cafe53985e6b81f93dd2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public UnknownElement copy(Project newProject)", "signatureAfterChange": "     public UnknownElement copy(Project newProject)", "diff": ["-        Map m = getWrapper().getAttributeMap();", "-        for (Iterator i = m.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry entry = (Map.Entry) i.next();", "-            copyRC.setAttribute(", "-                (String) entry.getKey(), (String) entry.getValue());", "+        Map<String, Object> m = getWrapper().getAttributeMap();", "+        for (Map.Entry<String, Object> entry : m.entrySet()) {", "+            copyRC.setAttribute(entry.getKey(), (String) entry.getValue());", "-        for (Enumeration e = getWrapper().getChildren(); e.hasMoreElements();) {", "-            RuntimeConfigurable r = (RuntimeConfigurable) e.nextElement();", "+        for (Enumeration<RuntimeConfigurable> e = getWrapper().getChildren(); e.hasMoreElements();) {", "+            RuntimeConfigurable r = e.nextElement();"]}]}