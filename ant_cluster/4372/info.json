{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "400de5f26547ac631576a984e842527f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f49d6951da144171ca0a0b514a6710a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "signatureAfterChange": "     public static void copyResource(final Resource source, final Resource dest,                             final FilterSetCollection filters, final Vector filterChains,                             final boolean overwrite, final boolean preserveLastModified,                                     final boolean append,                             final String inputEncoding, final String outputEncoding,                             final Project project)         throws IOException", "diff": ["-    public static void copyResource(Resource source, Resource dest,", "-                            FilterSetCollection filters, Vector filterChains,", "-                            boolean overwrite, boolean preserveLastModified,", "-                                    boolean append,", "-                            String inputEncoding, String outputEncoding,", "-                            Project project)", "+    public static void copyResource(final Resource source, final Resource dest,", "+                            final FilterSetCollection filters, final Vector filterChains,", "+                            final boolean overwrite, final boolean preserveLastModified,", "+                                    final boolean append,", "+                            final String inputEncoding, final String outputEncoding,", "+                            final Project project)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39bed9ca2b3205eab7bd5bb7ab36d2ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "      private void doLinks(Commandline toExecute)", "signatureAfterChange": "      private void doLinks(final Commandline toExecute)", "diff": ["-    private void doLinks(Commandline toExecute) {", "+    private void doLinks(final Commandline toExecute) {", "-            for (Enumeration<LinkArgument> e = links.elements(); e.hasMoreElements();) {", "-                LinkArgument la = e.nextElement();", "+            for (final Enumeration<LinkArgument> e = links.elements(); e.hasMoreElements();) {", "+                final LinkArgument la = e.nextElement();", "-                    File hrefAsFile =", "+                    final File hrefAsFile =", "-                        } catch (MalformedURLException ex) {", "+                        } catch (final MalformedURLException ex) {", "-                        URL base = new URL(\"file://.\");", "+                        final URL base = new URL(\"file://.\");", "-                    } catch (MalformedURLException mue) {", "+                    } catch (final MalformedURLException mue) {", "-                    File packageListLocation = la.getPackagelistLoc();", "+                    final File packageListLocation = la.getPackagelistLoc();", "-                        File packageListFile =", "+                        final File packageListFile =", "-                            } catch (MalformedURLException ex) {", "+                            } catch (final MalformedURLException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a871fab70ae75a69e1559552fe40669", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     protected void doFileOperations()", "signatureAfterChange": "     protected void doFileOperations()", "diff": ["-            for (Map.Entry<String, String[]> e : fileCopyMap.entrySet()) {", "-                String fromFile = e.getKey();", "-                String[] toFiles = e.getValue();", "+            for (final Map.Entry<String, String[]> e : fileCopyMap.entrySet()) {", "+                final String fromFile = e.getKey();", "+                final String[] toFiles = e.getValue();", "-                    String toFile = toFiles[i];", "+                    final String toFile = toFiles[i];", "-                        FilterSetCollection executionFilters =", "+                        final FilterSetCollection executionFilters =", "-                        for (FilterSet filterSet : filterSets) {", "+                        for (final FilterSet filterSet : filterSets) {", "-                    } catch (IOException ioe) {", "+                    } catch (final IOException ioe) {", "-                        File targetFile = new File(toFile);", "+                        final File targetFile = new File(toFile);", "-            for (String[] dirs : dirCopyMap.values()) {", "+            for (final String[] dirs : dirCopyMap.values()) {", "-                    File d = new File(dirs[i]);", "+                    final File d = new File(dirs[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837390a2caeec1d2f22a07bfd9738434", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static ResourceCollection selectSources(ProjectComponent logTo,                                                    ResourceCollection source,                                                    FileNameMapper mapper,                                                    ResourceFactory targets,                                                    ResourceSelectorProvider selector)", "signatureAfterChange": "     public static ResourceCollection selectSources(final ProjectComponent logTo,                                                    ResourceCollection source,                                                    final FileNameMapper mapper,                                                    final ResourceFactory targets,                                                    final ResourceSelectorProvider selector)", "diff": ["-    public static ResourceCollection selectSources(ProjectComponent logTo,", "+    public static ResourceCollection selectSources(final ProjectComponent logTo,", "-                                                   FileNameMapper mapper,", "-                                                   ResourceFactory targets,", "-                                                   ResourceSelectorProvider selector) {", "+                                                   final FileNameMapper mapper,", "+                                                   final ResourceFactory targets,", "+                                                   final ResourceSelectorProvider selector) {", "-        Union result = new Union();", "-        for (Resource sr : source) {", "+        final Union result = new Union();", "+        for (final Resource sr : source) {", "-            } catch (Exception e) {", "+            } catch (final Exception e) {", "-            Union targetColl = new Union();", "+            final Union targetColl = new Union();", "-            Restrict r = new Restrict();", "+            final Restrict r = new Restrict();", "-                Resource t = r.iterator().next();", "+                final Resource t = r.iterator().next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc495d3aeacd6bd9e2c64fe5a72e0fbd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void tar(ResourceCollection rc, TarOutputStream tOut)         throws IOException", "signatureAfterChange": "     protected void tar(final ResourceCollection rc, final TarOutputStream tOut)         throws IOException", "diff": ["-    protected void tar(ResourceCollection rc, TarOutputStream tOut)", "+    protected void tar(final ResourceCollection rc, final TarOutputStream tOut)", "-        TarFileSet tfs = asTarFileSet(afs);", "+        final TarFileSet tfs = asTarFileSet(afs);", "-            FileSet fs = (FileSet) rc;", "-            String[] files = getFileNames(fs);", "+            final FileSet fs = (FileSet) rc;", "+            final String[] files = getFileNames(fs);", "-                File f = new File(fs.getDir(getProject()), files[i]);", "-                String name = files[i].replace(File.separatorChar, '/');", "+                final File f = new File(fs.getDir(getProject()), files[i]);", "+                final String name = files[i].replace(File.separatorChar, '/');", "-            for (Resource r : rc) {", "-                File f = r.as(FileProvider.class).getFile();", "+            for (final Resource r : rc) {", "+                final File f = r.as(FileProvider.class).getFile();", "-            for (Resource r : rc) {", "+            for (final Resource r : rc) {"]}]}