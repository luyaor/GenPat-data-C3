{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "546da5d408de0bf22de7dc8307c8473a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f1b29bbddce32f0fa510979d9050ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "3e2cbab6ba443daf0abf6e02535fb6cc1df72e04", "commitAfterChange": "b33d33d754378862953b0243500d94eaaf983923", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void addPathFile(File pathComponent) throws IOException", "signatureAfterChange": "     protected void addPathFile(File pathComponent) throws IOException", "diff": ["-            ZipFile jarFile = null;", "-            InputStream manifestStream = null;", "+            JarFile jarFile = null;", "-                jarFile = new ZipFile(pathComponent);", "-                manifestStream = jarFile.getInputStream(new ZipEntry(\"META-INF/MANIFEST.MF\"));", "-", "-                if (manifestStream == null) {", "+                jarFile = new JarFile(pathComponent);", "+                Manifest manifest = jarFile.getManifest();", "+                if (manifest == null) {", "-                Reader manifestReader = new InputStreamReader(manifestStream, \"UTF-8\");", "-                org.apache.tools.ant.taskdefs.Manifest manifest", "-                        = new org.apache.tools.ant.taskdefs.Manifest(manifestReader);", "-                classpath = manifest.getMainSection().getAttributeValue(\"Class-Path\");", "-            } catch (org.apache.tools.ant.taskdefs.ManifestException e) {", "-                // ignore", "+                classpath = manifest.getMainAttributes()", "+                    .getValue(Attributes.Name.CLASS_PATH);", "-                FileUtils.close(manifestStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6afac5b3b8ff8b28ee627ec58be7425", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void zipFile(File file, ZipOutputStream zOut, String vPath)         throws IOException", "signatureAfterChange": "          protected void zipFile(File file, ZipOutputStream zOut, String vPath)         throws IOException", "diff": ["-        // If the file being added is META-INF/MANIFEST.MF, we merge it with the", "-        // current manifest ", "+        // If the file being added is META-INF/MANIFEST.MF, we warn if it's not the", "+        // one specified in the \"manifest\" attribute - or if it's being added twice, ", "+        // meaning the same file is specified by the \"manifeset\" attribute and in", "+        // a <fileset> element.", "-            InputStream is = null;", "-            try {", "-                is = new FileInputStream(file);", "-                zipManifestEntry(is);", "-            }", "-            catch (IOException e) {", "-                throw new BuildException(\"Unable to read manifest file: \" + file, e);", "-            }", "-            finally {", "-                if (is != null) {", "-                    try {", "-                        is.close();", "-                    }", "-                    catch (IOException e) {", "-                        // do nothing", "-                    }", "-                }", "-            }", "+            log(\"Warning: selected \"+archiveType+\" files include a META-INF/MANIFEST.MF which will be ignored \" +", "+                \"(please use manifest attribute to \"+archiveType+\" task)\", Project.MSG_WARN);", "+"]}]}