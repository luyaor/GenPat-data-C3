{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e5387a1e6ac3740d7f69e0e28d51c33", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48d0828bf6d4523198f992a36589b1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/CompositeMapper.java", "commitBeforeChange": "d8922d6d2dc045114787e20cb1c61772cdfb66bb", "commitAfterChange": "36786a3b76700f546fe04e69598329fcb19fffc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public String[] mapFileName(String sourceFileName)", "signatureAfterChange": "     public String[] mapFileName(String sourceFileName)", "diff": ["+        LinkedList sortedResults = new LinkedList();", "-                    results.addAll(Arrays.asList(mapped));", "+                    for (int i = 0; i < mapped.length; i++) {", "+                        if (!results.contains(mapped[i])) {", "+                            results.add(mapped[i]);", "+                            sortedResults.addLast(mapped[i]);", "+                        }", "+                    }", "-            : (String[]) results.toArray(new String[results.size()]);", "+            : (String[]) sortedResults.toArray(new String[results.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4855c5865c1413f37d560bcbb291e52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/CompositeMapper.java", "commitBeforeChange": "01ca57a3170fe917f71d809eedfb4c3c059d38aa", "commitAfterChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public String[] mapFileName(String sourceFileName)", "signatureAfterChange": "     public String[] mapFileName(String sourceFileName)", "diff": ["-        HashSet results = new HashSet();", "-        LinkedList sortedResults = new LinkedList();", "+        LinkedHashSet results = new LinkedHashSet();", "-                        if (!results.contains(mapped[i])) {", "-                            results.add(mapped[i]);", "-                            sortedResults.addLast(mapped[i]);", "-                        }", "+                        results.add(mapped[i]);", "-            : (String[]) sortedResults.toArray(new String[results.size()]);", "+            : (String[]) results.toArray(new String[results.size()]);"]}]}