{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "040d96c333d77eeaf99d7d6ccddcb413", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c5ce25ffac60273f883267fcf6db18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "cd8a8e0cc286ceb9111845fbd0606efb25669ef8", "commitAfterChange": "960cd2a7117d0fa96b4247c3081da7b5363ba0d8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean sameDefinition(AntTypeDefinition other, Project project)", "signatureAfterChange": "     public boolean sameDefinition(AntTypeDefinition other, Project project)", "diff": ["-        if (other == null) {", "-            return false;", "-        }", "-        if (other.getClass() != this.getClass()) {", "-            return false;", "-        }", "-        if (!(other.getTypeClass(project).equals(getTypeClass(project)))) {", "-            return false;", "-        }", "-        if (!other.getExposedClass(project).equals(getExposedClass(project))) {", "-            return false;", "-        }", "-        if (other.adapterClass != adapterClass) {", "-            return false;", "-        }", "-        if (other.adaptToClass != adaptToClass) {", "-            return false;", "-        }", "-        return true;", "+        return (other != null && other.getClass() == getClass()", "+            && other.getTypeClass(project).equals(getTypeClass(project))", "+            && other.getExposedClass(project).equals(getExposedClass(project))", "+            && other.adapterClass == adapterClass", "+            && other.adaptToClass == adaptToClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83f5e2b6c4e290ac7848c8fa5e881e37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "71815438035567f1cc3e6ba2b21dbfa2cc28a615", "commitAfterChange": "b471ac5e8ccc7bef2a5249dc325ad577740307f7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 43, "signatureBeforeChange": "         public boolean equals(Object obj)", "signatureAfterChange": "         public boolean equals(Object obj)", "diff": ["-         */", "-        public boolean equals(Object obj) {", "-            if (obj == this) {", "-              return true;", "-            }", "-            if (obj != null && obj.getClass().equals(getClass())) {", "-              return equals((Member) obj);", "-            }", "-            return false;", "-        }", "+         */", "+        public boolean equals(Object obj) {", "+            if (obj == this) {", "+              return true;", "+            }", "+            if (obj == null || !obj.getClass().equals(getClass())) {", "+                return false;", "+            }", "+            TemplateElement t = (TemplateElement) obj;", "+            return", "+                (name == null ? t.name == null : name.equals(t.name))", "+                && optional == t.optional", "+                && implicit == t.implicit;"]}]}