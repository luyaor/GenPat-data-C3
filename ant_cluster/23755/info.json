{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ccace6e034444efae3622e6db6ccb46", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107996bba507a05f5b177ff08dfda460", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/store/DefaultPropertyStore.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public PropertyStore createChildStore( final String name )         throws Exception", "signatureAfterChange": "     public PropertyStore createChildStore( final String name )         throws TaskException", "diff": ["-        throws Exception", "+        throws TaskException", "-        final DefaultPropertyStore store = new DefaultPropertyStore( this, m_validator );", "+        // Build the name for the new store", "+        final String thisName = (String)m_contextData.get( TaskContext.NAME );", "+        final String newName;", "+        if( name == null || name.length() == 0 )", "+        {", "+            newName = thisName;", "+        }", "+        else if( thisName.length() == 0 )", "+        {", "+            newName = name;", "+        }", "+        else", "+        {", "+            newName = thisName + \".\" + name;", "+        }", "-        final String newName = getProperty( TaskContext.NAME ) + \".\" + name;", "-        store.setProperty( TaskContext.NAME, newName );", "-", "-        return store;", "+        return new DefaultPropertyStore( newName, this, m_validator );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8d8b58384282147239bb3dec47760b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "commitAfterChange": "86334974455a492f4b76331b6002a45289874ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void startElement(String uri, String name, String qname, AttributeList attrs)             throws SAXParseException", "signatureAfterChange": "         public AntHandler onStartChild(String uri, String name, String qname,                                        Attributes attrs,                                        AntXmlContext context)             throws SAXParseException", "diff": ["-        public void startElement(String uri, String name, String qname, AttributeList attrs)", "+        public AntHandler onStartChild(String uri, String name, String qname,", "+                                       Attributes attrs,", "+                                       AntXmlContext context)", "-            if (name.equals(\"taskdef\")) {", "-                handleTaskdef(name, attrs);", "-            } else if (name.equals(\"typedef\")) {", "-                handleTypedef(name, attrs);", "-            } else if (name.equals(\"property\")) {", "-                handleProperty(name, attrs);", "-            } else if (name.equals(\"target\")) {", "-                handleTarget(name, attrs);", "-            } else if (project.getDataTypeDefinitions().get(name) != null) {", "-                handleDataType(name, attrs);", "+            if (qname.equals(\"taskdef\")) {", "+                return new TaskHandler(null, null, null);", "+            } else if (qname.equals(\"typedef\")) {", "+                return new TaskHandler(null, null, null);", "+            } else if (qname.equals(\"property\")) {", "+                return new TaskHandler(null, null, null);", "+            } else if (qname.equals(\"target\")) {", "+                return new TargetHandler();", "+            } else if (context.project.getDataTypeDefinitions().get(qname) != null) {", "+                return new DataTypeHandler(null);", "-                throw new SAXParseException(\"Unexpected element \\\"\" + name + \"\\\"\", locator);", "+                throw new SAXParseException(\"Unexpected element \\\"\" + qname + \"\\\" \" + name, context.locator);"]}]}