{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5b557335d44e7514c360a158b02df4e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6890c9c6497e923d635a0e0c21dccd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void doCompose( final Tasklet tasklet,                                final Configuration task,                               final ComponentManager componentManager )         throws AntException", "signatureAfterChange": "          protected void doCompose( final Tasklet tasklet, final Configuration task )         throws AntException", "diff": ["-    protected void doCompose( final Tasklet tasklet, ", "-                              final Configuration task,", "-                              final ComponentManager componentManager )", "+    protected void doCompose( final Tasklet tasklet, final Configuration task )", "-", "-        final DefaultComponentManager subComponentManager = ", "-            new DefaultComponentManager( componentManager );", "-", "-        subComponentManager.put( \"org.apache.ant.configuration.Configurer\", m_configurer );", "-", "-            try { ((Composer)tasklet).compose( subComponentManager ); }", "+            try { ((Composer)tasklet).compose( m_componentManager ); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff427748245f758599a46d0d5b2c2e91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "77be1b356a8b5456088e9f314f2e6371e803849c", "commitAfterChange": "3b5944bc9cc8e332a16f02acdea8698b710fea43", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected final void doLoggable( final Task task,                                      final Configuration taskModel,                                      final Logger logger )         throws TaskException", "signatureAfterChange": "      protected final void doLogEnabled( final Task task,                                        final Configuration taskModel,                                        final Logger logger )         throws TaskException", "diff": ["-    protected final void doLoggable( final Task task,", "-                                     final Configuration taskModel,", "-                                     final Logger logger )", "+    protected final void doLogEnabled( final Task task,", "+                                       final Configuration taskModel,", "+                                       final Logger logger )", "-        if( task instanceof Loggable )", "+        if( task instanceof LogEnabled )", "-            try { ((Loggable)task).setLogger( logger ); }", "+            try { ((LogEnabled)task).enableLogging( logger ); }"]}]}