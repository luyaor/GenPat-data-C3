{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92524d806119a3d82632253dcb7a14d8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09542e883dd73af11bdf8b6165f2c931", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1c5c68f3ed2854776e2377bf5486caadc8ecc5b8", "commitAfterChange": "f665a4d33564ecc12851996978a9847024643829", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setExtra(byte[] extra) throws RuntimeException", "signatureAfterChange": "     public void setExtra(byte[] extra) throws RuntimeException", "diff": ["-            ZipExtraField[] local = ExtraFieldUtils.parse(extra, true);", "+            ZipExtraField[] local =", "+                ExtraFieldUtils.parse(extra, true,", "+                                      ExtraFieldUtils.UnparseableExtraField.READ);", "-            throw new RuntimeException(e.getMessage(), e);", "+            // actually this is not be possible as of Ant 1.8.1", "+            throw new RuntimeException(\"Error parsing extra fields for entry: \"", "+                                       + getName() + \" - \" + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c70df551a3f9479518b51f55a45058", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0efc2f817257f69d7cdc67c016b1caac68465f1d", "commitAfterChange": "939a6bbf2fb97ec29ecf79c86013846656d8751c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void addText(Project project, Object element, String text)         throws BuildException", "signatureAfterChange": "     public void addText(Project project, Object element, String text)         throws BuildException", "diff": ["-            } else {", "-                // Not whitespace - fail", "-                String msg = project.getElementName(element)", "-                    + \" doesn't support nested text data (\\\"\"", "-                    + condenseText(text) + \"\\\").\";", "-                throw new BuildException(msg);", "+            // Not whitespace - fail", "+            throw new BuildException(project.getElementName(element)", "+                    + \" doesn't support nested text data (\\\"\" + condenseText(text) + \"\\\").\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88eddab682a41915d251507d9e92b562", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "b5b99c769a21d3602ee35948cf004925f03464ba", "commitAfterChange": "25253f3faa839d0341bdfe9eecb06d8791fcf8ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public String apply( String elem )", "signatureAfterChange": "         public String apply( String elem )", "diff": ["-                throw new BuildException( \"Both 'from' and 'to' must be set in a map entry\" );", "+                throw new BuildException( \"Both 'from' and 'to' must be set \"", "+                                          + \"in a map entry\" );", "-            // If the element starts with the configured prefix, then convert the prefix", "-            // to the configured 'to' value.", "+            // If the element starts with the configured prefix, then", "+            // convert the prefix to the configured 'to' value."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a12803c8effc8d92edd68cc6c28133", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "commitAfterChange": "3c96ebf5a37f8c1ba7e102bad6a696153c499e80", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            if (srcPath == null) {", "+                throw new BuildException(\"srcdir attribute must be set\", ", "+                    location);", "+            }", "+", "-                throw new BuildException(\"srcdir attribute must be set!\", ", "+                throw new BuildException(\"srcdir attribute must be non-empty\", ", "-                                if (classpathFile.lastModified() > info.absoluteFile.lastModified()) {", "+                                if (classpathFile.lastModified() ", "+                                    > (info.absoluteFile.lastModified() + TIME_TOLERANCE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e1c0795cf282f3231291e1df756a22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAudit.java", "commitBeforeChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "commitAfterChange": "24eb5693d6b7363262ea941cac63d15230aa1aab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void checkOptions() throws BuildException", "signatureAfterChange": "     protected void checkOptions() throws BuildException", "diff": ["-            throw new BuildException(\"'searchpath' element must be set when looking for 'unused' declarations.\");", "+            throw new BuildException(\"'searchpath' element must be set when \"", "+                + \"looking for 'unused' declarations.\");", "-            log(\"'searchpath' element ignored. 'unused' attribute is disabled.\", Project.MSG_WARN);", "+            log(\"'searchpath' element ignored. 'unused' attribute is disabled.\",", "+                Project.MSG_WARN);"]}]}