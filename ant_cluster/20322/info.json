{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2417afedfad74ab84b5476110315535d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0edc689e2b3b76215423fe42a06605ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/converter/AbstractConverter.java", "commitBeforeChange": "bdc61a32291b2c159193085f23e6f16d28b910e5", "commitAfterChange": "1125ea2c35794791145083b7f5ab5656698500cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( final Class destination, final Object original, Context context )         throws ConverterException", "signatureAfterChange": "     public Object convert( final Class destination, final Object original, Context context )         throws ConverterException", "diff": ["-            throw new IllegalArgumentException( \"Destination type \" + destination.getName() +", "-                                                \" is not equal to \" + m_destination );", "+            final String message =", "+                REZ.getString( \"bad-destination.error\", destination.getName(), m_destination );", "+            throw new IllegalArgumentException( message );", "-            throw new IllegalArgumentException( \"Object '\" + original + \"' is not an \" +", "-                                                \"instance of \" + m_source.getName() );", "+            final String message =", "+                REZ.getString( \"bad-instance.error\", original, m_source.getName() );", "+            throw new IllegalArgumentException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0a8c316cd873fc8e1140748292c70a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void checkDirectory( final File file, final String name )         throws Exception", "signatureAfterChange": "     private void checkDirectory( final File file, final String name )         throws Exception", "diff": ["-            throw new Exception( name + \" (\" + file + \") does not exist\" );", "+            final String message = REZ.getString( \"file-no-exist.error\", name, file );", "+            throw new Exception( message );", "-            throw new Exception( name + \" (\" + file + \") is not a directory\" );", "+            final String message = REZ.getString( \"file-not-dir.error\", name, file );", "+            throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bb909474c3c14cba5b9d873858ffd4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private DefaultProject buildProject( final File file,                                          final Configuration configuration )         throws Exception", "signatureAfterChange": "     private DefaultProject buildProject( final File file,                                          final Configuration configuration )         throws Exception", "diff": ["-            throw new Exception( \"Project file must be enclosed in project element\" );", "+            final String message = REZ.getString( \"ant.no-project-element.error\" );", "+            throw new Exception( message );", "-        getLogger().debug( \"Project \" + file + \" base directory: \" + baseDirectory );", "+        if( getLogger().isDebugEnabled() )", "+        {", "+            final String message = REZ.getString( \"ant.project-banner.notice\", file, baseDirectory );", "+            getLogger().debug( message );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55526c26cbe9724dc5415bef97974c65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/type/MultiSourceTypeFactory.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object create( final String name )         throws TypeException", "signatureAfterChange": "     public Object create( final String name )         throws TypeException", "diff": ["-        if( null == factory && null != m_parent ) ", "+        if( null == factory && null != m_parent )", "-        if( null == factory ) ", "+        if( null == factory )", "-            throw new TypeException( \"Failed to locate factory for '\" + name + \"'\" );", "+            final String message = REZ.getString( \"no-factory.error\", name );", "+            throw new TypeException( message );", "-                throw new TypeException( \"Object '\" + name + \"' is not of \" +", "-                                         \"correct Type (\" + m_type.getName() + \")\" );", "+                final String message = REZ.getString( \"no-factory.error\", name, m_type.getName() );", "+                throw new TypeException( message );"]}]}