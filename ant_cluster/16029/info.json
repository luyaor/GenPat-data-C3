{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1dc4622598da77309c64758c95a0e22", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2095868d046a6a8f18da3329e1522adf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "+    @Override", "+\tpublic void execute() throws BuildException {", "-        int numberOfInputs = (inputFile != null ? 1 : 0)", "+        final int numberOfInputs = (inputFile != null ? 1 : 0)", "-        StringBuffer output = new StringBuffer();", "+        final StringBuffer output = new StringBuffer();", "-                    BufferedReader br = new BufferedReader(", "+                    final BufferedReader br = new BufferedReader(", "-                } catch (IOException e) {", "+                } catch (final IOException e) {", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4e6b9d9265cb2a1fee30335f77aa6f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/PresentSelector.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     @Override \tpublic boolean isSelected(final File basedir, final String filename, final File file)", "diff": ["-    public boolean isSelected(File basedir, String filename, File file) {", "+    @Override", "+\tpublic boolean isSelected(final File basedir, final String filename, final File file) {", "-        String[] destfiles = map.mapFileName(filename);", "+        final String[] destfiles = map.mapFileName(filename);", "-        String destname = destfiles[0];", "-        File destfile = FileUtils.getFileUtils().resolveFile(targetdir, destname);", "+        final String destname = destfiles[0];", "+        final File destfile = FileUtils.getFileUtils().resolveFile(targetdir, destname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5d389bd482e9c5cab737b5ab9e1229", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      private AttributeSetter getEnumSetter(         final Class<?> reflectedArg, final Method m, Class<?> arg)", "signatureAfterChange": "      private AttributeSetter getEnumSetter(         final Class<?> reflectedArg, final Method m, final Class<?> arg)", "diff": ["-        final Class<?> reflectedArg, final Method m, Class<?> arg) {", "+        final Class<?> reflectedArg, final Method m, final Class<?> arg) {", "-                public void set(Project p, Object parent, String value)", "+                @Override", "+\t\t\t\tpublic void set(final Project p, final Object parent, final String value)", "+\t\t\t\t\t\tfinal", "-                    } catch (IllegalArgumentException e) {", "+                    } catch (final IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b724ffa0a77609f50f40bb5e553130", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void store(OutputStream out, String header) throws IOException", "signatureAfterChange": "      @Override \tpublic void store(final OutputStream out, final String header) throws IOException", "diff": ["-    public void store(OutputStream out, String header) throws IOException {", "-        OutputStreamWriter osw = new OutputStreamWriter(out, ResourceUtils.ISO_8859_1);", "+    @Override", "+\tpublic void store(final OutputStream out, final String header) throws IOException {", "+        final OutputStreamWriter osw = new OutputStreamWriter(out, ResourceUtils.ISO_8859_1);", "-        int totalLines = logicalLines.size();", "+        final int totalLines = logicalLines.size();", "-            } catch (java.text.ParseException pe) {", "+            } catch (final java.text.ParseException pe) {", "-        for (Iterator i = logicalLines.subList(skipLines, totalLines).iterator();", "-             i.hasNext(); ) {", "-            LogicalLine line = (LogicalLine) i.next();", "+        for (final Iterator i = logicalLines.subList(skipLines, totalLines).iterator();", "+             i.hasNext();) {", "+            final LogicalLine line = (LogicalLine) i.next();"]}]}