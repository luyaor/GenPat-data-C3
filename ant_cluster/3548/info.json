{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1baadac14234aa2bfe96a3a8080a40f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01751c95858f8a3e3fbbbc9df44e6efc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        StringBuffer b = new StringBuffer();", "-        TreeMap sorted = new TreeMap(getProperties());", "-        for (Iterator i = sorted.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry e = (Map.Entry) i.next();", "+        StringBuilder b = new StringBuilder();", "+        TreeMap<String, Object> sorted = new TreeMap<String, Object>(getPropertyMap());", "+        for (Entry<String, Object> e : sorted.entrySet()) {", "-            b.append(e.getKey().toString());", "+            b.append(e.getKey());", "-            b.append(e.getValue().toString());", "+            b.append(e.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "352a5d64566b56316d66acbe9b9f5fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private UnknownElement copy(UnknownElement ue, boolean nested)", "signatureAfterChange": "      private UnknownElement copy(UnknownElement ue, boolean nested)", "diff": ["-        Map m = ue.getWrapper().getAttributeMap();", "-        for (Iterator i = m.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry entry = (Map.Entry) i.next();", "+        Map<String, Object> m = ue.getWrapper().getAttributeMap();", "+        for (Map.Entry<String, Object> entry : m.entrySet()) {", "-                (String) entry.getKey(),", "+                entry.getKey(),", "-        Enumeration e = ue.getWrapper().getChildren();", "+        Enumeration<RuntimeConfigurable> e = ue.getWrapper().getChildren();", "-            RuntimeConfigurable r = (RuntimeConfigurable) e.nextElement();", "+            RuntimeConfigurable r = e.nextElement();", "-                (MacroDef.TemplateElement) getNsElements().get(tag);", "+                getNsElements().get(tag);", "-                for (Iterator i = unknownElements.iterator();", "+                for (Iterator<Task> i = unknownElements.iterator();", "-                List list = presentElement.getChildren();", "+                List<UnknownElement> list = presentElement.getChildren();", "-                    for (Iterator i = list.iterator();", "+                    for (Iterator<UnknownElement> i = list.iterator();", "-                            = copy((UnknownElement) i.next(), true);", "+                            = copy(i.next(), true);"]}]}