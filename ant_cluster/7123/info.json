{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3eafe805b702832ff1e1536b0efb102e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab5bb86c7f0df0b5a3321194271b828f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "776c80d8ec4791029cc3601b7a6d0a1b0a45bc24", "commitAfterChange": "866b754aadc0d8f482a569e0fd9e136dd7df824c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["-    public void startTestSuite(JUnitTest suite) throws BuildException {", "-    }", "+    public void startTestSuite(JUnitTest suite) {", "+        if (output == null) {", "+            return; // Quick return - no output do nothing.", "+        }", "+        output.write(sb.toString());", "+        output.flush();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d33fb1822c6c308d916017083d328f4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/bootstrap/Bootstrap2.java", "commitBeforeChange": "9b36df2db1d2c72d0b8712357612829ce54da3a5", "commitAfterChange": "e9211a1fb8fa0ce4abd0b966fc81c7cd1ae75531", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private static void jarDir(File dir, String prefix, ZipOutputStream zos) throws          IOException", "signatureAfterChange": "          private static void jarDir(File dir, String prefix, JarOutputStream jos) throws          IOException", "diff": ["-    private static void jarDir(File dir, String prefix, ZipOutputStream zos) throws ", "+    private static void jarDir(File dir, String prefix, JarOutputStream jos) throws ", "-                jarDir(f, prefix + \"/\" + files[i], zos);", "+                String zipEntryName;", "+                if (!prefix.equals(\"\")) {", "+                    zipEntryName = prefix + \"/\" + files[i];", "+                } else {", "+                    zipEntryName = files[i];", "+                }", "+                ZipEntry ze = new ZipEntry(zipEntryName);", "+                jos.putNextEntry(ze);", "+                jarDir(f, zipEntryName, jos);", "-                ZipEntry ze = new ZipEntry(prefix + \"/\" + files[i]);", "-                zos.putNextEntry(ze);", "+                String zipEntryName;", "+                if (!prefix.equals(\"\")) {", "+                    zipEntryName = prefix + \"/\" + files[i];", "+                } else {", "+                    zipEntryName = files[i];", "+                }", "+                ZipEntry ze = new ZipEntry(zipEntryName);", "+                jos.putNextEntry(ze);", "-                    zos.write(buf, 0, count);", "+                    jos.write(buf, 0, count);"]}]}