{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12306530e0890d75d54f32309c04ed4b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d1ad2d74f2d9770a0623fd3d974ff3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/build/Checksum.java", "commitBeforeChange": "67d542191a40e64a06ac9e54e42216048d729254", "commitAfterChange": "2e60e0841cb84a45444da250e84915237a686940", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private boolean z( final File src, boolean checksumMatches )         throws TaskException", "signatureAfterChange": "      private boolean z( final File src, final boolean checksumMatches )         throws TaskException", "diff": ["-    private boolean z( final File src, boolean checksumMatches )", "+    private boolean z( final File src, final boolean checksumMatches )", "+        boolean match = checksumMatches;", "-            String checksum = \"\";", "+            final StringBuffer sb = new StringBuffer();", "-                    checksum += \"0\";", "+                    sb.append( '0' );", "-                checksum += hexStr;", "+                sb.append( hexStr );", "+            final String checksum = sb.toString();", "+", "-            Object destination = m_includeFileMap.get( src );", "+            final Object destination = m_includeFileMap.get( src );", "-                checksumMatches = checksum.equals( m_property );", "+                match = checksum.equals( m_property );", "-        return checksumMatches;", "+        return match;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd04f8b317622cea6d19f622c192427d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "af7fb0127af235ba48a1e9ada6f7fc45847e53fa", "commitAfterChange": "a794b2b204995a03c2e3c117ff2c4749710e6840", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setTablength(int tlength) throws BuildException", "signatureAfterChange": "     public void setTablength(int tlength) throws BuildException", "diff": ["-        if (tlength < 2 || (tlength & (tlength-1)) != 0) {", "-            throw new BuildException(\"tablength must be a positive power of 2\",", "-                                     location);", "+        if (tlength < 2 || tlength >80) {", "+            throw new BuildException(\"tablength must be between 2 and 80\",", "+\t\t\t\t     location);", "+        StringBuffer sp = new StringBuffer();", "+\tfor (int i = 0; i < tablength; i++) {", "+\t    sp.append(' ');", "+\t}", "+        spaces = sp.toString();"]}]}