{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9446c618a0786256b0c74aec56e0e04", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b227cca564eae86bac9c26ae036739", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "fff434e903ebdcb26009b4f11722e355efcd203c", "commitAfterChange": "f20fc56a10afd37bcb8af902f0f443324b0b648c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected int executeExternalCompile( String[] args, int firstFileName )         throws TaskException", "signatureAfterChange": "     protected int executeExternalCompile( String[] args, int firstFileName )         throws TaskException", "diff": ["-                final Execute2 exe = new Execute2();", "+                final ExecManager execManager = (ExecManager)m_attributes.getService( ExecManager.class );", "+                final Execute2 exe = new Execute2( execManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96ef8cfd5f9d43fdd3b0ae9ea61df78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "fff434e903ebdcb26009b4f11722e355efcd203c", "commitAfterChange": "f20fc56a10afd37bcb8af902f0f443324b0b648c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected int executeExternalCompile( String[] args, int firstFileName )         throws TaskException", "signatureAfterChange": "     protected int executeExternalCompile( String[] args, int firstFileName )         throws TaskException", "diff": ["-                final Execute2 exe = new Execute2();", "+                final ExecManager execManager = (ExecManager)m_attributes.getService( ExecManager.class );", "+                final Execute2 exe = new Execute2( execManager );"]}]}