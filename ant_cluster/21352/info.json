{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f7e2f641c7f06d5602d69d5baec7c6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cdb8791836bcd4c510c4bd906b0d4dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void service( final ServiceManager serviceManager )         throws ServiceException", "signatureAfterChange": "     public void setRootExecutionFrame( final ExecutionFrame frame ) throws Exception", "diff": ["-    public void service( final ServiceManager serviceManager )", "-        throws ServiceException", "+    public void setRootExecutionFrame( final ExecutionFrame frame ) throws Exception", "-        m_serviceManager = serviceManager;", "-        m_typeManager = (TypeManager)serviceManager.lookup( TypeManager.ROLE );", "-        m_executor = (Executor)serviceManager.lookup( Executor.ROLE );", "-        m_deployer = (Deployer)serviceManager.lookup( Deployer.ROLE );", "+        m_baseStore = frame.getProperties();", "+        m_serviceManager = frame.getServiceManager();", "+        m_typeManager = (TypeManager)m_serviceManager.lookup( TypeManager.ROLE );", "+        m_executor = (Executor)m_serviceManager.lookup( Executor.ROLE );", "+        m_deployer = (Deployer)m_serviceManager.lookup( Deployer.ROLE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51cadd08b1545659dfa71f2110cb3d3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DateSelector.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["-                if (MILLIS_KEY.equalsIgnoreCase(paramname)) {", "+                if (paramname != null) {", "+                    paramname = paramname.toLowerCase(Locale.ENGLISH);", "+                }", "+                if (MILLIS_KEY.equals(paramname)) {", "-                } else if (DATETIME_KEY.equalsIgnoreCase(paramname)) {", "+                } else if (DATETIME_KEY.equals(paramname)) {", "-                } else if (CHECKDIRS_KEY.equalsIgnoreCase(paramname)) {", "+                } else if (CHECKDIRS_KEY.equals(paramname)) {", "-                } else if (GRANULARITY_KEY.equalsIgnoreCase(paramname)) {", "+                } else if (GRANULARITY_KEY.equals(paramname)) {", "-                } else if (WHEN_KEY.equalsIgnoreCase(paramname)) {", "+                } else if (WHEN_KEY.equals(paramname)) {", "-                } else if (PATTERN_KEY.equalsIgnoreCase(paramname)) {", "+                } else if (PATTERN_KEY.equals(paramname)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5929db6dfa99b3e8e7c04fb9368ff4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/customizer/DynamicCustomizer.java", "commitBeforeChange": "c87973d59c91244a8656cdc2ac5c1d84f9d47f34", "commitAfterChange": "dba8c836d0d1bd4f625deb9fb22aaa457410e4ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private PropertyEditor getEditorForProperty(PropertyDescriptor prop)", "signatureAfterChange": "     private PropertyEditor getEditorForProperty(PropertyDescriptor prop)", "diff": ["+        // In the worse case we resort to the generic editor for Object types.", "+        if(retval == null) {", "+            retval = PropertyEditorManager.findEditor(Object.class);", "+        }", "+"]}]}