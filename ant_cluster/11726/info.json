{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb23f912ea2cb682718c12de0058b33b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb05971b8ed76ed948b1c4f0ad98b1b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "a729691fff76979d9b96b34b595a93996d0d4bdc", "commitAfterChange": "912d48e5910926bc8c2270e288587b26a4ed4443", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public void printElementDecl(PrintWriter out, Project p,                                      String name, Class element)", "signatureAfterChange": "         public void printElementDecl(PrintWriter out, Project p,                                      String name, Class element)", "diff": ["-                } else if (type.getSuperclass() != null && type.getSuperclass().getName().equals(\"java.lang.Enum\")) {", "+                } else if (type.getSuperclass() != null", "+                           && type.getSuperclass().getName().equals(\"java.lang.Enum\")) {", "-                        Object[] values = (Object[]) type.getMethod(\"values\", null).invoke(null, null);", "+                        Object[] values = (Object[]) type.getMethod(\"values\", (Class[])  null)", "+                            .invoke(null, (Object[]) null);", "-                                sb.append(type.getMethod(\"name\", null).invoke(values[i], null));", "+                                sb.append(type.getMethod(\"name\", (Class[]) null)", "+                                          .invoke(values[i], (Object[]) null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73023cb81ff19873c2c2e057c9ca29ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DOMElementWriter.java", "commitBeforeChange": "bd79701cef51ac778891ad7112ee49ecb2415caa", "commitAfterChange": "d1895cd5aac83ffcc3961f51359c6fe473384429", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void write(Element element, Writer out, int indent,                        String indentWith)         throws IOException", "signatureAfterChange": "     public void write(Element element, Writer out, int indent,                        String indentWith)         throws IOException", "diff": ["-            if (child.getNodeType() == Node.ELEMENT_NODE) {", "+            switch (child.getNodeType()) {", "+                ", "+            case Node.ELEMENT_NODE:", "-            }", "-", "-            if (child.getNodeType() == Node.TEXT_NODE) {", "+                break;", "+                ", "+            case Node.TEXT_NODE:", "+            case Node.CDATA_SECTION_NODE:", "+                break;", "+", "+            case Node.ENTITY_REFERENCE_NODE:", "+                out.write('&');", "+                out.write(child.getNodeName());", "+                out.write(';');", "+                break;", "+", "+            case Node.PROCESSING_INSTRUCTION_NODE:", "+                out.write(\"<?\");", "+                out.write(child.getNodeName());", "+                String data = child.getNodeValue();", "+                if ( data != null && data.length() > 0 ) {", "+                    out.write(' ');", "+                    out.write(data);", "+                }", "+                out.write(\"?>\");", "+                break;"]}]}