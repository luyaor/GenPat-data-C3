{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1488136a2f399b0a407fb388da53020", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f68487b37d22c7a377c256c79c53adf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "6540a295cd786c80c28c14f6c544aa1d64ab3778", "commitAfterChange": "5cdfabc038e26f67080037ea0c7ad6ab284d821c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 27, "signatureBeforeChange": "      protected String getElementName(Project project, Object element)", "signatureAfterChange": "     protected String getElementName(Project project, Object element)", "diff": ["-    protected String getElementName(Project project, Object element)", "-    {", "-        Hashtable elements = project.getTaskDefinitions();", "-        String typeName = \"task\";", "-        if (!elements.contains( element.getClass() ))", "-        {", "-            elements = project.getDataTypeDefinitions();", "-            typeName = \"data type\";", "-            if (!elements.contains( element.getClass() ))", "-            {", "-                elements = null;", "-            }", "-        }", "-", "-        if (elements != null)", "-        {", "-            Enumeration e = elements.keys();", "-            while (e.hasMoreElements())", "-            {", "-                String elementName = (String) e.nextElement();", "-                Class elementClass = (Class) elements.get( elementName );", "-                if ( element.getClass().equals( elementClass ) )", "-                {", "-                    return \"The <\" + elementName + \"> \" + typeName;", "-                }", "-            }", "-        }", "-", "-        return \"Class \" + element.getClass().getName();", "+     */", "+    protected String getElementName(Project project, Object element) {", "+        return project.getElementName(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8379508ae3a7bf6a5153c12ddb4d88b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Javah.java", "commitBeforeChange": "5ffacddada00339f7c26549ff306e1d4fa04fc41", "commitAfterChange": "13b07b313fdc7ab2620f71517ab16698be496f24", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 32, "signatureBeforeChange": "     protected void logAndAddFilesToCompile(Commandline cmd)", "signatureAfterChange": "     protected void logAndAddFilesToCompile(Commandline cmd)", "diff": ["-        int n = 0;", "-        if (cls != null) {", "-            StringTokenizer tok = new StringTokenizer(cls, \",\", false);", "-            while (tok.hasMoreTokens()) {", "-                String aClass = tok.nextToken().trim();", "-                cmd.createArgument().setValue(aClass);", "-                niceClassList.append(\"    \" + aClass + lSep);", "-                n++;", "-            }", "-        }", "-", "-        Enumeration e = classes.elements();", "-        while (e.hasMoreElements()) {", "-            ClassArgument arg = (ClassArgument) e.nextElement();", "-            String aClass = arg.getName();", "-            cmd.createArgument().setValue(aClass);", "-            niceClassList.append(\"    \" + aClass + lSep);", "-            n++;", "+        String[] c = getClasses();", "+        for (int i = 0; i < c.length; i++) {", "+            cmd.createArgument().setValue(c[i]);", "+            niceClassList.append(\"    \" + c[i] + lSep);", "-        if (n > 1) {", "+        if (c.length > 1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f00bfb536e578801bfec337978c8b162", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "575646714ea2ebaf97a6290ea7d7585403175fb5", "commitAfterChange": "048caece4061746150290b0264128118a4be3870", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected String getElementName(Project project, Object element)", "signatureAfterChange": "     protected String getElementName(Project project, Object element)", "diff": ["-        Hashtable elements = project.getTaskDefinitions();", "-        String typeName = \"task\";", "-        if (!elements.contains( element.getClass() ))", "-        {", "-            elements = project.getDataTypeDefinitions();", "-            typeName = \"data type\";", "-            if (!elements.contains( element.getClass() ))", "-            {", "-                elements = null;", "-            }", "-        }", "-", "-        if (elements != null)", "-        {", "-            Enumeration e = elements.keys();", "-            while (e.hasMoreElements())", "-            {", "-                String elementName = (String) e.nextElement();", "-                Class elementClass = (Class) elements.get( elementName );", "-                if ( element.getClass().equals( elementClass ) )", "-                {", "-                    return \"The <\" + elementName + \"> \" + typeName;", "-                }", "-            }", "-        }", "-", "-        return \"Class \" + element.getClass().getName();", "+        return project.getElementName(element);"]}]}