{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c27eab422eaa2831aaccfaffe40c32f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ce2913ca2bd5eb6166a25e6fc8bfe5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-", "-        throws BuildException", "+        throws TaskException", "-", "-            throw new BuildException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "-            throw new BuildException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "-            FileSet targetFS = ( FileSet )enumTargetSets.nextElement();", "+            FileSet targetFS = (FileSet)enumTargetSets.nextElement();", "-                File dest = new File( targetFS.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFS.getDir( project ), targetFiles[ i ] );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-            FileList targetFL = ( FileList )enumTargetLists.nextElement();", "+            FileList targetFL = (FileList)enumTargetLists.nextElement();", "-                File dest = new File( targetFL.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFL.getDir( project ), targetFiles[ i ] );", "-                    log( targetFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                    log( targetFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-                FileSet sourceFS = ( FileSet )enumSourceSets.nextElement();", "+                FileSet sourceFS = (FileSet)enumSourceSets.nextElement();", "-                    File src = new File( sourceFS.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFS.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                FileList sourceFL = ( FileList )enumSourceLists.nextElement();", "+                FileList sourceFL = (FileList)enumSourceLists.nextElement();", "-                    File src = new File( sourceFL.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFL.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        log( sourceFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                        log( sourceFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                }while ( upToDate && ( ++i < sourceFiles.length ) );", "+                } while( upToDate && ( ++i < sourceFiles.length ) );", "-            for( Enumeration e = allTargets.elements(); e.hasMoreElements();  )", "+            for( Enumeration e = allTargets.elements(); e.hasMoreElements(); )", "-                File fileToRemove = ( File )e.nextElement();", "+                File fileToRemove = (File)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ec8e23c59e0d7d43b66a879810c55b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-", "-        throws BuildException", "+        throws TaskException", "-", "-            throw new BuildException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "-            throw new BuildException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "-            FileSet targetFS = ( FileSet )enumTargetSets.nextElement();", "+            FileSet targetFS = (FileSet)enumTargetSets.nextElement();", "-                File dest = new File( targetFS.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFS.getDir( project ), targetFiles[ i ] );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-            FileList targetFL = ( FileList )enumTargetLists.nextElement();", "+            FileList targetFL = (FileList)enumTargetLists.nextElement();", "-                File dest = new File( targetFL.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFL.getDir( project ), targetFiles[ i ] );", "-                    log( targetFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                    log( targetFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-                FileSet sourceFS = ( FileSet )enumSourceSets.nextElement();", "+                FileSet sourceFS = (FileSet)enumSourceSets.nextElement();", "-                    File src = new File( sourceFS.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFS.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                FileList sourceFL = ( FileList )enumSourceLists.nextElement();", "+                FileList sourceFL = (FileList)enumSourceLists.nextElement();", "-                    File src = new File( sourceFL.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFL.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        log( sourceFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                        log( sourceFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                }while ( upToDate && ( ++i < sourceFiles.length ) );", "+                } while( upToDate && ( ++i < sourceFiles.length ) );", "-            for( Enumeration e = allTargets.elements(); e.hasMoreElements();  )", "+            for( Enumeration e = allTargets.elements(); e.hasMoreElements(); )", "-                File fileToRemove = ( File )e.nextElement();", "+                File fileToRemove = (File)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcb9628c09a94183d346948515117654", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "a45ed20242bd108126f9f35b642ceee711b4d2e5", "commitAfterChange": "63eed537b696553cbbb7a98f85ab9f8d2e8e8dfa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        long oldestTargetTime = 0;", "+        File oldestTarget = null;", "+              }", "+", "+              if (oldestTarget == null ||", "+                  dest.lastModified() < oldestTargetTime) {", "+                  oldestTargetTime = dest.lastModified();", "+                  oldestTarget = dest;", "-           }", "-        }", "-", "-        //", "-        // Check targets vs source files specified via filesets", "-        //", "-        if (upToDate) {", "-           Enumeration enumSourceSets = sourceFileSets.elements();", "-           while (upToDate && enumSourceSets.hasMoreElements()) {", "-          ", "-              FileSet sourceFS          = (FileSet) enumSourceSets.nextElement();", "-              DirectoryScanner sourceDS = sourceFS.getDirectoryScanner(project);", "-              String[] sourceFiles      = sourceDS.getIncludedFiles();", "-", "-              for (int i=0; upToDate && i < sourceFiles.length; i++) {", "-                 File src = new File(sourceFS.getDir(project), sourceFiles[i]);", "-", "-                 if (src.lastModified() > now) {", "-                    log(\"Warning: \"+sourceFiles[i]+\" modified in the future.\", ", "-                        Project.MSG_WARN);", "-                 }", "-", "-                 Enumeration enumTargets = allTargets.elements();", "-                 while (upToDate && enumTargets.hasMoreElements()) {", "-                 ", "-                    File dest = (File)enumTargets.nextElement();", "-                    if (src.lastModified() > dest.lastModified()) {", "-                       log(dest.getPath() + \" is out of date with respect to \" +", "-                                sourceFiles[i], Project.MSG_VERBOSE);", "-                       upToDate = false;", "-", "-                    }", "-                 }", "+              if (oldestTarget == null ||", "+                  dest.lastModified() < oldestTargetTime) {", "+                  oldestTargetTime = dest.lastModified();", "+                  oldestTarget = dest;", "+        }", "+        if (oldestTarget != null) {", "+            log(oldestTarget + \" is oldest target file\", Project.MSG_VERBOSE);", "+        } else { ", "+            // no target files, then we cannot remove any target files and", "+            // skip the following tests right away", "+            upToDate = false;", "-                 Enumeration enumTargets = allTargets.elements();", "-                 while (upToDate && enumTargets.hasMoreElements()) {", "-                 ", "-                    File dest = (File)enumTargets.nextElement();", "-                    ", "-                    if (src.lastModified() > dest.lastModified()) {", "-                       log(dest.getPath() + \" is out of date with respect to \" +", "-                                sourceFiles[i], Project.MSG_VERBOSE);", "-                       upToDate = false;", "-", "-                    }", "+                 if (src.lastModified() > oldestTargetTime) {", "+                    upToDate = false;", "+                    log(oldestTarget + \" is out of date with respect to \" +", "+                        sourceFiles[i], Project.MSG_VERBOSE);", "+        //", "+        // Check targets vs source files specified via filesets", "+        //", "+        if (upToDate) {", "+           Enumeration enumSourceSets = sourceFileSets.elements();", "+           while (upToDate && enumSourceSets.hasMoreElements()) {", "+          ", "+              FileSet sourceFS          = (FileSet) enumSourceSets.nextElement();", "+              DirectoryScanner sourceDS = sourceFS.getDirectoryScanner(project);", "+              String[] sourceFiles      = sourceDS.getIncludedFiles();", "+", "+              for (int i=0; upToDate && i < sourceFiles.length; i++) {", "+                 File src = new File(sourceFS.getDir(project), sourceFiles[i]);", "+", "+                 if (src.lastModified() > now) {", "+                    log(\"Warning: \"+sourceFiles[i]+\" modified in the future.\", ", "+                        Project.MSG_WARN);", "+                 }", "+", "+                 if (src.lastModified() > oldestTargetTime) {", "+                    upToDate = false;", "+                    log(oldestTarget + \" is out of date with respect to \" +", "+                        sourceFiles[i], Project.MSG_VERBOSE);", "+                 }", "+              }", "+           }", "+        }", "+"]}]}