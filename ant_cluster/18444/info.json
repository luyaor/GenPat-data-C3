{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e446a8da0d1976c8fb59db4dc4c0442", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6459ec303c0ccfc6ae488662d42eb73a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "dba2c632cb93a7306319f89d0f2f198ac9085b0f", "commitAfterChange": "0aa2b2528ff92c3786e50f82ea65acf4d134c260", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     public String diagnoseCreationFailure(String componentName, String type)", "signatureAfterChange": "     public String diagnoseCreationFailure(String componentName, String type)", "diff": ["-        boolean probablyIDE=false;", "+        boolean probablyIDE = false;", "-        if(anthome!=null) {", "-            File antHomeLibDir = new File(anthome,\"lib\");", "-            antHomeLib=antHomeLibDir.getAbsolutePath();", "+        if (anthome != null) {", "+            File antHomeLibDir = new File(anthome, \"lib\");", "+            antHomeLib = antHomeLibDir.getAbsolutePath();", "-            probablyIDE=true;", "-            antHomeLib = \"ANT_HOME\" +File.separatorChar +\"lib\";", "+            probablyIDE = true;", "+            antHomeLib = \"ANT_HOME\" + File.separatorChar + \"lib\";", "-        if(probablyIDE) {", "+        if (probablyIDE) {", "-        String dirListing=dirListingText.toString();", "-        ", "+        String dirListing = dirListingText.toString();", "+", "-            out.println(\"Action: Check that any <presetdef>/<macrodef> declarations have taken place.\");", "+            out.println(\"Action: Check that any <presetdef>/<macrodef>\"", "+                        + \" declarations have taken place.\");", "-                    out.println(\"       you need the JAR files that the optional tasks depend upon.\");", "-                    out.println(\"       Ant's optional task dependencies are listed in the manual.\");", "+                    out.println(\"       you need the JAR files that the\"", "+                                + \" optional tasks depend upon.\");", "+                    out.println(\"       Ant's optional task dependencies are\"", "+                                + \" listed in the manual.\");", "-                    out.println(\"       This class may be in a separate JAR that is not installed.\");", "+                    out.println(\"       This class may be in a separate JAR\"", "+                                + \" that is not installed.\");", "-                out.println(\"Action: Determine what extra JAR files are needed, and place them in one of:\");", "+                out.println(\"Action: Determine what extra JAR files are\"", "+                            + \" needed, and place them in one of:\");", "-                    out.println(\"Action: Determine what extra JAR files are needed, and place them in:\");", "+                    out.println(\"Action: Determine what extra JAR files are\"", "+                                + \" needed, and place them in:\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b238c428973562e3423ea456ac68c8f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/j2ee/JonasHotDeploymentTool.java", "commitBeforeChange": "f463bd2cab8b132695d8bf60c889212628eba281", "commitAfterChange": "6ee5317ca34e43ca1d62e890dcf034eb44cca649", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void validateAttributes() throws BuildException", "signatureAfterChange": "     public void validateAttributes() throws BuildException", "diff": ["-            java.createJvmarg().setValue(\"-Djava.security.policy=\" + jonasroot + \"/config/java.policy\");", "+            java.createJvmarg().setValue(\"-Djava.security.policy=\" + jonasroot", "+                + \"/config/java.policy\");", "-                java.createJvmarg().setValue(\"-Dorg.omg.CORBA.ORBClass=org.objectweb.david.libs.binding.orbs.iiop.IIOPORB\");", "-                java.createJvmarg().setValue(\"-Dorg.omg.CORBA.ORBSingletonClass=org.objectweb.david.libs.binding.orbs.ORBSingletonClass\");", "-                java.createJvmarg().setValue(\"-Djavax.rmi.CORBA.StubClass=org.objectweb.david.libs.stub_factories.rmi.StubDelegate\");", "-                java.createJvmarg().setValue(\"-Djavax.rmi.CORBA.PortableRemoteObjectClass=org.objectweb.david.libs.binding.rmi.ORBPortableRemoteObjectDelegate\");", "-                java.createJvmarg().setValue(\"-Djavax.rmi.CORBA.UtilClass=org.objectweb.david.libs.helpers.RMIUtilDelegate\");", "+                java.createJvmarg().setValue(\"-Dorg.omg.CORBA.ORBClass\"", "+                    + \"=org.objectweb.david.libs.binding.orbs.iiop.IIOPORB\");", "+                java.createJvmarg().setValue(\"-Dorg.omg.CORBA.ORBSingletonClass=\"", "+                    + \"org.objectweb.david.libs.binding.orbs.ORBSingletonClass\");", "+                java.createJvmarg().setValue(\"-Djavax.rmi.CORBA.StubClass=\"", "+                    + \"org.objectweb.david.libs.stub_factories.rmi.StubDelegate\");", "+                java.createJvmarg().setValue(\"-Djavax.rmi.CORBA.PortableRemoteObjectClass=\"", "+                    + \"org.objectweb.david.libs.binding.rmi.ORBPortableRemoteObjectDelegate\");", "+                java.createJvmarg().setValue(\"-Djavax.rmi.CORBA.UtilClass=\"", "+                    + \"org.objectweb.david.libs.helpers.RMIUtilDelegate\");", "-                java.createJvmarg().setValue(\"-Ddavid.rmi.ValueHandlerClass=com.sun.corba.se.internal.io.ValueHandlerImpl\");", "+                java.createJvmarg().setValue(\"-Ddavid.rmi.ValueHandlerClass=\"", "+                    + \"com.sun.corba.se.internal.io.ValueHandlerImpl\");", "-                    java.createJvmarg().setValue(\"-Ddavid.CosNaming.default_host=\" + davidHost);", "+                    java.createJvmarg().setValue(\"-Ddavid.CosNaming.default_host=\"", "+                        + davidHost);", "-                    java.createJvmarg().setValue(\"-Ddavid.CosNaming.default_port=\" + davidPort);", "+                    java.createJvmarg().setValue(\"-Ddavid.CosNaming.default_port=\"", "+                        + davidPort);", "-        if (action.equals(ACTION_DEPLOY) ||", "-                action.equals(ACTION_UPDATE) ||", "-                action.equals(\"redeploy\")) {", "+        if (action.equals(ACTION_DEPLOY)", "+            || action.equals(ACTION_UPDATE)", "+            || action.equals(\"redeploy\")) {"]}]}