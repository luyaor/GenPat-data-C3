{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be3f763caf7f36f6e8a00d17c2dd674f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "053bbfc9145dc445db8013609f1faeab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void deleteSymbolicLink(File link, Task task)         throws IOException", "signatureAfterChange": "     public void deleteSymbolicLink(File link, final Task task)         throws IOException", "diff": ["-    public void deleteSymbolicLink(File link, Task task)", "+    public void deleteSymbolicLink(File link, final Task task)", "-        File target = link.getCanonicalFile();", "+        final File target = link.getCanonicalFile();", "-            File temp = FILE_UTILS.createTempFile(\"symlink\", \".tmp\",", "+            final File temp = FILE_UTILS.createTempFile(\"symlink\", \".tmp\",", "-                } catch (IOException e) {", "+                } catch (final IOException e) {", "-                    } catch (IOException e) {", "+                    } catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f804327cba00a9007d9776da9d48e22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "57dd5aeb7f64cd715d758224790a6f6a10cd7987", "commitAfterChange": "1331049054d53ef94674a4966e7000bbf8baf6be", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static void deleteSymlink(File linkfil)         throws IOException", "signatureAfterChange": "     public static void deleteSymlink(File linkfil, Task task)         throws IOException", "diff": ["-    public static void deleteSymlink(File linkfil)", "+    public static void deleteSymlink(File linkfil, Task task)", "+", "+        // no reason to try the renaming algorithm if we aren't allowed to", "+        // write to the target's parent directory.  Let's hope that", "+        // File.canWrite works on all platforms.", "+", "+        if (task == null || canfil.getParentFile().canWrite()) {", "+        } else {", "+            Execute.runCommand(task,", "+                               new String[] {\"rm\", linkfil.getAbsolutePath()});", "+        }"]}]}