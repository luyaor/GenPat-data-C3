{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e1f808f6f48318adb710d61eddadfb9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ae1279586e88f9bd613589ab76c117", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "00d14d398fdee8aed882a7b77c4c4767339c11fd", "commitAfterChange": "82d37706ea0eee342ceee50d1982bbbbf38c6056", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public static Manifest getDefaultManifest() throws BuildException", "signatureAfterChange": "     public static Manifest getDefaultManifest() throws BuildException", "diff": ["-                return new Manifest(new InputStreamReader(in, \"ASCII\"));", "+                Manifest defaultManifest ", "+                    = new Manifest(new InputStreamReader(in, \"ASCII\"));", "+                Attribute createdBy = new Attribute(\"Created-By\", ", "+                    System.getProperty(\"java.vm.version\") + \" (\"", "+                    + System.getProperty(\"java.vm.vendor\") + \")\" );", "+                defaultManifest.getMainSection().storeAttribute(createdBy);", "+                return defaultManifest;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaedf049cbfa92e5ddac0b00a9dba894", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java", "commitBeforeChange": "05e90275ec90ca52394b59743ce965a3c052be20", "commitAfterChange": "34933b03ece57874f553c460f419a77633ce86d9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private RedirectorElement createRedirector()", "signatureAfterChange": "     private RedirectorElement createRedirector()", "diff": ["+            // Try to avoid showing password prompts on log output, as they would be confusing.", "+            LineContainsRegExp filter = new LineContainsRegExp();", "+            RegularExpression rx = new RegularExpression();", "+            // XXX only handles English locale, not ja or zh_CN", "+            rx.setPattern(\"^(Enter Passphrase for keystore: |Enter key password for .+: )$\");", "+            filter.addConfiguredRegexp(rx);", "+            filter.setNegate(true);", "+            result.createErrorFilterChain().addLineContainsRegExp(filter);"]}]}