{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7eb021c744dfd9357b6c04e2d6d1e91", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "363406f0498aa42cac23415d40306db8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void parseArguments(String[] args)          throws ConfigException", "signatureAfterChange": "     private void parseArguments(String[] args)          throws ConfigException", "diff": ["-                try {", "-                    String url = getOption(args, i++, arg);", "-                    if (url.indexOf(\":\") == -1) {", "-                        // We convert any hash characters to their URL escape.", "-                        buildFileURL = InitUtils.getFileURL(new File(url));", "-                    } else {", "-                        buildFileURL = new URL(url);", "-                    }", "-                } catch (MalformedURLException e) {", "-                    System.err.println(\"Buildfile is not valid: \" +", "-                        e.getMessage());", "-                    throw new ConfigException(\"Build file is not valid\", e);", "-                }", "+                argBuildFile(getOption(args, i++, arg));", "-                try {", "-                    File logFile = new File(getOption(args, i++, arg));", "-                    out = new PrintStream(new FileOutputStream(logFile));", "-                    err = out;", "-                } catch (IOException ioe) {", "-                    System.err.println(\"Cannot write on the specified log \" +", "-                        \"file. Make sure the path exists and \" +", "-                        \"you have write permissions.\");", "-                    return;", "-                }", "+                argLogFile(getOption(args, i++, arg));", "-                if (loggerClassname != null) {", "-                    System.err.println(\"Only one logger class may be \" +", "-                        \"specified.\");", "-                    return;", "-                }", "-                loggerClassname = getOption(args, i++, arg);", "+                argLogger(getOption(args, i++, arg));", "-        if (buildFileURL == null) {", "-            File defaultBuildFile = new File(DEFAULT_BUILD_FILENAME);", "-            if (!defaultBuildFile.exists()) {", "-                File ant1BuildFile = new File(DEFAULT_ANT1_FILENAME);", "-                if (ant1BuildFile.exists()) {", "-                    defaultBuildFile = ant1BuildFile;", "-                }", "-            }", "-            try {", "-                buildFileURL = InitUtils.getFileURL(defaultBuildFile);", "-            } catch (MalformedURLException e) {", "-                System.err.println(\"Buildfile is not valid: \" + e.getMessage());", "-                throw new ConfigException(\"Build file is not valid\", e);", "-            }", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead6616c093b6737ae697fb134eae128", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "cb2df57502298cff2dc5355d58e529e8afcb4796", "commitAfterChange": "df121a6cf559a17a573a5795d7c7daa0cd37be37", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(String[] args)", "diff": ["+        boolean searchForFile = false;", "+                searchForFile = true;", "-                } else {", "-                    searchForThis = DEFAULT_BUILD_FILENAME;", "-            if (searchForThis != null) {", "-                buildFile = findBuildFile(System.getProperty(\"user.dir\"),", "-                                          searchForThis);", "+            if (searchForFile) {", "+                if (searchForThis != null) {", "+                    buildFile = findBuildFile(System.getProperty(\"user.dir\"), searchForThis);", "+                    if (buildFile == null) {", "+                        throw new BuildException(\"Could not locate a build file!\");", "+                    }", "+                } else {", "+                    // no search file specified: so search an existing default file", "+                    Iterator it = ProjectHelperRepository.getInstance().getHelpers();", "+                    do {", "+                        ProjectHelper helper = (ProjectHelper) it.next();", "+                        searchForThis = helper.getDefaultBuildFile();", "+                        if (msgOutputLevel >= Project.MSG_VERBOSE) {", "+                            System.out.println(\"Searching the default build file: \" + searchForThis);", "+                        }", "+                        buildFile = findBuildFile(System.getProperty(\"user.dir\"), searchForThis);", "+                    } while (buildFile == null && it.hasNext());", "+                    if (buildFile == null) {", "+                        throw new BuildException(\"Could not locate a build file!\");", "+                    }", "+                }", "-                buildFile = new File(DEFAULT_BUILD_FILENAME);", "+                // no build file specified: so search an existing default file", "+                Iterator it = ProjectHelperRepository.getInstance().getHelpers();", "+                do {", "+                    ProjectHelper helper = (ProjectHelper) it.next();", "+                    buildFile = new File(helper.getDefaultBuildFile());", "+                    if (msgOutputLevel >= Project.MSG_VERBOSE) {", "+                        System.out.println(\"Trying the default build file: \" + buildFile);", "+                    }", "+                } while (!buildFile.exists() && it.hasNext());"]}]}