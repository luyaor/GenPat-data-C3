{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6e977b73e57194139a9c4ab3d7d015c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39bef6f3d66065b7d59c0767e4f9d502", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "4dab12fb9ccbaa24cc22c9804302bc7a4373b78e", "commitAfterChange": "fe829a9d0fa679df3ae2cc4803e5236ed2ed5c7b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private TransformerFactory getFactory() throws BuildException", "signatureAfterChange": "     private TransformerFactory getFactory() throws BuildException", "diff": ["-        if (Boolean.TRUE.equals(DISABLE_SECURE_PROCESSING.get())) {", "-            try {", "-                Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "-                _isNotSecureProcessing.setAccessible(true);", "-                _isNotSecureProcessing.set(tfactory, Boolean.TRUE);", "-            } catch (Exception x) {", "+        try { // #51668, #52382", "+            Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "+            _isNotSecureProcessing.setAccessible(true);", "+            _isNotSecureProcessing.set(tfactory, Boolean.TRUE);", "+        } catch (Exception x) {", "+            if (project != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6445142c7ef6c5f092e7dc637e1fda1f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/FileResource.java", "commitBeforeChange": "f2b07b0ac2024ad12ebcd012dffc74a82cc77d06", "commitAfterChange": "00829ad00c50d5d4cff7c5f9b52bedc00225dfb4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public int compareTo(Object another)", "signatureAfterChange": "     public int compareTo(Object another)", "diff": ["-        if (another.getClass().equals(getClass())) {", "-            FileResource otherfr = (FileResource) another;", "+        if (another instanceof FileProvider) {", "-            File of = otherfr.getFile();", "+            File of = ((FileProvider) another).getFile();"]}]}