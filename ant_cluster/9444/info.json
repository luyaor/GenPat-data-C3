{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b8468bfea0494b931aa7a0c9f3b06f0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f369ee16ba3ed26670c6107b221c89a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testNonExistentEntry()", "signatureAfterChange": "      public void testNonExistentEntry()", "diff": ["-        DTDLocation dtd = new DTDLocation();", "+        ResourceLocation dtd = new ResourceLocation();", "-            assertNull(\"Nonexistent Catalog entry should not be returned\", result);", "+            String expected = toURLString(new File(project.getBaseDir().toURL() +", "+                                                   \"/i/dont/exist.dtd\"));", "+            String resultStr = new URL(((SAXSource)result).getInputSource().getSystemId()).getFile();", "+            assertTrue(\"Nonexistent Catalog entry return input\",", "+                       expected.endsWith(resultStr));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2135316f21bab0094e5766a07659f9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "        public void testEmptyCatalog()", "signatureAfterChange": "        public void testEmptyCatalog()", "diff": ["-           assertNull(\"Empty catalog should return null\", result);", "+           String expected = toURLString(new File(project.getBaseDir() +", "+                                                  \"/i/dont/exist.dtd\"));", "+           //", "+           // These shenanigans are necessary b/c Norm Walsh's resolver", "+           // has a different idea of how file URLs are created on windoze", "+           // ie file://c:/foo instead of file:///c:/foo", "+           // ", "+           String resultStr = new URL(((SAXSource)result).getInputSource().getSystemId()).getFile();", "+           assertTrue(\"Empty catalog should return input\", ", "+                      expected.endsWith(resultStr));"]}]}