{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f8b76c20b0ca877784487884c9d33cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fea1c46bb8b48db5ef89c86e8cca737", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cbce4bf09d398a8f7cb9011b3f859f09274aa82", "commitAfterChange": "c2dba687256b368d6ca095487a17d432dcab22e4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-                                   AntXmlContext context)", "-            throws SAXParseException", "-        {", "-            RuntimeConfigurable parentWrapper=context.currentWrapper();", "-            RuntimeConfigurable wrapper=null;", "-            Object parent=null;", "+                                   AntXMLContext context)", "+            throws SAXParseException {", "+            RuntimeConfigurable parentWrapper = context.currentWrapper();", "+            RuntimeConfigurable wrapper = null;", "+            Object parent = null;", "-            if (parentWrapper!=null ) {", "-                parent=parentWrapper.getProxy();", "+            if (parentWrapper != null) {", "+                parent = parentWrapper.getProxy();", "-            if (parent != null ) {", "+            if (parent != null) {", "-                qname=qname.toLowerCase( Locale.US );", "+                qname = qname.toLowerCase(Locale.US);", "-            UnknownElement task= new UnknownElement(qname);", "+            UnknownElement task = new UnknownElement(qname);", "-            Location location=new Location(context.locator.getSystemId(),", "-                    context.locator.getLineNumber(),", "-                    context.locator.getColumnNumber());", "+            Location location = new Location(context.getLocator().getSystemId(),", "+                    context.getLocator().getLineNumber(),", "+                    context.getLocator().getColumnNumber());", "-            task.setOwningTarget(context.currentTarget);", "+            task.setOwningTarget(context.getCurrentTarget());", "-            if (parent != null ) {", "+            if (parent != null) {", "-                ((UnknownElement)parent).addChild( task );", "+                ((UnknownElement) parent).addChild(task);", "-                context.currentTarget.addTask( task );", "+                context.getCurrentTarget().addTask(task);", "-            wrapper=new RuntimeConfigurable( task, task.getTaskName());", "+            wrapper = new RuntimeConfigurable(task, task.getTaskName());", "-                wrapper.setAttribute( attrs.getQName(i),", "+                wrapper.setAttribute(attrs.getQName(i),", "-            context.pushWrapper( wrapper );", "+            context.pushWrapper(wrapper);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86e8a08bc443ca76827cb19c0496b67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java", "commitBeforeChange": "0c9788b8a7fc7ac0827a4a8dfff988deb8ccfc20", "commitAfterChange": "b723ad53e0a48377edac1fd4e449520b737a8dde", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "diff": ["-            if (context.getProject().getDataTypeDefinitions().get(qname) != null) {", "+            if (false && context.getProject().getDataTypeDefinitions().get(qname) != null) {", "+/*", "+  UnknownElement should work for data types as well. ", "+                // We should eliminate the special treatement of data type.", "-                    wrapper = new RuntimeConfigurable2(element, qname);", "+                    wrapper = new RuntimeConfigurable2(context.getProject(), null, element, qname);", "+*/", "+                /*", "+                // Don't try to create the task now - for consistency and to", "+                // simplify the model it is better to keep everything lazy", "+", "+                // The consequence of lazy eval - UnknownElement must deal with", "+                // TaskContainer case.", "+                */", "+", "-                    task = new UnknownElement(qname);", "+                    task = new UnknownElement2(qname);", "-                task.setLocation(new Location(context.locator.getSystemId(),", "-                                              context.locator.getLineNumber(),", "-                                              context.locator.getColumnNumber()));", "+                Location location=new Location(context.locator.getSystemId(),", "+                                               context.locator.getLineNumber(),", "+                                               context.locator.getColumnNumber());", "+                task.setLocation(location);", "+                // With lazy eval, parent will also be UnknwonElement ( even if the task", "+                // is a TaskContainer ). It is UnknownElement who must check this.", "+                    System.err.println(\"Shouldn't happen \");", "+                    /*DEBUG*/ try {throw new Exception(); } catch(Exception ex) {ex.printStackTrace();}", "-                wrapper=new RuntimeConfigurable2(task, task.getTaskName());", "+                wrapper=new RuntimeConfigurable2(context.getProject(), location, task, task.getTaskName());"]}]}