{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cbf3e3895bd5505b53679a8b28c4568", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3757188d4fa8deccc6c33b3a0db397bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/runtime/ConverterDef.java", "commitBeforeChange": "8d226e312c364e3465737658341d24cf795c3393", "commitAfterChange": "bc34bb06ca8b29568e31990be726d04559ca2972", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            final ConverterRegistry converterRegistry = (ConverterRegistry)getService( ConverterRegistry.class );", "-            converterRegistry.registerConverter( m_classname, m_sourceType, m_destinationType );", "-", "-            final URL url = m_lib.toURL();", "-            final DefaultTypeFactory factory = new DefaultTypeFactory( new URL[]{url} );", "-            factory.addNameClassMapping( m_classname, m_classname );", "-", "-            final TypeManager typeManager = (TypeManager)getService( TypeManager.class );", "-            typeManager.registerType( Converter.ROLE, m_classname, factory );", "+            // Locate the deployer, then deploy the converter", "+            final Deployer deployer = (Deployer)getService( Deployer.class );", "+            final TypeDeployer typeDeployer = deployer.createDeployer( m_lib );", "+            typeDeployer.deployConverter( m_classname, m_sourceType, m_destinationType );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de06466ecf53bbce2a79d8db83e53f28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/Cvs.java", "commitBeforeChange": "42f63164a88175351e9fccdacbe1b4944b655f9f", "commitAfterChange": "dcef853babac1b7007a169d7741dcbf945d73df1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private EnvironmentData buildEnvironment()", "signatureAfterChange": "      private Properties buildEnvironment()", "diff": ["-    private EnvironmentData buildEnvironment()", "+    private Properties buildEnvironment()", "-        final EnvironmentData env = new EnvironmentData();", "+        final Properties env = new Properties();", "-            final EnvironmentVariable var = new EnvironmentVariable();", "-            var.setKey( \"CVS_CLIENT_PORT\" );", "-            var.setValue( String.valueOf( m_port ) );", "-            env.addVariable( var );", "+            env.setProperty( \"CVS_CLIENT_PORT\", String.valueOf( m_port ) );", "-            final EnvironmentVariable var = new EnvironmentVariable();", "-            var.setKey( \"CVS_PASSFILE\" );", "-            var.setValue( String.valueOf( m_passwordFile ) );", "-            env.addVariable( var );", "+            env.setProperty( \"CVS_PASSFILE\", String.valueOf( m_passwordFile ) );", "-            final EnvironmentVariable var = new EnvironmentVariable();", "-            var.setKey( \"CVS_RSH\" );", "-            var.setValue( String.valueOf( m_cvsRsh ) );", "-            env.addVariable( var );", "+            env.setProperty( \"CVS_RSH\", String.valueOf( m_cvsRsh ) );"]}]}