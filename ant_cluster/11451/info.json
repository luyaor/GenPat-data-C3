{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e4f65906a2f82925e74d8b3fc8783d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599e1247b3849b962e1549d804861e59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "ca38198a6c3919fb271160dd9530c902aa91f804", "commitAfterChange": "f1415bcf0486c18252c3ddf68a867590e9ca7d35", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setParent(ClassLoader parent)", "signatureAfterChange": "     public void setParent(ClassLoader parent)", "diff": ["-        // ClassLoader.parent is private and there is", "-        // no accessor to set it, there is an accessor", "-        // to get it, but it is final.", "-        // This method setParent sets the parent of", "-        // this classloader, and that is the way that the", "-        // class behaves - so use a bit of reflection", "-        // to set the field.", "-", "-        if (parentField == null) {", "-            return; // Unable to get access to the parent field", "-        }", "-        try {", "-            parentField.set(this, parent);", "-        } catch (Throwable t) {", "-            // Ignore - unable to set the parent", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fca9f77c9dafb3ffff7ce2119e9faa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "9936be269812cd80ee92432d1ccf3bfb69537e5a", "commitAfterChange": "56e61f039f54d015e60e3e2ecaaeaa8e666d8cef", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setParent(ClassLoader parent)", "signatureAfterChange": "     private void setParent(ClassLoader parent)", "diff": ["-    public void setParent(ClassLoader parent) {", "+    private void setParent(ClassLoader parent) {", "+        // ClassLoader.parent is private and there is", "+        // no accessor to set it, there is an accessor", "+        // to get it, but it is final.", "+        // This method setParent sets the parent of", "+        // this classloader, and that is the way that the", "+        // class behaves - so use a bit of reflection", "+        // to set the field.", "+        if (parentField == null) {", "+            return; // Unable to get access to the parent field", "+        }", "+        try {", "+            parentField.set(this, parent);", "+        } catch (Throwable t) {", "+            // Ignore - unable to set the parent", "+        }"]}]}