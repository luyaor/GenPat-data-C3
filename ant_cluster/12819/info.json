{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9c62c764fc2f9cf8c2c787721c12733", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095626d35f1516849b0a4df2767c027c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "037cb17def902e44bd57ea63e9f1e7f1d33d0e00", "commitAfterChange": "1ba91e4855745fe4ca97ba003289e11d2ffe4c88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "diff": ["-        URL[] systemJars = Locator.getLocationURLs(jarDir);", "+        // determine ant library directory for system jars: use property", "+        // or default using location of ant-launcher.jar", "+        File antLibDir = null;", "+        String antLibDirProperty = System.getProperty(ANTLIBDIR_PROPERTY);", "+        if (antLibDirProperty != null) {", "+            antLibDir = new File(antLibDirProperty);", "+        }", "+        if ((antLibDir == null) || ! antLibDir.exists()) {", "+            antLibDir = jarDir;", "+            System.setProperty(ANTLIBDIR_PROPERTY, antLibDir.getAbsolutePath());", "+        }", "+        URL[] systemJars = Locator.getLocationURLs(antLibDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f12778c2b99e105d2438d7fd53ef6d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries)          throws ExecutionException", "signatureAfterChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-                               Map libraries)", "+                               Map libraries, Map libPathsMap)", "-                        configuring, libraries);", "+                        configuring, libraries, libPathsMap);", "-            URL[] parserURLs = initConfig.getParserURLs();", "+                URL[] parserURLs = initConfig.getParserURLs();", "+", "+            List libPaths = (List)libPathsMap.get(libraryId);", "+            if (libPaths != null) {", "+                for (Iterator j = libPaths.iterator(); j.hasNext(); ) {", "+                    URL pathURL = (URL)j.next();", "+                    addLibPath(antLibrary, pathURL);", "+                }", "+            }", "+"]}]}