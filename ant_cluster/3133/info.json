{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8fb9720bded15660ec4e0e8fdf76a0e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c9f49d0a07389e198dc82c73483740", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected ProjectListener createListener( final String listenerName )         throws AntException", "signatureAfterChange": "     protected ProjectListener createListener( final String listenerName )         throws AntException", "diff": ["-        try { result = (ProjectListener)ObjectUtil.createObject( listenerName ); }", "+        try { result = (ProjectListener)Class.forName( listenerName ).newInstance(); }", "-            throw new AntException( \"Error creating the listener \" + listenerName + ", "-                                    \" due to \" + StringUtil.printStackTrace( t, 5, true ), ", "+            throw new AntException( \"Error creating the listener \" + listenerName +", "+                                    \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ),", "-        getLogger().addLogTarget( new LogTargetToListenerAdapter( result ) );", "+        final LogTarget target = new LogTargetToListenerAdapter( result );", "+", "+        getLogger().setLogTargets( new LogTarget[] { target } );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1fdff61e6278bb4408092dd43e6808", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "d678e492b98fc7a29ed46b3f9d8ffade75c3bb4a", "commitAfterChange": "52418752350fdbbed27fe9c443a077e6b3c61cdf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected ProjectListener createListener( final String listener )         throws TaskException", "signatureAfterChange": "     private ProjectListener createListener( final String listener )         throws Exception", "diff": ["-    protected ProjectListener createListener( final String listener )", "-        throws TaskException", "+    private ProjectListener createListener( final String listener )", "+        throws Exception", "-            throw new TaskException( \"Error creating the listener \" + listener +", "-                                     \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ),", "-                                     t );", "+            throw new Exception( \"Error creating the listener \" + listener +", "+                                 \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ) );", "-    }"]}]}