{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f3417dbf64e284e4c1b38a2a72022b2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a428f08deaf69a77881ea8d6f4595c88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "1c38f4ed52ca23857b7b83ca909cd1748dea88d6", "commitAfterChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (patchFile == null) {", "+        if (!havePatchfile) {", "-        if (!patchFile.exists()) {", "-            throw new BuildException(\"patchfile \"+patchFile+\" doesn\\'t exist\", ", "-                                     location);", "-        }", "-        StringBuffer command = new StringBuffer(\"patch -i \"+patchFile+\" \");", "+        cmd.setExecutable(\"patch\");", "-        if (backup) {", "-            command.append(\"-b \");", "-        }", "-        ", "-        if (ignoreWhitespace) {", "-            command.append(\"-l \");", "-        }", "-        ", "-        if (strip >= 0) {", "-            command.append(\"-p\"+strip+\" \");", "-        }", "-        ", "-        if (quiet) {", "-            command.append(\"-s \");", "-        }", "-        ", "-        if (reverse) {", "-            command.append(\"-R \");", "-        }", "-        ", "-            command.append(originalFile);", "-        } ", "+            cmd.addValue(originalFile.getAbsolutePath());", "+        }", "-        run(command.toString());", "+        Execute exe = new Execute(new LogStreamHandler(this, Project.MSG_INFO,", "+                                                       Project.MSG_WARN), ", "+                                  null);", "+        exe.setCommandline(cmd.getCommandline());", "+        try {", "+            exe.execute();", "+        } catch (IOException e) {", "+            throw new BuildException(e, location);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a6c8eae1f6ae97461239aefae5b09b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "b5de6e5a6a5d41ba7e3d4aae0109c6838a59cbb2", "commitAfterChange": "b50fd138f8b9c08dc04ff70319e953d2450780a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     Commandline buildCmdLine()", "diff": ["-    public void execute() throws BuildException {", "+    Commandline buildCmdLine() {", "-        int result = 0;", "-", "-        // now look for illegal combinations of things ...", "-", "-        commandLine.createArgument().setValue(\"-I-\");  // ignore all errors", "-", "-        // -V", "-        // Label an existing file or project version", "-        getVersionDateCommand(commandLine);", "-        getVersionLabelCommand(commandLine);", "-", "-        // -R   ", "-        if (m_Recursive) {", "-            commandLine.createArgument().setValue(FLAG_RECURSION);", "-        }", "-", "+        commandLine.createArgument().setValue(FLAG_AUTORESPONSE_DEF);  // ignore all errors", "+        // -Vd", "+        commandLine.createArgument().setValue(getVersionDate());", "+        // -VL", "+        commandLine.createArgument().setValue(getVersionLabel());", "+        // -R", "+        commandLine.createArgument().setValue(getRecursive());", "-        if (m_Style.length() > 0) {", "-            commandLine.createArgument().setValue(m_Style);", "-        }", "-", "+        commandLine.createArgument().setValue(getStyle());", "-        getLoginCommand(commandLine);", "-                ", "+        commandLine.createArgument().setValue(getLogin());", "-        getOutputCommand(commandLine);", "+        commandLine.createArgument().setValue(getOutput());", "-        System.out.println(\"***: \" + commandLine);", "-        ", "-        result = run(commandLine);", "-        if (result != 0) {", "-            String msg = \"Failed executing: \" + commandLine.toString();", "-            throw new BuildException(msg, getLocation());", "-        }", "-", "+        return commandLine;"]}]}