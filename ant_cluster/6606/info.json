{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c5d28688b0d1c621cf3c13412295afa", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0100e0feff50dec0cb80eee089be8bae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/StreamPumper.java", "commitBeforeChange": "d3cd72efd0bcc53e93dc30234f1793d9c44b3093", "commitAfterChange": "2737393e9f982e62dcd84f35a5f342ae9fa07cd7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["+        synchronized(this) {", "+            // Just in case this object is reused in the future", "+            finished = false;", "+        }", "+", "-        } catch(IOException e) {}", "+        } catch(IOException e) {", "+        } finally {", "+            synchronized(this) {", "+                finished = true;", "+                notify();", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5522088a9f356784bc124be72bfefcbd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "b0bdced687d02b5b68c19b2c7bf9bccb2724b802", "commitAfterChange": "eaa4b86d6b8a248ebb06122b47ec51c1ebc3cdbb", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "     protected void compile()", "signatureAfterChange": "     protected void compile()", "diff": ["-            if (!adapter.execute()) {", "+            if (adapter.execute()) {", "+                // Success - check", "+                for (Iterator i = updateDirList.iterator(); i.hasNext();) {", "+                    File file = (File) i.next();", "+                    file.setLastModified(System.currentTimeMillis());", "+                }", "+            } else {", "+                // Fail path"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599beda402f2ee28403c5655e88eada5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized boolean addAll(int index, Collection c)", "signatureAfterChange": "     public synchronized boolean addAll(int index, Collection<? extends E> c)", "diff": ["-    public synchronized boolean addAll(int index, Collection c) {", "+    public synchronized boolean addAll(int index, Collection<? extends E> c) {", "-        for (Iterator i = c.iterator(); i.hasNext(); ) {", "-            Object o = i.next();", "-            if (!set.contains(o)) {", "-                doAdd(index++, o);", "+        for (E e : c) {", "+            if (!set.contains(e)) {", "+                doAdd(index++, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f0dc8addcef47e3db6d0b6fc3ac153b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public synchronized boolean retainAll(Collection c)", "signatureAfterChange": "      public synchronized boolean retainAll(Collection<?> c)", "diff": ["-    public synchronized boolean retainAll(Collection c) {", "+    public synchronized boolean retainAll(Collection<?> c) {", "-            c = new HashSet(c);", "+            c = new HashSet<Object>(c);", "-        LinkedList l = new LinkedList();", "-        for (Iterator i = iterator(); i.hasNext(); ) {", "-            Object o = i.next();", "+        LinkedList<E> l = new LinkedList<E>();", "+        for (E o : this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71736c0ccccb37843ed865eb4bff75e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "a4e5c13b86391f9b7ad23e326fe3d2bb66a16cc7", "commitAfterChange": "430b0251e54d02957b2636927d04a79a02c83ddb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public synchronized boolean retainAll(Collection c)", "signatureAfterChange": "      public synchronized boolean retainAll(Collection c)", "diff": ["-        if (super.retainAll(c)) {", "-            clear();", "-            addAll(c);", "+        LinkedList l = new LinkedList();", "+        for (Iterator i = iterator(); i.hasNext(); ) {", "+            Object o = i.next();", "+            if (!c.contains(o)) {", "+                l.addLast(o);", "+            }", "+        }", "+        if (!l.isEmpty()) {", "+            removeAll(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74aef152ad33009c15c80487d5e8ae03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public synchronized void addAll(Collection c) throws BuildException", "signatureAfterChange": "     public synchronized void addAll(Collection<? extends ResourceCollection> c) throws BuildException", "diff": ["-    public synchronized void addAll(Collection c) throws BuildException {", "+    public synchronized void addAll(Collection<? extends ResourceCollection> c) throws BuildException {", "-            for (Iterator i = c.iterator(); i.hasNext();) {", "-                add((ResourceCollection) i.next());", "+            for (ResourceCollection resourceCollection : c) {", "+                add(resourceCollection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78cb368ab1fd5f65fbfe701573a3406a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "243adc40d5157fb5e35de58bb84a5df99af4baa7", "commitAfterChange": "8513609d9c7d547fa4907dde0522e409b0018095", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setStylesheet(File stylesheet) throws Exception", "signatureAfterChange": "      public void setStylesheet(File stylesheet) throws Exception", "diff": ["+        if (this.stylesheet != null) {", "+            // resetting the stylesheet - reset transformer", "+            transformer = null;", "+            ", "+            // do we need to reset templates as well", "+            if (!this.stylesheet.equals(stylesheet)", "+                || (stylesheet.lastModified() != templatesModTime)) { ", "+                templates = null;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87551091475b1fe3f54ac2a1e89a6f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "signatureAfterChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["+        final Condition condition = target.getCondition();", "+", "+        if( null != condition )", "+        {", "+            if( false == condition.evaluate( context ) )", "+            {", "+                m_logger.debug( \"Skipping target \" + name + ", "+                                \" as it does not satisfy condition\" );", "+                return;", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66b28692f1539e6e9d48ec9072374e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/FileResource.java", "commitBeforeChange": "5ba5cd072583d55a6db4896deea9ac37b8cf1f74", "commitAfterChange": "9af2cd23bf9d1dbdef9da192f4d969e776278975", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public File getFile()", "signatureAfterChange": "     public File getFile()", "diff": ["+        synchronized (this) {", "+            if (file == null) {", "+                //try to resolve file set via basedir/name property setters:", "+                File d = getBaseDir();", "+                String n = super.getName();", "+                if (n != null) {", "+                    setFile(FILE_UTILS.resolveFile(d, n));", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ba96e89116bfc95d13f3f106640198", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/StreamPumper.java", "commitBeforeChange": "4aaf33f45e2abf0b9a600a38453bae8594e95bdb", "commitAfterChange": "cae92752e5bc521c1b471650c6384749b7a9282b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-        synchronized (this) {", "-            // Just in case this object is reused in the future", "-            finished = false;", "-        }", "+        finished = false;", "+        finish = false;", "-            while ((length = is.read(buf)) > 0 && !finished) {", "+            while ((length = is.read(buf)) > 0 && !finish) {", "+            os.flush();", "+            finished = true;", "-                finished = true;"]}]}