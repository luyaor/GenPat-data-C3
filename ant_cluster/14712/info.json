{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7ef0e6554a62808acba814f9fb84c35", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3bb085bafca2e372fcc7eeb3a2cb06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "d3bb8dc2f627e27c2ae1fe8d72955c56d77c2c86", "commitAfterChange": "0dfb55090cb515fb26dc0fef5adf87ac76f398f6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                 * look like much, passing 'this' in the above method allows", "-                 * the parser to call us back when it finds interesting things.", "+                 * look like much, we use a SAXParser and an inner class to", "+                 * get hold of all the classfile names for the descriptor.", "-                /* Now that we've parsed the deployment descriptor we have the", "-                 * bean name, so we can figure out all the .xml filenames and", "-                 * add them to the set of files for the jar.", "+                /* Now try to locate all of the deployment descriptors for the", "+                 * jar, and if they exist, add them to the list of files.", "-                // Lastly for the jarfiles", "+                // Lastly create File object for the Jar files. If we are using", "+                // a flat destination dir, then we need to redefine baseName!", "+                if (this.flatdestdir) {", "+                    int startName = baseName.lastIndexOf(File.separator);", "+                    int endName   = baseName.length();", "+                    baseName = baseName.substring(startName, endName);", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc45f9edc2ba4f6e8ce357de0d8966ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "commitAfterChange": "b92e6b644f97b87083602a8ce4029cce01725674", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static Vector tokenizePath (String path, String separator)", "signatureAfterChange": "     public static Vector tokenizePath (String path, String separator)", "diff": ["+        if (FileUtils.isAbsolutePath(path)) {", "+            String[] s = FILE_UTILS.dissect(path);", "+            ret.add(s[0]);", "+            path = s[1];", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f27106e03a74852429be4acd4d6f7578", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tstamp.java", "commitBeforeChange": "af1d9f41bb25e88838ef92c7e466d496dcc5e8b7", "commitAfterChange": "e48fc02b3fa893e9ae633f062c5974003d00ec79", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "                  public void execute(Project project, Date date)", "signatureAfterChange": "                              public void execute(Project project, Date date)", "diff": ["+        ", "+            if (offset != 0) {", "+                Calendar calendar = Calendar.getInstance();", "+                calendar.setTime(date);", "+                calendar.add(field, offset);", "+                date = calendar.getTime();", "+            }", "+"]}]}