{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30f1a88413f02521c5a7a90e7e8ef7c3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0434c569e6691d2b51a5223c0afea5e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void normalisePath( StringBuffer path ) throws FileSystemException", "signatureAfterChange": "     public void normalisePath( final StringBuffer path ) throws FileSystemException", "diff": ["-    public void normalisePath( StringBuffer path ) throws FileSystemException", "+    public void normalisePath( final StringBuffer path ) throws FileSystemException", "-            int elemLen = endElem - startElem;", "+            final int elemLen = endElem - startElem;", "-                    char ch = path.charAt( pos );", "-                    while( ch != m_separatorChar )", "+                    for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos -- )", "-                        pos--;", "-                        ch = path.charAt( pos );", "-        if( path.charAt( maxlen - 1 ) == m_separatorChar && maxlen > 1 )", "+        if( maxlen > 0 && path.charAt( maxlen - 1 ) == m_separatorChar && maxlen > 1 )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf855cea8563c906e918b0730c23bf5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileNameParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected String extractZipName( StringBuffer uri ) throws FileSystemException", "signatureAfterChange": "     private String extractZipName( final StringBuffer uri )         throws FileSystemException", "diff": ["-    protected String extractZipName( StringBuffer uri ) throws FileSystemException", "+    private String extractZipName( final StringBuffer uri )", "+        throws FileSystemException", "-        // TODO - how does '!' in the file name get escaped?", "-        for( int pos = 0; pos < maxlen; pos++ )", "+        int pos = 0;", "+        for( ; pos < maxlen && uri.charAt( pos ) != '!'; pos++ )", "-            if( uri.charAt( pos ) == '!' )", "-            {", "-                String prefix = uri.substring( 0, pos );", "-                uri.delete( 0, pos + 1 );", "-                return prefix;", "-            }", "-        // Assume the URI is the Jar file name", "-        String prefix = uri.toString();", "-        uri.setLength( 0 );", "-        return prefix;", "+        // Extract the name", "+        String prefix = uri.substring( 0, pos );", "+        if( pos < maxlen )", "+        {", "+            uri.delete( 0, pos + 1 );", "+        }", "+        else", "+        {", "+            uri.setLength( 0 );", "+        }", "+", "+        // Decode the name", "+        return decode( prefix );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b5d42973d7185ef09b8dd08473b72c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private String extractRootPrefix( final String uri,                                       final StringBuffer name )         throws FileSystemException", "signatureAfterChange": "     protected abstract String extractRootPrefix( final String uri,                                                  final StringBuffer name )         throws FileSystemException;", "diff": ["-    private String extractRootPrefix( final String uri,", "-                                      final StringBuffer name )", "-        throws FileSystemException", "-    {", "-        // TODO - split this into sub-classes", "-        if( m_windowsNames )", "-        {", "-            return extractWindowsRootPrefix( uri, name );", "-        }", "-        else", "-        {", "-            // Looking for <sep>", "-            if( name.length() == 0 || name.charAt( 0 ) != '/' )", "-            {", "-                final String message = REZ.getString( \"not-absolute-file-name.error\", uri );", "-                throw new FileSystemException( message );", "-            }", "+    protected abstract String extractRootPrefix( final String uri,", "+                                                 final StringBuffer name )", "+        throws FileSystemException;", "-            // TODO - this isn't always true", "-            return \"/\";", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a23a6082e853a42ff964a757e62ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void normalisePath( final StringBuffer path ) throws FileSystemException", "signatureAfterChange": "     public void normalisePath( final StringBuffer path )         throws FileSystemException", "diff": ["-    public void normalisePath( final StringBuffer path ) throws FileSystemException", "+    public void normalisePath( final StringBuffer path )", "+        throws FileSystemException", "-                if( startElem > startFirstElem )", "+                if( startElem == startFirstElem )", "-                    int pos = startElem - 2;", "-                    for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos -- )", "-                    {", "-                    }", "-                    startElem = pos + 1;", "+                    // Previous element is missing", "+                    final String message = REZ.getString( \"invalid-relative-path.error\" );", "+                    throw new FileSystemException( message );", "+", "+                // Find start of previous element", "+                int pos = startElem - 2;", "+                for( ; pos >= 0 && path.charAt( pos ) != m_separatorChar; pos-- )", "+                {", "+                }", "+                startElem = pos + 1;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4793a45cc43071c3775fb222b6da70c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileName.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public FileName resolveName( String name, NameScope scope ) throws FileSystemException", "signatureAfterChange": "     public FileName resolveName( final String name,                                  final NameScope scope )         throws FileSystemException", "diff": ["-    public FileName resolveName( String name, NameScope scope ) throws FileSystemException", "+    public FileName resolveName( final String name,", "+                                 final NameScope scope )", "+        throws FileSystemException", "-        if( scope == NameScope.CHILD )", "-        {", "-            String childPath = m_parser.getChildPath( m_absPath, name );", "-            return new DefaultFileName( m_parser, m_rootPrefix, childPath );", "-        }", "-        else if( scope == NameScope.FILE_SYSTEM )", "-        {", "-            String absPath = m_parser.resolvePath( m_absPath, name );", "-            return new DefaultFileName( m_parser, m_rootPrefix, absPath );", "-        }", "-        else", "-        {", "-            throw new IllegalArgumentException();", "-        }", "+        final String absPath = m_parser.resolvePath( m_absPath, name, scope );", "+        return new DefaultFileName( m_parser, m_rootPrefix, absPath );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57b09b4159e3009b45add5a67113681", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private FileSystemProvider createProvider( final String className )         throws Exception", "signatureAfterChange": "     public void addProvider( final String[] urlSchemes,                              final FileSystemProvider provider )         throws FileSystemException", "diff": ["-    private FileSystemProvider createProvider( final String className )", "-        throws Exception", "-        try", "+     */", "+    public void addProvider( final String[] urlSchemes,", "+                             final FileSystemProvider provider )", "+        throws FileSystemException", "+    {", "+        // Check for duplicates", "+        for( int i = 0; i < urlSchemes.length; i++ )", "-            // TODO - wrap exceptions", "-            return (FileSystemProvider)Class.forName( className ).newInstance();", "+            final String scheme = urlSchemes[i ];", "+            if( m_providers.containsKey( scheme ) )", "+            {", "+                final String message = REZ.getString( \"multiple-providers-for-scheme.error\", scheme );", "+                throw new FileSystemException( message );", "+            }", "-        catch( ClassNotFoundException e )", "+", "+        // Contextualise", "+        provider.setContext( m_context );", "+", "+        // Add to map", "+        for( int i = 0; i < urlSchemes.length; i++ )", "-            // This is fine, for now", "-            return null;", "+            final String scheme = urlSchemes[ i ];", "+            m_providers.put( scheme, provider );"]}]}