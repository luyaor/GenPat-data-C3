{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "702a64638fcaead6de74110b89c54764", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98be6ecfa08ccdb732930b2d09ab1a64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/cli/CLIFrontEnd.java", "commitBeforeChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "commitAfterChange": "d8a7035c55e9315383161c20b42077f65748f081", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void run(String[] args)", "signatureAfterChange": "     public void run(String[] args)", "diff": ["-                // ant.addTaskPathNode(new File(argTaskpath));", "+                taskManager.addTaskPathNode(new File(argTaskpath));", "-            ProjectBuilder projectBuilder = new ProjectBuilder(this);", "-            //Project project = ant.getProject();", "-            ", "-            // XXX", "-            // get taskmanager from project and set taskpath nodes on it!", "-        } catch (AntException ae) {            ", "+        } catch (AntException ae) {  ", "+        ", "+            //XXX this whole write a string at a time message handling", "+            // sucks and needs to be improved...", "+                    ", "+            Throwable t = ae.getCause();", "+            if (t != null) {", "+                writeMessage(\"\");", "+                writeMessage(\"Cause Exception: \" + t.toString());", "+                writeMessage(t.getMessage());", "+                t.printStackTrace(System.out);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1cc8c2884f472b1f30609a8957b555", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/BuildCmd.java", "commitBeforeChange": "ffa6e24ba429847c04da9162971b6203151a7ce1", "commitAfterChange": "1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-        ProjectProxy project = getContext().getProject();", "-        if(project != null) {", "+        if(_project == null) {", "+            _project = getContext().getSelectionManager().getSelectedProject();", "+        }", "+", "+        if(_targets == null) {", "+            _targets = getContext().getSelectionManager().getSelectedTargets();", "+        }", "+", "+        if(_project != null) {", "-                project.build();", "+                getContext().getProjectManager().build(_project, _targets);"]}]}