{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a784b43a29f889e5263d72019700e9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f3c0931ec4bd736d60d64ceacda673", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarInputStream.java", "commitBeforeChange": "34fdc2f62a8e282875c134c78aaf14105af92cf9", "commitAfterChange": "8819ee167bec189fb17e8d25ae3aca5268e0ec23", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      Map<String, String> parsePaxHeaders(InputStream i) throws IOException", "signatureAfterChange": "      Map<String, String> parsePaxHeaders(InputStream i) throws IOException", "diff": ["-                            byte[] rest = new byte[len - read];", "-                            int got = i.read(rest);", "-                            if (got != len - read){", "+                            final int restLen = len - read;", "+                            byte[] rest = new byte[restLen];", "+                            int got = 0;", "+                            while (got < restLen && (ch = i.read()) != -1) {", "+                                rest[got++] = (byte) ch;", "+                            }", "+                            if (got != restLen) {", "-                                                      + (len - read)", "+                                                      + restLen", "-                                                      len - read - 1, \"UTF-8\");", "+                                                      restLen - 1, \"UTF-8\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe38be881f7fbfb8cf0b6986fd312423", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "467616fc6f2de91659409843a83ab2d694712a9b", "commitAfterChange": "046aaf269a7f6bbd6e5eeafef8d0d7aecfcdd3be", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private String parseUri(String uri)", "signatureAfterChange": "      private String parseUri(String uri)", "diff": ["-        int indexOfAt = uri.lastIndexOf('@');", "+", "+        int indexOfAt = uri.indexOf('@');", "+", "+            // everything upto the last @ before the last : is considered", "+            // password. (so if the path contains an @ and a : it will not work)", "+            int indexOfCurrentAt = indexOfAt;", "+            int indexOfLastColon = uri.lastIndexOf(':');", "+            while (indexOfCurrentAt > -1 && indexOfCurrentAt < indexOfLastColon)", "+            {", "+                indexOfAt = indexOfCurrentAt;", "+                indexOfCurrentAt = uri.indexOf('@', indexOfCurrentAt + 1);", "+            }"]}]}