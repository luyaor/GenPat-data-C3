{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02c2d4eb845e8649ff9407c2122f4870", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1370588c7c0106589fe23d901699fff7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "228fb9839c21a0a853598e114faca72c8e9340e7", "commitAfterChange": "9922008d657c72235c402343fd88847b044014ad", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void hbAssignCodes (int[] code, char[] length, int minLen,                                 int maxLen, int alphaSize)", "signatureAfterChange": "      private static void hbAssignCodes(final int[] code, final byte[] length,                                       final int minLen, final int maxLen,                                       final int alphaSize)", "diff": ["-    private void hbAssignCodes (int[] code, char[] length, int minLen,", "-                                int maxLen, int alphaSize) {", "-        int n, vec, i;", "-        vec = 0;", "-        for (n = minLen; n <= maxLen; n++) {", "-            for (i = 0; i < alphaSize; i++) {", "-                if (length[i] == n) {", "+", "+    private static void hbAssignCodes(final int[] code, final byte[] length,", "+                                      final int minLen, final int maxLen,", "+                                      final int alphaSize) {", "+        int vec = 0;", "+        for (int n = minLen; n <= maxLen; n++) {", "+            for (int i = 0; i < alphaSize; i++) {", "+                if ((length[i] & 0xff) == n) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3536b5de84b4894154b39a5f7317ed1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void hbAssignCodes (int[] code, char[] length, int minLen,                                 int maxLen, int alphaSize)", "signatureAfterChange": "      private static void hbAssignCodes(final int[] code, final byte[] length,                                       final int minLen, final int maxLen,                                       final int alphaSize)", "diff": ["-    private void hbAssignCodes (int[] code, char[] length, int minLen,", "-                                int maxLen, int alphaSize) {", "-        int n, vec, i;", "-        vec = 0;", "-        for (n = minLen; n <= maxLen; n++) {", "-            for (i = 0; i < alphaSize; i++) {", "-                if (length[i] == n) {", "+", "+    private static void hbAssignCodes(final int[] code, final byte[] length,", "+                                      final int minLen, final int maxLen,", "+                                      final int alphaSize) {", "+        int vec = 0;", "+        for (int n = minLen; n <= maxLen; n++) {", "+            for (int i = 0; i < alphaSize; i++) {", "+                if ((length[i] & 0xff) == n) {", "-            };", "+            }"]}]}