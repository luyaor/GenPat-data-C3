{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "948c4c06434fa97a033050ff1380cffc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "621d423a6eb11d0eb67786dbba2a5a41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "d9d5e24a7170e76635a86b274bf424557ce9dfe2", "commitAfterChange": "b7cfa6d516bfc843b3157cd0e15df3e93128ee72", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean generateChecksums() throws BuildException", "signatureAfterChange": "     private boolean generateChecksums() throws BuildException", "diff": ["-                            DataInputStream edis = new DataInputStream(fis);", "-                            String suppliedChecksum = \"\";", "-                            if (edis.available() > 0) {", "-                                suppliedChecksum = edis.readLine();", "-                            }", "+                            InputStreamReader isr = new InputStreamReader(fis);", "+                            BufferedReader br = new BufferedReader(isr);", "+                            String suppliedChecksum = br.readLine();", "-                            edis.close();", "-                            checksumMatches = ", "+                            br.close();", "+                            isr.close();", "+                            checksumMatches =", "+                        fos.close();", "+                        fos = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d9198d08de0a8d1cc13bf70430a8286", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void transform(String infile, String outfile) throws Exception", "signatureAfterChange": "      public void transform(File infile, File outfile) throws Exception", "diff": ["-    public void transform(String infile, String outfile) throws Exception {", "-        FileWriter out = new FileWriter(outfile);", "-        try {", "-            processor.process(infile, xslSheet, out);", "-        } finally {", "-            out.close();", "-        }", "+    public void transform(File infile, File outfile) throws Exception {", "+        FileOutputStream fos = new FileOutputStream(outfile);", "+        // XSLP does not support encoding...we're in hot water.", "+        OutputStreamWriter out = new OutputStreamWriter(fos,\"UTF8\");", "+        processor.process(infile.getAbsolutePath(), xslSheet, out);"]}]}