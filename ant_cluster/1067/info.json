{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c95538674011c0bff09ac5cbf29f09ba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6412491c2a8da5e3808829b11e4b71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "commitAfterChange": "b139901cab374b10e2f73a58769fb4ef1c2837bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void main(String[] args)", "signatureAfterChange": "      public static void main(String[] args)", "diff": ["-                 * uses -Dname=value. However, the JDK goes ahead", "-                 * and parses this out to args {\"-Dname\", \"value\"}", "+                 * uses -Dname=value. However, in some cases, the JDK", "+                 * goes ahead * and parses this out to args ", "+                 *   {\"-Dname\", \"value\"}", "+                 *", "+                 * I don't know how to predict when the JDK is going", "+                 * to help or not, so we simply look for the equals sign.", "-                String value = args[++i];", "+                String value = null;", "+                int posEq = name.indexOf(\"=\");", "+                if (posEq > 0) {", "+                    value = name.substring(posEq+1);", "+                    name = name.substring(0, posEq);", "+                } else if (i < args.length)", "+                    value = args[++i];", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe38be881f7fbfb8cf0b6986fd312423", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "467616fc6f2de91659409843a83ab2d694712a9b", "commitAfterChange": "046aaf269a7f6bbd6e5eeafef8d0d7aecfcdd3be", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private String parseUri(String uri)", "signatureAfterChange": "      private String parseUri(String uri)", "diff": ["-        int indexOfAt = uri.lastIndexOf('@');", "+", "+        int indexOfAt = uri.indexOf('@');", "+", "+            // everything upto the last @ before the last : is considered", "+            // password. (so if the path contains an @ and a : it will not work)", "+            int indexOfCurrentAt = indexOfAt;", "+            int indexOfLastColon = uri.lastIndexOf(':');", "+            while (indexOfCurrentAt > -1 && indexOfCurrentAt < indexOfLastColon)", "+            {", "+                indexOfAt = indexOfCurrentAt;", "+                indexOfCurrentAt = uri.indexOf('@', indexOfCurrentAt + 1);", "+            }"]}]}