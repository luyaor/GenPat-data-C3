{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2477aaa2850e53d8dcec5b47e0b3aac8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7405594f2a064c7fdb8d3d226a21f698", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Map findAdders()         throws ConfigurationException", "signatureAfterChange": "     private Map findAdders()         throws ConfigurationException", "diff": ["-            if( method.getReturnType() != Void.TYPE ||", "-                method.getParameterTypes().length != 1 )", "+            if( method.getReturnType() != Void.TYPE", "+                || method.getParameterTypes().length != 1 )", "-            // Extract element name", "-            final String elemName = extractName( 3, methodName );", "+            // Extract property name", "+            final String propName = extractName( 3, methodName );", "+", "+            final Class type = method.getParameterTypes()[ 0 ];", "-            if( adders.containsKey( elemName ) )", "+            if( adders.containsKey( propName ) )", "-                final String message =", "-                    REZ.getString( \"multiple-adder-methods-for-element.error\",", "-                                   m_class.getName(),", "-                                   elemName );", "-                throw new ConfigurationException( message );", "+                final Class currentType = ( (Method)adders.get( propName ) ).getParameterTypes()[ 0 ];", "+", "+                // Ditch the string version, if any", "+                if( currentType != String.class && type == String.class )", "+                {", "+                    // New type is string, and current type is not.  Ignore", "+                    // the new method", "+                    continue;", "+                }", "+                if( currentType != String.class || type == String.class )", "+                {", "+                    // Both are string, or both are not string", "+                    final String message =", "+                        REZ.getString( \"multiple-adder-methods-for-element.error\",", "+                                       m_class.getName(),", "+                                       propName );", "+                    throw new ConfigurationException( message );", "+                }", "+", "+                // Else, current type is string, and new type is not, so", "+                // continue below, and overwrite the current method", "-            adders.put( elemName, method );", "+            adders.put( propName, method );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d93518e0eb27d8ff106bed45382cf89f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "2efc45999181f493c8438ae9a50b9d61ae085f8f", "commitAfterChange": "ff8b6709bcf07f12efecc3625f5e1665e7ddf34d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Map findAdders()         throws ConfigurationException", "signatureAfterChange": "     private Map findAdders()         throws ConfigurationException", "diff": ["-            if( method.getReturnType() != Void.TYPE", "-                || method.getParameterTypes().length != 1 )", "+            if( Void.TYPE != method.getReturnType() ||", "+                1 != method.getParameterTypes().length )", "+            }", "+", "+            final boolean isTypedAdder = methodName.equals( \"add\" );", "+", "+            final Class paramType = method.getParameterTypes()[ 0 ];", "+            if( isTypedAdder && !paramType.isInterface() )", "+            {", "+                final String message =", "+                    REZ.getString( \"typed-adder-non-interface.error\",", "+                                   m_class.getName(),", "+                                   paramType.getName() );", "+                throw new ConfigurationException( message );", "-            final Class type = method.getParameterTypes()[ 0 ];", "+            final Class type = paramType;", "-                final Class currentType = ( (Method)adders.get( propName ) ).getParameterTypes()[ 0 ];", "+                final Method candidate = (Method)adders.get( propName );", "+                final Class currentType = candidate.getParameterTypes()[ 0 ];", "-                if( currentType != String.class || type == String.class )", "+                else if( currentType != String.class || type == String.class )", "+                    throw new ConfigurationException( message );", "+                }", "+                else if( isTypedAdder )", "+                {", "+                    // Both are string, or both are not string", "+                    final String message =", "+                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "+                                       m_class.getName(),", "+                                       type.getName(),", "+                                       currentType.getName() );"]}]}