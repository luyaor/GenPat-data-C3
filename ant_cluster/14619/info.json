{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f364982e0263079268111171a0444623", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4095fa5b39aa4ac8a467254ce50248d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "aeee70243a354c5951ec655556f8a1530e7713eb", "commitAfterChange": "ca5799fd8c1780abcc25f63745faf95bd2cdb06a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        for (Iterator i = tasks.iterator(); i.hasNext();) {", "-            UnknownElement ue = (UnknownElement) i.next();", "-            ue.maybeConfigure();", "-            setLocation(ue.getLocation());", "-            Task t = ue.getTask();", "-            if (t == null) {", "-                continue;", "+        ComponentHelper helper =", "+            ComponentHelper.getComponentHelper(getProject());", "+        helper.enterAntLib();", "+        try {", "+            for (Iterator i = tasks.iterator(); i.hasNext();) {", "+                UnknownElement ue = (UnknownElement) i.next();", "+                ue.maybeConfigure();", "+                setLocation(ue.getLocation());", "+                Task t = ue.getTask();", "+                if (t == null) {", "+                    continue;", "+                }", "+                if (t instanceof AntlibInterface) {", "+                    AntlibInterface d = (AntlibInterface) t;", "+                    d.setURI(uri);", "+                    d.setAntlibClassLoader(getClassLoader());", "+                }", "+                t.init();", "+                t.execute();", "-            if (t instanceof Definer) {", "-                Definer d = (Definer) t;", "-                d.setInternalClassLoader(getClassLoader());", "-            }", "-            t.init();", "-            t.execute();", "+        } finally {", "+            helper.exitAntLib();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8282a73233b15511f4d828707fdb2ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d86fa90cf45aacdf5fc9d61e081895f1c099836", "commitAfterChange": "99b22a7da3308ae6800e2b6d95ec3827b54c852f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "diff": ["-    public static Antlib createAntlib(Project project, URL antlibUrl) {", "+    public static Antlib createAntlib(Project project, URL antlibUrl,", "+                                      String uri) {", "-        // Should be safe to parse", "-        ProjectHelper2 parser = new ProjectHelper2();", "-        UnknownElement ue =", "-            parser.parseUnknownElement(project, antlibUrl);", "-        // Check name is \"antlib\"", "-        if (!(ue.getTag().equals(TAG))) {", "-            throw new BuildException(", "-                \"Unexpected tag \" + ue.getTag() + \" expecting \"", "-                + TAG, ue.getLocation());", "+        ComponentHelper helper =", "+            ComponentHelper.getComponentHelper(project);", "+        helper.enterAntLib(uri);", "+        try {", "+            // Should be safe to parse", "+            ProjectHelper2 parser = new ProjectHelper2();", "+            UnknownElement ue =", "+                parser.parseUnknownElement(project, antlibUrl);", "+            // Check name is \"antlib\"", "+            if (!(ue.getTag().equals(TAG))) {", "+                throw new BuildException(", "+                    \"Unexpected tag \" + ue.getTag() + \" expecting \"", "+                    + TAG, ue.getLocation());", "+            }", "+            Antlib antlib = new Antlib();", "+            antlib.setProject(project);", "+            antlib.setLocation(ue.getLocation());", "+            antlib.init();", "+            ue.configure(antlib);", "+            return antlib;", "+        } finally {", "+            helper.exitAntLib();", "-        Antlib antlib = new Antlib();", "-        antlib.setProject(project);", "-        antlib.setLocation(ue.getLocation());", "-        antlib.init();", "-        ue.configure(antlib);", "-        return antlib;"]}]}