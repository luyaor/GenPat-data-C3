{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6676fb361c56fd71db678eae29deffdb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1830963cc8003c2dc55c50e840f072af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/file/Touch.java", "commitBeforeChange": "d44f286ff0416d4178213e4d46b47f93c6e446ae", "commitAfterChange": "0b7ecfb32ed587e063003090000b7baec362f7aa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void touch()         throws TaskException", "signatureAfterChange": "      private void touch()         throws TaskException", "diff": ["-     */", "-    public void touch()", "-        if( file != null )", "-            if( !file.exists() )", "+", "+    private void touch()", "+        throws TaskException", "+    {", "+        if( m_millis < 0 )", "+        {", "+            m_millis = System.currentTimeMillis();", "+        }", "+", "+        if( m_file != null )", "+        {", "+            if( !m_file.exists() )", "-                getLogger().info( \"Creating \" + file );", "+                getLogger().info( \"Creating \" + m_file );", "-                    FileOutputStream fos = new FileOutputStream( file );", "+                    FileOutputStream fos = new FileOutputStream( m_file );", "-                catch( IOException ioe )", "+                catch( final IOException ioe )", "-                    throw new TaskException( \"Could not create \" + file, ioe );", "+                    final String message = \"Could not create \" + m_file;", "+                    throw new TaskException( message, ioe );", "-        }", "-        boolean resetMillis = false;", "-        if( millis < 0 )", "-        {", "-            resetMillis = true;", "-            millis = System.currentTimeMillis();", "-        }", "-", "-        if( file != null )", "-        {", "-            touch( file );", "+            touch( m_file );", "-        for( int i = 0; i < filesets.size(); i++ )", "+        final int size = m_filesets.size();", "+        for( int i = 0; i < size; i++ )", "-            FileSet fs = (FileSet)filesets.get( i );", "-            DirectoryScanner ds = fs.getDirectoryScanner( getProject() );", "-            File fromDir = fs.getDir( getProject() );", "+            final FileSet fs = (FileSet)m_filesets.get( i );", "+            final DirectoryScanner ds = fs.getDirectoryScanner( null );", "+            final File fromDir = fs.getDir( null );", "-            String[] srcFiles = ds.getIncludedFiles();", "-            String[] srcDirs = ds.getIncludedDirectories();", "+            final String[] srcFiles = ds.getIncludedFiles();", "+            final String[] srcDirs = ds.getIncludedDirectories();", "-", "-        if( resetMillis )", "-        {", "-            millis = -1;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779f8296c9a4d0b29a6ed1b177ba700b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/file/Touch.java", "commitBeforeChange": "d44f286ff0416d4178213e4d46b47f93c6e446ae", "commitAfterChange": "0b7ecfb32ed587e063003090000b7baec362f7aa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void touch()         throws TaskException", "signatureAfterChange": "      private void touch()         throws TaskException", "diff": ["-     */", "-    public void touch()", "-        if( file != null )", "-            if( !file.exists() )", "+", "+    private void touch()", "+        throws TaskException", "+    {", "+        if( m_millis < 0 )", "+        {", "+            m_millis = System.currentTimeMillis();", "+        }", "+", "+        if( m_file != null )", "+        {", "+            if( !m_file.exists() )", "-                getLogger().info( \"Creating \" + file );", "+                getLogger().info( \"Creating \" + m_file );", "-                    FileOutputStream fos = new FileOutputStream( file );", "+                    FileOutputStream fos = new FileOutputStream( m_file );", "-                catch( IOException ioe )", "+                catch( final IOException ioe )", "-                    throw new TaskException( \"Could not create \" + file, ioe );", "+                    final String message = \"Could not create \" + m_file;", "+                    throw new TaskException( message, ioe );", "-        }", "-        boolean resetMillis = false;", "-        if( millis < 0 )", "-        {", "-            resetMillis = true;", "-            millis = System.currentTimeMillis();", "-        }", "-", "-        if( file != null )", "-        {", "-            touch( file );", "+            touch( m_file );", "-        for( int i = 0; i < filesets.size(); i++ )", "+        final int size = m_filesets.size();", "+        for( int i = 0; i < size; i++ )", "-            FileSet fs = (FileSet)filesets.get( i );", "-            DirectoryScanner ds = fs.getDirectoryScanner( getProject() );", "-            File fromDir = fs.getDir( getProject() );", "+            final FileSet fs = (FileSet)m_filesets.get( i );", "+            final DirectoryScanner ds = fs.getDirectoryScanner( null );", "+            final File fromDir = fs.getDir( null );", "-            String[] srcFiles = ds.getIncludedFiles();", "-            String[] srcDirs = ds.getIncludedDirectories();", "+            final String[] srcFiles = ds.getIncludedFiles();", "+            final String[] srcDirs = ds.getIncludedDirectories();", "-", "-        if( resetMillis )", "-        {", "-            millis = -1;", "-        }"]}]}