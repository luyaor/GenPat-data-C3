{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06705fa4016aa4b64532d01ea0796e79", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d2af0ea0eb90205813a85778909ca6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "      private boolean isUpToDate(ResourceCollection c)", "signatureAfterChange": "      private boolean isUpToDate(ResourceCollection c)", "diff": ["-        for (Iterator i = c.iterator(); i.hasNext();) {", "-            Resource r = (Resource) i.next();", "+        for (Resource r : c) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e7b1f4a4e7ef1f8746c3514ebdd319", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public String getElementName(Object o, boolean brief)", "signatureAfterChange": "     public String getElementName(Object o, boolean brief)", "diff": ["-        Class elementClass = o.getClass();", "+        Class<?> elementClass = o.getClass();", "-            for (Iterator i = antTypeTable.values().iterator(); i.hasNext();) {", "-                AntTypeDefinition def = (AntTypeDefinition) i.next();", "+            for (AntTypeDefinition def : antTypeTable.values()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095782555554ad314e0fc0ed7b21bb38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/TaskConfigurationChecker.java", "commitBeforeChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "commitAfterChange": "e21405f8ee2bc8cea775bbbaee7eb29ffe50aca9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void checkErrors() throws BuildException", "signatureAfterChange": "     public void checkErrors() throws BuildException", "diff": ["-            for (Iterator it = errors.iterator(); it.hasNext();) {", "-                String msg = (String) it.next();", "+            for (String msg : errors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eab59fd5ced216e3d0020e383f7832a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     private void printUnknownDefinition(PrintWriter out, String componentName, String dirListing)", "signatureAfterChange": "     private void printUnknownDefinition(PrintWriter out, String componentName, String dirListing)", "diff": ["-            List matches = antTypeTable.findMatches(uri);", "+            final List<AntTypeDefinition> matches = findTypeMatches(uri);", "-                for (Iterator it = matches.iterator(); it.hasNext();) {", "-                    AntTypeDefinition def = (AntTypeDefinition) it.next();", "+                for (AntTypeDefinition def : matches) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1de6955d9119ab947b55c4e24b1f88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addConfiguredText(Text text)", "signatureAfterChange": "     public void addConfiguredText(Text text)", "diff": ["-        for (Iterator i = attributes.iterator(); i.hasNext();) {", "-            Attribute attribute = (Attribute) i.next();", "+        for (Attribute attribute : attributes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9d7723763f528e560967714045321f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-                    for (Iterator attrs = ((MacroInstance) target).getMacroDef().getAttributes().iterator(); attrs.hasNext();) {", "-                        MacroDef.Attribute attr = (MacroDef.Attribute) attrs.next();", "+                    for (Attribute attr : ((MacroInstance) target).getMacroDef().getAttributes()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40905e6f54075686d81f66c80cd60f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void logMissing(ResourceCollection missing, String what)", "signatureAfterChange": "      private void logMissing(ResourceCollection missing, String what)", "diff": ["-            for (Iterator i = missing.iterator(); i.hasNext(); ) {", "-                Resource r = (Resource) i.next();", "+            for (Resource r : missing) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beaa48637f70972c6c5b404e8c47e9f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "e21405f8ee2bc8cea775bbbaee7eb29ffe50aca9", "commitAfterChange": "33b564a18352aee0547e5fc8e5268d0c2f731e04", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-            for (Iterator i = getExtensionStack().iterator(); i.hasNext(); ) {", "-                String[] extensionInfo = (String[]) i.next();", "+            for (String[] extensionInfo : getExtensionStack()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd80d3e9e8627a05a4e58589f1611705", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void handleResources(Handler h)", "signatureAfterChange": "      private void handleResources(Handler h)", "diff": ["-        for (Iterator i = resources.iterator(); i.hasNext();) {", "-            Resource r = (Resource) i.next();", "+        for (Resource r : resources) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69a9b77544c5733e6c4b83048ca7f28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/AbstractResourceCollectionWrapper.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public synchronized boolean isFilesystemOnly()", "signatureAfterChange": "     public synchronized boolean isFilesystemOnly()", "diff": ["-        for (Iterator i = createIterator(); i.hasNext();) {", "-            Resource r = (Resource) i.next();", "+        for (Resource r : this) {"]}]}