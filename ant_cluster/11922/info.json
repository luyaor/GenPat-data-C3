{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "888e96cf75e58bd77309b7c94f439714", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8335e34f654d0ca3a9a5ee2593c459", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void configureLiaison( File stylesheet )         throws TaskException", "signatureAfterChange": "      private void specifyParams() throws TaskException", "diff": ["-    protected void configureLiaison( File stylesheet )", "-        if( m_stylesheetLoaded )", "-        m_stylesheetLoaded = true;", "-            getLogger().info( \"Loading stylesheet \" + stylesheet );", "-            m_liaison.setStylesheet( stylesheet );", "-            final Iterator params = m_params.iterator();", "-            while( params.hasNext() )", "-            {", "-                final XSLTParam param = (XSLTParam)params.next();", "-", "-                final String expression = param.getExpression();", "-                if( expression == null )", "-                {", "-                    throw new TaskException( \"Expression attribute is missing.\" );", "-                }", "-", "-                final String name = param.getName();", "-                if( name == null )", "-                {", "-                    throw new TaskException( \"Name attribute is missing.\" );", "-                }", "-", "-                m_liaison.addParam( name, expression );", "-            }", "-            getLogger().info( \"Failed to read stylesheet \" + stylesheet );", "+", "+    private void specifyParams() throws TaskException", "+    {", "+        final Iterator params = m_params.iterator();", "+        while( params.hasNext() )", "+        {", "+            final XSLTParam param = (XSLTParam)params.next();", "+", "+            final String expression = param.getExpression();", "+            if( expression == null )", "+            {", "+                throw new TaskException( \"Expression attribute is missing.\" );", "+            }", "+", "+            final String name = param.getName();", "+            if( name == null )", "+            {", "+                throw new TaskException( \"Name attribute is missing.\" );", "+            }", "+", "+            m_transformer.setParameter( name, expression );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94dc14c4610b9155ca3518445ef9351d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "3f37290d4ae3797033fd3dc89cada6b329753eff", "commitAfterChange": "cad841b38aec395f91809031598a293237bc8665", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private boolean checkFile()", "signatureAfterChange": "      private boolean checkFile()", "diff": ["-                log(\"Searching \" + paths[i], Project.MSG_VERBOSE);", "-                if(new File(paths[i], file.getName()).isFile()) {", "-                    return true;", "+                log(\"Searching \" + paths[i], Project.MSG_DEBUG);", "+                File filename = new File(paths[i]);", "+                if (type != null) {", "+                    if (type.equalsIgnoreCase(\"dir\")) {", "+                        String dir = filename.getParent();", "+                        if(dir != null) {", "+                            int index = dir.lastIndexOf(File.separator);", "+                            String dirname = dir.substring(index + 1);", "+                            if(dirname.equals(file.getName())) {", "+                                log(\"Found directory: \" + dir, Project.MSG_VERBOSE);", "+                                return true;", "+                            }", "+                        }", "+                    } else if (type.equalsIgnoreCase(\"file\")) {", "+                        if(filename.isFile()) {", "+                            if(filename.getName().equals(file.getName())) {", "+                                log(\"Found file: \" + filename, Project.MSG_VERBOSE);", "+                                return true;", "+                            }", "+                        }", "+                    }", "+                } else if(filename.isFile()) {", "+                    if(filename.getName().equals(file.getName())) {", "+                        log(\"Found file: \" + filename, Project.MSG_VERBOSE);", "+                        return true;", "+                    }"]}]}