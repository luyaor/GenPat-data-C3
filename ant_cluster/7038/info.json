{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "009b248a4fd91864a2e6d7b47f1d4eed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed57f3ec4c84ad8efddd1ef93e530ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "1fbd2fe328a83e69ff72aa45c35414777f218279", "commitAfterChange": "c31f5ae25766b6bab90b1d0ac86eab2c7f66b804", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["-                    if (out != null) {", "-                        try {", "-                            out.close();", "-                        } catch (Throwable t) {", "-                            // ignore", "-                        }", "-                    }", "+                    FileUtils.close(out);", "+                if (Os.isFamily(\"openvms\")) {", "+                    //Use the VM launcher instead of shell launcher on VMS", "+                    //for java", "+                    exe.setVMLauncher(true);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7ee54d503acfc88339e208ea705ef7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java", "commitBeforeChange": "b60b29667568cca48b63cd59b0f3a88a69be26a6", "commitAfterChange": "c08f713b3cdbc623c3ab427d978bf75b31801f9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["-            Class c = Class.forName(\"sun.tools.javac.Main\");", "+            Class c = Class.forName(CLASSIC_COMPILER_CLASSNAME);", "-            throw new BuildException(\"Cannot use classic compiler, as it is \"", "-                                     + \"not available.  A common solution is \"", "-                                     + \"to set the environment variable\"", "-                                     + \" JAVA_HOME to your jdk directory.\",", "-                                     location);", "+            throw new BuildException(\"Cannot use classic compiler , as it is \"", "+                                        + \"not available. \\n\"", "+                                        + \" A common solution is \"", "+                                        + \"to set the environment variable\"", "+                                        + \" JAVA_HOME to your jdk directory.\\n\"", "+                                        + \"It is currently set to \\\"\"", "+                                        + JavaEnvUtils.getJavaHome()", "+                                        + \"\\\"\",", "+                                        location);", "-            try {", "-                logstr.close();", "-            } catch (IOException e) {", "-                // plain impossible", "-                throw new BuildException(e);", "-            }", "+            FileUtils.close(logstr);"]}]}