{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45847ca7bb0b5fd75870ea6b1b2206f6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b16ba9027a326e4e8ff5aedb1059cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java", "commitBeforeChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "commitAfterChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      Project buildFromFile(File file) throws AntException", "signatureAfterChange": "     public Project buildFromFile(File file) throws AntException", "diff": ["-    Project buildFromFile(File file) throws AntException {", "+     */", "+    public Project buildFromFile(File file) throws AntException {", "+            bhb.setProjectFileLocation(file);", "-            return bhb.getProject();", "+            Project project = bhb.getProject();", "+            project.setFrontEnd(frontEnd);", "+            return project;", "-            throw new AntException(pce.getMessage());", "+            throw new AntException(pce);", "-            System.out.println(se);", "-            System.out.println(se.getMessage());", "-            throw new AntException(se.getMessage());", "+            Exception e = se.getException();", "+            if (e != null && e instanceof AntException) {", "+                // it's one of our own thrown from inside the parser to stop it", "+                throw (AntException)e;", "+            }", "+            throw new AntException(se);", "-            throw new AntException(ioe.getMessage());", "+            throw new AntException(ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b130f5e861a7a8a90570556519eefae1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public ClassLoader createClassLoader( final File[] files ) throws ClassLoaderException", "signatureAfterChange": "     public ClassLoader createClassLoader( final File[] files ) throws ClassLoaderException", "diff": ["-            // Build a list of canonical file names", "-            final ArrayList canonFiles = new ArrayList( files.length );", "-            for( int i = 0; i < files.length; i++ )", "+            if( files == null || files.length == 0 )", "-                canonFiles.add( files[ i ].getCanonicalFile() );", "+                return m_commonClassLoader;", "-            // Locate cached classloader, creating it if necessary", "-            ClassLoader classLoader = (ClassLoader)m_fileDeployers.get( canonFiles );", "-            if( classLoader == null )", "+            // Build a list of optional packages for the files", "+            final OptionalPackage[] packages = new OptionalPackage[ files.length ];", "+            for( int i = 0; i < files.length; i++ )", "-                classLoader = buildClassLoader( canonFiles );", "-                m_fileDeployers.put( canonFiles, classLoader );", "+                final File canonFile = files[ i ].getCanonicalFile();", "+                checkFile( canonFile );", "+                packages[ i ] = toOptionalPackage( canonFile );", "-            return classLoader;", "+", "+            // Build the classloaders for the required extensions", "+            final ClassLoader[] parentClassLoaders = buildParentClassLoaders( packages, new HashSet() );", "+", "+            // Build the classloader", "+            final URL[] urls = buildClasspath( files );", "+            return new MultiParentURLClassLoader( urls, parentClassLoaders );", "-            final String message = REZ.getString( \"create-classloader-for-file.error\", fileNames );", "+            final String message = REZ.getString( \"create-classloader-for-files.error\", fileNames );"]}]}