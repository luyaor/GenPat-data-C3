{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a356e86906b5974b8e120cc0fa52cd52", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a63398b78b203ac020055f506a58646", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java", "commitBeforeChange": "66dbdd5d8c83369baa51f85a03715ceac9e8fa7b", "commitAfterChange": "3fb018053018728cd4a6d4d873607092012fd54e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void reparseCentralDirectoryData(boolean hasUncompressedSize,                                             boolean hasCompressedSize,                                             boolean hasRelativeHeaderOffset,                                             boolean hasDiskStart)         throws ZipException", "signatureAfterChange": "     public void reparseCentralDirectoryData(boolean hasUncompressedSize,                                             boolean hasCompressedSize,                                             boolean hasRelativeHeaderOffset,                                             boolean hasDiskStart)         throws ZipException", "diff": ["-            if (rawCentralDirectoryData.length != expectedLength) {", "+            if (rawCentralDirectoryData.length < expectedLength) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2bf9a448b35a4e8c6868ad203e1f84a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/DOMUtil.java", "commitBeforeChange": "a7414cb320c3631615d56227a4dd57aab3680701", "commitAfterChange": "92b63d872fc80095fd18081630a915e88b1d1aea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static NodeList listChildNodes(Node parent, NodeFilter filter, boolean recurse)", "signatureAfterChange": "     public static NodeList listChildNodes(Node parent, NodeFilter filter, boolean recurse)", "diff": ["-                    final int reclength = matches.getLength();", "+                    final int reclength = recmatches.getLength();"]}]}