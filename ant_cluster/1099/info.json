{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba3c3e5fe31288ab8745f54e204d30bb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9970def47892a2cfd7b0d8c18df2dc7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl.java", "commitBeforeChange": "f9bcdd7713370a79393e749e0e55fada438faa4a", "commitAfterChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "diff": ["-                new TaskHandler(this, (TaskContainer)child, childWrapper, target).init(name, attrs);", "+                new TaskHandler(helperImpl, this, (TaskContainer)child, childWrapper, target).init(name, attrs);", "-                new NestedElementHandler(this, child, childWrapper, target).init(name, attrs);", "+                new NestedElementHandler(helperImpl, this, child, childWrapper, target).init(name, attrs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd6796b8c60da7ba745cde7c7a87390b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl.java", "commitBeforeChange": "4fc2dab7e2b955f5ada45d3b97647084a15e951f", "commitAfterChange": "df867b66e89d6dcfa962efed57cbbdf543d8d7bd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 28, "signatureBeforeChange": "          public void startElement(String name, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "diff": ["+         */", "-                new TaskHandler(helper, this, (TaskContainer)child, childWrapper, target).init(name, attrs);", "+                new TaskHandler(this, (TaskContainer)child, childWrapper, target).init(name, attrs);", "-                new NestedElementHandler(helper, this, child, childWrapper, target).init(name, attrs);", "+                new NestedElementHandler(this, child, childWrapper, target).init(name, attrs);"]}]}