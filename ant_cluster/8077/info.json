{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb5cab052ae4f48efc7269ab0f545b97", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ebea9a35bf77dbf7a57ca3060bb77d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected final void doInitialize( final Task task, final Configuration taskModel )         throws TaskException", "signatureAfterChange": "      protected final void doInitialize( final Task task, final Configuration taskModel )         throws TaskException", "diff": ["-                throw new TaskException( \"Error initializing task \" +  taskModel.getName() + \" at \" +", "-                                         taskModel.getLocation() + \"(Reason: \" +", "-                                         throwable.getMessage() + \")\", throwable );", "+                final String message =", "+                    REZ.getString( \"init.error\",", "+                                   taskModel.getName(),", "+                                   taskModel.getLocation(),", "+                                   throwable.getMessage() );", "+                throw new TaskException( message, throwable );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7189a7bc0e4c6cfc374df124ff97785a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "f1ca327fe83b0932fe8240cbcf3b86d550dce2d5", "commitAfterChange": "ce85ba9cfee9e2c3595721d7ea30ed85f2672e45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( final Class destination,                            final Object original,                            final Context context )         throws ConverterException", "signatureAfterChange": "     public Object convert( final Class destination,                            final Object original,                            final Context context )         throws ConverterException", "diff": ["-            return converter.convert( destination, original, context );", "+            final Object object = converter.convert( destination, original, context );", "+            if( destination.isInstance( object ) )", "+            {", "+                return object;", "+            }", "+            else", "+            {", "+                final String message =", "+                    REZ.getString( \"bad-return-type.error\",", "+                                   name,", "+                                   object,", "+                                   destination.getName() );", "+                throw new ConverterException( message );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa39fcaf742cfe932cfa2ded71df8855", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void configure( final Object object,                            final String name,                            final String value,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final String name,                            final String value,                            final Context context )         throws ConfigurationException", "diff": ["+        // TODO - this ain't right, the validation is going to be screwed up", "+        final ConfigurationState state = configurer.startConfiguration( object );", "+", "-        setAttribute( configurer, object, name, value, context );", "-    }", "+            setAttribute( state, name, value, context );", "+        catch( final CascadingException ce )", "+            final String message =", "+                REZ.getString( \"bad-set-class-attribute.error\",", "+                               name,", "+                               object.getClass().getName() );", "+            throw new ConfigurationException( message, ce );", "+", "+        // Finish up", "+        configurer.finishConfiguration( state );"]}]}