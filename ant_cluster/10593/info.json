{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20a90d33fc27b245e4b9716c7c1a9de1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f9c2b0f405eeeaf8342776a7cb1a77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/TestRunnerTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testNullTestCase() throws Exception", "signatureAfterChange": "      public void testNullTestCase() throws Exception", "diff": ["-        assertEquals(new Integer(3), recorder.runStarted.elementAt(0));", "+        assertEquals(1, recorder.runStarted.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8927acf2cd58aed63c5b96fb4d48e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private void configureElement(Object element, BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void configureElement(Object element, BuildElement model)          throws ExecutionException", "diff": ["-            ImportInfo info = (ImportInfo)definitions.get(nestedElementName);", "+            ImportInfo info = componentManager.getDefinition(nestedElementName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd7fabf2819efcb60479c9c34739f48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPool.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public ConstantPoolEntry getEntry(int index)", "signatureAfterChange": "     public ConstantPoolEntry getEntry(int index)", "diff": ["-        return (ConstantPoolEntry) entries.elementAt(index);", "+        return entries.get(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514107461825e95761c597d7a2ac9a14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/PropertyResource.java", "commitBeforeChange": "e46c4cd3c8d5c5ec8ab6d69488dcf1371e238cca", "commitAfterChange": "0a8c19b47ea82e23dda0ae4b34a2a48877273b18", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public OutputStream getOutputStream() throws IOException", "signatureAfterChange": "     public OutputStream getOutputStream() throws IOException", "diff": ["-        if (isReference()) {", "-            return ((Resource) getCheckedRef()).getOutputStream();", "+        if (isReferenceOrProxy()) {", "+            return getReferencedOrProxied().getOutputStream();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55d17c304ac156422570c88b40ef4441", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FilterSet.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public synchronized Object clone() throws BuildException", "signatureAfterChange": "     @Override \tpublic synchronized Object clone() throws BuildException", "diff": ["-    public synchronized Object clone() throws BuildException {", "+    @Override", "+\tpublic synchronized Object clone() throws BuildException {", "-            return ((FilterSet) getRef()).clone();", "+            return getRef().clone();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b6b67fcd4c73f4edda795ef4f44a43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "f358a34a1de10daf7d4a61dc818d5a51ff2bee81", "commitAfterChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          protected ConverterEngine createConverterEngine()", "signatureAfterChange": "          protected ConverterEngine createConverterEngine()", "diff": ["-        engine.setConverterFactory( (ConverterFactory)m_taskletFactory );", "+        engine.setFactory( m_factory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f8ca45d9dfa9e4e4250a08fe084d9e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "be938b1e8fe6d68aec358cb6982c7d70fe827886", "commitAfterChange": "ef420c53bf5756a4e14afb47a54cef25e01017a9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultTaskContext()", "signatureAfterChange": "     public DefaultTaskContext()", "diff": ["-        this( (TaskContext)null );", "+        this( null, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68da2a5b85a5ebcdc3e73b65abb82228", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/zip/ExtraFieldUtilsTest.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      @Override     public void setUp()", "diff": ["+    @Override", "-        dummy.setHeaderId(new ZipShort(1));", "+        dummy.setHeaderId(UNRECOGNIZED_HEADER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841e0d1bc8d129a14e65cec0253f011b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java", "commitBeforeChange": "cc6786e6a60a3432bd3e5db472939b21879251ce", "commitAfterChange": "539d484c019be7fdd10527a45154e4e2420bce48", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testSystemId()", "signatureAfterChange": "      public void testSystemId()", "diff": ["-        String systemid = ((TraXLiaison)liaison).getSystemId(file);", "-        assertTrue(\"SystemIDs should start by file:///\", systemid.startsWith(\"file:///\"));", "+        String systemid = JAXPUtils.getSystemId(file);", "+        assertTrue(\"SystemIDs should start by file:/\", systemid.startsWith(\"file:/\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85eab06236964577fa378422d21aa7d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/xml/ElementHandler.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String getAttribute(String attributeName)", "signatureAfterChange": "     public String getAttribute(String attributeName)", "diff": ["-        return (String) elementAttributes.get(attributeName);", "+        return elementAttributes.getAttribute(attributeName);"]}]}