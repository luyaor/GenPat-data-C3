{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c531f553b67b878002d4d1c1f8393f67", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ccaa65d67d2528fac3daa36ff95e372", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/RegisterTasklet.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void run()         throws AntException", "signatureAfterChange": "      public void run()         throws AntException", "diff": ["+/*", "-", "+*/", "-            throw new AntException( \"Must specify taskname parameter\" );            ", "+            throw new AntException( \"Must specify taskname parameter\" );", "+        }", "+", "+        if( null == m_tasklib && null == m_classname )", "+        {", "+            throw new AntException( \"Must specify classname if don't specify \" + ", "+                                    \"tasklib parameter\" );", "-            final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "-            final URL url = tasklib.toURL();", "+            URL url = null;", "+", "+            if( null != m_tasklib )", "+            {", "+                final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "+                url = tasklib.toURL();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de4c5fea2d20041a4976020645877eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Equals.java", "commitBeforeChange": "910c937723c4710cb1309c939dbcd4b8c3e8b6ce", "commitAfterChange": "bdfee6de49421e9d026d6f0f1b48db07ec31621d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        if (arg1 == null || arg2 == null) {", "-            throw new BuildException(\"both arg1 and arg2 are required in \"", "-                                     + \"equals\");", "+        if ((args & REQUIRED) != REQUIRED) {", "+            throw new BuildException(\"both arg1 and arg2 are required in equals\");", "-        if (trim) {", "-            arg1 = arg1.trim();", "-            arg2 = arg2.trim();", "+        if (arg1 instanceof String && arg2 instanceof String) {", "+            String s1 = (String) arg1;", "+            String s2 = (String) arg2;", "+            if (trim) {", "+                s1 = s1.trim();", "+                s2 = s2.trim();", "+            }", "+            return caseSensitive ? s1.equals(s2) : s1.equalsIgnoreCase(s2);", "-", "-        return caseSensitive ? arg1.equals(arg2) : arg1.equalsIgnoreCase(arg2);", "+        return arg1 == arg2 || arg1 != null && arg1.equals(arg2);"]}]}