{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19d10d2067aeb8420656ec1ca78b900a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4da7d23f323373800f84fac5933afed3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void handleResources(Handler h)", "signatureAfterChange": "      private void handleResources(Handler h)", "diff": ["-        for (Iterator i = filesets.iterator(); i.hasNext();) {", "-            FileSet fs = (FileSet) i.next();", "-            DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-            String[] f = ds.getIncludedFiles();", "-            for (int j = 0; j < f.length; j++) {", "-                Resource r = ds.getResource(f[j]);", "-                if (!r.isExists()) {", "-                    log(r.getName() + \" does not exist\", Project.MSG_ERR);", "-                } else if (r.isDirectory()) {", "-                    log(r.getName() + \" is a directory; length unspecified\",", "-                        Project.MSG_ERR);", "-                } else {", "-                    //force a full path:", "-                    File basedir = ds.getBasedir();", "-                    String s = FileUtils.getFileUtils().resolveFile(", "-                        basedir, r.getName()).getAbsolutePath();", "-                    h.handle(new Resource(s, true,", "-                        r.getLastModified(), false, r.getSize()));", "-                }", "+        for (Iterator i = resources.iterator(); i.hasNext();) {", "+            Resource r = (Resource) i.next();", "+            if (!r.isExists()) {", "+                log(r + \" does not exist\", Project.MSG_ERR);", "+            } else if (r.isDirectory()) {", "+                log(r + \" is a directory; length unspecified\",", "+                    Project.MSG_ERR);", "+            } else {", "+                h.handle(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e942739a63d0f56b759116a47d83a41b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "60a709d594d002a017dddb2d2cd9c141f250de94", "commitAfterChange": "4122b8a95fe61f58e29b2ddcf1c8ee39ccd0a4f6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void handleFilesets(Handler h)", "signatureAfterChange": "      private void handleFilesets(Handler h)", "diff": ["-        HashSet included = new HashSet(filesets.size() * 10);", "+        HashSet included = new HashSet(filesets.size());", "-            File basedir = fs.getDir(getProject());", "-                File file = FileUtils.getFileUtils().resolveFile(basedir, f[j]);", "-                if (included.add(file)) {", "-                    h.handle(file);", "+                Resource r = ds.getResource(f[j]);", "+                if (!r.isExists()) {", "+                    log(r.getName() + \" does not exist\", Project.MSG_ERR);", "+                } else if (r.isDirectory()) {", "+                    log(r.getName() + \" is a directory; length unspecified\",", "+                        Project.MSG_ERR);", "+                } else {", "+                    //clone the Resource and alter path", "+                    File basedir = ds.getBasedir();", "+                    if (basedir != null) {", "+                        r = (Resource) (r.clone());", "+                        r.setName(FileUtils.getFileUtils().resolveFile(", "+                            basedir, r.getName()).getAbsolutePath());", "+                    }", "+                    if (included.add(r.getName())) {", "+                        h.handle(r);", "+                    }", "-    }"]}]}