{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b271ce071879cd58192cc86bb538548d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd8572b3a1c3f752cd26909f9896d34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "cb2daf1d8338e80c1588a97c243341940d00fcc8", "commitAfterChange": "39cc96663f1c8fe0df6249e2f8210f405f858e78", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public String diagnoseCreationFailure(String componentName, String type)", "signatureAfterChange": "     public String diagnoseCreationFailure(String componentName, String type)", "diff": ["-            boolean isAntlib=componentName.indexOf(ANTLIB_PREFIX)==0;", "+            boolean isAntlib = componentName.indexOf(ANTLIB_PREFIX) == 0;", "-            out.println(\"Action: Check that any custom tasks/types have been declared\");", "-            out.println(\"Action: Check that any <presetdef>/<macrodefs> declarations have taken place\");", "-            if(isAntlib) {", "+            out.println(\"Action: Check that any custom tasks/types have been declared.\");", "+            out.println(\"Action: Check that any <presetdef>/<macrodef> declarations have taken place.\");", "+            if (isAntlib) {", "-                out.println(\"Action: check that the implementing library exists \"", "+                out.println(\"Action: Check that the implementing library exists \"", "-                    out.println(\"        This looks like one of Ant's optional components\");", "-                    out.println(\"Action: check that the appropriate optional JAR exists \"", "+                    out.println(\"        This looks like one of Ant's optional components.\");", "+                    out.println(\"Action: Check that the appropriate optional JAR exists \"", "-                    out.println(\"Action: check that the component has been correctly declared\");", "-                    out.println(\"        And that the implementing JAR is in ANT_HOME/lib or in\");", "+                    out.println(\"Action: Check that the component has been correctly declared\");", "+                    out.println(\"        and that the implementing JAR is in ANT_HOME/lib or in\");", "-                if(optional) {", "+                if (optional) {", "-                    out.println(\"       This class may be in a separate JAR, that is not installed.\");", "+                    out.println(\"       This class may be in a separate JAR that is not installed.\");", "-                out.println(\"Action: determine what extra JAR files are needed, and place them\");", "-                out.println(\"        In ANT_HOME/lib or\");", "+                out.println(\"Action: Determine what extra JAR files are needed, and place them\");", "+                out.println(\"        in ANT_HOME/lib or\");", "-                    out.println(\"       \"+ ncdfe.getMessage());", "-                    out.println(\"Action: determine what extra JAR files are needed, and place them\");", "-                    out.println(\"        In ANT_HOME/lib or\");", "+                    out.println(\"       \" + ncdfe.getMessage());", "+                    out.println(\"Action: Determine what extra JAR files are needed, and place them\");", "+                    out.println(\"        in ANT_HOME/lib or\");", "-            if(definitions) {", "-                out.println(\"It may just be a typing error in the build file \" +", "+            if (definitions) {", "+                out.println(\"It may just be a typographical error in the build file \" +", "-                if(antTask) {", "+                if (antTask) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210db2b4bd898e30abd4055b4b93093d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java", "commitBeforeChange": "6ea9dc1024fa547e046417d86c602bed21d64a43", "commitAfterChange": "9bd753321ae84d06e3115d0549c2d7dda7972428", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void testInvalidZipException() throws Exception", "signatureAfterChange": "     public void testInvalidZipException() throws Exception", "diff": ["-            int startMessage = log.indexOf(\"Unable to obtain resource from \");", "+            int startMessage = log.indexOf(\"CLASSPATH element \");", "-            assertTrue(log.indexOf(\"foo.jar\", startMessage) > 0);", "+            assertTrue(log.indexOf(\"foo.jar is not a JAR\", startMessage) > 0);", "-            startMessage = log.indexOf(\"Unable to obtain resource from \");", "+            startMessage = log.indexOf(\"CLASSPATH element \");", "-            assertTrue(log.indexOf(\"foo.jar\", startMessage) > 0);", "+            assertTrue(log.indexOf(\"foo.jar is not a JAR\", startMessage) > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57bdda6845ae77ba331cfc0695efa395", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Resource.java", "commitBeforeChange": "778ee790cbe20aba9fdd07fe06db1a7cf67134f1", "commitAfterChange": "3783d9744b1849d6aa373e8cc0af642fd9e87fba", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     public Object clone()", "diff": ["-            throw new Error(\"CloneNotSupportedException for a \"", "-                            + \"Clonable Resource caught?\");", "+            throw new UnsupportedOperationException(", "+                    \"CloneNotSupportedException for a Resource caught. \"+", "+                    \"Derived classes must support cloning.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77089549c23985993dd4a7de8d811a85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "5b362efc980668c8bd04aa2ea6405174bd443f16", "commitAfterChange": "d93d7b09161b9fed366062f9fc095e46e772a69e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void _testPathAsResource()", "signatureAfterChange": "          public void testPathAsResource()", "diff": ["-    public void _testPathAsResource() {", "+    public void testPathAsResource() {", "-    \tFile file1 = new File(getProjectDir(), getProject().getProperty(\"to.dir\")+\"/file1.txt.bak\");", "-    \tFile file2 = new File(getProjectDir(), getProject().getProperty(\"to.dir\")+\"/file2.txt.bak\");", "-    \tFile file3 = new File(getProjectDir(), getProject().getProperty(\"to.dir\")+\"/file3.txt.bak\");", "+    \tFile file1 = new File(getProjectDir(), getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "+    \tFile file2 = new File(getProjectDir(), getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "+    \tFile file3 = new File(getProjectDir(), getProject().getProperty(\"to.dir\")+\"/file3.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836566ecbfb43f50a314229083564f5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/util/DOMElementWriterTest.java", "commitBeforeChange": "3209b4182fb36ca8eeb764b0f567aee7145dd61b", "commitAfterChange": "f8f45e9f02922f5543bdb871c146a749663c9d05", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testEncode()", "signatureAfterChange": "      public void testEncode()", "diff": ["-        assertEquals(\"&#20;\", w.encode(\"&#20;\"));", "-        assertEquals(\"&#x20;\", w.encode(\"&#x20;\"));", "-        assertEquals(\"&#xA0;\", w.encode(\"&#xA0;\"));", "+        assertEquals(\"&amp;#20;\", w.encode(\"&#20;\"));", "+        assertEquals(\"&amp;#x20;\", w.encode(\"&#x20;\"));", "+        assertEquals(\"&amp;#xA0;\", w.encode(\"&#xA0;\"));", "-        assertEquals(\"&quot;\", w.encode(\"&quot;\"));", "-        assertEquals(\"&apos;\", w.encode(\"&apos;\"));", "-        assertEquals(\"&gt;\", w.encode(\"&gt;\"));", "-        assertEquals(\"&lt;\", w.encode(\"&lt;\"));", "-        assertEquals(\"&amp;\", w.encode(\"&amp;\"));", "+        assertEquals(\"&amp;quot;\", w.encode(\"&quot;\"));", "+        assertEquals(\"&amp;apos;\", w.encode(\"&apos;\"));", "+        assertEquals(\"&amp;gt;\", w.encode(\"&gt;\"));", "+        assertEquals(\"&amp;lt;\", w.encode(\"&lt;\"));", "+        assertEquals(\"&amp;amp;\", w.encode(\"&amp;\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9630f07794732e44c21f209502cce6a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "685af27ceefe23e6cbaf8e8212805d3850765bdc", "commitAfterChange": "157d8f04d2c676ac93a8cda891f804bddf6f7836", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void createComponents()         throws Exception", "signatureAfterChange": "     private void createComponents()         throws Exception", "diff": ["-        component = getParameter( \"ant.comp.converter\" );", "+        component = getParameter( \"myrmidon.comp.converter\" );", "-        component = getParameter( \"ant.comp.datatype\" );", "+        component = getParameter( \"myrmidon.comp.datatype\" );", "-        component = getParameter( \"ant.comp.task\" );", "+        component = getParameter( \"myrmidon.comp.task\" );", "-        component = getParameter( \"ant.comp.project\" );", "-        m_projectEngine = (ProjectManager)createComponent( component, ProjectManager.class );", "+        component = getParameter( \"myrmidon.comp.project\" );", "+        m_projectManager = (ProjectManager)createComponent( component, ProjectManager.class );", "-        component = getParameter( \"ant.comp.builder\" );", "+        component = getParameter( \"myrmidon.comp.builder\" );", "-        component = getParameter( \"ant.comp.deployer\" );", "+        component = getParameter( \"myrmidon.comp.deployer\" );", "-        component = getParameter( \"ant.comp.configurer\" );", "+        component = getParameter( \"myrmidon.comp.configurer\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27253d4d9acca95f41d5fffa72a54a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/TouchTest.java", "commitBeforeChange": "74124d752548081055441b041bb6002beab7de8d", "commitAfterChange": "487f084e0c668efa5554f1560183f05dbf6721be", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void test1970()", "signatureAfterChange": "     public void test2000()", "diff": ["-    public void test1970() {", "-        touchFile(\"test1970\", 0);", "+    public void test2000() {", "+        touchFile(\"test2000\", 946080000000L);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2fb55043015df3e8904fa55af7041e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "6de0aa04319c4fb4fd6947f033da16f8efbe95e6", "commitAfterChange": "550607147fe6a0c89a1b6e6c85f5e69b334d31d7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void test2()", "signatureAfterChange": "      public void test2()", "diff": ["-        expectLog(\"test2\", \"Press Return key to continue...\");", "+        executeTarget(\"test1\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c876340d8b44816bf9e5b2914a3758ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/PropertyExpansionTest.java", "commitBeforeChange": "020f9a52c4a54560f617aea642a180e96294e9cc", "commitAfterChange": "2fa6f80465ad1678bf27e4738af44e5a94a95614", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testPropertyExpansion()", "signatureAfterChange": "     public void testPropertyExpansion()", "diff": ["-        assertExpandsTo(\"a$b\",\"ab\");", "-        assertExpandsTo(\"$}}\",\"}}\");", "-        assertExpandsTo(\"$$$-\",\"$-\");", "+        assertExpandsTo(\"a$b\",\"a$b\");", "+        assertExpandsTo(\"$}}\",\"$}}\");", "+        assertExpandsTo(\"$$$-\",\"$$-\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6760cbf00b1e1291791b2fd47fafa4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "52b18b628c2ffab8f6d14389c77ebb7234afa52a", "commitAfterChange": "6b023e669d1e24267b401bbb9ae66933a43483ff", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          private DeweyDecimal getVersion()", "signatureAfterChange": "          private DeweyDecimal getVersion()", "diff": ["-                versionString.indexOf(\"compiled on\")-1);", "+                versionString.indexOf(\"Ant version\")+17);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f40d185fc7a3075f4035ceff2ea0ff54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "0c06dd0c405a9c6e308a71d21fc31694cdb3281d", "commitAfterChange": "1fcc1b616775491d69f96edadb3a1ec62a7eb73f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static void printUsage()", "signatureAfterChange": "     private static void printUsage()", "diff": ["-        msg.append(\"  -help                  print this message\" + lSep);", "-        msg.append(\"  -projecthelp           print project help information\" + lSep);", "+        msg.append(\"  -help, -h              print this message\" + lSep);", "+        msg.append(\"  -projecthelp, -p       print project help information\" + lSep);", "-        msg.append(\"  -debug                 print debugging information\" + lSep);", "-        msg.append(\"  -emacs                 produce logging information without adornments\" + lSep);", "+        msg.append(\"  -debug, -d             print debugging information\" + lSep);", "+        msg.append(\"  -emacs, -e             produce logging information without adornments\" + lSep);", "-        msg.append(\"  -find <file>           search for buildfile towards the root of the\" + lSep);", "-        msg.append(\"                         filesystem and use it\" + lSep);", "+        msg.append(\"  -find <file>           (s)earch for buildfile towards the root of\" + lSep);", "+        msg.append(\"    -s  <file>           the filesystem and use it\" + lSep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd80c8527f359fccc9e57421e1bc6e98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/MutantBuilder.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void build_lib(BuildHelper helper)", "signatureAfterChange": "     protected void systemlib(BuildHelper helper)", "diff": ["-    protected void build_lib(BuildHelper helper) {", "-        helper.mkdir(\"${bin.dir}/antlibs/${libset}\");", "-        helper.mkdir(\"${distlib.dir}/antlibs\");", "+    protected void systemlib(BuildHelper helper) {", "+        helper.mkdir(\"${bin.dir}/antlibs/system\");", "+        helper.mkdir(\"${distlib.dir}/syslibs\");", "-        helper.javac(\"${java.dir}/antlibs/${libset}\", \"${bin.dir}/antlibs/${libset}\", \"classpath.antlibs\");", "-        helper.jar(\"${bin.dir}/antlibs/${libset}\", \"${distlib.dir}/antlibs/${libset}.jar\",", "-                   \"${java.dir}/antlibs/${libset}\", \"antlib.xml\", null, null);", "+        helper.javac(\"${java.dir}/antlibs/system\", \"${bin.dir}/antlibs/system\", \"classpath.antlibs\");", "+        helper.jar(\"${bin.dir}/antlibs/system\", \"${distlib.dir}/syslibs/system.jar\",", "+                   \"${java.dir}/antlibs/system\", \"antlib.xml\", null, null);"]}]}