{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "553b9f93aa453efaebf1bf8a78a9a80a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d89e5ae22631af866c0503d50ea3b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Substitution.java", "commitBeforeChange": "e539f6378221559dd8f18f43ceb941801e9a9820", "commitAfterChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Substitution getRef(Project p)", "signatureAfterChange": "     public Substitution getRef(Project p)", "diff": ["-        if (!isChecked()) {", "-            Stack stk = new Stack();", "-            stk.push(this);", "-            dieOnCircularReference(stk, p);", "-        }", "-", "-", "-        Object o = getRefid().getReferencedObject(p);", "-        if (!(o instanceof Substitution)) {", "-            String msg = getRefid().getRefId() + \" doesn\\'t denote a substitution\";", "-            throw new BuildException(msg);", "-        } else {", "-            return (Substitution) o;", "-        }", "+        return (Substitution) getCheckedRef(p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c5fa2b6c0efb57073f3ce1256b55bac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FileList.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected FileList getRef(Project p)", "signatureAfterChange": "     protected FileList getRef(Project p)", "diff": ["-        if (!isChecked()) {", "-            Stack stk = new Stack();", "-            stk.push(this);", "-            dieOnCircularReference(stk, p);", "-        }", "-", "-        Object o = getRefid().getReferencedObject(p);", "-        if (!(o instanceof FileList)) {", "-            String msg = getRefid().getRefId() + \" doesn\\'t denote a filelist\";", "-            throw new BuildException(msg);", "-        } else {", "-            return (FileList) o;", "-        }", "+        return (FileList) getCheckedRef(p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed46a79149f9b973bf715e8d8e628681", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "e539f6378221559dd8f18f43ceb941801e9a9820", "commitAfterChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private PatternSet getRef(Project p)", "signatureAfterChange": "     private PatternSet getRef(Project p)", "diff": ["-        if (!isChecked()) {", "-            Stack stk = new Stack();", "-            stk.push(this);", "-            dieOnCircularReference(stk, p);", "-        }", "-", "-        Object o = getRefid().getReferencedObject(p);", "-        if (!(o instanceof PatternSet)) {", "-            String msg = getRefid().getRefId() + \" doesn\\'t denote a patternset\";", "-            throw new BuildException(msg);", "-        } else {", "-            return (PatternSet) o;", "-        }", "+        return (PatternSet) getCheckedRef(p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77745d41eacef5a375a5b5f026cf7d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/RegularExpression.java", "commitBeforeChange": "e539f6378221559dd8f18f43ceb941801e9a9820", "commitAfterChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public RegularExpression getRef(Project p)", "signatureAfterChange": "     public RegularExpression getRef(Project p)", "diff": ["-        if (!isChecked()) {", "-            Stack stk = new Stack();", "-            stk.push(this);", "-            dieOnCircularReference(stk, p);", "-        }", "-", "-", "-        Object o = getRefid().getReferencedObject(p);", "-        if (!(o instanceof RegularExpression)) {", "-            String msg = getRefid().getRefId() + \" doesn\\'t denote a \"", "-                    + DATA_TYPE_NAME;", "-            throw new BuildException(msg);", "-        } else {", "-            return (RegularExpression) o;", "-        }", "+        return (RegularExpression) getCheckedRef(p);"]}]}