{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ae6c88a093ed77d2fa5dfb4b9420de1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4ad595430f0a86fd5238536883dfd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "f6a78a634593cd4660e2efa17a80f71a927df3d5", "commitAfterChange": "1d3dc3765d4efd6ae54488feab07f6a17315ebe6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected void executeTarget( final String targetName, final Target target )         throws AntException", "signatureAfterChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["-", "-    protected void executeTarget( final String targetName, final Target target )", "-        m_logger.debug( \"Executing target \" + targetName );", "+", "+    protected void executeTargetWork( final String name, ", "+                                      final Target target, ", "+                                      final TaskletContext context )", "+    {", "+        m_logger.debug( \"Executing target \" + name );", "+", "-            executeTask( task );", "+            executeTask( task, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65dafa8deb6a607f35cb20ea7fa3b265", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )         throws TaskException", "signatureAfterChange": "     private void executeTarget( final String name,                                 final Target target,                                 final ExecutionFrame frame )         throws TaskException", "diff": ["+    private void executeTarget( final String name,", "-     */", "-    private void executeTargetWork( final String name,", "-                                    final Target target,", "-                                    final TaskContext context )", "+                                final ExecutionFrame frame )", "-            if( false == condition.evaluate( context ) )", "+            if( false == condition.evaluate( frame.getContext() ) )", "+        //frame.getContext().setProperty( Project.TARGET, target );", "+", "-            executeTask( tasks[ i ], context );", "+            executeTask( tasks[ i ], frame );"]}]}