{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9b66925b0d740f4180e26b1e2945f62", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98cc5e2a3d00ca7670d7da5e280c2e15", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner( Project p )", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner( Project p )         throws TaskException", "diff": ["+        throws TaskException", "-            throw new BuildException( \"No directory specified for fileset.\" );", "+            throw new TaskException( \"No directory specified for fileset.\" );", "-            throw new BuildException( dir.getAbsolutePath() + \" not found.\" );", "+            throw new TaskException( dir.getAbsolutePath() + \" not found.\" );", "-            throw new BuildException( dir.getAbsolutePath() + \" is not a directory.\" );", "+            throw new TaskException( dir.getAbsolutePath() + \" is not a directory.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f17bb669d1af7334b777d826b48b1533", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setThreadContextLoader()", "signatureAfterChange": "     public void setThreadContextLoader()         throws TaskException", "diff": ["+        throws TaskException", "-            throw new BuildException( \"Context loader has not been reset\" );", "+            throw new TaskException( \"Context loader has not been reset\" );", "-                     = ( ClassLoader )getContextClassLoader.invoke( Thread.currentThread(), new Object[0] );", "+                    = (ClassLoader)getContextClassLoader.invoke( Thread.currentThread(), new Object[ 0 ] );", "-                throw new BuildException( t.toString() );", "+                throw new TaskException( t.toString() );", "-                throw new BuildException( e.toString() );", "+                throw new TaskException( e.toString() );"]}]}