{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f0e53c2cde42349c78968187891f7be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4357d7e246da02ae1f8a150a50a511", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "37e1a669340af86ea163020ac3cec13cbd881b29", "commitAfterChange": "ce8272e144b8168b864015d2dd304410ebb236fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void transform(Node root, String xslname, String htmlname) throws SAXException", "signatureAfterChange": "     private static String getXalanVersion(Class procVersion)", "diff": ["-     */", "-    protected void transform(Node root, String xslname, String htmlname) throws SAXException {", "-        try{", "-            XSLTInputSource xsl_source = getXSLStreamSource(xslname);", "-            XSLTProcessor processor = XSLTProcessorFactory.getProcessor();", "-            File htmlfile = new File(toDir, htmlname);", "-            // create the directory if it does not exist", "-            File dir = new File(htmlfile.getParent()); // getParentFile is in JDK1.2+", "-            if (!dir.exists()) {", "-                dir.mkdirs();", "-            }", "-            task.log(\"Applying '\" + xslname + \"'. Generating '\" + htmlfile + \"'\", Project.MSG_VERBOSE);", "-            processor.process( new XSLTInputSource(root), xsl_source, new XSLTResultTarget(htmlfile.getAbsolutePath()) );", "-        } catch (IOException e){", "-            task.log(e.getMessage(), Project.MSG_ERR);", "-            e.printStackTrace(); //@todo bad, change this", "-            throw new SAXException(e.getMessage());", "-        }", "-    }", "+    /** pretty useful data (Xalan version information) to display. */", "+    private static String getXalanVersion(Class procVersion) {", "+        try {", "+            Field f = procVersion.getField(\"S_VERSION\");", "+            return f.get(null).toString();", "+        } catch (Exception e){", "+            return \"?\";", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1424a88bab3f6a301de809dbe7546f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/GUnzip.java", "commitBeforeChange": "cf64423184f84bbcea950e4b34536924cd1a22ff", "commitAfterChange": "c657b5ef73c02bd2d60b146fcf1d80cafa977e62", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      protected void extract()", "diff": ["-", "-    public void execute() throws BuildException {", "-        if (source == null) {", "-            throw new BuildException(\"No source for gunzip specified\", location);", "-        }", "-", "-        if (!source.exists()) {", "-            throw new BuildException(\"source doesn't exist\", location);", "-        }", "-", "-        if (source.isDirectory()) {", "-            throw new BuildException(\"Cannot expand a directory\", location);", "-        }", "-", "-        if (dest == null) {", "-            dest = new File(source.getParent());", "-        }", "-", "-        if (dest.isDirectory()) {", "-            String sourceName = source.getName();", "-            int len = sourceName.length();", "-            if (len > 3", "-                && \".gz\".equalsIgnoreCase(sourceName.substring(len-3))) {", "-                dest = new File(dest, sourceName.substring(0, len-3));", "-            } else {", "-                dest = new File(dest, sourceName);", "-            }", "-        }", "-", "+    protected void extract() {", "+            FileInputStream fis = null;", "-                zIn = new GZIPInputStream(new FileInputStream(source));", "+                fis = new FileInputStream(source);", "+                zIn = new GZIPInputStream(fis);", "+                if (fis != null) {", "+                    try {", "+                        fis.close();", "+                    } catch (IOException ioex) {}", "+                }"]}]}