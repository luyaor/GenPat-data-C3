{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67894ccb358db9fa2a5cfc05ff8be43d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d0d388677ca924505510854fb9bd71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "3732eb195b3d24d6480a2d7edb2818b325a3e199", "commitAfterChange": "b0507d4451b72856ddca45183143a96493e8ef3e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public void complete() throws IOException", "signatureAfterChange": "     public synchronized void complete() throws IOException", "diff": ["-    public void complete() throws IOException {", "+    public synchronized void complete() throws IOException {", "+        outputStream.flush();", "-        if (errorStream != outputStream) {", "-            errorStream.close();", "+        errorStream.flush();", "+        errorStream.close();", "+", "+        //wait for the StreamPumpers to finish", "+        while (threadGroup.activeCount() > 0) {", "+            try {", "+                managingTask.log(\"waiting for \" + threadGroup.activeCount()", "+                    + \" Threads:\", Project.MSG_DEBUG);", "+                Thread[] thread = new Thread[threadGroup.activeCount()];", "+                threadGroup.enumerate(thread);", "+                for (int i = 0; i < thread.length && thread[i] != null; i++) {", "+                    try {", "+                        managingTask.log(thread[i].toString(), Project.MSG_DEBUG);", "+                    } catch (NullPointerException enPeaEx) {", "+                    }", "+                }", "+                Thread.sleep(1000);", "+            } catch (InterruptedException eyeEx) {", "+            }", "+        setProperties();", "+", "+        inputStream = null;", "+        outputStream = errorStream = outPrintStream = errorPrintStream = null;", "+   }", "-            setPropertyFromBAOS(baos, outputProperty);", "-            setPropertyFromBAOS(errorBaos, errorProperty);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d487632749ebd70e5d134a0dd775f859", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "957f9e512572a78a3e82ca1d0938f486394950dd", "commitAfterChange": "d8361ec47ac005b959a6a22b17fecf77d540e890", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void initValidator()", "signatureAfterChange": "     private void initValidator()", "diff": ["-                    AntClassLoader loader", "-                        = getProject().createClassLoader(classpath);", "+                    AntClassLoader loader =", "+                        getProject().createClassLoader(classpath);", "-            log(\"Using SAX2 reader \" + reader.getClass().getName(),", "+            log(", "+                \"Using SAX2 reader \" + reader.getClass().getName(),", "-                log(\"Using SAX1 parser \" + reader.getClass().getName(),", "+                log(", "+                    \"Using SAX1 parser \" + reader.getClass().getName(),", "-            }  else {", "-                throw new BuildException(INIT_FAILED_MSG", "-                    + reader.getClass().getName()", "-                    + \" implements nor SAX1 Parser nor SAX2 XMLReader.\");", "+            } else {", "+                throw new BuildException(", "+                    INIT_FAILED_MSG", "+                        + reader.getClass().getName()", "+                        + \" implements nor SAX1 Parser nor SAX2 XMLReader.\");", "+", "+            // Sets properties", "+            for (int i = 0; i < propertyList.size(); i++) {", "+                final Property prop = (Property) propertyList.elementAt(i);", "+                setProperty(prop.getName(), prop.getValue());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84c2afb96bc874cdbfa49f35f7506bf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                     + getTaskName() + \" element \"", "-                     + \"are undefined\";", "-                throw new BuildException( msg );", "+                    + getTaskName() + \" element \"", "+                    + \"are undefined\";", "+                throw new TaskException( msg );", "-                         + \"together with file or resource.\";", "-                    throw new BuildException( msg );", "+                        + \"together with file or resource.\";", "+                    throw new TaskException( msg );", "-                    throw new BuildException( msg );", "+                    throw new TaskException( msg );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                            Project.MSG_WARN );", "+                             Project.MSG_WARN );", "-                        String n = ( String )keys.nextElement();", "+                        String n = (String)keys.nextElement();", "-                throw new BuildException( \"Error\", ex);", "+                throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac349922b7868a9961d7cc6b7ad942f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                     + getTaskName() + \" element \"", "-                     + \"are undefined\";", "-                throw new BuildException( msg );", "+                    + getTaskName() + \" element \"", "+                    + \"are undefined\";", "+                throw new TaskException( msg );", "-                         + \"together with file or resource.\";", "-                    throw new BuildException( msg );", "+                        + \"together with file or resource.\";", "+                    throw new TaskException( msg );", "-                    throw new BuildException( msg );", "+                    throw new TaskException( msg );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                            Project.MSG_WARN );", "+                             Project.MSG_WARN );", "-                        String n = ( String )keys.nextElement();", "+                        String n = (String)keys.nextElement();", "-                throw new BuildException( \"Error\", ex);", "+                throw new TaskException( \"Error\", ex );"]}]}