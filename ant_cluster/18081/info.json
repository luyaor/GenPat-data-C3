{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1115d533d7a213386abc633d1e5239f2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b8c0ecbab8f7f7a690b874e3de74cc7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     @Override \tpublic void scan() throws IllegalStateException", "signatureAfterChange": " \tpublic void scan() throws IllegalStateException", "diff": ["-    @Override", "-                    } catch (InterruptedException e) {", "+                    } catch (final InterruptedException e) {", "-        File savedBase = basedir;", "+        final File savedBase = basedir;", "-                boolean nullIncludes = (includes == null);", "+                final boolean nullIncludes = (includes == null);", "-                boolean nullExcludes = (excludes == null);", "+                final boolean nullExcludes = (excludes == null);", "-        } catch (IOException ex) {", "+        } catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9c448d1b0a375914def0b8e6dba8fe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void slowScan()", "signatureAfterChange": "     protected void slowScan()", "diff": ["-                    } catch (InterruptedException e) {", "+                    } catch (final InterruptedException e) {", "-                boolean nullIncludes = (includes == null);", "+                final boolean nullIncludes = (includes == null);", "-                boolean nullExcludes = (excludes == null);", "+                final boolean nullExcludes = (excludes == null);", "-                String[] excl = new String[dirsExcluded.size()];", "+                final String[] excl = new String[dirsExcluded.size()];", "-                String[] notIncl = new String[dirsNotIncluded.size()];", "+                final String[] notIncl = new String[dirsNotIncluded.size()];"]}]}