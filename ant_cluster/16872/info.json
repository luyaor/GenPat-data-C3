{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b996f07adc34dd39b443058aa84e8fa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310ca013bf9ad994084596e0e8b88579", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "96e6561e659a24f1e2122d884e83561327cb0f48", "commitAfterChange": "88dcebf815f27d9b16735745605342963870010e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private void catText()", "signatureAfterChange": "          public void close() throws IOException", "diff": ["-     */", "-    private void catText() {", "-        // Check the buffer.", "-        if (textBuffer == null) {", "-            // No text to write.", "-            return;", "-", "-        String text = textBuffer.toString();", "-", "-        // Replace ${property} strings.", "-        text = getProject().replaceProperties(text);", "-", "-        // Set up a writer if necessary.", "-        FileWriter writer = null;", "-        if (destinationFile != null) {", "-            try {", "-                writer = new FileWriter(destinationFile.getAbsolutePath(), ", "-                                        append);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Error creating destination \" + ", "-                                         \"file.\", ioe);", "-", "-        // Reads the text, line by line.", "-        BufferedReader reader = null;", "-        try {", "-            reader = new BufferedReader(new StringReader(text));", "-", "-            String line;", "-            while ((line = reader.readLine()) != null) {", "-                if (destinationFile == null) {", "-                    // Log the line, using WARN so it displays in", "-                    // 'quiet' mode.", "-                    log(line, Project.MSG_WARN);", "-                } else {", "-                    writer.write(line);", "-                    writer.write(StringUtils.LINE_SEP);", "-                    writer.flush();", "-                }", "-            }", "-", "-        } catch (IOException ioe) {", "-            throw new BuildException(\"Error while concatenating \" + ", "-                                     \"text.\", ioe);", "-        } finally {", "-            // Close resources.", "-            if (reader != null) {", "-                try {", "-                    reader.close();", "-                } catch (Exception ignore) {}", "-            }", "-", "-            if (writer != null) {", "-                try {", "-                    writer.close();", "-                } catch (Exception ignore) {}", "-            }", "-        }", "+", "+        public void close() throws IOException {", "+            if (reader != null) {", "+                reader.close();", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3942b6f07c928b97f8691f19418ef598", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "247d843943f4e031517945c2cf828dff6ffc1a78", "commitAfterChange": "334ac128fea4c6e8e76c7c8af8061a47b5019bf4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                ", "-        File propertiesFile = new File(weblogicSystemHome, weblogicPropertiesFile);", "+", "+        if (beaHome != null) {", "+            executeWLS6();", "+        }", "+        else {", "+            executeWLS();", "+        }", "+    }", "-            securityPolicyFile = new File(weblogicSystemHome, defaultPolicyFile);", "-        weblogicServer.setClasspath(classpath);                         "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa032c9b9b53fbea2518b65d6f8f48d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/execution/ExecutionFrame.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public ExecutionFrame(Project project, Map taskDefs, Map converterDefs,                           String namespace) throws ConfigException", "signatureAfterChange": "          private ExecutionFrame(Project project, AntLibrary[] libraries, String namespace)          throws ConfigException", "diff": ["-    public ExecutionFrame(Project project, Map taskDefs, Map converterDefs,", "-                          String namespace) throws ConfigException {", "-        this.project = project;", "-        this.taskDefs = taskDefs;", "+     */     ", "+    private ExecutionFrame(Project project, AntLibrary[] libraries, String namespace) ", "+        throws ConfigException {", "+    ", "+        setupFrame(project, libraries);", "+    }", "-        // We create a set of converters from the converter definitions we", "-        // have been given and initialise them. They should be AntConverters", "-        setupConverters(converterDefs);", "-        ", "-                = new ExecutionFrame(importedProject, taskDefs, converterDefs, importNamespace);"]}]}