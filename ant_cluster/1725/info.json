{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f0947983c2280ce97be002744dee8c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5094c2c978e4dadb7daadf77e76cd8cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void buildTarget( final DefaultProject project, final Configuration target )         throws Exception", "signatureAfterChange": "     private void buildTarget( final DefaultProject project, final Configuration target )         throws Exception", "diff": ["-            throw new Exception( \"Discovered un-named target at \" +", "-                                 target.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.target-noname.error\", target.getLocation() );", "+            throw new Exception( message );", "-            throw new Exception( \"Target with an invalid name at \" +", "-                                 target.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.target-bad-name.error\", target.getLocation() );", "+            throw new Exception( message );", "-        getLogger().debug( \"Parsing target: \" + name );", "+        if( getLogger().isDebugEnabled() )", "+        {", "+            final String message = REZ.getString( \"ant.target-parse.notice\", name );", "+            getLogger().debug( message );", "+        }", "-            throw new Exception( \"Discovered invalid target that has both a if and \" +", "-                                    \"unless condition at \" + target.getLocation() );", "+            final String message = ", "+                REZ.getString( \"ant.target-bad-logic.error\", target.getLocation() );", "+            throw new Exception( message );", "-            getLogger().debug( \"Target if condition: \" + ifCondition );", "+            if( getLogger().isDebugEnabled() )", "+            {", "+                final String message = REZ.getString( \"ant.target-if.notice\", ifCondition );", "+                getLogger().debug( message );", "+            }", "-            getLogger().debug( \"Target unless condition: \" + unlessCondition );", "+            if( getLogger().isDebugEnabled() )", "+            {", "+                final String message = REZ.getString( \"ant.target-unless.notice\", unlessCondition );", "+                getLogger().debug( message );", "+            }", "-                    throw new Exception( \"Discovered empty dependency in target \" +", "-                                         target.getName() + \" at \" + target.getLocation() );", "+                    final String message = REZ.getString( \"ant.target-bad-dependency.error\", ", "+                                                          target.getName(), ", "+                                                          target.getLocation() );", "+                    throw new Exception( message );", "-                getLogger().debug( \"Target dependency: \" + dependency );", "+                if( getLogger().isDebugEnabled() )", "+                {", "+                    final String message = REZ.getString( \"ant.target-dependency.notice\", dependency );", "+                    getLogger().debug( message );", "+                }   ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1aa59298080473895becf4108cd834", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "f87b5ed7757c30daca5cf875c95520a00dce2269", "commitAfterChange": "010a31e84477b60ff536725b388b38323540dcca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void configureAttribute( final Object object,                                      final String name,                                      final String value,                                      final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void setAttribute( final ObjectConfigurer configurer,                                final Object object,                                final String name,                                final String value,                                final Context context )         throws ConfigurationException", "diff": ["+    private void setAttribute( final ObjectConfigurer configurer,", "+                               final Object object,", "+                               final String name,", "+                               final String value,", "+                               final Context context )", "-", "-    private void configureAttribute( final Object object,", "-                                     final String name,", "-                                     final String value,", "-                                     final Context context )", "-        throws ConfigurationException", "-    {", "-        final String methodName = getMethodNameFor( name );", "-        setValue( object, methodName, value, context );", "-    }", "+        if( DEBUG )", "+            final String message = REZ.getString( \"configure-attribute.notice\",", "+                                                  name,", "+                                                  value );", "+            getLogger().debug( message );", "+        }", "+", "+        // Locate the setter for this attribute", "+        final AttributeSetter setter = configurer.getAttributeSetter( name );", "+        if( null == setter )", "+        {", "+            final String message = REZ.getString( \"unknown-attribute.error\", name );", "+        // Set the value", "+            setValue( setter, object, value, context );", "+            final String message = REZ.getString( \"bad-set-attribute.error\", name );", "+    }"]}]}