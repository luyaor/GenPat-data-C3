{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "978e6721a6619b7bfead852e45bb8389", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78672e7f01860cfbc5f6da655972fe01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a98a49253bd792fec570f11f310d61dc9370f67a", "commitAfterChange": "5d1320e99cabb7dad880799accea519ce575d492", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "     private PathPattern[] fillNonPatternSet(Set set, String[] patterns)", "signatureAfterChange": "     private TokenizedPattern[] fillNonPatternSet(Set set, String[] patterns)", "diff": ["-    private PathPattern[] fillNonPatternSet(Set set, String[] patterns) {", "+    private TokenizedPattern[] fillNonPatternSet(Set set, String[] patterns) {", "-                al.add(new PathPattern(patterns[i]));", "+                al.add(new TokenizedPattern(patterns[i]));", "-        return (PathPattern[]) al.toArray(new PathPattern[al.size()]);", "+        return (TokenizedPattern[]) al.toArray(new TokenizedPattern[al.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a767bf13e4b57817b796f751b99657fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "739c7e224a56b3008c9496d8711fbf8276b46034", "commitAfterChange": "1f06891d003a6f39cd3b456c797bb8ed5a1708ac", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "     private String[] fillNonPatternSet(Set set, String[] patterns)", "signatureAfterChange": "     private PathPattern[] fillNonPatternSet(Set set, String[] patterns)", "diff": ["-    private String[] fillNonPatternSet(Set set, String[] patterns) {", "+    private PathPattern[] fillNonPatternSet(Set set, String[] patterns) {", "-                al.add(patterns[i]);", "+                al.add(new PathPattern(patterns[i]));", "-        return set.size() == 0 ? patterns", "-            : (String[]) al.toArray(new String[al.size()]);", "+        return (PathPattern[]) al.toArray(new PathPattern[al.size()]);"]}]}