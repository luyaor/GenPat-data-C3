{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41cb2600f32b24b06b238890f90997bd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "444de4be481b9ea6c9fd325a2f1ee963", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "e7cca3123ec529a60595f5a8f86d874b52db026a", "commitAfterChange": "9ce98074308e646c89b868a37f5ed90c0ce3396b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+", "+        // if binary check if incompatible attributes are used", "+        if (binary) {", "+            if (destinationFile == null) {", "+                throw new BuildException(", "+                    \"DestFile attribute is required for binary concatenation\");", "+            }", "+", "+            if (textBuffer != null) {", "+                throw new BuildException(", "+                    \"Nested text is incompatible with binary concatenation\");", "+            }", "+            if (encoding != null || outputEncoding != null) {", "+                throw new BuildException(", "+                    \"Seting input or output encoding is incompatible with binary\"", "+                    + \" concatenation\");", "+            }", "+            if (filterChains != null) {", "+                throw new BuildException(", "+                    \"Setting filters is incompatible with binary concatenation\");", "+            }", "+            if (fixLastLine) {", "+                throw new BuildException(", "+                    \"Setting fixlastline is incompatible with binary concatenation\");", "+            }", "+            if (header != null || footer != null) {", "+                throw new BuildException(", "+                    \"Nested header or footer is incompatible with binary concatenation\");", "+            }", "+        }", "-        cat();", "+        if (binary) {", "+            binaryCat();", "+        } else {", "+            cat();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ea43e833e7c4a6b4a3dddd1dc09486", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "e6fb386da04e84cc10062f3abf29ee30c7c8cd08", "commitAfterChange": "c1c1f4fcff7032808ed575c58ad56dd0821b05b7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "-        ", "-        exe.setCommandline(toExecute.getCommandline());", "+", "+        if (directory != null) {", "+            if (directory.exists() && directory.isDirectory()) {", "+                exe.setWorkingDirectory(directory);", "+            } else if (!directory.isDirectory()) {", "+                throw new BuildException(directory + \" is not a directory.\",", "+                                         location);", "+            } else {", "+                throw new BuildException(\"directory \" + directory", "+                                         + \" doesn\\'t exist\", location);", "+            }", "+        } else {", "+            exe.setWorkingDirectory(getProject().getBaseDir());", "+        }", "+"]}]}