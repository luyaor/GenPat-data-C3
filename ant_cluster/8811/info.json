{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e39eac4dcc65e1a29873afb14031c08f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e0af7cf0fa1f98b9b52086fcbda6a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testFilterReplaceString() throws IOException", "signatureAfterChange": "      @Test     public void testFilterReplaceString() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"filterreplacestring\", getProject().getProperty(\"output\") + \"/filterreplacestring\");", "-        assertStringContains(contents, \"This is the moon\");", "+    \tbuildRule.executeTarget(\"filterreplacestring\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filterreplacestring\");", "+        assertContains(\"This is the moon\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ee6e5ff5f13467194bb135ecb43db9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testFileTokenizer() throws IOException", "signatureAfterChange": "      @Test     public void testFileTokenizer() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"filetokenizer\", getProject().getProperty(\"output\") + \"/filetokenizer\");", "-        assertStringContains(contents, \"   of words\");", "-        assertStringNotContains(contents, \" This is\");", "+    \tbuildRule.executeTarget(\"filetokenizer\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filetokenizer\");", "+        assertContains(\"   of words\", contents);", "+        assertNotContains(\" This is\", contents);"]}]}