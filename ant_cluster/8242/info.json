{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "671f323acf02273219940ad1231888d7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5243650dd2963501ae7dd8385391ff4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void writeRecord( byte[] buf, int offset )         throws IOException", "signatureAfterChange": "     public void writeRecord( final byte[] buffer, final int offset )         throws IOException", "diff": ["-    public void writeRecord( byte[] buf, int offset )", "+    public void writeRecord( final byte[] buffer, final int offset )", "-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"WriteRecord: recIdx = \" + this.currRecIdx", "-                                + \" blkIdx = \" + this.currBlkIdx );", "+            final String message = \"WriteRecord: recIdx = \" + m_currRecIdx +", "+                \" blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.outStream == null )", "+        if( null == m_output )", "-            throw new IOException( \"writing to an input buffer\" );", "+            final String message = \"writing to an input buffer\";", "+            throw new IOException( message );", "-        if( ( offset + this.recordSize ) > buf.length )", "+        if( ( offset + m_recordSize ) > buffer.length )", "-            throw new IOException( \"record has length '\" + buf.length", "-                                   + \"' with offset '\" + offset", "-                                   + \"' which is less than the record size of '\"", "-                                   + this.recordSize + \"'\" );", "+            final String message = \"record has length '\" + buffer.length +", "+                \"' with offset '\" + offset + \"' which is less than the record size of '\" +", "+                m_recordSize + \"'\";", "+            throw new IOException( message );", "-        if( this.currRecIdx >= this.recsPerBlock )", "+        if( m_currRecIdx >= m_recsPerBlock )", "-            this.writeBlock();", "+            writeBlock();", "-        System.arraycopy( buf, offset, this.blockBuffer,", "-                          ( this.currRecIdx * this.recordSize ),", "-                          this.recordSize );", "+        System.arraycopy( buffer,", "+                          offset,", "+                          m_blockBuffer,", "+                          ( m_currRecIdx * m_recordSize ),", "+                          m_recordSize );", "-        this.currRecIdx++;", "+        m_currRecIdx++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b494cd3ae281dd0bd66f5416fe18748c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void writeRecord( byte[] record )         throws IOException", "signatureAfterChange": "     public void writeRecord( final byte[] record )         throws IOException", "diff": ["-    public void writeRecord( byte[] record )", "+    public void writeRecord( final byte[] record )", "-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"WriteRecord: recIdx = \" + this.currRecIdx", "-                                + \" blkIdx = \" + this.currBlkIdx );", "+            final String message = \"WriteRecord: recIdx = \" + m_currRecIdx +", "+                \" blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.outStream == null )", "+        if( null == m_output )", "-            throw new IOException( \"writing to an input buffer\" );", "+            final String message = \"writing to an input buffer\";", "+            throw new IOException( message );", "-        if( record.length != this.recordSize )", "+        if( record.length != m_recordSize )", "-            throw new IOException( \"record to write has length '\"", "-                                   + record.length", "-                                   + \"' which is not the record size of '\"", "-                                   + this.recordSize + \"'\" );", "+            final String message = \"record to write has length '\" +", "+                record.length + \"' which is not the record size of '\" +", "+                m_recordSize + \"'\";", "+            throw new IOException( message );", "-        if( this.currRecIdx >= this.recsPerBlock )", "+        if( m_currRecIdx >= m_recsPerBlock )", "-            this.writeBlock();", "+            writeBlock();", "-        System.arraycopy( record, 0, this.blockBuffer,", "-                          ( this.currRecIdx * this.recordSize ),", "-                          this.recordSize );", "+        System.arraycopy( record,", "+                          0,", "+                          m_blockBuffer,", "+                          ( m_currRecIdx * m_recordSize ),", "+                          m_recordSize );", "-        this.currRecIdx++;", "+        m_currRecIdx++;"]}]}