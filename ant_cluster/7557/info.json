{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3dde9c3a4de0f8231f6dbdfcd1f7036", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a076b7a487b2ed17aac816501ff152", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+        for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-            EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "+            EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "-                Project.MSG_VERBOSE );", "+                 Project.MSG_VERBOSE );", "-                for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+                for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-                    EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "-                    tool.processDescriptor( files[index], saxParser );", "+                    EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "+                    tool.processDescriptor( files[ index ], saxParser );", "-                 + \"  Details: \"", "-                 + se.getMessage();", "-            throw new BuildException( msg, se );", "+                + \"  Details: \"", "+                + se.getMessage();", "+            throw new TaskException( msg, se );", "-                 + \"Details: \" + pce.getMessage();", "-            throw new BuildException( msg, pce );", "+                + \"Details: \" + pce.getMessage();", "+            throw new TaskException( msg, pce );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16c3b48b0aaa3cf350e27905e7fec0d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+        for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-            EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "+            EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "-                Project.MSG_VERBOSE );", "+                 Project.MSG_VERBOSE );", "-                for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+                for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-                    EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "-                    tool.processDescriptor( files[index], saxParser );", "+                    EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "+                    tool.processDescriptor( files[ index ], saxParser );", "-                 + \"  Details: \"", "-                 + se.getMessage();", "-            throw new BuildException( msg, se );", "+                + \"  Details: \"", "+                + se.getMessage();", "+            throw new TaskException( msg, se );", "-                 + \"Details: \" + pce.getMessage();", "-            throw new BuildException( msg, pce );", "+                + \"Details: \" + pce.getMessage();", "+            throw new TaskException( msg, pce );"]}]}