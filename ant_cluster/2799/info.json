{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5d3abdf2390395d2aff2d9f322814d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233de89bb489176d28eabc4a9cd56432", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "12e9d5f0d34a161cd162b3a99d8e6eb1799267bf", "commitAfterChange": "46c940785aaa80d86df0bd49cd11bd2035d557bf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void handleChildren(         Object parent,         RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(         Object parent,         RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["+                    if (!childWrapper.isEnabled(child)) {", "+                        if (ih.supportsNestedElement(", "+                                parentUri, ProjectHelper.genComponentName(", "+                                    child.getNamespace(), child.getTag()))) {", "+                            continue;", "+                        }", "+                        // fall tru and fail in handlechild (unsupported element)", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68eb90b4a9a1a4ebaa03d6867de4b949", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "9ec9a279f5b0d54e1d1362475edc52717b2197ab", "commitAfterChange": "4d8702d1f414ef88110183568a3aa502d18e06f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "signatureAfterChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "diff": ["+                        AntLibrarySpec currentSpec ", "+                            = (AntLibrarySpec)librarySpecs.get(libraryId);", "-                             + \"copy of library with id = \" + libraryId +", "-                            \" (\" + libURLs[i] + \")\");", "+                             + \"copy of library with id = \" + libraryId ", "+                             + \" (\" + libURLs[i] + \") + existing library at (\"", "+                             + currentSpec.getLibraryURL() + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7525eb167d35e424cc005848b848e171", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "629079f866da4f2035f86fae4a237944734ce1fd", "commitAfterChange": "b86a0a2830f81aa373a40ca7db51c5308f58550a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["+            ", "+            if (passive)", "+            {", "+                log(\"entering passive mode\", Project.MSG_VERBOSE);", "+                ftp.enterLocalPassiveMode();", "+                if (!FTPReply.isPositiveCompletion(ftp.getReplyCode()))", "+                {", "+                    throw new BuildException(", "+                        \"could not enter into passive mode: \" +", "+                        ftp.getReplyString());", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42667c161e0e44989a0f98b4c9f6888", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "be90dbd7b54f177a4ecf3b4de6d77366f34cad2e", "commitAfterChange": "39a7cce3ed1eb16238ef358336a4af9f8ce46fcd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void addDefinition(ClassLoader al, String name, String classname)         throws BuildException", "signatureAfterChange": "     protected void addDefinition(ClassLoader al, String name, String classname)         throws BuildException", "diff": ["-                    .addDataTypeDefinition(def);", "+                        .addDataTypeDefinition(def);", "-                    + \" cannot be found\";", "+                        + \" cannot be found\"", "+                        + \"\\n using the classloader \" + al;", "-                    + classname + \" cannot be found: \" + ncdfe.getMessage();", "+                        + classname + \" cannot be found: \" + ncdfe.getMessage()", "+                        + \"\\n using the classloader \" + al;"]}]}