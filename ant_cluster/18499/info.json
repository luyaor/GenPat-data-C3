{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc167f8dc225ba65ae286d1984cbe81a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cb4f9dc4b4259a08979315c2cf2acc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "6b5c48061a0409b564f51bcf0717e946a0a41556", "commitAfterChange": "de06c1b597ffcab2fd85890c0d110873a7e3b738", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void catFiles(File base, String[] files)", "signatureAfterChange": "     private void catFiles(File base, String[] files)", "diff": ["-                    byte[] buffer = new byte[8096];", "+                    byte[] buffer = new byte[8192];", "-        } else { // user specified encoding, assume line oriented input", "+        } else { // user specified encoding", "-            PrintWriter out = null;", "+            Writer out = null;", "-                    out = new PrintWriter(", "-                              new OutputStreamWriter(", "-                                  new LogOutputStream(this, Project.MSG_WARN)));", "+                    out = new OutputStreamWriter(", "+                              new LogOutputStream(this, Project.MSG_WARN));", "-                    out = new PrintWriter(", "-                              new OutputStreamWriter(", "-                                  new FileOutputStream(destinationFile", "-                                                       .getAbsolutePath(),", "-                                                       append),", "-                                  encoding));", "+                    out = new OutputStreamWriter(", "+                              new FileOutputStream(destinationFile", "+                                                   .getAbsolutePath(),", "+                                                   append),", "+                              encoding);", "-                    while ((line = in.readLine()) != null) {", "-                        // Log the line, using WARN so it displays in", "-                        // 'quiet' mode.", "-                        out.println(line);", "+                    char[] buffer = new char[4096];", "+                    while (true) {", "+                        int charsRead = in.read(buffer);", "+                        if (charsRead == -1) { // EOF", "+                            break;", "+                        }", "+                        ", "+                        // Write the read data.", "+                        out.write(buffer, 0, charsRead);", "+                    out.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8dd2a6bb13cdf8b2709c11ca32fd841", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "commitAfterChange": "9c6515959f5bf9016b0dd8c12691e1e7549b2dd0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public PropertyConfigurer getProperty( final String name )", "signatureAfterChange": "      private int getPropertyCount()", "diff": ["+", "+    private int getPropertyCount()", "+    {", "+        final int typedSize = ( null != m_typedPropertyConfigurer ) ? 1 : 0;", "+        final int contentSize = ( null != m_contentConfigurer ) ? 1 : 0;", "+        return m_adders.size() + m_setters.size() + contentSize + typedSize;", "-    public PropertyConfigurer getProperty( final String name )", "-        return (PropertyConfigurer)m_props.get( name );"]}]}