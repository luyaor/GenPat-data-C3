{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5df08db786a16aaace0a896f5afd23bf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277ceb58695c7c4d02d3478df0956e8a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java", "commitBeforeChange": "72e98275b35ef6fcda491368b2d33368e89c5476", "commitAfterChange": "d3ef19b3ff388673cb294e6a7ebbf61eab0ef2a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["+        OutputStream logstr = new LogOutputStream(attributes, Project.MSG_WARN);", "-            OutputStream logstr = new LogOutputStream(attributes, Project.MSG_WARN);", "+        } finally {", "+            try {", "+                logstr.close();", "+            } catch (IOException e) {", "+                // plain impossible", "+                throw new BuildException(e);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8dd1d522f61974ce1405e8f6089dba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "630e898f2013b4400657889adbb97940e015538d", "commitAfterChange": "d5e3608bf56d9b6510e1f831d0e9f25d506da504", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["+            BufferedReader br = null;", "-                BufferedReader br = new BufferedReader(new FileReader(vmWatcher));", "+                br = new BufferedReader(new FileReader(vmWatcher));", "+            } finally {", "+                try {", "+                    br.close();", "+                } catch (IOException ioe) {", "+                    // nothing", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7200a5e67721a1e5d0ba2d53560cd6e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "746437d82490f90c25ea7ad04b805b286183c5f4", "commitAfterChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "diff": ["+            try {", "+                context.setBuildFile(url);", "+            } catch (java.net.MalformedURLException ex) {", "+                throw new BuildException(ex);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef707e81cc187e430b0cd22cd741f6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ScriptRunnerCreator.java", "commitBeforeChange": "0ca8c46cc3286de3ac42e78d30ce8b9b126872f5", "commitAfterChange": "4ccca1fc148e9aeee22b3b1fd003abb70e5d0d15", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private ScriptRunnerBase createRunner(         String checkManager, String managerClass, String runnerClass)", "signatureAfterChange": "     private ScriptRunnerBase createRunner(         String checkManager, String managerClass, String runnerClass)", "diff": ["-        if (scriptLoader.getResource(LoaderUtils.classNameToResource(managerClass)) == null) {", "-            return null;", "-        }", "+            if (scriptLoader.getResource(LoaderUtils.classNameToResource(managerClass)) == null) {", "+                return null;", "+            }", "+        } else {", "+            try {", "+                Class.forName(managerClass, true, scriptLoader);", "+            } catch (Exception ex) {", "+                return null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9d66b93cbcd981cdd9cac02774effa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/AntXMLContext.java", "commitBeforeChange": "746437d82490f90c25ea7ad04b805b286183c5f4", "commitAfterChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setBuildFile(File buildFile)", "signatureAfterChange": "     public void setBuildFile(File buildFile)", "diff": ["+        try {", "+            setBuildFile(FileUtils.getFileUtils().getFileURL(buildFile));", "+        } catch (MalformedURLException ex) {", "+            throw new BuildException(ex);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ec12186076b05c4adfe39351f55a626", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "d3ef19b3ff388673cb294e6a7ebbf61eab0ef2a6", "commitAfterChange": "2ce6cc4849308e8247585e46553ba38d7f252659", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["-        try {", "-            // Create an instance of the rmic, redirecting output to", "-            // the project log", "-            OutputStream logstr = new LogOutputStream(getRmic(), Project.MSG_WARN);", "+        // Create an instance of the rmic, redirecting output to", "+        // the project log", "+        LogOutputStream logstr = new LogOutputStream(getRmic(), Project.MSG_WARN);", "+        try {", "+        } finally {", "+            try {", "+                logstr.close();", "+            } catch (IOException e) {", "+                throw new BuildException(e);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79f61cb98dae370ceb74f3ed423d5f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/ServerElement.java", "commitBeforeChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "commitAfterChange": "62ff30c775164f20e004fc217cccbc9a0f4453ec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        Server server = new Server(port);", "+        server = new Server(port);", "-        server.start();", "+        try {", "+            server.start(true);", "+            server.shutdown();", "+        } catch (InterruptedException e){", "+            throw new BuildException(e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf87133d7380d9383f567d584ba1fcbc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ZipTest.java", "commitBeforeChange": "a1f6b5b24b36eef55dbc03445c299165db616392", "commitAfterChange": "1d273bec1ae6eb178757073054aedf51e245710e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void tearDown()", "signatureAfterChange": "      public void tearDown()", "diff": ["+        try {", "+            if ( zfPrefixAddsDir != null) {", "+                zfPrefixAddsDir.close();", "+            }", "+", "+        } catch (IOException e) {", "+            //ignored", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e357fa431e9c32211808a8983052d07e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            Object obj = ref.getReferencedObject(getProject());", "-            if (obj != null) {", "-                addProperty(name, obj.toString());", "-            }", "+            try {", "+                addProperty(name, ", "+                            ref.getReferencedObject(getProject()).toString());", "+            } catch (BuildException be) {", "+                if (fallback != null) {", "+                    addProperty(name, ", "+                                ref.getReferencedObject(fallback).toString());", "+                } else {", "+                    throw be;", "+                }", "+            }                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a4d78eb658407b52400bf7b8dcc623", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "6008290de6bfbdca34ddc86c26f436be4664f54a", "commitAfterChange": "2ddb4ff944dd3ed84fd6d6ed7b08ba753334f4de", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private final Configuration prepareAspects( final Configuration taskModel )         throws TaskException", "signatureAfterChange": "     private final Configuration prepareAspects( final Configuration taskModel )         throws TaskException", "diff": ["+        try", "+        {", "+            newTaskModel.setValue( taskModel.getValue() );", "+        }", "+        catch( final ConfigurationException cee )", "+        {", "+            //Will never occur", "+        }"]}]}