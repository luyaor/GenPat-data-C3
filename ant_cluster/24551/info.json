{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3eb3d38ad4bd3e4306db898db2082009", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef707e81cc187e430b0cd22cd741f6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ScriptRunnerCreator.java", "commitBeforeChange": "0ca8c46cc3286de3ac42e78d30ce8b9b126872f5", "commitAfterChange": "4ccca1fc148e9aeee22b3b1fd003abb70e5d0d15", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private ScriptRunnerBase createRunner(         String checkManager, String managerClass, String runnerClass)", "signatureAfterChange": "     private ScriptRunnerBase createRunner(         String checkManager, String managerClass, String runnerClass)", "diff": ["-        if (scriptLoader.getResource(LoaderUtils.classNameToResource(managerClass)) == null) {", "-            return null;", "-        }", "+            if (scriptLoader.getResource(LoaderUtils.classNameToResource(managerClass)) == null) {", "+                return null;", "+            }", "+        } else {", "+            try {", "+                Class.forName(managerClass, true, scriptLoader);", "+            } catch (Exception ex) {", "+                return null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebbba64a9a1a2428c91da7d87061ff93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "9668d399a7d0f7d3fe9fc7e9e97f29f6875dd387", "commitAfterChange": "aa90e61cd6f106951cdb233ec6178af0b92cf79c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "           private static void closeQuietly(Object o)", "signatureAfterChange": "     public static void close(Writer device)", "diff": ["-    ", "-    private static void closeQuietly(Object o) {", "-        if (null == o) {", "-            return;", "-        }", "-        try {", "-            if(ReflectUtil.respondsTo(o, \"close\")) {", "-                ReflectUtil.invoke(o, \"close\");", "-            }", "-        } catch(Exception e) {", "-            //ignore", "-        }    ", "-    }", "+        if(null != device){", "+            try {", "+                device.close();", "+            } catch (IOException e) {", "+                //ignore", "+            }", "+        }"]}]}