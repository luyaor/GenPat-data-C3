{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa1ff801e383b11975f677243385ac0f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4793a45cc43071c3775fb222b6da70c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileName.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public FileName resolveName( String name, NameScope scope ) throws FileSystemException", "signatureAfterChange": "     public FileName resolveName( final String name,                                  final NameScope scope )         throws FileSystemException", "diff": ["-    public FileName resolveName( String name, NameScope scope ) throws FileSystemException", "+    public FileName resolveName( final String name,", "+                                 final NameScope scope )", "+        throws FileSystemException", "-        if( scope == NameScope.CHILD )", "-        {", "-            String childPath = m_parser.getChildPath( m_absPath, name );", "-            return new DefaultFileName( m_parser, m_rootPrefix, childPath );", "-        }", "-        else if( scope == NameScope.FILE_SYSTEM )", "-        {", "-            String absPath = m_parser.resolvePath( m_absPath, name );", "-            return new DefaultFileName( m_parser, m_rootPrefix, absPath );", "-        }", "-        else", "-        {", "-            throw new IllegalArgumentException();", "-        }", "+        final String absPath = m_parser.resolvePath( m_absPath, name, scope );", "+        return new DefaultFileName( m_parser, m_rootPrefix, absPath );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96e62b53111bd5a68e5ca33cd67a2cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public AbstractMyrmidonTest( String name )", "signatureAfterChange": "      public AbstractMyrmidonTest( final String name )", "diff": ["+    public AbstractMyrmidonTest( final String name )", "+    {", "+        super( name );", "+        final String baseDirProp = System.getProperty( \"test.basedir\" );", "+        m_baseDir = getCanonicalFile( new File( baseDirProp ) );", "+        final String packagePath = getPackageName( getClass() ).replace( '.', File.separatorChar );", "+        m_testBaseDir = getCanonicalFile( new File( m_baseDir, packagePath ) );", "+    }", "-    public AbstractMyrmidonTest( String name )", "-        super( name );", "-        final String baseDirProp = System.getProperty( \"test.basedir\" );", "-        m_baseDir = getCanonicalFile( new File( baseDirProp ) );", "-        String packagePath = getClass().getName();", "-        int idx = packagePath.lastIndexOf( '.' );", "-        packagePath = packagePath.substring( 0, idx );", "-        packagePath = packagePath.replace( '.', File.separatorChar );", "-        m_testBaseDir = getCanonicalFile( new File( m_baseDir, packagePath ) );"]}]}