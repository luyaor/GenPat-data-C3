{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6b34346fd44be3d1b7539483bbd8e8f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5e24662f9f9c2a532e43a2fa2177c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Resolve.java", "commitBeforeChange": "787728897a6052af385456788bc4e578ba170ba5", "commitAfterChange": "a12cf63191aece501e0c5b2603c6b72cad03caf8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setResolvemode(String resolvemode)", "signatureAfterChange": "     public void setResolvemode(String resolvemode)", "diff": ["-        boolean found=false;", "-        for (int counter=0; counter < resolvemodes.length; counter++)", "-        {", "-            if (resolvemode.equals(resolvemodes[counter])) {", "-                found=true;", "+        boolean found = false;", "+        for (int counter = 0; counter < RESOLVE_MODES.length; counter++) {", "+            if (resolvemode.equals(RESOLVE_MODES[counter])) {", "+                found = true;", "-        if (found==false) {", "+        if (found == false) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21412bb04cdcf819259cda080462edb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2b925503d71972d8b782eedd6cdf75711377d7b0", "commitAfterChange": "2c4faa154f069f3f69d6c3c95629409a7b8b0cc4", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private boolean isMorePowerfulThanExcludes(String name,                                                String includepattern)", "signatureAfterChange": "     private boolean isMorePowerfulThanExcludes(String name)", "diff": ["-    private boolean isMorePowerfulThanExcludes(String name,", "-                                               String includepattern) {", "+    private boolean isMorePowerfulThanExcludes(String name) {", "-        for (int counter = 0; counter < excludes.length; counter++) {", "-            if (excludes[counter].equals(soughtexclude))  {", "+        for (int counter = 0; counter < excludePatterns.length; counter++) {", "+            if (excludePatterns[counter].toString().equals(soughtexclude))  {"]}]}