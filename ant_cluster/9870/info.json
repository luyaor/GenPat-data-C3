{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35dd4492e507885e3d26eee5d502025d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6922f498a39908ad38ff5333ebb97802", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/remote/Server.java", "commitBeforeChange": "0a07be8ea89394e90b84b99cccc2edb75bd121ad", "commitAfterChange": "c6b949c0c1db9e34d21f5b8c11b00a5399739754", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void shutdown()", "signatureAfterChange": "     public void shutdown()", "diff": ["+        if (writer != null){", "+            writer.close();", "+            writer = null;", "+        }", "+        if (reader != null){", "+            //@fixme what about the stream ?", "+            reader = null;", "+        }", "+                client.close();", "+                client = null;", "-            server.close();", "+        }", "+        try {", "+            if (server != null){", "+                server.close();", "+                server = null;", "+            }", "+        } catch (IOException e){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73673843f2676ce232268cdee93877f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ConcatFilter.java", "commitBeforeChange": "ae18914d138e337a097b745f0baa015371ef4354", "commitAfterChange": "8a19a4e64fcf0eccf49faa383aecbcf974f4a69e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-        ch = prependReader.read();", "+        if (prependReader != null) {", "+            ch = prependReader.read();", "+            if (ch == -1) {", "+                // I am the only one so I have to close the reader", "+                prependReader.close();", "+                prependReader = null;", "+            }", "+        }", "-            ch = appendReader.read();", "+            // don\ufffdt call super.close() because that reader is used", "+            // on other places ...", "+            if (appendReader != null) {", "+                ch = appendReader.read();", "+                if (ch == -1) {", "+                    // I am the only one so I have to close the reader", "+                    appendReader.close();", "+                    appendReader = null;", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a2ff3987f2c3df672f39e62a3102883", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "8b162d567dc13b9ae576422744854684a6c3ceb1", "commitAfterChange": "6c7f485943c930bf2de75288e47c4bf27c63b50a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void slowScan()", "signatureAfterChange": "     protected void slowScan()", "diff": ["-        if (haveSlowResults) {", "-            return;", "+        synchronized (slowScanLock) {", "+            if (haveSlowResults) {", "+                return;", "+            }", "+            if (slowScanning) {", "+                while (slowScanning) {", "+                    try {", "+                        slowScanLock.wait();", "+                    } catch (InterruptedException e) {", "+                    }", "+                }", "+                return;", "+            }", "+            slowScanning = true;", "+        try {", "+            synchronized (this) {", "-        String[] excl = new String[dirsExcluded.size()];", "-        dirsExcluded.copyInto(excl);", "-", "-        String[] notIncl = new String[dirsNotIncluded.size()];", "-        dirsNotIncluded.copyInto(notIncl);", "-", "-        for (int i = 0; i < excl.length; i++) {", "-            if (!couldHoldIncluded(excl[i])) {", "-                scandir(new File(basedir, excl[i]),", "-                        excl[i] + File.separator, false);", "+                String[] excl = new String[dirsExcluded.size()];", "+                dirsExcluded.copyInto(excl);", "+        ", "+                String[] notIncl = new String[dirsNotIncluded.size()];", "+                dirsNotIncluded.copyInto(notIncl);", "+        ", "+                for (int i = 0; i < excl.length; i++) {", "+                    if (!couldHoldIncluded(excl[i])) {", "+                        scandir(new File(basedir, excl[i]),", "+                                excl[i] + File.separator, false);", "+                    }", "+                }", "+                for (int i = 0; i < notIncl.length; i++) {", "+                    if (!couldHoldIncluded(notIncl[i])) {", "+                        scandir(new File(basedir, notIncl[i]),", "+                                notIncl[i] + File.separator, false);", "+                    }", "+                }", "+            }", "+        } finally {", "+            synchronized (slowScanLock) {", "+                haveSlowResults = true;", "+                slowScanning = false;", "+                slowScanLock.notifyAll();", "-", "-        for (int i = 0; i < notIncl.length; i++) {", "-            if (!couldHoldIncluded(notIncl[i])) {", "-                scandir(new File(basedir, notIncl[i]),", "-                        notIncl[i] + File.separator, false);", "-            }", "-        }", "-", "-        haveSlowResults  = true;"]}]}