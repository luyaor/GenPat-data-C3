{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "182ea4d786ef83948f39d987a36899d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f93f79b462c04af05a0e87821586286d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java", "commitBeforeChange": "1bec7214b9a946831d8b57c5be80f10fe547b859", "commitAfterChange": "3d3b941aa7dd1e582d95c63df93ecd61423fa41d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processGetPreviousRevision( final String line )", "signatureAfterChange": "     private void processGetPreviousRevision( final String line )", "diff": ["-        final String entryKey = m_date + m_author + m_comment;", "-        if( line.startsWith( \"revision\" ) )", "+        if( !line.startsWith( \"revision\" ) )", "-            m_previousRevision = line.substring( 9 );", "-            m_status = GET_FILE;", "+            throw new IllegalStateException( \"Unexpected line from CVS: \" + line );", "+        }", "+        m_previousRevision = line.substring( 9 );", "-            CVSEntry entry;", "-            if( !m_entries.containsKey( entryKey ) )", "-            {", "-                entry = new CVSEntry( parseDate( m_date ), m_author, m_comment );", "-                m_entries.put( entryKey, entry );", "-            }", "-            else", "-            {", "-                entry = (CVSEntry)m_entries.get( entryKey );", "-            }", "-            entry.addFile( m_file, m_revision, m_previousRevision );", "-        }", "-        else if( line.startsWith( \"======\" ) )", "+        saveEntry();", "+", "+        m_revision = m_previousRevision;", "+        m_status = GET_COMMENT;", "+    }", "-            m_status = GET_FILE;", "-            CVSEntry entry;", "-            if( !m_entries.containsKey( entryKey ) )", "-            {", "-                entry = new CVSEntry( parseDate( m_date ), m_author, m_comment );", "-                m_entries.put( entryKey, entry );", "-            }", "-            else", "-            {", "-                entry = (CVSEntry)m_entries.get( entryKey );", "-            }", "-            entry.addFile( m_file, m_revision );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99731d7cc7af90e66372d98faa73a88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/ChangeLogParser.java", "commitBeforeChange": "3d3b941aa7dd1e582d95c63df93ecd61423fa41d", "commitAfterChange": "18234144e7ee3f2a087c9427f7b04a34d4db82c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processGetPreviousRevision( final String line )", "signatureAfterChange": "     private void processGetPreviousRevision( final String line )", "diff": ["-        final String entryKey = m_date + m_author + m_comment;", "-        if( line.startsWith( \"revision\" ) )", "+        if( !line.startsWith( \"revision\" ) )", "-            m_previousRevision = line.substring( 9 );", "-            m_status = GET_FILE;", "+            final String message =", "+                REZ.getString( \"changelog.unexpected.line\", line );", "+            throw new IllegalStateException( message );", "+        }", "+        m_previousRevision = line.substring( 9 );", "-            CVSEntry entry;", "-            if( !m_entries.containsKey( entryKey ) )", "-            {", "-                entry = new CVSEntry( parseDate( m_date ), m_author, m_comment );", "-                m_entries.put( entryKey, entry );", "-            }", "-            else", "-            {", "-                entry = (CVSEntry)m_entries.get( entryKey );", "-            }", "-            entry.addFile( m_file, m_revision, m_previousRevision );", "-        }", "-        else if( line.startsWith( \"======\" ) )", "-        {", "-            m_status = GET_FILE;", "-            CVSEntry entry;", "-            if( !m_entries.containsKey( entryKey ) )", "-            {", "-                entry = new CVSEntry( parseDate( m_date ), m_author, m_comment );", "-                m_entries.put( entryKey, entry );", "-            }", "-            else", "-            {", "-                entry = (CVSEntry)m_entries.get( entryKey );", "-            }", "-            entry.addFile( m_file, m_revision );", "-        }", "+        saveEntry();", "+", "+        m_revision = m_previousRevision;", "+        m_status = GET_COMMENT;"]}]}