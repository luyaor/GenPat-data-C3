{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dff6aff1ea4e4b6ecdd741c3f960b5bb", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ecb0620247899509a9ab746b89a3fc7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "a9df829eedabd2b31b0321e288133e5dfcf5ca6f", "commitAfterChange": "884d56754bb72a2a486d44e2b44d5e2f9fc8b5fd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void maybeConfigure()         throws TaskException", "signatureAfterChange": "     public void maybeConfigure()         throws TaskException", "diff": ["-        realThing = makeObject( this, wrapper );", "-", "-        wrapper.setProxy( realThing );", "-        if( realThing instanceof Task )", "-        {", "-            ( (Task)realThing ).setRuntimeConfigurableWrapper( wrapper );", "-        }", "-", "-        handleChildren( realThing, wrapper );", "-", "-        wrapper.maybeConfigure( project );", "-        if( realThing instanceof Task )", "-        {", "-            target.replaceChild( this, realThing );", "-        }", "-        else", "-        {", "-            target.replaceChild( this, wrapper );", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f2a49e24eb401f9c968c1075e0785b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "a9df829eedabd2b31b0321e288133e5dfcf5ca6f", "commitAfterChange": "884d56754bb72a2a486d44e2b44d5e2f9fc8b5fd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void maybeConfigure()         throws TaskException", "signatureAfterChange": "     public void maybeConfigure()         throws TaskException", "diff": ["-        realThing = makeObject( this, wrapper );", "-", "-        wrapper.setProxy( realThing );", "-        if( realThing instanceof Task )", "-        {", "-            ( (Task)realThing ).setRuntimeConfigurableWrapper( wrapper );", "-        }", "-", "-        handleChildren( realThing, wrapper );", "-", "-        wrapper.maybeConfigure( project );", "-        if( realThing instanceof Task )", "-        {", "-            target.replaceChild( this, realThing );", "-        }", "-        else", "-        {", "-            target.replaceChild( this, wrapper );", "-        }"]}]}