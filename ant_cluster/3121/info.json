{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c73a8254c03c67424212a51a711b8fae", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a276ea3ab1133c2cdf3a85d941dc89", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "7b1b3d16673949d0a108587b653c1a1855def0cb", "commitAfterChange": "7fc0d42636ae70a69d8dc312090c5fe80ae32f0c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-                // first use the ProjectHelper to create the project object", "-                // from the given build file.", "-                String noParserMessage = \"No JAXP compliant XML parser found. \"", "-                    + \"Please visit http://xml.apache.org \"", "-                    + \"for a suitable parser\";", "-                try {", "-                    Class.forName(\"javax.xml.parsers.SAXParserFactory\");", "-                    ProjectHelper.configureProject(project, buildFile);", "-                } catch (NoClassDefFoundError ncdfe) {", "-                    throw new BuildException(noParserMessage, ncdfe);", "-                } catch (ClassNotFoundException cnfe) {", "-                    throw new BuildException(noParserMessage, cnfe);", "-                } catch (NullPointerException npe) {", "-                    throw new BuildException(noParserMessage, npe);", "-                }", "+                ProjectHelper.configureProject(project, buildFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b54bccf8e9e1c335120770b279b6c39", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MAuditStreamHandler.java", "commitBeforeChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "commitAfterChange": "3b349325f1e1f10b3c4616a1c7a3e9b4ec24c40b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void stop()", "signatureAfterChange": "     public void stop()", "diff": ["-                MAudit.Violation violation = (MAudit.Violation) v.elementAt(i);", "+                MAuditParser.Violation violation = (MAuditParser.Violation) v.elementAt(i);", "-        Writer wri = null;", "+        DOMElementWriter domWriter = new DOMElementWriter();", "-            wri = new OutputStreamWriter(xmlOut, \"UTF-8\");", "-            wri.write(\"<?xml version=\\\"1.0\\\"?>\\n\");", "-            (new DOMElementWriter()).write(rootElement, wri, 0, \"  \");", "-            wri.flush();", "-        } catch (IOException exc) {", "-            task.log(\"Unable to write log file\", Project.MSG_ERR);", "-        } finally {", "-            if (wri != null) {", "-                try {", "-                    wri.close();", "-                } catch (IOException e) {", "-                }", "-            }", "+            domWriter.write(rootElement, xmlOut);", "+        } catch (IOException e){", "+            throw new BuildException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2833f4b11ac8fc97e872da2b2b93ebf4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/VerifyJar.java", "commitBeforeChange": "02c264aee45f29a2936f681099661a31ad206500", "commitAfterChange": "a63a14400d4462d174133f8691a1219c06ad9bba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void verifyOneJar(File jar)", "signatureAfterChange": "     private void verifyOneJar(File jar)", "diff": ["-        cmd.execute();", "-        String results=outputCache.toString();", "-        if(results.indexOf(VERIFIED_TEXT)<0) {", "-            throw new BuildException(ERROR_NO_VERIFY+jar);", "+        BuildException ex = null;", "+        try {", "+            cmd.execute();", "+        } catch (BuildException e) {", "+            ex = e;", "+        }", "+        String results = outputCache.toString();", "+        //deal with jdk1.4.2 bug:", "+        if (ex != null) {", "+            if (results.indexOf(\"zip file closed\") >= 0) {", "+                log(\"You are running \" + JARSIGNER_COMMAND + \" against a JVM with\"", "+                    + \" a known bug that manifests as an IllegalStateException.\",", "+                    Project.MSG_WARN);", "+            } else {", "+                throw ex;", "+            }", "+        }", "+        if (results.indexOf(VERIFIED_TEXT) < 0) {", "+            throw new BuildException(ERROR_NO_VERIFY + jar);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81196d3ff5f961e0d3fe91232bb1abc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "a0c1be104d8f7ddca6eeb6687404db4b6d373483", "commitAfterChange": "a92061f3cbf0d7fceefa95cbd9946032b8fcdd2b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(baseMessage, getLocation());", "+            handleError(baseMessage);", "+            return;", "-            throw new BuildException(baseMessage + \" but not as both\", getLocation());", "+            handleError(baseMessage + \" but not as both\");", "+            return;", "-            throw new BuildException(\"input file \" + inFile + \" does not exist\", getLocation());", "+            handleError(\"input file \" + inFile + \" does not exist\");", "+            return;", "-                throw new BuildException(\"stylesheet \" + styleResource", "-                                         + \" doesn't exist.\");", "+                handleError(\"stylesheet \" + styleResource + \" doesn't exist.\");", "+                return;", "-                    throw new BuildException(\"no resources specified\");", "+                    handleError(\"no resources specified\");", "+                    return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30005d59de8918153598e689f710530", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XalanExecutor.java", "commitBeforeChange": "dd5dfe2ceb9655165a1553926dadb23d50c2a8cf", "commitAfterChange": "957f9e512572a78a3e82ca1d0938f486394950dd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static XalanExecutor newInstance(AggregateTransformer caller) throws BuildException", "signatureAfterChange": "     static XalanExecutor newInstance(AggregateTransformer caller) throws BuildException", "diff": ["-                throw new BuildException(\"Could not find xalan2 nor xalan1 \"", "-                    + \"in the classpath. Check http://xml.apache.org/xalan-j\");", "+                String msg = \"Could not find xalan2 nor xalan1 \"", "+                    + \"in the classpath. Check http://xml.apache.org/xalan-j/\";", "+                if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)", "+                    && !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "+                    && !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)", "+                    && !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_4)) {", "+                    msg += \"\\r\\nStarting with JDK 1.5, the built-in processor \"", "+                        + \"of the JDK is no longer Xalan\\r\\nbut XSLTC which is \"", "+                        + \"not (yet) supported by the junitreport task.\";", "+                }", "+                throw new BuildException(msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c435aa8f3744343c9db0c4591b737f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java", "commitBeforeChange": "2e52ff7fe8a6513567c6e466efe42896b147b081", "commitAfterChange": "1c2652d8b645425873edad54c4175bb5cb79ee2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void execute()         throws TaskException", "signatureAfterChange": "     public final void execute()         throws TaskException", "diff": ["-        if( null == m_cvsRoot )", "-        {", "-            throw new TaskException( \"cvsroot is required\" );", "-        }", "-        if( null == m_password )", "-        {", "-            throw new TaskException( \"password is required\" );", "-        }", "+        validate();", "-        getContext().debug( \"cvsRoot: \" + m_cvsRoot );", "-        getContext().debug( \"password: \" + m_password );", "-        getContext().debug( \"passFile: \" + m_passwordFile );", "+        final String key = \"cvsRoot: \";", "+        notify( \"root\", m_cvsRoot );", "+        notify( \"password\", m_password );", "+        notify( \"passFile\", m_passwordFile );", "-            getContext().debug( \"Writing -> \" + pwdfile );", "+            notify( \"write\", pwdfile );", "-        catch( IOException e )", "+        catch( final IOException ioe )", "-            throw new TaskException( \"Error\", e );", "+            throw new TaskException( ioe.toString(), ioe );", "+        }", "+    }"]}]}