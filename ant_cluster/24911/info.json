{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8573cc8677ba5a966d565b34f8dc4dc8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db441c4fd0083d3b199f1f715e353ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/sitraka/Coverage.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected String[] getParameters()         throws TaskException", "signatureAfterChange": "     protected String[] getParameters()         throws TaskException", "diff": ["-        if( ! m_classpath.isEmpty() )", "+        final String[] classpath = m_classpath.listFiles();", "+        if( classpath.length > 0 )", "-            params.addArgument( PathUtil.formatPath( m_classpath ) );", "+            params.addArgument( PathUtil.formatPath( classpath ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f9febae67e54ca8cd12a22963daac5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/ExecuteJava.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int executeForked( final TaskContext context )         throws TaskException", "signatureAfterChange": "     public int executeForked( final TaskContext context )         throws TaskException", "diff": ["-        if( ! m_classPath.isEmpty() )", "+        final String[] classpath = m_classPath.listFiles( context );", "+        if( classpath.length > 0 )", "-            command.addArgument( PathUtil.formatPath( m_classPath ) );", "+            command.addArgument( PathUtil.formatPath( classpath ) );"]}]}