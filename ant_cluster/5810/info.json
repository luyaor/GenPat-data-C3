{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f7d7b76ebd978c1404d299caf176d37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32fe66048c21e8447f3ce76fa757200f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void assertEqualsIgnoreDriveCase(String s1, String s2)", "signatureAfterChange": "     private void assertEqualsIgnoreDriveCase(String s1, String s2)", "diff": ["-            StringBuffer sb1 = new StringBuffer(s1);", "-            StringBuffer sb2 = new StringBuffer(s2);", "+            StringBuilder sb1 = new StringBuilder(s1);", "+            StringBuilder sb2 = new StringBuilder(s2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a243294fedd5814534f4e9726199983", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterRegistry.java", "commitBeforeChange": "f358a34a1de10daf7d4a61dc818d5a51ff2bee81", "commitAfterChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ConverterInfo getConverterInfo( final String source, final String destination )", "signatureAfterChange": "     public String getConverterInfoName( final String source, final String destination )", "diff": ["-    public ConverterInfo getConverterInfo( final String source, final String destination )", "+    public String getConverterInfoName( final String source, final String destination )", "-        return (ConverterInfo)map.get( destination );", "+        return (String)map.get( destination );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695768ac34665d8b52324fef8649c7af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "99cdb67df9d2ec13a938a635fed1f01109fcf945", "commitAfterChange": "12d6c01879b76774bb1cb969f3081301b96dab32", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public TarEntry(File file)", "signatureAfterChange": "     public TarEntry(File file)", "diff": ["-     */ ", "+     */", "-        ", "+", "-        ", "+", "-        ", "+", "-        ", "+", "-        ", "+", "-        ", "-                    if (ch2 == ':' ", "-                            && ((ch1 >= 'a' && ch1 <= 'z') ", "+", "+                    if (ch2 == ':'", "+                            && ((ch1 >= 'a' && ch1 <= 'z')", "-                    } ", "-                } ", "+                    }", "+                }", "-        } ", "-        ", "+        }", "+", "-        ", "+", "-        ", "+", "-        ", "+", "-            this.mode = 040755;", "+            this.mode = DEFAULT_DIR_MODE;", "-        ", "+", "-            } ", "+            }", "-            this.mode = 0100644;", "+            this.mode = DEFAULT_FILE_MODE;", "-        } ", "-        ", "+        }", "+", "-        this.modTime = file.lastModified() / 1000;", "+        this.modTime = file.lastModified() / MILLIS_PER_SECOND;", "-    }   ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b02eec4de33605c2a38140df0a4a08c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FilterSet.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void readFiltersFromFile(File filtersFile) throws BuildException", "signatureAfterChange": "     public void readFiltersFromFile(File filtersFile) throws BuildException", "diff": ["-              Vector filters = getFilters();", "+              Vector filts = getFilters();", "-                 filters.addElement(new Filter(strPropName, strValue));", "+                 filts.addElement(new Filter(strPropName, strValue));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a296f147f5930b42e488233700ec2073", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "66c74a2fceee359d38138fb601c1b639e99fb17d", "commitAfterChange": "19600e6d005c8bebbf6697bd00516e843f0a34f4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public Deployer getDeployer()", "signatureAfterChange": "      public TaskletEngine getTaskletEngine()", "diff": ["-    public Deployer getDeployer()", "+    public TaskletEngine getTaskletEngine()", "-        return m_deployer;", "+        return m_taskletEngine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a80113b7fb273357b90e56ab5fc65fc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "fe4759fae9eacee440d5f9e2c678bea872cd6849", "commitAfterChange": "e29e6c080c8678d3abfab30e43289c855e6c4d84", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String decodeUri(String uri) throws UnsupportedEncodingException", "signatureAfterChange": "     public static String decodeUri(String uri) throws UnsupportedEncodingException", "diff": ["-                    int i1 = Character.digit(c1, 16);", "+                    int i1 = Character.digit(c1, WORD);", "-                        int i2 = Character.digit(c2, 16);", "-                        sb.write((char) ((i1 << 4) + i2));", "+                        int i2 = Character.digit(c2, WORD);", "+                        sb.write((char) ((i1 << NIBBLE) + i2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd34d85b3f1234241e26a1c627011c26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "commitAfterChange": "6caf36ea18f59884feefc17b5bd3c77f88677268", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void executeTarget( final String targetName,                                   final Target target,                                   final TaskletContext context )         throws AntException", "signatureAfterChange": "     protected void executeTarget( final String targetName,                                   final Target target,                                   final TaskContext context )         throws AntException", "diff": ["-                                  final TaskletContext context )", "+                                  final TaskContext context )", "-        final TaskletContext targetContext = new DefaultTaskletContext( context );", "+        final TaskContext targetContext = new DefaultTaskContext( context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee42a5b57e3ef02d25c0358b1248c2c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/StringToFileConverter.java", "commitBeforeChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "commitAfterChange": "6caf36ea18f59884feefc17b5bd3c77f88677268", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws Exception", "signatureAfterChange": "      public Object convert( final Object original, final Context context )         throws Exception", "diff": ["-        final TaskletContext taskletContext = (TaskletContext)context;", "-        return taskletContext.resolveFile( (String)original );", "+        final TaskContext taskContext = (TaskContext)context;", "+        return taskContext.resolveFile( (String)original );"]}]}