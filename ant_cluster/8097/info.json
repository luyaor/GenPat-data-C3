{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7da7b0f4516045e4e0c11832cf698fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60930985a9c99ef83d999323fc9e5641", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaRegexpMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setPattern(String pattern) throws BuildException", "signatureAfterChange": "     public void setPattern(String pattern)", "diff": ["-    public void setPattern(String pattern) throws BuildException {", "-        try {", "-            this.pattern = pattern;", "-            reg = new RE(pattern);", "-        } catch (RESyntaxException e) {", "-            throw new BuildException(e);", "-        }", "+    public void setPattern(String pattern) {", "+        this.pattern = pattern;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e33e9881152efbfe30b8f56c38c94b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "f1025dd3c6deebb466ac41a06a42d812cdf4e08d", "commitAfterChange": "c2f14ffad1518f0d1c23c084b7c216d06c5da363", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 31, "signatureBeforeChange": "     protected void executeTarget(String targetName) throws ExecutionException", "signatureAfterChange": "     protected void executeTarget(String targetName) throws ExecutionException", "diff": ["+", "-        try {", "-            // firstly build a list of fully qualified target names to execute.", "-            List dependencyOrder = project.getTargetDependencies(targetName);", "+        // firstly build a list of fully qualified target names to execute.", "+        List dependencyOrder = getTargetDependencies(targetName);", "-            for (Iterator i = dependencyOrder.iterator(); i.hasNext();) {", "-                String fullTargetName = (String) i.next();", "-                Frame frame = getContainingFrame(fullTargetName);", "-                String localTargetName = getNameInFrame(fullTargetName);", "+        for (Iterator i = dependencyOrder.iterator(); i.hasNext();) {", "+            String fullTargetName = (String) i.next();", "+            Frame frame = getContainingFrame(fullTargetName);", "+            String localTargetName = getNameInFrame(fullTargetName);", "-                frame.executeTargetTasks(localTargetName);", "-            }", "-        } catch (ConfigException e) {", "-            throw new ExecutionException(e);", "+            frame.executeTargetTasks(localTargetName);"]}]}