{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b91e8287d487a20495649fcac7fcc62", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a50c935f3347dbfee8112faa9f9d151b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/Builder.java", "commitBeforeChange": "85cd57c58e6ef426050ec21bc2e164e8e3c8fd4e", "commitAfterChange": "67a643f69444fecf5734623985c071e1b6d7d1f2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private File[] getAnt1Files()", "signatureAfterChange": "     private File[] getAnt1Files()", "diff": ["-        files.add(new File(PACKAGE_ROOT, \"util/FileNameMapper.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/FlatFileNameMapper.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/SourceFileScanner.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/IdentityMapper.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/MergingMapper.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/GlobPatternMapper.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/regexp/Regexp.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/regexp/RegexpMatcher.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/regexp/RegexpFactory.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/regexp/RegexpMatcherFactory.java\"));", "+        files.add(new File(UTIL_ROOT, \"FileNameMapper.java\"));", "+        files.add(new File(UTIL_ROOT, \"FlatFileNameMapper.java\"));", "+        files.add(new File(UTIL_ROOT, \"SourceFileScanner.java\"));", "+        files.add(new File(UTIL_ROOT, \"IdentityMapper.java\"));", "+        files.add(new File(UTIL_ROOT, \"MergingMapper.java\"));", "+        files.add(new File(UTIL_ROOT, \"GlobPatternMapper.java\"));", "+        files.add(new File(UTIL_ROOT, \"regexp/Regexp.java\"));", "+        files.add(new File(UTIL_ROOT, \"regexp/RegexpMatcher.java\"));", "+        files.add(new File(UTIL_ROOT, \"regexp/RegexpFactory.java\"));", "+        files.add(new File(UTIL_ROOT, \"regexp/RegexpMatcherFactory.java\"));", "-        files.add(new File(PACKAGE_ROOT, \"util/FileUtils.java\"));", "+        files.add(new File(UTIL_ROOT, \"FileUtils.java\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f40a33c7d4f3c20c16e2d39eaf5aeba2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/Builder.java", "commitBeforeChange": "6243b5ffe48c2c3f094b97a0356bf4f52a653c31", "commitAfterChange": "cae2d444f7e933d5d55072f4b546b27ce174a720", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private File[] getAnt1Files()", "signatureAfterChange": "     private File[] getAnt1Files()", "diff": ["-        addJavaFiles(files, TASKDEFS_ROOT);", "-        addJavaFiles(files, new File(TASKDEFS_ROOT, \"compilers\"));", "-        addJavaFiles(files, new File(TASKDEFS_ROOT, \"condition\"));", "-        addJavaFiles(files, DEPEND_ROOT);", "-        addJavaFiles(files, new File(DEPEND_ROOT, \"constantpool\"));", "-        addJavaFiles(files, TYPES_ROOT);", "-        addJavaFiles(files, FILTERS_ROOT);", "-        addJavaFiles(files, UTIL_ROOT);", "-        addJavaFiles(files, new File(UTIL_ROOT, \"depend\"));", "-        addJavaFiles(files, ZIP_ROOT);", "-        addJavaFiles(files, new File(UTIL_ROOT, \"facade\"));", "-        addJavaFiles(files, INPUT_ROOT);", "+        addJavaFiles(files, TASKDEFS_ROOT, false);", "+        addJavaFiles(files, new File(TASKDEFS_ROOT, \"compilers\"), true);", "+        addJavaFiles(files, new File(TASKDEFS_ROOT, \"condition\"), true);", "+        addJavaFiles(files, DEPEND_ROOT, true);", "+        addJavaFiles(files, TYPES_ROOT, true);", "+        addJavaFiles(files, FILTERS_ROOT, false);", "+        addJavaFiles(files, UTIL_ROOT, false);", "+        addJavaFiles(files, new File(UTIL_ROOT, \"depend\"), false);", "+        addJavaFiles(files, new File(UTIL_ROOT, \"facade\"), true);", "+        addJavaFiles(files, ZIP_ROOT, true);", "+        addJavaFiles(files, INPUT_ROOT, true);"]}]}