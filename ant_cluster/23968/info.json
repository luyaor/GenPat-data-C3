{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb16955ed7df0337bbafa93e1dfeab6a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "872d076bba7c2f50e24c1ab4707d5797", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/PropertyResource.java", "commitBeforeChange": "e46c4cd3c8d5c5ec8ab6d69488dcf1371e238cca", "commitAfterChange": "0a8c19b47ea82e23dda0ae4b34a2a48877273b18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public long getSize()", "signatureAfterChange": "     public long getSize()", "diff": ["-        if (isReference()) {", "-            return ((Resource) getCheckedRef()).getSize();", "+        if (isReferenceOrProxy()) {", "+            return getReferencedOrProxied().getSize();", "-        return isExists() ? (long) getValue().length() : 0L;", "+        Object o = getObjectValue();", "+        return o == null ? 0L : (long) String.valueOf(o).length();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4b9cf94cbcb2929193318eb50412a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/PropertyResource.java", "commitBeforeChange": "e46c4cd3c8d5c5ec8ab6d69488dcf1371e238cca", "commitAfterChange": "0a8c19b47ea82e23dda0ae4b34a2a48877273b18", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public InputStream getInputStream() throws IOException", "signatureAfterChange": "     public InputStream getInputStream() throws IOException", "diff": ["-        if (isReference()) {", "-            return ((Resource) getCheckedRef()).getInputStream();", "+        if (isReferenceOrProxy()) {", "+            return getReferencedOrProxied().getInputStream();", "-        return isExists() ? new ByteArrayInputStream(getValue().getBytes()) : UNSET;", "+        Object o = getObjectValue();", "+        return o == null ? UNSET : new ByteArrayInputStream(String.valueOf(o).getBytes());"]}]}