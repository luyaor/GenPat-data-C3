{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47b586bdf9a60b7ec3051418c646d6e6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55065dc4a886caf9207dd683961adae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java", "commitBeforeChange": "0dbe0a8b0c5ce8ec9fbe5e3fb122cf73674308f3", "commitAfterChange": "07680bb2e3534cad36a726dba2f4cb06fd9ec683", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Element createDocument()", "signatureAfterChange": "     protected Element createDocument()", "diff": ["+            File file = files[i];", "-                log(\"Parsing file: '\" + files[i] + \"'\", Project.MSG_VERBOSE);", "-                //XXX there seems to be a bug in xerces 1.3.0 that doesn't like file object", "-                // will investigate later. It does not use the given directory but", "-                // the vm dir instead ? Works fine with crimson.", "-                Document testsuiteDoc", "-                    = builder.parse(\"file:///\" + files[i].getAbsolutePath());", "-                Element elem = testsuiteDoc.getDocumentElement();", "-                // make sure that this is REALLY a testsuite.", "-                if (TESTSUITE.equals(elem.getNodeName())) {", "-                    addTestSuite(rootElement, elem);", "-                    generatedId++;", "+                log(\"Parsing file: '\" + file + \"'\", Project.MSG_VERBOSE);", "+                if(file.length()>0) {", "+                    Document testsuiteDoc", "+                            = builder.parse(\"file:///\" + file.getAbsolutePath());", "+                    Element elem = testsuiteDoc.getDocumentElement();", "+                    // make sure that this is REALLY a testsuite.", "+                    if (TESTSUITE.equals(elem.getNodeName())) {", "+                        addTestSuite(rootElement, elem);", "+                        generatedId++;", "+                    } else {", "+                        //wrong root element name", "+                        // issue a warning.", "+                        log(\"the file \" + file", "+                                + WARNING_INVALID_ROOT_ELEMENT,", "+                                Project.MSG_WARN);", "+                    }", "-                    // issue a warning.", "-                    log(\"the file \" + files[i]", "-                        + \" is not a valid testsuite XML document\",", "-                        Project.MSG_WARN);", "+                    log(\"the file \" + file", "+                            + WARNING_EMPTY_FILE,", "+                            Project.MSG_WARN);", "-                log(\"The file \" + files[i] + \" is not a valid XML document. \"", "-                    + \"It is possibly corrupted.\", Project.MSG_WARN);", "+                log(\"The file \" + file + WARNING_IS_POSSIBLY_CORRUPTED, Project.MSG_WARN);", "-                log(\"Error while accessing file \" + files[i] + \": \"", "+                log(\"Error while accessing file \" + file + \": \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05066800fa3f0024521ddbf3232fe71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "a3bbe9f596f9a8e29f8971b7276a4f4f2d2d037b", "commitAfterChange": "0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "signatureAfterChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "diff": ["-            String name = resources[i].getName().replace(File.separatorChar,", "-                                                         '/');", "+            final Resource resource = resources[i];", "+            String name = resource.getName();", "+            if (name == null) {", "+                continue;", "+            }", "+            name = name.replace(File.separatorChar, '/');", "+", "-            if (resources[i].isDirectory() && doFilesonly) {", "+            if (resource.isDirectory() && doFilesonly) {", "-            FileProvider fp = resources[i].as(FileProvider.class);", "+            FileProvider fp = resource.as(FileProvider.class);", "-            if (resources[i].isDirectory()) {", "-                addDirectoryResource(resources[i], name, \"\", base, zOut,", "+            if (resource.isDirectory()) {", "+                addDirectoryResource(resource, name, \"\", base, zOut,", "-                    addResource(resources[i], name, \"\", zOut,", "+                    addResource(resource, name, \"\", zOut,"]}]}