{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5314e54c6361562f7c94d0f46955bca3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "198c68ec3793433efa7ca79c9ad58fb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LoaderUtils.java", "commitBeforeChange": "d6ae851614fdd338ece0f76246e8b4939f0126f6", "commitAfterChange": "b66c87eff7277caeedb01e50a986b70a0d0687aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ClassLoader getContextClassLoader()", "signatureAfterChange": "     public static ClassLoader getContextClassLoader()", "diff": ["-        if (getContextClassLoader == null) {", "-            return null;", "-        }", "-", "-        try {", "-            Thread currentThread = Thread.currentThread();", "-            return (ClassLoader) getContextClassLoader.invoke(currentThread,", "-                new Object[0]);", "-        } catch (IllegalAccessException e) {", "-            throw new BuildException", "-                (\"Unexpected IllegalAccessException\", e);", "-        } catch (InvocationTargetException e) {", "-            throw new BuildException", "-                (\"Unexpected InvocationTargetException\", e);", "-        }", "+        Thread currentThread = Thread.currentThread();", "+        return currentThread.getContextClassLoader();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e611dc3b56194776e8301d6dce99fad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ReflectUtil.java", "commitBeforeChange": "dd8442070314597038e789db03323dfc87b2bf6c", "commitAfterChange": "a664a9752084fffbce7fb1c5135620671908d43b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static void throwBuildException(Exception t)         throws BuildException", "signatureAfterChange": "     public static void throwBuildException(Exception t)         throws BuildException", "diff": ["+        throw toBuildException(t);", "+    }", "-                throw (BuildException) t2;", "-            throw new BuildException(t2);", "-            throw new BuildException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae620253436827d14bd1b8c16eea7127", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "b9c9d1a29c79e175c65cf22876c0cfec0e8d4ced", "commitAfterChange": "d180ff4e655f2160229d8c45dac21ab6a66d6b3b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void initZipOutputStream(ZipOutputStream zOut) \tthrows IOException, BuildException", "signatureAfterChange": "      protected void initZipOutputStream(ZipOutputStream zOut) \tthrows IOException, BuildException", "diff": ["-\tzOut.setMethod(ZipOutputStream.DEFLATED);", "-", "-\t    ZipEntry ze = new ZipEntry(\"META-INF/\");", "-\t    zOut.putNextEntry(ze);", "+            super.zipDir(new File(manifest.getParent()), zOut, \"META-INF/\");", "-\t    ZipEntry ze = new ZipEntry(\"META-INF/\");", "-\t    zOut.putNextEntry(ze);", "+            /*", "+             * We don't store directories at all and this one will cause a lot", "+             * of problems with STORED Zip-Mode.", "+             *", "+             * That's why i've removed it -- Stefan Bodewig", "+             */", "+            //            ZipEntry ze = new ZipEntry(\"META-INF/\");", "+            //            zOut.putNextEntry(ze);"]}]}