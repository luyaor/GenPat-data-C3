{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcae2709d28fef8fa6a644c224fcb4ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44036e3a5f818f1c6192b7b457f4c45e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/remote/TestRunner.java", "commitBeforeChange": "a8965dadded68e9618a8421f64433745011fc62d", "commitAfterChange": "cbf1a178e3f594dd79291e6de776141e55fc3eb7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void runTests() throws Exception", "signatureAfterChange": "     private void runTests() throws Exception", "diff": ["-        writer.notifyTestRunStarted(count);", "-", "-        // send system properties to know for the JVM status", "-        writer.notifySystemProperties();", "+        fireEvent(new TestRunEvent(id, TestRunEvent.RUN_STARTED));", "+            String name = suites[i].getClass().getName();", "-                suites[i] = new TestSuite(suites[i].getClass().getName());", "+                suites[i] = new TestSuite(name);", "+            fireEvent(new TestRunEvent(id, TestRunEvent.SUITE_STARTED, name));", "+            fireEvent(new TestRunEvent(id, TestRunEvent.SUITE_ENDED, name));", "-            writer.notifyTestRunStopped(elapsedTime);", "+            fireEvent(new TestRunEvent(id, TestRunEvent.RUN_STOPPED, System.getProperties()));", "-            writer.notifyTestRunEnded(elapsedTime);", "+            fireEvent(new TestRunEvent(id, TestRunEvent.RUN_ENDED, System.getProperties()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0baa721adcc105c269e226668cf91ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/Deployment.java", "commitBeforeChange": "33009d2a236c09a2ea886a42ab348553280dacf8", "commitAfterChange": "8fc57a55d3662cc74427b9b8af0fb375e809acff", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Configuration buildDescriptor()         throws DeploymentException", "signatureAfterChange": "      private Configuration buildDescriptor()         throws DeploymentException", "diff": ["-        final DefaultConfigurationBuilder builder = new DefaultConfigurationBuilder();", "-", "-            return builder.build( new InputSource( systemID ) ); ", "+            final SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();", "+            final SAXParser saxParser = saxParserFactory.newSAXParser();", "+            final XMLReader parser = saxParser.getXMLReader();", "+            //parser.setFeature( \"http://xml.org/sax/features/namespace-prefixes\", false );", "+", "+            final SAXConfigurationHandler handler = new SAXConfigurationHandler();", "+            parser.setContentHandler( handler );", "+            parser.setErrorHandler( handler );", "+", "+            parser.parse( systemID );", "+            return handler.getConfiguration();", "-        catch( final ConfigurationException ce )", "+        catch( final ParserConfigurationException pce )", "-            throw new DeploymentException( \"Error building configuration\", ce );", "+            throw new DeploymentException( \"Error configuring parser\", pce );"]}]}