{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45820bc155a27ef9e265f3cc405e6b42", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f0057f91b41ee1138391cf3946b426", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/SortFilter.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void sort()", "signatureAfterChange": "     private void sort()", "diff": ["-                Collections.sort(lines, new Comparator() {", "-                        public int compare(Object o1, Object o2) {", "-                            String s1 = (String) o1;", "-                            String s2 = (String) o2;", "+                Collections.sort(lines, new Comparator<String>() {", "+                        public int compare(String s1, String s2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c9830117e1f6e739aaf04f95776505e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void executeIncrementalBuild( final Embeddor embeddor,                                           final Project project,                                           final ProjectListener listener )         throws Exception", "signatureAfterChange": "      private void executeIncrementalBuild()         throws Exception", "diff": ["-    private void executeIncrementalBuild( final Embeddor embeddor,", "-                                          final Project project,", "-                                          final ProjectListener listener )", "+    private void executeIncrementalBuild()", "-                executeBuild( embeddor, project, listener );", "+                executeBuild();", "+    }"]}]}