{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "914252869e112490a68d40e3e574fdc1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d86fb6a2367b04973341f331f69f1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static JspCompilerAdapter getCompiler(String compilerType, Task task,                                                  AntClassLoader loader)         throws BuildException", "signatureAfterChange": "     public static JspCompilerAdapter getCompiler(String compilerType, Task task,                                                  AntClassLoader loader)         throws BuildException", "diff": ["-        String compilerTypeLC = compilerType.toLowerCase(Locale.ENGLISH);", "-        if (compilerTypeLC.equals(\"jasper\")) {", "+        if (compilerType.equalsIgnoreCase(\"jasper\")) {", "-        if (compilerTypeLC.equals(\"jasper41\")) {", "+        if (compilerType.equalsIgnoreCase(\"jasper41\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f690b0e57d3d96e2e257f2b9b57f6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected AbstractUnicodeExtraField(String name, String zipEncoding)", "signatureAfterChange": "     protected AbstractUnicodeExtraField(String text, byte[] bytes)", "diff": ["-    protected AbstractUnicodeExtraField(String name, String zipEncoding) {", "-        byte[] filename = ZipEncodingHelper.encodeName(name, zipEncoding);", "-", "+     */", "+    protected AbstractUnicodeExtraField(String text, byte[] bytes) {", "-        crc32.update(filename);", "+        crc32.update(bytes);", "-            unicodeName = name.getBytes(\"UTF-8\");", "+            unicodeName = text.getBytes(\"UTF-8\");"]}]}