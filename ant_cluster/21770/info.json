{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fadf4171a0b01a308950575d79d64061", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f9f4013c6dd748107ca3902e1c07bd6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "c5fa091ce5dbdf1ddaa2b5f03f9c7ad3c6476535", "commitAfterChange": "feb447ccc19eb3a5059fb0e421190b8799b57e87", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                    sun.misc.BASE64Encoder encoder =", "-                        (sun.misc.BASE64Encoder)", "-                        Class.forName(\"sun.misc.BASE64Encoder\").newInstance();", "-                    encoding = encoder.encode (up.getBytes());", "+                    Object encoder =", "+                            Class.forName(\"sun.misc.BASE64Encoder\").newInstance();", "+                    encoding = (String) ", "+                            encoder.getClass().getMethod(\"encode\", new Class[] {byte[].class})", "+                            .invoke(encoder, new Object[] {up.getBytes()});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6715125ed650fc08a603142793a162", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java", "commitBeforeChange": "c5257beb082a74197e95fdd9cb6a7fb6d6d97534", "commitAfterChange": "e1ef86cb256ac33de7283fc7a368ffa0b0b76892", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static String getTestCaseName(Test t)", "signatureAfterChange": "     public static String getTestCaseName(Test t)", "diff": ["-                Method getNameMethod = ", "-                    t.getClass().getMethod(\"getName\", new Class [0]);", "-                if (getNameMethod.getReturnType() == String.class) {", "+                Method getNameMethod = null;", "+                try {", "+                    getNameMethod = ", "+                        t.getClass().getMethod(\"getName\", new Class [0]);", "+                } catch (NoSuchMethodException e) {", "+                    getNameMethod = t.getClass().getMethod(\"name\", ", "+                                                           new Class [0]);", "+                }", "+                if (getNameMethod != null &&", "+                    getNameMethod.getReturnType() == String.class) {"]}]}