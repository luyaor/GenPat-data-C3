{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db6b50a2dabccfc10494d4f01ff610b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e53b21252e881a5a7273aa223ca2fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/FileResource.java", "commitBeforeChange": "f7cec58a607900954a1686009fb5ebe4ea6ddea6", "commitAfterChange": "3ae69e82c33e0e03941387a3506561accc2697d3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public OutputStream getOutputStream() throws IOException", "signatureAfterChange": "     public OutputStream getOutputStream() throws IOException", "diff": ["-            return ((Resource) getCheckedRef()).getOutputStream();", "+            return ((FileResource) getCheckedRef()).getOutputStream();", "+        return getOutputStream(false);", "+    }", "-            if (f.isFile()) {", "-        return new FileOutputStream(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70eb56c1fce10f556b799e9739e87b9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipFileSet.java", "commitBeforeChange": "4af209f564ee4c3b8408f089a8f23723a99a6704", "commitAfterChange": "a96627738decba56e1c94e54fa23ecbd7bfdb9a2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "      protected ArchiveScanner newArchiveScanner()", "diff": ["-     */", "-    public DirectoryScanner getDirectoryScanner(Project p) {", "-        if (isReference()) {", "-            return getRef(p).getDirectoryScanner(p);", "-        }", "-        if (srcFile == null) {", "-            return super.getDirectoryScanner(p);", "-        }", "+    protected ArchiveScanner newArchiveScanner() {", "-        zs.setSrc(srcFile);", "-        super.setDir(p.getBaseDir());", "-        setupDirectoryScanner(zs, p);", "-        zs.init();", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa550f4deb51e05a9dee42eb0db1c1f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "789c3b031646e92b56aeb7d0a14ee44cbc075072", "commitAfterChange": "23dac944330ed36cc3b91be50c54961428660f57", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                if (!isAutocommit() && conn != null && onError.equals(\"abort\")) {", "-                    try {", "-                        conn.rollback();", "-                    } catch (SQLException ex) {", "-                        // ignore", "-                    }", "-                }", "+                closeQuietly();", "-                if (!isAutocommit() && conn != null && onError.equals(\"abort\")) {", "-                    try {", "-                        conn.rollback();", "-                    } catch (SQLException ex) {", "-                        // ignore", "-                    }", "-                }", "+                closeQuietly();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9243bc06e8e52f4fbe389fa2ce279ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "4cbbf3629a15a78615a3ce63ffe6f3fc028b172d", "commitAfterChange": "2c04d7e833b4e5dab1a3c5ddfe14b572aea8c112", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public ZipExtraField[] getExtraFields(final boolean includeUnparseable)", "signatureAfterChange": "     public ZipExtraField[] getExtraFields(final boolean includeUnparseable)", "diff": ["+        return includeUnparseable ?", "+                getAllExtraFields() :", "+                getParseableExtraFields();", "+    }", "-            return !includeUnparseable || unparseableExtra == null", "-                ? new ZipExtraField[0]", "-                : new ZipExtraField[] {unparseableExtra};", "-        final List<ZipExtraField> result =", "-            new ArrayList<ZipExtraField>(extraFields.values());", "-        if (includeUnparseable && unparseableExtra != null) {", "-            result.add(unparseableExtra);", "-        return result.toArray(new ZipExtraField[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e185648458f6b1f4b13d5b88da372a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public boolean contentEquals(File f1, File f2, boolean textfile) throws IOException", "signatureAfterChange": "     public boolean contentEquals(File f1, File f2, boolean textfile) throws IOException", "diff": ["-        if (f1.exists() != f2.exists()) {", "-            return false;", "-        }", "-        if (!f1.exists()) {", "-            // two not existing files are equal", "-            return true;", "-        }", "-        // should the following two be switched?  If f1 and f2 refer to the same file,", "-        // isn't their content equal regardless of whether that file is a directory?", "-        if (f1.isDirectory() || f2.isDirectory()) {", "-            // don't want to compare directory contents for now", "-            return false;", "-        }", "-        if (fileNameEquals(f1, f2)) {", "-            // same filename => true", "-            return true;", "-        }", "-        return textfile ? textEquals(f1, f2) : binaryEquals(f1, f2);", "+        return contentEquals(new FileResource(f1), new FileResource(f2), textfile);"]}]}