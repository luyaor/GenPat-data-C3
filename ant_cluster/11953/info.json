{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d857230de82ff8252cd90793fbcc4890", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8f606b0b371648af50d8ac4a8aed14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "00d986bfdc4e0fd94afd90429515632e0d702e70", "commitAfterChange": "b5324fb76804f9e6ea2e7b7e5fda34874fd514cc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public static String replaceProperties(Project project, String value,           Hashtable keys) throws BuildException", "signatureAfterChange": "      public static String replaceProperties(Project project, String value,           Hashtable keys) throws BuildException", "diff": ["-         Hashtable keys) throws BuildException {", "-        if (value == null) {", "-            return null;", "-        }", "-", "-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "-        parsePropertyString(value, fragments, propertyRefs);", "-", "-        StringBuffer sb = new StringBuffer();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-        while (i.hasMoreElements()) {", "-            String fragment = (String) i.nextElement();", "-            if (fragment == null) {", "-                String propertyName = (String) j.nextElement();", "-                if (!keys.containsKey(propertyName)) {", "-                    project.log(\"Property ${\" + propertyName ", "-                        + \"} has not been set\", Project.MSG_VERBOSE);", "-                }", "-                fragment = (keys.containsKey(propertyName)) ", "-                    ? (String) keys.get(propertyName) ", "-                    : \"${\" + propertyName + \"}\"; ", "-            }", "-            sb.append(fragment);", "-        }                        ", "-        ", "-        return sb.toString();", "+         Hashtable keys) throws BuildException", "+    {", "+        PropertyHelper ph=PropertyHelper.getPropertyHelper(project);", "+        return ph.replaceProperties( null, value, keys);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab27fd917ac65b5686233d8d90d4a61e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "1764b5fda8fe5b4166269d73a00f975b4c7fb75d", "commitAfterChange": "1e599c6651b3baafbf807462fe32a975b416f1d1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public String replaceProperties(String ns, String value, Hashtable keys) throws BuildException", "signatureAfterChange": "     public String replaceProperties(String ns, String value, Hashtable keys) throws BuildException", "diff": ["-        if (value == null || value.indexOf('$') == -1) {", "+        return replaceProperties(value);", "+    }", "-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "-        parsePropertyString(value, fragments, propertyRefs);", "-", "-        StringBuffer sb = new StringBuffer();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-", "-        while (i.hasMoreElements()) {", "-            String fragment = (String) i.nextElement();", "-            if (fragment == null) {", "-                String propertyName = (String) j.nextElement();", "-                Object replacement = null;", "-", "-                // try to get it from the project or keys", "-                // Backward compatibility", "-                if (keys != null) {", "-                    replacement = keys.get(propertyName);", "-                }", "-                if (replacement == null) {", "-                    replacement = getProperty(ns, propertyName);", "-                }", "-                if (replacement == null) {", "-                    project.log(\"Property \\\"\" + propertyName", "-                            + \"\\\" has not been set\", Project.MSG_VERBOSE);", "-                }", "-                fragment = (replacement != null)", "-                        ? replacement.toString() : \"${\" + propertyName + \"}\";", "-            sb.append(fragment);"]}]}