{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "725a9b5094bc3d0ce5f8bb5ae835446c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e9eaca0b646d220c0d4befce3f4538", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "f1025dd3c6deebb466ac41a06a42d812cdf4e08d", "commitAfterChange": "c2f14ffad1518f0d1c23c084b7c216d06c5da363", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void setProject(Project project) throws ExecutionException", "signatureAfterChange": "     protected void setProject(Project project) throws ExecutionException", "diff": ["-        for (Iterator i = project.getReferencedProjectNames(); i.hasNext();) {", "-            String referenceName = (String) i.next();", "-            Project referencedProject", "-                 = project.getReferencedProject(referenceName);", "-            Frame referencedFrame = createFrame(referencedProject);", "-", "-            referencedFrames.put(referenceName, referencedFrame);", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a71f111cc65ea591d79052c3a61e2c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "48b5c5c2b5eb3eb13e0ce4d014a5649f7d989e33", "commitAfterChange": "c9f232a4f9ea0279af2798189b90177cfc600ba4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-", "-        if (filesets.size() > 0) {", "-            Enumeration e = filesets.elements();", "-            while (e.hasMoreElements()) {", "-                FileSet fs = (FileSet) e.nextElement();", "-                File dir = fs.getDir(getProject());", "-", "-                if (okToDelete(dir)) {", "-                    deleteDir(dir);", "-                }", "-            }", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88198ec957f5888435b6314970cdba03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "commitAfterChange": "d571dff958cd85b5083a2a829f84e35b4abe4434", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-            List aspects = componentManager.getAspects();", "-                for (Iterator i = aspects.iterator(); i.hasNext();) {", "-                    Aspect aspect = (Aspect) i.next();", "-                    Object replacement ", "-                        = aspect.postCreateComponent(component, model);", "-                    if (replacement != null) {", "-                        component = replacement;", "-                    }", "-                }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e326b0e12bfc9f222d27b1034f58bf0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/CollectionUtils.java", "commitBeforeChange": "d51249cf5c5453c8ddfe829ee608f7a9e7d87be0", "commitAfterChange": "72b6e42daea6a4d6b055b9ba6a3638b5ed90107a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static boolean equals(Vector v1, Vector v2)", "signatureAfterChange": "     public static boolean equals(Vector v1, Vector v2)", "diff": ["-        if (v1.size() != v2.size()) {", "-            return false;", "-        }", "-", "-        Enumeration e1 = v1.elements();", "-        Enumeration e2 = v2.elements();", "-        while (e1.hasMoreElements()) {", "-            if (!e1.nextElement().equals(e2.nextElement())) {", "-                return false;", "-            }", "-        }", "-", "-        // don't need to check e2.hasMoreElements as the Vectors have", "-        // same size.", "-", "-        return true;", "+        return v1.equals(v2);"]}]}