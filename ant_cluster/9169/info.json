{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a80024a9bcf1651ad2e2070c556736e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb011a1fb11800e3d2a502bb5431840", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "26f6bfe2be0861267eca5624537b48daa7574dd6", "commitAfterChange": "8701272b2418d74536d09b289f118d1833d42217", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 18, "signatureBeforeChange": "       public void execute() throws BuildException", "signatureAfterChange": "       public void execute() throws BuildException", "diff": ["-        if (file == null && resource == null) {", "-", "-            // simple case - one definition", "-            if (name == null || value == null) {", "-                String msg = \"name or classname attributes of \"", "-                    + getTaskName() + \" element \"", "-                    + \"are undefined\";", "-                throw new BuildException(msg);", "+        if (!definerSet) {", "+            throw new BuildException(", "+                \"name, file or resource attribute of \"", "+                + getTaskName() + \" is undefined\", getLocation());", "+        }", "+        ", "+        if (name != null) {", "+            if (classname == null) {", "+                throw new BuildException(", "+                    \"classname attribute of \" + getTaskName() + \" element \"", "+                    + \"is undefined\", getLocation());", "-            addDefinition(al, name, value);", "-", "+            addDefinition(al, name, classname);", "+            if (classname != null) {", "+                String msg = \"You must not specify classname \"", "+                    + \"together with file or resource.\";", "+                throw new BuildException(msg, getLocation());", "+            }", "+            URL url = null;", "+            if (file != null) {", "+                url = fileToURL();", "+            }", "+            if (resource != null) {", "+                url = resourceToURL(al);", "+            }", "-            InputStream is = null;", "-            try {", "-                if (name != null || value != null) {", "-                    String msg = \"You must not specify name or value \"", "-                        + \"together with file or resource.\";", "-                    throw new BuildException(msg, getLocation());", "-                }", "+            if (url == null) {", "+                return;", "+            }", "-                if (file != null && resource != null) {", "-                    String msg = \"You must not specify both, file and \"", "-                        + \"resource.\";", "-                    throw new BuildException(msg, getLocation());", "-                }", "+            loadProperties(al, url);", "+        }", "+    }", "-                Properties props = new Properties();", "-                if (file != null) {", "-                    log(\"Loading definitions from file \" + file,", "-                        Project.MSG_VERBOSE);", "-                    is = new FileInputStream(file);", "-                    if (is == null) {", "-                        log(\"Could not load definitions from file \" + file", "-                            + \". It doesn\\'t exist.\", Project.MSG_WARN);", "-                    }", "-                }", "-                if (resource != null) {", "-                    log(\"Loading definitions from resource \" + resource,", "-                        Project.MSG_VERBOSE);", "-                    is = al.getResourceAsStream(resource);", "-                    if (is == null) {", "-                        log(\"Could not load definitions from resource \"", "-                            + resource + \". It could not be found.\",", "-                            Project.MSG_WARN);", "-                    }", "-                }", "-", "-                if (is != null) {", "-                    props.load(is);", "-                    Enumeration keys = props.keys();", "-                    while (keys.hasMoreElements()) {", "-                        String n = (String) keys.nextElement();", "-                        String v = props.getProperty(n);", "-                        addDefinition(al, n, v);", "-                    }", "-                }", "-            } catch (IOException ex) {", "-                throw new BuildException(ex, getLocation());", "-            } finally {", "-                if (is != null) {", "-                    try {", "-                        is.close();", "-                    } catch (IOException e) {}", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e156dcaf366b107c2f81a9895df4f4d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "8d496e5daaebec48cea6b123ca56351d9fd95245", "commitAfterChange": "2ecc6fa52abb223a67f8b81db23427f103c49b8b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (name==null || value==null ) {", "-            String msg = \"name or classname attributes of \"", "-                + getTaskName() + \" element \"", "-                + \"are undefined\";", "-            throw new BuildException(msg);", "-        }", "-        try {", "-            AntClassLoader al = null;", "-            if (classpath != null) {", "-                al = new AntClassLoader(project, classpath);", "-            } else {", "-                al = new AntClassLoader(project, Path.systemClasspath);", "-            }", "-            // need to load Task via system classloader or the new", "-            // task we want to define will never be a Task but always", "-            // be wrapped into a TaskAdapter.", "-            al.addSystemPackageRoot(\"org.apache.tools.ant\");", "+        AntClassLoader al=createLoader();", "+        if (file==null && resource==null ) {", "+", "+            // simple case - one definition", "+            if ( name==null || value==null  ) {", "+                String msg = \"name or classname attributes of \"", "+                    + getTaskName() + \" element \"", "+                    + \"are undefined\";", "+                throw new BuildException(msg);", "+            }", "+            addDefinition( al, name, value );", "+", "+        } else {", "+", "+            try {", "+                if (name != null || value != null) {", "+                    String msg = \"You must not specify name or value \"", "+                        + \"together with file or resource.\";", "+                    throw new BuildException(msg, location);", "+                }", "+            ", "+                if (file != null && resource != null) {", "+                    String msg = \"You must not specify both, file and resource.\";", "+                    throw new BuildException(msg, location);", "+                }", "+            ", "+", "+                Properties props=new Properties();", "+                InputStream is=null;", "+                if( file != null ) {", "+                    log(\"Loading definitions from file \" + file, ", "+                        Project.MSG_VERBOSE);", "+                    is=new FileInputStream( file );", "+                    if (is == null) {", "+                        log(\"Could not load definitions from file \" + file", "+                            + \". It doesn\\'t exist.\", Project.MSG_WARN);", "+                    }", "+                }    ", "+                if( resource!=null ) {", "+                    log(\"Loading definitions from resource \" + resource, ", "+                        Project.MSG_VERBOSE);", "+                    is=al.getResourceAsStream( resource );", "+                    if (is == null) {", "+                        log(\"Could not load definitions from resource \" ", "+                            + resource + \". It could not be found.\", ", "+                            Project.MSG_WARN);", "+                    }", "+                }", "+", "+                if( is!=null ) {", "+                    props.load( is );", "+                    Enumeration keys=props.keys();", "+                    while( keys.hasMoreElements() ) {", "+                        String n=(String)keys.nextElement();", "+                        String v=props.getProperty( n );", "+                        addDefinition( al, n, v );", "+                    }", "+                }", "+            } catch( IOException ex ) {", "+                throw new BuildException(ex, location);", "+            }", "+        }", "+    }"]}]}