{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddc384869e172bbb7dc9b174074e6e95", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02741dde8f6fb4193dc150f0eba4cc44", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public CBZip2OutputStream( OutputStream inStream, int inBlockSize )         throws IOException", "signatureAfterChange": "      public CBZip2OutputStream( final OutputStream output, final int blockSize )         throws IOException", "diff": ["-    public CBZip2OutputStream( OutputStream inStream, int inBlockSize )", "+    public CBZip2OutputStream( final OutputStream output, final int blockSize )", "-        block = null;", "-        quadrant = null;", "-        zptr = null;", "-        ftab = null;", "+        bsSetStream( output );", "+        m_workFactor = 50;", "-        bsSetStream( inStream );", "-", "-        workFactor = 50;", "-        if( inBlockSize > 9 )", "+        int outBlockSize = blockSize;", "+        if( outBlockSize > 9 )", "-            inBlockSize = 9;", "+            outBlockSize = 9;", "-        if( inBlockSize < 1 )", "+        if( outBlockSize < 1 )", "-            inBlockSize = 1;", "+            outBlockSize = 1;", "-        blockSize100k = inBlockSize;", "+        m_blockSize100k = outBlockSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d9400ecfcfc2bbe3d71e257f1250b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public CBZip2OutputStream(final OutputStream out, final int blockSize)         throws IOException", "signatureAfterChange": "      public CBZip2OutputStream(OutputStream inStream, int inBlockSize)         throws IOException", "diff": ["-     */", "-    public CBZip2OutputStream(final OutputStream out, final int blockSize)", "+    public CBZip2OutputStream(OutputStream inStream, int inBlockSize)", "-        super();", "+        block = null;", "+        quadrant = null;", "+        zptr = null;", "+        ftab = null;", "-        if (blockSize < 1) {", "-            throw new IllegalArgumentException(\"blockSize(\" + blockSize", "-                                               + \") < 1\");", "-        }", "-        if (blockSize > 9) {", "-            throw new IllegalArgumentException(\"blockSize(\" + blockSize", "-                                               + \") > 9\");", "-        }", "+        bsSetStream(inStream);", "-        this.blockSize100k = blockSize;", "-        this.out = out;", "-        init();", "+        workFactor = 50;", "+        if (inBlockSize > 9) {", "+            inBlockSize = 9;", "+        }", "+        if (inBlockSize < 1) {", "+            inBlockSize = 1;", "+        }", "+        blockSize100k = inBlockSize;", "+        allocateCompressStructures();", "+        initialize();", "+        initBlock();"]}]}