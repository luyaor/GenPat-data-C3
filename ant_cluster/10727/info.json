{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10ae6ea64d34c18b9c4fa11339d9d6fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7c11b237f1ef31ce9f34a87a147889", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected FileSystem createFileSystem( final ParsedUri uri )         throws FileSystemException", "signatureAfterChange": "     protected FileSystem createFileSystem( final ParsedUri uri )         throws FileSystemException", "diff": ["-        // TODO - temporary hack; need to use a converter", "-        File destFile = null;", "-        try", "-        {", "-            final File cacheDir = new File( \"ant_vfs_cache\" );", "-            cacheDir.mkdirs();", "-            destFile = File.createTempFile( \"cache_\", \"_\" + file.getName().getBaseName(), cacheDir );", "-            destFile.deleteOnExit();", "-        }", "-        catch( IOException e )", "-        {", "-            throw new FileSystemException( \"Could not replicate file\", e );", "-        }", "-        FileObject destFileObj = getContext().resolveFile( null, destFile.getAbsolutePath() );", "-        destFileObj.copy( file );", "+        // Make a local copy of the file", "+        final File zipFile = file.replicateFile( FileConstants.SELECT_SELF );", "-        return new ZipFileSystem( name, destFile );", "+        return new ZipFileSystem( getContext(), name, zipFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d971daaebe71f1a7fcce97f362cf2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected FileSystem createFileSystem( ParsedUri uri ) throws FileSystemException", "signatureAfterChange": "     protected FileSystem createFileSystem( final ParsedUri uri )         throws FileSystemException", "diff": ["-    protected FileSystem createFileSystem( ParsedUri uri ) throws FileSystemException", "+    protected FileSystem createFileSystem( final ParsedUri uri )", "+        throws FileSystemException", "-        // Locate the Zip file", "-        ParsedZipUri zipUri = (ParsedZipUri)uri;", "-        String fileName = zipUri.getZipFile();", "-        // TODO - use the context to resolve zip file to a FileObject", "-        File file = new File( fileName ).getAbsoluteFile();", "-        DefaultFileName name = new DefaultFileName( m_parser, zipUri.getRootURI(), \"/\" );", "-        return new ZipFileSystem( name, file );", "+        final ParsedZipUri zipUri = (ParsedZipUri)uri;", "+        final FileObject file = zipUri.getZipFile();", "+", "+        // TODO - temporary hack; need to use a converter", "+        File destFile = null;", "+        try", "+        {", "+            final File cacheDir = new File( \"ant_vfs_cache\" );", "+            cacheDir.mkdirs();", "+            destFile = File.createTempFile( \"cache_\", \"_\" + file.getName().getBaseName(), cacheDir );", "+            destFile.deleteOnExit();", "+        }", "+        catch( IOException e )", "+        {", "+            throw new FileSystemException( \"Could not replicate file\", e );", "+        }", "+        FileObject destFileObj = getContext().resolveFile( null, destFile.getAbsolutePath() );", "+        destFileObj.copy( file );", "+", "+        // Create the file system", "+        DefaultFileName name = new DefaultFileName( m_parser, zipUri.getRootUri(), \"/\" );", "+        return new ZipFileSystem( name, destFile );"]}]}