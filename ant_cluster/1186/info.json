{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1dff61432cfd651745f5d0de315820a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213b8c038a560218a9297a57545b3082", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "7e7fa2f905e691ba00568bc670cc80060c224fd4", "commitAfterChange": "590936af269c77bda5fb410fd81e19958062efe6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  public String read(BufferedReader reader) throws IOException", "signatureAfterChange": "         public String read(BufferedReader reader) throws ManifestException, IOException", "diff": ["-        public String read(BufferedReader reader) throws IOException {", "+         */", "+        public String read(BufferedReader reader) throws ManifestException, IOException {", "-                        throw new IOException(\"Can't start an attribute with a continuation line \" + line);", "+                        throw new ManifestException(\"Can't start an attribute with a continuation line \" + line);", "-                    if (attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                        return attribute.getValue();", "+                    String nameReadAhead = addAttribute(attribute);", "+                    if (nameReadAhead != null) {", "+                        return nameReadAhead;", "-                    ", "-                    if (attribute.getName().toLowerCase().startsWith(ATTR_FROM.toLowerCase())) {", "-                        throw new IOException(\"Attribute names may not start with \" + ATTR_FROM);", "-                    }", "-                    ", "-                    addAttribute(attribute);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f803efc54cf34f90acae4f9848b1211", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "8d779414b7aee6b221916e31c2624ecddb22c859", "commitAfterChange": "c9028f9f98c663cc91696a8eb3689652012af2d8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "signatureAfterChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "diff": ["-        final ExecTask cmd = (ExecTask) getProject().createTask(\"exec\");", "+        final ExecTask cmd = new ExecTask();", "+        cmd.setProject(getProject());", "-", "-        if (null != storepass) {", "-            cmd.createArg().setValue(\"-storepass\");", "-            cmd.createArg().setValue(storepass);", "-        }", "-", "-", "-        if (null != keypass) {", "-            cmd.createArg().setValue(\"-keypass\");", "-            cmd.createArg().setValue(keypass);", "-        }", "-", "+        if (redirector != null) {", "+            cmd.addConfiguredRedirector(redirector);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1cee2b20954e5dc3938c714dd3cd455", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "e211cf05f7df29b7531bd7d1525f7fe8bd8d33e0", "commitAfterChange": "c7ec7ad1a4aa4f52693b354d08914e07e0bcd2a8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void updateDataTypeDefinition(AntTypeDefinition def)", "signatureAfterChange": "     private void updateDataTypeDefinition(AntTypeDefinition def)", "diff": ["+                int logLevel = Project.MSG_WARN;", "+                if (def.similarDefinition(old, project)) {", "+                    logLevel = Project.MSG_VERBOSE;", "+                }", "-                if (oldClass != null && Task.class.isAssignableFrom(oldClass)) {", "-                    int logLevel = Project.MSG_WARN;", "-                    if (def.getClassName().equals(old.getClassName())", "-                        && def.getClassLoader() == old.getClassLoader()) {", "-                        logLevel = Project.MSG_VERBOSE;", "-                    }", "-                    project.log(", "-                        \"Trying to override old definition of task \"", "-                        + name, logLevel);", "+                boolean isTask =", "+                    (oldClass != null && Task.class.isAssignableFrom(oldClass));", "+                project.log(", "+                    \"Trying to override old definition of \"", "+                    + (isTask ? \"task\" : \"datatype\")", "+                    + \" \" + name, logLevel);", "+                if (isTask) {", "-                } else {", "-                    project.log(", "-                        \"Trying to override old definition of datatype \"", "-                        + name, Project.MSG_WARN);"]}]}