{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8991770dacb0372bf06a788ff0e438cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34ff6e3ac6e574e4a91c40f0c7398b4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "1be070bb5a179ade0456de364f3512581103c3bc", "commitAfterChange": "bd699bf0c524fd3bcfe7af35a8bc3041254e74f9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        // (with the exception for NetWare below)", "-        onWindows = ( osname.indexOf(\"windows\") >= 0 );", "+", "+        // for NetWare, piggy-back on Windows, since here and in the", "+        // apply code, the same assumptions can be made as with windows -", "+        // that \\\\ is an OK separator, and do comparisons case-insensitive.", "+        onWindows = ( (osname.indexOf(\"windows\") >= 0) ||", "+                      (osname.indexOf(\"netware\") >= 0)  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93dd89b67450683a4e46e6785df1a42e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      protected void runStatements(Reader reader, PrintStream out) throws SQLException, IOException", "signatureAfterChange": "      protected void runStatements(Reader reader, PrintStream out) throws SQLException, IOException", "diff": ["-                if (line.length() > 2 &&", "-                    line.substring(0,3).equalsIgnoreCase(\"REM\")) continue;", "+                StringTokenizer st = new StringTokenizer(line);", "+                if (st.hasMoreTokens()) {", "+                    String token = st.nextToken();", "+                    if (\"REM\".equalsIgnoreCase(token)) {", "+                        continue;", "+                    }", "+                }"]}]}