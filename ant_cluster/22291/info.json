{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a89ee87d93fd09a62c497236deaa6ad", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2987d28380f29a838bc7e2eaf6c5431c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "25e76768e8d8dcdc6c770d00c0659daf0c13003e", "commitAfterChange": "4ac04f30c2cdc4c0d31eaf13f797afe2aa72fea0", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["-        event.setMessage(message, priority);", "+", "+        if (message.endsWith(StringUtils.LINE_SEP)) {", "+            int endIndex = message.length() - StringUtils.LINE_SEP.length();", "+            event.setMessage(message.substring(0, endIndex), priority);", "+        } else {", "+            event.setMessage(message, priority);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73a6446850306c292a3b313686312b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void setAttribute( final ObjectConfigurer configurer,                                final Object object,                                final String name,                                final String value,                                final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void setAttribute( final ObjectConfigurer configurer,                                final Object object,                                final String name,                                final String value,                                final Context context )         throws ConfigurationException", "diff": ["-        // Locate the setter for this attribute", "-        final AttributeSetter setter = configurer.getAttributeSetter( name );", "-        if( null == setter )", "+        if( name.endsWith( \"-ref\" ) )", "-            final String message = REZ.getString( \"unknown-attribute.error\", name );", "-            throw new ConfigurationException( message );", "+            // A reference", "+            final String refName = name.substring( 0, name.length() - 4 );", "+            setReference( configurer, object, refName, value, context );", "+        else", "+        {", "+            // Locate the configurer for this attribute", "+            final PropertyConfigurer propConfigurer = configurer.getProperty( name );", "+            if( null == propConfigurer )", "+            {", "+                final String message = REZ.getString( \"unknown-property.error\", name );", "+                throw new ConfigurationException( message );", "+            }", "-        // Set the value", "-        try", "-        {", "-            setValue( setter, object, value, context );", "-        }", "-        catch( final Exception e )", "-        {", "-            final String message = REZ.getString( \"bad-set-attribute.error\", name );", "-            throw new ConfigurationException( message, e );", "+            // Set the value", "+            try", "+            {", "+                setValue( propConfigurer, object, value, context );", "+            }", "+            catch( final Exception e )", "+            {", "+                final String message = REZ.getString( \"bad-set-property.error\", name );", "+                throw new ConfigurationException( message, e );", "+            }"]}]}