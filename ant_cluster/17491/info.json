{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9b87f00c3d531bc89782e8791280bf6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991d6ffb426226b9381e0b95681a802c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "be938b1e8fe6d68aec358cb6982c7d70fe827886", "commitAfterChange": "ef420c53bf5756a4e14afb47a54cef25e01017a9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private ProjectEntry getProjectEntry( final Project project )         throws TaskException", "signatureAfterChange": "      private ProjectEntry getProjectEntry( final Project project )         throws TaskException", "diff": ["-            final ExecutionFrame frame = createExecutionFrame( project );", "-            entry = new ProjectEntry( project, frame );", "-            m_entrys.put( project, entry );", "+            try", "+            {", "+                final ExecutionFrame frame = createExecutionFrame( project );", "+                entry = new ProjectEntry( project, frame );", "+                m_entrys.put( project, entry );", "+            }", "+            catch( Exception e )", "+            {", "+                final String message = REZ.getString( \"bad-frame.error\" );", "+                throw new TaskException( message, e );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1dbcff5f1547e9f90fd606c72be1115", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "675cbea4cc19287cba32c4ec9701eb7e8c4586c2", "commitAfterChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Project createProject( final String location,                                   final String type,                                   final Parameters parameters )         throws Exception", "signatureAfterChange": "     public Project createProject( final String location,                                   final String type,                                   final Parameters parameters )         throws Exception", "diff": ["-        String projectType = type;", "-        if( null == projectType )", "+        try", "-            projectType = FileUtil.getExtension( location );", "-        }", "+            String projectType = type;", "+            if( null == projectType )", "+            {", "+                projectType = FileUtil.getExtension( location );", "+            }", "-        final ProjectBuilder builder = getProjectBuilder( projectType, parameters );", "-        return builder.build( location );", "+            final ProjectBuilder builder = getProjectBuilder( projectType, parameters );", "+            return builder.build( location );", "+        }", "+        catch( final Exception e )", "+        {", "+            final String message = REZ.getString( \"create-project.error\", location );", "+            throw new CascadingException( message, e );", "+        }"]}]}