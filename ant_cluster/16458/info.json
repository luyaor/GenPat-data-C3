{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84dfca8c1c39ebfd3a101328506cc40a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b768ab253c475687676de50439da8b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/EchoTest.java", "commitBeforeChange": "4716be40f9d7f028f626f7838f4c126d4e926998", "commitAfterChange": "f587706860d8dbeea5521a18041a7b7acdf4c1f7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testLogBlankEcho()", "signatureAfterChange": "      public void testLogBlankEcho()", "diff": ["-    ", "+        Project p = new Project();", "+        p.init();", "-        getProject().addBuildListener(logger);", "-        getProject().executeTarget(\"test1\");", "-        assertEquals(\"     [echo] \", logger.lastLoggedMessage );", "+        p.addBuildListener(logger);", "+        Echo echo = new Echo();", "+        echo.setProject(p);", "+        echo.setTaskName(\"testLogBlankEcho\");", "+        echo.execute();", "+        assertEquals(\"[testLogBlankEcho] \", logger.lastLoggedMessage );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def3aafaf6a0b8fe65d009d7628d7897", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JasperC.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws BuildException", "signatureAfterChange": "     public boolean execute()         throws BuildException", "diff": ["-        Commandline cmd = setupJasperCommand();", "+        CommandlineJava cmd = setupJasperCommand();", "+        /*", "+        Path classpath=cmd.createClasspath(getProject());", "+        if (getJspc().getClasspath() != null) {", "+            classpath=getJspc().getClasspath();", "+        } else {", "+            classpath.concatSystemClasspath();", "+        }", "+        ExecuteJava exec=new ExecuteJava();", "+        exec.execute(getProject());", "+        if ((err = executeJava()) != 0) {", "+            if (failOnError) {", "+                throw new BuildException(\"Java returned: \" + err, location);", "+            } else {", "+                log(\"Java Result: \" + err, Project.MSG_ERR);", "+            }", "+        */", "+", "-            Java java = (Java) (getJspc().getProject()).createTask(\"java\");", "+            Java java = (Java) (getProject().createTask(\"java\"));", "-                java.setClasspath(Path.systemClasspath);", "+                Path classpath=new Path(getProject());", "+                classpath.concatSystemClasspath();", "+                java.setClasspath(classpath);", "+            java.setDir(getProject().getBaseDir());", "-            String args[] = cmd.getArguments();", "+            //this is really irritating; we need a way to set stuff", "+            String args[] = cmd.getJavaCommand().getArguments();", "-            //@todo implement failonerror support here?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe38cf45bdb8ad78024ba0cdcf9da088", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/script/ScriptDef.java", "commitBeforeChange": "95893de3f6c233173ffb95c7c0c02063b041c9dd", "commitAfterChange": "4cd0b301154b177a3a52d1c1f8b58ba5bfd84fd7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        name = ProjectHelper.genComponentName(getUri(), name);", "-        project.addTaskDefinition(name, ScriptDefBase.class);", "+        AntTypeDefinition def = new AntTypeDefinition();", "+        def.setName(name);", "+        def.setClass(ScriptDefBase.class);", "+        ComponentHelper.getComponentHelper(", "+            getProject()).addDataTypeDefinition(def);"]}]}