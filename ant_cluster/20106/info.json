{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a16abaf0427514026109ba6ba0ec898a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26830a6f4d37acfa8221621998e2ac05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "8bad90e21d3773187cf7923150160965e2393d7a", "commitAfterChange": "8fa296bb51a8598af096eddbae69d1886c7b1ea7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "      protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["-        // don't add \"\" to the archive", "-        if (vPath.length() <= 0) {", "-            return;", "+        String fullpath = tarFileSet.getFullpath();", "+        if (fullpath.length() > 0) {", "+            vPath = fullpath;", "+        } else {", "+            // don't add \"\" to the archive", "+            if (vPath.length() <= 0) {", "+                return;", "+            }", "+        ", "+            if (file.isDirectory() && !vPath.endsWith(\"/\")) {", "+                vPath += \"/\";", "+            }", "+        ", "+            String prefix = tarFileSet.getPrefix();", "+            // '/' is appended for compatibility with the zip task.", "+            if (prefix.length() > 0 && !prefix.endsWith(\"/\")) {", "+                prefix = prefix + \"/\";", "+            }", "+            vPath = prefix + vPath;", "-        if (file.isDirectory() && !vPath.endsWith(\"/\")) {", "-            vPath += \"/\";", "+        if (vPath.startsWith(\"/\") && !tarFileSet.getPreserveLeadingSlashes()) {", "+            int l = vPath.length();", "+            if (l <= 1) {", "+                // we would end up adding \"\" to the archive", "+                return;", "+            } ", "+            vPath = vPath.substring(1, l);", "-            String prefix = tarFileSet.getPrefix();", "-            // '/' is appended for compatibility with the zip task.", "-            if(prefix.length() > 0 && !prefix.endsWith(\"/\")) {", "-                prefix = prefix + \"/\";", "-            }", "-", "-            TarEntry te = new TarEntry(prefix + vPath);", "+            TarEntry te = new TarEntry(vPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb4aab14792ff9643f40dac2d734143", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "signatureAfterChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "diff": ["+        String ifCondition = target.getIfCondition();", "+        String unlessCondition = target.getUnlessCondition();", "+        ", "+        if (ifCondition != null) {", "+            ifCondition = dataService.replacePropertyRefs(ifCondition.trim());", "+            if (!isDataValueSet(ifCondition)) {", "+                return;", "+            }", "+        }", "+        ", "+        if (unlessCondition != null) {", "+            unlessCondition ", "+                = dataService.replacePropertyRefs(unlessCondition.trim());", "+            if (isDataValueSet(unlessCondition)) {", "+                return;", "+            }", "+        }", "+"]}]}