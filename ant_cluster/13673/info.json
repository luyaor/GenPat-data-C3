{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9aa7f7f65cc4eedb4cb3f16370bb03cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "050b808969dc090355bf973e35aaf4d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfig.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void merge(AntConfig otherConfig)", "signatureAfterChange": "     public void merge(AntConfig otherConfig)", "diff": ["-        List currentTaskDirs = taskDirLocations;", "-        taskDirLocations = new ArrayList();", "-        taskDirLocations.addAll(otherConfig.taskDirLocations);", "-        taskDirLocations.addAll(currentTaskDirs);", "+        List currentLibraryLocations = libraryLocations;", "+        libraryLocations = new ArrayList();", "+        libraryLocations.addAll(otherConfig.libraryLocations);", "+        libraryLocations.addAll(currentLibraryLocations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2b886ad8ee1f71a76eb9cba988abc9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DateUtils.java", "commitBeforeChange": "1ff87364e9b5ea9526f9298f245652c87d2bd3d2", "commitAfterChange": "aacfe14361288a9c8d07573784e356b351bc136d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String getDateForHeader()", "signatureAfterChange": "     public static String getDateForHeader()", "diff": ["-        int hours = offset / (60 * 60 * 1000);", "-        int minutes = offset / (60 * 1000) - 60 * hours;", "-        if (hours < 10) {", "+        int hours = offset / (ONE_HOUR * ONE_MINUTE * ONE_SECOND);", "+        int minutes = offset / (ONE_MINUTE * ONE_SECOND) - ONE_HOUR * hours;", "+        if (hours < TEN) {", "-        if (minutes < 10) {", "+        if (minutes < TEN) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "144b23a4d33368346cbd6c5223ebb800", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resolver/ApacheCatalogResolver.java", "commitBeforeChange": "45f9a708b90eea4376b45eba12b9481d3ec6af12", "commitAfterChange": "0773ce82fcf583c403d4c2061f3ebff0900ab96a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parseCatalog(String file)", "signatureAfterChange": "     public void parseCatalog(String file)", "diff": ["-        Catalog _catalog = getCatalog();", "-        if (!(_catalog instanceof ApacheCatalog)) {", "-            throw new BuildException(\"Wrong catalog type found: \" + _catalog.getClass().getName());", "+        Catalog catalog = getCatalog();", "+        if (!(catalog instanceof ApacheCatalog)) {", "+            throw new BuildException(\"Wrong catalog type found: \" + catalog.getClass().getName());", "-        ApacheCatalog catalog = (ApacheCatalog) _catalog;", "+        ApacheCatalog apacheCatalog = (ApacheCatalog) catalog;", "-        catalog.setResolver(this);", "+        apacheCatalog.setResolver(this);", "-            catalog.parseCatalog(file);", "+            apacheCatalog.parseCatalog(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b00475af86d12491e52e54741ad0bb0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (p1 == null) {", "+            if (newProject == null) {", "-            if(dir == null) ", "+            if (dir == null) {", "+            }", "-            p1.setBaseDir(dir);", "-            p1.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "+            newProject.setBaseDir(dir);", "+            newProject.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "-            if (antFile == null) ", "+            if (antFile == null) {", "+            }", "-            p1.setUserProperty( \"ant.file\" , antFile );", "-            ProjectHelper.configureProject(p1, new File(antFile));", "+            newProject.setUserProperty( \"ant.file\" , antFile );", "+            ProjectHelper.configureProject(newProject, new File(antFile));", "-                target = p1.getDefaultTarget();", "+                target = newProject.getDefaultTarget();", "-            if (p1.getBaseDir().equals(project.getBaseDir()) &&", "-                p1.getProperty(\"ant.file\").equals(project.getProperty(\"ant.file\")) &&", "+            if (newProject.getBaseDir().equals(project.getBaseDir()) &&", "+                newProject.getProperty(\"ant.file\").equals(project.getProperty(\"ant.file\")) &&", "-            p1.executeTarget(target);", "+            newProject.executeTarget(target);", "-            p1 = null;", "+            newProject = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9885305be8e47e66c834452ace5bc8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static PropertyHelper getPropertyHelper(Project project)", "signatureAfterChange": "     public static PropertyHelper getPropertyHelper(Project project)", "diff": ["-        PropertyHelper ph=(PropertyHelper)project.getReference( \"ant.PropertyHelper\" );", "-        if( ph!=null ) return ph;", "-        ph=new PropertyHelper();", "-        ph.setProject( project );", "+        PropertyHelper helper", "+            = (PropertyHelper) project.getReference(\"ant.PropertyHelper\");", "+        if (helper != null) {", "+            return helper;", "+        }", "+        helper = new PropertyHelper();", "+        helper.setProject(project);", "-        project.addReference( \"ant.PropertyHelper\",ph );", "-        return ph;", "+        project.addReference(\"ant.PropertyHelper\", helper);", "+        return helper;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d912cf57e75ba87f7bb2663bdd445ac2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "19397fb959cb8afa2a87b3e68eaf23994384aab4", "commitAfterChange": "21a1b3cfb48abc9e87a97e1bdab451abe49b44eb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-        for (int icounter = 0; icounter < includes.length; icounter++) {", "-            if (FileUtils.isAbsolutePath(includes[icounter])) {", "+        for (int i = 0; i < includes.length; i++) {", "+            if (FileUtils.isAbsolutePath(includes[i])) {", "-                    && !SelectorUtils.matchPatternStart(includes[icounter],", "+                    && !SelectorUtils.matchPatternStart(includes[i],", "-                includes[icounter]), includes[icounter]);", "+                includes[i]), includes[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbbe1e363ab30663ae614b5d6d517c9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void initializeProject()", "signatureAfterChange": "      private void initializeProject()", "diff": ["-            p1.addBuildListener((BuildListener)listeners.elementAt(i));", "+            newProject.addBuildListener((BuildListener)listeners.elementAt(i));", "-                p1.addBuildListener(logger);", "+                newProject.addBuildListener(logger);", "-            p1.addTaskDefinition(taskName, taskClass);", "+            newProject.addTaskDefinition(taskName, taskClass);", "-            p1.addDataTypeDefinition(typeName, typeClass);", "+            newProject.addDataTypeDefinition(typeName, typeClass);", "-           p1.setSystemProperties();", "+           newProject.setSystemProperties();", "-            if (inheritAll == true)", "-               p1.setProperty(arg, value);", "-            else", "-               p1.setUserProperty(arg, value);", "+            if (inheritAll == true){", "+               newProject.setProperty(arg, value);", "+            } else {", "+               newProject.setUserProperty(arg, value);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a841cf1fc46ded9de9ba54e6cd0ace", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7be61ff46cba15020a14a9d8c83236e929bb5a31", "commitAfterChange": "07a3027bb2230d2add3de5ec0b166a35d50b0236", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void determineDependencies() throws IOException", "signatureAfterChange": "     private void determineDependencies() throws IOException", "diff": ["-        File depCacheFile = null;", "-        boolean depCacheFileExists = true;", "-        long depCacheFileLastModified = Long.MAX_VALUE;", "+        File cacheFile = null;", "+        boolean cacheFileExists = true;", "+        long cacheLastModified = Long.MAX_VALUE;", "-            dependencyMap = readCachedDependencies();", "-            depCacheFile = new File(cache, CACHE_FILE_NAME);", "-            depCacheFileExists = depCacheFile.exists();", "-            depCacheFileLastModified = depCacheFile.lastModified();", "+            cacheFile = new File(cache, CACHE_FILE_NAME);", "+            cacheFileExists = cacheFile.exists();", "+            cacheLastModified = cacheFile.lastModified();", "+            if (cacheFileExists) {", "+                dependencyMap = readCachedDependencies(cacheFile);", "+            }", "-                if (depCacheFileExists ", "-                    && depCacheFileLastModified > info.absoluteFile.lastModified()) {", "+                if (cacheFileExists ", "+                    && cacheLastModified > info.absoluteFile.lastModified()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ff5ada5934f653fed164012ddbfdd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void bsFinishedWithStream()         throws IOException", "signatureAfterChange": "      private void bsFinishedWithStream()         throws IOException", "diff": ["-        while( bsLive > 0 )", "+        while( m_bsLive > 0 )", "-            int ch = ( bsBuff >> 24 );", "+            int ch = ( m_bsBuff >> 24 );", "-                bsStream.write( ch );// write 8-bit", "+                m_bsStream.write( ch );// write 8-bit", "-            bsBuff <<= 8;", "-            bsLive -= 8;", "-            bytesOut++;", "+            m_bsBuff <<= 8;", "+            m_bsLive -= 8;", "+            m_bytesOut++;"]}]}