{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71951a7a467761d0dc93fa8239152abc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d3ae31ebdee04c4dc412e147f45856", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "4c89cabbb86008692979a5573d3c5fa49c2dc6d7", "commitAfterChange": "65802780b638e786a26841d5c3e2cba710d7b716", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 50, "signatureBeforeChange": "     private File findFile(File base, Vector pathElements)", "signatureAfterChange": "     private File findFile(File base, Vector pathElements, boolean cs)", "diff": ["-    private File findFile(File base, Vector pathElements) {", "+    private File findFile(File base, Vector pathElements, boolean cs) {", "-        for (int i = 0; i < files.length; i++) {", "-            if (files[i].equals(current)) {", "-                base = new File(base, files[i]);", "-                return findFile(base, pathElements);", "+", "+        //always scan first NOT ignoring case; if cs, do a 2nd scan ignoring case:", "+        boolean[] ignoreCase = cs ? new boolean[] {false}", "+                                  : new boolean[] {false, true};", "+        for (int i = 0; i < ignoreCase.length; i++) {", "+            for (int j = 0; j < files.length; j++) {", "+                if (ignoreCase[i] ? files[j].equalsIgnoreCase(current)", "+                                  : files[j].equals(current)) {", "+                    return findFile(new File(base, files[j]), pathElements, cs);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "719c141854397a7c7302a1833a1e66e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "e9117208e20934276266169c6b434a102371883e", "commitAfterChange": "c30a74289ebfd6c0f714cb63bc952a6340b5fca6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public final boolean hasMoreElements()", "signatureAfterChange": "     final void addTestsTo(Vector v)", "diff": ["-", "-        public final boolean hasMoreElements(){", "-            if(i<files.length)return true;", "-            return false;", "-        }", "+     */", "+    final void addTestsTo(Vector v){", "+        JUnitTest[] tests = createAllJUnitTest();", "+        v.ensureCapacity( v.size() + tests.length);", "+        for (int i = 0; i < tests.length; i++) {", "+            v.addElement(tests[i]);"]}]}