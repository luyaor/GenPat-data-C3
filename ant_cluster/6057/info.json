{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1504aa08ecc8178706bb178fdb6e9c8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c536f442d4e25136d2f7ac12fe4b8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/init/org/apache/ant/init/LoaderUtils.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static URL[] getLoaderURLs(URL baseURL, String defaultFile,                                       String[] extensions)          throws MalformedURLException", "signatureAfterChange": "     private static URL[] getLocalURLs(File location,                                       final String[] extensions)          throws MalformedURLException", "diff": ["-    public static URL[] getLoaderURLs(URL baseURL, String defaultFile,", "-                                      String[] extensions)", "-        if (baseURL.getProtocol().equals(\"file\")) {", "-            urls = getDirectoryURLs(new File(baseURL.getFile()), extensions);", "-            URL jarListURL = new URL(baseURL, LIST_FILE);", "-                            jarList.add(new URL(baseURL, line));", "-                    urls = new URL[]{new URL(baseURL, defaultFile)};", "+    private static URL[] getLocalURLs(File location,", "+                                      final String[] extensions)", "+        if (!location.exists()) {", "+        if (!location.isDirectory()) {", "+            String path = location.getPath();", "+            for (int i = 0; i < extensions.length; ++i) {", "+                if (path.endsWith(extensions[i])) {", "+                    urls[0] = InitUtils.getFileURL(location);", "+                    break;", "+                }", "+            }", "+            return urls;", "+        }", "+", "+        File[] jars = location.listFiles("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f4e292380e8fb97f59ff95aa4c54a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-        File parentDir = new File(new File(f.getAbsolutePath()).getParent());", "+        File parentDir = fileUtils.getParentFile(f);", "-            log(\"Replacing pattern '\" + regex.getPattern(project) + \"' with '\" + subs.getExpression(project) +", "+            log(\"Replacing pattern '\" + regex.getPattern(project) + ", "+                \"' with '\" + subs.getExpression(project) +", "-                Project.MSG_WARN);", "+                Project.MSG_VERBOSE);", "-                f.delete();", "-                temp.renameTo(f);", "-            } else {", "-                temp.delete();", "+                if (!f.delete()) {", "+                    throw new BuildException(\"Couldn't delete \" + f,", "+                                             getLocation());", "+                }", "+                if (!temp.renameTo(f)) {", "+                    throw new BuildException(\"Couldn't rename temporary file \" ", "+                                             + temp, getLocation());", "+                }", "+                temp = null;", "-            ;", "-                    r.close();", "+                    w.close();", "-            ;", "+            if (temp != null) {", "+                temp.delete();", "+            }"]}]}