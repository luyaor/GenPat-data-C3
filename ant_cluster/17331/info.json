{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3bed45eb08da377fd7cc42dce747023", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e0f817835ca236a93fdded8fcb7ec5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void testCreatePropertiesCacheViaModifiedSelector()", "signatureAfterChange": "     @Test     public void testCreatePropertiesCacheViaModifiedSelector()", "diff": ["+    @Test", "-        File cachefile = new File(basedir, \"cachefile.properties\");", "-        try {", "+        File cachefile = new File(selectorRule.getProject().getBaseDir(), \"cachefile.properties\");", "+    ", "+        // Configure the selector", "+        ModifiedSelector s = new ModifiedSelector();", "+        s.setDelayUpdate(false);", "+        s.addParam(\"cache.cachefile\", cachefile);", "-            // initialize test environment (called \"bed\")", "-            makeBed();", "+        ModifiedSelector.CacheName cacheName = new ModifiedSelector.CacheName();", "+        cacheName.setValue(\"propertyfile\");", "+        s.setCache(cacheName);", "-            // Configure the selector", "-            ModifiedSelector s = (ModifiedSelector)getSelector();", "-            s.setDelayUpdate(false);", "-            s.addParam(\"cache.cachefile\", cachefile);", "+        s.setUpdate(true);", "-            ModifiedSelector.CacheName cacheName = new ModifiedSelector.CacheName();", "-            cacheName.setValue(\"propertyfile\");", "-            s.setCache(cacheName);", "+        selectorRule.selectionString(s);", "-            s.setUpdate(true);", "-", "-            selectionString(s);", "-", "-            // evaluate correctness", "-            assertTrue(\"Cache file is not created.\", cachefile.exists());", "-        } finally {", "-            cleanupBed();", "-            if (cachefile!=null) cachefile.delete();", "-        }", "+        // evaluate correctness", "+        assertTrue(\"Cache file is not created.\", cachefile.exists());", "+        cachefile.delete();", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa08bd0c0f19cad7315d9af85fdea685", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testCreatePropertiesCacheViaCustomSelector()", "signatureAfterChange": "     @Test     public void testCreatePropertiesCacheViaCustomSelector()", "diff": ["+    @Test", "-        try {", "-            // initialize test environment (called \"bed\")", "-            makeBed();", "-            // Configure the selector", "+        // Configure the selector", "-            ExtendSelector s = new ExtendSelector();", "-            s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\");", "-            s.addParam(createParam(\"update\", \"true\"));", "-            s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()));", "-            s.addParam(createParam(\"cache\", \"propertyfile\"));", "+        ExtendSelector s = new ExtendSelector();", "+        s.setClassname(\"org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector\");", "+        s.addParam(createParam(\"update\", \"true\"));", "+        s.addParam(createParam(\"cache.cachefile\", cachefile.getAbsolutePath()));", "+        s.addParam(createParam(\"cache\", \"propertyfile\"));", "-            selectionString(s);", "+        selectorRule.selectionString(s);", "-            // evaluate correctness", "-            assertTrue(\"Cache file is not created.\", cachefile.exists());", "-        } finally {", "-            cleanupBed();", "-            if (cachefile!=null) cachefile.delete();", "-        }", "+        // evaluate correctness", "+        assertTrue(\"Cache file is not created.\", cachefile.exists());", "+        cachefile.delete();", "+"]}]}