{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bbbf82b2e49bc847a130ce562aced36", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b0270c245474949c658f4a1873d872", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "e0c04a3b27b8a6637bb1af562df9b38644ee89b2", "commitAfterChange": "1f2eea24cabc5464b0d95392996cfd997cd8a2bc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        try {", "-            DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "-            String[] files = ds.getIncludedFiles();", "-            for (int i = 0; i < files.length; i++) {", "-                processFile(new File(srcDir.getAbsolutePath() + File.separator + files[i]));", "-                if (garbage_collect) {", "-                    System.gc();", "+        validateAttributes();", "+", "+        try {", "+            DirectoryScanner ds = null;", "+            String [] files =null;", "+            ArrayList filesList = new ArrayList();", "+", "+", "+            // deal with specified srcDir", "+            if (srcDir != null){", "+              ds = super.getDirectoryScanner(srcDir);", "+", "+              files = ds.getIncludedFiles();", "+              for (int i = 0; i < files.length; i++){", "+                filesList.add(new File(srcDir.getAbsolutePath() + File.separator + files[i]));", "+              }", "+            }", "+            // deal with the filesets", "+            for (int i = 0; i < filesets.size(); i++) {", "+                FileSet fs = (FileSet) filesets.elementAt(i);", "+                ds = fs.getDirectoryScanner(getProject());", "+                files =ds.getIncludedFiles();", "+                File fromDir = fs.getDir(getProject());", "+                for (int j = 0; j < files.length; j++){", "+                  filesList.add(new File(fromDir.getAbsolutePath() + File.separator + files[j]));", "+            // iterator through all the files and process them.", "+            for (Iterator i = filesList.iterator();i.hasNext();){", "+              File file = (File)i.next();", "+", "+              processFile(file);", "+              if (garbage_collect) {", "+                  System.gc();", "+              }", "+            }", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71243c35bbc8a3b3f3e067e5ad01692e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "0c4a72a81b5928f9de2829c50b77575ed456a608", "commitAfterChange": "e6e450dc16652de9966256b38be3c2b417f982a9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void touch() throws BuildException", "signatureAfterChange": "     protected void touch() throws BuildException", "diff": ["-    void touch() throws BuildException {", "-        if (!file.exists()) {", "-            log(\"Creating \"+file, Project.MSG_INFO);", "-            try {", "-                FileOutputStream fos = new FileOutputStream(file);", "-                fos.write(new byte[0]);", "-                fos.close();", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Could not create \"+file, ioe, ", "-                                         location);", "+    protected void touch() throws BuildException {", "+        if (file != null) {", "+            if (!file.exists()) {", "+                log(\"Creating \"+file, Project.MSG_INFO);", "+                try {", "+                    FileOutputStream fos = new FileOutputStream(file);", "+                    fos.write(new byte[0]);", "+                    fos.close();", "+                } catch (IOException ioe) {", "+                    throw new BuildException(\"Could not create \"+file, ioe, ", "+                                             location);", "+                }", "+            touch(file);", "+        if (millis >= 0 && project.getJavaVersion() == Project.JAVA_1_1) {", "+            log(\"modification time of files cannot be set in JDK 1.1\",", "+                Project.MSG_WARN);", "+            return;", "+        }", "+", "+        // deal with the filesets", "+        for (int i=0; i < filesets.size(); i++) {", "+            FileSet fs = (FileSet) filesets.elementAt(i);", "+            DirectoryScanner ds = fs.getDirectoryScanner(project);", "+            File fromDir = fs.getDir(project);", "+", "+            String[] srcFiles = ds.getIncludedFiles();", "+            String[] srcDirs = ds.getIncludedDirectories();", "+", "+            for(int j=0; j < srcFiles.length ; j++) {", "+                touch(new File(fromDir, srcFiles[j]));", "+            }", "+         ", "+            for(int j=0; j < srcDirs.length ; j++) {", "+                touch(new File(fromDir, srcDirs[j]));", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794248a3423ad45a591e31d6f4e01708", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "6309813d01620379a35da64c12c4de488efedc2d", "commitAfterChange": "4ab1950bd8ba0bf2335e09b07852d74e1b016f5a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (baseDir == null && filesets.size() == 0 && \"zip\".equals(archiveType)) {", "+        if (baseDir == null && filesets.size() == 0", "+                && groupfilesets.size() == 0 && \"zip\".equals(archiveType)) {", "+            }", "+        }", "+", "+        // Add the files found in groupfileset to fileset", "+        for (int i=0; i<groupfilesets.size(); i++) {", "+", "+            log(\"Processing groupfileset \", Project.MSG_VERBOSE);", "+            FileSet fs = (FileSet) groupfilesets.elementAt(i);", "+            FileScanner scanner = fs.getDirectoryScanner(project);", "+            String[] files = scanner.getIncludedFiles();", "+            File basedir = scanner.getBasedir();", "+            for (int j=0; j<files.length; j++) {", "+", "+                log(\"Adding file \" + files[j] + \" to fileset\", Project.MSG_VERBOSE);", "+                ZipFileSet zf = new ZipFileSet();", "+                zf.setSrc(new File(basedir, files[j]));", "+                filesets.add(zf);", "-                ", "+", "-        } catch (Throwable t) {", "-            String msg = \"Problem creating \" + archiveType + \": \" + t.getMessage();", "+        } catch (IOException ioe) {", "+            String msg = \"Problem creating \" + archiveType + \": \" + ioe.getMessage();", "-            throw new BuildException(msg, t, location);", "+            throw new BuildException(msg, ioe, location);"]}]}