{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "540ceb48d15e7986977cc30afa4f2823", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "129221928d8f03c25dd89b5fb39f0be0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "cf3d817333eb1f45c382561f258acd52fdf3d3a9", "commitAfterChange": "8339c7f3e8a6ef73c3b8f53fdef7ae42734020df", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public InputStream getResourceAsStream(String name)", "signatureAfterChange": "     public InputStream getResourceAsStream(String name)", "diff": ["-            if (resourceStream == null) {", "+            if (resourceStream != null) {", "+                project.log(\"ResourceStream for \" + name", "+                            + \" loaded from system loader\", Project.MSG_DEBUG);", "+", "+            } else {", "+                if (resourceStream != null) {", "+                    project.log(\"ResourceStream for \" + name", "+                                + \" loaded from ant loader\", Project.MSG_DEBUG);", "+                }", "-            if (resourceStream == null) {", "+            if (resourceStream != null) {", "+                project.log(\"ResourceStream for \" + name", "+                            + \" loaded from ant loader\", Project.MSG_DEBUG);", "+", "+            } else {", "+                if (resourceStream != null) {", "+                    project.log(\"ResourceStream for \" + name", "+                                + \" loaded from system loader\", Project.MSG_DEBUG);", "+                }", "+        if (resourceStream == null) {", "+            project.log(\"Couldn't load ResourceStream for \" + name, ", "+                        Project.MSG_WARN);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b4175be98829c6d0392ca89e87908b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "b50aeba8b7f159749b89769c97d559b9e4e990af", "commitAfterChange": "e3dd337f59b2ee14ac818fdb89e2229e1b3922f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-\t    InputStream is = url.openStream();", "+\t    InputStream is=null;", "+\t    for( int i=0; i< 3 ; i++ ) {", "+\t\ttry {", "+\t\t    is = url.openStream();", "+\t\t    break;", "+\t\t} catch( IOException ex ) {", "+\t\t    project.log( \"Error opening connection \" + ex );", "+\t\t}", "+\t    }", "+\t    if( is==null ) {", "+\t\tproject.log( \"Can't get \" + source + \" to \" + dest);", "+\t\tif( ignoreErrors != null ) return;", "+\t\tthrow new BuildException( \"Can't get \" + source + \" to \" + dest);", "+\t    }", "+\t\t", "-\t    ioe.printStackTrace();", "+\t    project.log(\"Error getting \" + source + \" to \" + dest );", "+\t    if( ignoreErrors != null ) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "337ec4e6acc4a595e0db9e6b069eec42", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "bf5fd7938002272a1857de51dbe181ea5257c265", "commitAfterChange": "58069d34783fb894cc384be621f2867fb935f474", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private TransformerFactory getFactory() throws BuildException", "signatureAfterChange": "     private TransformerFactory getFactory() throws BuildException", "diff": ["-                Class clazz = Class.forName(factoryName);", "+                Class clazz = null;", "+                try {", "+                    clazz =", "+                        Class.forName(factoryName, true,", "+                                      Thread.currentThread()", "+                                      .getContextClassLoader());", "+                } catch (ClassNotFoundException cnfe) {", "+                    String msg = \"Failed to load \" + factoryName", "+                        + \" via the configured classpath, will try\"", "+                        + \" Ant's classpath instead.\";", "+                    if (logger != null) {", "+                        logger.log(msg);", "+                    } else if (project != null) {", "+                        project.log(msg, Project.MSG_WARN);", "+                    } else {", "+                        System.err.println(msg);", "+                    }", "+                }", "+", "+                if (clazz == null) {", "+                    clazz = Class.forName(factoryName);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78e700230877d381f8c936f634de42af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "990243c7851b0c2bc6c5f21a3b61deed0af7712e", "commitAfterChange": "6dbabcb7764ee56eeb2e0806486f4f9f76c40356", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void process(File baseDir, String xmlFile, File destDir,                          File stylesheet)         throws BuildException", "signatureAfterChange": "     private void process(File baseDir, String xmlFile, File destDir,                          File stylesheet)         throws BuildException", "diff": ["-        String fileExt = targetExtension;", "-            int dotPos = xmlFile.lastIndexOf('.');", "-            if (dotPos > 0) {", "-                outFile = new File(destDir,", "-                    xmlFile.substring(0, xmlFile.lastIndexOf('.')) + fileExt);", "+            FileNameMapper mapper = null;", "+            if (mapperElement != null) {", "+                mapper = mapperElement.getImplementation();", "-                outFile = new File(destDir, xmlFile + fileExt);", "+                mapper = new StyleMapper();", "+", "+            String[] outFileName = mapper.mapFileName(xmlFile);", "+            if (outFileName == null || outFileName.length == 0) {", "+                log(\"Skipping \" + inFile + \" it cannot get mapped to output.\",", "+                    Project.MSG_VERBOSE);", "+                return;", "+            } else if (outFileName == null || outFileName.length > 1) {", "+                log(\"Skipping \" + inFile + \" its mapping is ambiguos.\",", "+                    Project.MSG_VERBOSE);", "+                return;", "+            }", "+", "+            outFile = new File(destDir, outFileName[0]);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "805488a3e1bddb3f366ca89da8fd8656", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "3e1cde904eca74dd23da0102f7a68ecc0cd1aa62", "commitAfterChange": "176b11946b0fd2fdc0f5f06d676aba72fc4fce98", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         private void writeValue(PrintWriter writer, String value)              throws IOException", "signatureAfterChange": "         private void writeValue(PrintWriter writer, String value)              throws IOException", "diff": ["-            String line = name + \": \" + value;", "-            while (line.getBytes().length > MAX_LINE_LENGTH) {", "+            String line = null;", "+            int nameLength = name.getBytes(JAR_ENCODING).length;", "+            if (nameLength > MAX_NAME_VALUE_LENGTH)", "+            {", "+                if (nameLength > MAX_NAME_LENGTH)", "+                {", "+                    throw new IOException(\"Unable to write manifest line \"", "+                            + name + \": \" + value);", "+                }", "+                writer.print(name + \": \" + EOL);", "+                line = \" \" + value;", "+            }", "+            else", "+            {", "+                line = name + \": \" + value;", "+            }", "+            while (line.getBytes(JAR_ENCODING).length > MAX_SECTION_LENGTH) {", "+                if (breakIndex >= line.length())", "+                {", "+                    breakIndex = line.length() - 1;", "+                }", "-                while (section.getBytes().length > MAX_SECTION_LENGTH", "+                while (section.getBytes(JAR_ENCODING).length > MAX_SECTION_LENGTH"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3da37feb5b47c4be1f7199961afba98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "472c46251f1e0f3c7e68528f23617f21b80366cb", "commitAfterChange": "f625d964c0d8419a3cf9c1e6766139388f17fd23", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            } else if (isDanglingSymlink(file)) {", "+                log(\"Trying to delete file \" + file.getAbsolutePath()", "+                    + \" which looks like a broken symlink.\",", "+                    quiet ? Project.MSG_VERBOSE : verbosity);", "+                if (!delete(file)) {", "+                    handle(\"Unable to delete file \" + file.getAbsolutePath());", "+                }", "-        if (dir != null && dir.exists() && dir.isDirectory()", "+        if (dir != null", "+            if (dir.exists() && dir.isDirectory()) {", "+            } else if (isDanglingSymlink(dir)) {", "+                log(\"Trying to delete directory \" + dir.getAbsolutePath()", "+                    + \" which looks like a broken symlink.\",", "+                    quiet ? Project.MSG_VERBOSE : verbosity);", "+                if (!delete(dir)) {", "+                    handle(\"Unable to delete directory \"", "+                           + dir.getAbsolutePath());", "+                }", "+            }"]}]}