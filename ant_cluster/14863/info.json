{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c74d5810b3e983e38d11915c20008bc4", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05eff664409c50830bcbe4693ce717ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( manifestFile == null )", "+        if( m_manifestFile == null )", "-        if( mode.getValue().equals( \"update\" ) && manifestFile.exists() )", "+        if( m_mode.getValue().equals( \"update\" ) && m_manifestFile.exists() )", "-                f = new FileReader( manifestFile );", "+                f = new FileReader( m_manifestFile );", "-                throw new TaskException( \"Existing manifest \" + manifestFile", "+                throw new TaskException( \"Existing manifest \" + m_manifestFile", "-                    TaskException( \"Failed to read \" + manifestFile, e );", "+                    TaskException( \"Failed to read \" + m_manifestFile, e );", "-            w = new PrintWriter( new FileWriter( manifestFile ) );", "+            w = new PrintWriter( new FileWriter( m_manifestFile ) );", "-            throw new TaskException( \"Failed to write \" + manifestFile, e );", "+            throw new TaskException( \"Failed to write \" + m_manifestFile, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4466bb603f6fefd821e29143a478f83b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f74fbfd061cf36cbd862727c8d3156302ecb80e", "commitAfterChange": "85f0f72113aa88da57b62eb336b5b5c1c492b054", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( manifestFile == null )", "+        if( m_manifestFile == null )", "-        if( mode.getValue().equals( \"update\" ) && manifestFile.exists() )", "+        if( m_mode.getValue().equals( \"update\" ) && m_manifestFile.exists() )", "-                f = new FileReader( manifestFile );", "+                f = new FileReader( m_manifestFile );", "-                throw new TaskException( \"Existing manifest \" + manifestFile", "+                throw new TaskException( \"Existing manifest \" + m_manifestFile", "-                    TaskException( \"Failed to read \" + manifestFile, e );", "+                    TaskException( \"Failed to read \" + m_manifestFile, e );", "-            w = new PrintWriter( new FileWriter( manifestFile ) );", "+            w = new PrintWriter( new FileWriter( m_manifestFile ) );", "-            throw new TaskException( \"Failed to write \" + manifestFile, e );", "+            throw new TaskException( \"Failed to write \" + m_manifestFile, e );"]}]}