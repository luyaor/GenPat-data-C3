{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eebfde7884df93169bb2aeec7faaf3d8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01dc43596fbf99be183b4c4b6dce114c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     private Class<?> getClassFromStream(InputStream stream, String classname, File container)             throws IOException, SecurityException", "signatureAfterChange": "     private Class<?> getClassFromStream(final InputStream stream, final String classname, final File container)             throws IOException, SecurityException", "diff": ["-    private Class<?> getClassFromStream(InputStream stream, String classname, File container)", "+    private Class<?> getClassFromStream(final InputStream stream, final String classname, final File container)", "-        ByteArrayOutputStream baos = new ByteArrayOutputStream();", "+        final ByteArrayOutputStream baos = new ByteArrayOutputStream();", "-        byte[] buffer = new byte[BUFFER_SIZE];", "+        final byte[] buffer = new byte[BUFFER_SIZE];", "-        byte[] classData = baos.toByteArray();", "+        final byte[] classData = baos.toByteArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d9198d08de0a8d1cc13bf70430a8286", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XslpLiaison.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void transform(String infile, String outfile) throws Exception", "signatureAfterChange": "      public void transform(File infile, File outfile) throws Exception", "diff": ["-    public void transform(String infile, String outfile) throws Exception {", "-        FileWriter out = new FileWriter(outfile);", "-        try {", "-            processor.process(infile, xslSheet, out);", "-        } finally {", "-            out.close();", "-        }", "+    public void transform(File infile, File outfile) throws Exception {", "+        FileOutputStream fos = new FileOutputStream(outfile);", "+        // XSLP does not support encoding...we're in hot water.", "+        OutputStreamWriter out = new OutputStreamWriter(fos,\"UTF8\");", "+        processor.process(infile.getAbsolutePath(), xslSheet, out);"]}]}