{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e0184016f45b2d5a998cfaee8f90e3e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc1cfc53881433b8d0e9f2fa87b9c51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/AbstractTasklet.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void init()         throws AntException", "signatureAfterChange": "     public void dispose()         throws Exception", "diff": ["-    public void init()", "-        throws AntException", "-        if( null != m_requiredJavaVersion )", "-        {", "-            final JavaVersion suppliedVersion = m_context.getJavaVersion();", "-            if( m_requiredJavaVersion.isLessThan( suppliedVersion ) )", "-            {", "-                throw new AntException( \"Task requires a JavaVersion of at least \" + ", "-                                        m_requiredJavaVersion + \" but current version is \" +", "-                                        suppliedVersion );", "-            }", "-        }", "+     */", "+    public void dispose()", "+        throws Exception", "+    {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af669f8a39bb4be214e54c471272df5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "ff8b6709bcf07f12efecc3625f5e1665e7ddf34d", "commitAfterChange": "0fdacdfc1a598078da48d77a24f2b7479e9bffb3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void configureObject( final Object object,                                   final Configuration configuration,                                   final Context context )         throws ConfigurationException, InvocationTargetException", "signatureAfterChange": "     private void configureObject( final Object object,                                   final Configuration configuration,                                   final Context context )         throws ConfigurationException", "diff": ["-        throws ConfigurationException, InvocationTargetException", "+        throws ConfigurationException", "+                catch( final ConfigurationException ce )", "+                {", "+                    ce.fillInStackTrace();", "+                    throw ce;", "+                }", "+                catch( final ConfigurationException ce )", "+                {", "+                    ce.fillInStackTrace();", "+                    throw ce;", "+                }", "+                }", "+                catch( final ConfigurationException ce )", "+                {", "+                    ce.fillInStackTrace();", "+                    throw ce;"]}]}