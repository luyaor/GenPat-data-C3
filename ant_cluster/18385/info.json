{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bac9e89cafbbe34d17dc11eef6c539f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098f581865940006c06b6bc8c21c8b82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "commitAfterChange": "6caf36ea18f59884feefc17b5bd3c77f88677268", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void doDispose( final Tasklet tasklet, final Configuration task )         throws AntException", "signatureAfterChange": "      protected void doDispose( final Task task, final Configuration taskData )         throws AntException", "diff": ["-    protected void doDispose( final Tasklet tasklet, final Configuration task )", "+    protected void doDispose( final Task task, final Configuration taskData )", "-        if( tasklet instanceof Disposable )", "+        if( task instanceof Disposable )", "-            try { ((Disposable)tasklet).dispose(); }", "+            try { ((Disposable)task).dispose(); }", "-                throw new AntException( \"Error disposing task \" +  task.getName() + \" at \" +", "-                                        task.getLocation() + \"(Reason: \" + ", "+                throw new AntException( \"Error disposing task \" +  taskData.getName() + \" at \" +", "+                                        taskData.getLocation() + \"(Reason: \" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a35853ba651a7f822bee925818e2e176", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "commitAfterChange": "6caf36ea18f59884feefc17b5bd3c77f88677268", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void doCompose( final Tasklet tasklet, final Configuration task )         throws AntException", "signatureAfterChange": "          protected void doCompose( final Task task, final Configuration taskData )         throws AntException", "diff": ["-    protected void doCompose( final Tasklet tasklet, final Configuration task )", "+    protected void doCompose( final Task task, final Configuration taskData )", "-        if( tasklet instanceof Composable )", "+        if( task instanceof Composable )", "-            try { ((Composable)tasklet).compose( m_componentManager ); }", "+            try { ((Composable)task).compose( m_componentManager ); }", "-                throw new AntException( \"Error composing task \" +  task.getName() + \" at \" +", "-                                        task.getLocation() + \"(Reason: \" + ", "+                throw new AntException( \"Error composing task \" +  taskData.getName() + \" at \" +", "+                                        taskData.getLocation() + \"(Reason: \" + "]}]}