{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d488883292c40a8362028ffd95ebba5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343bbce0f1de2b7a53ae6ac9348c80cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4HandlerAdapter.java", "commitBeforeChange": "8513609d9c7d547fa4907dde0522e409b0018095", "commitAfterChange": "2e26643d83cba15bf62ece08ebf6117ba231aeb6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public void start() throws BuildException", "signatureAfterChange": "       public void start() throws BuildException", "diff": ["-", "-            BufferedReader input = new BufferedReader(", "-                    new InputStreamReader(", "-                            new SequenceInputStream(is, es)));", "-", "-            String line;", "-            while ((line = input.readLine()) != null) {", "-                process(line);", "-            }", "-", "-            input.close();", "-", "+            Thread output = new Thread(new Reader(is));", "+            Thread error = new Thread(new Reader(es));", "+            output.start();", "+            error.start();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716691c1a5f910b5c0cfcb24f90c9282", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "b71fd5ddcba8aff698e5ab8df375f60f232ac899", "commitAfterChange": "73c0030ac60560e2e1fb64d94396c5e630028141", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "          private boolean valid(Project p)", "signatureAfterChange": "          private boolean valid(Project p)", "diff": ["-            if (ifCond != null && p.getProperty(ifCond) == null) {", "-                return false;", "-            }", "-            if (unlessCond != null && p.getProperty(unlessCond) != null) {", "-                return false;", "-            }", "-            return true;", "+            PropertyHelper ph = PropertyHelper.getPropertyHelper(p);", "+            return ph.testIfCondition(ifCond)", "+                && ph.testUnlessCondition(unlessCond);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9151143a1c5dc14b75e5a01e3a9bd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "5c43f6c93edfa3d34075b59a4ae199eb7257dab9", "commitAfterChange": "778a6800cfdfe174d4e21108400d4827124dadac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void onTestFailure(TestRunEvent evt)", "signatureAfterChange": "      public void onTestFailure(TestRunEvent evt)", "diff": ["-", "-        String[] args = parseFirstLine(evt.getStackTrace());", "-        if (args[1] != null && args[1].length() > 0) {", "-            nested.setAttribute(ATTR_MESSAGE, args[1]);", "-        }", "-        nested.setAttribute(ATTR_TYPE, args[0]);", "-        Text text = doc.createTextNode(evt.getStackTrace());", "+        ExceptionData error = evt.getError();", "+        nested.setAttribute(ATTR_MESSAGE, error.getMessage());", "+        nested.setAttribute(ATTR_TYPE, error.getType());", "+        Text text = doc.createTextNode(error.getStackTrace());"]}]}