{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2727f00a45077564a03d1486646ae7a4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122842f3b305b2c3badbe305db1033cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 39, "signatureBeforeChange": "     public void testScenario1()", "signatureAfterChange": "     @Test     public void testScenario1()", "diff": ["+    @Test", "-            //", "-            // *****  initialize test environment (called \"bed\")  *****", "-            //", "-            makeBed();", "-            String results = null;", "+", "+            String results;", "-            s = (ModifiedSelector)getSelector();", "+            s = new ModifiedSelector();", "-            results = selectionString(s);", "+            results = selectorRule.selectionString(s);", "-            for (int i=0; i<filenames.length; i++) {", "+            for (int i=0; i<selectorRule.getFiles().length; i++) {", "-                if (files[i].isDirectory()) ch = \"T\";", "+                if (selectorRule.getFiles()[i].isDirectory()) ch = \"T\";", "-                if (filenames[i].equalsIgnoreCase(f3name)) ch = \"T\";", "-                if (filenames[i].equalsIgnoreCase(f4name)) ch = \"T\";", "+                if (selectorRule.getFilenames()[i].equalsIgnoreCase(f3name)) ch = \"T\";", "+                if (selectorRule.getFilenames()[i].equalsIgnoreCase(f4name)) ch = \"T\";", "-            cleanupBed();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee218a022c987f3d6148a28e52565d72", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void _testScenario2()", "signatureAfterChange": "     @Test     @Ignore(\"RuleBasedCollator not yet supported - see Selector:375 note\")     public void testScenario2()", "diff": ["-    public void _testScenario2() { // RuleBasedCollator not yet supported - see Selector:375 note", "+    @Test", "+    @Ignore(\"RuleBasedCollator not yet supported - see Selector:375 note\")", "+    public void testScenario2() {", "-            makeBed();", "-            String results = selectionString(s);", "+            String results = selectorRule.selectionString(s);", "-            for (int i=0; i<filenames.length; i++) {", "+            for (int i=0; i<selectorRule.getFilenames().length; i++) {", "-                if (files[i].isDirectory()) ch = \"T\";", "-                if (filenames[i].equalsIgnoreCase(f3name)) ch = \"T\";", "-                if (filenames[i].equalsIgnoreCase(f4name)) ch = \"T\";", "+                if (selectorRule.getFiles()[i].isDirectory()) ch = \"T\";", "+                if (selectorRule.getFilenames()[i].equalsIgnoreCase(f3name)) ch = \"T\";", "+                if (selectorRule.getFilenames()[i].equalsIgnoreCase(f4name)) ch = \"T\";", "-            cleanupBed();", "-            if (bft!=null) bft.deletePropertiesfile();", "+            bft.deletePropertiesfile();"]}]}