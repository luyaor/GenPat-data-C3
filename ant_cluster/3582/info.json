{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f9d7a3c3e5dc6ed41d8a342969a89fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308388f212ac85c0101f48fdb7e92420", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java", "commitBeforeChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "commitAfterChange": "51e2cc543512d445e415bc5b7c2a42f98ddf8446", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void deployDataType( final String name, final String location, final URL url )         throws DeploymentException", "signatureAfterChange": "      public void deployDataType( final String name, final String location, final URL url )         throws DeploymentException", "diff": ["+        checkDeployment( location, url );", "+        final ZipFile zipFile = getZipFileFor( url );", "+        final Configuration datatypedefs = loadConfiguration( zipFile, TSKDEF_FILE );", "+        ", "+        try", "+        {", "+            final Iterator datatypes = datatypedefs.getChildren( \"datatype\" );", "+            while( datatypes.hasNext() )", "+            {", "+                final Configuration datatype = (Configuration)datatypes.next();", "+                if( datatype.getAttribute( \"name\" ).equals( name ) )", "+                {", "+                    handleDataType( datatype, url );", "+                    break;", "+                }", "+            }", "+        }", "+        catch( final ConfigurationException ce )", "+        {", "+            throw new DeploymentException( \"Malformed taskdefs.xml\", ce );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991d400317d1741b7875f1f2e0a2cfe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "9c8f401ba1b75b03f001db7415bc3cfbfd320cd9", "commitAfterChange": "5ddb0dfbd998fbfaca281f7537828e202bf02f44", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            addProperty(name, untypedValue);", "+            if (relative) {", "+                try {", "+                    File from = untypedValue instanceof File ? (File)untypedValue : new File(untypedValue.toString());", "+                    File to = basedir != null ? basedir : getProject().getBaseDir();", "+                    String relPath = FileUtils.getFileUtils().getRelativePath(to, from);", "+                    relPath = relPath.replace('/', File.separatorChar);", "+                    addProperty(name, relPath);", "+                } catch (Exception e) {", "+                    throw new BuildException(e, getLocation());", "+                }", "+            } else {", "+                addProperty(name, untypedValue);", "+            }"]}]}