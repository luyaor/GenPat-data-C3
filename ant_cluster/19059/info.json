{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40ca3962f7cc774a36163dd1490cef12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a838baa931a57e35dc7a1c0e72031c17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Javac12.java", "commitBeforeChange": "624b9a578da6bd56c53181b2a3a9bd2affb9c374", "commitAfterChange": "60dae1e17647de90caf2b80850d4ec9a7c50ed45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws TaskException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        OutputStream logstr = new LogOutputStream( getLogger(), true );", "-            Object compiler = cons.newInstance( new Object[]{logstr, \"javac\"} );", "+            Object compiler = cons.newInstance( new Object[]{System.out, \"javac\"} );", "-            }", "-        }", "-        finally", "-        {", "-            try", "-            {", "-                logstr.close();", "-            }", "-            catch( IOException e )", "-            {", "-                // plain impossible", "-                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d2efaa4add84a5eff3417bd5366ee5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Javac12.java", "commitBeforeChange": "624b9a578da6bd56c53181b2a3a9bd2affb9c374", "commitAfterChange": "60dae1e17647de90caf2b80850d4ec9a7c50ed45", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws TaskException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        OutputStream logstr = new LogOutputStream( getLogger(), true );", "-            Object compiler = cons.newInstance( new Object[]{logstr, \"javac\"} );", "+            Object compiler = cons.newInstance( new Object[]{System.out, \"javac\"} );", "-            }", "-        }", "-        finally", "-        {", "-            try", "-            {", "-                logstr.close();", "-            }", "-            catch( IOException e )", "-            {", "-                // plain impossible", "-                throw new TaskException( \"Error\", e );"]}]}