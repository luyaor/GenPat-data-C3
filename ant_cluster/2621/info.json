{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3ada2f1bd553a352865096d8f12eed0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a43db2f0b57bd7e0ee3bc6a2c86ef1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "84d14bfb72b481348097d71c76c1e47253a8660c", "commitAfterChange": "1038e813e3eccdf970c5a2a82d8b0286370f4270", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-        if (attributeNames != null) {", "-            for (int i = 0; i < attributeNames.size(); i++) {", "-                String name = (String) attributeNames.get(i);", "-                String value = (String) attributeMap.get(name);", "+        if (attributeMap != null) {", "+            for (Iterator iter = attributeMap.entrySet().iterator(); iter.hasNext();) {", "+                Map.Entry entry = (Map.Entry) iter.next();", "+                String name = (String) entry.getKey();", "+                String value = (String) entry.getValue();", "-                    } else  if (getElementTag() == null) {", "+                    } else if (getElementTag() == null) {", "-                            getElementTag() +  \" doesn't support the \\\"\"", "+                            getElementTag() + \" doesn't support the \\\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0be8f6968bcb0ea197543bb215bb06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "3354222b50e1a78721b163a398c46575b15ad2f7", "commitAfterChange": "ed45d2f66a2b566ce5be500c39eb8bdbe171ea1c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-        Hashtable newroots = new Hashtable();", "-        // put in the newroots vector the include patterns without", "+        Map newroots = new HashMap();", "+        // put in the newroots map the include patterns without", "-            Enumeration enum2 = newroots.keys();", "+            Iterator it = newroots.entrySet().iterator();", "-            while (enum2.hasMoreElements()) {", "-                String currentelement = (String) enum2.nextElement();", "+            while (it.hasNext()) {", "+            \tMap.Entry entry = (Map.Entry)it.next();", "+                String currentelement = (String) entry.getKey();", "-                String originalpattern = (String) newroots.get(currentelement);", "+                String originalpattern = (String) entry.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d656e6659bd0dce0d912e77ec9d71d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/remote/TestRunner.java", "commitBeforeChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "commitAfterChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private final int countTests(Test[] tests)", "signatureAfterChange": "     private final int countTests(Collection tests)", "diff": ["-    /** count the number of test methods in all tests */", "-    private final int countTests(Test[] tests) {", "+     */", "+    private final int countTests(Collection tests) {", "-        for (int i = 0; i < tests.length; i++) {", "-            count = count + tests[i].countTestCases();", "+        for (Iterator it = tests.iterator(); it.hasNext(); ) {", "+            Test test = (Test)it.next();", "+            count = count + test.countTestCases();"]}]}