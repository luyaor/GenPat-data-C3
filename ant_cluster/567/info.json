{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba880e4d2273bc2a21d6adf7bc656052", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0991384c645a6917a86fcfb1e66ce0e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java", "commitBeforeChange": "0e949f7027d4c0e0bd7aaad33cdbf45939a9a761", "commitAfterChange": "0f4ea3d22b1f1b89a5a4e2619e685be3134efa78", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void configure( Configuration configuration ) throws ConfigurationException", "signatureAfterChange": "      protected final String getClassname()", "diff": ["-     */", "-    public void configure( Configuration configuration ) throws ConfigurationException", "-        m_typeDef = createTypeDefinition();", "-        // Configure attributes", "-        final String[] attrs = configuration.getAttributeNames();", "-        for( int i = 0; i < attrs.length; i++ )", "-        {", "-            final String name = attrs[ i ];", "-            final String value = configuration.getAttribute( name );", "-            if( name.equalsIgnoreCase( \"lib\" ) )", "-            {", "-                m_lib = (File)convert( File.class, value );", "-            }", "-            else", "-            {", "-                configure( m_typeDef, name, value );", "-            }", "-        }", "-        // Configure nested elements", "-        final Configuration[] elements = configuration.getChildren();", "-        for( int i = 0; i < elements.length; i++ )", "-        {", "-            Configuration element = elements[ i ];", "-            configure( m_typeDef, element );", "-        }", "+", "+    protected final String getClassname()", "+    {", "+        return m_classname;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9588aad67d0f9b27a26863648a6b8770", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractTypeDef.java", "commitBeforeChange": "d957fa1151163d513197a174a098e2aac8745b1e", "commitAfterChange": "87ceed8170a6359ac2c4714b6ad22c55d2b1f571", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setLib( final File lib )", "signatureAfterChange": "     public void configure( Configuration configuration ) throws ConfigurationException", "diff": ["-    public void setLib( final File lib )", "+     */", "+    public void configure( Configuration configuration ) throws ConfigurationException", "-        //In the future this would be replaced by ClassPath sub-element", "-        m_lib = lib;", "+        m_typeDef = createTypeDefinition();", "+", "+        // Configure attributes", "+        final String[] attrs = configuration.getAttributeNames();", "+        for( int i = 0; i < attrs.length; i++ )", "+        {", "+            final String name = attrs[ i ];", "+            final String value = configuration.getAttribute( name );", "+            if( name.equalsIgnoreCase( \"lib\" ) )", "+            {", "+                m_lib = (File)convert( File.class, value );", "+            }", "+            else", "+            {", "+                configure( m_typeDef, name, value );", "+            }", "+        }", "+", "+        // Configure nested elements", "+        final Configuration[] elements = configuration.getChildren();", "+        for( int i = 0; i < elements.length; i++ )", "+        {", "+            Configuration element = elements[ i ];", "+            configure( m_typeDef, element );", "+        }"]}]}