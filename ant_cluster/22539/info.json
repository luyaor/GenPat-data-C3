{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "361f39efc6d75b44cf9dbd4080a8c98a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261cfeb8afd94eb76c317a73be8697c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "5db007f358aa500912016145f7a8193aebc03a92", "commitAfterChange": "869b123c0437855adde003d242e4e084e8b35731", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testNormalize()", "signatureAfterChange": "      public void testNormalize()", "diff": ["-        try {", "-            FILE_UTILS.normalize(localize(\"/1/../../b\"));", "-            fail(\"successfully crawled beyond the filesystem root\");", "-        } catch (BuildException e) {", "-            // Expected exception caught", "-        }", "+        assertEquals(\"will not go outside FS root (but will not throw an exception either)\",", "+                new File(localize(\"/1/../../b\")),", "+                FILE_UTILS.normalize(localize(\"/1/../../b\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a63e832adc79f5f8c7c745e4eea4a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "5db007f358aa500912016145f7a8193aebc03a92", "commitAfterChange": "869b123c0437855adde003d242e4e084e8b35731", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testResolveFile()", "signatureAfterChange": "      public void testResolveFile()", "diff": ["-        try {", "-            FILE_UTILS.resolveFile(new File(localize(\"/1\")), \"../../b\");", "-            fail(\"successfully crawled beyond the filesystem root\");", "-        } catch (BuildException e) {", "-            // Expected Exception caught", "-        }", "+        assertEquals(\"meaningless result but no exception\",", "+                new File(localize(\"/1/../../b\")),", "+                FILE_UTILS.resolveFile(new File(localize(\"/1\")), \"../../b\"));"]}]}