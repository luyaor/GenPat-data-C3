{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e19d055eb73b445099a4d60f06654c7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010a13caddba6686c14eebb675bf74aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public void waitForString(String s, Integer timeout)", "signatureAfterChange": "         public void waitForString(String s, Integer timeout)", "diff": ["-                            throw new BuildException(\"Response Timed-Out\", getLocation());", "+                            throw new BuildException(", "+                                \"Response timed-out waiting for \\\"\"+s+'\\\"', ", "+                                getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "012ad4150368d01d549284b3487728ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "a99711a13ec7e6c4ac9379b39fd08917964866d9", "commitAfterChange": "5151a3152de887e4dccf485a437dea64cc49afa3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Map findAdders()         throws ConfigurationException", "signatureAfterChange": "     private Map findAdders()         throws ConfigurationException", "diff": ["-                if( currentType != String.class && type == String.class )", "+                if( isTypedAdder )", "+                {", "+                    // Both are string, or both are not string", "+                    final String message =", "+                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "+                                       m_class.getName(),", "+                                       type.getName(),", "+                                       currentType.getName() );", "+                    throw new ConfigurationException( message );", "+                }", "+                else if( currentType != String.class && type == String.class )", "-                    throw new ConfigurationException( message );", "-                }", "-                else if( isTypedAdder )", "-                {", "-                    // Both are string, or both are not string", "-                    final String message =", "-                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "-                                       m_class.getName(),", "-                                       type.getName(),", "-                                       currentType.getName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015010fc259d56d723efdba0163c2d54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java", "commitBeforeChange": "ef2d4639325a9580d6357793271ae32a0a919542", "commitAfterChange": "a40f5fbc661d21426b9e147021c9bff6af807813", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            if (removeKeepExtension && (!compile || keep)) {", "+                removeKeepExtensions();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0163483e5bb7fb8d4ae21a0856f2c8f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "ee67180827ebf611a133e797d312557c2429afc3", "commitAfterChange": "c6f8d18fe3486426c9eb5f51fc590ebabed1030a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setTablength(int tlength) throws BuildException", "signatureAfterChange": "     public void setTablength(int tlength) throws BuildException", "diff": ["-        if (tlength < 2 || (tlength % 2) != 0) {", "+        if (tlength < 2 || (tlength & (tlength-1)) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b677a2fcae460331b8674b52c6b228", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "de06c1b597ffcab2fd85890c0d110873a7e3b738", "commitAfterChange": "98f3237b31cf8d1b2ef44373da1fe7a9da618558", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["+            } else {", "+                te.setMode(tarFileSet.getDirMode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e91dfd0c6be55aabcc8d3a8243395b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "6f099c22773354c47105d4aeff32cc97d49fe575", "commitAfterChange": "267fb740f2a442c9850660a28701fc884c223378", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["+        //add the timestamp", "+        final String timestamp = DateUtils.format(new Date(),", "+                DateUtils.ISO8601_DATETIME_PATTERN);", "+        rootElement.setAttribute(TIMESTAMP,timestamp);", "+        //and the hostname.", "+        rootElement.setAttribute(HOSTNAME,getHostname());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ba18de7bdfc6d44350b6eb318e1c7f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "2cbfa09eb6cf1138facda2aba815a9441db6da35", "commitAfterChange": "67776debe7e8f2d81828caf29d8a7645564e4750", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected String getReferenceFilesParameter()", "signatureAfterChange": "     protected String getReferenceFilesParameter()", "diff": ["-        s.append('\\\"').append(refpath).append('\\\"');", "+        if (isWindows) {", "+            s.append('\\\"');", "+        }", "+        s.append(refpath);", "+        if (isWindows) {", "+            s.append('\\\"');", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02bef613a47753299bd06e899dcfdde9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "03d0b81deb49fb4b6b87fa7dd648daf8f3bcbf4b", "commitAfterChange": "80080d456c543d039426db35bcf35d90694bbd96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "signatureAfterChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "diff": ["-                        throw new BuildException(\"Unable to find a javac compiler;\\n\"", "-                            + \"com.sun.tools.javac.Main is not on the classpath.\\n\"", "+                        throw new BuildException(\"Unable to find a javac \" ", "+                            + \"compiler;\\n\"", "+                            + \"com.sun.tools.javac.Main is not on the \" ", "+                            + \"classpath.\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02df003b2dfbe64adf423fcdaff49d67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "c12912c52bda86fe28ed7476165b6cc49ce8c0ee", "commitAfterChange": "b89f7f04e6e2866a3108826c1c2287777e324aab", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public String addAttributeAndCheck(Attribute attribute)              throws ManifestException", "signatureAfterChange": "         public String addAttributeAndCheck(Attribute attribute)              throws ManifestException", "diff": ["+                        warnings.addElement(\"Multiple Class-Path attributes \"", "+                            + \"are supported but violate the Jar \"", "+                            + \"specification and may not be correctly \"", "+                            + \"processed in all environments\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "033a65f76662b9d0e5b07249cf27eb1d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "e32a24de079fbfb1174b794e7e075dd663eb89a5", "commitAfterChange": "fa45d9628d6fb4a8feb330027db88c5ce903cb56", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public boolean equals(Object obj)", "signatureAfterChange": "     public boolean similar(Object obj)", "diff": ["-    public boolean equals(Object obj) {", "+    public boolean similar(Object obj) {", "+        if (obj == this) {", "+            return true;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0355518b543314ac17d87dd21ce6e7c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "5947ffd64f9d417e57862de87fa032b85092a9b3", "commitAfterChange": "407da1a68be77db48efe9c3d19157ca863bf7e65", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private boolean sameDefinition(         AntTypeDefinition def, AntTypeDefinition old)", "signatureAfterChange": "     private boolean sameDefinition(         AntTypeDefinition def, AntTypeDefinition old)", "diff": ["-        boolean sameValidity = !(defValid ^ validDefinition(old));", "+        boolean sameValidity = defValid ^ !validDefinition(old);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "044dfa4e03c5e7a370f0e8f75c61578e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/AllJUnitTests.java", "commitBeforeChange": "68573483755127bbfadcc3296e3ab13c6a5f8967", "commitAfterChange": "aa7f2d4046722f4ed1ea63464f0573e4accb418d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["+        suite.addTest(new TestSuite(PathTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04de2a0f0881c33ee279e9fab6502d6b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/ClasspathTestCollector.java", "commitBeforeChange": "b9ab19b18b213ce7deadee5ccf88adaa2f5d261b", "commitAfterChange": "9d81c4b279b3af75f145c02a07f4cd69b917160b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected ArrayList gatherFromDirectory(File dir)", "signatureAfterChange": "     protected ArrayList gatherFromDirectory(File dir)", "diff": ["-        ds.setIncludes(patterns.getIncludePatterns(getProject()));", "-        ds.setExcludes(patterns.getExcludePatterns(getProject()));", "+        ds.setIncludes(patterns.getIncludePatterns(project));", "+        ds.setExcludes(patterns.getExcludePatterns(project));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05935aaafe6968e4524ab2c6be87064b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "cefa594fa6df3c045138178f35312d663451a129", "commitAfterChange": "3e7e9989abf9f24335b7039ab12a27400d3e75b2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void fatalError(TransformerException e)", "signatureAfterChange": "     public void fatalError(TransformerException e)", "diff": ["-        throw new BuildException(\"Fatal error during transformation\", e);", "+        throw new BuildException(\"Fatal error during transformation using \" + stylesheet, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059c039d4856381de1437dafb294200b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "67776debe7e8f2d81828caf29d8a7645564e4750", "commitAfterChange": "b1d8a1a56d9c9239d766a14ab79c717a9ffa9157", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected String getReferencesParameter()", "signatureAfterChange": "     protected String getReferencesParameter()", "diff": ["-                return references;", "+                return REFERENCE_OPTION + references;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d72956953a057dbcbf0a67d2d73fd3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "b345410bb2be9ca58d6482f7dd772f4d1747b77d", "commitAfterChange": "bcc858ea72bf8719537798fd678fd3eaa4445a8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void parse(Project project, Object source)             throws BuildException", "signatureAfterChange": "      public void parse(Project project, Object source)             throws BuildException", "diff": ["+        project.addReference( \"ant.targets\", context.targetVector );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06166bdd0035969cc622c5c7a6c39177", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java", "commitBeforeChange": "824c630ff9c0aeb0e01d9d08c1541d65dfb3fa99", "commitAfterChange": "f02f90064bbd969d79995103290b722750fe67ba", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r     private String getMethodName(Test test)", "signatureAfterChange": "\r         public TestInfos(Test test)", "diff": ["-\r", "-    private String getMethodName(Test test) {\r", "-        String methodName = test.toString();\r", "-        return methodName.substring(0, methodName.indexOf('('));\r", "-    }\r", "+         */\r", "+        public TestInfos(Test test) {\r", "+            className = test.getClass().getName();\r", "+            methodName = test.toString();\r", "+            methodName = methodName.substring(0, methodName.indexOf('('));\r", "+        }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07012f2dffeaaa323d7690d0aa053450", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "eebac461e38d060317ea5c320c5ca654d49919c4", "commitAfterChange": "6aa0a70ff793a6d40e7463c528b98f6ac064b22a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     private synchronized void checkNamespace(String componentName)", "signatureAfterChange": "     private synchronized void checkNamespace(String componentName)", "diff": ["+", "+        if (antTypeTable.size() == 0) {", "+            // Project instance doesn't know the tasks and types", "+            // defined in defaults.properties, likely created by the", "+            // user - without those definitions it cannot parse antlib", "+            // files as taskdef, typedef and friends are unknown", "+            initDefaultDefinitions();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a67693159345f9384471e5cf44db3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "0c10f4889a9d7ffd65f06c5ed717f4f03140d1d1", "commitAfterChange": "f7ce826bb30ed26f71a100a009cc5d792a35b42c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected String getStylesheetSystemId() throws IOException", "signatureAfterChange": "     protected String getStylesheetSystemId() throws IOException", "diff": ["-            url = getClass().getResource(xslname);", "+            url = getClass().getResource(\"xsl/\" + xslname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b297587333c80a538843b358538fa0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void enableContent()         throws ConfigurationException", "signatureAfterChange": "     public void enableContent()         throws ConfigurationException", "diff": ["-            Class type = method.getParameterTypes()[0];", "-            m_contentConfigurer = new DefaultPropertyConfigurer( type, null, method );", "+            final Class type = method.getParameterTypes()[ 0 ];", "+            m_contentConfigurer =", "+                new DefaultPropertyConfigurer( m_allProps.size(),", "+                                               type,", "+                                               null,", "+                                               method,", "+                                               1 );", "+            m_allProps.add( m_contentConfigurer );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0804faa0ce48e567c94f9a71300793d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void executeProject( final Project project, final String target )         throws TaskException", "signatureAfterChange": "     public void executeProject( final Project project, final String target )         throws TaskException", "diff": ["-        m_listenerSupport.projectStarted();", "+        m_listenerSupport.projectStarted( project.getProjectName() );", "-        m_listenerSupport.projectFinished();", "+        m_listenerSupport.projectFinished( project.getProjectName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08762d608ae883be0f63802f09cea938", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "3ead8e446a79208b0986949d70d44a1c244e6677", "commitAfterChange": "782e4511518e3ccc4d1e14b608b2442fc1cb7010", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["+                    oldFiles.setDefaultexcludes(getImplicitFileSet()", "+                                                .getDefaultexcludes());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09542e883dd73af11bdf8b6165f2c931", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1c5c68f3ed2854776e2377bf5486caadc8ecc5b8", "commitAfterChange": "f665a4d33564ecc12851996978a9847024643829", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void setExtra(byte[] extra) throws RuntimeException", "signatureAfterChange": "     public void setExtra(byte[] extra) throws RuntimeException", "diff": ["-            ZipExtraField[] local = ExtraFieldUtils.parse(extra, true);", "+            ZipExtraField[] local =", "+                ExtraFieldUtils.parse(extra, true,", "+                                      ExtraFieldUtils.UnparseableExtraField.READ);", "-            throw new RuntimeException(e.getMessage(), e);", "+            // actually this is not be possible as of Ant 1.8.1", "+            throw new RuntimeException(\"Error parsing extra fields for entry: \"", "+                                       + getName() + \" - \" + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f491be52243fc7a3fd9524a29a0ed5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "7b722732fbbdb511be32f94588d43f55b0b51f65", "commitAfterChange": "8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private Parameters createDefaultParameters()", "signatureAfterChange": "     private Parameters createDefaultParameters()", "diff": ["-        defaults.setParameter( \"org.apache.ant.convert.engine.ConverterEngine\",", "-                               \"org.apache.ant.convert.engine.DefaultConverterEngine\" );", "-", "+        defaults.setParameter( MasterConverter.ROLE,", "+                               \"org.apache.myrmidon.components.converter.DefaultMasterConverter\" );", "+        defaults.setParameter( ConverterRegistry.ROLE,", "+                               \"org.apache.myrmidon.components.converter.DefaultConverterRegistry\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a3c9907e7f95a2e1f9f957462562e0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "1c4bde9df432fb6c2123228896f4b2f8d9029bec", "commitAfterChange": "22bdc578fccd792a5e254f068715464deef89765", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "     public void setServerLanguageCodeConfig(String serverLanguageCode)", "signatureAfterChange": "     public void setServerLanguageCodeConfig(String serverLanguageCode)", "diff": ["-        this.serverLanguageCodeConfig = serverLanguageCode;", "-        configurationHasBeenSet();", "+        if (serverLanguageCode != null && !serverLanguageCode.equals(\"\"))", "+        {", "+            this.serverLanguageCodeConfig = serverLanguageCode;", "+            configurationHasBeenSet();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b07a5496949591d71bbd54a0ccef70e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionContext.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ExecutionContext(ExecutionFrame frame,                             BuildEventSupport eventSupport)", "signatureAfterChange": "     public ExecutionContext(ExecutionFrame frame)", "diff": ["-    public ExecutionContext(ExecutionFrame frame,", "-                            BuildEventSupport eventSupport) {", "+    public ExecutionContext(ExecutionFrame frame) {", "-        this.eventSupport = eventSupport;", "+        this.eventSupport = frame.getEventSupport();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b827496389657ccb7bf509d2bcda43b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "65d50bad90d14f185018f6d81b0bb0a4801c3cfd", "commitAfterChange": "e7e85f299e908cfbfca277f8dea203a99009bafd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException", "signatureAfterChange": "     public void write(byte[] wBuf, int wOffset, int numToWrite) throws IOException", "diff": ["-                                  + this.currSize + \"' bytes\");", "+                                  + this.currSize + \"' bytes for entry '\"", "+                                  + currName + \"'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ba06dc1cb7c30ab6c9e6e24525c247c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "322d8cef7fdb987bef0e0699cd3ed9db0ef82806", "commitAfterChange": "ff04e875ee2a99514bbea79b677968a63befff72", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static void printUsage()", "signatureAfterChange": "     private static void printUsage()", "diff": ["-        msg.append(\"  -nouserlib             Run ant without using the jar files from ${user.home}/\"", "-                   + \".ant/lib\");", "+        msg.append(\"  -nouserlib             Run ant without using the jar files from\" + lSep", "+                   + \"                         ${user.home}/.ant/lib\" + lSep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1d8e9d6b05958349d29e8d51367b03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "8eca06e6fc1dddfb5f3cfbc41318cacac24e6f6c", "commitAfterChange": "015ec69fd10eda4f947c101cb73fd9edf1ed7cf0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "       private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["+        long lastModified = srcFile.lastModified();", "+                if (preserveLastModified) {", "+                    log(\"preserved lastModified\", Project.MSG_DEBUG);", "+                    FILE_UTILS.setFileLastModified(destFile, lastModified);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ccaa65d67d2528fac3daa36ff95e372", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/RegisterTasklet.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void run()         throws AntException", "signatureAfterChange": "      public void run()         throws AntException", "diff": ["+/*", "-", "+*/", "-            throw new AntException( \"Must specify taskname parameter\" );            ", "+            throw new AntException( \"Must specify taskname parameter\" );", "+        }", "+", "+        if( null == m_tasklib && null == m_classname )", "+        {", "+            throw new AntException( \"Must specify classname if don't specify \" + ", "+                                    \"tasklib parameter\" );", "-            final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "-            final URL url = tasklib.toURL();", "+            URL url = null;", "+", "+            if( null != m_tasklib )", "+            {", "+                final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "+                url = tasklib.toURL();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d379e41b25e98288d8492e960812f7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/impl/ProcessMonitor.java", "commitBeforeChange": "1d7212692463c7a9da228342b23d56ccb2e6b76f", "commitAfterChange": "c4fd52dc5ba79475b7b5da06c3792d30534d2530", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processStandardInput()", "signatureAfterChange": "     private void processStandardInput()", "diff": ["+", "+            IOUtil.shutdownStream( m_input );", "+            m_input = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d7de3640d455c3f1415041395d97aa0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "ccbe1eb6ed47e3ffd88fdf3c41906c693e4b5823", "commitAfterChange": "879077fa37b76ac953c13ae4c6e0f62c59c69ffa", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": "          public int getAction()", "signatureAfterChange": "          public int getAction()", "diff": ["+            } else if (actionL.equals(\"chmod\")) {", "+                return CHMOD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0de9b6f7f56d5cf42232554b1b2de474", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "fa7d0ce02c707462773336c0743dca2dbff04db1", "commitAfterChange": "e7cca3123ec529a60595f5a8f86d874b52db026a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                    if (resourceStack.getStack().contains(url)) {", "-                        log(\"Warning: Attempting to recursively load \" + url", "-                            + \" at \" + getLocation(),", "+                    if (resourceStack.getStack().get(url) != null) {", "+                        log(\"Warning: Recursive loading of \" + url", "+                            + \" ignored\"", "+                            + \" at \" + getLocation()", "+                            + \" originally loaded at \"", "+                            + resourceStack.getStack().get(url),", "-                            resourceStack.getStack().add(url);", "+                            resourceStack.getStack().put(url, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df75cf60527c3e1089577a2ab36c5ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "17a23996114ed76b9302506a8f0d34b8284dee5e", "commitAfterChange": "87f090a12ad700915e0728cc7836980f7793f36b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "signatureAfterChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "diff": ["+        //Add in child type manager so each frame can register different ", "+        //sets of tasks etc", "+        componentManager.put( TypeManager.ROLE, m_typeManager.createChildTypeManager() );", "+", "-", "-        //Per frame TypeManager here..."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fdde3353672c663ec52b248bae04c10", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "e8e790834d38556214ff7d727444f612f871dbc2", "commitAfterChange": "014cf44f1577c2e734efb3357177812df68b1d91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "signatureAfterChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "diff": ["-            final Logger logger = new LogKitLogger( m_hierarchy.getLoggerFor( \"project\" + m_projectID ) );", "+            final Logger logger =", "+                new LogKitLogger( m_hierarchy.getLoggerFor( \"project\" + m_projectID ) );", "+", "+            /**", "+             *  @todo Should no occur but done for the time being to simplify evolution.", "+             */", "+            componentManager.put( ExecutionFrame.ROLE, frame );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "102b3da9fb97897f787e24040f1a28be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "c23f0f5faa7a717bc36e612f79c75e5f08154ad6", "commitAfterChange": "e2bb645b674365df77815f99f6023675d17a26fa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void execSQL(String sql) throws SQLException", "signatureAfterChange": "     protected void execSQL(String sql) throws SQLException", "diff": ["+        // Check and ignore empty statements", "+        if (\"\".equals(sql.trim())) return;", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d58b1e681e76cb36ebf0092b2e15b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "376c6e414b6af29db7248328c6bc43f9657635e5", "commitAfterChange": "841c7e41432de534c545186cbcd6572c5588fe2a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private boolean sameDefinition(         AntTypeDefinition def, AntTypeDefinition old)", "signatureAfterChange": "     private boolean sameDefinition(         AntTypeDefinition def, AntTypeDefinition old)", "diff": ["-        boolean sameValidity = !(defValid | validDefinition(old));", "+        boolean sameValidity = !(defValid ^ validDefinition(old));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "120fda3170ae94b32a1c9069ced1eeb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "a4867d61a6fe50eacac0367c792b98af2c0f2981", "commitAfterChange": "ffc467b126ec5f41e0d4114a7683f384885e4108", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object processNode (Node node, String prefix, Object container)", "signatureAfterChange": "     public Object processNode (Node node, String prefix, Object container)", "diff": ["+        } else if ((node.getNodeType() == Node.ELEMENT_NODE)", "+                   && (node.getChildNodes().getLength() == 0)) {", "+            nodeText = \"\";", "-            if (nodeText.trim().length() != 0) {", "-                addProperty(prefix, nodeText, id);", "-            }", "+            addProperty(prefix, nodeText, id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12548496486193349176dc843eff89a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+        sb.append(\", Skipped: \");", "+        sb.append(suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c67e8b3fe910dfe233a81b961ad565", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/JarTest.java", "commitBeforeChange": "c42c66bcab01336e14bfbb2b08450269b8319a81", "commitAfterChange": "75a944cb281cb59a1231916cd2125072b8767345", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testManifestStaysIntact()          throws IOException, ManifestException", "signatureAfterChange": "      public void testManifestStaysIntact()          throws IOException, ManifestException", "diff": ["-                            .resolveFile(\"jartmp/manifest\"));", "+                            .resolveFile(tempDir + \"manifest\"));", "-                            .resolveFile(\"jartmp/META-INF/MANIFEST.MF\"));", "+                            .resolveFile(tempDir + \"META-INF/MANIFEST.MF\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e0ee67152c375ead16387d0ad1b9d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public FileNameMapper getImplementation() throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation() throws BuildException", "diff": ["+        } finally {", "+            if (type != null) {", "+                classname = null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f540a55d63a5025641e0b8a0df679c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "28447bc7c09eb2a7210a267ca7a6fb2e54ee488f", "commitAfterChange": "491cd1e2d8436285603646db6719219f5c4a3601", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-                Transport.send(msg);", "+                // Send the message using SMTP, or SMTPS if the host uses SSL", "+                Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "+                transport.connect(host, user, password);", "+                transport.sendMessage(msg, msg.getAllRecipients());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a42e2d05d2256a76e930189a714bf4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "a8387980f989e9418ddcee6fa9ae14a0c07e3165", "commitAfterChange": "505d4a8c1d350ffac8a917378a6fac71b2517b3d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public String[] getIncludePatterns(Project p)", "signatureAfterChange": "     public String[] getIncludePatterns(Project p)", "diff": ["-        return makeArray(includeList, p);", "+        if (isReference()) {", "+            return getRef(p).getIncludePatterns(p);", "+        } else {", "+            return makeArray(includeList, p);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f78739b125e02726c815fff0e56498", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/MailLogger.java", "commitBeforeChange": "ba4dc28a817532e38789d4977a09898fde89c6c2", "commitAfterChange": "f052bb39d64c30142e1fc7ecaca895cd8a2a4c6b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["+            int port = Integer.parseInt(getValue(properties,\"port\",String.valueOf(MailMessage.DEFAULT_PORT)));", "-            sendMail(mailhost, from, toList, subject, buffer.toString());", "+            sendMail(mailhost, port, from, toList, subject, buffer.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f1414d0300ffab4a253c71dd47b888", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "27ca4acff0f38d2d6fc484c8841cdf7c733ddbfc", "commitAfterChange": "98d1226139081f426245761397cd0fa3741391a2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void add(Path path) throws BuildException", "signatureAfterChange": "     public void add(Path path) throws BuildException", "diff": ["+        if (path == this) {", "+            throw circularReference();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1515ba9e7e9d0ebc603b18be871b197a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarInputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int available()         throws IOException", "signatureAfterChange": "     public int available()         throws IOException", "diff": ["-        return this.entrySize - this.entryOffset;", "+        return m_entrySize - m_entryOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151c5f8c4d6f36e83bb80210582b337b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "729aa048f35944987ac79cf8b05b05a2be3f9cb1", "commitAfterChange": "b7c2f5f6435c50ce21b758e0f070add9cabae1fb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void initSubProject(Project subProject)", "signatureAfterChange": "     public void initSubProject(Project subProject)", "diff": ["+        subProject.setKeepGoingMode(this.isKeepGoingMode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "152b1c3d9f57c8d0ced1e9f11c15e667", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "01c9d3485c2b6c9f54a2e9f5320509e6364089ce", "commitAfterChange": "135b0fa3736315ded38ba95dec6226db2e4a9a1c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void maybeConfigure() throws BuildException", "signatureAfterChange": "     public void maybeConfigure() throws BuildException", "diff": ["-        //ProjectComponentHelper helper=ProjectComponentHelper.getProjectComponentHelper();", "-        //realThing = helper.createProjectComponent( this, getProject(), null,", "-        //                                           this.getTag());", "-", "+        if (realThing != null) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160d09c508f9370f6f6938779aac2a90", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      @Before     public void setUp()", "diff": ["-", "+    @Before", "-        super.configureProject(\"src/etc/testcases/core/antclassloader.xml\");", "-        getProject().executeTarget(\"setUp\");", "+        buildRule.configureProject(\"src/etc/testcases/core/antclassloader.xml\");", "+        buildRule.executeTarget(\"setUp\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "161aa66cbfaaec817578ce3a061fcb24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "f4824b8ae08928b68298801a1440f9f2c435173c", "commitAfterChange": "f26833969e6300b9c9484de7edc6584f27508c0f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                        + project.replaceProperties(this.ifCondition)", "+                        + project.replaceProperties(ifCondition)", "-                        + project.replaceProperties(this.unlessCondition)", "+                        + project.replaceProperties(unlessCondition)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1715080ebfef523e48b154774dd2dcb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "4141a91af169f9d36ca98a2da86350ef31b26693", "commitAfterChange": "3e2593fb20bff8c6017e6b9462ccce4aaa65394a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["+            // a TestSuite can contain Tests from multiple classes,", "+            // even tests with the same name - disambiguate them.", "+            currentTest.setAttribute(ATTR_CLASSNAME,", "+                                     test.getClass().getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1786ea83e3822ce2a99f9956a5628335", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "fabddf48aa9d39fce88c9221b1b54d09717ee010", "commitAfterChange": "e11e04dc6e6d6dcabe531346f60b597a8a58c453", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void handleChildren(Object parent,                                    RuntimeConfigurable parentWrapper)          throws BuildException", "signatureAfterChange": "      protected void handleChildren(Object parent,                                    RuntimeConfigurable parentWrapper)          throws BuildException", "diff": ["-                ih.createElement(project, parent, child.getTag());", "+                realChild = ih.createElement(project, parent, child.getTag());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17fc741e259786a9e7267aa155301c7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/MailLogger.java", "commitBeforeChange": "b905f0902c3d8063ca268eab358e6248e9d52012", "commitAfterChange": "a7bc73294352164be218d62dbcf8c95cf1fbeb34", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void sendMail(String mailhost, int port, String from, String toList,                           String subject, String message) throws IOException", "signatureAfterChange": "     private void sendMail(String mailhost, int port, String from, String toList,                           String subject, String message) throws IOException", "diff": ["+        mailMessage.setHeader(\"Date\", DateUtils.getDateForHeader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181794bd94f13a710c03464cd86fcf47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "15624f5e8f83560ad42f32095345af33803beaa7", "commitAfterChange": "2a87210bc3a186a1c2c3aa1b8501354339de2d13", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void process(File baseDir, String xmlFile, File destDir,                          File stylesheet)         throws BuildException", "signatureAfterChange": "     private void process(File baseDir, String xmlFile, File destDir,                          File stylesheet)         throws BuildException", "diff": ["-                log(\"Transforming into \"+destDir);", "+                log(\"Processing \"+inFile+\" to \"+outFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19684693f4db45519db3be0bc0b3117b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "1c4bde9df432fb6c2123228896f4b2f8d9029bec", "commitAfterChange": "22bdc578fccd792a5e254f068715464deef89765", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     public void setDefaultDateFormatConfig(String defaultDateFormat)", "signatureAfterChange": "     public void setDefaultDateFormatConfig(String defaultDateFormat)", "diff": ["-        this.defaultDateFormatConfig = defaultDateFormat;", "-        configurationHasBeenSet();", "+        if (defaultDateFormat != null && !defaultDateFormat.equals(\"\"))", "+        {", "+            this.defaultDateFormatConfig = defaultDateFormat;", "+            configurationHasBeenSet();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6d0cf46d0d0b10d488851037f107ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarUtils.java", "commitBeforeChange": "ca86f16776d3ac0f57df0c8a2cde930ea1042b25", "commitAfterChange": "73d3298e62a626fe485cdff4909502598f44f765", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public static int formatNameBytes(String name, byte[] buf, final int offset,                                       final int length,                                       final ZipEncoding encoding)         throws IOException", "signatureAfterChange": "     public static int formatNameBytes(String name, byte[] buf, final int offset,                                       final int length,                                       final ZipEncoding encoding)         throws IOException", "diff": ["-        final int limit = b.limit();", "+        final int limit = b.limit() - b.position();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aabe08b491d5a0a02a3d6fc4c8d825e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "b50aeba8b7f159749b89769c97d559b9e4e990af", "commitAfterChange": "e3dd337f59b2ee14ac818fdb89e2229e1b3922f5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private static void runBuild()", "diff": ["-", "+\tproject.setUserProperty( \"ant.file\" , buildFile.getAbsolutePath() );", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1afaf18b310f24744cd228ef74470082", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "6d0c86e0826af530b1c1289fe249449abc591694", "commitAfterChange": "bc4dee0c5c9dfaddb36f9aa55298d015cfb0155e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath)         throws IOException", "signatureAfterChange": "      protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified)         throws IOException", "diff": ["-    protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath)", "+    protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,", "+                           long lastModified)", "+        ze.setTime(lastModified);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b0b4f630d8018cfcd44b4dd7c948746", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxInputStream.java", "commitBeforeChange": "ef0075ae4c90f109e13cd41c1287bf76e971bfc8", "commitAfterChange": "539d2cdb764e134a6d74ee8b2b50e3d7aba1e882", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-        project.demuxInput(buffer, 0, 1);", "+        if (project.demuxInput(buffer, 0, 1) == -1) {", "+            return -1;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b6065f0bf623d272baaffd609907f77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/DefaultLogger.java", "commitBeforeChange": "d95bfb6e605b1eefc16889b9dfdf081072c82e51", "commitAfterChange": "a3a3b03fb1464ce1c026671dd8456402263b73f7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void reportException(Throwable t)", "signatureAfterChange": "     public void reportException(Throwable t)", "diff": ["-            if (cause != null) {", "+            if (!cause.getMessage().equals(t.getMessage())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bab29e6c714924e84051cace60f508b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "e362b3b1fc28b4d9b2965708b5d5e457f21b0c9f", "commitAfterChange": "c13dba6d524fe74b1518e3442429ba6e97592edd", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     private boolean isMorePowerfulThanExcludes(String name,                                                String includepattern)", "signatureAfterChange": "     private boolean isMorePowerfulThanExcludes(String name,                                                String includepattern)", "diff": ["-        String soughtexclude = name + SelectorUtils.DEEP_LEAVES_MATCH;", "+        final String soughtexclude =", "+            name + File.separatorChar + SelectorUtils.DEEP_TREE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cfd534d41633373b7a5081a38954d53", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "12e9d5f0d34a161cd162b3a99d8e6eb1799267bf", "commitAfterChange": "46c940785aaa80d86df0bd49cd11bd2035d557bf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "signatureAfterChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "diff": ["+        if (!w.isEnabled(ue)) {", "+            return null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dd2855bff75f7c3c42db79b57524704", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "8e8cf291a5c2a1a320cb8e00ec4dc979f01d9038", "commitAfterChange": "d8bff4d35a6dc5fed4a19e92fdfc1e7b3e4ddadf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void run(CommandlineJava command) throws BuildException", "signatureAfterChange": "     private void run(CommandlineJava command) throws BuildException", "diff": ["+        exe.setSystemProperties(command.getSystemProperties());", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f0b5b8cfccae4f75b51f9a592382cf3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DateSelector.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-        buf.append(\"compare: \");", "+        buf.append(\" compare: \");", "+        buf.append(\" granularity: \");", "+        buf.append(granularity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb47604ab6cf09ba4d5a02796aef6b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "a4f5be6a2dc3bafa0583650d622134ba51f851bf", "commitAfterChange": "ea60c3f74976bc45e1c74d4a3f0d6792e8376075", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void expectLogContaining(String target, String log)", "signatureAfterChange": "     protected void expectLogContaining(String target, String log)", "diff": ["-        assertTrue(\"expecting log to contain \\\"\"+log+\"\\\"\", ", "+        assertTrue(\"expecting log to contain \\\"\"+log+\"\\\" log was \\\"\"", "+                   + realLog + \"\\\"\", "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20cf33904b4ee6ff7a67a537d62abe88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "9d42c87a1a496e8cf4a93458d94c239d83fc84af", "commitAfterChange": "370ac32906a2af20459706db9e6e1e0888a9483f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "     protected boolean isValidOs()", "signatureAfterChange": "     protected boolean isValidOs()", "diff": ["-        // test if os match", "+        //hand osfamily off to Os class, if set", "+        if(osFamily!=null && !Os.isOs(osFamily,null,null,null)) {", "+            return false;", "+        }", "+        //the Exec OS check is different from Os.isOs(), which", "+        //probes for a specific OS. Instead it searches the os field", "+        //for the current os.name", "-                + \" was not found in the specified list of valid OSes: \" + os,", "-                Project.MSG_VERBOSE);", "+                    + \" was not found in the specified list of valid OSes: \" + os,", "+                    Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20efaad40c4339ec7900c4d5a1222842", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static void printTargets(Project project, boolean printSubTargets)", "signatureAfterChange": "     private static void printTargets(Project project, boolean printSubTargets)", "diff": ["-", "+        //if there were no main targets, we list all subtargets", "+        //as it means nothing has a description", "+        if(topNames.size()==0) {", "+            printSubTargets=true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21354b76fa38efe161600af27c74e084", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "d64034d24ea4532e39f7c12df6c35fe9d5dc5fcb", "commitAfterChange": "4e347a681e78a2c860e581608b0c6b0018ba3d2f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkConfiguration() throws BuildException", "diff": ["-        if (baseDir == null) {", "-            throw new BuildException(\"basedir attribute must be set!\", getLocation());", "+        if (baseDir == null && filesets.size() == 0) {", "+            throw new BuildException(\"basedir attribute or at least one \"", "+                                     + \"nested filest is required!\", ", "+                                     getLocation());", "-        if (!baseDir.exists()) {", "+        if (baseDir != null && !baseDir.exists()) {", "-            throw new BuildException(\"cabfile attribute must be set!\" , getLocation());", "+            throw new BuildException(\"cabfile attribute must be set!\",", "+                                     getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "214de910b1a242d0d013030871858b9c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/PrefixLines.java", "commitBeforeChange": "3d74eb98cb373f8cd12e90273ae290fa541b0f82", "commitAfterChange": "4ff6d329e5e5587a3fdc1ec98eb62713b996beb4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public final int read() throws IOException", "signatureAfterChange": "      public final int read() throws IOException", "diff": ["+        if (queuedData != null && queuedData.length() == 0) {", "+            queuedData = null;", "+        }", "+", "+            ch = queuedData.charAt(0);", "+            queuedData = queuedData.substring(1);", "-            } else {", "-                ch = queuedData.charAt(0);", "-                queuedData = queuedData.substring(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224725c51737483700e82eee5becd9aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "9aa711ca63ee79293281dce79933672280519137", "commitAfterChange": "ecb175b0a86f1bc000d667b5c4c34af6db6f7105", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     private boolean delete(File f)", "signatureAfterChange": "     private boolean delete(File f)", "diff": ["-                    log(\"Failed to delete \" + f + \", calling deleteOnExit\" + f, level);", "+                    log(\"Failed to delete \" + f + \", calling deleteOnExit.\"", "+                        + \" This attempts to delete the file when the ant jvm\"", "+                        + \" has exited and might not succeed.\"", "+                        , level);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227e03dc26fff3290e736d1f7af3120a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "1c4bde9df432fb6c2123228896f4b2f8d9029bec", "commitAfterChange": "22bdc578fccd792a5e254f068715464deef89765", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void setRecentDateFormatConfig(String recentDateFormat)", "signatureAfterChange": "     public void setRecentDateFormatConfig(String recentDateFormat)", "diff": ["-        this.recentDateFormatConfig = recentDateFormat;", "-        configurationHasBeenSet();", "+        if (recentDateFormat != null && !recentDateFormat.equals(\"\"))", "+        {", "+            this.recentDateFormatConfig = recentDateFormat;", "+            configurationHasBeenSet();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23dbd78540da173b0e78704daf7120cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "7cbf740ee0a373241ba348b5b11cd45a97b3335b", "commitAfterChange": "a38273bbf4ab678873feee1d1907efde74baa016", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["+            } else if (error != null) {", "+                project.log(error.toString(), Project.MSG_ERR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23fa21c1a719d634740ca7c133338dd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "7bc745a289cf68cb2eba647bbfba9e9ec06eb771", "commitAfterChange": "6a1e5bf81d8551496caae2d0a90a40c339752681", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "      private int postProcess(File file, String fixData) throws IOException", "signatureAfterChange": "      private int postProcess(File file, String fixData) throws IOException", "diff": ["-                FileUtils.safeReadFully(new InputStreamReader(fin, enc));", "+                fixLineFeeds(FileUtils", "+                             .safeReadFully(new InputStreamReader(fin, enc)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2414c9a36d1dab6125acc85d78e06d8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "12e9d5f0d34a161cd162b3a99d8e6eb1799267bf", "commitAfterChange": "46c940785aaa80d86df0bd49cd11bd2035d557bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public synchronized void setAttribute(String name, String value)", "signatureAfterChange": "     public synchronized void setAttribute(String name, String value)", "diff": ["+        if (name.indexOf(':') != -1) {", "+            namespacedAttribute = true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26247690b445a0586e777f7124e9b43e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Echo.java", "commitBeforeChange": "4a7b9de346e3b0e98c952fc981eff871527ffead", "commitAfterChange": "4e7f82aede337093ce7bf8bfe03f930500e22551", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            FileWriter out = null;", "+            Writer out = null;", "-                out = new FileWriter(file.getAbsolutePath(), append);", "+                String filename = file.getAbsolutePath();", "+                if(encoding==null || encoding.length()==0) {", "+                    out = new FileWriter(filename, append);", "+                } else {", "+                    out = new BufferedWriter(", "+                            new OutputStreamWriter(", "+                                new FileOutputStream(filename, append),encoding));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a9d73a201adc2ae71adc14fdbe4695", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "5a45e0117fd3b5b69d7f50678ea82c547d24f8e6", "commitAfterChange": "71333195c9d57d80d1a44cd8362a641c62d5e214", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testSetFollowLinks()", "signatureAfterChange": "      public void testSetFollowLinks()", "diff": ["+            File linkFile = new File(System.getProperty(\"root\"), \"src/main/org/apache/tools/ThisIsALink\");", "-                    \"ln\", \"-s\", \"ant\", \"src/main/org/apache/tools/ThisIsALink\"", "+                    \"ln\", \"-s\", \"ant\", linkFile.getAbsolutePath()", "-                File dir = new File(\"src/main/org/apache/tools\");", "+                File dir = new File(System.getProperty(\"root\"), \"src/main/org/apache/tools\");", "-                File f = new File(\"src/main/org/apache/tools/ThisIsALink\");", "-                if (!f.delete()) {", "-                    throw new RuntimeException(\"Failed to delete \" + f);", "+                if (!linkFile.delete()) {", "+                    throw new RuntimeException(\"Failed to delete \" + linkFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2729241f90c416a07ae3b35139e1f01f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "5f07fcba5784e16cac1024aeeb2b625b39a4ad81", "commitAfterChange": "2ccd335cf3ef08f0f79e5a5c9c624deae323e4a9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "      protected void addProperties(Properties props)", "signatureAfterChange": "      protected void addProperties(Properties props)", "diff": ["+", "+            if (prefix != null) {", "+                name = prefix + name;", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275c18e8f0cf7e93438ab345c3c9d0cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "7241d07c9031bb3d6a8b8a481f202ac51399934a", "commitAfterChange": "11726913314bafc8d9b68ccc7d7855f1d77a15b3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+", "+        // clean up destDir again - so this instance can be used a second", "+        // time without throwing an exception", "+        if (destFile != null) {", "+            destDir = null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27877be8ae9ad1c46031afab436cb32d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "39939945cc845a577904db8abfd8e5e0d9f20a03", "commitAfterChange": "4a288273ac68ec22a390ef317d6a2b4e7fe5c4f0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void createParents(FTPClient ftp, String filename)          throws IOException, BuildException", "signatureAfterChange": "     protected void createParents(FTPClient ftp, String filename)          throws IOException, BuildException", "diff": ["-                if (!ftp.changeWorkingDirectory(parent)) {", "+                if (!ftp.changeWorkingDirectory(resolveFile(parent))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2833f654162a0c2b136273dc286c5b35", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "b264711b7e26138539af75cf2a01b6413b5a4fcd", "commitAfterChange": "72939923a1fbdb0b6b397d68db9e78ec2ac64150", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "             public static int toOperation(String oper)", "signatureAfterChange": "             public static int toOperation(String oper)", "diff": ["+                } else if (\"del\".equals(oper)) {", "+                    return DELETE_OPER;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285939f7ad06aefaf81ab58e88a094e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "b35a59d1164b166bf1c0841f776cbc8432a6fb64", "commitAfterChange": "47fda4e266b13c57fe161e39c87f21096de69e7c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["+            if (isStartTLSEnabled()) {", "+                props.put(\"mail.smtp.starttls.enable\", \"true\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293cdf68e66e6727003a93460d266f69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SQLExecTest.java", "commitBeforeChange": "3b604c9b6ec8170bc60cb987b220c8c30076948b", "commitAfterChange": "23b52c4827dff5266a9dde71049f545b1912d0b4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public Logger getParentLogger() throws SQLFeatureNotSupportedException", "signatureAfterChange": "          public Logger getParentLogger()", "diff": ["-        public Logger getParentLogger() throws SQLFeatureNotSupportedException {", "-            throw new SQLFeatureNotSupportedException();", "+        public Logger getParentLogger() /*throws SQLFeatureNotSupportedException*/ {", "+            return Logger.getAnonymousLogger();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2976b2193cdc0ce81c7cd7c95e151d17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "5923085eb10cf3e1008bf2e40376371d117c9232", "commitAfterChange": "8736e68ea154abf817b2b71a96f26e1b10274a85", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public void waitForString(String s, Integer timeout)", "signatureAfterChange": "         public void waitForString(String s, Integer timeout)", "diff": ["+                            log(\"Read before running into timeout: \" ", "+                                + sb.toString(), Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29cc4cd25ba2cdde065d19f56fe62b83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "35e81ce1222ab648d2ff96469a540a0731d01bc5", "commitAfterChange": "b13256ba3a995749bddc7ecff25f146daa0c3c22", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public void addText(String sql)", "signatureAfterChange": "         public void addText(String sql)", "diff": ["-            this.tSqlCommand += sql;", "+            if (sql != null) {", "+                if (getExpandProperties()) {", "+                    sql = getProject().replaceProperties(sql);", "+                }", "+                this.tSqlCommand += sql;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1ce73078ab52a0935aa627069e97f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/depend/AbstractAnalyzer.java", "commitBeforeChange": "70ff2fc79538ea4046526fe4fcd0deda94817fc6", "commitAfterChange": "bd737cd1a20a4619a1705fc7c055cdf64f1eaf92", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Enumeration getFileDependencies()          throws UnsupportedOperationException", "signatureAfterChange": "     public Enumeration getFileDependencies()", "diff": ["-    public Enumeration getFileDependencies()", "-         throws UnsupportedOperationException {", "+    public Enumeration getFileDependencies() {", "-            throw new UnsupportedOperationException();", "+            throw new RuntimeException(\"File dependencies are not supported \" ", "+                + \"by this analyzer\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3b82c548f535fa17698dbc4fbbffce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/GenerateKey.java", "commitBeforeChange": "80a86aadd3850c2eb010a1d1796918666408954d", "commitAfterChange": "7820c64af8cfa6122b1afe00622c3118ce935a36", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public DistinguishedName createDname() throws BuildException", "signatureAfterChange": "      public DistinguishedName createDname() throws BuildException", "diff": ["-            throw new BuildException( \"DName sub-element can only be specified once.\" );", "+            throw new BuildException( \"DName sub-element can only be \"", "+                                      + \"specified once.\" );", "-            throw new BuildException( \"It is not possible to specify dname both \" +", "+            throw new BuildException( \"It is not possible to specify dname \" +", "+                                      \" both \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bafee1ba15d56eb7a2b009cb474438f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "1dc3ff85f64b99ede826fbfe4656f1a0b27bcbb5", "commitAfterChange": "3fd5393e99cef2d28ced46f804a3ae53f915bf3c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private static void printUsage()", "signatureAfterChange": "     private static void printUsage()", "diff": ["+        msg.append(\"  -nice  number          A niceness value for the main thread:\" + lSep +", "+                   \"                         1 (lowest) to 10 (highest); 5 is the default\" + lSep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bb3220883659fc16e0ff4feb9ba107f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashScreen.java", "commitBeforeChange": "db5ff685d89a551c79b81f5716df019d0332797a", "commitAfterChange": "5c24249581486d7a3ff67f965eb7b9ef3773f04d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-    public void buildFinished(BuildEvent event){actionPerformed(null);}", "+    public void buildFinished(BuildEvent event){", "+        pb.setValue(max);", "+        setVisible(false);", "+        dispose();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9b45eafe0f8aa24fccc3ea37364f5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Permissions.java", "commitBeforeChange": "1de5995d903a596006f2662beec066a51202126c", "commitAfterChange": "2ba8ddc0be9bccc241d9aef57ceaacc6b82a7b56", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void init() throws BuildException", "signatureAfterChange": "     private void init() throws BuildException", "diff": ["+        granted.add(new java.util.PropertyPermission(\"file.encoding\", \"read\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e24ac0b9dec01b5f94b2c6f3c35674e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "858507a6a5705d41d25589b2dd95c62843fd322e", "commitAfterChange": "d2cdd21fe5e70186b972633f590d96937e2f059a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private boolean handleChild(         String parentUri,         IntrospectionHelper ih,         Object parent, UnknownElement child,         RuntimeConfigurable childWrapper)", "signatureAfterChange": "     private boolean handleChild(         String parentUri,         IntrospectionHelper ih,         Object parent, UnknownElement child,         RuntimeConfigurable childWrapper)", "diff": ["+            childWrapper.maybeConfigure(getProject());", "+            creator.store();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eb8e7668d3cd7c999495fa8fac3a591", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "7486f7115da14ce6da82f5311f7aa884e818c211", "commitAfterChange": "dd4954b1b6357b3fb5473c21d703a426fec8ab87", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void catFiles(File base, String[] files)", "signatureAfterChange": "     private void catFiles(File base, String[] files)", "diff": ["-                        log(destinationFile.getName() + \": input file is \" + ", "-                            \"output file.\", Project.MSG_WARN);", "+                        throw new BuildException(\"Input file \\\"\" ", "+                            + destinationFile.getName() ", "+                            + \"\\\" is the same as the output file.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fef68522731ffe3286abba91e401f93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "2d39fb4500bf00ff8f671b77f7517ec20e5a4474", "commitAfterChange": "19d970dbd33bac4654e4d8319afe11dcb15dd708", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void add(ResourceSelector s)", "signatureAfterChange": "     public synchronized void add(ResourceSelector s)", "diff": ["+        if (s == null) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d6acaacea625e784a4846e2cee1df4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/PropertyEditor.java", "commitBeforeChange": "414e0ad17819770b1557dfd56814dd30a3e58e5c", "commitAfterChange": "7ed150619f995551640a43e74583c3eea1ac2dfc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic PropertyEditor(AppContext context)", "signatureAfterChange": " \tpublic PropertyEditor(AppContext context)", "diff": ["-        add(new JScrollPane(_container));", "+        add(_scroller = new JScrollPane(_container));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30eaa3bb4411cd057f43137d4a0302b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "2253cbd87d10662e50af9f9073ab4a433d05e5ea", "commitAfterChange": "11f76e5f8dfe27f27946c7c5644b0735704e0f54", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["-            if (parent instanceof TaskContainer) {", "-                //ProjectComponentHelper helper=ProjectComponentHelper.getProjectComponentHelper();", "-                //realChild = helper.createProjectComponent( child, getProject(), null,", "-                   //                                           child.getTag());", "+            if (!ih.supportsNestedElement(child.getTag()) ", "+                && parent instanceof TaskContainer) {", "-            if (parent instanceof TaskContainer) {", "+            if (parent instanceof TaskContainer ", "+                && realChild instanceof Task) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32308e7828ad48965dc0646312d331b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "d60b6ca1eea0a3372c99965f3c15466328659908", "commitAfterChange": "c6c232893c39257745a8f7a618bcdb5c59791cae", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void addVendorFiles(final Hashtable someEjbFiles,final String aDdPrefix)", "signatureAfterChange": "     protected void addVendorFiles(final Hashtable someEjbFiles,                                         final String aDdPrefix)", "diff": ["-     **/", "-    protected void addVendorFiles(final Hashtable someEjbFiles,final String aDdPrefix) {", "+     */", "+    protected void addVendorFiles(final Hashtable someEjbFiles,", "+                                        final String aDdPrefix) {", "-        File aJonasDD = new File(getConfig().descriptorDir,aDdPrefix + JONAS_DD);", "-        if ( aJonasDD.exists() ) {", "+        File aJonasDD", "+             = new File(getConfig().descriptorDir, aDdPrefix + JONAS_DD);", "+", "+        if (aJonasDD.exists()) {", "-            if( ! addJonasVendorFiles(someEjbFiles,aDdPrefix) ) {            ", "-               log(\"Unable to locate JOnAS deployment descriptor. It was expected to be in \"", "-                  + aJonasDD.getPath() + \". Or please use JOnAS naming convention.\",", "-                  Project.MSG_WARN);", "+            if (!addJonasVendorFiles(someEjbFiles, aDdPrefix)) {", "+                log(\"Unable to locate JOnAS deployment descriptor. It was \"", "+                     + \"expected to be in \" + aJonasDD.getPath()", "+                     + \". Alternatively, please use JOnAS naming convention.\",", "+                    Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32845424a51d300d635bc41c4e8b5368", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "047a0d5d26b7bdbb0d99a073cbad076593be853f", "commitAfterChange": "e3e9f1e819ed71162a4fefa3b15bda93e51e9381", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            \"specify the stylesheet either as a filename in style attribute or as a nested resource\";", "+            \"specify the stylesheet either as a filename in style attribute \"", "+            + \"or as a nested resource\";", "-                        log(\"DEPRECATED - the 'style' attribute should be relative to the project's\");", "+                        log(\"DEPRECATED - the 'style' attribute should be \"", "+                            + \"relative to the project's\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32cfede0302a9927efab1a5c7c5d0c44", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/repository/HttpRepository.java", "commitBeforeChange": "4d831bb7cbb2bb2839303380a28f888c587802a0", "commitAfterChange": "f630ef56ed68316b07aaa27e05cf871de1070498", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public boolean get(URL url,File destFile,boolean useTimestamp,String user,String passwd)             throws IOException", "signatureAfterChange": "     public boolean get(URL url,File destFile,boolean useTimestamp,String user,String passwd)             throws IOException", "diff": ["+        //create the destination dir", "+        destFile.getParentFile().mkdirs();", "-        getTask.setTaskName(\"dependencies\");", "+        getTask.setTaskName(owner.getTaskName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32dfbe544dd408ef21292832d63bd40a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/type/DefaultTypeManager.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public DefaultTypeManager( final DefaultTypeManager parent )", "signatureAfterChange": "      public DefaultTypeManager( final DefaultTypeManager parent )", "diff": ["+        if( m_parent != null )", "+        {", "+            m_roleManager = m_parent.m_roleManager;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32eecc8b24bf0abeb14a107c1d7c8c05", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "9174fbde3b63fde69fee83a681d22301f7aa7a02", "commitAfterChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 49, "signatureBeforeChange": "     public void setLink(String src)", "signatureAfterChange": "     public void setLink(String src)", "diff": ["-        link = src;", "+        if (!javadoc1) {", "+            createLink().setHref(src);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ef9e876cb94809f1fae55b28692bc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/ProjectNavigator.java", "commitBeforeChange": "fd1d5f90f45c12539eb883a525c1adc46edb0cbd", "commitAfterChange": "29cc4173599c1773da1f9ff68d80c53aeb1c4aa9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public void eventPosted(EventObject event)", "signatureAfterChange": "         public void eventPosted(EventObject event)", "diff": ["+                _tree.setSelectionModel(null);", "+                _tree.setSelectionModel(project.getTreeSelectionModel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3354af502b1acd9b3fe7cb92ba6451dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private void determineBaseDir() throws AntException", "signatureAfterChange": "     private void determineBaseDir() throws AntException", "diff": ["-        if (isDataValueSet(MagicProperties.BASEDIR)) {", "+        if (dataService.isDataValueSet(MagicProperties.BASEDIR)) {", "-                = getDataValue(MagicProperties.BASEDIR).toString();", "+                = dataService.getDataValue(MagicProperties.BASEDIR).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3451bfd4b330824c689ba28cb87cf087", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "996b7048d936be218ab22b8487b8452d3c5b0589", "commitAfterChange": "c51d1ce61f4d7469e370fb50b73176e7748d4da1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private void mainSort()", "signatureAfterChange": "      private void mainSort()", "diff": ["+        ", "+        // set last to zero in case it's never been set before", "+        // see bug#32200, initBlock is the real culprit ", "+        // setting last to -1, but not sure if this -1 is important", "+        // in normal scheme", "+        if (last < 0) {", "+            last = 0;", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3477b37e442e19ccb8d53f95d7dc78e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "0768b9b643d6d2d43505fd7783cacbae5289952b", "commitAfterChange": "393113dc694cc660bc667bdc9cf709a585bba5d7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void cleanup()", "signatureAfterChange": "     private void cleanup()", "diff": ["-        recorderEntries.clear();", "+        Hashtable entries = (Hashtable) recorderEntries.get(getProject());", "+        if (null != entries) {", "+            entries.clear();", "+            recorderEntries.remove(entries);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34ee536e8e2931f0adecb0d5dfbb3672", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/ConditionBase.java", "commitBeforeChange": "614eeba75456e54a13c54b131c37baa12d751651", "commitAfterChange": "9fb2961443b0e15a6fd0be0aceed9d78e8c9cad7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final Enumeration getConditions()", "signatureAfterChange": "     protected final Enumeration getConditions()", "diff": ["-        return new ConditionEnumeration();", "+        return conditions.elements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3502257243f9740aa7e67c46d24dee4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "fec4c1f5c6114ac3c213d904f818f2158f23b224", "commitAfterChange": "e5e10d6b06c92dda8031ce23a51fb6becc95c4e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private final void checkForUnusedSettings( final HashMap parameterMap,                                                final HashMap elementMap )         throws TaskException", "signatureAfterChange": "      private final void checkForUnusedSettings( final HashMap parameterMap,                                                final HashMap elementMap )         throws TaskException", "diff": ["-                unusedSetting( namespace, EMPTY_PARAMETERS, elements );", "+                unusedSetting( namespace, Parameters.EMPTY_PARAMETERS, elements );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "353a9055efb04bc7d397760f244f796a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Mkdir.java", "commitBeforeChange": "b9b4d060f190066ef2a8260646ee50319ccb7368", "commitAfterChange": "d99dd7ac80e616cdc67fb4f017f468d7203d633b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public void execute() throws BuildException", "signatureAfterChange": "          public void execute() throws BuildException", "diff": ["-            log(\"Warning: Specified directory is a file: \" + dir.getAbsolutePath());", "+            throw new BuildException(\"Unable to create directory as a file already exists with that name: \" + dir.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a8ece7b0aa79d50861321758f4eb41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "3572b96ca9382bef2069a89931185ba26626f958", "commitAfterChange": "3f37290d4ae3797033fd3dc89cada6b329753eff", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected void expectSpecificBuildException(String target, String cause, String msg)", "signatureAfterChange": "      protected void expectSpecificBuildException(String target, String cause, String msg)", "diff": ["-            if ((null != msg) && (ex.getMessage() != msg)) {", "-                fail(\"Should throw BuildException because '\" + cause + \"' with message '\" + msg + \"' (received message '\" + ex.getMessage() + \"' instead)\");", "+            if ((null != msg) && (!ex.getMessage().equals(msg))) {", "+                fail(\"Should throw BuildException because '\" + cause + \"' with message '\" + msg + \"' (actual message '\" + ex.getMessage() + \"' instead)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376bb1e140ca74755697475bef49dfa4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/War.java", "commitBeforeChange": "4f27ced09d6cbfcc5ac4310c7068fdf51fc20b8f", "commitAfterChange": "14f760492cdf18560bccf1b7afcf8ae052228237", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-        if(addedWebXmlFile==null) {", "-            log(\"No WEB-INF/web.xml file was added.\\n\"", "-                    +\"This WAR file is only valid on Java EE 5+ runtimes\\n\"", "-                    +\"and web servers that support v2.5 Web Applications\");", "+        if(addedWebXmlFile==null && needxmlfile && !isInUpdateMode()) {", "+            throw new BuildException(\"No WEB-INF/web.xml file was added.\\n\"", "+                    +\"If this is your intent, set needxml='false' \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3828b09fc2a30726a4f387972b964077", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Workspace createWorkspace( final Parameters parameters )         throws Exception", "signatureAfterChange": "     public Workspace createWorkspace( final Parameters parameters )         throws Exception", "diff": ["+        // TODO - don't do this; need some way to pass separate sets of defines and config", "+        // to the workspace", "+        parameters.setParameter( MYRMIDON_HOME, m_parameters.getParameter( MYRMIDON_HOME ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b5a1113bd83fd1b2fe7ade0e0b45e89", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/NetCommand.java", "commitBeforeChange": "6f50296c910f579f6b9191a372e827842320cbb3", "commitAfterChange": "7609ac77647b4818b85714ad59b60dd59780ba5a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void prepareExecutor()", "signatureAfterChange": "     protected void prepareExecutor()", "diff": ["+        if (directory != null) {", "+            dir=directory;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8f58a0b976d0e136fa174ffabc409c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/ant1compat/org/apache/tools/ant/Task.java", "commitBeforeChange": "83061b17b0a39cc1bbf9642469a6ec58bc56dbef", "commitAfterChange": "a08711cd91e80ad69a52d6dc84deca1230e6ad01", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void contextualize( TaskContext context )         throws TaskException", "signatureAfterChange": "     public void contextualize( TaskContext context )         throws TaskException", "diff": ["-            (Ant1CompatProject)context.getProperty( ANT1_PROJECT_PROP );", "+            (Ant1CompatProject)context.getProperty( Ant1CompatProject.ANT1_PROJECT_PROP );", "-            m_context.setProperty( ANT1_PROJECT_PROP, project );", "+            m_context.setProperty( Ant1CompatProject.ANT1_PROJECT_PROP, project );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d6b968be586545c5d46620b0e2d8565", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "cbd20a77eba224b21654251583971e054729f006", "commitAfterChange": "752d64fa43db2172327771ba4d36bee3f2d3b49a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void writeCentralDirectoryEnd() throws IOException", "signatureAfterChange": "     protected void writeCentralDirectoryEnd() throws IOException", "diff": ["-        byte[] data = getBytes(comment);", "-        writeOut(ZipShort.getBytes(data.length));", "-        writeOut(data);", "+        ByteBuffer data = this.zipEncoding.encode(comment);", "+        writeOut(ZipShort.getBytes(data.limit()));", "+        writeOut(data.array(), data.arrayOffset(), data.limit());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dae47d00a0701e791c3639b02b8f878", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "e92225b1aed76e8509efbb58e0b2ddf91a0cef64", "commitAfterChange": "00f96abeb0f095d484796ca6eee9f2494a72a885", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static String[] getProcEnvCommand()", "diff": ["-                float version = Float.parseFloat(System.getProperty(\"os.version\"));", "-                if (version >= 10.0) {", "+                String version = System.getProperty(\"os.version\");", "+                int majorVersion = ", "+                    Integer.parseInt(version.substring(0, version.indexOf('.')));", "+", "+                if (majorVersion >= 10) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2973ca7a721076d8dd8a7d5446aa81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "54550bf3174a50792fcea4b5b1b780989e77f4f2", "commitAfterChange": "53775a646ab539120cd93d3e3fe0555bc95952e6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected boolean isValidOs()", "signatureAfterChange": "     protected boolean isValidOs()", "diff": ["-        log(\"Myos = \" + myos, Project.MSG_VERBOSE);", "+        log(\"Current OS is \" + myos, Project.MSG_VERBOSE);", "-            log(\"Not found in \" + os, Project.MSG_VERBOSE);", "+            log(\"This OS, \" + myos + \" was not found in the specified list of valid OSes: \" + os, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3efd39f19722dcee5f5c4ed4028a2100", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DateSelector.java", "commitBeforeChange": "8ec6497d89bb1cc76c15e2f911a2ded3f8c5fbbc", "commitAfterChange": "e33f1d105f6988df483bc075a630c6aa7a3b536a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public long getMillis()", "signatureAfterChange": "     public long getMillis()", "diff": ["+        if (dateTime != null) {", "+            validate();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f2320751fad8f345e589044583585a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "6ffa10f973a6f54e68480cacb3eccfa2b714d682", "commitAfterChange": "5826ef1968958b0862e266b27a0af5416aaf761b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+            boolean systemFirst = false;", "+            String bscp = project.getProperty(\"build.sysclasspath\");", "+            if (bscp != null && bscp.equals(\"only\")) {", "+                systemFirst = true;", "+            }", "-                al = new AntClassLoader(project, classpath, false);", "+                al = new AntClassLoader(project, classpath, systemFirst);", "-                al = new AntClassLoader(project, Path.systemClasspath, false);", "+                al = new AntClassLoader(project, Path.systemClasspath, systemFirst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402e2481e1bdf459fbbfecd7207a7b72", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void loadResources( final ZipFile zipFile, final String location, final URL url )         throws DeploymentException", "signatureAfterChange": "      protected void loadResources( final ZipFile zipFile, final String location, final URL url )         throws DeploymentException", "diff": ["-        final Configuration taskdefs = loadConfiguration( zipFile, TSKDEF_FILE );", "+        final Configuration taskdefs = DeployerUtil.loadConfiguration( zipFile, TSKDEF_FILE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "413487805b5f4dfdd6a5797142580ac9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "e88e9617e2b78e53f0b9d650379fc94255f5fa16", "commitAfterChange": "7241d07c9031bb3d6a8b8a481f202ac51399934a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void maybeConfigure() throws BuildException", "signatureAfterChange": "      public void maybeConfigure() throws BuildException", "diff": ["-                                     \" class definitions\", location);", "+                                     \" class definitions.  Common solutions are: 1\"+", "+                                     \" execute bin/bootstrap. 2 use taskdef to declare\"+", "+                                     \" your task. 3 add the task to defaults.properties.\"", "+                                     , location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "416c420845170eac9c07d971dcd05de4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "26f6bfe2be0861267eca5624537b48daa7574dd6", "commitAfterChange": "8701272b2418d74536d09b289f118d1833d42217", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private ClassLoader createLoader()", "signatureAfterChange": "     protected ClassLoader createLoader()", "diff": ["-    private ClassLoader createLoader() {", "+    protected ClassLoader createLoader() {", "+        if (internalClassLoader != null) {", "+            return internalClassLoader;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41ab8730941fb8fc168d39856bca43bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "5e01ac3c135e9e7f675ca6dcc66abe9e0d0d6005", "commitAfterChange": "eb81bd4f4ea8ca269b8ba496e9b9a9a15b92ce2d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private String getJavaExecutableName()", "signatureAfterChange": "      private String getJavaExecutableName()", "diff": ["-            return \"java\";", "+            return \"java\" + extension;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41bc868041b5c2305660bd1e3c0218e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "b102187280a9e60f3937705e4e6afaf7bf45f432", "commitAfterChange": "f97926a108c1f7e01237cd5139348480b2b68603", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private void printValue(ResultSet rs, int col, PrintStream out)             throws SQLException", "signatureAfterChange": "      private void printValue(ResultSet rs, int col, PrintStream out)             throws SQLException", "diff": ["-            out.print(rs.getString(col));", "+            out.print(maybeQuote(rs.getString(col)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "422bb153673b3b2bb1b17d98c54cbf76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "771dd677203f6aea1bd040f604f3dac9e90a198b", "commitAfterChange": "14b1d186211e884453211229f2d46fc34d9be0ac", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void touch() throws BuildException", "signatureAfterChange": "     protected void touch() throws BuildException", "diff": ["+        if (resources == null) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4278e107e835d3e5dd7e9071542943b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setDefaultOutFile(boolean value)", "signatureAfterChange": "      public void setMaxmemory(String max)", "diff": ["-", "-    public void setDefaultOutFile(boolean value) {", "-        defaultOutfile = value;", "+    public void setMaxmemory(String max) {", "+        if (Project.getJavaVersion().startsWith(\"1.1\")) {", "+            createJvmarg().setValue(\"-mx\"+max);", "+        } else {", "+            createJvmarg().setValue(\"-Xmx\"+max);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43a62b50d500927f89f24c19b94a8f82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicTOPLinkDeploymentTool.java", "commitBeforeChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "commitAfterChange": "24eb5693d6b7363262ea941cac63d15230aa1aab", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected DescriptorHandler getDescriptorHandler(File srcDir)", "signatureAfterChange": "      protected DescriptorHandler getDescriptorHandler(File srcDir)", "diff": ["-            handler.registerDTD(\"-//The Object People, Inc.//DTD TOPLink for WebLogic CMP 2.5.1//EN\",", "-                                toplinkDTD);", "+            handler.registerDTD(\"-//The Object People, Inc.//\"", "+                + \"DTD TOPLink for WebLogic CMP 2.5.1//EN\", toplinkDTD);", "-            handler.registerDTD(\"-//The Object People, Inc.//DTD TOPLink for WebLogic CMP 2.5.1//EN\",", "-                                TL_DTD_LOC);", "+            handler.registerDTD(\"-//The Object People, Inc.//\"", "+                + \"DTD TOPLink for WebLogic CMP 2.5.1//EN\", TL_DTD_LOC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ada661c400aba7da34931e764950ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java", "commitBeforeChange": "e6041976b75330a9252776c9e54eabf03d959103", "commitAfterChange": "1d71f55f68c7d6810bbd1feaa7ed6ca0c2afaefb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void getFile(ChannelSftp channel,                          ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "signatureAfterChange": "      private void getFile(ChannelSftp channel,                          ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "diff": ["-            int i = 0;", "-            if ((i = path.lastIndexOf(File.pathSeparator)) != -1) {", "+            int i = path.lastIndexOf(File.pathSeparator);", "+            if (i != -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4434259b5bf4e4883bce48e996ffa711", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/MailLogger.java", "commitBeforeChange": "b35a59d1164b166bf1c0841f776cbc8432a6fb64", "commitAfterChange": "47fda4e266b13c57fe161e39c87f21096de69e7c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private void sendMimeMail(Project project, Values values, String message)", "signatureAfterChange": "     private void sendMimeMail(Project project, Values values, String message)", "diff": ["+        mailer.setEnableStartTLS(values.ssl());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44361b866e2e1c5699bce70459d4eb08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java", "commitBeforeChange": "e7dd85e3dc092435086aca7fcc8aaa000d41496a", "commitAfterChange": "39a8bb4be6e40dc4f9b1a72e282da8b4b1a33fcb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void addTestSuite(Element root, Element testsuite)", "signatureAfterChange": "     protected void addTestSuite(Element root, Element testsuite)", "diff": ["+        copy.setAttribute(ATTR_ID, Integer.toString(generatedId));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "449bb3351084484efe26d16b4cc0d14f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "a4e5c13b86391f9b7ad23e326fe3d2bb66a16cc7", "commitAfterChange": "430b0251e54d02957b2636927d04a79a02c83ddb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void removeAllElements()", "signatureAfterChange": "      public synchronized void removeAllElements()", "diff": ["-    public void removeAllElements() {", "-        clear();", "+    public synchronized void removeAllElements() {", "+        set.clear();", "+        super.removeAllElements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44aee5d8ebbd003dbd7d9e7aa642e3c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "b14e61f604f088f5522e8caa9c396da71e7b775e", "commitAfterChange": "d2e06a2ad8f64fddc044e190b0092eb0dae5402d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     protected String getVersionDateLabel()", "signatureAfterChange": "     protected String getVersionDateLabel()", "diff": ["-            if (!label.equals(\"\") && label != null) {", "+            if (label != null && !label.equals(\"\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44e11aa1832bc5c4cf8313f11da92c85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL.java", "commitBeforeChange": "e7bcfc18b72a8ab9ce82137eeb5bcf92f58466cd", "commitAfterChange": "d939c519a139776320be98b624e1002f42123e4c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        // Use the same comment for all labels", "-        // Not required", "+        commandLine.createArgument().setValue(\"-C\"+getComment());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c47586ce86330e27851679560ac32e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "e04ff4d52c085936aae51afe2bc9a4db7ab18dde", "commitAfterChange": "8ebe808f72152ef41370bcfd89c7cd0c369db2f0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected Enumeration findResources(String name) throws IOException", "signatureAfterChange": "     protected Enumeration findResources(String name,                                                  boolean parentHasBeenSearched)         throws IOException", "diff": ["+     */", "+    protected Enumeration/*<URL>*/ findResources(String name,", "+                                                 boolean parentHasBeenSearched)", "+        throws IOException {", "-        if (parent != null && parent != getParent()) {", "+        if (parent != null && (!parentHasBeenSearched || parent != getParent())) {", "-            // Note: could cause overlaps in case ClassLoader.this.parent has matches.", "+            // Note: could cause overlaps in case", "+            // ClassLoader.this.parent has matches and", "+            // parentHasBeenSearched is true", "-            // ClassLoader.this.parent is already delegated to from", "+            // ClassLoader.this.parent is already delegated to for example from"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45f8a8b37ec391ff6f80f9e3b1f3acf9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "8d66f263f5f40ed0a8fce0af2583ebe0b01354ab", "commitAfterChange": "8c8d8c5f27e49e1fc7a40cc29a1293b7e9344107", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (dir == null) {", "+            if ( (dir == null) && (inheritAll == true) )", "+                dir = project.getBaseDir();", "+", "+            if (dir != null) {", "+                newProject.setBaseDir(dir);", "+                newProject.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "+            } else {", "-            newProject.setBaseDir(dir);", "-            newProject.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "-            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4662f074e8b85f97a8c3c906c02d62d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean checkClass(String classname)", "signatureAfterChange": "     private boolean checkClass(String classname)", "diff": ["-                loader = new AntClassLoader(null, getProject(), ", "-                    classpath, false);", "+                loader = new AntClassLoader(null, getProject(), classpath, ", "+                                            false);", "-                        loader.findClass(classname);", "+                        requiredClass = loader.findClass(classname);", "-                        // class found but restricted name; this is actually", "-                        // the case we're looking for, so catch the exception", "-                        // and return", "+                        // class found but restricted name; this is", "+                        // actually the case we're looking for in JDK 1.3+,", "+                        // so catch the exception and return", "+                } else {", "+                    return false;", "-                return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a0a8dec5288fbe598c8a0c540f6c92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ReaderInputStream.java", "commitBeforeChange": "9e55ff45c5ad41bdb9923789a94089c3b109551e", "commitAfterChange": "02139b25d077bb847fa6b0bc5308bd6db25e5ffe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public synchronized int read(byte[] b, int off, int len)         throws IOException", "signatureAfterChange": "     public synchronized int read(byte[] b, int off, int len)         throws IOException", "diff": ["-", "+        if (len == 0) {", "+            return 0;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480401c5848cc2f8cec053d27b9070fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java", "commitBeforeChange": "51971d6330cc1a1d2d7515887dc55cb120395cd5", "commitAfterChange": "791824d675d61bac8228619a1e210213919f12bf", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         public static void main(String[] args)", "signatureAfterChange": "         public static void main(String[] args)", "diff": ["+                t.setName(\"PipeEntryPoint \" + args[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48238a3986a9ddae38f86b203f36bcb5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/PropertyDump.java", "commitBeforeChange": "b370706c7b6ef71f13e9ba7ce80d7079926815ad", "commitAfterChange": "aa850423a9d0ee42a00aa5ee1b23e4ad8c10390d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+", "+            //Check to see if property starts with specified prefix", "+            //and if it doesn't then skip property", "+            if( null != m_prefix && !key.startsWith( m_prefix ) )", "+            {", "+                continue;", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f88f9f4f66291fe5d52925e2597f8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "1cab901b51468635a71d7bb6752766436f68bf1d", "commitAfterChange": "067838cf393bae6652b9e896e1a2091eba0f6fba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected String getIncludeDefaultReferencesParameter()", "signatureAfterChange": "     protected String getIncludeDefaultReferencesParameter()", "diff": ["-        return \"/nostdlib\" + (includeDefaultReferences ? \"-\" : \"+\");", "+        if(standardLib==null) {", "+            return \"/nostdlib\" + (includeDefaultReferences ? \"-\" : \"+\");", "+        } else {", "+            return null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49dfc8385c91b393600fd7c67a129aba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "c16e1955f177db572f1fb7bc04582462b4ea6870", "commitAfterChange": "58968aaa63891f65d5a9a7197310471fbc21f4e1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (outputFile != null) {", "-            cmdl.createArgument().setValue(\"-\" + OUTPUT_FILE + \":\"", "-                                           + outputFile.replace('\\\\', '/'));", "-        }", "-", "+            // convert backslashes to slashes, otherwise jjtree will", "+            // put this as comments and this seems to confuse javacc", "+            cmdl.createArgument().setValue(\"-OUTPUT_DIRECTORY:\"", "+                                           + getDefaultOutputDirectory());", "+", "+", "+        if (outputFile != null) {", "+            cmdl.createArgument().setValue(\"-\" + OUTPUT_FILE + \":\"", "+                                           + outputFile.replace('\\\\', '/'));", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a1a2774f743dc6b2c17fa253e028650", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "a41c55cd1af2ca412cb61ee6c81a7a93c9ab8a2d", "commitAfterChange": "d2d5078dc7b94ec29512c2609322281dbc983539", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected AbstractFileSet(AbstractFileSet fileset)", "signatureAfterChange": "      protected AbstractFileSet(AbstractFileSet fileset)", "diff": ["-        setProject(getProject());", "+        setProject(fileset.getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa542ce5896c1a582affa73c4fcd55d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "1b414dd2d45817cba7fe6773873a0f5ff4fdfcd3", "commitAfterChange": "c58f8e6e7a80372127af34f7ef9c9bd94d9c221b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private JUnitTest createJUnitTest(String classname)", "signatureAfterChange": "     private JUnitTest createJUnitTest(String classname)", "diff": ["+        test.setFiltertrace(this.filtertrace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b13341f22138c81a55483cb39e51c4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "cc47289e1e7aeb9411a95082d2132db128dfc262", "commitAfterChange": "379895a0223302a557295f9c61e7de414104cab5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void resetDefaultExcludes()", "signatureAfterChange": "     public static void resetDefaultExcludes()", "diff": ["-        defaultExcludes = new HashSet();", "+        synchronized (defaultExcludes) {", "+            defaultExcludes.clear();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c80fc6101e1f0832fda4509607aa56f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void createProjectReference(String name, Project project)          throws ExecutionException", "signatureAfterChange": "     protected void createProjectReference(String name, Project project)          throws ExecutionException", "diff": ["+", "+       // does the frame have any overrides?", "+       Map initialProperties = (Map) overrides.get(name);", "+       if (initialProperties != null) {", "+           referencedFrame.setInitialProperties(initialProperties);", "+           overrides.remove(name);", "+       }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d33a3005f6c4035204f5574158d5f65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "a8d43912400fdf1627f23abcfb1c27879c5e8153", "commitAfterChange": "df14132289636640ade9cc52ecf8bfdc4ba52433", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix)", "diff": ["-        File borlandDD = new File(getConfig().descriptorDir,BAS_DD);", "+        File borlandDD = new File(getConfig().descriptorDir,ddPrefix + BAS_DD);", "-            ejbFiles.put(META_DIR + BAS_DD, ddPrefix + borlandDD);", "+            ejbFiles.put(META_DIR + BAS_DD,  borlandDD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e38af9ad594e94e323cb3bfa004cfff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "792a2f16f0e533be725858f848844fd51430e257", "commitAfterChange": "fa52b460c15f968c16188d6d6241627eaa68afe7", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "     public void executeTargets(Vector names) throws BuildException", "signatureAfterChange": "     public void executeTargets(Vector names) throws BuildException", "diff": ["+        setUserProperty(MagicNames.PROJECT_INVOKED_TARGETS,", "+                        CollectionUtils.flattenToString(names));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e461017ab25b474871b48172f14d83f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "7b9199aaadefdcca61d3f7c6207011214c3bcb95", "commitAfterChange": "4a8cd1490b700125218abd9d6de8e09ed3fbaa59", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        /*", "+         * In Ant 1.1, <chmod dir=\"foo\" /> means, change the permissions", "+         * of directory foo, not anything inside of it.  This is the case the", "+         * second branch of the if statement below catches for backwards", "+         * compatibility.", "+         */", "-                filesets.removeElement(defaultSet);", "+                if (defaultSetDefined && defaultSet.getDir(project) != null) {", "+                    filesets.removeElement(defaultSet);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee67643d383827c839c11df6600176a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "0a51af299e871318ffb6241565dfbf771fa503ec", "commitAfterChange": "a8b79fd3155220929b46352bf45cc5c66521a04a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["-                Object uriObj = createMethod.invoke(null, new Object[] {uri});", "+                Object uriObj = createMethod.invoke(null, new Object[] {encodeURI(uri)});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6a6137f92b39d1657e1dafd39b4dc7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/JavaEnvUtils.java", "commitBeforeChange": "1fbd2fe328a83e69ff72aa45c35414777f218279", "commitAfterChange": "c31f5ae25766b6bab90b1d0ac86eab2c7f66b804", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean isJavaVersion(String version)", "signatureAfterChange": "     public static boolean isJavaVersion(String version)", "diff": ["-        return javaVersion == version;", "+        return javaVersion.equals(version);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe44ab62b2456e6137a1871f32af8ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/Builder.java", "commitBeforeChange": "c4b235065887178f45c5b548c36ad7065b48afb4", "commitAfterChange": "fc8a1957b0e2f1143f4ed39c5df793a41bd5a2bf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private File[] getAnt1Files()", "signatureAfterChange": "     private File[] getAnt1Files()", "diff": ["+        files.remove(new File(TASKDEFS_ROOT, \"Do.java\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501507d373c4ea1671a0cee3abf82faa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "695dea41b4ec4767505615fd6b16e93934940ef6", "commitAfterChange": "0a36bf20ec54cff2f7d0bdef2f7065575875fbcb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parse(Project project, Object source)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source)             throws BuildException", "diff": ["+            Map    currentTargets = context.getCurrentTargets();", "+                context.setCurrentTargets(new HashMap());", "+                context.setCurrentTargets(currentTargets);", "+            context.setCurrentTargets(new HashMap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c95acaa5ecd01eb418e1934352783f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "fe219aa03fa9ffcfbd75b95631bca5dff4b4592c", "commitAfterChange": "9662217bcdcb51660f8fa051a66f72e0201b0cfc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean checkClass(String classname)", "signatureAfterChange": "      private boolean checkClass(String classname)", "diff": ["+            project.log(t.toString(), \"available\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51bd74dc9ea6d5949734f8bab0bf6600", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/wizard/build/ProjectSetupStep.java", "commitBeforeChange": "18184c33cff3e9a204788571fce084520f064678", "commitAfterChange": "cf483b905df8ff9f06826b8ec81c592314914e6b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void updateDisplay()", "signatureAfterChange": "     public void updateDisplay()", "diff": ["+        _fileEditor.setValue(data.getOutputFile());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52fec32c94e963bff7fba7d4f52bb013", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "a89ffe281a56c3c51e376d8927fe300423b43bc7", "commitAfterChange": "f9c551b16e64afb9541e8e5507b9ac1a8c2eb436", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "diff": ["-        if (filterSets != null && filterSets.size() > 0) {", "+        if ((filterSets != null && filterSets.size() > 0) ||", "+            (filterChains != null && filterChains.size() > 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53727b85c6bfc4b365a137523e354afe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ConditionTask.java", "commitBeforeChange": "92e78a439b4dcc2db25fdd9b7df1674b4d5a1726", "commitAfterChange": "dac8f932ac91bd42f6fec9d8e1a324897312ab42", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                + \"condition into <condition>\");", "+                + \"condition into \"", "+                + getTaskName());", "-                + \"<condition>\");", "+                + getTaskName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53fb57bdfb0ca356858c086f937f6d20", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "af97c64cb1b6bea8dd0d7aa333a51c7613cbe5e9", "commitAfterChange": "3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "                  public RootHandler(AntXmlContext context)", "signatureAfterChange": "                  public RootHandler(AntXmlContext context)", "diff": ["-            currentHandler=new MainHandler();", "+            currentHandler=ProjectHelperImpl2.mainHandler;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54106363291678ca08354b1caab8027b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "c1091535ba59978083a7fb825bf18854b71547db", "commitAfterChange": "6d13fceec8ddb1813346fcf4e3f95b9083e4fd77", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static int textCompare(Resource r1, Resource r2) throws IOException", "signatureAfterChange": "     private static int textCompare(Resource r1, Resource r2) throws IOException", "diff": ["+                    if (actual == null) {", "+                        return 1;", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54ecced5402d0e87103d865d92110ea1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/ReplaceRegExpTest.java", "commitBeforeChange": "1a5276fbb03f4b9dbeef5b758b3583913f615828", "commitAfterChange": "3b9c7267f5ba05797c7fc59e6b949ac0770f314c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public void testReplace() throws IOException", "signatureAfterChange": "          public void testReplace() throws IOException", "diff": ["-            propsFile = new FileInputStream(\"src/etc/testcases/taskdefs/optional/replaceregexp.properties\");", "+            propsFile = new FileInputStream(PROJECT_PATH + \"/replaceregexp.properties\");", "-            propsFile = new FileInputStream(\"src/etc/testcases/taskdefs/optional/test.properties\");", "+            propsFile = new FileInputStream(PROJECT_PATH + \"/test.properties\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "550d307133800de933037505d7320c3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "c5d224e2fabd860332b84182429505a5f2a2ee54", "commitAfterChange": "6f8402d926c54252e54ac79efa3f5480ab7323c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected String getReferencesParameter()", "signatureAfterChange": "     protected String getReferencesParameter()", "diff": ["-                return REFERENCE_OPTION + '\\\"' + references + '\\\"';", "+                return '\\\"' + REFERENCE_OPTION + references + '\\\"';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55fe1020a9099d558671a682f817b02b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/customizer/DynamicCustomizer.java", "commitBeforeChange": "a04027cae372928a9f757764f38c28f61e128412", "commitAfterChange": "0c852dba516bf705d62a2d53c47a7b1b1cdd5048", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public void propertyChange(PropertyChangeEvent e)", "signatureAfterChange": "         public void propertyChange(PropertyChangeEvent e)", "diff": ["-                    //firePropertyChange(", "-                    //prop.getName(), null, editor.getValue());", "+                    firePropertyChange(", "+                        _value, prop.getName(), null, editor.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5606240e232913a714dd53a45c375c89", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e9044f6278d35603a7f01f16c90e0acdf049f88b", "commitAfterChange": "f314cb489c192a122ebfb71599b988869d56a1a8", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["-                    + \" - infinite loop terminated\");", "+                    + \" with message [\" + message", "+                    + \"] - infinite loop terminated\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5610eaf5900a1363ba639676523c49fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConcatTest.java", "commitBeforeChange": "b665180a23405e512e1d3b255f9a4c80f699b619", "commitAfterChange": "9154805783f0b608a601601502809314a458f16c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void testTranscoding() throws IOException", "signatureAfterChange": "      public void testTranscoding() throws IOException", "diff": ["-        assertTrue(FILE_UTILS.contentEquals(f1, f2));", "+        assertTrue(f1.toString() + \" differs from \" + f2.toString(),", "+                FILE_UTILS.contentEquals(f1, f2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562946da274d0343a67f662a6143771f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderDelegationTest.java", "commitBeforeChange": "1fe4d2a9dedca7a5866f73378567e4d9d4ca1e63", "commitAfterChange": "44d4be1405b5aa9ee1e0eb1c346413096a5461b5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testFindIsolateResources() throws Exception", "signatureAfterChange": "      public void testFindIsolateResources() throws Exception", "diff": ["-        assertTrue(\"have a dir \" + buildTestcases, new File(buildTestcases).isDirectory());", "-        Path path = new Path(p, buildTestcases);", "+        assertTrue(\"have a dir \" + buildTestcases,", "+                   new File(buildTestcases).isDirectory());", "+        Path path = new Path(p, buildTestcases + \"/org\");", "-        URL urlFromPath = new URL(FILE_UTILS.toURI(buildTestcases) + TEST_RESOURCE);", "+        URL urlFromPath = new URL(", "+            FILE_UTILS.toURI(buildTestcases) + \"org/\" + TEST_RESOURCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a97641007357969cd90f1118bca680", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/NewElementCmd.java", "commitBeforeChange": "53ddc59eccb9ca398bcc74db1fc1577bde5b7d45", "commitAfterChange": "4c0c12c0f70aab990d7aefae3ab82d92d24c7cef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-            dlg.setList(dtde.getPossibleChildren());", "+            dlg.setLists(", "+                dtde.getPossibleChildren(ACSDocumentType.CORE_ELEMENT),", "+                dtde.getPossibleChildren(ACSDocumentType.OPTIONAL_ELEMENT) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd633acd5b4e1496542461640973e51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "c75a494bd88e6e148918337dfb68d08013d973eb", "commitAfterChange": "54166cfaf09c222a4fc9bb2abd7719c6d452921e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setName(String name)", "signatureAfterChange": "     public void setName(String name)", "diff": ["-        this.name = new StringBuffer(name);", "+        this.name = new StringBuffer(normalizeFileName(name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8a8a6a1f677878ddec7d004db65704", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "8b13ca9c93d64f32e766cbf50f74d9e90a8ce994", "commitAfterChange": "c16e1955f177db572f1fb7bc04582462b4ea6870", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "diff": ["-        FileScanner ds;", "+        DirectoryScanner ds;", "+            ds.setFollowSymlinks(fs.isFollowSymlinks());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca3eb12bea0d5545aa925242031a1ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "3c3d9033a4fa8a46e637e42234e68e046634d4b0", "commitAfterChange": "c5a6bd97758856408365e17d4625d486c9769486", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        fileCopyMap.clear();", "+        dirCopyMap.clear();", "+        completeDirMap.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cab58974c79a24c417af95eb20fb8cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "commitAfterChange": "5872737ff5d0006fffd509da87f4bc9115cb5a39", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private DefaultComponentManager createComponentManager()", "signatureAfterChange": "     private DefaultComponentManager createComponentManager()", "diff": ["+        componentManager.put( RoleManager.ROLE, m_roleManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ce9f4eec1761b8a7b3dcad14f6d319f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "commitAfterChange": "b92e6b644f97b87083602a8ce4029cce01725674", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static String rtrimWildcardTokens(String input)", "signatureAfterChange": "     public static String rtrimWildcardTokens(String input)", "diff": ["-            if (counter > 0) {", "+            if (counter > 0 && sb.charAt(sb.length() - 1) != File.separatorChar) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4bf776796e150607bf904db283e367", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "79f24fd579a41a9c6a82611e7b9210c0113187da", "commitAfterChange": "1cddc5e63805e05996e688f206169b36b4e8c9b3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public String[] list()", "signatureAfterChange": "     public String[] list()", "diff": ["-        return union == null ? new String[0] : union.list();", "+        return assertFilesystemOnly(union) == null", "+            ? new String[0] : union.list();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d73b47ce5d7d70294393ac618b0e3f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 53, "signatureBeforeChange": "      private void assertMethod(Method m, String methodName, Class methodArg,                               Object arg, Object badArg)", "signatureAfterChange": "      private void assertMethod(Method m, String methodName, Class methodArg,                               Object arg, Object badArg)", "diff": ["-            assertTrue(t instanceof junit.framework.AssertionFailedError);", "+            assertTrue(t.toString(), t instanceof AssertionError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df66c706d45ee4ce097015a107ecd3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "111d76453a147727fb73d6b2b438c82f11218c92", "commitAfterChange": "5c5b959ca73e40af4f23b845579bbb7fa5e73bb3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "diff": ["-        if (!filtering) {", "-            // ensure that parent dir of dest file exists!", "-            // not using getParentFile method to stay 1.1 compat", "-            String parentPath = destFile.getParent();", "-            if (parentPath != null) {", "-                File parent = new File(parentPath);", "-                if (!parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-            }", "-", "-            if (destFile.exists()) {", "-                if (!destFile.delete()) {", "-                    throw new BuildException(\"Unable to remove existing file \"", "-                                             + destFile);", "-                }", "-            }", "-            renamed = sourceFile.renameTo(destFile);", "-        } else {", "+        if (filterSets != null && filterSets.size() > 0) {", "+        } else {", "+            if (!filtering) {", "+                // ensure that parent dir of dest file exists!", "+                // not using getParentFile method to stay 1.1 compat", "+                String parentPath = destFile.getParent();", "+                if (parentPath != null) {", "+                    File parent = new File(parentPath);", "+                    if (!parent.exists()) {", "+                        parent.mkdirs();", "+                    }", "+                }", "+", "+                if (destFile.exists()) {", "+                    if (!destFile.delete()) {", "+                        throw new BuildException(\"Unable to remove existing file \"", "+                                                 + destFile);", "+                    }", "+                }", "+                renamed = sourceFile.renameTo(destFile);", "+            } else {", "+                renamed = false;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f55cb564ce050afc4884831bf218cd4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "9c8f401ba1b75b03f001db7415bc3cfbfd320cd9", "commitAfterChange": "5ddb0dfbd998fbfaca281f7537828e202bf02f44", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setLocation(File location)", "signatureAfterChange": "     public void setLocation(File location)", "diff": ["-        setValue(location.getAbsolutePath());", "+        if (relative) {", "+            internalSetValue(location);", "+        } else {", "+            setValue(location.getAbsolutePath());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fc96bc8477542bcbfaf6b26ed78dd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "72252a914825c9fb084ea32f3b59f32442ee47ba", "commitAfterChange": "c876b58d285c79750b3de038141449545ad2904e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void doValidate(File afile)", "signatureAfterChange": "     private void doValidate(File afile)", "diff": ["+            log(\"Caught when validating: \"+ex.toString(),Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61267f3e9da43ce5068d9cc59aea0434", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "f4aaa6b5ed8470e789534b898bfa71e3aa665e74", "commitAfterChange": "0852629ad95581dce700769d4f812b6acb1cc87d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "          private Reader getReader() throws IOException", "signatureAfterChange": "          private Reader getReader() throws IOException", "diff": ["+                log(\"Concating file \" + sourceFiles.elementAt(pos),", "+                    Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c7b552e580cd800883ef798eb1f06b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "f8b5aff8e3bc9a82b5b32aa379f704613aae0ca6", "commitAfterChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private DefaultProject buildProject( final File file,                                          final Configuration configuration )         throws Exception", "signatureAfterChange": "     private DefaultProject buildProject( final File file,                                          final Configuration configuration )         throws Exception", "diff": ["+        final String projectName = configuration.getAttribute( \"name\",", "+                                                               FileUtil.removeExtension(file.getName()) );", "+        project.setProjectName( projectName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626de24f508bce15715754da4c72cc6c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SignedSelector.java", "commitBeforeChange": "8fe43107a6d81f2e6f7239a89ee8112c5b7f6972", "commitAfterChange": "9ba8549bfd492e137014d34d7504f59bb9158742", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     public boolean isSelected(File basedir, String filename, File file)", "diff": ["+        if (file.isDirectory()) {", "+            return false; // Quick return: directories cannot be signed", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629bc199d948a8d6e32f82d834911263", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "f6a78a634593cd4660e2efa17a80f71a927df3d5", "commitAfterChange": "1d3dc3765d4efd6ae54488feab07f6a17315ebe6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void setupContextClassLoader( final File libDir )", "signatureAfterChange": "      protected void setupContextClassLoader( final File libDir )", "diff": ["-        final ClassLoader classLoader = createClassLoader( libDir );", "-        Thread.currentThread().setContextClassLoader( classLoader );", "+        setupClassLoader( libDir );", "+        Thread.currentThread().setContextClassLoader( AntLoader.getLoader() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6305ba8fbf1fce37e26e5a00a88c5522", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "1ef0cd4f53bc04d6d50f7e7191389870c962e293", "commitAfterChange": "0e46158a11af3c375fda7fd10a7e1baca429b2c7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public boolean similarDefinition(AntTypeDefinition other, Project project)", "signatureAfterChange": "     public boolean similarDefinition(AntTypeDefinition other, Project project)", "diff": ["+        if (oldLoader == newLoader) {", "+            return true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6327850da872ac44f17c7decbd74e9e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/JavacTest.java", "commitBeforeChange": "2e31f97888f11646bebb8939fed00c37c4c863e2", "commitAfterChange": "fc7e3b1fd4127d10b74c77ec3bee2573b287cffd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testForkedExecutableName()", "signatureAfterChange": "     public void testForkedExecutableName()", "diff": ["-        javac.setFork(\"true\");", "+        javac.setFork(true);", "-        javac.setFork(\"false\");", "+        javac.setFork(false);", "-        javac.setFork(myJavac);", "+        javac.setFork(true);", "+        javac.setExecutable(myJavac);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637d9446ab3f0fe08f669796383e7ec1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "7b8f2409f896ed9c2fafa21d9774747b6914466b", "commitAfterChange": "3b1908017a3c8e3c324038ad73fcee50f66a7c0a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public synchronized void add(ResourceCollection c)", "signatureAfterChange": "     public synchronized void add(ResourceCollection c)", "diff": ["+        if (c == null) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ad4166af3693033cb251f749d51719", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/service/test/InstantiatingServiceManagerTestCase.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void setUp()         throws Exception", "signatureAfterChange": "     protected void setUp()         throws Exception", "diff": ["+        m_serviceManager.contextualize( new DefaultContext() );", "-        m_serviceManager.parameterize( m_parameters );", "+        m_serviceManager.parameterize( new Parameters() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b15da455574bf16d7d460ea81617d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/code/org/apache/ant/antlib/system/Ant.java", "commitBeforeChange": "39be3a40c42a01e5afd9aac7e4835bb496659777", "commitAfterChange": "30a4d96094c650b25fa1c521619f82d4184631f8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ExecutionException", "diff": ["-", "+        setProperty(MagicProperties.BASEDIR, baseDir.getAbsolutePath());", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63eac73b2406ace0c1333ef1b7084cf3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "545a78f8259146482a038780629cafb4342b13cd", "commitAfterChange": "beb603160602909f484f3e8f0a3fa4d3892bbc87", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "          public void init(String tag, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "          public void init(String tag, AttributeList attrs) throws SAXParseException", "diff": ["+                task.setTaskType(tag);", "+                task.setTaskName(tag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66bbae13f42f2ef7730186a387fd5e3d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "9c6515959f5bf9016b0dd8c12691e1e7549b2dd0", "commitAfterChange": "9ec33bdb83b813befe01a5b8cc5054907b0b90c7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Main(String[] args) throws BuildException", "signatureAfterChange": "     protected Main(String[] args) throws BuildException", "diff": ["-                    File logFile = new File(args[i+1]);", "+                    File logFile = new File(args[i + 1]);", "-                    String msg = \"Cannot write on the specified log file. \" +", "-                        \"Make sure the path exists and you have write permissions.\";", "+                    String msg = \"Cannot write on the specified log file. \" ", "+                        + \"Make sure the path exists and you have write \" ", "+                        + \"permissions.\";", "-            } else if (arg.equals(\"-buildfile\") || arg.equals(\"-file\") || arg.equals(\"-f\")) {", "+            } else if (arg.equals(\"-buildfile\") || arg.equals(\"-file\") ", "+                       || arg.equals(\"-f\")) {", "-                    buildFile = new File(args[i+1]);", "+                    buildFile = new File(args[i + 1]);", "-                    listeners.addElement(args[i+1]);", "+                    listeners.addElement(args[i + 1]);", "-                    value = name.substring(posEq+1);", "+                    value = name.substring(posEq + 1);", "-                } else if (i < args.length-1) {", "+                } else if (i < args.length - 1) {", "-                    System.out.println(\"Only one logger class may be specified.\");", "+                    System.out.println(\"Only one logger class may \" ", "+                        + \" be specified.\");", "-                if (i < args.length-1) {", "+                if (i < args.length - 1) {", "-                    propertyFiles.addElement(args[i+1]);", "+                    propertyFiles.addElement(args[i + 1]);", "-        for (int propertyFileIndex=0;", "+        for (int propertyFileIndex = 0;", "-            String filename = (String) propertyFiles.elementAt(propertyFileIndex);", "+            String filename ", "+                = (String) propertyFiles.elementAt(propertyFileIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f2eb7b07012466d65490ea5d3d1f86", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "e64c186c50b3ef61f4fce8cbc9a9e9c169c84e19", "commitAfterChange": "d4be9171f872a91dda1f3fd2dcf9249f6ee2fa88", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void login()", "signatureAfterChange": "     private void login()", "diff": ["+       if (addCarriageReturn)", "+          telnet.sendString(\"\\n\", true);", "-       telnet.sendString(userid);", "+       telnet.sendString(userid, true);", "-       telnet.sendString(password);", "+       telnet.sendString(password, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6775862b2e26e96bfc00979a4689af59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "f9c551b16e64afb9541e8e5507b9ac1a8c2eb436", "commitAfterChange": "6a34c3f53621d4dca096b2c2a63553db239ad739", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void determineBaseDirs() throws ExecutionException", "signatureAfterChange": "     private void determineBaseDirs() throws ExecutionException", "diff": ["-                    FileUtils fileUtils = new FileUtils();", "+                    FileUtils fileUtils = FileUtils.newFileUtils();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "679fd3c69587675c6c03c44ce93f44f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "9e13d731c54340545d7e2d2c09a6be8877e17f9b", "commitAfterChange": "09e0f524e69e6ccb1fd242633fa885f54a3c3191", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private URL fileToURL()", "signatureAfterChange": "     private URL fileToURL()", "diff": ["-        try {", "+        try {", "-            }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68d7d1905ce9b16896f98435e2c7fdd5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     boolean hasPatterns()", "signatureAfterChange": "     boolean hasPatterns(Project p)", "diff": ["-    boolean hasPatterns() {", "-        return includesFileList.size() > 0 || excludesFileList.size() > 0 ", "-            || includeList.size() > 0 || excludeList.size() > 0;", "+    boolean hasPatterns(Project p) {", "+        if (isReference()) {", "+            return getRef(p).hasPatterns(p);", "+        } else {", "+            return includesFileList.size() > 0 || excludesFileList.size() > 0 ", "+                || includeList.size() > 0 || excludeList.size() > 0;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69123cb5a1ca65ae7a80ee4b3b9435f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Untar.java", "commitBeforeChange": "e7e99f061c7bf7cb73df38d26b3cff344012c5d6", "commitAfterChange": "7d174c342609636a70ce2f26fb50d8ea8077fd7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void expandStream(String name, InputStream stream, File dir)         throws IOException", "signatureAfterChange": "     private void expandStream(String name, InputStream stream, File dir)         throws IOException", "diff": ["-                throw new BuildException(\"archive is empty\");", "+                throw new BuildException(\"archive '\" + name + \"' is empty\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6929e692c8abc549a2b07285d67db9f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "de190c4094ef4f0bb42d710d95b74bcef765aadc", "commitAfterChange": "e1018ac5bacf39393c79c27d80b07e1825189867", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void start(String[] args)", "signatureAfterChange": "     private void start(String[] args)", "diff": ["-            URL toolsJarURL = getToolsJarURL();", "+            URL toolsJarURL = ClassLocator.getToolsJarURL();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b00e527fee86647e12d5e44380f84f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "80bd9c5434773c1bdefa5bc486d92da827bb3087", "commitAfterChange": "d59d8748ba75f7b8edfcf5d76b47666f6c7bbefb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()             throws BuildException", "signatureAfterChange": "     public void execute()             throws BuildException", "diff": ["-            throw new BuildException(x);", "+            throw new BuildException(\"Failed to load \"+src,x);", "-            throw new BuildException(ioe);", "+            throw new BuildException(\"Failed to load \" + src,ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b99af90449d3222905e666cc30d623", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ArchiveScanner.java", "commitBeforeChange": "57ee171b186e532d91bb93c8afdf4cae6ceacc26", "commitAfterChange": "f0c143b6e0d7bfb430b688cf3d38ea23d98acb1f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void scanme()", "signatureAfterChange": "     private void scanme()", "diff": ["+        if (!src.isExists() && !errorOnMissingArchive) {", "+            return;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0ecbdba63006dbe7e9758f5ac7c04b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "5a2fc04fee94a9c05081780a146ea421d2427455", "commitAfterChange": "0bd649e567f3b63e1ee5e2984700432026dbc34b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "diff": ["-                        doSiteCommand(ftp, \"chmod \" + chmod + \" \" + dsfiles[i]);", "+                        doSiteCommand(ftp, \"chmod \" + chmod + \" \" + resolveFile(dsfiles[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a3a477591c6192366e6ac588e8ce767", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "411d9ef9b91dd3403411dfcf117e8f7afa6031bb", "commitAfterChange": "e84526a725f856e664ff4c0b4586bb252d4fa7a0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void targetStarted(BuildEvent event)", "signatureAfterChange": "      public void targetStarted(BuildEvent event)", "diff": ["-        if (msgOutputLevel <= Project.MSG_INFO) {", "+        if (Project.MSG_INFO <= msgOutputLevel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ab35d77d861eefb6e8d67a010b8bcb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/SaveCmd.java", "commitBeforeChange": "ffa6e24ba429847c04da9162971b6203151a7ce1", "commitAfterChange": "1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SaveCmd(AppContext context)", "signatureAfterChange": "     public SaveCmd(AppContext context)", "diff": ["-        setFile(context.getProject().getFile());", "+        ACSProjectElement project = ", "+            getContext().getSelectionManager().getSelectedProject();", "+        if(project != null) {", "+            setLocation(project.getLocation());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae757c3c997402db93392a140837deb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "cf6d4fb6ccbb1a73bdfb3b7ffbb3727ce9fbe958", "commitAfterChange": "4c695bbb72867aa13029de177f468c38ab787174", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected String getReferencesParameter()", "signatureAfterChange": "     protected String getReferencesParameter()", "diff": ["-            return REFERENCE_OPTION + references;", "+            return REFERENCE_OPTION + '\\\"' + references + '\\\"';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b633211fe2cda1f2f628cca5e7bae5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "a15d6eedc866ee94cf4f47222fafee48abbecfcb", "commitAfterChange": "e9f55d77d1044dd0c21dd976b57b6787528202bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void configureTargets(Project project, Element root)         throws BuildException", "signatureAfterChange": "      private static void configureTargets(Project project, Element root)         throws BuildException", "diff": ["+            String targetId = element.getAttribute(\"id\");", "+", "+            if (targetId != null && !targetId.equals(\"\")) ", "+                project.addReference(targetId,target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b85ad1f313dad8e74479ea5877847dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "3fce5ce0142330b06cb5ad940808d4d0b42c56e2", "commitAfterChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public void setLine(String line)", "signatureAfterChange": "         public void setLine(String line)", "diff": ["+            if( line == null ) {", "+                return;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d8111fc3c09d218d5ab32639fb749b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "63f41f90c64fcf6f7d32776f74f7c2103f7e102b", "commitAfterChange": "36accb02b3ab32954df2776151ab418347542658", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     private int fork(String[] command) throws BuildException", "signatureAfterChange": "     private int fork(String[] command) throws BuildException", "diff": ["-                if (exe.killedProcess()) {", "-                    log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "-                }", "+                if (exe.killedProcess()) {", "+                    throw new BuildException(\"Timeout: killed the sub-process\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc8b4cbc7fbbb2a8634dc0397ff1463", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "dfcfadbc50ce4f303a5b199a54478be1759a0b0c", "commitAfterChange": "8a5186ec79351562317db7276289191366aef3f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "diff": ["-            buildFile = new File(buildFile.getAbsolutePath());", "+            buildFile = fu.normalize(buildFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4fa5ce874c84b34a4dc8bee6a95914", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2d9fb4c56dafa32f2e22b5996f617621103286fd", "commitAfterChange": "e8e8e10d10004b8f369fa7c52ec4755b8afacd6f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-                if ((myfile == null || !myfile.exists()) && !isCaseSensitive) {", "+                if ((myfile == null || !myfile.exists()) && !isCaseSensitive()) {", "-                        if (isCaseSensitive", "+                        if (isCaseSensitive()", "-                        } else if (!isCaseSensitive", "+                        } else if (!isCaseSensitive()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f224df82252ea30c6c78a1b24f75102", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "diff": ["-            if (bootclasspath != null) {", "+            if (bootclasspath != null && bootclasspath.size() > 0) {", "-            if (extdirs != null) {", "+            if (extdirs != null && extdirs.size() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71764091887d6615a6a09199ec928d0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/UnknownElement2.java", "commitBeforeChange": "6c7ff0147867c01316f56ede84b0d081f4199073", "commitAfterChange": "869b5253ead8123914e1b6a283187060c455377d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void maybeConfigure() throws BuildException", "signatureAfterChange": "     public void maybeConfigure() throws BuildException", "diff": ["+", "+            // For Script to work. Ugly", "+            // The reference is replaced by RuntimeConfigurable", "+            this.getOwningTarget().replaceChild(this, (Task)realThing);", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "718946d05d25a1014e0fe9a44e659b70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "5a45e0117fd3b5b69d7f50678ea82c547d24f8e6", "commitAfterChange": "71333195c9d57d80d1a44cd8362a641c62d5e214", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "       private void destroyTempFiles()", "signatureAfterChange": "       private void destroyTempFiles()", "diff": ["-        File tempFile = new File(testPropsFilePath);", "+        File tempFile = new File(System.getProperty(\"root\"), testPropsFilePath);", "-        tempFile = new File(buildPropsFilePath);", "+        tempFile = new File(System.getProperty(\"root\"), buildPropsFilePath);", "-        tempFile = new File(valueDoesNotGetOverwrittenPropsFilePath);", "+        tempFile = new File(System.getProperty(\"root\"), valueDoesNotGetOverwrittenPropsFilePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71ce568f79844c8a25be5064f28f17c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/EchoProperties.java", "commitBeforeChange": "94e4ecf005c85008dbb614975da8c50948a8c370", "commitAfterChange": "b49a9ef6f2d3b1fd599772502b76d2e4376bd660", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setPrefix(String prefix)", "signatureAfterChange": "     public void setPrefix(String prefix)", "diff": ["-        PropertySet ps = new PropertySet();", "-        ps.setProject(getProject());", "-        ps.appendPrefix(prefix);", "-        addPropertyset(ps);", "+        if (prefix != null && prefix.length() != 0) {", "+            PropertySet ps = new PropertySet();", "+            ps.setProject(getProject());", "+            ps.appendPrefix(prefix);", "+            addPropertyset(ps);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "726aa9a75d582ae75b7f0a2ba687fc78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "348ec2c27e06ed115569c70e6c2ca7bf1466ee04", "commitAfterChange": "642fd3b8cef80878ff37fe8b6a50dae5e163e3b2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public synchronized void addBuildListener(BuildListener listener)", "signatureAfterChange": "     public synchronized void addBuildListener(BuildListener listener)", "diff": ["+        // If the listeners already has this listener, do nothing", "+        if (listeners.contains(listener)) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a2af3a19af8738153ce5e7589058ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/property/ClassicPropertyResolver.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Object getPropertyValue( final String propertyName,                                        final TaskContext context )", "signatureAfterChange": "     protected Object getPropertyValue( final String propertyName,                                        final PropertyStore properties )         throws TaskException", "diff": ["-                                       final TaskContext context )", "+                                       final PropertyStore properties )", "+        throws TaskException", "-        Object propertyValue = context.getProperty( propertyName );", "-        if ( propertyValue == null )", "+        if( ! properties.isPropertySet( propertyName ) )", "-        else", "-        {", "-            return propertyValue;", "-        }", "+        return properties.getProperty( propertyName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73191ddadc59d8375571a761218fa57d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "e7e85f299e908cfbfca277f8dea203a99009bafd", "commitAfterChange": "27f9f065c82441f9e1f902ebcecb1b3249a0412e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["+        if (file.equals(tarFile)) {", "+            // If the archive is built for the first time and it is", "+            // matched by a resource collection, then it hasn't been", "+            // found in check (it hasn't been there) but will be", "+            // included now.", "+            //", "+            // for some strange reason the old code would simply skip", "+            // the entry and not fail, do the same now for backwards", "+            // compatibility reasons.  Without this, the which4j build", "+            // fails in Gump", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7350db2bbe563a8d6e677e1803c7ed7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "5c43f6c93edfa3d34075b59a4ae199eb7257dab9", "commitAfterChange": "778a6800cfdfe174d4e21108400d4827124dadac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void onRunEnded(TestRunEvent evt)", "signatureAfterChange": "      public void onRunEnded(TestRunEvent evt)", "diff": ["+        final String elapsedTime = String.valueOf(evt.getTimeStamp() - programStart);", "+        rootElement.setAttribute(\"elapsed_time\", elapsedTime);", "-        Element propsElement = doc.createElement(PROPERTIES);", "+        final Element propsElement = doc.createElement(PROPERTIES);", "-        Properties props = evt.getProperties();", "+        final Properties props = evt.getProperties();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7475fc7183641fccfb95422630f5291f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckin.java", "commitBeforeChange": "88799e0669076c9b0cc114a1e191bf3370820984", "commitAfterChange": "e612a58418f0a8880e8eeb4d82aca14d67a9b7a5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void logOperationDescription(         Folder starteamrootFolder, java.io.File targetrootFolder)", "signatureAfterChange": "     protected void logOperationDescription(         Folder starteamrootFolder, java.io.File targetrootFolder)", "diff": ["-        Folder starteamrootFolder, java.io.File targetrootFolder) ", "-    {", "+        Folder starteamrootFolder, java.io.File targetrootFolder) {", "-            +\" Checkin from\" ", "-            + (null == getRootLocalFolder() ? \" (default): \" : \": \") ", "+            + \" Checkin from\"", "+            + (null == getRootLocalFolder() ? \" (default): \" : \": \")", "-        ", "+", "-        } ", "-        else {", "+        } else {", "-            log(\"  Items will be checked in in accordance with repository status and regardless of lock status.\");", "-        } ", "-        else {", "-            log(\"  Items will be checked in regardless of repository status only if locked.\" );", "+            log(\"  Items will be checked in in accordance with repository \"", "+                + \"status and regardless of lock status.\");", "+        } else {", "+            log(\"  Items will be checked in regardless of repository status \"", "+                + \"only if locked.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74bb5b80bf232cd7939195d54443eb0d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "c8d4ba2393fab9703138171f5d63efa34cbc37e8", "commitAfterChange": "2bf9f10a860d6519b1247e6f7f5487c193c584b3", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": "           public int getAction()", "signatureAfterChange": "           public int getAction()", "diff": ["+            } else if (actionL.equals(\"rmdir\")) {", "+                return RM_DIR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b68bd41181c4f94b7eb7a85d1d6edb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "795c7c88da1e29ec6f17b63f2e4fa396b27fabda", "commitAfterChange": "602c461fed47f591c6a79feadc6edcf0c9b6b54d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-        ", "+", "-                project.fireBuildStarted();", "+", "+                if (!projectHelp) {", "+                    project.fireBuildStarted();", "+                }", "+", "+                if (projectHelp) {", "+                    printDescription(project);", "+                    printTargets(project, msgOutputLevel > Project.MSG_INFO );", "+                    return;", "+                }", "-                if (!projectHelp) {", "-                    project.executeTargets(targets);", "-                }", "+                project.executeTargets(targets);", "-            }", "-            if (projectHelp) {", "-                printDescription(project);", "-                printTargets(project);", "-            project.fireBuildFinished(error);", "+            if (!projectHelp) {", "+                project.fireBuildFinished(error);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a79b9c9ee8b8ca13889926015b0d9f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecuteJavaTest.java", "commitBeforeChange": "26f948b90b759d4d32119d74638f095d47b4f6db", "commitAfterChange": "dd455f1a0d0abbf67543009cc6bab5791a24d464", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void setUp()", "signatureAfterChange": "      protected void setUp()", "diff": ["+        project.setProperty(\"ant.home\", System.getProperty(\"ant.home\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a98f5d48465e1ab2a7b47b43981a8a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Files.java", "commitBeforeChange": "cbe9978c14108b0ce3235e6c695b21efd9c2937e", "commitAfterChange": "a738000acab66d8d7ce5cf563f6dd96d9c7024fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setRefid(Reference r) throws BuildException", "signatureAfterChange": "     public void setRefid(Reference r) throws BuildException", "diff": ["-        if (!selectors.isEmpty()) {", "+        if (hasSelectors()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5c53b1c31a0492ef9db047719ffa22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-            //XXX task.setTaskType(qname);", "+            task.setTaskType(", "+                ProjectHelper.genComponentName(task.getNamespace(), tag));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df8492781fb3edd22ecfe0e0707717b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "b51fbab47db1b7ee3178fd7da2223d71a31f517b", "commitAfterChange": "d91ef0968d3cc0e095115dfb8fcc84e9807d4caf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private DefaultComponentManager createComponentManager()", "signatureAfterChange": "     private DefaultComponentManager createComponentManager()", "diff": ["+        componentManager.put( ExtensionManager.ROLE, m_extensionManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfcff75dbac20bfe2e95577d6a12dbb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "fe219aa03fa9ffcfbd75b95631bca5dff4b4592c", "commitAfterChange": "9662217bcdcb51660f8fa051a66f72e0201b0cfc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private boolean checkFile(String file)", "signatureAfterChange": "      private boolean checkFile(String file)", "diff": ["+            project.log(e.toString(), \"available\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f204b4f9c067bbf93775844fb624dce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "5c43f6c93edfa3d34075b59a4ae199eb7257dab9", "commitAfterChange": "778a6800cfdfe174d4e21108400d4827124dadac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      protected void close()", "signatureAfterChange": "      protected void close()", "diff": ["-        DOMElementWriter domWriter = new DOMElementWriter();", "-        getWriter().println(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\");", "+        getWriter().println(\"<?xml version='1.0' encoding='UTF-8' ?>\");", "+        String now = DateUtils.format(new Date(), DateUtils.ISO8601_DATETIME_PATTERN);", "+        rootElement.setAttribute(\"snapshot_created\", now);", "+            final DOMElementWriter domWriter = new DOMElementWriter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f28d776bbffc74019760a5c877961d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "6acb5be183f9d189628089d186ede0caf887cf0c", "commitAfterChange": "50d4e58dfdadf26bd3b1749c5aefe41b457fc2bd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          private void logError(TransformerException e, String type)", "signatureAfterChange": "          private void logError(TransformerException e, String type)", "diff": ["+        if (logger == null) {", "+            return;", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f2cff5878cb327e0a14e217eb863671", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/IContract.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public void modify( Path path )             throws TaskException", "signatureAfterChange": "         public void modify( Path path )             throws TaskException", "diff": ["-                path.append( getCompileClasspath() );", "+                addCompileClasspath( path );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fbf7e93f6b0dccb1bad93a8c17a0e4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL.java", "commitBeforeChange": "c961790179cc4d88d4f87df019b13b06ca3fb40e", "commitAfterChange": "2a713cc02adc21aa5bd5189c8a2718631e6f6a88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Commandline buildCmdLine()", "signatureAfterChange": "     Commandline buildCmdLine()", "diff": ["-        if (label == \"\") {", "+        if (label.equals(\"\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b8facbc77e2aac872eff3f17924864", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "ee0fc90c1af3f49fbfc357258ccf63aafd230b10", "commitAfterChange": "27868015eb791e7c83ebc0e12f6a255575504d0e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-                    logOnFirstPass(\"Updating jar since the current jar has no manifest\",", "-                        Project.MSG_VERBOSE);", "+                    logOnFirstPass(\"Updating jar since the current jar has\"", "+                                   + \" no manifest\", Project.MSG_VERBOSE);", "-                        logOnFirstPass(\"Updating jar since jar manifest has changed\",", "-                            Project.MSG_VERBOSE);", "+                        logOnFirstPass(\"Updating jar since jar manifest has\"", "+                                       + \" changed\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814f781c25a038778e46a0d3675060c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "595802a2b86cc55157ee68629986101574cff45b", "commitAfterChange": "0df2b1de3f150d160957e8baccd0b79374c023af", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["-        if (baseDir == null & resources.size() == 0", "+        if (baseDir == null && resources.size() == 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ab630366d6eac1fb09424a5e75d245", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "1c4bde9df432fb6c2123228896f4b2f8d9029bec", "commitAfterChange": "22bdc578fccd792a5e254f068715464deef89765", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void setServerTimeZoneConfig(String serverTimeZoneId)", "signatureAfterChange": "     public void setServerTimeZoneConfig(String serverTimeZoneId)", "diff": ["-        this.serverTimeZoneConfig = serverTimeZoneId;", "-        configurationHasBeenSet();", "+        if (serverTimeZoneId != null && !serverTimeZoneId.equals(\"\"))", "+        {", "+            this.serverTimeZoneConfig = serverTimeZoneId;", "+            configurationHasBeenSet();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c6a7edd8f966da618b7f1c71c0f72f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "53bcbf1d664384fc9e7990e20ff714703394e44a", "commitAfterChange": "b47a31a21065882b7b6279ed634fc340448feeef", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private static void createAndStoreFormatter(String line)         throws BuildException", "signatureAfterChange": "     private static void createAndStoreFormatter(String line)         throws BuildException", "diff": ["+            } else {", "+                int fName = line.indexOf(IGNORED_FILE_NAME);", "+                if (fName > -1) {", "+                    fe.setExtension(line", "+                                    .substring(fName", "+                                               + IGNORED_FILE_NAME.length()));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823a7c0793a61c6cb96c28270e3d6383", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "9ca90c8d554c625344a9ce361de4eeae69e1259f", "commitAfterChange": "c7e4640df951e885a5552ee0ebc11e56e67fb003", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private UnknownElement copy(UnknownElement ue)", "signatureAfterChange": "      private UnknownElement copy(UnknownElement ue, boolean nested)", "diff": ["-    private UnknownElement copy(UnknownElement ue) {", "+    private UnknownElement copy(UnknownElement ue, boolean nested) {", "-            if (templateElement == null) {", "-                UnknownElement child = copy(unknownElement);", "+            if (templateElement == null || nested) {", "+                UnknownElement child = copy(unknownElement, nested);", "-                    UnknownElement child = copy((UnknownElement) i.next());", "+                    UnknownElement child", "+                        = copy((UnknownElement) i.next(), true);", "-                        UnknownElement child = copy((UnknownElement) i.next());", "+                        UnknownElement child", "+                            = copy((UnknownElement) i.next(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82db8a28bbe821ff09ac6751e47ef2ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/IfTask.java", "commitBeforeChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "commitAfterChange": "97ea61851cb42ba5238f59ac419066b0dfc6be00", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["+        // Evaluate the condition", "+        if( ! m_condition.evaluate( getContext() ) )", "+        {", "+            return;", "+        }", "+", "+        // TODO - don't use getService()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832a52eeee38e309320299231e4d821b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "9174fbde3b63fde69fee83a681d22301f7aa7a02", "commitAfterChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 59, "signatureBeforeChange": "     public void setDocencoding(String src)", "signatureAfterChange": "     public void setDocencoding(String enc)", "diff": ["-    public void setDocencoding(String src) {", "-        docencoding = src;", "+    }", "+    public void setDocencoding(String enc) {", "+        cmd.createArgument().setValue(\"-docencoding\");", "+        cmd.createArgument().setValue(enc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843bfb72957cc03fd105563246b8276d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/code/org/apache/ant/antlib/system/AntCall.java", "commitBeforeChange": "39be3a40c42a01e5afd9aac7e4835bb496659777", "commitAfterChange": "30a4d96094c650b25fa1c521619f82d4184631f8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ExecutionException", "diff": ["+        setProperty(MagicProperties.BASEDIR, ", "+            getContext().getBaseDir().getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8478d46f9028e88631fe234d5c412bdb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "f58d3967f08c8cc033ce0af114bb1ed87ca08664", "commitAfterChange": "7254e769ce095cc4272d5f936dd2740e09db8a9e", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        // If using an external file, write the command line options to it", "+        if (useExternalFile && javadoc4) {", "+            writeExternalArgs(toExecute);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84aa517d8a922d3f3e5dd96383b53116", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1b25a5ab7943f4210ddf2cbb62317e8ea8aa980d", "commitAfterChange": "12f19c932133ae8e0eaae97b14eb718262cb0843", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Property createProperty()", "signatureAfterChange": "      public Property createProperty()", "diff": ["-    // XXX replace with createProperty!!", "+        if (p1 == null) {", "+            reinit();", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "850dc53aef774bfb7e236c3c8bec0069", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "9cf3138baf4fb4753be4761371f93cf6b9eb46dd", "commitAfterChange": "73c26feb56ea311276aee8a60c787c82c41c11e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      public void setUp()", "diff": ["+        configureProject(\"src/etc/testcases/taskdefs/input.xml\");", "-                 \"src/etc/testcases/taskdefs/input.properties\");", "-        configureProject(\"src/etc/testcases/taskdefs/input.xml\");", "+                 getProject().resolveFile(\"input.properties\")", "+                 .getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85f13d440a3304c7a86ee2dba4d07ebf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/RenameExtensions.java", "commitBeforeChange": "8785091ee1c92874c44324f0429765539987b048", "commitAfterChange": "c9928eaad1f371f18ecae2b487a5328b315b5790", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"srcDir, fromExtension and toExtension attributes must be set!\");", "+            throw new BuildException( \"srcDir, fromExtension and toExtension \" +", "+                                      \"attributes must be set!\" );", "-            if (!fromFile.renameTo(toFile)) throw new BuildException(\"Rename from: '\" + fromFile + \"' to '\" + toFile + \"' failed.\");", "+            if (!fromFile.renameTo(toFile)) {", "+                throw new BuildException( \"Rename from: '\" + fromFile + \"' to '\" + ", "+                                          toFile + \"' failed.\" );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8613df008331fe7a69559329660454f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "80b22f776fb3d5f44c75b75399b979d298d4369f", "commitAfterChange": "51c4c2282c499b0cd2ba4eee88dce948f388e74d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public static String replaceProperties( String value, Hashtable keys )         throws BuildException", "signatureAfterChange": "     public static String replaceProperties( String value, Hashtable keys )         throws BuildException", "diff": ["-                String v=(String) keys.get( n );", "+                String v= (keys.containsKey(n)) ? (String) keys.get( n ) ", "+                    : \"${\"+n+\"}\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8689b30ba338036e75d5d9d94eedb490", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "b162d6d5c4d01c9cc0d7ae92b809b8e9ca67421d", "commitAfterChange": "ac1664c3fdae2848480acfb061ab8413daa00923", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private JUnitTest createJUnitTest(String classname)", "signatureAfterChange": "     private JUnitTest createJUnitTest(String classname)", "diff": ["+        test.setFailureProperty(failureProperty);", "+        test.setErrorProperty(errorProperty);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a4369f1a2003d531bfc6c61f987f38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCheck.java", "commitBeforeChange": "db75fcb34ed8d469fe7ff1a0e7afddf4a1d89177", "commitAfterChange": "d47dfcbc98b247c96b409f811a8a5a045e58cdc7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void doit()", "signatureAfterChange": "     private void doit()", "diff": ["-        if (result != 0) {", "+        if (Execute.isFailure(0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876d01edc5843f98dc97aa51a9da4141", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/xml/AntLibParser.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public void startElement(String uri, String localName, String qualifiedName,                                  Attributes attributes) throws SAXParseException", "signatureAfterChange": "         public void startElement(String uri, String localName, String qualifiedName,                                  Attributes attributes) throws SAXParseException", "diff": ["+                    else if (qualifiedName.equals(ASPECT_ELEMENT)) {", "+                        createAspectHandler(attributes);", "+                    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8834e3355582d4059d9bbc91202e70a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/TarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void test8(String target)", "signatureAfterChange": "      private void test8(String target)", "diff": ["-        executeTarget(target);", "+        buildRule.executeTarget(target);", "-            = new File(getProject().getProperty(\"output\"), \"untar/test8.xml\");", "+            = new File(buildRule.getProject().getProperty(\"output\"), \"untar/test8.xml\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8917e939539092711452b36a942d97b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "4c560e713a888aeaf773ca40ef7bf9adf08a0d89", "commitAfterChange": "145903b92bb6ae5fd4b95d530dcf785f464e90ba", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void checkAndAddDependants(Hashtable checkEntries)         throws BuildException", "signatureAfterChange": "     protected void checkAndAddDependants(Hashtable checkEntries)         throws BuildException", "diff": ["+        if (dependencyAnalyzer == null) {", "+            return;", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8986b317ec6ba18af816fe2138e3b458", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 39, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws AntException", "diff": ["-         throws ExecutionException {", "-        ", "+         throws AntException {", "+", "+        if (taskIterator == null) {", "+            return;", "+        }", "+", "-                } ", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8999b0801cc7e3f1fb6194d513176a96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "0bf139178affc6edbd26010b96cd727bd1396c84", "commitAfterChange": "722f6306c7ce1bcfed6c1baacb939978cd48fc6b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-            error.printStackTrace(err);", "+            if (Project.MSG_VERBOSE <= msgOutputLevel) {", "+                error.printStackTrace(err);", "+            }", "+            else {", "+                err.println(error.getMessage());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a09d0d39debeb9fe7dfef64318505f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "12df7ec426adb3e47cfb0d268d9b646769e38ac7", "commitAfterChange": "152be14c152edab99f90e8c71f589a6bf8087bbe", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-                throw new BuildException(\"FTP connection failed: \" + ftp.getReplyString());", "+                throw new BuildException(\"FTP connection failed: \" ", "+                                         + ftp.getReplyString());", "-                    throw new BuildException(", "-                                             \"could not set transfer type: \" +", "+                    throw new BuildException(\"could not set transfer type: \" +", "-                    throw new BuildException(", "-                                             \"could not enter into passive mode: \" +", "+                    throw new BuildException(\"could not enter into passive \"", "+                                             + \"mode: \" +", "-               doSiteCommand(ftp,\"umask \" + umask);", "+                doSiteCommand(ftp, \"umask \" + umask);", "-            // If the action is MK_DIR, then the specified remote directory is the", "-            // directory to create.", "+            // If the action is MK_DIR, then the specified remote", "+            // directory is the directory to create.", "-                        throw new BuildException(", "-                                                 \"could not change remote directory: \" +", "+                        throw new BuildException(\"could not change remote \"", "+                                                 + \"directory: \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bf22e78a16de69f5c326a44ae75fd07", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "b78dd40387e53e837b71dbbb1fc6296e3b817b44", "commitAfterChange": "9e89cec932a798d958cf6bb310936d9a00c09a9d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["+        // avoid double scanning of directories, can only happen in fast mode", "+        if (fast && hasBeenScanned(vpath)) {", "+            return;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c928501b8bb02f99399d76cb7c16c26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/Jasper41Mangler.java", "commitBeforeChange": "4f0d6c5a1f32a506018710a5a17892cbfaa96adc", "commitAfterChange": "7d5a81af5773b2756358827626cfa760d9c308af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public String mapJspToJavaName(File jspFile)", "signatureAfterChange": "     public String mapJspToJavaName(File jspFile)", "diff": ["-        return modifiedClassName.toString();", "+        return modifiedClassName.toString()+\".java\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf231738f303c0246c3acd8776242d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "fec4c1f5c6114ac3c213d904f818f2158f23b224", "commitAfterChange": "e5e10d6b06c92dda8031ce23a51fb6becc95c4e5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private final void dispatchAspectsSettings( final HashMap parameterMap,                                                 final HashMap elementMap )         throws TaskException", "signatureAfterChange": "      private final void dispatchAspectsSettings( final HashMap parameterMap,                                                 final HashMap elementMap )         throws TaskException", "diff": ["-            if( null == parameters ) parameters = EMPTY_PARAMETERS;", "+            if( null == parameters ) parameters = Parameters.EMPTY_PARAMETERS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f567e2a7cdedfe6e519a72af4879e3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "2e539cd379fe9c6c145887c16960c6f43ea08dd4", "commitAfterChange": "c3232ae202e7c7d75d99cf50289148949db1ba4d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static ComponentHelper getComponentHelper(Project project)", "signatureAfterChange": "     public static ComponentHelper getComponentHelper(Project project)", "diff": ["+        if (project == null) {", "+            return null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8facc1a61b8932dcb18b20dce722d521", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Echo.java", "commitBeforeChange": "b40d79d60a437f163f28f709c54ef95778a89b5f", "commitAfterChange": "0b486643903c3f52384b8110c56c1fda819ccf94", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            System.out.println(message);", "+            log(message, logLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffeafaf554c2256ed0b2f353e7c0068", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Socket.java", "commitBeforeChange": "614eeba75456e54a13c54b131c37baa12d751651", "commitAfterChange": "9fb2961443b0e15a6fd0be0aceed9d78e8c9cad7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public boolean eval() throws BuildException", "signatureAfterChange": "      public boolean eval() throws BuildException", "diff": ["-            throw new BuildException(\"No server specified in Socket task\");", "+            throw new BuildException(\"No server specified in socket \"", "+                                     + \"condition\");", "-            throw new BuildException(\"No port specified in Socket task\");", "+            throw new BuildException(\"No port specified in socket condition\");", "-        log(\"Checking for listener at \" + server + \":\" + port, Project.MSG_VERBOSE);", "+        log(\"Checking for listener at \" + server + \":\" + port, ", "+            Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "911ec8788b174fba580fb97aa20e595a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "1c38f4ed52ca23857b7b83ca909cd1748dea88d6", "commitAfterChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setQuiet(boolean q)", "signatureAfterChange": "     public void setQuiet(boolean q)", "diff": ["-        quiet = q;", "+        if (q) {", "+            cmd.addValue(\"-s\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "913e0c262d961f896941e115e831fbd3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "9130ea784d3a72fcee482bb87a49a565ed42cefe", "commitAfterChange": "b74502d99c8b8e5c925f4d48bd9803e2a1031e3b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static File getToolsJar()", "signatureAfterChange": "     public static File getToolsJar()", "diff": ["-        if (javaHome.toLowerCase(Locale.US).endsWith(\"jre\")) {", "+        if (javaHome.toLowerCase(Locale.US).endsWith(File.separator + \"jre\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9174751149650f064d106ec3a01d5c25", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/native2ascii/DefaultNative2Ascii.java", "commitBeforeChange": "6cfcccdb388eea1af2b53c208e382b3c0d5c9be4", "commitAfterChange": "7bb2ccf52f96d0781a32f7dd709f90c9f8243f47", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void setup(Commandline cmd, Native2Ascii args)         throws BuildException", "signatureAfterChange": "     protected void setup(Commandline cmd, Native2Ascii args)         throws BuildException", "diff": ["+        cmd.addArguments(args.getCurrentArgs());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92166d6f5680c68f558be221afe54c98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "f2a501a5cc401b98c0f1665b3e525c6384be61ae", "commitAfterChange": "bd0662b8fa0d69a8129ea1089518b146e77c6abd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public File resolveFile(File file, String filename)", "signatureAfterChange": "     public File resolveFile(File file, String filename)", "diff": ["-        if (filename.startsWith(File.separator) ||", "-", "-            (filename.length() >= 2 &&", "-             Character.isLetter(filename.charAt(0)) &&", "-             filename.charAt(1) == ':')", "-", "-            ) {", "-            return normalize(filename);", "+        if (!onNetWare) {", "+            if (filename.startsWith(File.separator) ||", "+                ", "+                (filename.length() >= 2 &&", "+                 Character.isLetter(filename.charAt(0)) &&", "+                 filename.charAt(1) == ':')", "+                ", "+                ) {", "+                return normalize(filename);", "+            }", "+        } else {", "+            // the assumption that the : will appear as the second character in", "+            // the path name breaks down when NetWare is a supported platform.", "+            // Netware volumes are of the pattern: \"data:\\\"", "+            int colon = filename.indexOf(\":\");", "+            if (filename.startsWith(File.separator) ||", "+                (colon > -1)", "+                ) {", "+                return normalize(filename);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9291402b95c308e13455f784bfb56d29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/listeners/ClassicProjectListener.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void log( String message, Throwable throwable )", "signatureAfterChange": "     protected void writeTargetHeader( final TargetEvent event )", "diff": ["-    public void log( String message, Throwable throwable )", "-        output( message + \"\\n\" + ExceptionUtil.printStackTrace( throwable, 5, true ) );", "+    protected void writeTargetHeader( final TargetEvent event )", "+        getWriter().println( event.getTargetName() + \":\" );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92d000d6bc9142a852bfca05b90defc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "65d50bad90d14f185018f6d81b0bb0a4801c3cfd", "commitAfterChange": "e7e85f299e908cfbfca277f8dea203a99009bafd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void closeEntry() throws IOException", "signatureAfterChange": "     public void closeEntry() throws IOException", "diff": ["-            throw new IOException(\"entry closed at '\" + this.currBytes", "+            throw new IOException(\"entry '\" + currName + \"' closed at '\"", "+                                  + this.currBytes"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93aeded78720f43e5c122c4a4b163a60", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "373a1b8070600ffc6c3d67e7649115203b3b4924", "commitAfterChange": "4cacfa503e053f33f44befc2ffcd6664dc909683", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            // last argument is the output snapshot", "+            cmdl.createArgument().setValue(tofile.getPath()); ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e15ce47cbc71ac3dbeb8488e55524f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+        sb.append(\", Skipped: \");", "+        sb.append(suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f48b2cfbc3779d523e0264dfd7cc41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java", "commitBeforeChange": "5413125a9152c81e198e20fcd6ed6866aa620257", "commitAfterChange": "32e4c2da9af3a95ca9356dee52d4e4c85e11bd4d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void hookSpecialTasks(Project project)", "signatureAfterChange": "     private void hookSpecialTasks(Project project)", "diff": ["+            c=Class.forName(\"org.apache.tools.ant.taskdefs.Description\");", "+            project.addTaskDefinition( \"description\" , c );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "953dc5b0298dd78c01fa921145531ada", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "1534f4e063841a3db919dde44530d75b7d734c57", "commitAfterChange": "d2e6dcf66da83b17eb4a13f4ff7f374521fe29ec", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private static void registerNonCrash()             throws IOException", "signatureAfterChange": "     private static void registerNonCrash()             throws IOException", "diff": ["-                out.write(\"terminated successfully\\n\");", "+                out.write(Constants.TERMINATED_SUCCESSFULLY + \"\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957a8d476f3c584a68c847b92a734716", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Filter.java", "commitBeforeChange": "80a86aadd3850c2eb010a1d1796918666408954d", "commitAfterChange": "7820c64af8cfa6122b1afe00622c3118ce935a36", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        boolean isFiltersFromFile = filtersFile != null && token == null && value == null;", "-        boolean isSingleFilter = filtersFile == null && token != null && value != null;", "+        boolean isFiltersFromFile = ", "+            filtersFile != null && token == null && value == null;", "+        boolean isSingleFilter = ", "+            filtersFile == null && token != null && value != null;", "-            throw new BuildException(\"both token and value parameters, or only a filtersFile parameter is required\", location);", "+            throw new BuildException(\"both token and value parameters, or \"", "+                                     + \"only a filtersFile parameter is \"", "+                                     + \"required\", location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95c4fbc924aaab0bb481868c94405d32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/XmlLogger.java", "commitBeforeChange": "219123401efb3fb09ad935b9a56d3a2028705328", "commitAfterChange": "2976ded16aac6c226c4631cf80e937d1d43e81cf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void taskFinished(BuildEvent event)", "signatureAfterChange": "      public void taskFinished(BuildEvent event)", "diff": ["-            TimedElement targetElement = (TimedElement)targets.get(target);", "+            TimedElement targetElement = null;", "+            if (target != null) {", "+                targetElement = (TimedElement)targets.get(target);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969d38b170f95fe610af663e70174f81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarBuffer.java", "commitBeforeChange": "a4e795303f3f88050dfb7e1fdd30cab6125a96b9", "commitAfterChange": "ef367e7ac754bfcd7be45be5cec396b001bb1737", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean readBlock() throws IOException", "signatureAfterChange": "     private boolean readBlock() throws IOException", "diff": ["+                if (offset == 0) {", "+                    // Ensure that we do not read gigabytes of zeros", "+                    // for a corrupt tar file.", "+                    // See http://issues.apache.org/bugzilla/show_bug.cgi?id=39924", "+                    return false;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9787cee6b0a14b7a9db2a126fd0a08c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "87142931bdb6a80473706eb4adaf3c9234be57fb", "commitAfterChange": "792092f443a4ffa8039ff1fa4963446574310177", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void expandFile(FileUtils fileUtils, File srcF, File dir)", "signatureAfterChange": "     protected void expandFile(FileUtils fileUtils, File srcF, File dir)", "diff": ["+                log(\"extracting \" + ze.getName(), Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98215cd55e5fb914bb5c8cf357856319", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "0c0987da86fe90447e227174eb0ebf270b8ebc83", "commitAfterChange": "595802a2b86cc55157ee68629986101574cff45b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-                log(\"error while reading original manifest: \" + t.getMessage(),", "+                log(\"error while reading original manifest in file: \" + zipFile.toString() + t.getMessage(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983176e1e93ca4622b9236e10874c32a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/make/org/apache/myrmidon/build/AntlibDescriptorTask.java", "commitBeforeChange": "86696c8c4195c4dc71c510a24da3614986f58c57", "commitAfterChange": "0f157a89d4127b4d582295a0d2c430e623e2102c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "+        if( null != m_antDocs )", "+        {", "+            addTemplate( m_antDocs );", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9866d8fb796a6b7bf322f29abd2ed413", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "8d9a2577c27affb26a764c52d4e7a0b5b14f8d20", "commitAfterChange": "7abf6af62118a96740e70b7733c2aa5d50188a22", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            getProject().log(\"Target is already built - skipping (\" + target + \")\");", "+            log(\"Target is already built - skipping (\" + target + \")\",", "+                Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98997b62254eb947acb4f2ae39596528", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "7b722732fbbdb511be32f94588d43f55b0b51f65", "commitAfterChange": "8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private DefaultComponentManager createComponentManager()", "signatureAfterChange": "     private DefaultComponentManager createComponentManager()", "diff": ["-        componentManager.put( \"org.apache.ant.convert.engine.ConverterEngine\",", "-                              m_converterEngine );", "-        componentManager.put( \"org.apache.ant.convert.Converter\", m_converterEngine );", "-        componentManager.put( \"org.apache.avalon.framework.camelot.Factory\", m_factory );", "+        componentManager.put( MasterConverter.ROLE, m_converter );", "+        componentManager.put( ConverterRegistry.ROLE, m_converterRegistry );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f6416a3a9d8d36c6a0c8013d511261", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "5800b026fac0179cb373c1c85261c04bf2b54e8e", "commitAfterChange": "88f1be2d0462de59e99bf085522756a647195248", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testStyleIsSet() throws Exception", "signatureAfterChange": "      public void testStyleIsSet() throws Exception", "diff": ["-        expectBuildException(\"testStyleIsSet\", \"no stylesheet specified\");", "+        expectSpecificBuildException(\"testStyleIsSet\",", "+                \"no stylesheet specified\", \"specify the \" +", "+                \"stylesheet either as a filename in style \" +", "+                \"attribute or as a nested resource\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b98980d2be3bdea94d17650734c45e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "c3f2def559e8103dee391f82e9b6e4bec0165e47", "commitAfterChange": "c30a78b74e835e3a37d3a23ac8a223e9fe497553", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private InputStream getResourceStream(File file, String resourceName)", "signatureAfterChange": "     private InputStream getResourceStream(File file, String resourceName)", "diff": ["+            if (!file.exists()) {", "+                return null;", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0837850314e54bd073a7746be53489", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/repository/Repository.java", "commitBeforeChange": "c8203de650acea3fa8e0e1a6acce7425f5bbe322", "commitAfterChange": "7651d02856325bec057619d215ee30c4c605ee80", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final Repository resolve()", "signatureAfterChange": "     public final Repository resolve()", "diff": ["-            Repository repository = (Repository) getCheckedRef(this.getClass(),", "+            Repository repository = (Repository) getCheckedRef(Repository.class, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a16f710f559b3835f4ff863292a07b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/CommandlineJava.java", "commitBeforeChange": "a989b254f04d33e5bc2370b62121bd56830ac2f1", "commitAfterChange": "3fee832d2527f3b952683181980a446b44f5e5bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public CommandlineJava()", "signatureAfterChange": "      public CommandlineJava()", "diff": ["-        setVm( getJavaExecutableName() );", "+        setVm( ExecuteJava.getJavaExecutableName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6703c7c2eb1a3bc41dc3c50a33dd25", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ProcessDestroyer.java", "commitBeforeChange": "a3eef60027b7a7142377c38988529bb152540c0f", "commitAfterChange": "198cca7aa68c3d73f41cea3d673fc07e0009c7b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean remove(Process process)", "signatureAfterChange": "     public boolean remove(Process process)", "diff": ["-        return processes.removeElement(process);", "+        synchronized(processes){", "+            boolean processRemoved = processes.removeElement(process);", "+            if(processes.size() == 0){", "+                removeShutdownHook();", "+            }", "+            return processRemoved;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a90fb64758310953838553f917bef20", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "2cbfa09eb6cf1138facda2aba815a9441db6da35", "commitAfterChange": "67776debe7e8f2d81828caf29d8a7645564e4750", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "signatureAfterChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "diff": ["-                } else {", "+                } else if (isWindows) {", "-            command.addArgument(referenceList.toString() + '\\\"');", "+            if (isWindows) {", "+                command.addArgument(referenceList.toString() + '\\\"');", "+            } else {", "+                command.addArgument(referenceList.toString());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adb30039945c9fcf8c0c32122bfff8f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "diff": ["-        cmd.addArgument( PathUtil.formatPath( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath, getTaskContext() ) );", "-        cmd.addArgument( PathUtil.formatPath( src ) );", "+        cmd.addArgument( PathUtil.formatPath( src, getTaskContext() ) );", "-        if( m_bootclasspath != null )", "+        final String[] bootclasspath = m_bootclasspath.listFiles( getTaskContext() );", "+        if( bootclasspath.length > 0 )", "-            cmd.addArgument( PathUtil.formatPath( m_bootclasspath ) );", "+            cmd.addArgument( PathUtil.formatPath( bootclasspath ) );", "-            cmd.addArgument( PathUtil.formatPath( m_extdirs ) );", "+            cmd.addArgument( PathUtil.formatPath( m_extdirs, getTaskContext() ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b084d39bd5761bed4e4b1591d2169fe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "77b4a86f3136e7b815d07732a8d8335115e47020", "commitAfterChange": "8ede41b42d01a2223b741dec473d21ce6a06e572", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["+                attributes.log(\"Jikes doesn't support '-source \"", "+                               + source + \"', will use '-source 1.3' instead\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b75823d4c101e882a36c9d6a99d8607", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copyfile.java", "commitBeforeChange": "ab202c98abdb86255e80d286acee3b8c6960cab2", "commitAfterChange": "ae16bb711b331f6c8a20ee1298cf171de43266f7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\tif (srcFile.lastModified() > destFile.lastModified()) {", "-\t    try {", "-\t\tcopyFile(srcFile, destFile);", "-\t    } catch (IOException ioe) {", "-\t\tString msg = \"Error copying file: \" + srcFile.getAbsolutePath()", "-\t\t    + \" due to \" + ioe.getMessage();", "-\t\tthrow new BuildException(msg);", "-\t    }", "-\t}", "+        if (srcFile.lastModified() > destFile.lastModified()) {", "+            try {", "+                project.copyFile(srcFile, destFile);", "+            } catch (IOException ioe) {", "+                String msg = \"Error copying file: \" + srcFile.getAbsolutePath()", "+                    + \" due to \" + ioe.getMessage();", "+                throw new BuildException(msg);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b8f9b4032e1953071a000476460f27a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+        rootElement.setAttribute(ATTR_SKIPPED, \"\" + suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d13b870ab458d09cca8124e4992bff8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "403c32e5c5322f65e184f6d21496d0295d74f6e1", "commitAfterChange": "655df7f9e198a141defc9dcfb45f7f14cd7749f8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Class forceLoadClass(String classname) throws ClassNotFoundException", "signatureAfterChange": "     public Class forceLoadClass(String classname) throws ClassNotFoundException", "diff": ["+        project.log(\"force loading \" + classname, Project.MSG_VERBOSE);", "+        }", "+        ", "+        return theClass;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d991858dac6fc91097a9dcea02abd92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "10beb46f08264db9b59b37ef9529106e6968b5eb", "commitAfterChange": "e2a62c3179e855f7e102af8701aff81d6ba3c7e8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public int read(char[] cbuf, int off, int len)             throws IOException", "signatureAfterChange": "         public int read(char[] cbuf, int off, int len)             throws IOException", "diff": ["-", "-                            addLastChar(cbuf[off + i]);", "+                            addLastChar(cbuf[off + i - 1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e03dffbd2b20193042d0e3c905a16bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "1c4bde9df432fb6c2123228896f4b2f8d9029bec", "commitAfterChange": "22bdc578fccd792a5e254f068715464deef89765", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "     public void setSystemTypeKey(String systemKey)", "signatureAfterChange": "     public void setSystemTypeKey(String systemKey)", "diff": ["-        this.systemTypeKey = systemKey;", "-        configurationHasBeenSet();", "+        if (systemKey != null && !systemKey.equals(\"\"))", "+        {", "+            this.systemTypeKey = systemKey;", "+            configurationHasBeenSet();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ec244a304bf038b268d59e2555d3cd6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "7bca21470cfb4927f8ff2c576a1d4e41a1d889e5", "commitAfterChange": "5f7fbe8b732d8ad675be2e58acf2fde106b484b5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["+                    notFollowedSymlinks.add(basedir.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ecf2130a76a9f09a301f8652869ffb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "8d275b78c2240031dca97d3eba6ba0f592987d62", "commitAfterChange": "4e4a3593518e23056df34ec915bda86ac510a0e1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "     protected void execSQL(String sql, PrintStream out) throws SQLException", "signatureAfterChange": "     protected void execSQL(String sql, PrintStream out) throws SQLException", "diff": ["+            if (updateCountTotal != -1) {", "+                setRowCountProperty(updateCountTotal);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ed7885d66e72a6f4c4eadaa05822b62", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/ant1compat/org/apache/tools/ant/Ant1Factory.java", "commitBeforeChange": "408a4c09b05e9710ce19870d99a5ef79ea9c82a7", "commitAfterChange": "8e684f3e6e608fb3d36212faea4c1c7ad80f4323", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void init(AntContext context) throws ExecutionException", "signatureAfterChange": "     public void init(AntContext context) throws ExecutionException", "diff": ["+        if (project != null) {", "+            return;", "+        }", "+        ", "-        project = new Project();", "+        project = new Project(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f93e551afe7d55def5961b4a5b05002", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "57f95d4cd27abbd37f514c49414101048834b28f", "commitAfterChange": "3d1381215d1783cf459a0cbd4dcdd2ed017970c6", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "     private void tsort(String root, Hashtable targetTable,                              Hashtable state, Stack visiting,                              Vector ret)         throws BuildException", "signatureAfterChange": "     private void tsort(String root, Hashtable targetTable,                              Hashtable state, Stack visiting,                              Vector ret)         throws BuildException", "diff": ["-            StringBuffer sb = new StringBuffer(\"Target `\");", "+            StringBuffer sb = new StringBuffer(\"Target \\\"\");", "-            sb.append(\"' does not exist in this project. \");", "+            sb.append(\"\\\" does not exist in the project \\\"\");", "+            sb.append(name);", "+            sb.append(\"\\\". \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ef4665c00b7039c6fb7a7ac1793994", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "84ea84cd4b97c070585d66b6c1dde947d3795764", "commitAfterChange": "8e9a25e46fc3c8a4f9fcfa15ccc799a411c382a0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized boolean setProperty(String ns, String name,                                             Object value, boolean verbose)", "signatureAfterChange": "     public synchronized boolean setProperty(String ns, String name,                                             Object value, boolean verbose)", "diff": ["-                project.log(\"Override ignored for user property \" + name,", "-                        Project.MSG_VERBOSE);", "+                project.log(\"Override ignored for user property \\\"\" + name", "+                    + \"\\\"\", Project.MSG_VERBOSE);", "-            project.log(\"Overriding previous definition of property \" + name,", "-                    Project.MSG_VERBOSE);", "+            project.log(\"Overriding previous definition of property \\\"\" + name", "+                + \"\\\"\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a20fb62a5ed7c493d6465264d0d688f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ClasspathUtils.java", "commitBeforeChange": "0ea31bf5bf6d04b8b916542bf9a3ef0d3d37d56c", "commitAfterChange": "39cc83c340b7843e7b5ae98b0ba3cd48cb8690af", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public ClassLoader getClassLoader()", "signatureAfterChange": "         public ClassLoader getClassLoader()", "diff": ["-            return getClassLoaderForPath(", "-                    getContextProject(),", "-                    this.classpath,", "-                    getClassLoadId(),", "-                    this.reverseLoader,", "-                    loaderId != null || isMagicPropertySet(getContextProject()));", "+            return getClassLoaderForPath(getContextProject(), classpath, getClassLoadId(),", "+                    reverseLoader, loaderId != null || isMagicPropertySet(getContextProject()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a24a2da1ecc2420bf9300254ae349a76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private String getAlgoName(String classname)", "signatureAfterChange": "     private String getAlgoName(String classname)", "diff": ["-        sel.setProject(getProject());", "+        sel.setProject(selectorRule.getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25060fb9f9811dc5c382b2e82c4b505", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaOroMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getPattern()", "signatureAfterChange": "     public String getPattern()", "diff": ["-        return pattern.getPattern();", "+        return this.pattern;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2d011d67725881e16aca5995174de24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "e5559c804b8116419422aa69d671f93870e2f200", "commitAfterChange": "3d77ed2e095607845c48e8fc0af2f68e9b92c0ab", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     private void moveGeneratedFile(File baseDir, File sourceBaseFile, String classname,                                    RmicAdapter adapter) throws BuildException", "signatureAfterChange": "     private void moveGeneratedFile(File baseDir, File sourceBaseFile, String classname,                                    RmicAdapter adapter) throws BuildException", "diff": ["-                                                             \".class\");", "+                                                             \".class\")", "+                + \".java\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31f7944aecf64b5270b4d1f8ff807fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "a8d43912400fdf1627f23abcfb1c27879c5e8153", "commitAfterChange": "df14132289636640ade9cc52ecf8bfdc4ba52433", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-                err.println(error.getMessage());", "+                if (error instanceof BuildException) {", "+                    err.println(error.toString());", "+                }", "+                else {", "+                    err.println(error.getMessage());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3bd326554f07eb725111ef00de85a4c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "2030358e5e65e1b1b3b27bbe4d74ed09e40b6d32", "commitAfterChange": "616dd57d1a8f0feb46e187d4fc878d254681fd9c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix)", "diff": ["-            ejbFiles.put(META_DIR + BAS_DD, borlandDD);", "+            ejbFiles.put(META_DIR + BAS_DD, ddPrefix + borlandDD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3ff451ebc1286ad7046a22825f91dce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "6c287080d460efa63e022407e88a04558b9fdbb6", "commitAfterChange": "b411046cdcc17484081de845ab42519776acc690", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       private void determineDependencies() throws IOException", "signatureAfterChange": "       private void determineDependencies() throws IOException", "diff": ["+            log(\"Adding class info for \" + info.className, Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4612a52bad4e0857d6bb7711c969341", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/repository/HttpRepository.java", "commitBeforeChange": "f4c6f96bae085938e99cf06c3d7007a0845be1b1", "commitAfterChange": "7cd0fc4f6612367257cdc1be482282b41666db6f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean fetch(Library library, boolean useTimestamp) throws IOException", "signatureAfterChange": "     public boolean fetch(Library library, boolean useTimestamp) throws IOException", "diff": ["-        logVerbose(\"Library URL=\" + path);", "+        log(\"Downloading \"+path +\" to \"+ library.getAbsolutePath());", "-        logVerbose(\"destination =\" + library.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4abaa73a42695810e59ab90427872ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "99ac2c7d14d5e7f2e90af77af786b348c10d1822", "commitAfterChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static String extractUriFromComponentName(String componentName)", "signatureAfterChange": "     public static String extractUriFromComponentName(String componentName)", "diff": ["+        if (componentName == null) {", "+            return \"\";", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d025e30f1065a6547fa2e76b846bb2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "e3fe21eccba31ac52d5c862ec2b7d518ff7e78c3", "commitAfterChange": "17991a8e76fe7e5527a622b1d06bd664c600a3d3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void setupComponents()         throws Exception", "signatureAfterChange": "     private void setupComponents()         throws Exception", "diff": ["+        m_serviceManager.put( Embeddor.ROLE, this );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5958b0e6f483a56c83cac9c5fbbd424", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/XmlLogger.java", "commitBeforeChange": "39404a01944f1f80a52e8318e75b0dfc84e08894", "commitAfterChange": "65154027217934ed9b35aaeb8a765b763b4c77c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void taskStarted(BuildEvent event)", "signatureAfterChange": "     public void taskStarted(BuildEvent event)", "diff": ["+        if (name == null) {", "+            name = \"\";", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60b7dfbc79d300f10e5532cb6a47a08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "0c318edc8997dafcf22ca1613c32981dfb6446f7", "commitAfterChange": "40b8196df0f06a52caae1b272daa620df74c8577", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public String replaceProperties(String ns, String value, Hashtable keys)             throws BuildException", "signatureAfterChange": "     public String replaceProperties(String ns, String value, Hashtable keys)             throws BuildException", "diff": ["-        if (value == null) {", "-            return null;", "+        if (value == null || value.indexOf('$') == -1) {", "+            return value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a65378f2af480ac21e208a7df120a316", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "cbd20a77eba224b21654251583971e054729f006", "commitAfterChange": "752d64fa43db2172327771ba4d36bee3f2d3b49a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setUseLanguageEncodingFlag(boolean b)", "signatureAfterChange": "     public void setUseLanguageEncodingFlag(boolean b)", "diff": ["-        useEFS = b && isUTF8(encoding);", "+        useEFS = b && ZipEncodingHelper.isUTF8(encoding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7be75d8961fe782b35f29c4a7130f38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "a87db6897cde9e966d34343211266a421998e507", "commitAfterChange": "b689612fa923ba74b5c89dc891aeff801799e555", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private DefaultComponentManager createComponentManager()", "signatureAfterChange": "     private DefaultComponentManager createComponentManager()", "diff": ["+        //Following components used when want to types (ie tasks/mappers etc)", "+        componentManager.put( TypeManager.ROLE, m_typeManager );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d9392c165c2370995d8ae81ae4e852", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "823aadf5aa3424d8dcda444b8af0f3d63147cb24", "commitAfterChange": "a6169fa4e0a767e97f8e8b9f6c451fa9174dc6d9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkConfiguration() throws BuildException", "diff": ["-            throw new BuildException(\"The directory you specified does not \"", "-                                     + \"exist\");", "+            throw new BuildException(\"The directory \" + dir + \" does not exist\");", "-            throw new BuildException(\"The directory you specified is not a \"", "-                                     + \"directory\");", "+            throw new BuildException(dir + \" is not a directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f0111c144f31daee4e73257e75554e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "signatureAfterChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "diff": ["+            project.log(\"resolving systemId: \" + systemId, Project.MSG_VERBOSE);", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a843a165284c1a4c2f533e81d20c8320", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "5168496109edbff91558a4d654082a36a1f74a69", "commitAfterChange": "1dcdf4c05f0685b9cac061c9ea9d7f5b6822cde3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void fireTaskStarted(Task task)", "signatureAfterChange": "     public void fireTaskStarted(Task task)", "diff": ["+        synchronized (this) {", "+            threadTasks.put(Thread.currentThread(), task);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a859d17980711a0c063502c62d4422ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java", "commitBeforeChange": "d6cbd609c263fb8872f067d35925e6d4ab167aa9", "commitAfterChange": "382f81dea5a40904c564cb5c898bb0248f4aad1f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void execP4Command(String command, P4Handler handler) throws BuildException", "signatureAfterChange": "     protected void execP4Command(String command, P4Handler handler) throws BuildException", "diff": ["-                    log(e.toString(), Project.MSG_ERR);", "+                    log(\"Error stopping execution framework: \" + e.toString(),", "+                        Project.MSG_ERR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a859d6bf2273ccab192d3ec3d3b85760", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "ef415543d4a9a9600afc46c2d5c6ccf6c92739ee", "commitAfterChange": "ac060429f9790f7923a6b3e70bfdf29d7b79e7d5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void tarResource(Resource r, TarOutputStream tOut, String vPath,                                TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarResource(Resource r, TarOutputStream tOut, String vPath,                                TarFileSet tarFileSet)         throws IOException", "diff": ["-            String fullpath = tarFileSet.getFullpath();", "+            String fullpath = tarFileSet.getFullpath(this.getProject());", "-                String prefix = tarFileSet.getPrefix();", "+                String prefix = tarFileSet.getPrefix(this.getProject());", "-            te.setMode(tarFileSet.getDirMode());", "+            te.setMode(tarFileSet.getDirMode(this.getProject()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8700fd99439ceffe20c94949540aa93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "d60b6ca1eea0a3372c99965f3c15466328659908", "commitAfterChange": "c6c232893c39257745a8f7a618bcdb5c59791cae", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if( dirty ) {", "+        if (dirty) {", "-            if( useControlFile && !preModified ) {", "+", "+            if (useControlFile && !preModified) {", "-            if( useControlFile && !postModified ) {", "+            if (useControlFile && !postModified) {", "-            if( useControlFile && !invariantModified ) {", "+            if (useControlFile && !invariantModified) {", "-            if( ( pre || post || invariant ) && controlFile != null ) {", "-                log( \"WARNING: specifying pre,post or invariant will override control file settings\" );", "+            if ((pre || post || invariant) && controlFile != null) {", "+                log(\"WARNING: specifying pre,post or invariant will \"", "+                     + \"override control file settings\");", "-", "-            getProject().addBuildListener( new IContractPresenceDetector() );", "+            getProject().addBuildListener(new IContractPresenceDetector());", "-            Mkdir mkdir = (Mkdir) project.createTask( \"mkdir\" );", "-            mkdir.setDir( instrumentDir );", "+            Mkdir mkdir = (Mkdir) project.createTask(\"mkdir\");", "+", "+            mkdir.setDir(instrumentDir);", "-            mkdir.setDir( buildDir );", "+            mkdir.setDir(buildDir);", "-            mkdir.setDir( repositoryDir );", "+            mkdir.setDir(repositoryDir);", "-            ClasspathHelper classpathHelper = new ClasspathHelper( compiler );", "-            classpathHelper.modify( baseClasspath );", "+            ClasspathHelper classpathHelper = new ClasspathHelper(compiler);", "+", "+            classpathHelper.modify(baseClasspath);", "-            beforeInstrumentationClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "+", "+            beforeInstrumentationClasspath.append(new Path(getProject(),", "+                srcDir.getAbsolutePath()));", "-            afterInstrumentationClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+", "+            afterInstrumentationClasspath.append(new Path(getProject(), instrumentDir.getAbsolutePath()));", "+            afterInstrumentationClasspath.append(new Path(getProject(), repositoryDir.getAbsolutePath()));", "+            afterInstrumentationClasspath.append(new Path(getProject(), srcDir.getAbsolutePath()));", "+            afterInstrumentationClasspath.append(new Path(getProject(), buildDir.getAbsolutePath()));", "-            repositoryClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+", "+            repositoryClasspath.append(new Path(getProject(), instrumentDir.getAbsolutePath()));", "+            repositoryClasspath.append(new Path(getProject(), srcDir.getAbsolutePath()));", "+            repositoryClasspath.append(new Path(getProject(), repositoryDir.getAbsolutePath()));", "+            repositoryClasspath.append(new Path(getProject(), buildDir.getAbsolutePath()));", "-            iContractClasspath.append( new Path( getProject(), System.getProperty( \"java.home\" ) + File.separator + \"..\" + File.separator + \"lib\" + File.separator + \"tools.jar\" ) );", "-            iContractClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+", "+            iContractClasspath.append(new Path(getProject(), System.getProperty(\"java.home\") + File.separator + \"..\" + File.separator + \"lib\" + File.separator + \"tools.jar\"));", "+            iContractClasspath.append(new Path(getProject(), srcDir.getAbsolutePath()));", "+            iContractClasspath.append(new Path(getProject(), repositoryDir.getAbsolutePath()));", "+            iContractClasspath.append(new Path(getProject(), instrumentDir.getAbsolutePath()));", "+            iContractClasspath.append(new Path(getProject(), buildDir.getAbsolutePath()));", "-            Java iContract = (Java) project.createTask( \"java\" );", "-            iContract.setTaskName( getTaskName() );", "-            iContract.setFork( true );", "-            iContract.setClassname( \"com.reliablesystems.iContract.Tool\" );", "-            iContract.setClasspath( iContractClasspath );", "+            Java iContract = (Java) project.createTask(\"java\");", "+", "+            iContract.setTaskName(getTaskName());", "+            iContract.setFork(true);", "+            iContract.setClassname(\"com.reliablesystems.iContract.Tool\");", "+            iContract.setClasspath(iContractClasspath);", "-            args.append( directiveString() );", "-            args.append( \"-v\" ).append( verbosity ).append( \" \" );", "-            args.append( \"-b\" ).append( \"\\\"\" ).append( icCompiler ).append( \" -classpath \" ).append( beforeInstrumentationClasspath ).append( \"\\\" \" );", "-            args.append( \"-c\" ).append( \"\\\"\" ).append( icCompiler ).append( \" -classpath \" ).append( afterInstrumentationClasspath ).append( \" -d \" ).append( buildDir ).append( \"\\\" \" );", "-            args.append( \"-n\" ).append( \"\\\"\" ).append( icCompiler ).append( \" -classpath \" ).append( repositoryClasspath ).append( \"\\\" \" );", "-            args.append( \"-d\" ).append( failThrowable ).append( \" \" );", "-            args.append( \"-o\" ).append( instrumentDir ).append( File.separator ).append( \"@p\" ).append( File.separator ).append( \"@f.@e \" );", "-            args.append( \"-k\" ).append( repositoryDir ).append( File.separator ).append( \"@p \" );", "-            args.append( quiet ? \"-q \" : \"\" );", "-            args.append( instrumentall ? \"-a \" : \"\" ); // reinstrument everything if controlFile exists and is newer than any class", "-            args.append( \"@\" ).append( targets.getAbsolutePath() );", "-            iContract.createArg().setLine( args.toString() );", "+", "+            args.append(directiveString());", "+            args.append(\"-v\").append(verbosity).append(\" \");", "+            args.append(\"-b\").append(\"\\\"\").append(icCompiler).append(\" -classpath \").append(beforeInstrumentationClasspath).append(\"\\\" \");", "+            args.append(\"-c\").append(\"\\\"\").append(icCompiler).append(\" -classpath \").append(afterInstrumentationClasspath).append(\" -d \").append(buildDir).append(\"\\\" \");", "+            args.append(\"-n\").append(\"\\\"\").append(icCompiler).append(\" -classpath \").append(repositoryClasspath).append(\"\\\" \");", "+            args.append(\"-d\").append(failThrowable).append(\" \");", "+            args.append(\"-o\").append(instrumentDir).append(File.separator).append(\"@p\").append(File.separator).append(\"@f.@e \");", "+            args.append(\"-k\").append(repositoryDir).append(File.separator).append(\"@p \");", "+            args.append(quiet ? \"-q \" : \"\");", "+            args.append(instrumentall ? \"-a \" : \"\");// reinstrument everything if controlFile exists and is newer than any class", "+            args.append(\"@\").append(targets.getAbsolutePath());", "+            iContract.createArg().setLine(args.toString());", "-            if( updateIcontrol ) {", "+            if (updateIcontrol) {", "-                try { // to read existing propertiesfile", "-                    iControlProps.load( new FileInputStream( \"icontrol.properties\" ) );", "-                } catch( IOException e ) {", "-                    log( \"File icontrol.properties not found. That's ok. Writing a default one.\" );", "-                }", "-                iControlProps.setProperty( \"sourceRoot\", srcDir.getAbsolutePath() );", "-                iControlProps.setProperty( \"classRoot\", classDir.getAbsolutePath() );", "-                iControlProps.setProperty( \"classpath\", afterInstrumentationClasspath.toString() );", "-                iControlProps.setProperty( \"controlFile\", controlFile.getAbsolutePath() );", "-                iControlProps.setProperty( \"targetsFile\", targets.getAbsolutePath() );", "-                try { // to read existing propertiesfile", "-                    iControlProps.store( new FileOutputStream( \"icontrol.properties\" ), ICONTROL_PROPERTIES_HEADER );", "-                    log( \"Updated icontrol.properties\" );", "-                } catch( IOException e ) {", "-                    log( \"Couldn't write icontrol.properties.\" );", "+                try {// to read existing propertiesfile", "+                    iControlProps.load(new FileInputStream(\"icontrol.properties\"));", "+                } catch (IOException e) {", "+                    log(\"File icontrol.properties not found. That's ok. Writing a default one.\");", "+                }", "+                iControlProps.setProperty(\"sourceRoot\", srcDir.getAbsolutePath());", "+                iControlProps.setProperty(\"classRoot\", classDir.getAbsolutePath());", "+                iControlProps.setProperty(\"classpath\", afterInstrumentationClasspath.toString());", "+                iControlProps.setProperty(\"controlFile\", controlFile.getAbsolutePath());", "+                iControlProps.setProperty(\"targetsFile\", targets.getAbsolutePath());", "+", "+                try {// to read existing propertiesfile", "+                    iControlProps.store(new FileOutputStream(\"icontrol.properties\"), ICONTROL_PROPERTIES_HEADER);", "+                    log(\"Updated icontrol.properties\");", "+                } catch (IOException e) {", "+                    log(\"Couldn't write icontrol.properties.\");", "-            if( result != 0 ) {", "-                if( iContractMissing ) {", "-                    log( \"iContract can't be found on your classpath. Your classpath is:\" );", "-                    log( classpath.toString() );", "-                    log( \"If you don't have the iContract jar, go get it at http://www.reliable-systems.com/tools/\" );", "-                }", "-                throw new BuildException( \"iContract instrumentation failed. Code=\" + result );", "-            }", "-        } else { // not dirty", "+            if (result != 0) {", "+                if (iContractMissing) {", "+                    log(\"iContract can't be found on your classpath. Your classpath is:\");", "+                    log(classpath.toString());", "+                    log(\"If you don't have the iContract jar, go get it at http://www.reliable-systems.com/tools/\");", "+                }", "+                throw new BuildException(\"iContract instrumentation failed. Code=\" + result);", "+            }", "+        } else {// not dirty"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a893b0f69ca5080cf4d4228c933cf3d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/repository/Library.java", "commitBeforeChange": "569f22aceb8dfbe9b8876721d313edbbbfc2a3a2", "commitAfterChange": "bc09dd927519aac3009560b06caad116865b9d3c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void bind(File baseDir)", "signatureAfterChange": "     public void bind(File baseDir, boolean flatten)", "diff": ["-    public void bind(File baseDir) {", "+    public void bind(File baseDir, boolean flatten) {", "-        FileUtils fileUtils = FileUtils.newFileUtils();", "-", "-            destinationName = getMavenPath('/');", "+            if(flatten) {", "+                destinationName = getNormalFilename();", "+            } else {", "+                destinationName = getMavenPath('/');", "+            }", "-        libraryFile = fileUtils.resolveFile(baseDir, destinationName);", "+        libraryFile = FILE_UTILS.resolveFile(baseDir, destinationName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8e441f71a7305f8f6361dcd4301cb8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "54fec62b385b75dc3eb2919685dbddc032e316a1", "commitAfterChange": "a9353331a922b229316fa3da01f1b2df9fd75059", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected static ZipLong toDosTime(Date time)", "signatureAfterChange": "     protected static ZipLong toDosTime(Date time)", "diff": ["-            |         (time.getSeconds() >> 1);", "+            |         ((time.getSeconds() + 2) >> 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a965fccbc2b4937f9dd0fda94b55ac3d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java", "commitBeforeChange": "ac786e670be3d5856a0dfc2e2d3db887ee643248", "commitAfterChange": "ded098d5399315e5cb057bf09a72c2142ad82965", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void validate()         throws BuildException", "signatureAfterChange": "     private void validate()         throws BuildException", "diff": ["-        if( null == m_basedir )", "+        if( null == m_dir )", "-            final String message = \"Basedir must be set.\";", "-            throw new BuildException( message );", "+            m_dir = getProject().getBaseDir();", "-        if( !m_basedir.exists() )", "+        if( !m_dir.exists() )", "-            final String message = \"Cannot find base dir \" + m_basedir.getAbsolutePath();", "+            final String message = \"Cannot find base dir \" + m_dir.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f22dcf09799c73d0b114fa5b129521", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/Ilasm.java", "commitBeforeChange": "d7858c284ee71a38237fa56527196086c1206281", "commitAfterChange": "4c30dd5d53d63ae6e3191ba5650af8c83854b0ac", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected String getListingParameter()", "signatureAfterChange": "     protected String getListingParameter()", "diff": ["-        return listing ? \"/listing\" : \"/nolisting\";", "+        if (!isMono) {", "+            return listing ? \"/listing\" : \"/nolisting\";", "+        }", "+        return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa3dca265a6257501191c878fdd3da4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "ee0fc90c1af3f49fbfc357258ccf63aafd230b10", "commitAfterChange": "27868015eb791e7c83ebc0e12f6a255575504d0e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(FileSet[] filesets,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(FileSet[] filesets,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-                        + \" not updated because no new files were included.\",", "-                        Project.MSG_VERBOSE);", "+                                   + \" not updated because no new files were\"", "+                                   + \" included.\", Project.MSG_VERBOSE);", "-                    logOnFirstPass(\"Warning: skipping \" + archiveType + \" archive \"", "-                        + zipFile + \" because no files were included.\",", "-                        Project.MSG_WARN);", "+                    logOnFirstPass(\"Warning: skipping \" + archiveType", "+                                   + \" archive \" + zipFile", "+                                   + \" because no files were included.\",", "+                                   Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab0b3be0c3313d98e8d5d895d29cce38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setSpecificationVendor( final String specificationVendor )", "signatureAfterChange": "     public void addDependsfileset( final LibFileSet fileSet )", "diff": ["-     */", "-    public void setSpecificationVendor( final String specificationVendor )", "-    {", "-        m_specificationVendor = specificationVendor;", "-    }", "+    public void addDependsfileset( final LibFileSet fileSet )", "+        m_dependsFilesets.add( fileSet );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab40e072ebd0ac03ab4737d77cce9567", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Javah.java", "commitBeforeChange": "d00b77dd77ead032390843335ce5810fe039c598", "commitAfterChange": "7eec24e3068d76fd1589274859008c9821acc739", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if ((cls == null) && (classes.size() == 0)) {", "+        if ((cls == null) && (classes.size() == 0) && (files.size() == 0)) {", "-        if ((cls != null) && (classes.size() > 0)) {", "-            throw new BuildException(\"set class attribute or class element, \"", "-                + \"not both.\", getLocation());", "+        if ((cls != null) && (classes.size() > 0) && (files.size() > 0)) {", "+            throw new BuildException(\"set class attribute OR class element OR fileset, \"", "+                + \"not 2 or more of them.\", getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abbbff1b68a2f9dbd2b7767a2745eb28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "ac6f3addd34489d7a91f3fd79a9fd0b1b524f5ce", "commitAfterChange": "35aee5ccea917873433c9c3caf2482c03fe16c72", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (Project.getJavaVersion().startsWith(\"1.3\")) {", "+            if (Project.getJavaVersion() != Project.JAVA_1_1 &&", "+                Project.getJavaVersion() != Project.JAVA_1_2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac513a5e40cf48447f679926e99be446", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "bd2ddfd03df5d01d949d120c13a4b2383b9dc986", "commitAfterChange": "e503d4fa0e071937c2c69afe2ee9bc5c9b696efa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void start(String frontend, String defaultClass, String[] args)          throws InitException", "signatureAfterChange": "     public void start(String frontend, String defaultClass, String[] args)          throws InitException", "diff": ["-            InitConfig config = new InitConfig();", "+            InitConfig config = new InitConfig(getClass());", "-                    throw new InitException(\"Could not jar for frontend \\\"\" ", "-                        + frontend + \"\\\"\");", "+                    throw new InitException(\"Could not find jar for frontend \\\"\"", "+                        + frontend + \"\\\" - expected at \" + frontendJar);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca235bbeccecd0d03ea49921274f2ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "c51d1ce61f4d7469e370fb50b73176e7748d4da1", "commitAfterChange": "efbd99c9ae96fb6656ba9d03742917aacd2b5e69", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+                    //check to make sure that activation.jar ", "+                    //and mail.jar are available - see bug 31969", "+                    Class.forName(\"javax.activation.DataHandler\");", "+                    Class.forName(\"javax.mail.internet.MimeMessage\");", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accd1ce9ece8c56108cd20533830e85a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "6a0be3bb10e8c59e4ac56e28bb5e569a553ebb34", "commitAfterChange": "1bff308e51b3dfe4bb1b3ee10cd92b78e9643a18", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void zipFile(InputStream is, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(InputStream is, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "diff": ["-                + \" files include a META-INF/INDEX.LIST which will\"", "+                + \" files include a \" + INDEX_NAME + \" which will\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adcddb1960a352dd717d3eab2a96ff76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/model/DefaultProject.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public final void addTarget( final String name, final Target target )         throws AntException", "signatureAfterChange": "     public final void addTarget( final String name, final Target target )", "diff": ["-        throws AntException", "-            throw new AntException( \"Can not have two targets in a file with the name \" +", "-                                    name );", "+            throw new IllegalArgumentException( \"Can not have two targets in a \" + ", "+                                                \"file with the name \" + name );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "add07d9227ddf277de63aba65a32e33d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "12e9d5f0d34a161cd162b3a99d8e6eb1799267bf", "commitAfterChange": "46c940785aaa80d86df0bd49cd11bd2035d557bf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void configure(Object realObject)", "signatureAfterChange": "     public void configure(Object realObject)", "diff": ["+        if (realObject == null) {", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae978acf1ae25585dd4c79d7d9da7c74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "8b162d567dc13b9ae576422744854684a6c3ceb1", "commitAfterChange": "6c7f485943c930bf2de75288e47c4bf27c63b50a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void addExcludes(String[] excludes)", "signatureAfterChange": "     public synchronized void addExcludes(String[] excludes)", "diff": ["-    public void addExcludes(String[] excludes) {", "-        if (excludes != null) {", "-            if (this.excludes != null) {", "+    public synchronized void addExcludes(String[] excludes) {", "+        if (excludes != null && excludes.length > 0) {", "+            if (this.excludes != null && this.excludes.length > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af86a970887068b6e6aa5fe7568c356c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "2b673beb3ff472e42884117700938a5e0a171bab", "commitAfterChange": "03d2b1c05fef9a3b37e4fbe70fffe08cbacf14f8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int execute() throws IOException", "signatureAfterChange": "     public int execute() throws IOException", "diff": ["-        ", "+", "+", "+        // add the process to the list of those to destroy if the VM exits", "+        //", "+        processDestroyer.add(process);", "+", "+", "+        // remove the process to the list of those to destroy if the VM exits", "+        //", "+        processDestroyer.remove(process);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb87d5b42727d0aae8764f8ae1dd7d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/MappedResource.java", "commitBeforeChange": "664647fb6bb267d462c1fe6f6c746e9d211fe058", "commitAfterChange": "6f748504c512e25d6c8569a2168498cca9f4740d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getName()", "signatureAfterChange": "     public String getName()", "diff": ["-        return wrapped.getName();", "+        String[] mapped = mapper.mapFileName(wrapped.getName());", "+        return mapped != null && mapped.length > 0 ? mapped[0] : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03690d86332e09f78f2ba91d7d6deae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "c3018eaa64e6319dd6a03e2bf46e3c1c965b4fd6", "commitAfterChange": "6bd9a3ed7834da429c8281f1febe3ff5d43ff0d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public synchronized void add(FileSet fs)", "signatureAfterChange": "     public synchronized void add(FileSet fs)", "diff": ["+        if (fs == null) {", "+            return;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b116630f75e6e5f71549d69082174b8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "4a2d828a9ed3dfa55030e743f19eee956d93500f", "commitAfterChange": "af0dbb6ef20efb56df867fa8025d13b0319383e6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["-            throw new BuildException(\"No directory specified for fileset.\");", "+            throw new BuildException(\"No directory specified for \"", "+                                     + dataTypeName + \".\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14df4608364674dd5f1998ea435933d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/listeners/DefaultProjectListener.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void log( final String message )", "signatureAfterChange": "     public void targetFinished( final TargetEvent event )", "diff": ["-    public void log( final String message )", "+    public void targetFinished( final TargetEvent event )", "-        output( message );", "-    }", "+        if( m_targetOutput )", "+            getWriter().println();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b183dc4fa73cb471eb7e3baab88c3fb3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "a8387980f989e9418ddcee6fa9ae14a0c07e3165", "commitAfterChange": "505d4a8c1d350ffac8a917378a6fac71b2517b3d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public String[] getExcludePatterns(Project p)", "signatureAfterChange": "     public String[] getExcludePatterns(Project p)", "diff": ["-        return makeArray(excludeList, p);", "+        if (isReference()) {", "+            return getRef(p).getExcludePatterns(p);", "+        } else {", "+            return makeArray(excludeList, p);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21936f4a270a0d4d84a80dcb928bc3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/FileResource.java", "commitBeforeChange": "b3f4d20328a994ae4c977a9d6e36dcfda4d9ddbb", "commitAfterChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public Resource getResource(String path)", "signatureAfterChange": "     public Resource getResource(String path)", "diff": ["-        fileResource.setBaseDir(getBaseDir());", "+        if (FILE_UTILS.isLeadingPath(getBaseDir(), newfile)) {", "+            fileResource.setBaseDir(getBaseDir());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b274f89a0004063b423cd1c80ba7c3de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "4c77f5ea1b6a6cc567e71244e1955e355dafb19e", "commitAfterChange": "3ca199cab8dfc0449835efa717423d54f1ee1ad6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public boolean createNewFile(File f) throws IOException", "signatureAfterChange": "     public boolean createNewFile(File f) throws IOException", "diff": ["-        return createNewFile(f, false);", "+        return f.createNewFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f613cb24d57fa73e129ad029cfbcb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelper.java", "commitBeforeChange": "4fc2dab7e2b955f5ada45d3b97647084a15e951f", "commitAfterChange": "df867b66e89d6dcfa962efed57cbbdf543d8d7bd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static ProjectHelper getProjectHelper()         throws BuildException", "signatureAfterChange": "     public static ProjectHelper getProjectHelper()         throws BuildException", "diff": ["-        ClassLoader classLoader = getContextClassLoader();", "-                helper = newHelper(helperClass, classLoader);", "+                helper = newHelper(helperClass);", "+                ClassLoader classLoader=getContextClassLoader();", "-                if (classLoader == null) {", "-                    is=ClassLoader.getSystemResourceAsStream( SERVICE_ID );", "-                } else {", "+                if (classLoader != null) {", "-", "+                if( is==null ) {", "+                    is=ClassLoader.getSystemResourceAsStream( SERVICE_ID );", "+                }", "+                ", "-                        helper= newHelper( helperClassName, classLoader );", "+                        helper= newHelper( helperClassName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a8b00cca36149fb858ef62fe889736", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "70958ae9f37108d3b48ad5bfa2ae27f750dfafff", "commitAfterChange": "5308826fb8917216e1dae571770e797c74731a0c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "signatureAfterChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "diff": ["+                if (startName == -1) {", "+                    startName = 0;", "+                }", "+                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3e28f24844707747861f21774090b3c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/FixCrLfTest.java", "commitBeforeChange": "5a45e0117fd3b5b69d7f50678ea82c547d24f8e6", "commitAfterChange": "71333195c9d57d80d1a44cd8362a641c62d5e214", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testNoOverwrite() throws IOException", "signatureAfterChange": "      public void testNoOverwrite() throws IOException", "diff": ["-            new File(\"src/etc/testcases/taskdefs/fixcrlf/result/Junk1.java\");", "+            new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/fixcrlf/result/Junk1.java\");", "-            new File(\"src/etc/testcases/taskdefs/fixcrlf/result/Junk1.java\");", "+            new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/fixcrlf/result/Junk1.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b486e0ce25fa43ea1bf57c05e5704217", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "8b432916d58da1e110988661c8febfde91d523a7", "commitAfterChange": "abf0a938406a5129f0db36e1fc9e73f7bf024122", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "diff": ["-            newArgs = (String[]) argList.toArray(new String[0]);", "+            newArgs = (String[]) argList.toArray(new String[argList.size()]);", "-        URL[] libJars = (URL[]) libPathURLs.toArray(new URL[0]);", "+        URL[] libJars = (URL[]) libPathURLs.toArray(new URL[libPathURLs.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6163a7559888fd8bda882a8941b752f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "00ec1c435af8d15b42cb779373026ceedea92e59", "commitAfterChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, String ddPrefix)", "diff": ["-            log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" +", "-                weblogicDD.getPath(), Project.MSG_WARN);", "+            log(\"Unable to locate weblogic deployment descriptor. \"", "+                + \"It was expected to be in \"", "+                + weblogicDD.getPath(), Project.MSG_WARN);", "-            log(\"Please adjust your weblogic descriptor and set newCMP=\\\"true\\\" \" +", "-                \"to use the new CMP descriptor inclusion mechanism. \", Project.MSG_VERBOSE);", "+            log(\"Please adjust your weblogic descriptor and set \"", "+                + \"newCMP=\\\"true\\\" to use the new CMP descriptor \"", "+                + \"inclusion mechanism. \", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6aeb25fea6b9a78557c13a59220fb06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "9174fbde3b63fde69fee83a681d22301f7aa7a02", "commitAfterChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void setEncoding(String src)", "signatureAfterChange": "     public void setEncoding(String enc)", "diff": ["-    public void setEncoding(String src) {", "-        encoding = src;", "+    public void setEncoding(String enc) {", "+        cmd.createArgument().setValue(\"-encoding\");", "+        cmd.createArgument().setValue(enc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6bd2777e1727a7105551fe4cc528330", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copyfile.java", "commitBeforeChange": "13eb95ae4d6f35ee540b77b1d8eef2e44c7b2720", "commitAfterChange": "f0282fd8b18b09bbd18ee4b82fed883f872a802a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        ", "+", "+        if (srcFile.equals(destFile)) {", "+            log(\"Warning: src == dest\");", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e6adec04da4970a143c7b28b180915", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "1228b336de3ce103dc771b513fd171b89e344243", "commitAfterChange": "af7fb0127af235ba48a1e9ada6f7fc45847e53fa", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected XSLTInputSource getXSLStreamSource(String name) throws IOException", "signatureAfterChange": "     protected XSLTInputSource getXSLStreamSource(String name) throws IOException", "diff": ["-            systemId = f.getAbsolutePath();", "+            systemId = \"file:///\" + f.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77c51937105a9bbe3435aa00db8eb7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/StringUtils.java", "commitBeforeChange": "364fc015253b0019412fefff31e935d64174d015", "commitAfterChange": "f8e6703fc89b0eb2cd97c1486b4e48dc2ff15c5d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "signatureAfterChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "diff": ["-    \tString regex = \"\\\\d+[K|M|G|T|P]\";", "-    \tif(humanSize.matches(regex)) {", "+        //last character isn't a digit", "+    \tif(!Character.isDigit(humanSize.charAt(humanSize.length()-1))) {", "-    \t} else if(humanSize.matches(\"\\\\d+\")) {", "-    \t\treturn Long.parseLong(humanSize);", "-    \t\tthrow new Exception(\"Couldn't parse string: \"+humanSize);", "+    \t    return Long.parseLong(humanSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7fc0a05bf45de8b986c6b42555a0301", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/TaskdefTest.java", "commitBeforeChange": "3bfae8ec28855fb70816dd429410fd5f3ad59967", "commitAfterChange": "5f93102e17838c47891084f6f62aa8f4c38cac6b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void test5()", "signatureAfterChange": "      public void test5()", "diff": ["-        executeTarget(\"test5\");", "+        expectBuildException(\"test5\", \"No public execute() in \" + Project.class);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83cccf0885fa7c5375017a48779d15e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "76f5174e7c5e445a20eb0c1cbcb22f81e2c72503", "commitAfterChange": "c6d10f6ffcfc9ba5ebf41d7ea079047833f97642", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["-        if (test != null) {", "-            endTest(test);", "-        }", "-        failed = true;", "+        synchronized (wri) {", "+            if (test != null) {", "+                endTest(test);", "+                failed.put(test, Boolean.TRUE);", "+            }", "-        wri.println(type);", "-        wri.println(t.getMessage());", "-        t.printStackTrace(wri);", "-        wri.println(\"\");", "+            wri.println(type);", "+            wri.println(t.getMessage());", "+            t.printStackTrace(wri);", "+            wri.println(\"\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d3a5871b98ac6933f25076e57ce8f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "b505179217b41dec4666a905a5398c1dd5b6b390", "commitAfterChange": "ef4c94df7d5faabb65e7dbec22043cb0cb7a31d8", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["+                    zOut.setUseZip64(zip64Mode.getMode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9129514aec06733d7517ef13d55f599", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ArchiveScanner.java", "commitBeforeChange": "57ee171b186e532d91bb93c8afdf4cae6ceacc26", "commitAfterChange": "f0c143b6e0d7bfb430b688cf3d38ea23d98acb1f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void scan()", "signatureAfterChange": "     public void scan()", "diff": ["-        if (src == null) {", "+        if (src == null || (!src.isExists() && !errorOnMissingArchive)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b940dc83941df4cedd4288ede0c12583", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "1bd831271a8de1bc1085bcb2923975903840511a", "commitAfterChange": "5b377d290d4ff3d4557987da9b3c2dd802203cde", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "     protected void runExec(Execute exe) throws BuildException", "diff": ["-                throw new BuildException(\"Execute failed: \",e, location);", "+                throw new BuildException(\"Execute failed: \"+e.toString(),e, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b942d978c97067ef4591e02d284c3be0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "faba017869b796b137c9147c00a00cd11dd94f1e", "commitAfterChange": "2c68e6ab607fa6a70e414eee76d56afe00c29c31", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void initSubProject(Project subProject)", "signatureAfterChange": "     public void initSubProject(Project subProject)", "diff": ["+        subProject.setExecutor(getExecutor().getSubProjectExecutor());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9d38bd281e191e01ad54a52115e3975", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "dee4d94b11527569572210e63033b194d0769c10", "commitAfterChange": "75c231e6c863265ca7013d55344b35e9122bb3bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public static String quoteArgument(String argument)", "signatureAfterChange": "     public static String quoteArgument(String argument)", "diff": ["-        } else if (argument.indexOf(\"\\'\") > -1 || argument.indexOf(\" \") > -1) {", "+        } else if (argument.indexOf(\"\\'\") > -1", "+                   || argument.indexOf(\" \") > -1", "+                   // WIN9x uses a bat file for executing commands", "+                   || (IS_WIN_9X && argument.indexOf(';') != -1)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ed62c36a8eb33d2972305ebba18ee2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/AntXMLContext.java", "commitBeforeChange": "1786aff36b79b97205d5f99a690af9ee72b7dd41", "commitAfterChange": "33ac6bc3ceb37259604ae74781ab53913b4079da", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setBuildFile(File buildFile)", "signatureAfterChange": "     public void setBuildFile(File buildFile)", "diff": ["+        implicitTarget.setLocation(new Location(buildFile.getAbsolutePath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1b8f6d761ca67a47d4d1e3e7c51d09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "1c38f4ed52ca23857b7b83ca909cd1748dea88d6", "commitAfterChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setIgnorewhitespace(boolean ignore)", "signatureAfterChange": "     public void setIgnorewhitespace(boolean ignore)", "diff": ["-        ignoreWhitespace = ignore;", "+        if (ignore) {", "+            cmd.addValue(\"-l\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3002eb616ea8e114591f122477c292", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadResource.java", "commitBeforeChange": "08413ada31e6a9e9dbed3073158d17123d5028e0", "commitAfterChange": "bc19df1e99fcd2c8ff6043371c66f88d0b51dfda", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void execute()         throws BuildException", "signatureAfterChange": "     public final void execute()         throws BuildException", "diff": ["+            } else {", "+                log(\"Do not set property \" + property + \" as its length is 0.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba7e531974c2696665e7251a49c2ecee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "1896560c9e81eb0e371a6c3c6163379cee4535ae", "commitAfterChange": "8741512d8c2e4cad30f0c6e6134d9a793f00d4b7", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private static String normalizeFileName(String fileName)", "signatureAfterChange": "     private static String normalizeFileName(String fileName,                                             boolean preserveLeadingSlashes)", "diff": ["-    private static String normalizeFileName(String fileName) {", "+    private static String normalizeFileName(String fileName,", "+                                            boolean preserveLeadingSlashes) {", "-        while (fileName.startsWith(\"/\")) {", "+        while (!preserveLeadingSlashes && fileName.startsWith(\"/\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba9fe1b274855561376224a73351391b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "4cd7d60e99d2dbbea019824a0ac731c2ae341d1f", "commitAfterChange": "cc3fb0c926f28067dafd3d52d88d016fc6f8a986", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "+            if (env != null) loadEnvironment(env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baa6b9085cdd52e84e202611e21bba71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "dc808ef69648423010481ac84c527886a261071c", "commitAfterChange": "b6da0f3f129cb8b4a0c37fed0fef05eb127e534d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public boolean isUpToDate(File source,File dest,long granularity)", "signatureAfterChange": "     public boolean isUpToDate(File source,File dest,long granularity)", "diff": ["-        return destTime>=sourceTime+granularity;", "+        return isUpToDate(sourceTime, destTime, granularity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad8d9eeabf139668a6fec8362aa4bd6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "bc502f637abe642ab452fae34c34abe9e6b7c415", "commitAfterChange": "9b4b922d2c19a5f441625a26941a6024341c8feb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["+        long stopSearching = Math.max(0L, archive.length() - MAX_EOCD_SIZE);", "-            while (curr != -1) {", "+            while (off >= stopSearching && curr != -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5727bc073907534618c60684d24f8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "3b7986524b1f1b8a3a7c88a5df298e9dfea426ae", "commitAfterChange": "a8c2ab18688af2c73127f69ab1a1855241bd282f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void executeMain() throws BuildException", "signatureAfterChange": "     public void executeMain() throws BuildException", "diff": ["+                    zOut.setUseLanguageEncodingFlag(useLanguageEncodingFlag);", "+                    zOut.setCreateUnicodeExtraFields(createUnicodeExtraFields);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc6d5d0eaab49334098726499ed33a4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "0325431a651427ea5019dd3a95afedb5b43cf00f", "commitAfterChange": "3b378ba6377a9fd26a2bc7052041b6f59e5beeaa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "       public void execute() throws BuildException", "signatureAfterChange": "       public void execute() throws BuildException", "diff": ["+        cmd.setFailonerror(\"true\");", "+        cmd.setTaskName( getTaskName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc8df97ffae4d6f3ae3e96c44527eaf0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "a6d4ce254b2cd963166a1ebe60a8b6188b9ba229", "commitAfterChange": "dcf31da592d1ef3c7fad80f729b83f500372bed9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+            ProjectHelper.setCurrentTargetPrefix(targetPrefix);", "+        } finally {", "+            ProjectHelper.setCurrentTargetPrefix(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd983848796100b33a68f8a4a522385", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/SchemaValidate.java", "commitBeforeChange": "d51eb9c34fd2ceb50ebf5f7361579d1c8fb2a557", "commitAfterChange": "b69245c4223aa35cb2cc78726cc277cae45f0db4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void addSchemaLocations()", "signatureAfterChange": "     protected void addSchemaLocations()", "diff": ["-        Iterator it = schemaLocations.iterator();", "+        Iterator it = schemaLocations.values().iterator();", "+            log(\"Adding schema \"+tuple,Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd4f8b81ac014bcae5bc8fefbac75427", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "b3ddeeaa0d25db8feff4ba62d43ad6487d4f1968", "commitAfterChange": "c0eecc68bbb2cfaa9d6b87479a7466df68928a3a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 52, "signatureBeforeChange": "     public void execute()              throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["+        //set up response file options", "+        command.setAutomaticResponseFileThreshold(AUTOMATIC_RESPONSE_FILE_THRESHOLD);", "+        command.setUseResponseFile(useResponseFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd91de543b55eeefdc2a0f6ddbee605d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "9e7f7bf7be75afb69a8c75d1accd0710e1fba334", "commitAfterChange": "d9068e8df8cfe332db108010ea61bc049844ad44", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "     protected void sendFile(FTPClient ftp, String dir, String filename)          throws IOException, BuildException", "signatureAfterChange": "     protected void sendFile(FTPClient ftp, String dir, String filename)          throws IOException, BuildException", "diff": ["-                    doSiteCommand(ftp, \"chmod \" + chmod + \" \" + filename);", "+                    doSiteCommand(ftp, \"chmod \" + chmod + \" \" + resolveFile(filename));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bded39ea6f15668b1e1ce6ddf7727143", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "9d16acee8e2a3efe496ca84770b0af5f66f81c28", "commitAfterChange": "e79b77b82bf060be1189b42e7ade80735101570e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected Commandline setupRmicCommand(String[] options)", "signatureAfterChange": "     protected Commandline setupRmicCommand(String[] options)", "diff": ["+        cmd.addArguments(attributes.getCurrentCompilerArgs());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5542609a6cb5d1753a4b95c63c49b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "7a3141d68349b9906bbb2c5d54ee1bc0dbee4fa5", "commitAfterChange": "270295d73494d238d3675cffdfe6fcd5e7b5f87f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void transform() throws BuildException", "signatureAfterChange": "      public void transform() throws BuildException", "diff": ["-            throw new BuildException(\"Errors while applying transformations\", e);", "+            throw new BuildException(\"Errors while applying transformations: \"", "+                + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb3ffbae85c638aa4fb1f10768f057b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "2a816a5361ec39c8693a6a4bbac559ffe5948c6e", "commitAfterChange": "f2d32ac66d804c5dfeb14adcfa0ab31ff8f648e8", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 101, "signatureBeforeChange": "         public int getAction()", "signatureAfterChange": "         public int getAction()", "diff": ["+            } else if (actionL.equals(\"site\")) {", "+                return SITE_CMD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c061b6bf7876aa2d4c73c7434286dad9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "08ee283e413328452727333c6faf761a909d5662", "commitAfterChange": "476678d4a660bd6077ae4a8389cc29f42fbde0c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void setAttribute(String name, String value)", "signatureAfterChange": "     public void setAttribute(String name, String value)", "diff": ["-        if (name.equalsIgnoreCase(ANT_TYPE)) {", "+        if (name.equalsIgnoreCase(ProjectHelper.ANT_TYPE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0bacf75b1b574f9875fe81f20792d86", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Description.java", "commitBeforeChange": "d81308747b0601b3f82c5621b6cc218135243028", "commitAfterChange": "3d867eee2e54bed60ba1ef28af554501622d6c5b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static String getDescription(Project project)", "signatureAfterChange": "     public static String getDescription(Project project)", "diff": ["-        StringBuffer description = new StringBuffer();", "+        if (targets == null) {", "+            return null;", "+        }", "+        StringBuffer description = new StringBuffer();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c130cb33af1b040aeeaaacff08fa99e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "dea3b5a66a03d45bf0eb0eb81a35cd184f2fc4bf", "commitAfterChange": "6a3d5030bb4a0e4e05944e6c906881bd047fa5c5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "signatureAfterChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "diff": ["+        long lastModified = jarSource.lastModified();", "+", "+        // restore the lastModified attribute", "+        if (preserveLastModified) {", "+            if (jarTarget != null) {", "+                jarTarget.setLastModified(lastModified);", "+            } else {", "+                jarSource.setLastModified(lastModified);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1613fca3e10b8d2a620417053807796", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "579a1f76bd6eff87405967c4fe523ffe4d9342bb", "commitAfterChange": "803fb00df9e066be53b6bca73efea6fe0d8a83ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setSrcFile(String srcFileName)", "signatureAfterChange": "     public void setSrcFile(String srcFileName)", "diff": ["+        //save the string name of the file", "+        //and save the file", "+        wsdl.setFile(getProject().resolveFile(srcFileName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1940401d947b40c554c61b4b4187730", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "3838c6ba287baf4bb3566ed47b0c99840b7ebba8", "commitAfterChange": "a679a5bbce605a1e4326d56030baeecb3a1bf4b7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         private void checkRemoteSensitivity(FTPFile[] array, String directory)", "signatureAfterChange": "         private void checkRemoteSensitivity(FTPFile[] array, String directory)", "diff": ["+            if (array == null) {", "+                return;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c233411378ecf2725a1c4c6b673f3a3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "360b474c6c66c9d224a16e357090085bfd9eeab4", "commitAfterChange": "a202ce4f88421e701923b8ee29781de3d652dc5f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void zipDir(File dir, ZipOutputStream zOut, String vPath)         throws IOException", "signatureAfterChange": "      protected void zipDir(File dir, ZipOutputStream zOut, String vPath)         throws IOException", "diff": ["-        if (dir != null) ze.setTime (dir.lastModified ());", "+        if (dir != null && dir.exists()) {", "+            ze.setTime(dir.lastModified());", "+        } else {", "+            ze.setTime(System.currentTimeMillis());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38096c524d43427ed86d9a1cbbe2cf4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/depend/ClassfileSet.java", "commitBeforeChange": "9d15809c91e3a318ed798a929438ec1d8148b29c", "commitAfterChange": "1c24c78ca5605e5ffd84b67673207b4769e4fc41", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["+        DirectoryScanner parentScanner = super.getDirectoryScanner(p);", "+        DependScanner scanner = new DependScanner(parentScanner);", "+            scanner.addBasedir(additionalRootSet.getDir(p));", "-        DirectoryScanner parentScanner = super.getDirectoryScanner(p);", "-        DependScanner scanner = new DependScanner(parentScanner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3997837c2ab27aca2096ce9c1c0144f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "f6516eea38526e617335ce6b8233a27410ea4caf", "commitAfterChange": "db412627e12283e6f51b8e502074b096ac9ff0e1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void tearDown() throws Exception", "signatureAfterChange": "     protected void tearDown() throws Exception", "diff": ["+        if (project == null) {", "+            /*", "+             * Maybe the BuildFileTest was subclassed and there is", "+             * no initialized project. So we could avoid getting a", "+             * NPE.", "+             * If there is an initialized project getTargets() does", "+             * not return null as it is initialized by an empty", "+             * HashSet.", "+             */", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c39f32855fba6cd51c92b6bbd222986a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/JUnitHelper.java", "commitBeforeChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "commitAfterChange": "283bade37c87f86c92763234e886a69eb55cb47d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static Test getTest(Class clazz)", "signatureAfterChange": "     public static Test getTest(Class clazz)", "diff": ["+", "+        // check if it is really a valid testcase", "+        int modifiers = clazz.getModifiers();", "+        if ( !Modifier.isPublic(modifiers) ||", "+                Modifier.isAbstract(modifiers) ||", "+                !TestCase.class.isAssignableFrom(clazz)) {", "+            return null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3e632e14357169bf67130cf4bdfb992", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "2efc45999181f493c8438ae9a50b9d61ae085f8f", "commitAfterChange": "ff8b6709bcf07f12efecc3625f5e1665e7ddf34d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Object finishConfiguration( final ConfigurationState state )         throws ConfigurationException", "signatureAfterChange": "     public Object finishConfiguration( final ConfigurationState state )         throws ConfigurationException", "diff": ["-            if( defState.getCreatedObject( i ) != null )", "+            if( null != defState.getCreatedObject( i ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4202caa341dda39357d50d1461781d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "8c97911720b40557d78672245bc2e7f724917297", "commitAfterChange": "8c3b761ae7f9c5d9f581145a1eb51f75ecc178c8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void addVendorFiles(Hashtable ejbFiles, String baseName)", "signatureAfterChange": "     protected void addVendorFiles(Hashtable ejbFiles, String baseName)", "diff": ["+            log(\"Unable to locate weblogic deployment descriptor. It was expected to be in \" + ", "+                weblogicDD.getPath(), Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ed5234cbb1d04960e688d7b195a5a2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "da516c73ec7b674394d5fd7a8df96d93c21f411f", "commitAfterChange": "d44807f593435cc95f2db2ddef3553166dc61226", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public static String getElementName(Project p, Object o, boolean brief)", "signatureAfterChange": "     public static String getElementName(Project p, Object o, boolean brief)", "diff": ["-            p = getProject(o);", "+            p = Project.getProject(o);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c69d887fb8f185d1d6ad606d8a727fc7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "f844348eff346280acc9d922bfacf5c99668ac4a", "commitAfterChange": "1a4946cfd6c88cd17f387b99634ab859dbbea692", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void positionAtCentralDirectory64()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory64()         throws IOException", "diff": ["-        skipBytes(ZIP64_EOCDL_LOCATOR_OFFSET);", "+        skipBytes(ZIP64_EOCDL_LOCATOR_OFFSET", "+                  - WORD /* signature has already been read */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e8383f806ba9686f8f16fe8c9c23cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "780ad2d725a7f88a26d8ea33a804fa5c8becfc8f", "commitAfterChange": "31deeb980977afb1cfe3234eb17a1360aab49d5e", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "     private Method findMatchingMethod(Class paramClass, List methods)", "signatureAfterChange": "     private Method findMatchingMethod(Class paramClass, List methods)", "diff": ["+        if (paramClass == null) {", "+            return null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e94057103ab5d8e462979df5623b8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "198880a644437e0cfb31cb65ee56c3d2d1b2d858", "commitAfterChange": "886b552945335892847014988cfe6c7f40985684", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public String getClassname()", "signatureAfterChange": "     public String getClassname()", "diff": ["+     */", "-        return javaCommand.getExecutable();", "+        if (!executeJar) {", "+            return javaCommand.getExecutable();", "+        }", "+        return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84816d6455db5421d16b7a9005677fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "9b8fa0748f63b3fa68ff20eb449699eaf1c6432f", "commitAfterChange": "834d0d120161d495fd02545d0380d5a83b6f0e54", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "          private URLConnection openConnection(URL aSource) throws IOException", "signatureAfterChange": "          private URLConnection openConnection(URL aSource) throws IOException", "diff": ["+            // Set the user agent", "+            connection.addRequestProperty(\"User-Agent\", this.userAgent);", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8c38a0e3a3deca77329edb808b6dc30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "a76cf99ddd94c4f3dab97c8d4cfbfff492ae4899", "commitAfterChange": "76455a35cb894dde4142555892bb30a4cee495f1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "signatureAfterChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "diff": ["+            zOut.setUseZip64(getZip64Mode().getMode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94b8ea9b374dc62ef3b8a6afbdddf3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "51f92f3d6dc03f364e937caa3aee64bb2f67a81d", "commitAfterChange": "17841320a3e3dda9366a97444cc8830ac952acf0", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     private long getTimeDiff(FTPClient ftp)", "signatureAfterChange": "     private long getTimeDiff(FTPClient ftp)", "diff": ["-                    returnValue = remoteTimeStamp - localTimeStamp;", "+                    returnValue = localTimeStamp - remoteTimeStamp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafca33d225793d2c29f36d6403b54f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "1c38f4ed52ca23857b7b83ca909cd1748dea88d6", "commitAfterChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setBackups(boolean backups)", "signatureAfterChange": "     public void setBackups(boolean backups)", "diff": ["-        backup = backups;", "+        if (backups) {", "+            cmd.addValue(\"-b\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb9b066ee4422f504fd4e943daa855e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "commitAfterChange": "24eb5693d6b7363262ea941cac63d15230aa1aab", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "diff": ["-                        throw new BuildException(\"Could not find default manifest: \" + defaultManifest,", "-                                                  getLocation());", "+                        throw new BuildException(\"Could not find \"", "+                            + \"default manifest: \" + defaultManifest);", "-                            entryName = entryName.substring(0, entryIndex) + File.separatorChar + innerfiles[i];", "+                            entryName = entryName.substring(0, entryIndex)", "+                                + File.separatorChar + innerfiles[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf477eca726097b03eafc2c330138685", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "9174fbde3b63fde69fee83a681d22301f7aa7a02", "commitAfterChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "       public void setMaxmemory(String src)", "signatureAfterChange": "       public void setMaxmemory(String max)", "diff": ["-    public void setMaxmemory(String src){", "-        maxmemory = src;", "+    public void setMaxmemory(String max){", "+        if(javadoc1){", "+            cmd.createArgument().setValue(\"-J-mx\" + max);", "+        } else{", "+            cmd.createArgument().setValue(\"-J-Xmx\" + max);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4b4d4be622afa50eae104a451cbe53", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/ActionManager.java", "commitBeforeChange": "37b3d25cc8c65444ab2cbb5c0ff153dccf56c789", "commitAfterChange": "2d4bfedfb63f054542debd85410e53916fa502f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JMenuBar createMenuBar()", "signatureAfterChange": "     public JMenuBar createMenuBar()", "diff": ["-                if(action.isPreceededBySeparator() && ", "+                if(action.isPreceededBySeparator() &&", "-                    JCheckBoxMenuItem b = ", "+                    JCheckBoxMenuItem b =", "+", "+                    action.addPropertyChangeListener(", "+                        new PropertyWatcher(b));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d26cf845c69a973b47e47f39012cfa69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "aa83249a9156ead7ae2c5a7c591fd3e90ebf5d00", "commitAfterChange": "5a4fe63383258162c3374aebd048dee87efb4fd6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected boolean isUpToDate(File jarFile, File signedjarFile)", "signatureAfterChange": "     protected boolean isUpToDate(File jarFile, File signedjarFile)", "diff": ["-        if (null == jarFile && !jarFile.exists()) {", "+        if (null == jarFile || !jarFile.exists()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2923970c993405f3c1dae4111390fbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "4848c4503153606ff29c6a0548ec094eec904091", "commitAfterChange": "6e72d89be84e4a3b021e1d59f14a97d2f4959adc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     static String fromURIJava13(String uri)", "signatureAfterChange": "     public static String fromURIJava13(String uri)", "diff": ["-    static String fromURIJava13(String uri) {", "+    public static String fromURIJava13(String uri) {", "+            //consider adding the current directory. This is not done when", "+            //the path is a UNC name", "-            int posi = cwd.indexOf(\":\");", "-            if ((posi > 0) && path.startsWith(File.separator)) {", "-               path = cwd.substring(0, posi + 1) + path;", "+            int posi = cwd.indexOf(':');", "+            boolean pathStartsWithFileSeparator = path.startsWith(File.separator);", "+            boolean pathStartsWithUNC = path.startsWith(\"\" + File.separator + File.separator);", "+            if ((posi > 0) && pathStartsWithFileSeparator && !pathStartsWithUNC) {", "+                path = cwd.substring(0, posi + 1) + path;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a6b58b3948a1e988ae27b5b4f2159e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "187fb83b99846a20c0d9916ccc3a4ee4d8ce2e0d", "commitAfterChange": "01b5ce6c0360d48023fb083b7a2fb311c6901311", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void initializeProject()", "signatureAfterChange": "     private void initializeProject()", "diff": ["+        newProject.setInputHandler(getProject().getInputHandler());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2dcc6eb8f0e6009a6121b81991beedc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "69d9b9a49622889f44d6792faf00f886857828d6", "commitAfterChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-                    executeTask((Task) component);", "+                    execService.executeTask((Task) component);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d31f20c03f3a3938b60a783b31d118d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "82511dabe59fe3d2c1dfe916b5cda0566dbd33f1", "commitAfterChange": "de5e98ecea40d4b8fedb1980e9b8f97186160310", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        resourcesToDelete.setCache(true);", "+        filesetDirs.setCache(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d34d7c2054c670ab91dfd951d3d7fbcc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "1d600fe6da225ed331cf90bfcf836da4c90fecc8", "commitAfterChange": "7171341fc60cfd4d7cd4f92bda0778bf98c17094", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private ByteArrayOutputStream executeCommand(Session session, String cmd)         throws BuildException", "signatureAfterChange": "      private void executeCommand(Session session, String cmd, StringBuffer sb)         throws BuildException", "diff": ["-    private ByteArrayOutputStream executeCommand(Session session, String cmd)", "+    private void executeCommand(Session session, String cmd, StringBuffer sb)", "+            sb.append(out.toString());", "-", "-        return out;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4703842fe2bec103369121b04317181", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/impl/ProcessMonitor.java", "commitBeforeChange": "c4fd52dc5ba79475b7b5da06c3792d30534d2530", "commitAfterChange": "2b4f4a5945fb02365d506881aae29c48e99e3f4c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processStandardInput()", "signatureAfterChange": "     private void processStandardInput()", "diff": ["+            //Should we shutdown the processes input stream ?", "+            //Why not - at least for now", "+            IOUtil.shutdownStream( m_process.getOutputStream() );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d48e70e6933e62dd2c87d609176072e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "746437d82490f90c25ea7ad04b805b286183c5f4", "commitAfterChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["+                project.setUserProperty(MagicNames.ANT_FILE_TYPE,", "+                                        MagicNames.ANT_FILE_TYPE_FILE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c89cc40e305e503037f220e57bd6de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "184328a6053d43f95ce0a29e89c9314e50395f74", "commitAfterChange": "768bfa2bc695cbe0a6098add639d6c6ef5be8de1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private IntrospectionHelper(final Class bean)", "signatureAfterChange": "      private IntrospectionHelper(final Class bean)", "diff": ["+                nestedStorers.remove(propName);", "+                    nestedStorers.remove(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d53fe92150f5314dc639100add05ca4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "7ac5356019aca23d3d4deef18ce09bf05dfc0577", "commitAfterChange": "57f95d4cd27abbd37f514c49414101048834b28f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["-            // not sure whether this is clean, but this method is declared not to throw exceptions.", "-            throw new IllegalStateException(\"Could not convert URI to path\", exc);", "+            // not sure whether this is clean, but this method is", "+            // declared not to throw exceptions.", "+            throw new IllegalStateException(\"Could not convert URI to path: \"", "+                                            + exc.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d58d9a94e75e5605d4e6a5ab450898ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/LibraryDisplayer.java", "commitBeforeChange": "82c53b9911f43b2ac73e9b8cd3268d1929745ddd", "commitAfterChange": "420e7ff2b3e9b9abd9752ebd6dbcccf17558e512", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void displayLibrary( final File file )         throws BuildException", "signatureAfterChange": "     void displayLibrary( final File file )         throws BuildException", "diff": ["-        final Manifest manifest = getManifest( file );", "+        final Manifest manifest = ExtensionUtil.getManifest( file );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5bfe61afcf24d41ccaf5e83fe55eead", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/ChangeLog.java", "commitBeforeChange": "ded098d5399315e5cb057bf09a72c2142ad82965", "commitAfterChange": "6e56b4522ae86625e4e3a06921e52ec6326c1952", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void validate()         throws TaskException", "signatureAfterChange": "     private void validate()         throws TaskException", "diff": ["-        if( null == m_basedir )", "+        if( null == m_dir )", "-            final String message = REZ.getString( \"changelog.missing-basedir.error\" );", "-            throw new TaskException( message );", "+            m_dir = getContext().getBaseDirectory();", "-        if( !m_basedir.exists() )", "+        if( !m_dir.exists() )", "-                REZ.getString( \"changelog.bad-basedir.error\", m_basedir.getAbsolutePath() );", "+                REZ.getString( \"changelog.bad-basedir.error\", m_dir.getAbsolutePath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5d19c738ce3545836c46c70596cdb8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "126daf8b31f6c01d1c6891581195db9956142970", "commitAfterChange": "a898d14776143b295b706a5e38a2f979e753356d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void run()", "signatureAfterChange": "          public void run()", "diff": ["+    ", "-        PrintStream savedOut = null;", "+                    logTestListenerEvent(\"tests to run: \" + suite.countTestCases());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d607a1a357a7b1b17edee1ed1f056db5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "9ac67d6188931292f7b0b37155ce0d78ee237dee", "commitAfterChange": "991ce3f2316ac2f0f40d44f515f885ad7908d4bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["-                return f.getAbsolutePath();", "+                //bug #42227 forgot to decode before returning", "+                return decodeUri(f.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70307613a3b7cf57c0269337fbec8b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "b36b5456d78cf204ed670b6a04a491d4e16beb34", "commitAfterChange": "729aa048f35944987ac79cf8b05b05a2be3f9cb1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["+                if (!followSymlinks && isSymlink(basedir, currentelement)) {", "+                    continue;", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d76b719862bcc62b97c770c54f4b1dc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "c8d4ba2393fab9703138171f5d63efa34cbc37e8", "commitAfterChange": "2bf9f10a860d6519b1247e6f7f5487c193c584b3", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void execute()          throws BuildException", "signatureAfterChange": "     public void execute()          throws BuildException", "diff": ["-                log(ACTION_STRS[action] + \" files\");", "+                log(ACTION_STRS[action] + \" \" + ACTION_TARGET_STRS[action]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9867e8e2bc52562701994939ded1967", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DOMElementWriter.java", "commitBeforeChange": "a29e1aaf138cf3bc63dd4adf70604c95ff8ca64f", "commitAfterChange": "a623bba85d5af41104d951e50e313c23d4eee081", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void write(Element element, Writer out, int indent,                        String indentWith)         throws IOException", "signatureAfterChange": "     public void write(Element element, Writer out, int indent,                        String indentWith)         throws IOException", "diff": ["-                out.write(((Text)child).getData());", "+                out.write(encodedata(((Text)child).getData()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9cf786b257f378a6237b1010045ef71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "0768b9b643d6d2d43505fd7783cacbae5289952b", "commitAfterChange": "393113dc694cc660bc667bdc9cf709a585bba5d7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "signatureAfterChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "diff": ["-        Object o = recorderEntries.get(name);", "+        Hashtable entries = (Hashtable) recorderEntries.get(proj);", "+        if (null == entries) {", "+            entries = new Hashtable();", "+            recorderEntries.put(proj, entries);", "+        }", "+        Object o = entries.get(name);", "-            recorderEntries.put(name, entry);", "+            entries.put(name, entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d9bfe2a5b1c8004bbc000883188119", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "3cf51fd6de4c0e38cc3550766a1cff82c4a1d441", "commitAfterChange": "0c2d03d031ecacd79ea8d77cd88b8428e84a3c7c", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message)", "signatureAfterChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message)", "diff": ["-                JUnitTaskMirror.JUnitResultFormatterMirror formatter = ", "+                JUnitTaskMirror.JUnitResultFormatterMirror formatter =", "-                        addVmExit(test, formatter, out, message);", "+                        delegate.addVmExit(test, formatter, out, message);", "-                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f = ", "+                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "-                addVmExit(test, f, getDefaultOutput(), message);", "+                delegate.addVmExit(test, f, getDefaultOutput(), message);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db627354fe301250913b4be80bcc9d6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java", "commitBeforeChange": "3f8c6d6ac425fa9d493d0eae88d3baf8e422d694", "commitAfterChange": "509ae3e1f5c437d38231e2d2b84b5aad0d52e5f7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         UnmatchedFileMap init(java.io.File localFolder, Folder remoteFolder)", "signatureAfterChange": "         UnmatchedFileMap init(java.io.File localFolder, Folder remoteFolder)", "diff": ["-", "+            // PR 31965 says that it can return null", "+            if (localFiles == null){", "+                return this;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb1ffe4b306aa46c3f73aea5c40fc36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "9174fbde3b63fde69fee83a681d22301f7aa7a02", "commitAfterChange": "c2077d52ddbe15f9357e4609f78f6cd8187b0365", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void setadditionalParam(String src)", "signatureAfterChange": "      public void setAdditionalparam(String add)", "diff": ["-    public void setadditionalParam(String src){", "-        additionalParam = src;", "+    public void setAdditionalparam(String add){", "+        cmd.createArgument().setValue(add);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4389db9f2bd5e81d46dd46236a5989", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "2f546331b3ac116789f736919ea35c17d069e5ed", "commitAfterChange": "989be3547827d3e3bbfb89f2f245f997689bba56", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void process(File baseDir,String xmlFile,File destDir)         throws BuildException", "signatureAfterChange": "     private void process(File baseDir, String xmlFile, File destDir,                           long styleSheetLastModified)         throws BuildException", "diff": ["-    private void process(File baseDir,String xmlFile,File destDir)", "-        throws BuildException", "-    {", "+    private void process(File baseDir, String xmlFile, File destDir, ", "+                         long styleSheetLastModified)", "+        throws BuildException {", "+", "-\t    if (inFile.lastModified() > outFile.lastModified()) {", "+\t    if (inFile.lastModified() > outFile.lastModified() ||", "+                styleSheetLastModified > outFile.lastModified()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc92fe592f5d136b56b5d83fe7e07246", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "934dd104d6ba39b0bc1dc88ee5bc79e61902585a", "commitAfterChange": "cfb2e01084b28b0f9d4617a97307cd61ec59dd4e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": "      private void printWarnings(SQLWarning warning, boolean force)         throws SQLException", "signatureAfterChange": "      private void printWarnings(SQLWarning warning, boolean force)         throws SQLException", "diff": ["+        if (initialWarning != null) {", "+            setWarningProperty();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde31fcedb3e7a62972afd2bcb71e10d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tstamp.java", "commitBeforeChange": "bad48b6b7913f77ac7b8507475087ac126250bce", "commitAfterChange": "4c8ebdb4898358e956a8b82fd4c5b3d11b657746", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "                  public void setProperty(String propertyName)", "signatureAfterChange": "                  public void setProperty(String propertyName)", "diff": ["-            this.propertyName = propertyName;", "+            this.propertyName = prefix + propertyName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfaabd9e20f2cc0f16db51bd6ee5a8d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Task.java", "commitBeforeChange": "ce90a68baa15d70b4be12531837cf4d1850691e0", "commitAfterChange": "4f98ab89b6dbdd6bb5d3d38d7a3c751282dc2dea", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void maybeConfigure() throws BuildException", "signatureAfterChange": "     public void maybeConfigure() throws BuildException", "diff": ["-        if (wrapper != null) {", "-            wrapper.maybeConfigure(project);", "+        if (!invalid) {", "+            if (wrapper != null) {", "+                wrapper.maybeConfigure(project);", "+            }", "+        } else {", "+            getReplacement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc374b5baedb8bd60c4f5e60c89192b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ProcessDestroyer.java", "commitBeforeChange": "a3eef60027b7a7142377c38988529bb152540c0f", "commitAfterChange": "198cca7aa68c3d73f41cea3d673fc07e0009c7b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean add(Process process)", "signatureAfterChange": "     public boolean add(Process process)", "diff": ["-        processes.addElement(process);", "-        return processes.contains(process);", "+        synchronized(processes){", "+            // if this list is empty, register the shutdown hook ", "+            if(processes.size() == 0){", "+                addShutdownHook();", "+            }", "+            processes.addElement(process);", "+            return processes.contains(process);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e064b63c780e955b4af58d8229edc628", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/customizer/DynamicCustomizer.java", "commitBeforeChange": "c87973d59c91244a8656cdc2ac5c1d84f9d47f34", "commitAfterChange": "dba8c836d0d1bd4f625deb9fb22aaa457410e4ea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public int compare(Object o1, Object o2)", "signatureAfterChange": "         public int compare(Object o1, Object o2)", "diff": ["-                return 0;", "+                return p1.getName().compareTo(p2.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1fed1c80f30095b0b09fc7c20f45d26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipUtil.java", "commitBeforeChange": "ec877a5787e2a356246fdd8f405025ca4e2eed73", "commitAfterChange": "803f9c877e38830d1e24188e5240fb8d56bd5468", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static long dosToJavaTime(long dosTime)", "signatureAfterChange": "     public static long dosToJavaTime(long dosTime)", "diff": ["+        cal.set(Calendar.MILLISECOND, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e224db9a37f17ff01a40acdd0928a080", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PumpStreamHandler.java", "commitBeforeChange": "5a6247d496855302f131c8b8a0bb74e652ea050a", "commitAfterChange": "1b30eea4620f697369cb2948254e5ad7fac5fe99", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected final void finish(Thread t)", "signatureAfterChange": "     protected final void finish(Thread t)", "diff": ["+        if (t == null) {", "+            // nothing to terminate", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3070f8aa96a8c6c862071673bf2c96d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/customizer/StringPropertyEditor.java", "commitBeforeChange": "44ae47f5c64def4c4895bd61fdc08258c0854dc9", "commitAfterChange": "c87973d59c91244a8656cdc2ac5c1d84f9d47f34", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setValue(Object value)", "signatureAfterChange": "     public void setValue(Object value)", "diff": ["+        if(value == null) {", "+            value = \"\";", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e335c3b6c64d990a63c8b64a0385009f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "5c2af90369a64d60eaaca8c1a47176fc42747256", "commitAfterChange": "fdc903238f666ea1f4f60385d40463c8ca3494d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["+     */", "-                               String entryName,", "-                               Date entryDate, boolean isDirectory)", "+                               String entryName, Date entryDate,", "+                               boolean isDirectory, FileNameMapper mapper)", "-        File f = fileUtils.resolveFile(dir, entryName);", "+        String[] mappedNames = mapper.mapFileName(entryName);", "+        if (mappedNames == null || mappedNames.length == 0) {", "+            mappedNames = new String[] { entryName };", "+        }", "+        File f = fileUtils.resolveFile(dir, mappedNames[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3dd3a930f4e9f43ce019f94a7ae7741", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "9f82a6d393073abd53130177d1aa5813424a9188", "commitAfterChange": "fc0f7222fbba3f04ccb19afe7d7d3f305b6e76ea", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public boolean supportsNestedElement(String parentUri, String elementName)", "signatureAfterChange": "     public boolean supportsNestedElement(String parentUri, String elementName)", "diff": ["-            && (uri.equals(parentUri) || uri.equals(\"\")))", "+            && (uri.equals(parentUri) || \"\".equals(uri)))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56b5e33bc0c77425df550b9d5ba2f9c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/ResourceOutputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testzipentryoutput()", "signatureAfterChange": "      @Test     public void testzipentryoutput()", "diff": ["+    @Test", "-        z.setProject(getProject());", "+        z.setProject(project);", "-        File f = getProject().resolveFile(\"foo\");", "+        File f = project.resolveFile(\"foo\");", "+            //TODO assert exception message"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6167835637b665fe07a4f8f63312479", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "96e6561e659a24f1e2122d884e83561327cb0f48", "commitAfterChange": "88dcebf815f27d9b16735745605342963870010e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void reset()", "signatureAfterChange": "     public void reset()", "diff": ["+        forceOverwrite = true;", "-        fileSets = new Vector();", "+        sources.removeAllElements();", "+        sourceFiles.removeAllElements();", "+        filterChains = null;", "+        footer = null;", "+        header = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79ba8abe6f90e111a807783ebc54b66", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exit.java", "commitBeforeChange": "24f8b28b01f7bfafc80b7386f2eb2cea71c858e1", "commitAfterChange": "e6688723b86844252698db4b78f376ed7d614709", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addText(String msg)", "signatureAfterChange": "     public void addText(String msg)", "diff": ["+        if(message==null) {", "+            message=\"\";", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b41313b9ab4a17f35633c2440d0d1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "40c79e53546eefa381c645fced7002592524a951", "commitAfterChange": "b0bdced687d02b5b68c19b2c7bf9bccb2724b802", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["-                if (!dir.exists()) {", "+                if (!dir.exists() && errorOnMissingDir) {", "-                if (!dir.isDirectory()) {", "+                if (!dir.isDirectory() && dir.exists()) {", "+                ds.setErrorOnMissingDir(errorOnMissingDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cd9c1a5bd6a04b760655146dc69e50", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSDocumentType.java", "commitBeforeChange": "53ddc59eccb9ca398bcc74db1fc1577bde5b7d45", "commitAfterChange": "4c0c12c0f70aab990d7aefae3ab82d92d24c7cef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public DtdElement findElement(String name)", "signatureAfterChange": "     public DtdElement findElement(int elementType, String name)", "diff": ["-    public DtdElement findElement(String name) {", "-        return (DtdElement) elementMap.get(name);", "+    public DtdElement findElement(int elementType, String name) {", "+        if (elementType == OPTIONAL_ELEMENT) {", "+            return (DtdElement) optionalElementMap.get(name);", "+        }", "+        return (DtdElement) coreElementMap.get(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e82bacec6cdde5eb83594e0ec7f86711", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/PropertyEditor.java", "commitBeforeChange": "8f7d91aacd3823ed8a447f714d2a3d97ca69518e", "commitAfterChange": "11b6cebd071bd1851cd57916525ea5ec386dbf79", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void updateDisplay(ACSElement[] items)", "signatureAfterChange": "     private void updateDisplay(ACSElement[] items)", "diff": ["+            _customizer.removePropertyChangeListener(_forwarder);", "+                _customizer.addPropertyChangeListener(_forwarder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f615248ab819988b160e0e517e9a48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/vfile/CopyFilesTask.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-                m_destFile.copy( m_srcFile );", "+                m_destFile.copyFrom( m_srcFile, FileConstants.SELECT_SELF );", "-                    destFile.copy( srcFile );", "+                    destFile.copyFrom( srcFile, FileConstants.SELECT_SELF );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94b2b749eca92c83ca8ecbd0ae832e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "18ba15abaf97cccb2294e9165916c8ce4d10af61", "commitAfterChange": "dd6f766ed86ed77f26790eb50e0073647d2cc652", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-                throw new BuildException(\"Source file does not exist.\");", "+                throw new BuildException(\"Source file does not exist :\"+srcFile);", "-                throw new BuildException(\"Source file is not a file.\");", "+                throw new BuildException(\"Source file is not a file :\"+srcFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa18b9a6da921f118995f05bc696c7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "a6bebc97c61c6d0039e75db487c0220f726a71c7", "commitAfterChange": "a00fa243becff6d062b1e9491d7cada4c552c3ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main( final String[] args )", "signatureAfterChange": "     public static void main( final String[] args )", "diff": ["+        main.setLogger( LogKit.getLoggerFor( \"default\" ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb0439f674765eafe0ee1c42817b8f8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ImportTest.java", "commitBeforeChange": "5a45e0117fd3b5b69d7f50678ea82c547d24f8e6", "commitAfterChange": "71333195c9d57d80d1a44cd8362a641c62d5e214", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testSymlinkedImports() throws Exception", "signatureAfterChange": "      public void testSymlinkedImports() throws Exception", "diff": ["-        if (Runtime.getRuntime().exec(new String[] {ln, \"-s\", \"d3a\", symlink}).waitFor() != 0) {", "+        File symlinkFile = new File(System.getProperty(\"root\"), symlink);", "+        if (Runtime.getRuntime().exec(new String[] {ln, \"-s\", \"d3a\", symlinkFile.getAbsolutePath()}).waitFor() != 0) {", "-                new File(\"src/etc/testcases/taskdefs/import/symlinks/d2/p2.xml\")", "+                new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/import/symlinks/d2/p2.xml\")", "-                new File(\"src/etc/testcases/taskdefs/import/symlinks/d3b/p3.xml\")", "+                new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/import/symlinks/d3b/p3.xml\")", "-            new File(symlink).delete();", "+            symlinkFile.delete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb84ed1ce7f6ad1f6cd77d966f429408", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "1c38f4ed52ca23857b7b83ca909cd1748dea88d6", "commitAfterChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setReverse(boolean r)", "signatureAfterChange": "     public void setReverse(boolean r)", "diff": ["-        reverse = r;", "-    }", "+        if (r) {", "+            cmd.addValue(\"-R\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec963a34004b44b6b150f76f0cc7def2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Resource.java", "commitBeforeChange": "47b6202445e14bb51602a411a77b778e9aafa750", "commitAfterChange": "8b432916d58da1e110988661c8febfde91d523a7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public int hashCode()", "signatureAfterChange": "     public int hashCode()", "diff": ["-        return MAGIC * (name == null ? name.hashCode() : NULL_NAME);", "+        return MAGIC * (name == null ? NULL_NAME : name.hashCode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee34526ff3d9342c456196d644146b82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DesirableFilter.java", "commitBeforeChange": "c73084faf5d4b9c3a7b6d692908200303dc21d02", "commitAfterChange": "ea21f122ab7f20196ffe7e065fe5ac2b0d194df3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean accept(File dir, String name)", "signatureAfterChange": "      public boolean accept(File dir, String name)", "diff": ["+        // Visual Source Save", "+        if (name.equals(\"vssver.scc\")) {", "+            return false;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef073c06dff6355c317e352a6533dd3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/type/DefaultTypeManager.java", "commitBeforeChange": "b689612fa923ba74b5c89dc891aeff801799e555", "commitAfterChange": "6b4ce7ff5608d4faf76cf400854db8126b946fbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void registerType( final String role,                                final String shorthandName,                                final ComponentFactory factory )          throws Exception", "signatureAfterChange": "      public void registerType( final String role,                                final String shorthandName,                                final ComponentFactory factory )          throws Exception", "diff": ["-        final TypedComponentSelector selector = createSelector( role );", "+        final TypedComponentSelector selector = createSelector( role + \"Selector\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef226f22bd85db4ba5fd7490e0d80c38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "f61b5370fad83ccdfd40c92c17bf3ec7e40bc9cb", "commitAfterChange": "386d0634b9231190eb9b57509c7cccb74d8cc935", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void loadResourceMap(FileInputStream ins) throws BuildException", "signatureAfterChange": "     private void loadResourceMap(FileInputStream ins) throws BuildException", "diff": ["-                if (line.trim().length() > 1 &&", "-                   ('#' != line.charAt(0) || '!' != line.charAt(0))) {", "+                if (line.trim().length() > 1 && '#' != line.charAt(0) && '!' != line.charAt(0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0894441ee42912b57ba02a2fcd2647a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "e456ce937cce94208803bd7583170c2c1ae08e62", "commitAfterChange": "3b41e256ee0e91ff17233b4b046d3a712433b245", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          protected void nextLine()             throws BuildException", "signatureAfterChange": "          protected void nextLine()             throws BuildException", "diff": ["+                    reader.mark(2);", "+                    default:", "+                        reader.reset();", "+                        break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d4174f4a4bd0dd45fdd85ebcd75d1f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "4575bd58e182d5c8263e9df7d3469619b80a5167", "commitAfterChange": "456488aec5a5d7fdc7b7b185b81c33fdfd1f8ec5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (includeEmpty) {", "+            if (includeEmpty && fs.getDir().isDirectory()) {", "-        if (usedMatchingTask && dir != null) {", "+        if (usedMatchingTask && dir != null && dir.isDirectory()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f503508ddb954e635e04c82cc5e6e88d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "ffeb30bccea8adf4b543ae90b214734bdcb95ced", "commitAfterChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         private void checkRemoteSensitivity(FTPFile[] array, String directory)", "signatureAfterChange": "         private void checkRemoteSensitivity(FTPFile[] array, String directory)", "diff": ["-                if (array[icounter].isDirectory()) {", "+                if (array[icounter] != null && array[icounter].isDirectory()) {", "-                            if (array[pcounter].getName().equals(target) && pcounter != icounter) {", "+                            if (array[pcounter] != null && pcounter != icounter && target.equals(array[pcounter].getName()) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5134925d718908ca8b38b30d14eb6c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/FixCrLfFilter.java", "commitBeforeChange": "542b70895427be00e141501561beff3abc74fb69", "commitAfterChange": "7721d8606c4851118b97023e5d340409ccc36e7c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "          CrLf resolve()", "signatureAfterChange": "          CrLf resolve()", "diff": ["-            if (this.equals(CR) || this.equals(UNIX)) {", "+            if (this.equals(CR) || this.equals(MAC)) {", "-            if (this.equals(LF) || this.equals(MAC)) {", "+            if (this.equals(LF) || this.equals(UNIX)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f4a96719d0d0d0a397c5d11288cbbb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/ServerElement.java", "commitBeforeChange": "b67ae6c688226d321ac153e6a76b5283d190bb24", "commitAfterChange": "634dbf216a19f77ea83a06b66a5798e5dca2bb41", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            server.shutdown();", "+        } finally {", "+            server.shutdown();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f65e4a3fce36c39a8f3c04e27b28d1e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/CVSPass.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public CVSPass()", "signatureAfterChange": "     public CVSPass()", "diff": ["-        passFile = new File(System.getProperty(\"user.home\") + \"/.cvspass\");", "+        passFile = new File(", "+            System.getProperty(\"cygwin.user.home\",", "+                System.getProperty(\"user.home\"))", "+            + File.separatorChar + \".cvspass\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66ed13610086bcbbeb7a3c8ac58f60b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "83dc385bd01fbc8ee2fb166b9a5605bdc6958d76", "commitAfterChange": "bf844382c856f7b51c56024189c93f11d34cb720", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setStandardLibraries(Map standardLibs)          throws ExecutionException", "signatureAfterChange": "     protected void setStandardLibraries(Map standardLibs)          throws ExecutionException", "diff": ["-            if (libraryId.startsWith(ANT_LIB_PREFIX)) {", "+            if (libraryId.startsWith(Constants.ANT_LIB_PREFIX)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f67b807fa7fac94e13b13dc92afb826c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/launch/LocatorTest.java", "commitBeforeChange": "422d55a338cb9c45364aad4d3e2b5a515340cbb1", "commitAfterChange": "c4176305c366227881f051e9352a3184209843a1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void assertResolved(String uri, String expectedResult, String result)", "signatureAfterChange": "      private void assertResolved(String uri, String expectedResult, String result, boolean condition)", "diff": ["-    private void assertResolved(String uri, String expectedResult, String result) {", "-        assertEquals(\"Expected \"+uri+\" to resolve to \\n\"+expectedResult+\"\\n but got\\n\"+result+\"\\n\",", "+    private void assertResolved(String uri, String expectedResult, String result, boolean condition) {", "+        if(condition && expectedResult!=null && expectedResult.length()>0) {", "+            assertEquals(\"Expected \"+uri+\" to resolve to \\n\"+expectedResult+\"\\n but got\\n\"+result+\"\\n\",", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69369042cd1ccf89bfe4b02db79aecb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "b6aa5cb51bdda93227078551d5f60dd8ed03cac5", "commitAfterChange": "bc22c6a47f0681744eca8a7bb8f7ffd116049415", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void endBlock() throws IOException", "signatureAfterChange": "      private void endBlock() throws IOException", "diff": ["+        // If the stream was empty we must skip the rest of this method.", "+        // See bug#32200.", "+        if (last == -1) {", "+\t    return;", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69714f4065e21ab2221a86bdbc396d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "1c4bde9df432fb6c2123228896f4b2f8d9029bec", "commitAfterChange": "22bdc578fccd792a5e254f068715464deef89765", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "     public void setShortMonthNamesConfig(String shortMonthNames)", "signatureAfterChange": "     public void setShortMonthNamesConfig(String shortMonthNames)", "diff": ["-        this.shortMonthNamesConfig = shortMonthNames;", "-        configurationHasBeenSet();", "+        if (shortMonthNames != null && !shortMonthNames.equals(\"\"))", "+        {", "+            this.shortMonthNamesConfig = shortMonthNames;", "+            configurationHasBeenSet();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d4f9b0703b8e7bfc74e43b9ca8f40d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/GenerateKey.java", "commitBeforeChange": "8785091ee1c92874c44324f0429765539987b048", "commitAfterChange": "c9928eaad1f371f18ecae2b487a5328b315b5790", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public void execute() throws BuildException", "signatureAfterChange": "       public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"The genkey task is only available on JDK versions 1.2 or greater\");", "+            throw new BuildException( \"The genkey task is only available on JDK\" +", "+                                      \" versions 1.2 or greater\" );", "-            throw new BuildException(\"alias attribute must be set\");", "+            throw new BuildException( \"alias attribute must be set\" );", "-            throw new BuildException(\"storepass attribute must be set\");", "+            throw new BuildException( \"storepass attribute must be set\" );", "-            throw new BuildException(\"dname must be set\");", "+            throw new BuildException( \"dname must be set\" );", "-\t\tsb.append(\"-alias \\\"\");", "-\t\tsb.append(alias);", "-\t\tsb.append(\"\\\" \");", "+        sb.append(\"-alias \\\"\");", "+        sb.append(alias);", "+        sb.append(\"\\\" \");", "-\t\t    sb.append(\"-keystore \\\"\");", "+            sb.append(\"-keystore \\\"\");", "-\t\t\tsb.append(\"\\\" \");", "+            sb.append(\"\\\" \");", "-\t\tsb.append(\"-keypass \\\"\");", "+        sb.append(\"-keypass \\\"\");", "-\t\telse {", "+        else {", "-\t\t}", "-\t\tsb.append(\"\\\" \");", "+        }", "+        sb.append(\"\\\" \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73c12aaee1c36ce137413fb27a8d288", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "5c43f6c93edfa3d34075b59a4ae199eb7257dab9", "commitAfterChange": "778a6800cfdfe174d4e21108400d4827124dadac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void onRunStarted(TestRunEvent evt)", "signatureAfterChange": "      public void onRunStarted(TestRunEvent evt)", "diff": ["-        //", "+        programStart = evt.getTimeStamp();", "+        final String date = DateUtils.format(programStart, DateUtils.ISO8601_DATETIME_PATTERN);", "+        rootElement.setAttribute(\"program_start\", date);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f744730edd871b5ab74af96d97aa621d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite)", "diff": ["+        sb.append(\", Skipped: \");", "+        sb.append(suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f775176282ae59adb9e40777e5c24871", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/AssertionsTest.java", "commitBeforeChange": "d4bf1ad7e4084ca56bbdaca530b480dcd6b414b4", "commitAfterChange": "2a38034c1abb28d537a1bb3485487ca5ec83efb6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testNofork()", "signatureAfterChange": "      public void testNofork()", "diff": ["+        if (AssertionsTest.class.desiredAssertionStatus()) {", "+            return; // ran Ant tests with -ea and this would fail spuriously", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86df95c462032d20f5372610da062df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipFileSet.java", "commitBeforeChange": "3ccfe4645f3f2fef9f0e81f84ba8b768ec489662", "commitAfterChange": "bf4ff9c363ade1e0a8105c3201fbb37c48e0f604", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["-            super.setDir(new File(\".\"));", "+            super.setDir(p.getBaseDir());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86e8c9b817fa7d399f50ec4b456a299", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-        //handle listener..", "-        final String listenerName = m_parameters.getParameter( \"listener\", null );", "-        final ProjectListener listener = createListener( listenerName );", "-", "+", "+        //create the listener", "+        final String listenerName = m_parameters.getParameter( \"listener\", null );", "+        final ProjectListener listener = embeddor.createListener( listenerName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94f5cb24219aeef408cb1c109c74458", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/TaskdefsTest.java", "commitBeforeChange": "a8d43912400fdf1627f23abcfb1c27879c5e8153", "commitAfterChange": "df14132289636640ade9cc52ecf8bfdc4ba52433", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void messageLogged(BuildEvent event)", "signatureAfterChange": "         public void messageLogged(BuildEvent event)", "diff": ["+            fullLogBuffer.append(event.getMessage());", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb7cc8e5f44b0274e0bac90e415e197f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "97030dbec8bcfa908b56cce033362cc954caaa5f", "commitAfterChange": "a2cf616336895e5c9006c8b1cb35577b8c9a34ea", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected boolean check(final ResourceCollection rc)", "signatureAfterChange": "     protected boolean check(final ResourceCollection rc)", "diff": ["-                check(tmpBase, files);", "+                upToDate &= check(tmpBase, files);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb85de11ed3053d2b08a9d20b97559e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "1c38f4ed52ca23857b7b83ca909cd1748dea88d6", "commitAfterChange": "6035bbf18dc7df5472368d91d69de03b1819c800", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setStrip(int num) throws BuildException", "signatureAfterChange": "     public void setStrip(int num) throws BuildException", "diff": ["-        strip = num;", "+        cmd.addValue(\"-p\"+num);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdde3603f6b9cfaa95d69d61c9b8977c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/TreeBasedTask.java", "commitBeforeChange": "3bf298063bb7102da748df1a44850b029e321763", "commitAfterChange": "6482a14b629a377711b3df5fd883f2bced525aa9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      private void findLabel(View v) throws BuildException", "signatureAfterChange": "      private void findLabel(View v) throws BuildException", "diff": ["-            if (stLabel.getName().equals(this.label)) {", "+            if (stLabel != null && !stLabel.isDeleted() && stLabel.getName().equals(this.label)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2feca42a5dd61f9da2969f8c0bd306", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1164d88421a62fa741eec199812b09626fed19ac", "commitAfterChange": "b162d01b936b045654a3ef9410e30b42b770280b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void addFiles(FileScanner scanner, ZipOutputStream zOut,                              String prefix, String fullpath) throws IOException", "signatureAfterChange": "     protected void addFiles(FileScanner scanner, ZipOutputStream zOut,                              String prefix, String fullpath) throws IOException", "diff": ["+            if (\"\".equals(dirs[i])) {", "+                continue;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe390a33fe297fe3f749c8e7ea3ff788", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2d9fb4c56dafa32f2e22b5996f617621103286fd", "commitAfterChange": "e8e8e10d10004b8f369fa7c52ec4755b8afacd6f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     private void clearCaches()", "signatureAfterChange": "     private void clearCaches()", "diff": ["+        includeNonPatterns.clear();", "+        excludeNonPatterns.clear();", "+        includePatterns = excludePatterns = null;", "+        areNonPatternSetsReady = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe807db39e4f6981ff4984511ce37276", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "c3a903876567116c619bad264e20e31851d70c28", "commitAfterChange": "f1122490cd550911b1aedf1fe03866062e392942", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["+                if (buf == null) {", "+                    buf = \"\";", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec4897cd7d3f6a2afdded457e91d93c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "37a9ec1bc5fbe6088fd46cbfcabfdf79a4543fee", "commitAfterChange": "ad1b099b2809f1f29ee924142391d3741f12e7ec", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                if (newerOnly && timeDiffAuto) {", "+                // in this case we want to find how much time span there is between local", "+                // and remote", "+                    timeDiffMillis = getTimeDiff(ftp);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff16659032e0a61b7762e1607a170125", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "ab202c98abdb86255e80d286acee3b8c6960cab2", "commitAfterChange": "ae16bb711b331f6c8a20ee1298cf171de43266f7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                copyFile(oldStubFile, newStubFile);", "+                project.copyFile(oldStubFile, newStubFile);", "-            \t    copyFile(oldSkelFile, newSkelFile);", "+            \t    project.copyFile(oldSkelFile, newSkelFile);"]}]}