{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c7557ccd7677e4d7223939c5363f6ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6526da1514cfa3c5c41e26f74127d9a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(FileSet[] filesets,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(final FileSet[] filesets,                                              final File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-    protected ArchiveState getResourcesToAdd(FileSet[] filesets,", "-                                             File zipFile,", "+    protected ArchiveState getResourcesToAdd(final FileSet[] filesets,", "+                                             final File zipFile,", "-        Resource[][] initialResources = grabResources(filesets);", "+        final Resource[][] initialResources = grabResources(filesets);", "-        Resource[][] newerResources = new Resource[filesets.length][];", "+        final Resource[][] newerResources = new Resource[filesets.length][];", "-                File base = filesets[i].getDir(getProject());", "+                final File base = filesets[i].getDir(getProject());", "-                    File resourceAsFile =", "+                    final File resourceAsFile =", "-                ZipFileSet zfs = (ZipFileSet) filesets[i];", "+                final ZipFileSet zfs = (ZipFileSet) filesets[i];", "-                    MergingMapper fm = new MergingMapper();", "+                    final MergingMapper fm = new MergingMapper();", "-                    GlobPatternMapper gm = new GlobPatternMapper();", "+                    final GlobPatternMapper gm = new GlobPatternMapper();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4325fc0d5aead9a73824d0c234f81da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void resolveLocalFileHeaderData(Map<ZipEntry, NameAndComment>                                             entriesWithoutUTF8Flag)         throws IOException", "signatureAfterChange": "     private void resolveLocalFileHeaderData(final Map<ZipEntry, NameAndComment>                                             entriesWithoutUTF8Flag)         throws IOException", "diff": ["-    private void resolveLocalFileHeaderData(Map<ZipEntry, NameAndComment>", "+    private void resolveLocalFileHeaderData(final Map<ZipEntry, NameAndComment>", "-        for (Iterator<ZipEntry> it = entries.iterator(); it.hasNext();) {", "+        for (final Iterator<ZipEntry> it = entries.iterator(); it.hasNext();) {", "-            Entry ze = (Entry) it.next();", "-            OffsetEntry offsetEntry = ze.getOffsetEntry();", "-            long offset = offsetEntry.headerOffset;", "+            final Entry ze = (Entry) it.next();", "+            final OffsetEntry offsetEntry = ze.getOffsetEntry();", "+            final long offset = offsetEntry.headerOffset;", "-            int fileNameLen = ZipShort.getValue(SHORT_BUF);", "+            final int fileNameLen = ZipShort.getValue(SHORT_BUF);", "-            int extraFieldLen = ZipShort.getValue(SHORT_BUF);", "+            final int extraFieldLen = ZipShort.getValue(SHORT_BUF);", "-                int skipped = archive.skipBytes(lenToSkip);", "+                final int skipped = archive.skipBytes(lenToSkip);", "-            byte[] localExtraData = new byte[extraFieldLen];", "+            final byte[] localExtraData = new byte[extraFieldLen];", "-                NameAndComment nc = entriesWithoutUTF8Flag.get(ze);", "+                final NameAndComment nc = entriesWithoutUTF8Flag.get(ze);", "-            String name = ze.getName();", "+            final String name = ze.getName();"]}]}