{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "553db4aa83c01212b37314da8757de84", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff8b943046ac245894ade133659ea4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/WLJspc.java", "commitBeforeChange": "967ec861a2a70977f434a391d5c70f477e4722b0", "commitAfterChange": "6650efb105e0cdd4941ffc2c98f2aa8ee6e1dfea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public void execute() throws BuildException", "signatureAfterChange": "          public void execute() throws BuildException", "diff": ["-            jspFile = new File((String) filesToDo.elementAt(i));", "+            String filename = (String) filesToDo.elementAt(i);", "+            jspFile = new File(filename);", "-            args[j + 2] =  sourceDirectory + File.separator ", "-                + (String) filesToDo.elementAt(i);", "-            arg = \"\";", "+            args[j + 2] =  sourceDirectory + File.separator + filename;", "+            helperTask.clearArgs();", "-            for (int x = 0; x < 12; x++) {", "-                arg += \" \" + args[x];", "+            for (int x = 0; x < j + 3; x++) {", "+                helperTask.createArg().setValue(args[x]);", "-            System.out.println(\"arg = \" + arg);", "-            ", "-            helperTask.clearArgs();", "-            helperTask.setArgs(arg);", "-                log(files[i] + \" failed to compile\", Project.MSG_WARN);", "+                log(filename + \" failed to compile\", Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "361b05a347b6bbb6cbd0e212af71edca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "932dee230660188053b053ffa0c4f310e90bb010", "commitAfterChange": "41607341ae5329086cd459c53714ae14a59a4b3e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public File getSource()", "signatureAfterChange": "         public File getSource()", "diff": ["-                    File[] files = source.listFiles() ; ", "-                    int numfiles = files.length ;", "+                    String[] entries = source.list() ;", "+                    Vector files = new Vector() ;", "+                    for (int i=0 ; i < entries.length ; i++) {", "+                        File f = new File(source, entries[i]) ;", "+                        if (f.isFile()) {", "+                            files.addElement(f) ;", "+                        }", "+                    }", "+                    if ( files.size() < 1 ) {", "+                        throw new BuildException(\"No files found in directory \" + source);", "+                    }", "+                    int numfiles = files.size() ;", "-                    int i = rn.nextInt(numfiles) ;", "+                    int x = rn.nextInt(numfiles) ;", "-                    this.source = files[i] ;", "+                    this.source = (File)files.elementAt(x) ;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "684ae7bdc979352093238bc71831ec18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "a39aaa86b6d9e6312ebb683ee3b92610908f044a", "commitAfterChange": "e4f004d939e26bd63906121996b3dd5d50d76734", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                FileSet fs = (FileSet) filesets.elementAt(i);", "+                String currentType = type;", "+                AbstractFileSet fs = (AbstractFileSet) filesets.elementAt(i);", "+                if (fs instanceof DirSet) {", "+                    if (!\"dir\".equals(type)) {", "+                        log(\"Found a nested dirset but type is \" + type + \". \" ", "+                            + \"Temporarily switching to type=\\\"dir\\\" on the\" +", "+                            \" assumption that you really did mean\" +", "+                            \" <dirset> not <fileset>.\", Project.MSG_DEBUG);", "+                        currentType = \"dir\";", "+                    }", "+                }", "-                if (!\"dir\".equals(type)) {", "+                if (!\"dir\".equals(currentType)) {", "-                if (!\"file\".equals(type)) {", "+                if (!\"file\".equals(currentType)) {"]}]}