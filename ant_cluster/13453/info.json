{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c257665daf2b124454ea7993f916861", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29848f3b5417daa02eadb227de30c5b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "87c740f8a7024d16874ec4f65ccd688a77320724", "commitAfterChange": "761201eca25ffe38373a5b37d7747f6ff3d759f9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute(Project project) throws BuildException", "signatureAfterChange": "     public void execute(Project project) throws BuildException", "diff": ["-            if (classpath == null) {", "-                target = Class.forName(classname);", "-            } else {", "-                loader = project.createClassLoader(classpath);", "-                loader.setParent(project.getCoreLoader());", "-                loader.setParentFirst(false);", "-                loader.addJavaLibraries();", "-                loader.setIsolated(true);", "-                loader.setThreadContextLoader();", "-                loader.forceLoadClass(classname);", "-                target = Class.forName(classname, true, loader);", "+            try {", "+                if (classpath == null) {", "+                    target = Class.forName(classname);", "+                } else {", "+                    loader = project.createClassLoader(classpath);", "+                    loader.setParent(project.getCoreLoader());", "+                    loader.setParentFirst(false);", "+                    loader.addJavaLibraries();", "+                    loader.setIsolated(true);", "+                    loader.setThreadContextLoader();", "+                    loader.forceLoadClass(classname);", "+                    target = Class.forName(classname, true, loader);", "+                }", "+            } catch (ClassNotFoundException e) {", "+                throw new BuildException(\"Could not find \" + classname + \".\"", "+                                         + \" Make sure you have it in your\"", "+                                         + \" classpath\");", "-        } catch (ClassNotFoundException e) {", "-            throw new BuildException(\"Could not find \" + classname + \".\"", "-                                     + \" Make sure you have it in your\"", "-                                     + \" classpath\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df50d257daa9daee945cd012faad0ea2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "c02865f72e8f37b51a2a430b75ab6fea1c7f7ed2", "commitAfterChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["-            loggingMessage = true;", "-            int size = listeners.size();", "-            for (int i = 0; i < size; i++) {", "-                BuildListener listener = (BuildListener) listeners.elementAt(i);", "-                listener.messageLogged(event);", "+            try {", "+                loggingMessage = true;", "+                int size = listeners.size();", "+                for (int i = 0; i < size; i++) {", "+                    BuildListener listener = (BuildListener) listeners.elementAt(i);", "+                    listener.messageLogged(event);", "+                }", "+            } finally {", "+                loggingMessage = false;", "-            loggingMessage = false;"]}]}