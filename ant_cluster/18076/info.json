{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee35a4f0fb3b602bd154b62f26f7c424", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77d00914a8e513181328676e4003c83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/LoaderRefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testBadRef()", "signatureAfterChange": "     @Test \tpublic void testBadRef()", "diff": ["-    public void testBadRef() {", "-        expectBuildExceptionContaining(\"testbadref\", \"Should fail due to ref \"", "-            + \"not being a class loader\", \"does not reference a class loader\");", "+    @Test", "+\tpublic void testBadRef() {", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testbadref\");", "+    \t\tfail(\"BuildRule should have thrown an exception due to a bad classloader being specified\");", "+    \t} catch (BuildException ex) {", "+    \t\tassertContains(\"Should fail due to ref not being a class loader\", \"does not reference a class loader\", ex.getMessage());", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c735e8c40278f43d605cc3025781a444", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testStyleIsSet() throws Exception", "signatureAfterChange": "      @Test     public void testStyleIsSet() throws Exception", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"testStyleIsSet\",", "-                \"no stylesheet specified\", \"specify the \" +", "-                \"stylesheet either as a filename in style \" +", "-                \"attribute or as a nested resource\");", "+", "+        try {", "+            buildRule.executeTarget(\"testStyleIsSet\");", "+            fail(\"Must throws a BuildException: no stylesheet specified\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"specify the stylesheet either as a filename in style attribute or as a nested resource\",", "+                    ex.getMessage());", "+        }"]}]}