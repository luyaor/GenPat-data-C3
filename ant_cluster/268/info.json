{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a696e54cd848c6f67e21ddfaf6b2dab3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6242519827fe2f01a2faf5c8d7466bcc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "     private void tsort(String root, Hashtable targetTable,                              Hashtable state, Stack visiting,                              Vector ret)         throws BuildException", "signatureAfterChange": "     private void tsort(String root, Hashtable<String, Target> targetTable,                              Hashtable<String, String> state, Stack<String> visiting,                              Vector<Target> ret)         throws BuildException", "diff": ["-    private void tsort(String root, Hashtable targetTable,", "-                             Hashtable state, Stack visiting,", "-                             Vector ret)", "+    private void tsort(String root, Hashtable<String, Target> targetTable,", "+                             Hashtable<String, String> state, Stack<String> visiting,", "+                             Vector<Target> ret)", "-        Target target = (Target) targetTable.get(root);", "+        Target target = targetTable.get(root);", "-            StringBuffer sb = new StringBuffer(\"Target \\\"\");", "+            StringBuilder sb = new StringBuilder(\"Target \\\"\");", "-                String parent = (String) visiting.peek();", "+                String parent = visiting.peek();", "-        for (Enumeration en = target.getDependencies(); en.hasMoreElements();) {", "-            String cur = (String) en.nextElement();", "-            String m = (String) state.get(cur);", "+        for (Enumeration<String> en = target.getDependencies(); en.hasMoreElements();) {", "+            String cur = en.nextElement();", "+            String m = state.get(cur);", "-        String p = (String) visiting.pop();", "+        String p = visiting.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98470e41be6372b4cbed279c28411238", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "     public final Vector topoSort(String[] root, Hashtable targetTable,                                  boolean returnAll) throws BuildException", "signatureAfterChange": "     public final Vector<Target> topoSort(String[] root, Hashtable<String, Target> targetTable,                                  boolean returnAll) throws BuildException", "diff": ["-    public final Vector topoSort(String[] root, Hashtable targetTable,", "+    public final Vector<Target> topoSort(String[] root, Hashtable<String, Target> targetTable,", "-        Vector ret = new VectorSet();", "-        Hashtable state = new Hashtable();", "-        Stack visiting = new Stack();", "+        Vector<Target> ret = new VectorSet<Target>();", "+        Hashtable<String, String> state = new Hashtable<String, String>();", "+        Stack<String> visiting = new Stack<String>();", "-        Vector complete = (returnAll) ? ret : new Vector(ret);", "-        for (Enumeration en = targetTable.keys(); en.hasMoreElements();) {", "-            String curTarget = (String) en.nextElement();", "-            String st = (String) state.get(curTarget);", "+        Vector<Target> complete = (returnAll) ? ret : new Vector<Target>(ret);", "+        for (Enumeration<String> en = targetTable.keys(); en.hasMoreElements();) {", "+            String curTarget = en.nextElement();", "+            String st = state.get(curTarget);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca11ed057794e1f3212baa0c1199aefa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "     private void tsort(String root, Hashtable<String, Target> targetTable,                              Hashtable<String, String> state, Stack<String> visiting,                              Vector<Target> ret)         throws BuildException", "signatureAfterChange": "     private void tsort(final String root, final Hashtable<String, Target> targetTable,                              final Hashtable<String, String> state, final Stack<String> visiting,                              final Vector<Target> ret)         throws BuildException", "diff": ["-    private void tsort(String root, Hashtable<String, Target> targetTable,", "-                             Hashtable<String, String> state, Stack<String> visiting,", "-                             Vector<Target> ret)", "+    private void tsort(final String root, final Hashtable<String, Target> targetTable,", "+                             final Hashtable<String, String> state, final Stack<String> visiting,", "+                             final Vector<Target> ret)", "-        Target target = targetTable.get(root);", "+        final Target target = targetTable.get(root);", "-            StringBuilder sb = new StringBuilder(\"Target \\\"\");", "+            final StringBuilder sb = new StringBuilder(\"Target \\\"\");", "-                String parent = visiting.peek();", "+                final String parent = visiting.peek();", "-        for (Enumeration<String> en = target.getDependencies(); en.hasMoreElements();) {", "-            String cur = en.nextElement();", "-            String m = state.get(cur);", "+        for (final Enumeration<String> en = target.getDependencies(); en.hasMoreElements();) {", "+            final String cur = en.nextElement();", "+            final String m = state.get(cur);", "-        String p = visiting.pop();", "+        final String p = visiting.pop();"]}]}