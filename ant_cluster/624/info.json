{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "622b8be875a07117b9f5c02402941658", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9be39e1cf5ebd32286fd64a68cfb00", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/DependentTargetChooser.java", "commitBeforeChange": "2ff201801b557593afe6cf9dcd4d4c4f4da65b39", "commitAfterChange": "cfa93603e73e635d31be01cdb31dc9959a5ea35c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setTarget(ACSTargetElement newTarget)", "signatureAfterChange": "     public void setTarget(ACSTargetElement newTarget)", "diff": ["-        TargetsTableModel srcModel = (TargetsTableModel)_srcTable.getModel();", "-        srcModel.setTargets(getCoTargets(newTarget));", "-        srcModel.fireTableDataChanged();", "-", "-        // fill dest-TableModel with selected depends-targets", "-        TargetsTableModel dstModel = (TargetsTableModel)_dstTable.getModel();", "-        dstModel.setTargets(fillDependsList(newTarget));", "-        dstModel.fireTableDataChanged();", "+        SelectableTargetsTableModel model = (SelectableTargetsTableModel) _targetsTable.getModel();", "+        model.setTargets(getCoTargets(newTarget));", "+        model.preselectTargets(newTarget.getDepends());", "+        model.fireTableDataChanged();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96edccd57581b9d0d80665a97499af6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/AspectAwareExecutor.java", "commitBeforeChange": "1dc00cb1d11437ed4284e6a8de584435f13e2564", "commitAfterChange": "190db7ce1a9cdad175a551c410fe22a85f03fb4a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void executeTask( Configuration taskModel, final TaskContext context )         throws TaskException", "signatureAfterChange": "      private void executeTask( Configuration taskModel, final TaskContext context )         throws TaskException", "diff": ["-        taskModel = getAspectHandler().preCreate( taskModel );", "+        taskModel = getAspectManager().preCreate( taskModel );", "-        getAspectHandler().postCreate( task );", "+        getAspectManager().postCreate( task );", "-        getAspectHandler().preLoggable( getLogger() );", "+        getAspectManager().preLoggable( getLogger() );", "-        getAspectHandler().preConfigure( taskModel );", "+        getAspectManager().preConfigure( taskModel );", "-        getAspectHandler().preExecute();", "+        getAspectManager().preExecute();", "-        getAspectHandler().preDestroy();", "+        getAspectManager().preDestroy();"]}]}