{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7274c0bdf192647d952379ab131d92b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57a2dde8a88ff99b9f01c5e6efda1d89", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "3fce5ce0142330b06cb5ad940808d4d0b42c56e2", "commitAfterChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private String executeToString(Execute execute)", "signatureAfterChange": "      private String executeToString(Execute execute)", "diff": ["-        String newLine = System.getProperty(\"line.separator\");", "-        stringBuffer.append(newLine);", "-        stringBuffer.append(newLine);", "-        stringBuffer.append(\"environment:\");", "-        stringBuffer.append(newLine);", "-", "+        String newLine = StringUtils.LINE_SEP;", "+\t    stringBuffer.append(newLine);", "+\t    stringBuffer.append(newLine);", "+\t    stringBuffer.append(\"environment:\");", "+\t    stringBuffer.append(newLine);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b1dcd2e784dbfb5a4f66ac1f631895a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java", "commitBeforeChange": "e2a27ac310d437c34023e90de8a24c3f45b4af5b", "commitAfterChange": "724483eec5845878bec83940c3044dafdfadc7f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["+        String newLine = System.getProperty(\"line.separator\");", "+        StringBuffer sb = new StringBuffer(\"Running \");", "+        sb.append(suite.getName());", "+        sb.append(newLine);", "+", "+        try {", "+            out.write(sb.toString().getBytes());", "+            out.flush();", "+        } catch (IOException ioex) {", "+            throw new BuildException(\"Unable to write summary output\", ioex);", "+        }"]}]}