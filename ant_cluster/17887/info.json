{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf1d9a111ca14ad50c26ff10898e5037", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f5ecdf5600d48d5cf9d316abe63ee6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void parseArguments(String[] args)          throws FrontendException", "signatureAfterChange": "     private void parseArguments(String[] args)          throws FrontendException", "diff": ["-                argBuildFile(getOption(args, i++, arg));", "+                argBuild(getOption(args, i++, arg));", "-                messageOutputLevel = MessageLevel.MSG_WARN;", "+                messageOutputLevel = MessageLevel.WARNING;", "-                messageOutputLevel = MessageLevel.MSG_VERBOSE;", "+                messageOutputLevel = MessageLevel.VERBOSE;", "-                messageOutputLevel = MessageLevel.MSG_DEBUG;", "+                messageOutputLevel = MessageLevel.DEBUG;", "-                definedProperties.put(name, value);", "+                definedValues.put(name,", "+                    new DataValue(value, DataValue.PRIORITY_USER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "245cbe8e533e76a466500246291cfeba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "fa57759633ed895b69237cbd43f1453f2de8c85b", "commitAfterChange": "8264511a27c63509a8201c2a4861eea5b60c4023", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected String getString(byte[] bytes, String enc)         throws ZipException", "signatureAfterChange": "     protected String getString(byte[] bytes, String enc)         throws ZipException", "diff": ["-                return new String(bytes, enc);", "-            } catch (UnsupportedEncodingException uee) {", "-                throw new ZipException(uee.getMessage());", "+                return ZipEncodingHelper.decodeName(bytes, encoding);", "+            } catch (java.nio.charset.UnsupportedCharsetException ex) {", "+                // Java 1.4's NIO doesn't recognize a few names that", "+                // String.getBytes does", "+                try {", "+                    return new String(bytes, enc);", "+                } catch (UnsupportedEncodingException uee) {", "+                    throw new ZipException(uee.getMessage());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33f5c4eb11fc68ef705a33d5f101870a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "21e315ab61074290eb92b7550037baefd1ab75dc", "commitAfterChange": "7d77f6e9fbd9ef55d8ee92aa2578c513ac3b4e53", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void doMultipleTransfer() throws IOException, JSchException", "signatureAfterChange": "      private void doMultipleTransfer() throws IOException, JSchException", "diff": ["+            } catch (SftpException e) {", "+                JSchException schException = new JSchException(\"Could not CD to '\" + remotePath + \"' - \" + e.toString());", "+                schException.initCause(e);", "+                throw schException;", "+            }", "+            try {", "+                    if(getVerbose()) {", "+                        log(\"Sending directory \" + current);", "+                    }", "-                throw new JSchException(e.toString());", "+                JSchException schException = new JSchException(e.toString());", "+                schException.initCause(e);", "+                throw schException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dc0f743a519f122820161a07af476a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "          public void validate()             throws BuildException", "signatureAfterChange": "          public void validate()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815878ee6475208fb2b9148892521043", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "05f689e959f2c171d08837f096dbefb69df68cf2", "commitAfterChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws BuildException", "diff": ["-            final File file =", "-                getProject().resolveFile( candidate );", "-            getProject().log( \"Property Already set to: \" + file,", "-                              Project.MSG_VERBOSE );", "-            try", "+            final String message = \"Property Already set to: \" + candidate;", "+            if( m_failOnError )", "-                checkExtension( file );", "-                return;", "+                throw new BuildException( message );", "-            catch( final BuildException e )", "+            else", "-                missingExtension();", "+                getProject().log( message, Project.MSG_ERR );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4a90b87a8d9abafd4bcec21415616ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/pvcs/Pvcs.java", "commitBeforeChange": "bd92e4de44f659770bc30e39f352dcc8446a1e9a", "commitAfterChange": "248269dea49bf84d7f1a87d23906854c519b9f70", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private File getFileList()         throws TaskException", "signatureAfterChange": "      private File getFileList()         throws TaskException", "diff": ["-        getContext().debug( \"Executing \" + cmd.toString() );", "-        catch( final ParseException pe )", "+        catch( final Exception e )", "-            final String message = \"Failed executing: \" +", "-                cmd.toString() + \". Exception: \" + pe.getMessage();", "-            throw new TaskException( message );", "-        }", "-        catch( final IOException ioe )", "-        {", "-            final String message = \"Failed executing: \" +", "-                cmd.toString() + \". Exception: \" + ioe.getMessage();", "-            throw new TaskException( message );", "+            throw new TaskException( \"Failed execution.\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c0f4af893e2b57d8d621a97d14a32f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "eb288bb09de327c4355520880c99577e55bc5d57", "commitAfterChange": "de3a669c71580d7fd8e750bda4f8fac3bf2d5bca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void readTemplates()         throws IOException, TransformerConfigurationException", "signatureAfterChange": "     private void readTemplates()         throws IOException, TransformerConfigurationException,                 ParserConfigurationException, SAXException", "diff": ["-        throws IOException, TransformerConfigurationException {", "-        // WARN: Don't use the StreamSource(File) ctor. It won't work with", "-        // xalan prior to 2.2 because of systemid bugs.", "+        throws IOException, TransformerConfigurationException, ", "+               ParserConfigurationException, SAXException {", "-            StreamSource src = new StreamSource(xslStream);", "-            // Always set the systemid to the source for imports, includes...", "-            // in xsl and xml...", "-            src.setSystemId(JAXPUtils.getSystemId(stylesheet));", "+            Source src = getSource(xslStream, stylesheet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0b523bc245cc17faa492d5b908b410", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "          public void validate()             throws BuildException", "signatureAfterChange": "          public void validate()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );", "-                    throw new BuildException( message );", "+                    throw new TaskException( message );"]}]}