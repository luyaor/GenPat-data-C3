{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c06bc349f71556fad594ba2d43ae5e34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "877fbb102275e2482396dbc33a8ef4e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "b72ef6bd538c7cf16ea1351e165a3baf6e9c099d", "commitAfterChange": "1f4efcbdd41dc5c57dbf9e47bf30b37cb37d746f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static URL[] getLocationURLs(File location,                                         final String[] extensions)          throws MalformedURLException", "signatureAfterChange": "     public static URL[] getLocationURLs(File location,                                         final String[] extensions)          throws MalformedURLException", "diff": ["-                    urls[0] = location.toURL();", "+                    try {", "+                        /**", "+                         * File.toURL() does not encode characters like #.", "+                         * File.toURI() has been introduced in java 1.4, so", "+                         * ANT cannot use it (except by reflection)", "+                         * FileUtils.toURI() cannot be used by Locator.java", "+                         * Implemented this way.", "+                         * File.toURL() adds file: and changes '\\' to '/' for dos OSes", "+                         * encodeUri converts characters like ' ' and '#' to %DD", "+                         */", "+                        urls[0] = new URL(encodeUri(location.toURL().toString()));", "+                    } catch (UnsupportedEncodingException ex) {", "+                        throw new MalformedURLException(ex.toString());", "+                    }", "-            urls[i] = matches[i].toURL();", "+            try {", "+                // See comments above.", "+                urls[i] = new URL(encodeUri(matches[i].toURL().toString()));", "+            } catch (UnsupportedEncodingException ex) {", "+                throw new MalformedURLException(ex.toString());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb75257c3c4a373475331001c210836", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "7529971b89c8bdc6794016c9eb174db86c608a8f", "commitAfterChange": "bce9fe013a8838393971f990e13f8fc38404a629", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static URL[] getLocationURLs(File location,                                         final String[] extensions)          throws MalformedURLException", "signatureAfterChange": "     public static URL[] getLocationURLs(File location,                                         final String[] extensions)          throws MalformedURLException", "diff": ["-                    try {", "-                        /**", "-                         * File.toURL() does not encode characters like #.", "-                         * File.toURI() has been introduced in java 1.4, so", "-                         * ANT cannot use it (except by reflection)", "-                         * FileUtils.toURI() cannot be used by Locator.java", "-                         * Implemented this way.", "-                         * File.toURL() adds file: and changes '\\' to '/' for dos OSes", "-                         * encodeURI converts characters like ' ' and '#' to %DD", "-                         */", "-                        urls[0] = new URL(encodeURI(location.toURL().toString()));", "-                    } catch (UnsupportedEncodingException ex) {", "-                        throw new MalformedURLException(ex.toString());", "-                    }", "+                    urls[0] = fileToURL(location);", "-            try {", "-                // See comments above.", "-                urls[i] = new URL(encodeURI(matches[i].toURL().toString()));", "-            } catch (UnsupportedEncodingException ex) {", "-                throw new MalformedURLException(ex.toString());", "-            }", "+            urls[i] = fileToURL(matches[i]);"]}]}