{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d02540ce5df9d8430df06c5e5b1db662", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077c58cc74b962b4728e031d0677c680", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "5151a3152de887e4dccf485a437dea64cc49afa3", "commitAfterChange": "ed7685cd6f28da8710ca2209e711d9c644a4d053", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public PropertyConfigurer getProperty( final String name )         throws NoSuchPropertyException", "signatureAfterChange": "     public PropertyConfigurer getProperty( final String name )         throws NoSuchPropertyException", "diff": ["-        final PropertyConfigurer configurer = (PropertyConfigurer)m_props.get( name );", "+        PropertyConfigurer configurer = (PropertyConfigurer)m_props.get( name );", "+        if( null != configurer )", "+        {", "+            return configurer;", "+        }", "+", "+        //Maybe there is a typed adder??", "+        configurer = (PropertyConfigurer)m_props.get( \"\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b55e4406dc0af44bff5aae60045335", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "b165169549c4f199906968196ce55274405767d9", "commitAfterChange": "434ef8d60826411a8c025af4724097bd33f28747", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["+        ", "+        // Fix for bug #5637 - if a junit.extensions.TestSetup is", "+        // used and throws an exception during setUp then startTest", "+        // would never have been called", "+        if (currentTest == null) {", "+            startTest(test);", "+            currentTest = (Element) testElements.get(test);", "+        }", "+        "]}]}