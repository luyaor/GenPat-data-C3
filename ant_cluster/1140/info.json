{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba39c7b08ba3069564f189f52ef0f2fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d89a48d396ec0a950123f960967ac1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            getLogger().info( \"Getting: \" + source );", "+            getContext().info( \"Getting: \" + source );", "-                    getLogger().info( \"local file date : \" + t.toString() );", "+                    getContext().info( \"local file date : \" + t.toString() );", "-                    getLogger().info( \"Not modified - so not downloaded\" );", "+                    getContext().info( \"Not modified - so not downloaded\" );", "-                    getLogger().info( \"Not authorized - check \" + dest + \" for details\" );", "+                    getContext().info( \"Not authorized - check \" + dest + \" for details\" );", "-                    getLogger().info( \"Error opening connection \" + ex );", "+                    getContext().info( \"Error opening connection \" + ex );", "-                getLogger().info( \"Can't get \" + source + \" to \" + dest );", "+                getContext().info( \"Can't get \" + source + \" to \" + dest );", "-                    getLogger().info( \"last modified = \" + t.toString()", "+                    getContext().info( \"last modified = \" + t.toString()", "-            getLogger().info( \"Error getting \" + source + \" to \" + dest );", "+            getContext().info( \"Error getting \" + source + \" to \" + dest );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e2c8718d0c040cb2005dd5e9ad876fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void link()         throws Exception", "signatureAfterChange": "     public void link()         throws Exception", "diff": ["-        Enumeration merges = mergefiles.elements();", "-        while( merges.hasMoreElements() )", "+        Iterator merges = mergefiles.iterator();", "+        while( merges.hasNext() )", "-            String path = (String)merges.nextElement();", "+            String path = (String)merges.next();", "-                //Add this file to the addfiles Vector and add it", "+                //Add this file to the addfiles ArrayList and add it", "-        Enumeration adds = addfiles.elements();", "-        while( adds.hasMoreElements() )", "+        Iterator adds = addfiles.iterator();", "+        while( adds.hasNext() )", "-            String name = (String)adds.nextElement();", "+            String name = (String)adds.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d44c0e2544864b911bf9cd9b2e635eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void link()         throws Exception", "signatureAfterChange": "     public void link()         throws Exception", "diff": ["-        Enumeration merges = mergefiles.elements();", "-        while( merges.hasMoreElements() )", "+        Iterator merges = mergefiles.iterator();", "+        while( merges.hasNext() )", "-            String path = (String)merges.nextElement();", "+            String path = (String)merges.next();", "-                //Add this file to the addfiles Vector and add it", "+                //Add this file to the addfiles ArrayList and add it", "-        Enumeration adds = addfiles.elements();", "-        while( adds.hasMoreElements() )", "+        Iterator adds = addfiles.iterator();", "+        while( adds.hasNext() )", "-            String name = (String)adds.nextElement();", "+            String name = (String)adds.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9859c542e706957bc81efcf09644cfe4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            getLogger().debug( \"Opening FTP connection to \" + m_server );", "+            getContext().debug( \"Opening FTP connection to \" + m_server );", "-            getLogger().debug( \"connected\" );", "-            getLogger().debug( \"logging in to FTP server\" );", "+            getContext().debug( \"connected\" );", "+            getContext().debug( \"logging in to FTP server\" );", "-            getLogger().debug( \"login succeeded\" );", "+            getContext().debug( \"login succeeded\" );", "-                getLogger().debug( \"entering passive mode\" );", "+                getContext().debug( \"entering passive mode\" );", "-                    getLogger().debug( \"changing the remote directory\" );", "+                    getContext().debug( \"changing the remote directory\" );", "-                getLogger().info( ACTION_STRS[ m_action ] + \" files\" );", "+                getContext().info( ACTION_STRS[ m_action ] + \" files\" );", "-                    getLogger().debug( \"disconnecting\" );", "+                    getContext().debug( \"disconnecting\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b395d170a28f6323307e0b41cbeb173c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      private boolean isParentFirst( String resourceName )", "signatureAfterChange": "      private boolean isParentFirst( String resourceName )", "diff": ["-        for( Enumeration e = systemPackages.elements(); e.hasMoreElements(); )", "+        for( Iterator e = systemPackages.iterator(); e.hasNext(); )", "-            String packageName = (String)e.nextElement();", "+            String packageName = (String)e.next();", "-        for( Enumeration e = loaderPackages.elements(); e.hasMoreElements(); )", "+        for( Iterator e = loaderPackages.iterator(); e.hasNext(); )", "-            String packageName = (String)e.nextElement();", "+            String packageName = (String)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be4de9dc4e3b0e632cc3dee6d3125e4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            getLogger().info( \"Getting: \" + source );", "+            getContext().info( \"Getting: \" + source );", "-                    getLogger().info( \"local file date : \" + t.toString() );", "+                    getContext().info( \"local file date : \" + t.toString() );", "-                    getLogger().info( \"Not modified - so not downloaded\" );", "+                    getContext().info( \"Not modified - so not downloaded\" );", "-                    getLogger().info( \"Not authorized - check \" + dest + \" for details\" );", "+                    getContext().info( \"Not authorized - check \" + dest + \" for details\" );", "-                    getLogger().info( \"Error opening connection \" + ex );", "+                    getContext().info( \"Error opening connection \" + ex );", "-                getLogger().info( \"Can't get \" + source + \" to \" + dest );", "+                getContext().info( \"Can't get \" + source + \" to \" + dest );", "-                    getLogger().info( \"last modified = \" + t.toString()", "+                    getContext().info( \"last modified = \" + t.toString()", "-            getLogger().info( \"Error getting \" + source + \" to \" + dest );", "+            getContext().info( \"Error getting \" + source + \" to \" + dest );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7239f08ee66f43906fc180747e9adc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            getLogger().debug( \"Opening FTP connection to \" + m_server );", "+            getContext().debug( \"Opening FTP connection to \" + m_server );", "-            getLogger().debug( \"connected\" );", "-            getLogger().debug( \"logging in to FTP server\" );", "+            getContext().debug( \"connected\" );", "+            getContext().debug( \"logging in to FTP server\" );", "-            getLogger().debug( \"login succeeded\" );", "+            getContext().debug( \"login succeeded\" );", "-                getLogger().debug( \"entering passive mode\" );", "+                getContext().debug( \"entering passive mode\" );", "-                    getLogger().debug( \"changing the remote directory\" );", "+                    getContext().debug( \"changing the remote directory\" );", "-                getLogger().info( ACTION_STRS[ m_action ] + \" files\" );", "+                getContext().info( ACTION_STRS[ m_action ] + \" files\" );", "-                    getLogger().debug( \"disconnecting\" );", "+                    getContext().debug( \"disconnecting\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0df8c44b33c1528a1006da3d8752dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      private boolean isParentFirst( String resourceName )", "signatureAfterChange": "      private boolean isParentFirst( String resourceName )", "diff": ["-        for( Enumeration e = systemPackages.elements(); e.hasMoreElements(); )", "+        for( Iterator e = systemPackages.iterator(); e.hasNext(); )", "-            String packageName = (String)e.nextElement();", "+            String packageName = (String)e.next();", "-        for( Enumeration e = loaderPackages.elements(); e.hasMoreElements(); )", "+        for( Iterator e = loaderPackages.iterator(); e.hasNext(); )", "-            String packageName = (String)e.nextElement();", "+            String packageName = (String)e.next();"]}]}