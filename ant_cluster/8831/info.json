{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "696b52905276c7635af4000cc3c1c60c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09a1c8bfae323ac9731f91c2904cc3b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/script/org/apache/ant/antlib/script/ScriptBase.java", "commitBeforeChange": "b0702935362003552b8c456725f3b68b597ab443", "commitAfterChange": "f16a5cd623bf73ae80a737e38e025d9354e20ef2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ExecutionException", "diff": ["-", "+            manager.declareBean(\"self\", this, getClass());", "+            manager.declareBean(\"context\", getContext, AntContext.class);", "+            ", "+            ", "+            ", "+            Iterator i = nestedElementNames.iterator();", "+            Iterator j = nestedElements.iterator();", "+            while (i.hasNext()) {", "+                String nestedName = (String)i.next();", "+                Object nestedElement = j.next();", "+                StringBuffer adder = new StringBuffer(nestedName);", "+                adder.setCharAt(0, Character.toUpperCase(adder.charAt(0)));", "+                engine.call(null, \"add\" + adder, new Object[]{nestedElement});", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb24346bf27374792b315056314245c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "4624d76d0403dd32a4d5102c47e890bb0c0be6fc", "commitAfterChange": "230952c5a86a38ebd7208a91012d91ff87491a54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["+", "+        // Output properties", "+        Element propsElement = doc.createElement(PROPERTIES);", "+        rootElement.appendChild(propsElement);", "+        Properties props = suite.getProperties();", "+        if (props != null) {", "+            Enumeration e = props.propertyNames();", "+            while (e.hasMoreElements()) {", "+                String name = (String) e.nextElement();", "+                Element propElement = doc.createElement(PROPERTY);", "+                propElement.setAttribute(ATTR_NAME, name);", "+                propElement.setAttribute(ATTR_VALUE, props.getProperty(name));", "+                propsElement.appendChild(propElement);", "+            }", "+        }"]}]}