{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e97795ec9d22c2351570fd4b1a81abb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca95e12f552a92a425d3517b43671a0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/AbstractComponentTest.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void registerConverter( final Class converterClass,                                       final Class sourceClass,                                       final Class destClass )         throws Exception", "signatureAfterChange": "     protected void registerConverter( final Class converterClass,                                       final Class sourceClass,                                       final Class destClass )         throws Exception", "diff": ["-        getTypeManager().registerType( Converter.class, converterClass.getName(), factory );", "+        getTypeManager().registerType( Converter.ROLE, converterClass.getName(), factory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce76fac190d38029c9905bc739d589a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/AbstractComponentTest.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void registerConverter( final Class converterClass,                                       final Class sourceClass,                                       final Class destClass )         throws Exception", "signatureAfterChange": "     protected void registerConverter( final Class converterClass,                                       final Class sourceClass,                                       final Class destClass )         throws Exception", "diff": ["-        getTypeManager().registerType( Converter.class, converterClass.getName(), factory );", "+        getTypeManager().registerType( Converter.ROLE, converterClass.getName(), factory );"]}]}