{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3752ddff43cd97fdabbfefa2328f1095", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f10d38bbeefbe535258999bde49eb68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args) throws Exception", "signatureAfterChange": "     public static void main(String[] args) throws Exception", "diff": ["+        String[] mainArgs = args;", "-            String[] newArgs = new String[args.length - 2];", "+            mainArgs = new String[args.length - 2];", "-            System.arraycopy(args, 0, newArgs, 0, frontendIndex);", "+            System.arraycopy(args, 0, mainArgs, 0, frontendIndex);", "-                System.arraycopy(args, frontendIndex + 2, newArgs,", "+                System.arraycopy(args, frontendIndex + 2, mainArgs,", "-            args = newArgs;", "-        String defaultClass = frontend.equals(DEFAULT_FRONTEND)", "-             ? DEFAULT_COMMANDLINE_CLASS : null;", "-", "-        main.start(frontend, defaultClass, args);", "+        main.start(frontend, mainArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "896b4a8fd1de235f8467d7e0d0aea2e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e713682ea69123ef5ca4935776b817a2b81645cf", "commitAfterChange": "695ce2ed1c7ffb7ce113fcdc05d12cd70abad525", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void removeBuildListener(BuildListener listener)", "signatureAfterChange": "     public void removeBuildListener(BuildListener listener)", "diff": ["-            Vector newListeners = getBuildListeners();", "-            newListeners.removeElement(listener);", "-            listeners = newListeners;", "+            for (int i = 0; i < listeners.length; i++) {", "+                if (listeners[i] == listener) {", "+                    BuildListener[] newListeners = new BuildListener[listeners.length - 1];", "+                    System.arraycopy(listeners, 0, newListeners, 0, i);", "+                    System.arraycopy(listeners, i + 1, newListeners, i, listeners.length - i - 1);", "+                    listeners = newListeners;", "+                    break;", "+                }", "+            }"]}]}