{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3afc8693ef1d1ee836f1e49318a9995", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbfe8d50b63770ac725990634392f5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "b5ad58c4d736b7f0a97aaa78b258dcceb9c21c89", "commitAfterChange": "7435b27b914764c3845b4821363ffeb4ddfe89cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void setWorkingdir(File workingdir)", "signatureAfterChange": "     protected void generateOptionsFile(File tofile, String[] options) throws BuildException", "diff": ["-    public void setWorkingdir(File workingdir) {", "-        this.metaworkingdir = workingdir;", "-    }", "+     */", "+    protected void generateOptionsFile(File tofile, String[] options) throws BuildException {", "+        FileWriter fw = null;", "+        try {", "+            fw = new FileWriter(tofile);", "+            PrintWriter pw = new PrintWriter(fw);", "+            for (int i = 0; i < options.length; i++){", "+                pw.println( options[i] );", "+            }", "+            pw.flush();", "+        } catch (IOException e){", "+            throw new BuildException(\"Error while writing options file \" + tofile, e);", "+        } finally {", "+            if (fw != null){", "+                try {", "+                    fw.close();", "+                } catch (IOException ignored){}", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50e045c495d0e19f53fc1c0729427b71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void writeManifest( final Manifest manifest )         throws IOException", "signatureAfterChange": "     private void writeManifest(final Manifest manifest)         throws IOException", "diff": ["-    private void writeManifest( final Manifest manifest )", "-        throws IOException", "-    {", "+    private void writeManifest(final Manifest manifest)", "+        throws IOException {", "-        try", "-        {", "-            output = new FileOutputStream( m_destfile );", "-            manifest.write( output );", "+        try {", "+            output = new FileOutputStream(destFile);", "+            manifest.write(output);", "-        }", "-        finally", "-        {", "-            if( null != output )", "-            {", "-                try", "-                {", "+        } finally {", "+            if (null != output) {", "+                try {", "-                }", "-                catch( IOException e )", "-                {", "+                } catch (IOException e) {", "+                    // ignore"]}]}