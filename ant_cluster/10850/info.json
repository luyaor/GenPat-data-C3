{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "808e7ed5c5a4b3dfb2a2f23e07dc8edb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092118b36feb625cdf3a47accf38b60f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/TargetMonitor.java", "commitBeforeChange": "ffa6e24ba429847c04da9162971b6203151a7ce1", "commitAfterChange": "1056b715f84a4c3b17b7fcdecbaef6eaeb566ea7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public boolean eventPosted(EventObject event)", "signatureAfterChange": "         public boolean eventPosted(EventObject event)", "diff": ["+            ACSElement[] selected = e.getSelectedElements();", "-            ProjectProxy p =  getContext().getProject();", "-            if(p != null) {", "-                ElementTreeSelectionModel selections = ", "-                    p.getTreeSelectionModel();", "-                ACSTargetElement[] targets = selections.getSelectedTargets();", "-                if(targets != null && targets.length > 0) {", "-                    StringBuffer buf = new StringBuffer();", "-                    for(int i = 0; i < targets.length; i++) {", "-                        buf.append(targets[i].getName());", "-                        if(i < targets.length - 1) {", "+            if(selected != null && selected.length > 0) {", "+                StringBuffer buf = new StringBuffer();", "+", "+                for(int i = 0; i < selected.length; i++) {", "+                    if(selected[i] instanceof ACSTargetElement) {", "+                        if(buf.length() > 0) {", "+                        buf.append(((ACSTargetElement)selected[i]).getName());", "+                }", "+", "+                if(buf.length() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094e4ea433587e36f38861b93bc90d4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "51d2ae9068cde0e8a071a48a5f1188ebba14587a", "commitAfterChange": "e20a25b59653ec883676504b42c70591040fa2f9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Resource getResource(String name)", "signatureAfterChange": "     public Resource getResource(String name)", "diff": ["-        ", "+", "-        for (int counter = 0; counter < myentries.size(); counter++) {", "-            Resource myresource=(Resource)myentries.elementAt(counter);", "-            if (myresource.getName().equals(name)", "-                || myresource.getName().equals(name + \"/\")) {", "-                return myresource;", "-            }", "+        if (myentries.containsKey(name)) {", "+            return (Resource) myentries.get(name);", "+        } else if (myentries.containsKey(name + \"/\")) {", "+            return (Resource) myentries.get(name + \"/\");", "+        } else {", "+            return new Resource(name);", "-        return new Resource(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e17e510db3e9759a2c56723c9cd1f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Rpm.java", "commitBeforeChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "commitAfterChange": "ff41336fc19f549bc995898f4543da6d7e9d9bf9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected String guessRpmBuildCommand()", "signatureAfterChange": "     protected String guessRpmBuildCommand()", "diff": ["-        Vector env = Execute.getProcEnvironment();", "-        String path = null;", "-        for (Enumeration e = env.elements(); e.hasMoreElements();) {", "-            String var = (String) e.nextElement();", "-            if (var.startsWith(PATH1) || var.startsWith(PATH2) || var.startsWith(PATH3)) {", "-                path = var.substring(PATH_LEN);", "-                break;", "+        Map/*<String, String>*/ env = Execute.getEnvironmentVariables();", "+        String path = (String) env.get(PATH1);", "+        if (path == null) {", "+            path = (String) env.get(PATH2);", "+            if (path == null) {", "+                path = (String) env.get(PATH3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac361d0a806faf9d6bda604e9506aa6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/SysProperties.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void setSystem()         throws TaskException", "signatureAfterChange": "     public synchronized static void setSystem( final Map properties )         throws TaskException", "diff": ["-    public void setSystem()", "-        throws TaskException", "-        try", "-        {", "-            Properties p = new Properties( m_system = System.getProperties() );", "-", "-            for( Iterator e = m_variables.iterator(); e.hasNext(); )", "-            {", "-                EnvironmentVariable v = (EnvironmentVariable)e.next();", "-                p.put( v.getKey(), v.getValue() );", "-            }", "-            System.setProperties( p );", "-        }", "-        catch( SecurityException e )", "-        {", "-            throw new TaskException( \"Cannot modify system properties\", e );", "-        }", "+     */", "+    public synchronized static void setSystem( final Map properties )", "+        throws TaskException", "+        if( properties.size() == 0 )", "+        {", "+            return;", "+        }", "+        if( m_system != null )", "+        {", "+            throw new TaskException( \"System properties have not been restored.\" );", "+        }", "+", "+        final Properties sysProps;", "+            sysProps = System.getProperties();", "+            Properties allProps = new Properties( sysProps );", "+            allProps.putAll( properties );", "+            System.setProperties( allProps );", "+        catch( final SecurityException e )", "+            throw new TaskException( \"Cannot modify system properties.\", e );", "+", "+        m_system = sysProps;"]}]}