{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89375777c673c16d14f4be57cbf6af4c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58576795aaa8f98e413eac7506fb2c08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute2.java", "commitBeforeChange": "3c2b554fbcbb85616dbb552f1ed54072ecf23cc0", "commitAfterChange": "71eaa47717669887b947653657e6f681ae0dbc8c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int execute()         throws IOException, TaskException", "signatureAfterChange": "     public int execute()         throws IOException, TaskException", "diff": ["-            final DefaultExecManager manager =", "-                new DefaultExecManager( getAntHomeDirectory() );", "+            final ExecManagerFactory factory = new ExecManagerFactory();", "+            final ExecManager manager = (ExecManager)factory.createService();", "+        catch( final ServiceException se )", "+        {", "+            throw new TaskException( se.getMessage(), se );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb90500131cd7d3755ebcf90ffe35364", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/Execute2.java", "commitBeforeChange": "3c2b554fbcbb85616dbb552f1ed54072ecf23cc0", "commitAfterChange": "71eaa47717669887b947653657e6f681ae0dbc8c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int execute()         throws IOException, TaskException", "signatureAfterChange": "     public int execute()         throws IOException, TaskException", "diff": ["-            final DefaultExecManager manager =", "-                new DefaultExecManager( getAntHomeDirectory() );", "+            final ExecManagerFactory factory = new ExecManagerFactory();", "+            final ExecManager manager = (ExecManager)factory.createService();", "+        catch( final ServiceException se )", "+        {", "+            throw new TaskException( se.getMessage(), se );", "+        }"]}]}