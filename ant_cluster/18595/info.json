{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f7cba6bbe9602d66410c5a2e3446873", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7da6e7542117b27e1bf018eea799368", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAttribute(Project p, Object element, String attributeName,             Object value) throws BuildException", "signatureAfterChange": "     public void setAttribute(final Project p, final Object element, final String attributeName,             final Object value) throws BuildException", "diff": ["-    public void setAttribute(Project p, Object element, String attributeName,", "-            Object value) throws BuildException {", "-        AttributeSetter as = (AttributeSetter) attributeSetters.get(", "+    public void setAttribute(final Project p, final Object element, final String attributeName,", "+            final Object value) throws BuildException {", "+        final AttributeSetter as = attributeSetters.get(", "-                DynamicAttributeNS dc = (DynamicAttributeNS) element;", "-                String uriPlusPrefix = ProjectHelper.extractUriFromComponentName(attributeName);", "-                String uri = ProjectHelper.extractUriFromComponentName(uriPlusPrefix);", "-                String localName = ProjectHelper.extractNameFromComponentName(attributeName);", "-                String qName = \"\".equals(uri) ? localName : uri + \":\" + localName;", "+                final DynamicAttributeNS dc = (DynamicAttributeNS) element;", "+                final String uriPlusPrefix = ProjectHelper.extractUriFromComponentName(attributeName);", "+                final String uri = ProjectHelper.extractUriFromComponentName(uriPlusPrefix);", "+                final String localName = ProjectHelper.extractNameFromComponentName(attributeName);", "+                final String qName = \"\".equals(uri) ? localName : uri + \":\" + localName;", "-                DynamicObjectAttribute dc = (DynamicObjectAttribute) element;", "+                final DynamicObjectAttribute dc = (DynamicObjectAttribute) element;", "-                DynamicAttribute dc = (DynamicAttribute) element;", "+                final DynamicAttribute dc = (DynamicAttribute) element;", "-            String msg = getElementName(p, element)", "+            final String msg = getElementName(p, element)", "-        } catch (IllegalAccessException ie) {", "+        } catch (final IllegalAccessException ie) {", "-        } catch (InvocationTargetException ite) {", "+        } catch (final InvocationTargetException ite) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f73a741a699df5bb2939de74e3f1920e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0efc2f817257f69d7cdc67c016b1caac68465f1d", "commitAfterChange": "939a6bbf2fb97ec29ecf79c86013846656d8751c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value) throws BuildException", "signatureAfterChange": "     public void setAttribute(Project p, Object element, String attributeName,                              String value) throws BuildException", "diff": ["-        AttributeSetter as", "-            = (AttributeSetter) attributeSetters.get(", "+        AttributeSetter as = (AttributeSetter) attributeSetters.get(", "-                String uriPlusPrefix =", "-                    ProjectHelper.extractUriFromComponentName(attributeName);", "-                String uri =", "-                    ProjectHelper.extractUriFromComponentName(uriPlusPrefix);", "-                String localName =", "-                    ProjectHelper.extractNameFromComponentName(attributeName);", "-                String qName = (\"\".equals(uri)", "-                                ? localName : (uri + \":\" + localName));", "-", "+                String uriPlusPrefix = ProjectHelper.extractUriFromComponentName(attributeName);", "+                String uri = ProjectHelper.extractUriFromComponentName(uriPlusPrefix);", "+                String localName = ProjectHelper.extractNameFromComponentName(attributeName);", "+                String qName = \"\".equals(uri) ? localName : uri + \":\" + localName;", "-            } else if (element instanceof DynamicAttribute) {", "+            }", "+            if (element instanceof DynamicAttribute) {", "-            } else {", "-                if (attributeName.indexOf(':') != -1) {", "-                    return; // Ignore attribute from unknown uri's", "-                }", "-                String msg = getElementName(p, element)", "-                    + \" doesn't support the \\\"\" + attributeName", "-                    + \"\\\" attribute.\";", "-                throw new UnsupportedAttributeException(msg, attributeName);", "+            if (attributeName.indexOf(':') != -1) {", "+                return; // Ignore attribute from unknown uri's", "+            }", "+            String msg = getElementName(p, element)", "+                    + \" doesn't support the \\\"\" + attributeName + \"\\\" attribute.\";", "+            throw new UnsupportedAttributeException(msg, attributeName);"]}]}