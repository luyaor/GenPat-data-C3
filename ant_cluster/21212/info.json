{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "796e00c9f999e59a0941aab98c43346c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c2fa9c006595df0650b4e6fc195e867", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected void doResourceOperations(Map map)", "signatureAfterChange": "     protected void doResourceOperations(Map<Resource, String[]> map)", "diff": ["-    protected void doResourceOperations(Map map) {", "+    protected void doResourceOperations(Map<Resource, String[]> map) {", "-            Iterator iter = map.keySet().iterator();", "-            while (iter.hasNext()) {", "-                Resource fromResource = (Resource) iter.next();", "-                String[] toFiles = (String[]) map.get(fromResource);", "-", "-                for (int i = 0; i < toFiles.length; i++) {", "-                    String toFile = toFiles[i];", "-", "+            for (Map.Entry<Resource, String[]> e : map.entrySet()) {", "+                Resource fromResource = e.getKey();", "+                for (String toFile : e.getValue()) {", "-                        FilterSetCollection executionFilters =", "-                            new FilterSetCollection();", "+                        FilterSetCollection executionFilters = new FilterSetCollection();", "-                        for (Enumeration filterEnum = filterSets.elements();", "-                            filterEnum.hasMoreElements();) {", "-                            executionFilters", "-                                .addFilterSet((FilterSet) filterEnum.nextElement());", "+                        for (FilterSet filterSet : filterSets) {", "+                            executionFilters.addFilterSet(filterSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305bf7f2f01829cab9049283475c3be8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "661f8becc40fa2aa831edcd3a4b94a2299fd05f1", "commitAfterChange": "43e11902e90740f6f5fcce825c3e99372b8c91fd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void upload(final List fileSet, final String toSshUri)         throws IOException, JSchException", "signatureAfterChange": "      private void upload(final List<ResourceCollection> rcs, final String toSshUri)         throws IOException, JSchException", "diff": ["-    private void upload(final List fileSet, final String toSshUri)", "+    private void upload(final List<ResourceCollection> rcs, final String toSshUri)", "-            final List list = new ArrayList(fileSet.size());", "-            for (final Iterator i = fileSet.iterator(); i.hasNext();) {", "-                final FileSet set = (FileSet) i.next();", "-                final Directory d = createDirectory(set);", "-                if (d != null) {", "-                    list.add(d);", "+            final List<Directory> list = new ArrayList<Directory>(rcs.size());", "+            for (final Iterator<ResourceCollection> i = rcs.iterator(); i.hasNext();) {", "+                final ResourceCollection rc = (ResourceCollection) i.next();", "+                if (rc instanceof FileSet && rc.isFilesystemOnly()) {", "+                    FileSet fs = (FileSet) rc;", "+                    final Directory d = createDirectory(fs);", "+                    if (d != null) {", "+                        list.add(d);", "+                    }", "+                } else {", "+                       List<Directory> ds = createDirectoryCollection(rc);", "+                       if (ds !=null) {", "+                               list.addAll(ds);", "+                       }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a871fab70ae75a69e1559552fe40669", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     protected void doFileOperations()", "signatureAfterChange": "     protected void doFileOperations()", "diff": ["-            for (Map.Entry<String, String[]> e : fileCopyMap.entrySet()) {", "-                String fromFile = e.getKey();", "-                String[] toFiles = e.getValue();", "+            for (final Map.Entry<String, String[]> e : fileCopyMap.entrySet()) {", "+                final String fromFile = e.getKey();", "+                final String[] toFiles = e.getValue();", "-                    String toFile = toFiles[i];", "+                    final String toFile = toFiles[i];", "-                        FilterSetCollection executionFilters =", "+                        final FilterSetCollection executionFilters =", "-                        for (FilterSet filterSet : filterSets) {", "+                        for (final FilterSet filterSet : filterSets) {", "-                    } catch (IOException ioe) {", "+                    } catch (final IOException ioe) {", "-                        File targetFile = new File(toFile);", "+                        final File targetFile = new File(toFile);", "-            for (String[] dirs : dirCopyMap.values()) {", "+            for (final String[] dirs : dirCopyMap.values()) {", "-                    File d = new File(dirs[i]);", "+                    final File d = new File(dirs[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf0e01ce461b0080b46c51546123d77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected void doResourceOperations(Map<Resource, String[]> map)", "signatureAfterChange": "     protected void doResourceOperations(final Map<Resource, String[]> map)", "diff": ["-    protected void doResourceOperations(Map<Resource, String[]> map) {", "+    protected void doResourceOperations(final Map<Resource, String[]> map) {", "-            for (Map.Entry<Resource, String[]> e : map.entrySet()) {", "-                Resource fromResource = e.getKey();", "-                for (String toFile : e.getValue()) {", "+            for (final Map.Entry<Resource, String[]> e : map.entrySet()) {", "+                final Resource fromResource = e.getKey();", "+                for (final String toFile : e.getValue()) {", "-                        FilterSetCollection executionFilters = new FilterSetCollection();", "+                        final FilterSetCollection executionFilters = new FilterSetCollection();", "-                        for (FilterSet filterSet : filterSets) {", "+                        for (final FilterSet filterSet : filterSets) {", "-                    } catch (IOException ioe) {", "+                    } catch (final IOException ioe) {", "-                        File targetFile = new File(toFile);", "+                        final File targetFile = new File(toFile);"]}]}