{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3e69fa757cd45630f274e2519390116", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1188693655247062e7048451dd9b6b15", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void testPatternSetIncludeOnly()", "signatureAfterChange": "     @Test     public void testPatternSetIncludeOnly()", "diff": ["+    @Test", "-        executeTarget(\"testPatternSetIncludeOnly\");", "-        assertFileMissing(\"1/foo is not included\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"2/bar is included\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testPatternSetIncludeOnly\");", "+        assertFileMissing(\"1/foo is not included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"2/bar is included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a2d502c3a016f47a5b1053f97e3a592", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testEmptyDirCopy()", "signatureAfterChange": "      @Test     public void testEmptyDirCopy()", "diff": ["+    @Test", "-        executeTarget(\"emptydircopy\");", "-        String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "+        buildRule.executeTarget(\"emptydircopy\");", "+        String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "-        String c = getProject().getProperty(\"dest\") + \"/a/b/c\";", "+        String c = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c\";", "-        assertTrue(getFullLog().indexOf(\"dangling\") == -1);", "+        assertTrue(buildRule.getFullLog().indexOf(\"dangling\") == -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2719731c8c9ade36abce705f2cb051e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void testPatternSetSlashOnly()", "signatureAfterChange": "     @Test     public void testPatternSetSlashOnly()", "diff": ["+    @Test", "-        executeTarget(\"testPatternSetSlashOnly\");", "-        assertFileMissing(\"1/foo is not included\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"\\\"2/bar is included\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testPatternSetSlashOnly\");", "+        assertFileMissing(\"1/foo is not included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"\\\"2/bar is included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3885a3d02e95d0f09cbdbb6181e21e6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/XMLFormatterWithCDATAOnSystemOut.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testBuildfile() throws IOException", "signatureAfterChange": "      @Test     public void testBuildfile() throws IOException", "diff": ["+    @Test", "-        configureProject(DIR + \"/cdataoutput.xml\");", "-        if (getProject().getProperty(\"cdata.inner\") == null) {", "+        buildRule.configureProject(DIR + \"/cdataoutput.xml\");", "+        if (buildRule.getProject().getProperty(\"cdata.inner\") == null) {", "-            executeTarget(\"run-junit\");", "-            File f = getProject().resolveFile(REPORT);", "+            buildRule.executeTarget(\"run-junit\");", "+            File f = buildRule.getProject().resolveFile(REPORT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388876abcf0b6da869dc7a067bde9cbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testPathAsResource()", "signatureAfterChange": "          @Test     public void testPathAsResource()", "diff": ["+    @Test", "-        executeTarget(\"testPathAsResource\");", "-        File file1 = new File(getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "-        File file2 = new File(getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "-        File file3 = new File(getProject().getProperty(\"to.dir\")+\"/file3.txt\");", "+        buildRule.executeTarget(\"testPathAsResource\");", "+        File file1 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "+        File file2 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "+        File file3 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file3.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "476554d70ad4edb53ed9974fd3dfd39d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testTwoPatternSets()", "signatureAfterChange": "     @Test     public void testTwoPatternSets()", "diff": ["+    @Test", "-        executeTarget(\"testTwoPatternSets\");", "-        assertFileMissing(\"1/foo is not included\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"2/bar is included\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testTwoPatternSets\");", "+        assertFileMissing(\"1/foo is not included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"2/bar is included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a986e4825408befc9b3f2021657bca3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public void testDocumentationClaimsOnCopy()", "signatureAfterChange": "      @Test     public void testDocumentationClaimsOnCopy()", "diff": ["+    @Test", "-        executeTarget(\"testDocumentationClaimsOnCopy\");", "-        assertFileMissing(\"1/foo is excluded\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"2/bar is not excluded\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testDocumentationClaimsOnCopy\");", "+        assertFileMissing(\"1/foo is excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"2/bar is not excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5863e65513204a2a3e068347d7453afa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testTwoPatternSetsWithExcludes()", "signatureAfterChange": "     @Test     public void testTwoPatternSetsWithExcludes()", "diff": ["+    @Test", "-        executeTarget(\"testTwoPatternSetsWithExcludes\");", "-        assertFileMissing(\"1/foo is not included\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileMissing(\"2/bar is excluded\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testTwoPatternSetsWithExcludes\");", "+        assertFileMissing(\"1/foo is not included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileMissing(\"2/bar is excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5fa027934d55c2aef17ee17895a0f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public void testZipfileset()", "signatureAfterChange": "          @Test     public void testZipfileset()", "diff": ["+    @Test", "-        executeTarget(\"testZipfileset\");", "-        File file1 = new File(getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "-        File file2 = new File(getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "-        File file3 = new File(getProject().getProperty(\"to.dir\")+\"/file3.txt\");", "+        buildRule.executeTarget(\"testZipfileset\");", "+        File file1 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "+        File file2 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "+        File file3 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file3.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e36c05c2de55ae418a2eaae85bbcf83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testEmptyCopy()", "signatureAfterChange": "      @Test     public void testEmptyCopy()", "diff": ["+    @Test", "-        executeTarget(\"emptycopy\");", "-        String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "+        buildRule.executeTarget(\"emptycopy\");", "+        String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "-        String c = getProject().getProperty(\"dest\") + \"/a/b/c\";", "+        String c = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c\";", "-        assertTrue(getFullLog().indexOf(\"dangling\") == -1);", "+        assertTrue(buildRule.getFullLog().indexOf(\"dangling\") == -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70338c328475929b25ef8fa6adebf858", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/resources/JavaResourceTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testLoadManifest()", "signatureAfterChange": "      @Test     public void testLoadManifest()", "diff": ["+    @Test", "-        executeTarget(\"loadManifest\");", "-        assertNotNull(getProject().getProperty(\"manifest\"));", "+        buildRule.executeTarget(\"loadManifest\");", "+        assertNotNull(buildRule.getProject().getProperty(\"manifest\"));", "-        assertTrue(getProject().getProperty(\"manifest\")", "+        assertTrue(buildRule.getProject().getProperty(\"manifest\")"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76cdcbc4d91462390ebadb364a638f8f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testCopyNoRemove()", "signatureAfterChange": "      @Test     public void testCopyNoRemove()", "diff": ["+    @Test", "-        executeTarget(\"copynoremove\");", "-        String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "+        buildRule.executeTarget(\"copynoremove\");", "+        String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "-        String f = getProject().getProperty(\"dest\") + \"/e/f\";", "+        String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\";", "-        assertTrue(getFullLog().indexOf(\"Removing orphan file:\") == -1);", "+        assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") == -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7827471fb58701db36de5167b5478cfb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testPatternSetIncludeAndExclude()", "signatureAfterChange": "     @Test     public void testPatternSetIncludeAndExclude()", "diff": ["+    @Test", "-        executeTarget(\"testPatternSetIncludeAndExclude\");", "-        assertFileMissing(\"1/foo is not included\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileMissing(\"2/bar is excluded\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testPatternSetIncludeAndExclude\");", "+        assertFileMissing(\"1/foo is not included\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileMissing(\"2/bar is excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801b8c83e8334488543ce0514d059725", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/FileListTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void testEmptyElementIfIsReference()", "signatureAfterChange": "          @Test     public void testEmptyElementIfIsReference()", "diff": ["+    @Test", "-        f.setDir(project.resolveFile(\".\"));", "+        f.setDir(buildRule.getProject().resolveFile(\".\"));", "-            f.setRefid(new Reference(getProject(), \"dummyref\"));", "+            f.setRefid(new Reference(buildRule.getProject(), \"dummyref\"));", "-            f.setRefid(new Reference(getProject(), \"dummyref\"));", "+            f.setRefid(new Reference(buildRule.getProject(), \"dummyref\"));", "-        f.setRefid(new Reference(getProject(), \"dummyref\"));", "+        f.setRefid(new Reference(buildRule.getProject(), \"dummyref\"));", "-            f.setDir(project.resolveFile(\".\"));", "+            f.setDir(buildRule.getProject().resolveFile(\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ef780bcf5d4d8fc1e4e0a3d88cdd63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void testGlobMapper()", "signatureAfterChange": "     @Test     public void testGlobMapper()", "diff": ["+    @Test", "-        executeTarget(\"testGlobMapper\");", "-        assertFileMissing(\"1/foo is not mapped\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"1/foo is mapped\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo.txt\");", "+        buildRule.executeTarget(\"testGlobMapper\");", "+        assertFileMissing(\"1/foo is not mapped\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"1/foo is mapped\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo.txt\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a59677f8f27e0feb5377bba36c41b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/resources/ResourceListTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testCircularReference() throws Exception", "signatureAfterChange": "      @Test     public void testCircularReference() throws Exception", "diff": ["+    @Test", "-        rl1.setProject(getProject());", "-        rl1.setRefid(new Reference(getProject(), \"foo\"));", "+        rl1.setProject(buildRule.getProject());", "+        rl1.setRefid(new Reference(buildRule.getProject(), \"foo\"));", "-        rl2.setProject(getProject());", "-        getProject().addReference(\"foo\", rl2);", "+        rl2.setProject(buildRule.getProject());", "+        buildRule.getProject().addReference(\"foo\", rl2);", "-        u.setProject(getProject());", "+        u.setProject(buildRule.getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87133b7cf65fa42ff47b0c4ec7be8d67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testChildrenOfExcludedDirectory()", "signatureAfterChange": "     @Test     public void testChildrenOfExcludedDirectory()", "diff": ["+    @Test", "-        getProject().executeTarget(\"children-of-excluded-dir-setup\");", "+        buildRule.getProject().executeTarget(\"children-of-excluded-dir-setup\");", "-        ds.setBasedir(new File(getProject().getProperty(\"output\")));", "+        ds.setBasedir(new File(buildRule.getProject().getProperty(\"output\")));", "-        ds.setBasedir(new File(getProject().getProperty(\"output\")));", "+        ds.setBasedir(new File(buildRule.getProject().getProperty(\"output\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b88537fa4a1d6f9a58295117948bd82e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void testFileResourcePlain()", "signatureAfterChange": "          @Test     public void testFileResourcePlain()", "diff": ["+    @Test", "-        executeTarget(\"testFileResourcePlain\");", "-        File file1 = new File(getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "-        File file2 = new File(getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "-        File file3 = new File(getProject().getProperty(\"to.dir\")+\"/file3.txt\");", "+        buildRule.executeTarget(\"testFileResourcePlain\");", "+        File file1 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file1.txt\");", "+        File file2 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file2.txt\");", "+        File file3 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file3.txt\");", "+        assertTrue(file1.exists());", "+        assertTrue(file2.exists());", "+        assertTrue(file3.exists());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d8a8c9a3335ac093879f59350649fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void testPatternSetExcludeOnly()", "signatureAfterChange": "     @Test     public void testPatternSetExcludeOnly()", "diff": ["+    @Test", "-        executeTarget(\"testPatternSetExcludeOnly\");", "-        assertFileMissing(\"1/foo is excluded\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"2/bar is not excluded\", getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");", "+        buildRule.executeTarget(\"testPatternSetExcludeOnly\");", "+        assertFileMissing(\"1/foo is excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"2/bar is not excluded\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/2/bar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cee14d14950bc4aa46ecd6c86af50e02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void _testFileResourceWithMapper()", "signatureAfterChange": "      @Ignore(\"Previously ignored by naming convention\")     @Test     public void testFileResourceWithMapper()", "diff": ["+", "+    @Ignore(\"Previously ignored by naming convention\")", "+    @Test", "+    public void testFileResourceWithMapper() {", "+        buildRule.executeTarget(\"testFileResourceWithMapper\");", "+        File file1 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file1.txt.bak\");", "+        File file2 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file2.txt.bak\");", "+        File file3 = new File(buildRule.getProject().getProperty(\"to.dir\")+\"/file3.txt.bak\");", "-    public void _testFileResourceWithMapper() {", "-        executeTarget(\"testFileResourceWithMapper\");", "-        File file1 = new File(getProject().getProperty(\"to.dir\")+\"/file1.txt.bak\");", "-        File file2 = new File(getProject().getProperty(\"to.dir\")+\"/file2.txt.bak\");", "-        File file3 = new File(getProject().getProperty(\"to.dir\")+\"/file3.txt.bak\");", "-        assertTrue(file1.exists());", "-        assertTrue(file2.exists());", "-        assertTrue(file3.exists());", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3be8dd4c72c1cef7d2ed01883cfc722", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SyncTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testCopyNoRemoveSelectors()", "signatureAfterChange": "      @Test     public void testCopyNoRemoveSelectors()", "diff": ["+    @Test", "-        executeTarget(\"copynoremove-selectors\");", "-        String d = getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "+        buildRule.executeTarget(\"copynoremove-selectors\");", "+        String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\";", "-        String f = getProject().getProperty(\"dest\") + \"/e/f\";", "+        String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\";", "-        assertTrue(getFullLog().indexOf(\"Removing orphan file:\") == -1);", "+        assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") == -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7473ae02bb21d576b286e49d4e8107", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UnzipTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testFlattenMapper()", "signatureAfterChange": "     @Test     public void testFlattenMapper()", "diff": ["+    @Test", "-        executeTarget(\"testFlattenMapper\");", "-        assertFileMissing(\"1/foo is not flattened\", getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "-        assertFileExists(\"foo is flattened\", getProject().getProperty(\"output\") + \"/unziptestout/foo\");", "+        buildRule.executeTarget(\"testFlattenMapper\");", "+        assertFileMissing(\"1/foo is not flattened\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/1/foo\");", "+        assertFileExists(\"foo is flattened\", buildRule.getProject().getProperty(\"output\") + \"/unziptestout/foo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f07f9caf2845ea767399d585259e8f0f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/TarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void test7(String target)", "signatureAfterChange": "      private void test7(String target)", "diff": ["-        executeTarget(target);", "+        buildRule.executeTarget(target);", "-            = new File(getProject().getProperty(\"output\"), \"untar/test7-prefix\");", "+            = new File(buildRule.getProject().getProperty(\"output\"), \"untar/test7-prefix\");", "-            = new File(getProject().getProperty(\"output\"), \"untar/test7dir\");", "+            = new File(buildRule.getProject().getProperty(\"output\"), \"untar/test7dir\");"]}]}