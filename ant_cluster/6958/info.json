{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c95bb230203d95adff3e25c83c2b05c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "193a22e0abfeae7cbdf80932df068f97", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "bf94e2fb091644d9c249322d9574ab6bb1e6a3d8", "commitAfterChange": "3c26912e56e06ac64c392444cb19e3587f1bbb11", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     \t     private  void loadResource( String name )", "signatureAfterChange": "      private void loadResource( String name )", "diff": ["-\t", "-    private  void loadResource( String name ) {", "-\tProperties props = new Properties();", "-\tproject.log(\"Resource Loading \" + name,", "-\t\t    project.MSG_VERBOSE);", "-\ttry {", "-\t    InputStream is=this.getClass().getResourceAsStream(name);", "-\t    if(is!=null)", "-\t\tprops.load(is);", "-\t} catch (Exception ex) {", "-\t    ex.printStackTrace();", "-\t}", "-\taddProperties( props );", "-    }    ", "+    private void loadResource( String name ) {", "+        Properties props = new Properties();", "+        project.log(\"Resource Loading \" + name, project.MSG_VERBOSE);", "+        try {", "+            InputStream is = this.getClass().getResourceAsStream(name);", "+            if (is != null) {", "+                props.load(is);", "+                addProperties(props);", "+            }", "+        } catch (Exception ex) {", "+            ex.printStackTrace();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20a881cb52160969a496d45cfcea35f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "bf94e2fb091644d9c249322d9574ab6bb1e6a3d8", "commitAfterChange": "3c26912e56e06ac64c392444cb19e3587f1bbb11", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private void loadFile( String name )", "signatureAfterChange": "      private void loadFile (String name)", "diff": ["+    private void loadFile (String name) {", "+        Properties props = new Properties();", "+        project.log(\"Loading \" + name, project.MSG_VERBOSE);", "+        try {", "+            if (new File(name).exists()) {", "+                props.load(new FileInputStream(name));", "+                addProperties(props);", "+            }", "+        } catch(Exception ex) {", "+            ex.printStackTrace();", "+        }", "-    ", "-    private void loadFile( String name ) {", "-\tProperties props = new Properties();", "-\tproject.log(\"Loading \" + name, project.MSG_VERBOSE);", "-\ttry {", "-\t    if( new File(name).exists() )", "-\t\tprops.load(new FileInputStream( name ));", "-\t} catch(Exception ex) {", "-\t    ex.printStackTrace();", "-\t}", "-\taddProperties( props );", "-    }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695371729ac2b3f81a89a40657c1d96e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "c5fc0e2e08e3567841368f443e1f5b5d1912f8c8", "commitAfterChange": "0777fa853af3a619d777adaead96e9c0d1aff291", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                }", "-                if (!basedir.exists()) {", "-                    illegal = new IllegalStateException(\"basedir \" + basedir", "-                                                    + \" does not exist\");", "-                }", "-                if (!basedir.isDirectory()) {", "-                    illegal = new IllegalStateException(\"basedir \" + basedir", "-                                                    + \" is not a directory\");", "+                } else {", "+                    if (!basedir.exists()) {", "+                        illegal = new IllegalStateException(\"basedir \" + basedir", "+                                                        + \" does not exist\");", "+                    }", "+                    if (!basedir.isDirectory()) {", "+                        illegal = new IllegalStateException(\"basedir \" + basedir", "+                                                        + \" is not a directory\");", "+                    }"]}]}