{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2515b98d181f3562ae990f17d95dce38", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55369acfadd06809d63544a1f04834be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/Fail.java", "commitBeforeChange": "4ab1c363ef3aa8889a3c9bd5653c41ec751e2205", "commitAfterChange": "6ab3e313864e62f2c77a52d8c636daa20a7dfcb8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-", "-        boolean failed = true;", "-", "-        if( null != m_condition )", "+        if( null != m_message )", "-            failed = m_condition.evaluate( getContext() );", "+            throw new TaskException( m_message );", "-", "-        if( failed )", "+        else", "-            if( null != m_message )", "-            {", "-                throw new TaskException( m_message );", "-            }", "-            else", "-            {", "-                throw new TaskException();", "-            }", "+            throw new TaskException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88922b71ce9c860af395826c9f61827f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "commitAfterChange": "80793a20ada49e7453e836ffeab1e41c8a88d49d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private Project build( final File file, final HashMap projects )         throws Exception", "signatureAfterChange": "      private Project build( final File file, final HashMap projects )         throws ProjectException", "diff": ["-        throws Exception", "+        throws ProjectException", "-        final URL systemID = file.toURL();", "+        final URL systemID = extractURL( file );", "-        final SAXConfigurationHandler handler = new SAXConfigurationHandler();", "+        // Parse the project file", "+        final Configuration configuration = parseProject( systemID );", "-        process( systemID, handler );", "-", "-        final Configuration configuration = handler.getConfiguration();", "-", "+        // Build the project model"]}]}