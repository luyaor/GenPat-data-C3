{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fe2c18b8d8e0bb7e410f21c06fc48be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0ee39d12c8dedf29a4b9262027eaeb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/StringUtils.java", "commitBeforeChange": "3a42777b65320f28e62ec04faa467fd02f715b10", "commitAfterChange": "3c64066ee795554897c5a4003e81d37c5375bafa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "signatureAfterChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "diff": ["-    \tfinal long KILOBYTE = 1024;", "-    \tfinal long MEGABYTE = KILOBYTE * 1024;", "-    \tfinal long GIGABYTE = MEGABYTE * 1024;", "-    \tfinal long TERABYTE = GIGABYTE * 1024;", "-    \tfinal long PETABYTE = TERABYTE * 1024;", "-    \tif(!Character.isDigit(humanSize.charAt(humanSize.length()-1))) {", "-    \t\tchar c = humanSize.charAt(humanSize.length()-1);", "-    \t\tlong value = Long.valueOf(humanSize.substring(0, humanSize.length()-1)).longValue();", "-    \t\tswitch (c) {", "-    \t\t\tcase 'K':", "-    \t\t\t\treturn value * KILOBYTE;", "-    \t\t\tcase 'M':", "-    \t\t\t\treturn value * MEGABYTE;", "-    \t\t\tcase 'G':", "-    \t\t\t\treturn value * GIGABYTE;", "-    \t\t\tcase 'T':", "-    \t\t\t\treturn value * TERABYTE;", "-    \t\t\tcase 'P':", "-    \t\t\t\treturn value * PETABYTE;", "-    \t\t\tdefault:", "-    \t\t\t\treturn value;", "-    \t\t}", "-    \t} else {", "-    \t    return Long.parseLong(humanSize);", "-    \t}", "+        if (!Character.isDigit(humanSize.charAt(humanSize.length() - 1))) {", "+            char c = humanSize.charAt(humanSize.length() - 1);", "+            long value = Long.valueOf(", "+                humanSize.substring(", "+                    0, humanSize.length() - 1)).longValue();", "+            switch (c) {", "+                case 'K':", "+                    return value * KILOBYTE;", "+                case 'M':", "+                    return value * MEGABYTE;", "+                case 'G':", "+                    return value * GIGABYTE;", "+                case 'T':", "+                    return value * TERABYTE;", "+                case 'P':", "+                    return value * PETABYTE;", "+                default:", "+                    return value;", "+            }", "+        } else {", "+            return Long.parseLong(humanSize);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980d7f2d31bb217817810fc8a15ee056", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/StringUtils.java", "commitBeforeChange": "e261f46af20c574e83b1636fbe9808850f8fcd34", "commitAfterChange": "16bab4de70072d2c7fbcc17609068ed036e17ecf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "signatureAfterChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "diff": ["+        long factor = 1L;", "+        char s = humanSize.charAt(0);", "+        switch (s) {", "+            case '+':", "+                humanSize = humanSize.substring(1);", "+                break;", "+            case '-':", "+                factor = -1L;", "+                humanSize = humanSize.substring(1);", "+                break;", "+            default:", "+                break;", "+        }", "-        if (!Character.isDigit(humanSize.charAt(humanSize.length() - 1))) {", "-            char c = humanSize.charAt(humanSize.length() - 1);", "-            long value = Long.valueOf(", "-                humanSize.substring(", "-                    0, humanSize.length() - 1)).longValue();", "+        char c = humanSize.charAt(humanSize.length() - 1);", "+        if (!Character.isDigit(c)) {", "-                    return value * KILOBYTE;", "+                    factor *= KILOBYTE;", "+                    break;", "-                    return value * MEGABYTE;", "+                    factor *= MEGABYTE;", "+                    break;", "-                    return value * GIGABYTE;", "+                    factor *= GIGABYTE;", "+                    break;", "-                    return value * TERABYTE;", "+                    factor *= TERABYTE;", "+                    break;", "-                    return value * PETABYTE;", "+                    factor *= PETABYTE;", "+                    break;", "-                    return value;", "+                    break;", "-        } else {", "-            return Long.parseLong(humanSize);", "+            humanSize = humanSize.substring(0, humanSize.length() - 1);", "+        return factor * Long.parseLong(humanSize);"]}]}