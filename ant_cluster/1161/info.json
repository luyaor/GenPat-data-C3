{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "053067bcab2b3796ed21f2746850a248", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a5f5b2b822fb82617bbbfbc3fee4a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "54fec62b385b75dc3eb2919685dbddc032e316a1", "commitAfterChange": "a9353331a922b229316fa3da01f1b2df9fd75059", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String[] getIncludedDirectories()", "signatureAfterChange": "     public String[] getIncludedDirectories()", "diff": ["-        return new String[0];", "+        Vector myvector=new Vector();", "+        // first check if the archive needs to be scanned again", "+        scanme();", "+        for (int counter = 0; counter < myentries.size(); counter++) {", "+            Resource myresource = (Resource) myentries.elementAt(counter);", "+            if (myresource.isDirectory() && match(myresource.getName())) {", "+                myvector.addElement(myresource.getName());", "+            }", "+        }", "+        String[] files = new String[myvector.size()];", "+        myvector.copyInto(files);", "+        return files;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfbf2d6afc2cbf9c5a02a6d8c3be878", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "54fec62b385b75dc3eb2919685dbddc032e316a1", "commitAfterChange": "a9353331a922b229316fa3da01f1b2df9fd75059", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] getIncludedFiles()", "signatureAfterChange": "     public String[] getIncludedFiles()", "diff": ["-    public String[] getIncludedFiles() {", "-        String[] result = new String[1];", "-        result[0] = srcFile.getAbsolutePath();", "-        return result;", "+     */", "+    public String[] getIncludedFiles() {", "+        Vector myvector = new Vector();", "+        // first check if the archive needs to be scanned again", "+        scanme();", "+        for (int counter = 0; counter < myentries.size(); counter++) {", "+            Resource myresource= (Resource) myentries.elementAt(counter);", "+            if (!myresource.isDirectory() && match(myresource.getName())) {", "+                myvector.addElement(myresource.getName());", "+            }", "+        }", "+        String[] files = new String[myvector.size()];", "+        myvector.copyInto(files);", "+        return files;", "+    }"]}]}