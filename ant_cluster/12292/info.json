{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03220fb6251708ac6ff76fc721d96aff", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085184422f66cf3ca18bc9b028dab637", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/EchoProperties.java", "commitBeforeChange": "a34ad0e8fa17754d15a1eb454a854ba2158a1a4d", "commitAfterChange": "7dd5e65a056c490727f5edb12a5f58642c7fa269", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void xmlSaveProperties(Properties props,                                      OutputStream os) throws IOException", "signatureAfterChange": "      protected void xmlSaveProperties(Properties props,                                      OutputStream os) throws IOException", "diff": ["+", "+        List sorted=sortProperties(props);", "+", "+", "-        String name;", "-        Enumeration e = props.propertyNames();", "-        while (e.hasMoreElements()) {", "-            name = (String) e.nextElement();", "+        Iterator iten = sorted.iterator();", "+        while (iten.hasNext()) {", "+            Tuple tuple = (Tuple) iten.next();", "-            propElement.setAttribute(ATTR_NAME, name);", "-            propElement.setAttribute(ATTR_VALUE, props.getProperty(name));", "+            propElement.setAttribute(ATTR_NAME, tuple.key);", "+            propElement.setAttribute(ATTR_VALUE, tuple.value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436dd652275749a673c47f99fd17cf48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void startTestSuite(JUnitTest suite)", "signatureAfterChange": " \tpublic void startTestSuite(final JUnitTest suite)", "diff": ["-\tpublic void startTestSuite(JUnitTest suite) {", "+\tpublic void startTestSuite(final JUnitTest suite) {", "-        String n = suite.getName();", "+        final String n = suite.getName();", "-        Element propsElement = doc.createElement(PROPERTIES);", "+        final Element propsElement = doc.createElement(PROPERTIES);", "-        Properties props = suite.getProperties();", "+        final Properties props = suite.getProperties();", "-            Enumeration e = props.propertyNames();", "+            final Enumeration e = props.propertyNames();", "-                String name = (String) e.nextElement();", "-                Element propElement = doc.createElement(PROPERTY);", "+                final String name = (String) e.nextElement();", "+                final Element propElement = doc.createElement(PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb24346bf27374792b315056314245c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "4624d76d0403dd32a4d5102c47e890bb0c0be6fc", "commitAfterChange": "230952c5a86a38ebd7208a91012d91ff87491a54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void startTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void startTestSuite(JUnitTest suite)", "diff": ["+", "+        // Output properties", "+        Element propsElement = doc.createElement(PROPERTIES);", "+        rootElement.appendChild(propsElement);", "+        Properties props = suite.getProperties();", "+        if (props != null) {", "+            Enumeration e = props.propertyNames();", "+            while (e.hasMoreElements()) {", "+                String name = (String) e.nextElement();", "+                Element propElement = doc.createElement(PROPERTY);", "+                propElement.setAttribute(ATTR_NAME, name);", "+                propElement.setAttribute(ATTR_VALUE, props.getProperty(name));", "+                propsElement.appendChild(propElement);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12d9168ef79eca0679de79ed94c85b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "4e222b97c6be55124832d53c6478a2688df9e308", "commitAfterChange": "22e36e493cfa20ba754a35363401781f7a4cd588", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-            if (!text.endsWith(\"\\n\")) {", "-                text = text + \"\\n\";", "-            }", "-                StringInputStream sis = new StringInputStream(text);", "-                Properties props = new Properties();", "+                if (!text.endsWith(\"\\n\")) {", "+                    text = text + \"\\n\";", "+                }", "+", "+                final StringInputStream sis = new StringInputStream(text);", "+                final Properties props = new Properties();", "-                Enumeration e = props.keys();", "+                final Enumeration e = props.keys();", "-                    String key = (String) e.nextElement();", "-                    String value = props.getProperty(key);", "+                    final String key = (String) e.nextElement();", "+                    final String value = props.getProperty(key);"]}]}