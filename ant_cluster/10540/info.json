{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82c8129b0c375fff74a1d1a763dd098a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355aca12258f499b2734c21c1c89098d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "9b1699347cf0932238521bd920743322408a20fd", "commitAfterChange": "a62c18b46505e8c47c8fd837b75fd6cc9672b77a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private File findFile(File base, Vector pathElements, boolean cs)", "signatureAfterChange": "     private File findFile(File base, Vector pathElements, boolean cs)", "diff": ["-        //always scan first NOT ignoring case; if cs, do a 2nd scan ignoring case:", "-        boolean[] ignoreCase = cs ? new boolean[] {false}", "-                                  : new boolean[] {false, true};", "-        for (int i = 0; i < ignoreCase.length; i++) {", "+        boolean[] matchCase = cs ? csScanOnly : csThenNonCs;", "+        for (int i = 0; i < matchCase.length; i++) {", "-                if (ignoreCase[i] ? files[j].equalsIgnoreCase(current)", "-                                  : files[j].equals(current)) {", "+                if (matchCase[i] ? files[j].equals(current)", "+                                 : files[j].equalsIgnoreCase(current)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d3ae31ebdee04c4dc412e147f45856", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "4c89cabbb86008692979a5573d3c5fa49c2dc6d7", "commitAfterChange": "65802780b638e786a26841d5c3e2cba710d7b716", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 50, "signatureBeforeChange": "     private File findFile(File base, Vector pathElements)", "signatureAfterChange": "     private File findFile(File base, Vector pathElements, boolean cs)", "diff": ["-    private File findFile(File base, Vector pathElements) {", "+    private File findFile(File base, Vector pathElements, boolean cs) {", "-        for (int i = 0; i < files.length; i++) {", "-            if (files[i].equals(current)) {", "-                base = new File(base, files[i]);", "-                return findFile(base, pathElements);", "+", "+        //always scan first NOT ignoring case; if cs, do a 2nd scan ignoring case:", "+        boolean[] ignoreCase = cs ? new boolean[] {false}", "+                                  : new boolean[] {false, true};", "+        for (int i = 0; i < ignoreCase.length; i++) {", "+            for (int j = 0; j < files.length; j++) {", "+                if (ignoreCase[i] ? files[j].equalsIgnoreCase(current)", "+                                  : files[j].equals(current)) {", "+                    return findFile(new File(base, files[j]), pathElements, cs);", "+                }"]}]}