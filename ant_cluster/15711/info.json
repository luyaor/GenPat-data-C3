{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39d3b0b88739d013701c121ffd86c8b7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c746b29dd482886e8d17bf76f793234", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "db060df3c3ec41339c5fcbf8c177ec9f01299cae", "commitAfterChange": "ac067a950849bfb82b9f8efd45231946d1020a37", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean isFilesystemOnly()", "signatureAfterChange": "     public boolean isFilesystemOnly()", "diff": ["-        //first the easy way, if all children are filesystem-only, return true:", "-        boolean goEarly = true;", "-        for (Iterator i = rc.iterator(); goEarly && i.hasNext();) {", "-            goEarly &= ((ResourceCollection) i.next()).isFilesystemOnly();", "-        }", "-        if (goEarly) {", "-            return true;", "-        }", "-        /* now check each Resource in case the child only", "-           lets through files from any children IT may have: */", "-        for (Iterator i = coll.iterator(); i.hasNext();) {", "-            if (!(i.next() instanceof FileResource)) {", "+", "+        for (Iterator i = rc.iterator(); i.hasNext();) {", "+            if ((!((ResourceCollection) i.next()).isFilesystemOnly())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c542a5e0a9ad8df909122d1e97d5e0da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "ee8253d44092b233c85c7fa6dfba4d0cfb212208", "commitAfterChange": "e02f2e063e55edc1eac5bfabf4bf637f34234199", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "             public boolean hasNext()", "signatureAfterChange": "                 public boolean hasNext()", "diff": ["+                }", "+                public boolean hasNext() {", "+                    return false;", "+                }"]}]}