{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89106a3617625695472af1ceb9bd4d8c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01c61984f3fa39275d95b365bfbf5cf4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ProcessDestroyer.java", "commitBeforeChange": "0c7b42e0748a73a5f05bd7c914ca61b277e3f268", "commitAfterChange": "9b29322cc46d2345c447ceca17d1f2dd6a54840d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void removeShutdownHook()", "signatureAfterChange": "     private void removeShutdownHook()", "diff": ["-            destroyProcessThread.start();", "+            if (!destroyProcessThread.getThreadGroup().isDestroyed()) {", "+                // start() would throw IllegalThreadStateException from ThreadGroup.add if it were destroyed", "+                destroyProcessThread.start();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03e9ac8c9e54956d761ea75b87c942fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd)", "diff": ["+        if (attributes.getNowarn()) {", "+            cmd.createArgument().setValue(\"-nowarn\");", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5a62f97a994549341bead16e701b53", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/RedirectorElementTest.java", "commitBeforeChange": "80d6afd5550046ca2f9f76a91a90860e01b2f4de", "commitAfterChange": "782bc2133231a9aa7556b334d33215e3d2b73230", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testLogInputString()", "signatureAfterChange": "      public void testLogInputString()", "diff": ["-        assertDebuglogContaining(\"Using input string\");", "+        if (super.getLog().indexOf(\"testLogInputString can-cat\") >=0 ) {", "+            assertDebuglogContaining(\"Using input string\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11b375fd82377c459f1eaeac750419f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "7204df0def8075369c9facbe5cbaf66a9fe2f6e4", "commitAfterChange": "4504d523db910ddb186ece5ad5eb91bc8b21612d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private boolean validateAndExecute() throws BuildException", "signatureAfterChange": "     private boolean validateAndExecute() throws BuildException", "diff": ["-                if (filesets.size() > 1) {", "+                if (filesets.size() > 1", "+                    || ((FileSet) filesets.get(0)).size() > 1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb9ebd80eed394522a11c286ca69b0a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "e7b3093e3e8b57071284362be40bf58fa7f0f88b", "commitAfterChange": "1a850087363ee5a30d9c98007e1f253c4b134f13", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected void printResults(ResultSet rs, PrintStream out) throws SQLException", "signatureAfterChange": "     protected void printResults(ResultSet rs, PrintStream out) throws SQLException", "diff": ["+                    if (showWarnings) {", "+                        printWarnings(rs.getWarnings(), Project.MSG_WARN);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269adb9a1c209d587e368bbb8b1de1fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ScriptRunner.java", "commitBeforeChange": "c977aacfc4fa74e97980255432216d87bf617018", "commitAfterChange": "efef302a3da9a9e063da729c92f6f2b997884a9a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void executeScript(String execName) throws BuildException", "signatureAfterChange": "     public void executeScript(String execName) throws BuildException", "diff": ["-                manager.declareBean(key, value, value.getClass());", "+                if (value != null) {", "+                    manager.declareBean(key, value, value.getClass());", "+                } else {", "+                    // BSF uses a hashtable to store values", "+                    // so cannot declareBean with a null value", "+                    // So need to remove any bean of this name as", "+                    // that bean should not be visible", "+                    manager.undeclareBean(key);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29da5ddc3894df32bb64aa5640280d65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java", "commitBeforeChange": "c1080f1b8a8469dc79a8f5f86b287544b0ad0b6b", "commitAfterChange": "fb18e7aee4b1f337a6921ef5fa23025b7926b939", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void getLocalpathCommand(Commandline cmd)", "signatureAfterChange": "     public void getLocalpathCommand(Commandline cmd)", "diff": ["-            cmd.createArgument().setValue(FLAG_OVERRIDE_WORKING_DIR + m_LocalPath);", "+            cmd.createArgument().setValue(FLAG_OVERRIDE_WORKING_DIR);", "+            cmd.createArgument().setValue(m_LocalPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3004bd9a43e399e188adb31ad3facd9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/svn/src/main/org/apache/tools/ant/taskdefs/svn/AbstractSvnTask.java", "commitBeforeChange": "3477cc58497f2c2b2f53e9f2b894f27a10146f1a", "commitAfterChange": "e847b7051b2d5bff53a801a32df9f95f73d11f0e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void configureCommandline(Commandline c)", "signatureAfterChange": "     protected void configureCommandline(Commandline c)", "diff": ["+        if (verbose) {", "+            c.createArgument(true).setValue(\"--verbose\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31b1101284ad88d05960f36be0c79338", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "9a672c0324330cb54b5f0b95e09851cca8f9b76d", "commitAfterChange": "005e538b5ab18e50f4794f0e6f7b1a249a274087", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "diff": ["-            // clean the addedfiles Vector", "-            addedfiles = new ArrayList();", "+            // clean the addedfiles set", "+            if (addedfiles == null) {", "+                addedfiles = new HashSet();", "+            } else {", "+                addedfiles.clear();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32db7c8b3d16801296f50dc2b3070d81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "86fdee1fa7e3c4535c0c8180ceafb6abd38a88ec", "commitAfterChange": "468d6cb9f438fecbfe4b3c170d829e27e1d090b8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "     protected void configureCommandline(Commandline c)", "signatureAfterChange": "     protected void configureCommandline(Commandline c)", "diff": ["-        if (quiet) {", "+        if (quiet && !reallyquiet) {", "+        if (reallyquiet) {", "+            c.createArgument(true).setValue(\"-Q\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c5581e8968b824b7370b4fd772517f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "0a679803f04b2e3e9d63c5f6b46677b0cf713d6b", "commitAfterChange": "a4e5c13b86391f9b7ad23e326fe3d2bb66a16cc7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 17, "signatureBeforeChange": "         private void accountForIncludedFile(String name)", "signatureAfterChange": "         private void accountForIncludedFile(String name)", "diff": ["-                    if (!isExcluded(name)) {", "+                    if (!isExcluded(name)", "+                        && isSelected(name, (File) scannedDirs.get(name))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dba140c0ced4ebb2c393aeb5a2725bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "c87d8a40d469a2d16be12e2d9f64ea7bde06dd0f", "commitAfterChange": "8a2fee91baa0a5de7d4d47da87afd1de4183c7b9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void populateAttributes()", "signatureAfterChange": "     private void populateAttributes()", "diff": ["-            commandline.createArgument().setValue(\"-traceTreeWalker\");", "+            if (is272()) {", "+                commandline.createArgument().setValue(\"-traceTreeParser\");", "+            } else {", "+                commandline.createArgument().setValue(\"-traceTreeWalker\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de20f01c83e05b3d559cd96cfd2ddb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "da4c9d0f1dc4242d39d76b475a78f1934f612fd7", "commitAfterChange": "528fbc7fd5b195f3cd7e209dc73119d28a7d1318", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void populateAttributes()", "signatureAfterChange": "     private void populateAttributes()", "diff": ["+        if (debug) {", "+            commandline.createArgument().setValue(\"-debug\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41ad676e855410f1a6887a9bd2ce1c37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogTask.java", "commitBeforeChange": "444a47088e5aaa197206694b14760b53ce3dc168", "commitAfterChange": "092cd9e58fc782bb605411cddc161bb7cec549b8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                final String dateRange = \"-d >=\"", "-                     + outputDate.format(m_start);", "+                final String dateRange = \">=\" + outputDate.format(m_start);", "+\t\t// Supply '-d' as a separate argument - Bug# 14397", "+                command.createArgument().setValue(\"-d\");", "-            log(\"ChangeLog command: [\" + command.toString() + \"]\",", "-                Project.MSG_VERBOSE);", "+            log(command.describeCommand(), Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b7cbf43c71ae2070aca166d77dc936", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "8f927b8ff527c174d0efe0ded1a1be49f1bb434c", "commitAfterChange": "03c6952a50ba663cea05d8a3e4cc4ca4b956d879", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 124, "signatureBeforeChange": "     private void addFileSets(Vector sf)", "signatureAfterChange": "     private void addFileSets(Vector sf)", "diff": ["+                if (includeNoSourcePackages) {", "+                    fs.createInclude().setName(\"**/package.html\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513d13f2db9a33e231378eb2e5cd233a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "c5e1c21947ec2bb7f0493ce72994cb180ccdca40", "commitAfterChange": "b91587431f111bc616846344d88086667b3b2a16", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["+                            args[i] = args[i].replace('\\\\', '/');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55abf3b8b3f92972fff9a4cec8c99cb5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetCompile.java", "commitBeforeChange": "cf6d4fb6ccbb1a73bdfb3b7ffbb3727ce9fbe958", "commitAfterChange": "4c695bbb72867aa13029de177f468c38ab787174", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "signatureAfterChange": "      protected int addReferenceFilesets(NetCommand command, long outputTimestamp)", "diff": ["+                } else {", "+                    referenceList.append('\\\"');", "-        //add it all to an argument", "-        command.addArgument(referenceList.toString());", "+        // hack: This means we've added at least one reference that's", "+        // a managed binary", "+        if (!firstEntry) {", "+            //add it all to an argument", "+            command.addArgument(referenceList.toString() + '\\\"');", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cbeb3a2b5c3097bf1cf3a1ffd4348f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "c2838fbcebb50ffff4b1a173a61751e08ddd9c9f", "commitAfterChange": "b8a829b11b4a014b9cfa454ef27597240860e36f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void overrideProperties() throws BuildException", "signatureAfterChange": "     private void overrideProperties() throws BuildException", "diff": ["+        if (allowNativeBasedir) {", "+            addAlmostAll(getProject().getInheritedProperties(),", "+                         PropertyType.INHERITED);", "+        } else {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "802634968e125ac688fb0f7655f0f4e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "126daf8b31f6c01d1c6891581195db9956142970", "commitAfterChange": "a898d14776143b295b706a5e38a2f979e753356d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["+        cmd.createArgument().setValue(\"logtestlistenerevents=true\"); // #31885", "-        Execute execute = new Execute(new LogStreamHandler(this,", "-                                                           Project.MSG_INFO,", "-                                                           Project.MSG_WARN),", "+        Execute execute = new Execute(new JUnitLogStreamHandler(this,", "+                                                                Project.MSG_INFO,", "+                                                                Project.MSG_WARN),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f58fff67ae89f06b06c71022f015ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "1fb0f64b965c5296015b4d367771a2bc27e34148", "commitAfterChange": "a29e1aaf138cf3bc63dd4adf70604c95ff8ca64f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addText(Project project, Object element, String text)", "signatureAfterChange": "     public void addText(Project project, Object element, String text)", "diff": ["-           String msg = getElementName(project, element) +", "-           //String msg = \"Class \" + element.getClass().getName() +", "-                \" doesn't support nested text data.\";", "-            throw new BuildException(msg);", "+            // Element doesn't handle text content", "+            if ( text.trim().length() == 0 ) {", "+                // Only whitespace - ignore", "+                return;", "+            }", "+            else {", "+                // Not whitespace - fail", "+                String msg = getElementName(project, element) +", "+                    \" doesn't support nested text data.\";", "+                throw new BuildException(msg);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f786eba58484db8a78b2b7cfbb88c87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "640b7f41f039dd3ef8e41c5af7d86c201918d09a", "commitAfterChange": "35845f7053e12288a95bf9720532d772ea2fa60b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void runExecute(Execute exe) throws IOException", "signatureAfterChange": "     protected final void runExecute(Execute exe) throws IOException", "diff": ["-        returnCode = exe.execute();", "+        if (!spawn) {", "+            returnCode = exe.execute();", "-        //test for and handle a forced process death", "-        if (exe.killedProcess()) {", "-            log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "-        }", "-        maybeSetResultPropertyValue(returnCode);", "-        if (Execute.isFailure(returnCode)) {", "-            if (failOnError) {", "-                throw new BuildException(getTaskType() + \" returned: \"", "-                    + returnCode, getLocation());", "-            } else {", "-                log(\"Result: \" + returnCode, Project.MSG_ERR);", "+            //test for and handle a forced process death", "+            if (exe.killedProcess()) {", "+                log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "+            maybeSetResultPropertyValue(returnCode);", "+            if (Execute.isFailure(returnCode)) {", "+                if (failOnError) {", "+                    throw new BuildException(getTaskType() + \" returned: \"", "+                        + returnCode, getLocation());", "+                } else {", "+                    log(\"Result: \" + returnCode, Project.MSG_ERR);", "+                }", "+            }", "+            redirector.complete();", "+        } else {", "+            exe.spawn();", "-        redirector.complete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9150851f481a225d751d1418208546ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/Import.java", "commitBeforeChange": "de190c4094ef4f0bb42d710d95b74bcef765aadc", "commitAfterChange": "e1018ac5bacf39393c79c27d80b07e1825189867", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ExecutionException", "diff": ["-        if (name == null) {", "+        if (ref != null) {", "+            componentService.importFrameComponent(ref, alias);", "+        } else if (name == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a0afc4a62133267d2c719366e7a592", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jvc.java", "commitBeforeChange": "59e3705b085db961e4ccb479670171bafb30a06e", "commitAfterChange": "736a4d27489980fa3ea6322ad7de27132c8e474d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["+        if (verbose) {", "+            cmd.createArgument().setValue(\"/verbose\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "993e15ff000f8806e34316113ff6e62b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "084ff1eb97a45252ae009abff8e513d28269253d", "commitAfterChange": "fa49c592432de2a96225b797b938cdbd1e4394b8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private String createOutputFileName(File target, String optionalOutputFile,                                         String outputDirectory)", "signatureAfterChange": "      private String createOutputFileName(File target, String optionalOutputFile,                                         String outputDirectory)", "diff": ["-                    optionalOutputFile = jjtreeFile.substring(0, suffixPos) ", "+                    optionalOutputFile = jjtreeFile.substring(0, suffixPos)", "-            outputDirectory = getProject().getBaseDir().getAbsolutePath();", "+            if (isAbsolute(optionalOutputFile)) {", "+                return optionalOutputFile.replace('\\\\','/');", "+            } else {", "+                outputDirectory = getProject().getBaseDir().getAbsolutePath();", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b1525fa9c48445961a66ddfed31fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "80962473e91835af31b494928c227d62aba6a9ef", "commitAfterChange": "2058109551cc0acb90301456c4c6627dba65836d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private IntrospectionHelper(final Class bean)", "signatureAfterChange": "      private IntrospectionHelper(final Class bean)", "diff": ["-                    if (java.lang.String.class.equals(args[0])) {", "+                    if (java.lang.String.class.equals(args[0])", "-                        */", "+                         */", "+                        || PreferredAttribute.class.", "+                            isAssignableFrom((Class)attributeTypes.get(propName))", "+                        /*", "+                            Ignore method m because there is an overloaded form of", "+                            this method that takes in a PreferredAttribute argument,", "+                            which gains higher priority.", "+                         */", "+                       ) {", "-                        If the argument is not a String, and if there", "+                        If the above conditions are not true, and if there", "-                    */", "+                     */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b300459132ab33e30c289465aca55c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "a1edb69c09e3476579d3281e7b032e6ecab4c37c", "commitAfterChange": "5c1e42a954c9a3212c5263e1fdb012ab48515807", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        if( debug )  {", "+            cmd.createArgument().setValue(\"-g\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5e5e0d8bc70ae3ec119a2a3057a427f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java", "commitBeforeChange": "bc22c6a47f0681744eca8a7bb8f7ffd116049415", "commitAfterChange": "d51fbdd73d8511b36c26fbf14bbf01a35a5c4616", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected ExecTask createJarSigner()", "signatureAfterChange": "     protected ExecTask createJarSigner()", "diff": ["-        cmd.setExecutable(JavaEnvUtils.getJdkExecutable(JARSIGNER_COMMAND));", "+        if (executable == null) {", "+            cmd.setExecutable(JavaEnvUtils.getJdkExecutable(JARSIGNER_COMMAND));", "+        } else {", "+            cmd.setExecutable(executable);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5e97009d373e3d66c857181a003d362", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "c2838fbcebb50ffff4b1a173a61751e08ddd9c9f", "commitAfterChange": "b8a829b11b4a014b9cfa454ef27597240860e36f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void initializeProject()", "signatureAfterChange": "     private void initializeProject()", "diff": ["+        if (allowNativeBasedir) {", "+            addAlmostAll(getProject().getUserProperties(), PropertyType.USER);", "+        } else {", "+        }", "-            addAlmostAll(getProject().getProperties());", "+            addAlmostAll(getProject().getProperties(), PropertyType.PLAIN);", "-            addAlmostAll(ps.getProperties());", "+            addAlmostAll(ps.getProperties(), PropertyType.PLAIN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef3e36374a8c07f3b37efcd7091e9d28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "beee9e6a6b6bacfe80808b3fb711c9fdaafd3310", "commitAfterChange": "4fbcfdedafc75b08541c4ad4d54b75d35300d4e7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "       protected Process exec() throws IOException", "signatureAfterChange": "       protected Process exec() throws IOException", "diff": ["-\t} else if (myos.toLowerCase().indexOf(\"windows\") >= 0 &&", "-\t\t   (myos.toLowerCase().indexOf(\"nt\") >= 0 ||", "-\t\t    myos.indexOf(\"2000\") >= 0)) {", "-\t    // cmd /c cd works OK on Windows NT & friends.", "+\t} else if ((myos.toLowerCase().indexOf(\"windows\") >= 0 &&", "+                       (myos.toLowerCase().indexOf(\"nt\") >= 0 ||", "+                        myos.indexOf(\"2000\") >= 0))", "+                      // cmd /c cd works OK on Windows NT & friends.", "+                   || myos.toLowerCase().indexOf(\"os/2\") >= 0", "+                      // as well as on OS/2", "+                   ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6191aeafe7cfbbaa7c3e9df2ca9e0df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "b5ad58c4d736b7f0a97aaa78b258dcceb9c21c89", "commitAfterChange": "7435b27b914764c3845b4821363ffeb4ddfe89cd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected boolean isRebuildRequired(File genericJarFile, File weblogicJarFile)", "signatureAfterChange": "     protected boolean isRebuildRequired(File genericJarFile, File weblogicJarFile)", "diff": ["-                                //File other then class changed   rebuild", "-                                log(\"Non class file \" + genericEntry.getName() + \" has changed\",Project.MSG_VERBOSE);", "-                                rebuild = true;", "+                                // is it the manifest. If so ignore it", "+                                if (!genericEntry.getName().equals(\"META-INF/MANIFEST.MF\")) {", "+                                    //File other then class changed   rebuild", "+                                    log(\"Non class file \" + genericEntry.getName() + \" has changed\",Project.MSG_VERBOSE);", "+                                    rebuild = true;", "+                                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb21f55103e2ae5117e0596fe447befd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "d3e00e275a0cb053f2a7020c1c45f94804fc9065", "commitAfterChange": "4d7bc0e158af463ab6d54f9ab35a01a5e011a831", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static URL getClassLocation(Class clazz)", "signatureAfterChange": "     private static URL getClassLocation(Class clazz)", "diff": ["+\t\tif (clazz.getProtectionDomain().getCodeSource() == null) {", "+\t\t\treturn null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc324258c16e1ee6b4bb409834b8dd64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "fa0358d8ee74a19772ad2a5626f9d3be386032d3", "commitAfterChange": "ab8c0b3d29af93c2d263cf2924f98827e365e56c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["+        if( m_dryRun )", "+        {", "+            m_parameters.setParameter( Executor.ROLE, ", "+                                       \"org.apache.myrmidon.components.executor.PrintingExecutor\" );", "+        }", "+"]}]}