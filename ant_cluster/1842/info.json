{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9d87f11a5d957901b405cfded465b52", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f3f13197cff7830dc3c9ce8dccc825", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "8d3002cf8ab1b9f87d38b0b4e5682d15ffb7002a", "commitAfterChange": "9c51b355f7e7c16c5466e43b59019cad49a1fe56", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-", "-        if (getSourcespath() == null) {", "-            throw new BuildException(\"Missing Sourcepath required argument\");", "+        if (getSourcespath() == null && getClassespath() == null) {", "+            throw new BuildException(\"Missing classespath required argument\");", "+        } else if (getClassespath() == null) {", "+            String msg =", "+                \"sourcespath is deprecated in JDepend >= 2.5 \"", "+                + \"- please convert to classespath\";", "+            log(msg);", "+        //boolean wasKilled = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b931a3eb8b4440b982103c43719879", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "7587f42590ecc4016fc8c1e39b526f5c3d6e940d", "commitAfterChange": "6b9311408eb806b8a5d1b2a9f2f500df3a59e5b3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void spinThreads() throws BuildException", "signatureAfterChange": "     private void spinThreads() throws BuildException", "diff": ["+        firstExitStatus = null;", "-            throw new BuildException(exceptionMessage.toString(),", "-                                     firstLocation);", "+            if (firstExitStatus == null) {", "+                throw new BuildException(exceptionMessage.toString(),", "+                                         firstLocation);", "+            } else {", "+                throw new ExitStatusException(exceptionMessage.toString(),", "+                                              firstExitStatus, firstLocation);", "+            }"]}]}