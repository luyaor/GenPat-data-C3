{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "860f8e6bcf54a1971d05f7ac5f81f858", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ffa3152dfb59b38e861bb3be5ff992", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "commitAfterChange": "f3939727d9e11188d266beed7e9dfa8e2fd0bc9a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void run(String[] args) throws MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws MalformedURLException", "diff": ["-        URL launchJarURL = Locator.getClassLocationURL(getClass());", "-        File jarDir = new File(launchJarURL.getFile()).getParentFile();", "+        File sourceJar = Locator.getClassSource(getClass());", "+        File jarDir = sourceJar.getParentFile();", "-            URL antHomeURL = new URL(launchJarURL, \"..\");", "-            antHome = new File(antHomeURL.getFile());", "+            antHome = jarDir.getParentFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a35815e2a02254fbd5bb78ffdfb9d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "f1d71eaeb8e405cb6da3dad2fe9b8c84a7e9394f", "commitAfterChange": "9f30d0550989766a9ad2032363a5dfdb49ee6932", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "diff": ["+        SymbolicLinkUtils u = SymbolicLinkUtils.getSymbolicLinkUtils();", "-            File f = new File(name);", "-            parent = f.getParentFile();", "-            name = f.getName();", "+            return u.isSymbolicLink(name);", "-        File toTest = new File(parent.getCanonicalPath(), name);", "-        return !toTest.getAbsolutePath().equals(toTest.getCanonicalPath());", "-    }", "+        return u.isSymbolicLink(parent, name);"]}]}