{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aa6db63b99e2308f92c3606fefc6037", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0be8f6968bcb0ea197543bb215bb06", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "3354222b50e1a78721b163a398c46575b15ad2f7", "commitAfterChange": "ed45d2f66a2b566ce5be500c39eb8bdbe171ea1c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-        Hashtable newroots = new Hashtable();", "-        // put in the newroots vector the include patterns without", "+        Map newroots = new HashMap();", "+        // put in the newroots map the include patterns without", "-            Enumeration enum2 = newroots.keys();", "+            Iterator it = newroots.entrySet().iterator();", "-            while (enum2.hasMoreElements()) {", "-                String currentelement = (String) enum2.nextElement();", "+            while (it.hasNext()) {", "+            \tMap.Entry entry = (Map.Entry)it.next();", "+                String currentelement = (String) entry.getKey();", "-                String originalpattern = (String) newroots.get(currentelement);", "+                String originalpattern = (String) entry.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f834480f29ddb307350020fedad8a547", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["-            Set includePatterns = new HashSet();", "-            Set excludePatterns = new HashSet();", "+            Set<String> includePatterns = new HashSet<String>();", "+            Set<String> excludePatterns = new HashSet<String>();", "-                PatternSet p = (PatternSet) patternsets.elementAt(v);", "+                PatternSet p = patternsets.elementAt(v);", "-            for (Iterator iter = includePatterns.iterator();", "+            for (Iterator<String> iter = includePatterns.iterator();", "-                String pattern = (String) iter.next();", "+                String pattern = iter.next();", "-            for (Iterator iter = excludePatterns.iterator();", "+            for (Iterator<String> iter = excludePatterns.iterator();", "-                String pattern = (String) iter.next();", "+                String pattern = iter.next();"]}]}