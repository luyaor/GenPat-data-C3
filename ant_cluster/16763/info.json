{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4adac038e350ec0794a767bb9ab253e1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef8e68055dceaab49f5409cb477663de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Pack.java", "commitBeforeChange": "dc7f97a9325dbb9b4b6126b9fa0960ef409bb2cb", "commitAfterChange": "2ff97ac3d107d741c35a236960a0f963e7aad6a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-        if (zipFile == null || zipFile.getName().equals(\"\")) {", "+        if (zipFile == null) {", "-        if (source == null || source.getName().equals(\"\")) {", "+        if (zipFile.isDirectory()) {", "+            throw new BuildException(\"zipfile attribute must not \" +", "+                                     \"represent a directory!\", location);", "+        }", "+", "+        if (source == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f00279ef7d078a1006e0df52fa8a46a2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/ZipResource.java", "commitBeforeChange": "1400dc3c1b536c70697f83be990b0725121cba90", "commitAfterChange": "b5fcf10604f56a8061d10f332570342b34cc7a9d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public InputStream getInputStream() throws IOException", "signatureAfterChange": "     public InputStream getInputStream() throws IOException", "diff": ["-        return new FilterInputStream(z.getInputStream(z.getEntry(getName()))) {", "+        ZipEntry ze = z.getEntry(getName());", "+        if (ze == null) {", "+            z.close();", "+            throw new BuildException(\"no entry \" + getName() + \" in \"", "+                                     + getArchive());", "+        }", "+        return new FilterInputStream(z.getInputStream(ze)) {"]}]}