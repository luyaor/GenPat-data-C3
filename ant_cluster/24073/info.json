{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5293d7fb94475186aa0f96d6ef96835", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a7a4f2e6e1d171fa23ade8e3da6134", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetDeploymentTool.java", "commitBeforeChange": "efbd99c9ae96fb6656ba9d03742917aacd2b5e69", "commitAfterChange": "fb1e6a07ee2914bbc899aad1b0f4e376630bd4a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Hashtable parseEjbFiles(String descriptorFileName,                          SAXParser saxParser) throws IOException, SAXException", "signatureAfterChange": "     protected Hashtable parseEjbFiles(String descriptorFileName,                          SAXParser saxParser) throws IOException, SAXException", "diff": ["+        if (getConfig().dtdLocations != null) {", "+            for (Iterator i = getConfig().dtdLocations.iterator();", "+                 i.hasNext(); ) {", "+                EjbJar.DTDLocation dtdLocation =", "+                    (EjbJar.DTDLocation) i.next();", "+                ejbc.registerDTD(dtdLocation.getPublicId(),", "+                                 dtdLocation.getLocation());", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e281c15c574cd4f77ae51a94ac39566f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/TreeBasedTask.java", "commitBeforeChange": "a531c969414a190b9d9624583e972b3b79063249", "commitAfterChange": "9cd1c82f96298dda7345248dd732bcfd09c36b90", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private final Folder configureRootStarteamFolder()          throws BuildException", "signatureAfterChange": "     private final Folder configureRootStarteamFolder()          throws BuildException", "diff": ["+", "+            if (this.isPreloadFileInformation()) {", "+                PropertyNames pn = getServer().getPropertyNames();", "+                String[] props = new String[] {pn.FILE_NAME, pn.FILE_PATH,", "+                                               pn.FILE_STATUS, pn.MODIFIED_TIME,", "+                                               pn.FILE_FILE_TIME_AT_CHECKIN,", "+                                               pn.MODIFIED_USER_ID, pn.FILE_SIZE};", "+", "+                int depth = this.isRecursive() ? -1 : 0;", "+                starteamrootfolder.populateNow(getServer().getTypeNames().FILE,", "+                                                props, depth);", "+            }", "+"]}]}