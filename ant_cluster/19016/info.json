{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f147104d6fe8a5bc40cf53534752abdf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b6b14d2818c6f0e5658c16ea555a2c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "8efca5a58020f66fafe94ec85550c80516e60837", "commitAfterChange": "c012d33f03aa6d0fa3d52fdac1e4b42851e927ee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                    doLink(resource, link);", "+\t\t    // handle the case where the link exists ", "+\t\t    // and points to a directory (bug 25181)", "+\t\t    try {", "+\t\t\tFileUtils fu = FileUtils.newFileUtils();", "+\t\t\tFile test = new File(link);", "+\t\t\tFile testRes = new File(resource);", "+\t\t\tif (!fu.isSymbolicLink(test.getParentFile(), ", "+\t\t\t\t\t       test.getName())) {", "+\t\t\t    doLink(resource, link);", "+\t\t\t} else {", "+\t\t\t    if (!test.getCanonicalPath().", "+\t\t\t    \tequals(testRes.getCanonicalPath())) {", "+\t\t\t    \tSymlink.deleteSymlink(link);", "+\t\t\t    \tdoLink(resource,link);", "+\t\t\t    } // else the link exists, do nothing", "+\t\t\t}", "+\t\t    } catch (IOException ioe) {", "+\t\t\thandleError(\"IO exception while creating \"", "+\t\t\t\t    + \"link\");", "+\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbff460fbf378b0d6a4ffc05278974e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "7f76769aba1d44cd44eb56ebadbbbe9068859c68", "commitAfterChange": "0ae47a0947c94f5e56a518702e90355fe23bf1ff", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            args.append( \"@\" ).append( targets.getName() );", "+            args.append( \"@\" ).append( targets.getAbsolutePath() );", "+", "+            // update iControlProperties if it's set.", "+            if( updateIcontrol ) {", "+                Properties iControlProps = new Properties();", "+                try { // to read existing propertiesfile", "+                    iControlProps.load( new FileInputStream( \"icontrol.properties\" ) );", "+                } catch( IOException e ) {", "+                    log( \"File icontrol.properties not found. That's ok. Writing a default one.\" );", "+                }", "+                iControlProps.setProperty( \"classRoot\", srcDir.getAbsolutePath() );", "+                iControlProps.setProperty( \"classpath\", iContractClasspath.toString() );", "+                iControlProps.setProperty( \"controlFile\", \"control\" );", "+", "+                try { // to read existing propertiesfile", "+                    iControlProps.store( new FileOutputStream( \"icontrol.properties\" ), \"Edit the classRoot and controlfile properties if you like\" );", "+                    log( \"Updated file icontrol.properties.\" );", "+                } catch( IOException e ) {", "+                    log( \"Couldn't write icontrol.properties.\" );", "+                }", "+            }"]}]}