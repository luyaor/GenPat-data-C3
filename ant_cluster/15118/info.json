{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3507d31bcf9c0e5c6ac929ab77dcdb55", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d508c94a44cdb5ecb9e720f5f442848", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/framework/file/test/TestFileList.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] listFiles( final TaskContext context )         throws TaskException", "signatureAfterChange": "     public String[] listFiles( final TaskContext context )         throws TaskException", "diff": ["-        final File file = context.resolveFile( m_name );", "-        return new String[] { file.getAbsolutePath() };", "+        final ArrayList files = new ArrayList();", "+        if( m_name != null )", "+        {", "+            final File file = context.resolveFile( m_name );", "+            files.add( file.getAbsolutePath() );", "+        }", "+        if( m_path != null )", "+        {", "+            final String[] fileNames = m_path.listFiles( context );", "+            for( int i = 0; i < fileNames.length; i++ )", "+            {", "+                files.add( fileNames[ i ] );", "+            }", "+        }", "+        return (String[])files.toArray( new String[ files.size() ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd2a11b0ec19fe2871c65923d9ff00a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java", "commitBeforeChange": "19f31ba0f36f02c8b0acdb0d9f92aa5593bd09d1", "commitAfterChange": "8ead313e923addd0bb484322dcff2081068b4f2d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public ChangeLogParser(boolean remote, String packageName, List modules)", "signatureAfterChange": "      public ChangeLogParser(boolean remote, String packageName, List modules)", "diff": ["-        moduleNames = new String[modules.size() + (packageName == null ? 0 : 1)];", "-        moduleNameLengths = new int[moduleNames.length];", "-        int i = 0;", "+", "+        ArrayList names = new ArrayList();", "-            moduleNames[i] = packageName;", "-            moduleNameLengths[i++] = packageName.length();", "+            for (StringTokenizer tok = new StringTokenizer(packageName);", "+                 tok.hasMoreTokens(); ) {", "+                names.add(tok.nextToken());", "+            }", "-        for (Iterator iter = modules.iterator(); iter.hasNext(); i++) {", "+        for (Iterator iter = modules.iterator(); iter.hasNext(); ) {", "-            moduleNames[i] = m.getName();", "+            names.add(m.getName());", "+        }", "+", "+        moduleNames = (String[]) names.toArray(new String[names.size()]);", "+        moduleNameLengths = new int[moduleNames.length];", "+        for (int i = 0; i < moduleNames.length; i++) {"]}]}