{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d22133d92a31491399be5d5688724c46", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d38be695f1cfdabbf6d4058884bd28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "6b3d8a02956aad55938df6c7a1b2994a4acc5f6a", "commitAfterChange": "fe4a5cb02940376fddc661302141394be20d1f02", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private static void runBuild()", "diff": ["-\t", "+", "+            try {", "+                Class.forName(\"javax.xml.parsers.SAXParserFactory\");", "+            } catch (ClassNotFoundException cnfe) {", "+                throw new BuildException(cnfe);", "+            }", "-            String msg = \"BUILD CONFIG ERROR: \";", "-            System.out.println(msg + be.getMessage());", "-            be.printStackTrace();", "+            System.out.println(\"\\nBUILD CONFIG ERROR\\n\");", "+            if (be.getException() == null) {", "+                System.out.println(be.toString());", "+            } else {", "+                be.getException().printStackTrace();", "+\t    }", "-            String msg = \"BUILD FATAL ERROR: \";", "-            System.out.println(msg + be.getMessage());", "+            String msg = \"\\nBUILD FATAL ERROR\\n\\n\";", "+            System.out.println(msg + be.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578dfc41360fa818bafbc854e7a2011f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "af01f285a19e2502eb29bf8d10083f15cf392b7f", "commitAfterChange": "99dc457c6f7721903927fc6a154a730a36d42e51", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void process(String[] args, InitConfig initConfig)", "signatureAfterChange": "     private void process(String[] args, InitConfig initConfig)", "diff": ["+            System.exit(0);", "-            if (t instanceof AntException) {", "-                AntException e = (AntException)t;", "-                Location location = e.getLocation();", "-                Throwable cause = e.getCause();", "-                if (location != null && location != Location.UNKNOWN_LOCATION) {", "-                    System.out.print(location);", "-                }", "-                System.out.println(e.getMessage());", "-", "-                if (messageOutputLevel >= MessageLevel.MSG_VERBOSE) {", "-                    t.printStackTrace();", "-                }", "-", "-                if (cause != null) {", "-                    System.out.println(\"Root cause: \" + cause.toString());", "-                }", "-            } else {", "-                t.printStackTrace(System.err);", "-            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b3cf0d45b460e625832c7c351ac40a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "cf850ea7b4cb5efb50408e3b005c5b4acc731467", "commitAfterChange": "56e9d4dcd5f5a5a8f21725c2106a91217e7e4d37", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testSetFollowLinks()", "signatureAfterChange": "      public void testSetFollowLinks() throws IOException", "diff": ["-    public void testSetFollowLinks() {", "+    public void testSetFollowLinks() throws IOException {", "+            if (JavaEnvUtils.isKaffe()) {", "+                System.err.println(\"link exists pre-test? \" + linkFile.exists());", "+            }", "+            ", "+            if (JavaEnvUtils.isKaffe()) {", "+                System.err.println(\"link exists after exec? \" + linkFile.exists());", "+                System.err.println(\"Ant knows it is a link? \" + FileUtils.getFileUtils().isSymbolicLink(dir, \"ThisIsALink\"));", "+            }", "+", "+            if (JavaEnvUtils.isKaffe()) {", "+                System.err.println(\"link exists pre-delete? \" + linkFile.exists());", "+            }", "+            if (JavaEnvUtils.isKaffe()) {", "+                System.err.println(\"link exists post-delete? \" + linkFile.exists());", "+            }"]}]}