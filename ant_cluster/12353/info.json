{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd2be75220ace04d1ee23cbe3791527c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60859e7026b9cd1f436375bfe1af3ed0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarEntry.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public TarEntry( File file )", "signatureAfterChange": "     public TarEntry( final File file )", "diff": ["-    public TarEntry( File file )", "+    public TarEntry( final File file )", "-        this.file = file;", "+        m_file = file;", "-        String osname = System.getProperty( \"os.name\" );", "+        final String osname = System.getProperty( \"os.name\" );", "-", "-            String win32Prefix = \"Windows\";", "-            String prefix = osname.substring( 0, win32Prefix.length() );", "+            final String win32Prefix = \"Windows\";", "+            final String prefix = osname.substring( 0, win32Prefix.length() );", "-                    char ch1 = name.charAt( 0 );", "-                    char ch2 = name.charAt( 1 );", "+                    final char ch1 = name.charAt( 0 );", "+                    final char ch2 = name.charAt( 1 );", "-                    if( ch2 == ':'", "-                        && ( ( ch1 >= 'a' && ch1 <= 'z' )", "-                        || ( ch1 >= 'A' && ch1 <= 'Z' ) ) )", "+                    if( ch2 == ':' &&", "+                        ( ( ch1 >= 'a' && ch1 <= 'z' ) ||", "+                        ( ch1 >= 'A' && ch1 <= 'Z' ) ) )", "-                int colon = name.indexOf( ':' );", "+                final int colon = name.indexOf( ':' );", "-        this.linkName = new StringBuffer( \"\" );", "-        this.name = new StringBuffer( name );", "+        m_linkName = new StringBuffer( \"\" );", "+        m_name = new StringBuffer( name );", "-            this.mode = 040755;", "-            this.linkFlag = LF_DIR;", "+            m_mode = 040755;", "+            m_linkFlag = TarConstants.LF_DIR;", "-            if( this.name.charAt( this.name.length() - 1 ) != '/' )", "+            if( m_name.charAt( m_name.length() - 1 ) != '/' )", "-                this.name.append( \"/\" );", "+                m_name.append( \"/\" );", "-            this.mode = 0100644;", "-            this.linkFlag = LF_NORMAL;", "+            m_mode = 0100644;", "+            m_linkFlag = TarConstants.LF_NORMAL;", "-        this.size = file.length();", "-        this.modTime = file.lastModified() / 1000;", "-        this.checkSum = 0;", "-        this.devMajor = 0;", "-        this.devMinor = 0;", "+        m_size = file.length();", "+        m_modTime = file.lastModified() / 1000;", "+        m_checkSum = 0;", "+        m_devMajor = 0;", "+        m_devMinor = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb926f96c6a62524b3e12aba72e9ce85", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void bsW(final int n, final int v) throws IOException", "signatureAfterChange": "      private void bsW(int n, int v) throws IOException", "diff": ["-    private void bsW(final int n, final int v) throws IOException {", "-        final OutputStream outShadow = this.out;", "-        int bsLiveShadow    = this.bsLive;", "-        int bsBuffShadow    = this.bsBuff;", "-", "-        while (bsLiveShadow >= 8) {", "-            outShadow.write(bsBuffShadow >> 24); // write 8-bit", "-            bsBuffShadow <<= 8;", "-            bsLiveShadow -= 8;", "+    private void bsW(int n, int v) throws IOException {", "+        while (bsLive >= 8) {", "+            int ch = (bsBuff >> 24);", "+            try {", "+                bsStream.write(ch); // write 8-bit", "+            } catch (IOException e) {", "+                throw e;", "+            }", "+            bsBuff <<= 8;", "+            bsLive -= 8;", "+            bytesOut++;", "-", "-        this.bsBuff = bsBuffShadow | (v << (32 - bsLiveShadow - n));", "-        this.bsLive = bsLiveShadow + n;", "+        bsBuff |= (v << (32 - bsLive - n));", "+        bsLive += n;"]}]}