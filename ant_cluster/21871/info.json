{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03833a2c97b8fe448de6eea9535f8b38", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b9a11d5dfbfb1cba3863b8bda5d9f2e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "7cd7c4e5f82cbe8a3fe5d03b7c8ea871a523fdd1", "commitAfterChange": "f1bc629e34874c4d641b159e31a55ed2cab6ca20", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void addDefaultExcludes()", "signatureAfterChange": "     public void addDefaultExcludes()", "diff": ["-        newExcludes = new String[excludesLength + DEFAULTEXCLUDES.length];", "+        newExcludes = new String[excludesLength + defaultExcludes.size()];", "-        for (int i = 0; i < DEFAULTEXCLUDES.length; i++) {", "-            newExcludes[i + excludesLength] = DEFAULTEXCLUDES[i].replace('/',", "-                    File.separatorChar).replace('\\\\', File.separatorChar);", "+        String[] defaultExcludesTemp = getDefaultExcludes();", "+        for (int i = 0; i < defaultExcludesTemp.length; i++) {", "+            newExcludes[i + excludesLength] = defaultExcludesTemp[i].", "+                replace('/', File.separatorChar).", "+                replace('\\\\', File.separatorChar);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a481afbe1159f6377bd627c65ddfe43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "06bdb4521d318d621d46259c34ee30ff4e4f33e7", "commitAfterChange": "71715055cd0a9a993d91159d0aa49e5eee13d935", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public TarEntry(File file, String fileName)", "signatureAfterChange": "     public TarEntry(File file, String fileName)", "diff": ["+        String normalizedName = normalizeFileName(fileName, false);", "-            int nameLength = fileName.length();", "-            if (nameLength == 0 || fileName.charAt(nameLength - 1) != '/') {", "-                this.name = fileName + \"/\";", "+            int nameLength = normalizedName.length();", "+            if (nameLength == 0 || normalizedName.charAt(nameLength - 1) != '/') {", "+                this.name = normalizedName + \"/\";", "-                this.name = fileName;", "+                this.name = normalizedName;", "-            this.name = fileName;", "+            this.name = normalizedName;"]}]}