{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "232de109ad47b5a36af9cd1e6418191c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92406a2fe11f5041c2be478fc94e600a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MakeUrlTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testValidation()", "signatureAfterChange": "      @Test     public void testValidation()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testValidation\", MakeUrl.ERROR_MISSING_FILE, \"file\");", "+        try {", "+\t\t\tbuildRule.executeTarget(\"testValidation\");", "+\t\t\tfail(\"BuildException expected: \" + MakeUrl.ERROR_MISSING_FILE);", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"file\", ex.getMessage());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87c3a2d2190644a45c2779415bf2f36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/DynamicFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testCustomFilter() throws IOException", "signatureAfterChange": "      @Test     public void testCustomFilter() throws IOException", "diff": ["+    @Test", "-        expectFileContains(\"dynamicfilter\", getProject().getProperty(\"output\") + \"/dynamicfilter\",", "-                           \"hellO wOrld\");", "+        buildRule.executeTarget(\"dynamicfilter\");", "+        String content = FileUtilities.getFileContents(", "+                new File(buildRule.getProject().getProperty(\"output\") + \"/dynamicfilter\"));", "+        assertContains(\"hellO wOrld\", content);"]}]}