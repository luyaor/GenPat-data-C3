{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "916916416679e7361e5c00c172756b1f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b9826abb3e59f30f0a8c9566f3b322", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHSession.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override \tpublic void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-            for (Iterator i = localTunnels.iterator(); i.hasNext();) {", "-                LocalTunnel tunnel = (LocalTunnel) i.next();", "+            for (final Iterator i = localTunnels.iterator(); i.hasNext();) {", "+                final LocalTunnel tunnel = (LocalTunnel) i.next();", "-            for (Iterator i = remoteTunnels.iterator(); i.hasNext();) {", "-                RemoteTunnel tunnel = (RemoteTunnel) i.next();", "+            for (final Iterator i = remoteTunnels.iterator(); i.hasNext();) {", "+                final RemoteTunnel tunnel = (RemoteTunnel) i.next();", "-            for (Iterator i = nestedSequential.getNested().iterator();", "+            for (final Iterator i = nestedSequential.getNested().iterator();", "-                Task nestedTask = (Task) i.next();", "+                final Task nestedTask = (Task) i.next();", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {", "-        } catch (BuildException e) {", "+        } catch (final BuildException e) {", "-        } catch (Exception e) {", "+        } catch (final Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57e84029b29a724d1230992d2c3a92c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void getFile(ChannelSftp channel,                          ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "signatureAfterChange": "      private void getFile(final ChannelSftp channel,                          final ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "diff": ["-    private void getFile(ChannelSftp channel,", "-                         ChannelSftp.LsEntry le,", "+    private void getFile(final ChannelSftp channel,", "+                         final ChannelSftp.LsEntry le,", "-        String remoteFile = le.getFilename();", "+        final String remoteFile = le.getFilename();", "-            String path = localFile.getAbsolutePath();", "-            int i = path.lastIndexOf(File.pathSeparator);", "+            final String path = localFile.getAbsolutePath();", "+            final int i = path.lastIndexOf(File.pathSeparator);", "-        long startTime = System.currentTimeMillis();", "-        long totalLength = le.getAttrs().getSize();", "+        final long startTime = System.currentTimeMillis();", "+        final long totalLength = le.getAttrs().getSize();", "-        boolean trackProgress = getVerbose() && totalLength > HUNDRED_KILOBYTES;", "+        final boolean trackProgress = getVerbose() && totalLength > HUNDRED_KILOBYTES;", "-            long endTime = System.currentTimeMillis();", "+            final long endTime = System.currentTimeMillis();"]}]}