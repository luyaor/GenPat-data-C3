{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c13e536312fdfac971d11963d947914", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165b75b4d193900cab6ad54e3baab7ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "      private Set getPropertyNames(Hashtable props)", "signatureAfterChange": "      private Set<String> getPropertyNames(Map<String, Object> props)", "diff": ["-    private Set getPropertyNames(Hashtable props) {", "-        Set names;", "+    private Set<String> getPropertyNames(Map<String, Object> props) {", "+        Set<String> names;", "-            names = new HashSet();", "+            names = new HashSet<String>();", "-            for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "-                PropertySet set = (PropertySet) e.nextElement();", "-                names.addAll(set.getProperties().keySet());", "+            for (PropertySet set : setRefs) {", "+                names.addAll(set.getPropertyMap().keySet());", "-                HashSet complement = new HashSet(props.keySet());", "+                HashSet<String> complement = new HashSet<String>(props.keySet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9519a4eaa0f09c68b8a4146dbeaea70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private String[] makeArray(Vector list, Project p)", "signatureAfterChange": "     private String[] makeArray(List<NameEntry> list, Project p)", "diff": ["-    private String[] makeArray(Vector list, Project p) {", "+    private String[] makeArray(List<NameEntry> list, Project p) {", "-        Vector tmpNames = new Vector();", "-        for (Enumeration e = list.elements(); e.hasMoreElements();) {", "-            NameEntry ne = (NameEntry) e.nextElement();", "+        ArrayList<String> tmpNames = new ArrayList<String>();", "+        for (NameEntry ne : list) {", "-                tmpNames.addElement(pattern);", "+                tmpNames.add(pattern);", "-        String[] result = new String[tmpNames.size()];", "-        tmpNames.copyInto(result);", "-        return result;", "+        return tmpNames.toArray(new String[tmpNames.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a004c4f454ba3435e4e3cbc2f49864", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private URL[] getLibPathURLs(String cpString, List libPaths)         throws MalformedURLException", "signatureAfterChange": "     private URL[] getLibPathURLs(String cpString, List<String> libPaths)         throws MalformedURLException", "diff": ["-    private URL[] getLibPathURLs(String cpString, List libPaths)", "+    private URL[] getLibPathURLs(String cpString, List<String> libPaths)", "-        List libPathURLs = new ArrayList();", "+        List<URL> libPathURLs = new ArrayList<URL>();", "-        for (Iterator i = libPaths.iterator(); i.hasNext();) {", "-            String libPath = (String) i.next();", "+        for (String libPath : libPaths) {", "-        return  (URL[]) libPathURLs.toArray(new URL[libPathURLs.size()]);", "+        return libPathURLs.toArray(new URL[libPathURLs.size()]);"]}]}