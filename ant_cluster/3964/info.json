{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cceabffecaac4202d8cae827190cee64", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd639673494275950dbb6ed6b612241d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "6c2201f3094a0733e3e2caa7998cf260b61a3eb3", "commitAfterChange": "0f723fa82a38431c93baa7b8f102a79200b7f620", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void addToIncludeFileMap(File file) throws BuildException", "signatureAfterChange": "     private void addToIncludeFileMap(File file) throws BuildException", "diff": ["-                            String checksum = null;", "-                            try {", "-                                BufferedReader diskChecksumReader", "-                                    = new BufferedReader(new FileReader(checksumFile));", "-                                checksum = diskChecksumReader.readLine();", "-                            } catch (IOException e) {", "-                                throw new BuildException(\"Couldn't read checksum file \"", "-                                    + checksumFile, e);", "-                            }", "+                            String checksum = readChecksum(checksumFile);", "-                                 + file.getAbsolutePath()", "-                                 + \" to generate checksum for.\";", "+                    + file.getAbsolutePath()", "+                    + \" to generate checksum for.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcdb14c62c386d054a4f7dfdf019032e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void loadDefinitions(File xmlfile)         throws BuildException", "signatureAfterChange": "     public boolean loadDefinitions() throws BuildException", "diff": ["-    public void loadDefinitions(File xmlfile)", "+    public boolean loadDefinitions() throws BuildException {", "+        return loadDefinitions(ANT_DESCRIPTOR);", "+    }", "-            InputStream is = new FileInputStream(xmlfile);", "-            loadDefinitions(is);", "-            throw new BuildException(\"Cannot read file: \" + file, io);"]}]}