{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3daa7c700892139aefce0940e82aacb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c5ce25ffac60273f883267fcf6db18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "cd8a8e0cc286ceb9111845fbd0606efb25669ef8", "commitAfterChange": "960cd2a7117d0fa96b4247c3081da7b5363ba0d8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean sameDefinition(AntTypeDefinition other, Project project)", "signatureAfterChange": "     public boolean sameDefinition(AntTypeDefinition other, Project project)", "diff": ["-        if (other == null) {", "-            return false;", "-        }", "-        if (other.getClass() != this.getClass()) {", "-            return false;", "-        }", "-        if (!(other.getTypeClass(project).equals(getTypeClass(project)))) {", "-            return false;", "-        }", "-        if (!other.getExposedClass(project).equals(getExposedClass(project))) {", "-            return false;", "-        }", "-        if (other.adapterClass != adapterClass) {", "-            return false;", "-        }", "-        if (other.adaptToClass != adaptToClass) {", "-            return false;", "-        }", "-        return true;", "+        return (other != null && other.getClass() == getClass()", "+            && other.getTypeClass(project).equals(getTypeClass(project))", "+            && other.getExposedClass(project).equals(getExposedClass(project))", "+            && other.adapterClass == adapterClass", "+            && other.adaptToClass == adaptToClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9a606d32b5eab6e0451bf3838e359e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "cd8a8e0cc286ceb9111845fbd0606efb25669ef8", "commitAfterChange": "960cd2a7117d0fa96b4247c3081da7b5363ba0d8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public boolean similarDefinition(AntTypeDefinition other, Project project)", "signatureAfterChange": "     public boolean similarDefinition(AntTypeDefinition other, Project project)", "diff": ["-        if (other == null) {", "-            return false;", "-        }", "-        if (getClass() != other.getClass()) {", "-            return false;", "-        }", "-        if (!getClassName().equals(other.getClassName())) {", "-            return false;", "-        }", "-        if (!extractClassname(adapterClass).equals(", "-                extractClassname(other.adapterClass))) {", "-            return false;", "-        }", "-        if (!extractClassname(adaptToClass).equals(", "-                extractClassname(other.adaptToClass))) {", "+        if (other == null", "+            || getClass() != other.getClass()", "+            || !getClassName().equals(other.getClassName())", "+            || !extractClassname(adapterClass).equals(", "+            extractClassname(other.adapterClass))", "+            || !extractClassname(adaptToClass).equals(", "+            extractClassname(other.adaptToClass))) {", "-        ClassLoader newLoader = this.getClassLoader();", "-        if (oldLoader == newLoader) {", "-            return true;", "-        }", "-        return", "-            newLoader != null", "-            && oldLoader != null", "-            && oldLoader instanceof AntClassLoader", "+        ClassLoader newLoader = getClassLoader();", "+        return oldLoader == newLoader", "+            || (oldLoader instanceof AntClassLoader", "-            .equals(((AntClassLoader) newLoader).getClasspath());", "+            .equals(((AntClassLoader) newLoader).getClasspath()));"]}]}