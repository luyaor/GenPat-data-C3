{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90b8b29d12aacd71f85e29a351b0d653", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6bf33b07dc52649ce5b56688f855d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "0a8c6255be73edc5bbcaa696c05fbb93a0db9e8f", "commitAfterChange": "dc899ea41e643e42423b32e87d067cbf412bf2e1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["-                    File userDir = getJavac().getTempdir();", "-                    if (userDir == null) {", "-                        String userDirName = System.getProperty(\"user.dir\");", "-                        userDir = new File(userDirName);", "-                    }", "-                    tmpFile = fileUtils.createTempFile(\"files\", \"\", userDir);", "+                    tmpFile = fileUtils.createTempFile(", "+                        \"files\", \"\", getJavac().getTempdir());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c2e0013222890af2a25ec1c4ed36e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "f6aee884e9c95d8d096315c7f0098ce264b04f8a", "commitAfterChange": "f0c61ad2f516641eca642c99ca35fe2ac7c58746", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["-                    String userDirName = System.getProperty(\"user.dir\");", "-                    File userDir = new File(userDirName);", "+                    File userDir = getJavac().getTempdir();", "+                    if (userDir == null) {", "+                        String userDirName = System.getProperty(\"user.dir\");", "+                        userDir = new File(userDirName);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9fbe4f8fb96ea08ffd450ac05703d1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "4848c4503153606ff29c6a0548ec094eec904091", "commitAfterChange": "6e72d89be84e4a3b021e1d59f14a97d2f4959adc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void addPath(String path, boolean getJars, List libPathURLs)             throws MalformedURLException", "signatureAfterChange": "     private void addPath(String path, boolean getJars, List libPathURLs)             throws MalformedURLException", "diff": ["-            if (elementName.indexOf(\"%\") != -1 && !element.exists()) {", "+            if (elementName.indexOf('%') != -1 && !element.exists()) {", "+                    if (launchDiag) { System.out.println(\"adding library JAR: \" + dirURLs[j]);}", "-            libPathURLs.add(Locator.fileToURL(element));", "+            URL url = Locator.fileToURL(element);", "+            if (launchDiag) { System.out.println(\"adding library URL: \" + url) ;}", "+            libPathURLs.add(url);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c485bfb6455c116c295fd253c038883d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void runCommand(Commandline toExecute) throws BuildException", "signatureAfterChange": "     protected void runCommand(Commandline toExecute) throws BuildException", "diff": ["-        /* But currently we cannot because 'cvs log' is not working", "-         * with a pass file.", "-        if(passFile == null){", "+        if(passFile == null) {", "-            File defaultPassFile = new File(System.getProperty(\"user.home\") ", "+            File defaultPassFile = new File(", "+                System.getProperty(\"cygwin.user.home\",", "+                    System.getProperty(\"user.home\")) ", "-         */", "+        if (!dest.exists()) {", "+            dest.mkdirs();", "+        }", "+"]}]}