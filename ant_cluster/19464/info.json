{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dc915dcebb475f18815c02880da5036", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392757f6ae128738ed56f60c2f1f98bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "b83132393de1bdee68b42caea0604469c85d0306", "commitAfterChange": "af074bc65d9fdde7982618162dfdab2dfae06e5f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void process(String[] args, InitConfig initConfig)", "signatureAfterChange": "     private void process(String[] args, AntEnvironment antEnv)", "diff": ["-    private void process(String[] args, InitConfig initConfig) {", "-        this.initConfig = initConfig;", "+    private void process(String[] args, AntEnvironment antEnv) {", "+        this.antEnv = antEnv;", "-                FrontendUtils.getAntConfig(initConfig.getUserConfigArea());", "+                FrontendUtils.getAntConfig(antEnv.getUserConfigArea());", "-                 = FrontendUtils.getAntConfig(initConfig.getSystemConfigArea());", "+                 = FrontendUtils.getAntConfig(antEnv.getSystemConfigArea());", "-            mainFrame = new Frame(initConfig, config);", "+            mainFrame = new Frame(antEnv, config);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b1923e6ae4b87ab74e79e965cf8deb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Archives.java", "commitBeforeChange": "450b3ce6a4b325635e38b544890eee9985e087b6", "commitAfterChange": "020546329950689f337c188a4a80e7a40e8b6fb9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected List grabResources()", "signatureAfterChange": "     protected ArchiveFileSet configureArchive(ArchiveFileSet afs,                                               Resource src)", "diff": ["-    protected List grabResources() {", "-            ZipFileSet zfs = new ZipFileSet();", "-            zfs.setProject(getProject());", "-            zfs.setSrcResource((Resource) iter.next());", "-            l.addAll(CollectionUtils.asCollection(zfs.iterator()));", "-            TarFileSet tfs = new TarFileSet();", "-            tfs.setProject(getProject());", "-            tfs.setSrcResource((Resource) iter.next());", "-            l.addAll(CollectionUtils.asCollection(tfs.iterator()));", "-        return l;", "+     */", "+    protected ArchiveFileSet configureArchive(ArchiveFileSet afs,", "+                                              Resource src) {", "+        afs.setProject(getProject());", "+        afs.setSrcResource(src);", "+        return afs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da56e6eaea8996039f71d902a8a44df4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "c17d143ac35a1c63d807f578f508aef13b101e95", "commitAfterChange": "7be61ff46cba15020a14a9d8c83236e929bb5a31", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void threadOutput(String line, boolean isError)", "signatureAfterChange": "     public void threadOutput(String line, boolean isError)", "diff": ["-        if (task == null) {", "-            fireMessageLogged(this, line, ", "-                isError ? MessageLevel.MSG_ERR : MessageLevel.MSG_INFO);", "-        } else {", "-            if (isError) {", "-                task.handleSystemErr(line);", "-            } else {", "-                task.handleSystemOut(line);", "+        if (task != null) {", "+            try {", "+                if (isError) {", "+                    task.handleSystemErr(line);", "+                } else {", "+                    task.handleSystemOut(line);", "+                }", "+                return;", "+            } catch (ExecutionException e) {", "+                // ignore just log normally", "+        fireMessageLogged(this, line, ", "+            isError ? MessageLevel.MSG_ERR : MessageLevel.MSG_INFO);"]}]}