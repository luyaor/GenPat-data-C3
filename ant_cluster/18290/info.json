{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44f42ee4a6fb9e4b119502582fa9efa0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e8d7ef660c9c7cdb2f4a85f0b72bd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/CopyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void test3()", "signatureAfterChange": "      @Test     public void test3()", "diff": ["+    @Test", "-        executeTarget(\"test3\");", "-        File file3  = new File(getOutputDir(), \"copytest3.tmp\");", "+        buildRule.executeTarget(\"test3\");", "+        File file3  = new File(buildRule.getProject().getProperty(\"output\"), \"copytest3.tmp\");", "+        //rollback file timestamp instead of delaying test", "+        FileUtilities.rollbackTimetamps(file3, 3);", "+        buildRule.executeTarget(\"test3Part2\");", "-        File file3a = new File(getOutputDir(), \"copytest3a.tmp\");", "+", "+        File file3a = new File(buildRule.getProject().getProperty(\"output\"), \"copytest3a.tmp\");", "-        File file3b = new File(getOutputDir(), \"copytest3b.tmp\");", "+        File file3b = new File(buildRule.getProject().getProperty(\"output\"), \"copytest3b.tmp\");", "-        File file3c = new File(getOutputDir(), \"copytest3c.tmp\");", "+        File file3c = new File(buildRule.getProject().getProperty(\"output\"), \"copytest3c.tmp\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1bf0c5bdf97c357dc3f2ce200e94947", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testExerciseDefaultAndIncrement() throws Exception", "signatureAfterChange": "      @Test     public void testExerciseDefaultAndIncrement() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"exercise\");", "-        assertEquals(\"3\",project.getProperty(\"int.with.default\"));", "-        assertEquals(\"1\",project.getProperty(\"int.without.default\"));", "-        assertEquals(\"-->\",project.getProperty(\"string.with.default\"));", "-        assertEquals(\".\",project.getProperty(\"string.without.default\"));", "-        assertEquals(\"2002/01/21 12:18\", project.getProperty(\"ethans.birth\"));", "-        assertEquals(\"2003/01/21\", project.getProperty(\"first.birthday\"));", "-        assertEquals(\"0124\", project.getProperty(\"olderThanAWeek\"));", "-        assertEquals(\"37\", project.getProperty(\"existing.prop\"));", "-        assertEquals(\"6\",project.getProperty(\"int.without.value\"));", "+        buildRule.executeTarget(\"exercise\");", "+        assertEquals(\"3\",buildRule.getProject().getProperty(\"int.with.default\"));", "+        assertEquals(\"1\",buildRule.getProject().getProperty(\"int.without.default\"));", "+        assertEquals(\"-->\",buildRule.getProject().getProperty(\"string.with.default\"));", "+        assertEquals(\".\",buildRule.getProject().getProperty(\"string.without.default\"));", "+        assertEquals(\"2002/01/21 12:18\", buildRule.getProject().getProperty(\"ethans.birth\"));", "+        assertEquals(\"2003/01/21\", buildRule.getProject().getProperty(\"first.birthday\"));", "+        assertEquals(\"0124\", buildRule.getProject().getProperty(\"olderThanAWeek\"));", "+        assertEquals(\"37\", buildRule.getProject().getProperty(\"existing.prop\"));", "+        assertEquals(\"6\",buildRule.getProject().getProperty(\"int.without.value\"));"]}]}