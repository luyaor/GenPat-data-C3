{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "021687dd48d6c1a203e5ba4598cb299f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848b1a2cc9ffaee7836eda79044a005f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "065256f579a3681862b7dc61cce5a6fb45a0244e", "commitAfterChange": "671dff9a1cfe74859b9ec4356974b22840953989", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-                    BufferedReader br = new BufferedReader(r);", "-                    BufferedWriter bw = new BufferedWriter(w);", "-", "+                        r = new BufferedReader(r);", "+                        w = new BufferedWriter(w);", "+", "-                            c = br.read();", "+                            c = r.read();", "-                                    bw.write(res);", "-                                    bw.write('\\r');", "+                                    w.write(res);", "+                                    w.write('\\r');", "-                                bw.write(res);", "+                                w.write(res);", "-                                    bw.write('\\r');", "+                                    w.write('\\r');", "-                                bw.write('\\n');", "+                                w.write('\\n');", "-                                    bw.write(res);", "+                                    w.write(res);", "-                                        bw.write('\\r');", "+                                        w.write('\\r');", "-                        String buf = FileUtils.safeReadFully(br);", "-", "-                        String res = doReplace(regex, subs, buf, options);", "-", "-                        if (!res.equals(buf)) {", "-                            changes = true;", "-                        }", "-", "-                        bw.write(res);", "+                        changes = multilineReplace(r, w, options);", "-                    bw.flush();", "+                    r.close();", "+                    w.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a44039f59149cc31192345f6a0d86ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "653124c46b538acb4d6caf265851fa991578d42d", "commitAfterChange": "b7258ab797862fb2e9f07b881f2568ae6691b386", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-     */", "-    public void execute() throws BuildException {", "-        Project p1 = new Project(project.getOutput(), project.getOutputLevel());", "-            p1.setUserProperty(arg, value);", "+     */", "+    public void execute() throws BuildException {", "+\tif( antFile==null) throw new BuildException( \"ant required antFile property \");", "+", "+        if( dir==null) dir=\".\";", "+\tp1.setBasedir(dir);", "+        p1.setUserProperty(\"basedir\" , dir);", "+", "+\t// Override with local-defined properties", "+\tEnumeration e = properties.elements();", "+        while (e.hasMoreElements()) {", "+            Property p=(Property) e.nextElement();", "+\t    //\t    System.out.println(\"Setting \" + p.getName()+ \" \" + p.getValue());", "+\t    p.init();", "-        p1.setBasedir(dir);", "-        p1.setUserProperty(\"basedir\" , dir);", "-        if (antFile == null) antFile = dir + \"/build.xml\";", "+\tif (antFile == null) antFile = dir + \"/build.xml\";"]}]}