{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0124176979a03412bb64a3fa022925bc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff7914ab322886cbcd616fb912ffca0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void parseArguments(String[] args)          throws ConfigException", "signatureAfterChange": "     private void parseArguments(String[] args)          throws ConfigException", "diff": ["-                    String url = args[i++];", "+                    String url = getOption(args, i++, arg);", "-                } catch (ArrayIndexOutOfBoundsException e) {", "-                    System.err.println(\"You must specify a buildfile when \" +", "-                        \"using the -buildfile argument\");", "-                    return;", "-                    File logFile = new File(args[i++]);", "+                    File logFile = new File(getOption(args, i++, arg));", "-                    return;", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    System.err.println(\"You must specify a log file when \" +", "-                        \"using the -log argument\");", "+            } else if (arg.equals(\"-config\") || arg.equals(\"-c\")) {", "+                configFiles.add(new File(getOption(args, i++, arg)));", "-                try {", "-                    listeners.add(args[i++]);", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    System.err.println(\"You must specify a classname when \" +", "-                        \"using the -listener argument\");", "-                    return;", "-                }", "+                listeners.add(getOption(args, i++, arg));", "-                try {", "-                    loggerClassname = args[i++];", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    System.err.println(\"You must specify a classname when \" +", "-                        \"using the -logger argument\");", "-                    return;", "-                }", "+                loggerClassname = getOption(args, i++, arg);", "-                } else if (i < args.length - 1) {", "-                    value = args[++i];", "+                } else {", "+                    value = getOption(args, i++, arg);", "-                File ant1BuildFile =  new File(DEFAULT_ANT1_FILENAME);", "+                File ant1BuildFile = new File(DEFAULT_ANT1_FILENAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b88e27d8184f6b2cb1d1445d0abfd1a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "a30889de71888bc66c4c484cfbbefa994590c383", "commitAfterChange": "83edbb7a85886207a528219f32cc598e4ea1eeff", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Main(String[] args) throws BuildException", "signatureAfterChange": "     protected Main(String[] args) throws BuildException", "diff": ["-                    System.out.println(msg);", "-                    return;", "+                    throw new BuildException(msg);", "-                    System.out.println(msg);", "-                    return;", "+                    throw new BuildException(msg);", "-                    System.out.println(msg);", "-                    return;", "+                    throw new BuildException(msg);", "-                    System.out.println(msg);", "-                    return;", "+                    throw new BuildException(msg);", "-                       }", "+                }", "-                    System.out.println(\"Only one logger class may \"", "+                    throw new BuildException(\"Only one logger class may \"", "-                    return;", "-                    System.out.println(\"You must specify a classname when \" +", "-                                       \"using the -logger argument\");", "-                    return;", "+                    throw new BuildException(\"You must specify a classname when\"", "+                                             + \" using the -logger argument\");", "-                    System.out.println(\"Only one input handler class may \" +", "-                                       \"be specified.\");", "-                    return;", "+                    throw new BuildException(\"Only one input handler class may \"", "+                                             + \"be specified.\");", "-                    System.out.println(\"You must specify a classname when \" +", "-                                       \"using the -inputhandler argument\");", "-                    return;", "+                    throw new BuildException(\"You must specify a classname when\"", "+                                             + \" using the -inputhandler\"", "+                                             + \" argument\");", "-                    System.out.println(msg);", "-                    return;", "+                    throw new BuildException(msg);", "-                return;", "+                throw new BuildException(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8b01a6d732f5d64eaf48a8d14a6633b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "536bfb63e3ad71036b032550ca8241e07e1f5d45", "commitAfterChange": "b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public void init(String tag, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "     private static ProjectHelper newHelper(String helperClass)         throws BuildException", "diff": ["-         */", "-        public void init(String tag, AttributeList attrs) throws SAXParseException {", "-            try {", "-                task = project.createTask(tag);", "-            } catch (BuildException e) {", "-                // swallow here, will be thrown again in ", "-                // UnknownElement.maybeConfigure if the problem persists.", "-            }", "-", "-            if (task == null) {", "-                task = new UnknownElement(tag);", "-                task.setProject(project);", "-                task.setTaskType(tag);", "-                task.setTaskName(tag);", "-            }", "-", "-            task.setLocation(new Location(buildFile.toString(), locator.getLineNumber(), locator.getColumnNumber()));", "-            configureId(task, attrs);", "-", "-            // Top level tasks don't have associated targets", "-            if (target != null) {", "-                task.setOwningTarget(target);", "-                container.addTask(task);", "-                task.init();", "-                wrapper = task.getRuntimeConfigurableWrapper();", "-                wrapper.setAttributes(attrs);", "-                if (parentWrapper != null) {", "-                    parentWrapper.addChild(wrapper);", "-                }", "-            } else {", "-                task.init();", "-                configure(task, attrs, project);", "-            }", "-        }", "+    private static ProjectHelper newHelper(String helperClass)", "+        throws BuildException", "+    {", "+        ClassLoader classLoader = getContextClassLoader();", "+        try {", "+            Class clazz = null;", "+            if (classLoader != null) {", "+                    clazz = classLoader.loadClass(helperClass);", "+                } catch( ClassNotFoundException ex ) {", "+                    // try next method", "+            if( clazz==null ) {", "+                clazz = Class.forName(helperClass);", "+            return ((ProjectHelper) clazz.newInstance());", "+        } catch (Exception e) {", "+            throw new BuildException(e);"]}]}