{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7b9d3a7c3a660ded2401d10ad1243ac", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef4651eba0f30e5c9577ea49f04d329", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testBadNoJarfile()", "signatureAfterChange": "  \t@Test     public void testBadNoJarfile()", "diff": ["+\t@Test", "-        expectBuildExceptionContaining(\"test-bad-no-jarfile\", \"no-jarfile\",", "-                                       \"Missing 'jarfile' attribute!\");", "-        assertPropertyUnset(\"jar.classpath\");", "+\t\ttry {", "+\t\t\tbuildRule.executeTarget(\"test-bad-no-jarfile\");", "+\t\t\tfail(\"Build exception should have been thrown on bad jar file\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"Missing 'jarfile' attribute!\", ex.getMessage());", "+\t\t}", "+        assertNull(buildRule.getProject().getProperty(\"jar.classpath\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee6beeb6fd6c1a5bcfbf83a32c921b6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestClassPathTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testBadDirectory()", "signatureAfterChange": "  \t@Test     public void testBadDirectory()", "diff": ["+\t@Test", "-        expectBuildExceptionContaining(\"test-bad-directory\", \"bad-jar-dir\",", "-                                       \"Jar's directory not found:\");", "-        assertPropertyUnset(\"jar.classpath\");", "+\t\ttry {", "+\t\t\tbuildRule.executeTarget(\"test-bad-directory\");", "+\t\t\tfail(\"Build exception should have been thrown on bad directory\");", "+\t\t} catch (BuildException ex) {", "+\t\t\tassertContains(\"Jar's directory not found:\", ex.getMessage());", "+\t\t}", "+        assertNull(buildRule.getProject().getProperty(\"jar.classpath\"));"]}]}