{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1881179565123c7afdb564b22875e652", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "331f6fe1249c19b9e539561821ac9a92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/ChangeLog.java", "commitBeforeChange": "4502ac160a53edaf06f0a4b0482307f67f9080fa", "commitAfterChange": "8e820f665bdd11151b21f9ddfaa74c60f08d6963", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws TaskException", "signatureAfterChange": "     public void execute() throws TaskException", "diff": ["-        writeChangeLog( parser );", "+        final CVSEntry[] entrySet = parser.getEntrySetAsArray();", "+        final CVSEntry[] filteredEntrySet = filterEntrySet( entrySet );", "+        writeChangeLog( filteredEntrySet );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ab06dfd25aaf7829c769a10e8556baf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/MacCommandLauncher.java", "commitBeforeChange": "ace547bc97be558680726ceaa2c4bc36cfd9191a", "commitAfterChange": "cdd8484f399e432198efe17a1ab8db95b26aaeaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "signatureAfterChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "diff": ["-            return Runtime.getRuntime().", "-                exec( metaData.getCommand(), metaData.getEnvironment() );", "+            final String[] env = ExecUtil.toNativeEnvironment( metaData.getEnvironment() );", "+            return Runtime.getRuntime().exec( metaData.getCommand(), env );", "-            return Runtime.getRuntime().", "-                exec( metaData.getCommand(), metaData.getEnvironment() );", "+            final String[] env = ExecUtil.toNativeEnvironment( metaData.getEnvironment() );", "+            return Runtime.getRuntime().exec( metaData.getCommand(), env );"]}]}