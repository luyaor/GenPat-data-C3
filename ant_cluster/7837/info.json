{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d48665e7763b7fe32a14086ef3cba980", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0711980a0debd00cf1e2d488612b8c6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Property.java", "commitBeforeChange": "2f4b71ebb9a0b10e189a803e3ad565302736d060", "commitAfterChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-            final Object object = getContext().resolveValue( value );", "+            ", "+            Object object = null;", "+", "+            try { object = getContext().resolveValue( value ); }", "+            catch( final AntException ae )", "+            {", "+                throw new ConfigurationException( \"Error resolving value: \" + value, ae );", "+            }", "-                throw new AntException( \"Value for attribute \" + name + \"resolved to null\" );", "+                throw new ConfigurationException( \"Value for attribute \" + name + \"resolved to null\" );", "-                setValue( object );", "+                try { setValue( object ); }", "+                catch( final AntException ae )", "+                {", "+                    throw new ConfigurationException( \"Error setting value: \" + value, ae );", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564a836ea13863645d39003974c1fd1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "1ef26fe3aca0a1684e48b3dd0a386d3a5dfa9df4", "commitAfterChange": "92712f7da35eb709e299bb107d90a6749c274602", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void executeTarget( final String name,                                 final Target target,                                 final ExecutionFrame frame )         throws TaskException", "signatureAfterChange": "     private void executeTarget( final String name,                                 final Target target,                                 final ExecutionFrame frame )         throws TaskException", "diff": ["-            if( false == condition.evaluate( frame.getContext() ) )", "+            try", "-                getLogger().debug( \"Skipping target \" + name +", "-                                   \" as it does not satisfy condition\" );", "-                return;", "+                if( false == condition.evaluate( frame.getContext() ) )", "+                {", "+                    getLogger().debug( \"Skipping target \" + name +", "+                                       \" as it does not satisfy condition\" );", "+                    return;", "+                }", "+            }", "+            catch( final ContextException ce )", "+            {", "+                throw new TaskException( \"Error evaluating Condition for target \" + ", "+                                         name, ce );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f0dc8591da65cb00da26cce1b3f4c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletConfigurer.java", "commitBeforeChange": "66c74a2fceee359d38138fb601c1b639e99fb17d", "commitAfterChange": "19600e6d005c8bebbf6697bd00516e843f0a34f4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected boolean setValue( final Object object,                                  Object value,                                  final Method method,                                 final Class sourceClass,                                 final String source )         throws ConfigurationException", "signatureAfterChange": "      protected boolean setValue( final Object object,                                  Object value,                                  final Method method,                                 final Class sourceClass,                                 final String source )         throws ConfigurationException", "diff": ["-            final String destination = parameterType.getName();", "-            ", "-                final ConverterInfo info = m_converterRegistry.", "-                    getConverterInfo( source, destination );", "-                ", "-                if( null == info ) return false;", "-              ", "-                final ConverterEntry entry = m_converterFactory.create( info );", "-                final Converter converter = entry.getConverter();", "-                value = converter.convert( parameterType, value );", "+                value = m_converter.convert( parameterType, object );", "-            catch( final FactoryException fe )", "+            catch( final ConverterException ce )", "-                throw new ConfigurationException( \"Badly configured ConverterFactory \",", "-                                                  fe );", "+                return false;"]}]}