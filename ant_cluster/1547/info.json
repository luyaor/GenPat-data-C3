{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f07526e9cfac6d5ae1d71e7862ed0c40", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61edb1a08465fe5690af5b2862b8f43f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/ConvertingProjectBuilder.java", "commitBeforeChange": "f3bc7772a61e0b51112c1b8840d9485d5442d6ad", "commitAfterChange": "bf9414c704e78eced3232d32434a69ed6f77209c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void copyAttributes( Configuration from,                                  DefaultConfiguration to,                                  Set omitAttributes )", "signatureAfterChange": "     private void copyAttributes( final Configuration from,                                  final DefaultConfiguration to,                                  final Set omitAttributes )", "diff": ["-    private void copyAttributes( Configuration from,", "-                                 DefaultConfiguration to,", "-                                 Set omitAttributes )", "+    private void copyAttributes( final Configuration from,", "+                                 final DefaultConfiguration to,", "+                                 final Set omitAttributes )", "-        String[] attribs = from.getAttributeNames();", "+        final String[] attribs = from.getAttributeNames();", "-            String name = attribs[ i ];", "+            final String name = attribs[ i ];", "-            String value = from.getAttribute( name, \"\" );", "+            final String value = from.getAttribute( name, \"\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6aac66ebf440435e644d70168a6947", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "     protected final void addParentDirs(File baseDir, String entry,                                        ZipOutputStream zOut, String prefix,                                        int dirMode)         throws IOException", "signatureAfterChange": "     protected final void addParentDirs(final File baseDir, final String entry,                                        final ZipOutputStream zOut, final String prefix,                                        final int dirMode)         throws IOException", "diff": ["-    protected final void addParentDirs(File baseDir, String entry,", "-                                       ZipOutputStream zOut, String prefix,", "-                                       int dirMode)", "+    protected final void addParentDirs(final File baseDir, final String entry,", "+                                       final ZipOutputStream zOut, final String prefix,", "+                                       final int dirMode)", "-            Stack<String> directories = new Stack<String>();", "+            final Stack<String> directories = new Stack<String>();", "-                String dir = entry.substring(0, slashPos + 1);", "+                final String dir = entry.substring(0, slashPos + 1);", "-                String dir = directories.pop();", "+                final String dir = directories.pop();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca280e2cecdd25eeed013b9d43ad91b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "     private boolean causesIllegalSymlinkLoop(String dirName, File parent,                                              LinkedList<String> directoryNamesFollowed)", "signatureAfterChange": "     private boolean causesIllegalSymlinkLoop(final String dirName, final File parent,                                              final LinkedList<String> directoryNamesFollowed)", "diff": ["-    private boolean causesIllegalSymlinkLoop(String dirName, File parent,", "-                                             LinkedList<String> directoryNamesFollowed) {", "+    private boolean causesIllegalSymlinkLoop(final String dirName, final File parent,", "+                                             final LinkedList<String> directoryNamesFollowed) {", "-                ArrayList<String> files = new ArrayList<String>();", "+                final ArrayList<String> files = new ArrayList<String>();", "-                String target = f.getCanonicalPath();", "+                final String target = f.getCanonicalPath();", "-                for (String dir : directoryNamesFollowed) {", "+                for (final String dir : directoryNamesFollowed) {", "-        } catch (IOException ex) {", "+        } catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d51b60f2ee8104e4eab0c25b5e4c0610", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void deployFromDirectory( final Deployer deployer,                                       final File directory,                                       final FilenameFilter filter )         throws DeploymentException", "signatureAfterChange": "     private void deployFromDirectories( final Deployer deployer,                                         final File[] directories,                                         final FilenameFilter filter )         throws DeploymentException", "diff": ["-    private void deployFromDirectory( final Deployer deployer,", "-                                      final File directory,", "-                                      final FilenameFilter filter )", "+    private void deployFromDirectories( final Deployer deployer,", "+                                        final File[] directories,", "+                                        final FilenameFilter filter )", "-        final File[] files = directory.listFiles( filter );", "-", "-        if( null != files )", "+        for( int i = 0; i < directories.length; i++ )", "-            deployFiles( deployer, files );", "+            File directory = directories[i ];", "+            final File[] files = directory.listFiles( filter );", "+", "+            if( null != files )", "+            {", "+                deployFiles( deployer, files );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70122dc134c8723d04bede69bdbc4f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void extractToPath( String uri, StringBuffer name, ParsedUri parsedUri )         throws FileSystemException", "signatureAfterChange": "     protected void extractToPath( final String uri,                                   final StringBuffer name,                                   final ParsedUri parsedUri )         throws FileSystemException", "diff": ["-    protected void extractToPath( String uri, StringBuffer name, ParsedUri parsedUri )", "+    protected void extractToPath( final String uri,", "+                                  final StringBuffer name,", "+                                  final ParsedUri parsedUri )", "-        String scheme = extractScheme( uri, name );", "+        final String scheme = extractScheme( uri, name );", "-        String userInfo = extractUserInfo( name );", "+        final String userInfo = extractUserInfo( name );", "-        String hostName = extractHostName( name );", "+        final String hostName = extractHostName( name );", "-        String port = extractPort( name );", "+        final String port = extractPort( name );"]}]}