{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "971d4d18760cbb0467e3d7240308ebbb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14a900be0b81518e2edf1dbb4885522b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "435e9dc9b6090394172bf029f106b42b2db55a1d", "commitAfterChange": "a9cc5fd794d793374e83ef922a0d32b3a9d5afdb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected Main(String[] args) throws BuildException", "signatureAfterChange": "      protected Main(String[] args) throws BuildException", "diff": ["+        String searchForThis = null;", "+", "-                } else if (i < args.length)", "+                } else if (i < args.length-1)", "+            } else if (arg.equals(\"-find\")) {", "+                // eat up next arg if present, default to build.xml", "+                if (i < args.length-1) {", "+                    searchForThis = args[++i];", "+                } else {", "+                    searchForThis = DEFAULT_BUILD_FILENAME;", "+                }", "-        // then search for it", "-            buildFile = findBuildFile(DEFAULT_BUILD_FILENAME);", "+            // but -find then search for it", "+            if (searchForThis != null) {", "+                buildFile = findBuildFile(\".\", searchForThis);", "+            } else {", "+                buildFile = new File(DEFAULT_BUILD_FILENAME);", "+            }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea46730877a396543ba8e7196de4f75", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/console/BuildConsole.java", "commitBeforeChange": "37b3d25cc8c65444ab2cbb5c0ff153dccf56c789", "commitAfterChange": "2d4bfedfb63f054542debd85410e53916fa502f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void contextualize(AppContext context)", "signatureAfterChange": "     public void contextualize(AppContext context)", "diff": ["-        ", "+", "+        /** Anonymous class to respond to resize envents and", "+         * post <code>ConsoleNotVisibleEvent</code> or", "+         * <code>ConsoleVisibleEvent</code> events.", "+         */", "+        addComponentListener(new ComponentAdapter() {", "+            public void componentResized(ComponentEvent e) {", "+                AppContext c = BuildConsole.this.getContext();", "+                if (BuildConsole.this.getHeight() == 0) {", "+                    c.getEventBus().postEvent(new ConsoleNotVisibleEvent(c));", "+                } else {", "+                    c.getEventBus().postEvent(new ConsoleVisibleEvent(c));", "+                }", "+            }", "+            public void componentHidden(ComponentEvent e) {}", "+            public void componentMoved(ComponentEvent e) {}", "+            public void componentShown(ComponentEvent e) {}", "+        });", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e02a639f0236a4149716e46e22d467a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "commitAfterChange": "b92e6b644f97b87083602a8ce4029cce01725674", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                    illegal = new IllegalStateException(\"No basedir set\");", "+                    // if no basedir and no includes, nothing to do:", "+                    if (nullIncludes) {", "+                        return;", "+                    }", "-                                                        + \" does not exist\");", "+                                                            + \" does not exist\");", "-                                                        + \" is not a directory\");", "+                                                            + \" is not a directory\");", "-                }", "-                if (illegal != null) {", "-                    throw illegal;", "+                    if (illegal != null) {", "+                        throw illegal;", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0773f48331d65e7ca79472145e0694", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "51fe5cb2d9c5c0aae9a528b1af992bcf1d407b1a", "commitAfterChange": "3849918afcc50b3f87292c7a9f3ef2bbb73fd4bc", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static void printTargets(Project project, Vector names,                                      Vector descriptions, String heading,                                      int maxlen)", "signatureAfterChange": "     private static void printTargets(Project project, Vector names,                                      Vector descriptions, Vector dependencies,                                      String heading,                                      int maxlen)", "diff": ["-                                     Vector descriptions, String heading,", "+                                     Vector descriptions, Vector dependencies,", "+                                     String heading,", "+            if (!dependencies.isEmpty()) {", "+                Enumeration deps = (Enumeration) dependencies.elementAt(i);", "+                if (deps.hasMoreElements()) {", "+                    msg.append(\"   depends of: \");", "+                    while (deps.hasMoreElements()) {", "+                        msg.append(deps.nextElement());", "+                        if (deps.hasMoreElements()) {", "+                            msg.append(\", \");", "+                        }", "+                    }", "+                    msg.append(lSep);                ", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6586043c32220e39867b7fbae9ceec3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "fd3ea490305970d8594f45a45f617ebe011ca885", "commitAfterChange": "6b2e7156fce5c379bb51f9aad53a90bad9e719ce", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                Enumeration e = props.keys();", "-                while (e.hasMoreElements()) {", "-                    String tok =  e.nextElement().toString();", "+                Iterator e = props.keySet().iterator();", "+                while (e.hasNext()) {", "+                    String tok =  e.next().toString();", "-            if (src != null) {", "-                processFile(src);", "+            if (sourceFile != null) {", "+                processFile(sourceFile);", "+                }", "+            }", "+", "+            if (resources != null) {", "+                for (Iterator i = resources.iterator(); i.hasNext(); ) {", "+                    FileProvider fp =", "+                        (FileProvider) ((Resource) i.next())", "+                        .as(FileProvider.class);", "+                    processFile(fp.getFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c751bbf19e128a5e3374d913ec8de287", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "9c8768b75b9fc59bbf87125a4d1a31a6b9253daa", "commitAfterChange": "677491b9276e57da76218487af18cfda70aa28af", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String inputEncoding, String outputEncoding,                          Project project)         throws IOException", "signatureAfterChange": "     public void copyFile(File sourceFile, File destFile,                          FilterSetCollection filters, Vector filterChains,                          boolean overwrite, boolean preserveLastModified,                          String inputEncoding, String outputEncoding,                          Project project)         throws IOException", "diff": ["-                    if (out != null) {", "-                        out.close();", "-                    }", "-                    if (in != null) {", "-                        in.close();", "-                    }", "+                    close(out);", "+                    close(in);", "-                      if (out != null) {", "-                         out.close();", "-                     }", "-                     if (in != null) {", "-                         in.close();", "-                     }", "+                      close(out);", "+                      close(in);", "-                    if (out != null) {", "-                        out.close();", "-                    }", "-                    if (in != null) {", "-                        in.close();", "-                    }", "+                    close(out);", "+                    close(in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea4638f27fa3251c715765da8798a2c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/ActionManager.java", "commitBeforeChange": "8355b21de23f92a94bd569b71ec6c69e437ac5ab", "commitAfterChange": "71cd7defed7816e61f8779e3605e5e808933475d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JMenuBar createMenuBar()", "signatureAfterChange": "     public JMenuBar createMenuBar()", "diff": ["-                JMenuItem item = menu.add(action);", "-                item.setAccelerator(action.getAccelerator());", "-                addNiceStuff(item, action);", "+", "+                if(!action.isToggle()) {", "+                    JMenuItem item = menu.add(action);", "+                    item.setAccelerator(action.getAccelerator());", "+                    addNiceStuff(item, action);", "+                }", "+                else {", "+                    JCheckBoxMenuItem b = ", "+                        new JCheckBoxMenuItem(action.getName());", "+                    b.setActionCommand(action.getID());", "+                    b.addActionListener(action);", "+                    b.setAction(action);", "+                    addNiceStuff(b, action);", "+                    menu.add(b);", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f89d7dc1f9621f91d97a9d92c0214df0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "03b6e25418f4b94cbb94e191d23d8ab0ba7b8f6e", "commitAfterChange": "fc6a4383fa7cee5fe2534dc9edc9d8a4eb5c254f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-            instream = new InputStreamReader(bis);", "+            if (encoding == null) {", "+                instream = new InputStreamReader(bis);", "+            } else {", "+                instream = new InputStreamReader(bis, encoding);", "+            }", "-                final StringInputStream sis = new StringInputStream(text);", "+                ByteArrayInputStream tis = null;", "+                if ( encoding == null ) {", "+                    tis = new ByteArrayInputStream(text.getBytes());", "+                } else {", "+                    tis = new ByteArrayInputStream(text.getBytes(encoding));", "+                }", "-                props.load(sis);", "+                props.load(tis);", "-                sis.close();", "+                tis.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9721a550c0169e32a45bf9e29332c3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["+        ", "+            List aspects = componentManager.getAspects();", "-", "-                if (component instanceof Task) {", "-                    execService.executeTask((Task) component);", "-                } else {", "-                    String typeId", "-                         = model.getAspectValue(Constants.ANT_ASPECT, \"id\");", "-", "-                    if (typeId != null) {", "-                        setDataValue(typeId, component, true);", "+                for (Iterator i = aspects.iterator(); i.hasNext();) {", "+                    Aspect aspect = (Aspect) i.next();", "+                    Object replacement ", "+                        = aspect.postCreateComponent(component, model);", "+                    if (replacement != null) {", "+                        component = replacement;", "+", "+                if (component instanceof Task) {", "+                    executeTask((Task) component);", "+                } "]}]}