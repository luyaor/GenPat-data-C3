{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3798a93d46207c6f079d36ff077f4652", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64d48fabfdb9a7767d0dc5399b0ee8df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected static boolean matchPatternStart( String pattern, String str,                                                 boolean isCaseSensitive )", "signatureAfterChange": "     protected static boolean matchPatternStart( String pattern, String str,                                                 boolean isCaseSensitive )", "diff": ["-        Vector patDirs = new Vector();", "+        ArrayList patDirs = new ArrayList();", "-            patDirs.addElement( st.nextToken() );", "+            patDirs.add( st.nextToken() );", "-        Vector strDirs = new Vector();", "+        ArrayList strDirs = new ArrayList();", "-            strDirs.addElement( st.nextToken() );", "+            strDirs.add( st.nextToken() );", "-            String patDir = (String)patDirs.elementAt( patIdxStart );", "+            String patDir = (String)patDirs.get( patIdxStart );", "-            if( !match( patDir, (String)strDirs.elementAt( strIdxStart ), isCaseSensitive ) )", "+            if( !match( patDir, (String)strDirs.get( strIdxStart ), isCaseSensitive ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "887ca07aab50cbad0c7c10c2b9bd35d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected static boolean matchPatternStart( String pattern, String str,                                                 boolean isCaseSensitive )", "signatureAfterChange": "     protected static boolean matchPatternStart( String pattern, String str,                                                 boolean isCaseSensitive )", "diff": ["-        Vector patDirs = new Vector();", "+        ArrayList patDirs = new ArrayList();", "-            patDirs.addElement( st.nextToken() );", "+            patDirs.add( st.nextToken() );", "-        Vector strDirs = new Vector();", "+        ArrayList strDirs = new ArrayList();", "-            strDirs.addElement( st.nextToken() );", "+            strDirs.add( st.nextToken() );", "-            String patDir = (String)patDirs.elementAt( patIdxStart );", "+            String patDir = (String)patDirs.get( patIdxStart );", "-            if( !match( patDir, (String)strDirs.elementAt( strIdxStart ), isCaseSensitive ) )", "+            if( !match( patDir, (String)strDirs.get( strIdxStart ), isCaseSensitive ) )"]}]}