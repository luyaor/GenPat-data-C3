{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36b83506f6aa6815170c68229559c7dc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ce3637214f7990af15f5f75869044f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void allocateCompressStructures()", "signatureAfterChange": "      private void allocateCompressStructures()", "diff": ["-        int n = BASE_BLOCK_SIZE * blockSize100k;", "-        block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];", "-        quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];", "-        zptr = new int[ n ];", "-        ftab = new int[ 65537 ];", "+        int n = BASE_BLOCK_SIZE * m_blockSize100k;", "+        m_block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];", "+        m_quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];", "+        m_zptr = new int[ n ];", "+        m_ftab = new int[ 65537 ];", "-        if( block == null || quadrant == null || zptr == null", "-            || ftab == null )", "+        if( m_block == null || m_quadrant == null || m_zptr == null", "+            || m_ftab == null )", "-        szptr = new short[ 2 * n ];", "+        m_szptr = new short[ 2 * n ];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff74e631467ba07dd9ae01e8bb29e4a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/CvsTagEntry.java", "commitBeforeChange": "2ca7dca3a61c1dfaf641aaae01d923a018e418c5", "commitAfterChange": "ab752d0295f473dde0b01a369616625a3ce9b871", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["+     */", "-        buffer.append(m_filename);", "-        if ((m_revision == null)) {", "+        buffer.append(filename);", "+        if ((revision == null)) {", "-            if (m_prevRevision != null) {", "-                buffer.append(\"; previous revision was \").append(m_prevRevision);", "+            if (prevRevision != null) {", "+                buffer.append(\"; previous revision was \").append(prevRevision);", "-        } else if (m_revision != null && m_prevRevision == null) {", "+        } else if (revision != null && prevRevision == null) {", "-                .append(m_revision);", "-        } else if (m_revision != null && m_prevRevision != null) {", "+                .append(revision);", "+        } else if (revision != null && prevRevision != null) {", "-                .append(m_prevRevision).append(\" to \").append(m_revision);", "+                .append(prevRevision).append(\" to \").append(revision);"]}]}