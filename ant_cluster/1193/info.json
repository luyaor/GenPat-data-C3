{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5dec0f7452ffb4bec3e8d34da0c48b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ae26fd4520ef75eac88dda0ed6c468", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void executeTasks(Iterator taskIterator) throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-    public void executeTasks(Iterator taskIterator) throws ExecutionException {", "+    protected void executeTasks(Iterator taskIterator)", "+         throws ExecutionException {", "-                throw new ExecutionException(\"There is no definition for the \"", "-                     + model.getType() + \" element\", model.getLocation());", "+                throw new ExecutionException(\"There is no definition for the <\"", "+                     + model.getType() + \"> element\", model.getLocation());", "-                    releaseTaskContext(taskContext);", "+                    taskContext.destroy();", "-                        setDataValue(typeId, typeInstance);", "+                        setDataValue(typeId, typeInstance, true);", "-", "-            } catch (TaskException te) {", "+            } catch (AntException te) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf091823ecf9e93f48e71d41e769726f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 35, "signatureBeforeChange": "     private void flattenDependency(List flattenedList, String fullTargetName)          throws ExecutionException", "signatureAfterChange": "     private void flattenDependency(List flattenedList, String fullTargetName,                                    Location targetRefLocation)          throws ExecutionException", "diff": ["-    private void flattenDependency(List flattenedList, String fullTargetName)", "+    private void flattenDependency(List flattenedList, String fullTargetName,", "+                                   Location targetRefLocation)", "-            throw new ExecutionException(\"Target \" + fullTargetName", "-                 + \" does not exist\");", "+            throw new ExecutionException(\"Target \\\"\" + fullTargetName", "+                 + \"\\\" does not exist\", targetRefLocation);", "-                fullDependencyName = fullProjectName + Project.REF_DELIMITER ", "+                fullDependencyName = fullProjectName + Project.REF_DELIMITER", "-            flattenDependency(flattenedList, fullDependencyName);", "+            flattenDependency(flattenedList, fullDependencyName,", "+                target.getLocation());"]}]}