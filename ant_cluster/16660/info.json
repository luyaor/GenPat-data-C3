{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c90a69d6ac0f6b65ced99b478d1ec69", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04445cf7f2fbdcf4cb2435d5ccdafef5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7c20aeab9898341c593fb56f6c3f9646b013d664", "commitAfterChange": "7228bef97c4c12a5012e14e1a059a12069ee4818", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private Enumeration resourceToURLs(ClassLoader classLoader)", "signatureAfterChange": "      private Enumeration resourceToURLs(ClassLoader classLoader)", "diff": ["-            if (onError != OnError.IGNORE) {", "-                log(\"Could not load definitions from resource \"", "-                    + resource + \". It could not be found.\",", "-                    Project.MSG_WARN);", "+            String message = \"Could not load definitions from resource \"", "+                + resource + \". It could not be found.\";", "+            switch (onError) {", "+                case OnError.FAIL_ALL:", "+                    throw new BuildException(message);", "+                case OnError.FAIL:", "+                case OnError.REPORT:", "+                    log(message, Project.MSG_WARN);", "+                    break;", "+                case OnError.IGNORE:", "+                    // Fall Through", "+                default:", "+                    // Ignore the problem", "+                    break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2774badefb4a37bfe763b02f9b58713c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7c20aeab9898341c593fb56f6c3f9646b013d664", "commitAfterChange": "7228bef97c4c12a5012e14e1a059a12069ee4818", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private URL fileToURL()", "signatureAfterChange": "      private URL fileToURL()", "diff": ["+        String message = null;", "-            log(\"File \" + file + \" does not exist\", Project.MSG_WARN);", "-            return null;", "+            message = \"File \" + file + \" does not exist\";", "-        if (!(file.isFile())) {", "-            log(\"File \" + file + \" is not a file\", Project.MSG_WARN);", "-            return null;", "+        if (message == null && !(file.isFile())) {", "+            message = \"File \" + file + \" is not a file\";", "-            return file.toURL();", "+            if (message == null) {", "+                return file.toURL();", "+            }", "-            log(\"File \" + file + \" cannot use as URL: \"", "-                + ex.toString(), Project.MSG_WARN);", "-            return null;", "+            message =", "+                \"File \" + file + \" cannot use as URL: \"", "+                + ex.toString();", "+        // Here if there is an error", "+        switch (onError) {", "+            case OnError.FAIL_ALL:", "+                throw new BuildException(message);", "+            case OnError.FAIL:", "+                // Fall Through", "+            case OnError.REPORT:", "+                log(message, Project.MSG_WARN);", "+                break;", "+            case OnError.IGNORE:", "+                // Fall Through", "+            default:", "+                // Ignore the problem", "+                break;", "+        }", "+        return null;"]}]}