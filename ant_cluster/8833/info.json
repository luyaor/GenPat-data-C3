{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08d326aa882e26e77d6f87f18bd20ff3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c3d853f7f909a1faf2f905a48176cfa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "af90534b7bdb9ebae1b379b7f8e8971bca89ad13", "commitAfterChange": "ab8b8ef56641361215a1e445917ac8a4345a556d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                /*", "+                 * The initial version used DateFormat.SHORT for the", "+                 * time format, which ignores seconds.  If we want", "+                 * seconds as well, we need DateFormat.MEDIUM, which", "+                 * in turn would break all old build files.", "+                 *", "+                 * First try to parse with DateFormat.SHORT and if", "+                 * that fails with MEDIUM - throw an exception if both", "+                 * fail.", "+                 */", "-                    if (millis < 0) {", "-                        throw new BuildException(\"Date of \" + dateTime", "-                                                 + \" results in negative \"", "-                                                 + \"milliseconds value \"", "-                                                 + \"relative to epoch \"", "-                                                 + \"(January 1, 1970, \"", "-                                                 + \"00:00:00 GMT).\");", "-                    }", "-                    throw new BuildException(pe.getMessage(), pe, getLocation());", "+                    df = ", "+                        DateFormat.getDateTimeInstance(DateFormat.SHORT,", "+                                                       DateFormat.MEDIUM,", "+                                                       Locale.US);", "+                    try {", "+                        setMillis(df.parse(dateTime).getTime());", "+                    } catch (ParseException pe2) {", "+                        throw new BuildException(pe2.getMessage(), pe, ", "+                                                 getLocation());", "+                    }", "+                }", "+", "+                if (millis < 0) {", "+                    throw new BuildException(\"Date of \" + dateTime", "+                                             + \" results in negative \"", "+                                             + \"milliseconds value \"", "+                                             + \"relative to epoch \"", "+                                             + \"(January 1, 1970, \"", "+                                             + \"00:00:00 GMT).\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2af53642b025328438541f174b08676", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java", "commitBeforeChange": "fdb394b4a72abc5a52db4e9c7dbe9dd2f785ee6f", "commitAfterChange": "590ea894dd688b963e1284c597ed1a8c0a0c9b0e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void importFileset(FileSet fileset)", "signatureAfterChange": " \tprotected void importFileset(FileSet fileset)", "diff": ["+\t\t\t\tlogFiles(classes, \"class\");", "+\t\t\t\tlogFiles(sources, \"source\");", "+\t\t\tString resourcePath = fileset.getDir(this.project).getAbsolutePath();", "-\t\t\timportSpec.setResourcePath(fileset.getDir(this.project).getAbsolutePath());", "+\t\t\timportSpec.setResourcePath(resourcePath);", "+\t\t\t\tlogFiles(resources, \"resource\");", "+\t\t\t\tlog( \"  (relative to resource path '\" + resourcePath + \"')\", org.apache.tools.ant.Project.MSG_VERBOSE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bc26287960ea58b41ae16c54a6a1f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Equals.java", "commitBeforeChange": "e67bfbd2b94e30ea380f89beda722851949530d9", "commitAfterChange": "083e298097191a0b1837add9d190376f1b1e1abc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-", "+        if (arg1 == arg2 || arg1 != null && arg1.equals(arg2)) {", "+            return true;", "+        }", "+        if (forcestring) {", "+            arg1 = arg1 == null || arg1 instanceof String ? arg1 : arg1.toString();", "+            arg2 = arg2 == null || arg2 instanceof String ? arg2 : arg2.toString();", "+        }", "-        return arg1 == arg2 || arg1 != null && arg1.equals(arg2);", "+        return false;"]}]}