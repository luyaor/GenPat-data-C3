{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8519675cf538c312c38fc6abc7a8a3a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8ba10ef1df4790415193c7c06ac51c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/condition/IsPingable.java", "commitBeforeChange": "8bb8dce32cd2a9b6751e23dfb43e5f0b9d60a3e5", "commitAfterChange": "f1414a37f28a85a5b7fab5e4019b723c5a3546d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        if (host == null || host.length() == 0) {", "+        if (empty(host) && empty(url)) {", "+        String target = host;", "+        if (!empty(url)) {", "+            if (!empty(host)) {", "+                throw new BuildException(ERROR_BOTH_TARGETS);", "+            }", "+            try {", "+                //get the host of a url", "+                URL realURL = new URL(url);", "+                target = realURL.getHost();", "+            } catch (MalformedURLException e) {", "+                throw new BuildException(\"Bad URL \" + url, e);", "+            }", "+        }", "-            InetAddress address = InetAddress.getByName(host);", "-            return address.isReachable(timeout * 1000);", "+            log(\"Probing host \" + target, Project.MSG_VERBOSE);", "+            InetAddress address = InetAddress.getByName(target);", "+            log(\"Host address =\" + address.getHostAddress(),", "+                    Project.MSG_VERBOSE);", "+            final boolean reachable = address.isReachable(timeout * 1000);", "+            log(\"host is \" + (reachable ? \"\" : \"not\") + \" reachable\",", "+                    Project.MSG_VERBOSE);", "+            return reachable;", "-            log(ERROR_UNKNOWN_HOST + host, Project.MSG_VERBOSE);", "+            log(ERROR_UNKNOWN_HOST + target);", "-            log(ERROR_ON_NETWORK + host + \": \" + e.toString(),", "-                    Project.MSG_VERBOSE);", "+            log(ERROR_ON_NETWORK + target + \": \" + e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef35897882a8a977e65839670137b3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "d2eddd7e4d3a7509fbebf87e11c1186073316be6", "commitAfterChange": "34c0080c09ba7c72241296abc4eb83e2ed9fd569", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "-        if (srcDir.equals(destDir) && (extension == null)){", "-            throw new BuildException(\"The ext attribut must be set if\"", "+        if (srcDir.equals(destDir) && extension == null && mapper == null){", "+            throw new BuildException(\"The ext attribute or a mapper must be set if\"", "+        FileNameMapper m = null;", "+        if (mapper == null) {", "+            if (extension == null) {", "+                m = new IdentityMapper();", "+            } else {", "+                m = new ExtMapper();", "+            }", "+        } else {", "+            m = mapper.getImplementation();", "+        }", "+        ", "-        log(\"Converting files from \" + srcDir + \" to \" + destDir);", "+        SourceFileScanner sfs = new SourceFileScanner(this);", "+        files = sfs.restrict(files, srcDir, destDir, m);", "+        int count = files.length;", "+        if (count == 0) {", "+            return;", "+        }", "+        String message = \"Converting \"+ count + \" file\"", "+            + (count != 1 ? \"s\" : \"\") + \" from \";", "+        log(message + srcDir + \" to \" + destDir);", "-            convert(files[i]);", "+            convert(files[i], m.mapFileName(files[i])[0]);"]}]}