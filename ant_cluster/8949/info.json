{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8928f8aa3fc0b8d2f01c18aa5d99ea88", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af0dd589adac170b827870e90f34353", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testInnerInner()", "signatureAfterChange": "     @Test     public void testInnerInner()", "diff": ["+    @Test", "-        executeTarget(\"testinnerinner\");", "+        buildRule.executeTarget(\"src3setup\");", "+        buildRule.executeTarget(\"compile\");", "+", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"tempsrc.dir\")), 5);", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"classes.dir\")), 5);", "+", "+        buildRule.executeTarget(\"testinnerinner\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d687677ad21e0301e07bc6daff213e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDirect()", "signatureAfterChange": "     @Test     public void testDirect()", "diff": ["+    @Test", "-        executeTarget(\"testdirect\");", "+        buildRule.executeTarget(\"src1setup\");", "+        buildRule.executeTarget(\"compile\");", "+", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"tempsrc.dir\")), 5);", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"classes.dir\")), 5);", "+", "+        buildRule.executeTarget(\"testdirect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62df4be04cc15db74d458127192f36a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testClosure()", "signatureAfterChange": "     @Test     public void testClosure()", "diff": ["+    @Test", "-        executeTarget(\"testclosure\");", "+        buildRule.executeTarget(\"src1setup\");", "+        buildRule.executeTarget(\"compile\");", "+", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"tempsrc.dir\")), 5);", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"classes.dir\")), 5);", "+", "+        buildRule.executeTarget(\"testclosure\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba426fb845a51f65baed5d26156ffbd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/depend/DependTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testInner()", "signatureAfterChange": "     @Test     public void testInner()", "diff": ["+    @Test", "-        executeTarget(\"testinner\");", "+        buildRule.executeTarget(\"src2setup\");", "+        buildRule.executeTarget(\"compile\");", "+", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"tempsrc.dir\")), 5);", "+        FileUtilities.rollbackTimetamps(new File(buildRule.getProject().getProperty(\"classes.dir\")), 5);", "+", "+", "+        buildRule.executeTarget(\"testinner\");"]}]}