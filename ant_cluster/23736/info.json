{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "202fb35834d0f71508791739932c8202", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2967a05d8abec3d387974736d7ecb9f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java", "commitBeforeChange": "25e6c497c3d1b68f412ad7fc47fad735edee37d7", "commitAfterChange": "b02d774374b614d4520b6396e56f90d0d0c84257", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private RedirectorElement createRedirector()", "signatureAfterChange": "     private RedirectorElement createRedirector()", "diff": ["-        StringBuffer input = new StringBuffer(storepass).append('\\n');", "-        if (keypass != null) {", "-            input.append(keypass).append('\\n');", "+        if(storepass!=null) {", "+            StringBuffer input = new StringBuffer(storepass).append('\\n');", "+            if (keypass != null) {", "+                input.append(keypass).append('\\n');", "+            }", "+            result.setInputString(input.toString());", "+            result.setLogInputString(false);", "-        result.setInputString(input.toString());", "-        result.setLogInputString(false);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f52c5ddf44b4154a404acaba410b12", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "cd517c28816d6aeb32efbd15e8442d5145b1ca30", "commitAfterChange": "7830ff460def6c04a974b31ea5ffc1e422b54165", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "     private String[] list(File file)", "signatureAfterChange": "     private String[] list(File file)", "diff": ["-        String[] files = (String[]) fileListMap.get(file);", "+        String[] files = null;", "+        SoftReference s = (SoftReference) fileListMap.get(file);", "+        if (s != null) {", "+            files = (String[]) s.get();", "+            if (files == null) {", "+                fileListMap.remove(file);", "+            }", "+        }", "-                fileListMap.put(file, files);", "+                fileListMap.put(file, new SoftReference(files));", "-                fileListMap.put(file, NULL_FILE_LIST);", "+                fileListMap.put(file, new SoftReference(NULL_FILE_LIST));"]}]}