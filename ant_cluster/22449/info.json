{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b79e39bc014ba2ed35f218d3cec24c4d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355aca12258f499b2734c21c1c89098d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "9b1699347cf0932238521bd920743322408a20fd", "commitAfterChange": "a62c18b46505e8c47c8fd837b75fd6cc9672b77a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private File findFile(File base, Vector pathElements, boolean cs)", "signatureAfterChange": "     private File findFile(File base, Vector pathElements, boolean cs)", "diff": ["-        //always scan first NOT ignoring case; if cs, do a 2nd scan ignoring case:", "-        boolean[] ignoreCase = cs ? new boolean[] {false}", "-                                  : new boolean[] {false, true};", "-        for (int i = 0; i < ignoreCase.length; i++) {", "+        boolean[] matchCase = cs ? csScanOnly : csThenNonCs;", "+        for (int i = 0; i < matchCase.length; i++) {", "-                if (ignoreCase[i] ? files[j].equalsIgnoreCase(current)", "-                                  : files[j].equals(current)) {", "+                if (matchCase[i] ? files[j].equals(current)", "+                                 : files[j].equalsIgnoreCase(current)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667f69e4793f28083f407b00c6da239f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/JUnitHelper.java", "commitBeforeChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "commitAfterChange": "283bade37c87f86c92763234e886a69eb55cb47d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static String[] parseTestString(String testname)", "signatureAfterChange": "     public static String getSuiteName(String text)", "diff": ["-    public static String[] parseTestString(String testname) {", "-        int p1 = testname.indexOf('(');", "-        int p2 = testname.indexOf(')', p1);", "-        return new String[]{", "-            testname.substring(0, p1),", "-            testname.substring(p1 + 1, p2)};", "+     */", "+    public static String getSuiteName(String text){", "+        int p1 = text.indexOf('(');", "+        int p2 = text.indexOf(')', p1);", "+        return text.substring(p1 + 1, p2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9725cf7efa2132b8e855c7837795cf7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "faba017869b796b137c9147c00a00cd11dd94f1e", "commitAfterChange": "2c68e6ab607fa6a70e414eee76d56afe00c29c31", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                    EXECUTOR.executeTargets(newProject,", "-                        (String[]) (locals.toArray(new String[locals.size()])));", "-", "+                    newProject.executeTargets(locals);"]}]}