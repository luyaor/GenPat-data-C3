{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "becd8a1289785dc6cef1e5a21502a8d7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0791e1823811fc715773b0f67760ed94", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/Property.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-                try { setName( (String)m_converter.convert( String.class, object ) ); }", "+                try ", "+                {", "+                    final String convertedValue = ", "+                        (String)m_converter.convert( String.class, object, getContext() );", "+                    setName( convertedValue );", "+                }", "-                        (Boolean)m_converter.convert( Boolean.class, object );", "+                        (Boolean)m_converter.convert( Boolean.class, object, getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a20e1823f03ea64fc83c48db024eb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "4b3e8042ba2d4de4b2820df36d8304292df0526a", "commitAfterChange": "a87871c71ec228fd64a84d8656f854ba206eb0f3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                        illegal = new IllegalStateException(\"basedir \" + basedir", "-                                                            + \" is not a directory\");", "+                        illegal = new IllegalStateException(\"basedir \"", "+                                                            + basedir", "+                                                            + \" is not a\"", "+                                                            + \" directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9768fb6868da7da5754d22ad18f4de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "14d5a4009a398c3b64fe9a313f4c0670d75ae0bf", "commitAfterChange": "9dc81a0315ba4e18a8a6023b43e294bd700973c9", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 65, "signatureBeforeChange": "     protected Collection executeOrQueue(Enumeration testList,                                         boolean runIndividual)", "signatureAfterChange": "     protected Collection executeOrQueue(Enumeration testList,                                         boolean runIndividual)", "diff": ["-                        new ForkedTestConfiguration(test.getFiltertrace(),", "-                                                    test.getHaltonerror(),", "-                                                    test.getHaltonfailure(),", "-                                                    test.getErrorProperty(),", "-                                                    test.getFailureProperty());", "+                        new ForkedTestConfiguration(test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1abd5c80c9087a611903de6d0f0d8dd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "9f80e894bd1f2b9b3bef66d043db22916c1ee683", "commitAfterChange": "f25d3801bb03267e98e239d6fae047b8d3778eed", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setStyle(BriefCodediffNofile attr)", "signatureAfterChange": "     public void setStyle(BriefCodediffNofile attr)", "diff": ["-            m_Style = FLAG_BRIEF;", "+            super.setInternalStyle(FLAG_BRIEF);", "-            m_Style = FLAG_CODEDIFF;", "+            super.setInternalStyle(FLAG_CODEDIFF);", "-            m_Style = \"\";", "+            super.setInternalStyle(\"\");", "-            m_Style = FLAG_NO_FILE;", "+            super.setInternalStyle(FLAG_NO_FILE);", "-            throw new BuildException(\"Style \" + attr + \" unknown.\");", "+            throw new BuildException(\"Style \" + attr + \" unknown.\", getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2242129ee0916bcfcb9931d338767eb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "signatureAfterChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "diff": ["-                    throw new BuildException(\"This version of java does \"", "+                    task.log(\"This version of java does \"", "-                                             + \"compiler\");", "+                                             + \"compiler; upgrading to modern\",", "+                                             Project.MSG_WARN);", "+                    compilerType=\"modern\";", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "233de89bb489176d28eabc4a9cd56432", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "12e9d5f0d34a161cd162b3a99d8e6eb1799267bf", "commitAfterChange": "46c940785aaa80d86df0bd49cd11bd2035d557bf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void handleChildren(         Object parent,         RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(         Object parent,         RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["+                    if (!childWrapper.isEnabled(child)) {", "+                        if (ih.supportsNestedElement(", "+                                parentUri, ProjectHelper.genComponentName(", "+                                    child.getNamespace(), child.getTag()))) {", "+                            continue;", "+                        }", "+                        // fall tru and fail in handlechild (unsupported element)", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269adb9a1c209d587e368bbb8b1de1fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ScriptRunner.java", "commitBeforeChange": "c977aacfc4fa74e97980255432216d87bf617018", "commitAfterChange": "efef302a3da9a9e063da729c92f6f2b997884a9a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void executeScript(String execName) throws BuildException", "signatureAfterChange": "     public void executeScript(String execName) throws BuildException", "diff": ["-                manager.declareBean(key, value, value.getClass());", "+                if (value != null) {", "+                    manager.declareBean(key, value, value.getClass());", "+                } else {", "+                    // BSF uses a hashtable to store values", "+                    // so cannot declareBean with a null value", "+                    // So need to remove any bean of this name as", "+                    // that bean should not be visible", "+                    manager.undeclareBean(key);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd87696f123c59c038474cf18f2c634", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "commitAfterChange": "cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public boolean isSelected(Resource r)", "signatureAfterChange": "                 public boolean isSelected(Resource target)", "diff": ["-        }", "-        public boolean isSelected(Resource r) {", "-            return SelectorUtils.isOutOfDate(control, r, granularity);", "-        }", "+            r.add(new ResourceSelector() {", "+                public boolean isSelected(Resource target) {", "+                    /* Extra I/O, probably wasted:", "+                    if (target.isDirectory()) {", "+                        return false;", "+                    }", "+                     */", "+                    return SelectorUtils.isOutOfDate(sr, target, granularity);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356252e54db73144e78d20843483a6ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "1ef4d3ea869c19a408aae99300a1c04b485917b1", "commitAfterChange": "d880f3fef60e8284ed1a6223bda44f386580310e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void parse() throws BuildException", "signatureAfterChange": "     private void parse() throws BuildException", "diff": ["-            parser = saxParser.getParser();", "+            try {", "+                parser = saxParser.getParser();", "+            } catch (SAXException exc) {", "+                parser = new XMLReaderAdapter(saxParser.getXMLReader());", "+            }", "-            saxParser.parse(inputSource, new RootHandler());", "+            HandlerBase hb = new RootHandler();", "+            parser.setDocumentHandler(hb);", "+            parser.setEntityResolver(hb);", "+            parser.setErrorHandler(hb);", "+            parser.setDTDHandler(hb);", "+            parser.parse(inputSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4509fd5987076fb564beefc966467525", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "4b364736eef7f9740caba2130df3113462b1b612", "commitAfterChange": "32c6ef39e4527cdcaeb6a702be90203ca8ced940", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDepends(String depS)", "signatureAfterChange": "     public void setDepends(String depS)", "diff": ["-        if (depS.length() > 0) {", "+        for (Iterator iter = parseDepends(depS, getName()).iterator();", "+             iter.hasNext(); ) {", "+            addDependency((String) iter.next());", "+        }", "+    }", "-                new StringTokenizer(depS, \",\", true);", "-                    throw new BuildException(\"Syntax Error: depends \" + \"attribute of target \\\"\"", "-                            + getName() + \"\\\" has an empty string as dependency.\");", "-                addDependency(token);", "-                                + \"attribute for target \\\"\" + getName()", "-                                + \"\\\" ends with a , character\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8af21ac02af40b4cd55654fdda038c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/SortFilter.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void initialize() throws IOException", "signatureAfterChange": "     private void initialize() throws IOException", "diff": ["-                        setComparator((Comparator) (Class.forName(className)", "-                                                    .newInstance()));", "+                        @SuppressWarnings(\"unchecked\")", "+                        final Comparator<? super String> comparatorInstance = (Comparator<? super String>) (Class", "+                                .forName(className).newInstance());", "+                        setComparator(comparatorInstance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ade1717959989dfabd5ad78094020e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "12278c16e0bea33aa550ae6afc8c7d3bac39607a", "commitAfterChange": "01967f4543e3d84e079481c6ea968fb0b517fad2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "signatureAfterChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "diff": ["+        if (emptyBehavior.equals(\"skip\")) {", "+                log(\"Warning: skipping \" + archiveType + \" archive \"", "+                    + zipFile + \" because no files were included.\",", "+                    Project.MSG_WARN);", "+                return true;", "+        } else if (emptyBehavior.equals(\"fail\")) {", "+            throw new BuildException(\"Cannot create \" + archiveType", "+                                     + \" archive \" + zipFile", "+                                     + \": no files were included.\",", "+                                     getLocation());", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6596500dd990d72c0ddf66d1f5a39820", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "818ddcf1837e09566976e01e2b718b1995f6e5f2", "commitAfterChange": "f31845f71d137a7891e010f0c8d2b8db6e81a8c6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                log(\"RMI Compiling \" + fileCount + \" class\" + (fileCount > 1 ? \"es\" : \"\") + \" to \"", "-                        + outputDir, Project.MSG_INFO);", "+                log(\"RMI Compiling \" + fileCount + \" class\"", "+                    + (fileCount > 1 ? \"es\" : \"\") + \" to \"", "+                    + outputDir, Project.MSG_INFO);", "+", "+                if (listFiles) {", "+                    for (int i = 0; i < fileCount; i++) {", "+                        log(compileList.get(i).toString());", "+                    }", "+                }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "671debe6486b18a56545df6e92aa063c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "0f55b6b9d6a98accff8e0352474df465207806f7", "commitAfterChange": "b3b45f91c261f0dbf1b5acdb545ae2fe600d60cf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "signatureAfterChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "diff": ["-                // need class files in a directory to use this - jar files", "-                // coming soon....", "+                // need class files in a directory to use this or jar files.", "-                    if (!f.exists() || !f.isDirectory()) {", "+                    if (!f.exists()) {", "-                            + \" directory. JDepend would fail.\";", "+                            + \" file or directory. JDepend would fail.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a1d3214113260e1d964e835a355697", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "          public void targetStarted(BuildEvent event)", "signatureAfterChange": "          public void targetStarted(BuildEvent event)", "diff": ["-                    if (calls == expectedBasedirs.length) {", "-                        assertEquals(\"cleanup\",", "-                                     event.getTarget().getName());", "-                    } else {", "-                        assertEquals(expectedBasedirs[calls++],", "-                                     event.getProject().getBaseDir().getAbsolutePath());", "-                    }", "+                    assertEquals(expectedBasedirs[calls++],", "+                                 event.getProject().getBaseDir().getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68eb90b4a9a1a4ebaa03d6867de4b949", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "9ec9a279f5b0d54e1d1362475edc52717b2197ab", "commitAfterChange": "4d8702d1f414ef88110183568a3aa502d18e06f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "signatureAfterChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "diff": ["+                        AntLibrarySpec currentSpec ", "+                            = (AntLibrarySpec)librarySpecs.get(libraryId);", "-                             + \"copy of library with id = \" + libraryId +", "-                            \" (\" + libURLs[i] + \")\");", "+                             + \"copy of library with id = \" + libraryId ", "+                             + \" (\" + libURLs[i] + \") + existing library at (\"", "+                             + currentSpec.getLibraryURL() + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7525eb167d35e424cc005848b848e171", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "629079f866da4f2035f86fae4a237944734ce1fd", "commitAfterChange": "b86a0a2830f81aa373a40ca7db51c5308f58550a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["+            ", "+            if (passive)", "+            {", "+                log(\"entering passive mode\", Project.MSG_VERBOSE);", "+                ftp.enterLocalPassiveMode();", "+                if (!FTPReply.isPositiveCompletion(ftp.getReplyCode()))", "+                {", "+                    throw new BuildException(", "+                        \"could not enter into passive mode: \" +", "+                        ftp.getReplyString());", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81faa2f7801b9987148b6519d9a5eeed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "5e0218a9652cab04a824719dbb163e6dbccac3db", "commitAfterChange": "ddd4677c145ccc8e11755ea2aad6c53c3e15e9e3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                    \"FileSet is required.\");", "+                                     \"FileSet is required.\");", "-        if( fromUri != null )", "+        if( fromUri != null ) {", "+        }", "-                        \"must have syntax like the following: \" +", "-                        \"user:password@host:/path\");", "+                                         \"must have syntax like the following: \" +", "+                                         \"user:password@host:/path\");", "-            if( failOnError ) {", "+            if(getFailonerror()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8672f7b36c9af36842d386cc806e5935", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/AbstractClasspathResource.java", "commitBeforeChange": "a9cbacc4f8c19d9a7ed68e5b70505a3f693680ba", "commitAfterChange": "eb64d092a48900216af76452f0fb33e371d30d17", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public InputStream getInputStream() throws IOException", "signatureAfterChange": "     public InputStream getInputStream() throws IOException", "diff": ["-                cl = getProject().createClassLoader(p);", "+                if (parentFirst) {", "+                    cl = getProject().createClassLoader(p);", "+                } else {", "+                    cl = AntClassLoader.newAntClassLoader(getProject()", "+                                                          .getCoreLoader(),", "+                                                          getProject(),", "+                                                          p, false);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a2ab10f92fdd488fd3d58944236fb59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "3732eb195b3d24d6480a2d7edb2818b325a3e199", "commitAfterChange": "b0507d4451b72856ddca45183143a96493e8ef3e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void runParallel(Execute exe, Vector fileNames,                                Vector baseDirs)         throws IOException, BuildException", "signatureAfterChange": "     protected void runParallel(Execute exe, Vector fileNames,                                Vector baseDirs)         throws IOException, BuildException", "diff": ["-                if (currentOffset > 0) {", "+                if (redirectorElement != null) {", "+                    setupRedirector();", "+                    redirectorElement.configure(redirector, null);", "+                }", "+", "+                if (redirectorElement != null || currentOffset > 0) {", "-                    // reading of pipes", "-                    exe.setStreamHandler(createHandler());", "+                    // reading of pipes;", "+                    // go ahead and do it always w/ nested redirectors", "+                    exe.setStreamHandler(redirector.createHandler());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d5777658def92fe18572a962caa4c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "fdade0537c4628290168a365b9a14d28c3e32b72", "commitAfterChange": "9af46a2ca05b7e2da738a1688ff679445f2c1a6e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 48, "signatureBeforeChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "signatureAfterChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "diff": ["-            createClassLoader();", "+            if (splitJunit) {", "+                classLoader = (AntClassLoader) delegate.getClass().getClassLoader();", "+            } else {", "+                createClassLoader();", "+            }", "-            runner = new JUnitTestRunner(test, test.getHaltonerror(),", "+            runner = delegate.newJUnitTestRunner(test, test.getHaltonerror(),", "-                SummaryJUnitResultFormatter f =", "-                    new SummaryJUnitResultFormatter();", "+                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "+                    delegate.newSummaryJUnitResultFormatter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a21eb68bef8ae81d416f9bd7613b481", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "5c6ae59fccc6dba7646dc8076daed7542516dbd1", "commitAfterChange": "b0eca5e4bbae7c254ba66eac900378c25c585fdd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static void validateVersion() throws BuildException", "signatureAfterChange": "     public static void validateVersion() throws BuildException", "diff": ["-                        + \"between Ant core and Ant optional tasks.\\n\" + \" core    : \"", "-                        + coreVersion + \"\\n\" + \" optional: \" + optionalVersion);", "+                        + \"between Ant core and Ant optional tasks.\\n\"", "+                        + \" core    : \" + coreVersion + \" in \"", "+                        + getClassLocation(Main.class)", "+                        + \"\\n\" + \" optional: \" + optionalVersion + \" in \"", "+                        + getClassLocation(optional));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d5bc79a09a1fd0a805f790585194f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a87871c71ec228fd64a84d8656f854ba206eb0f3", "commitAfterChange": "4248bab8eaef8265c62fc3a612bfee1943086133", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                                \"basedir \" + basedir + \" does not exist\");", "+                                \"basedir \" + basedir + \" does not exist.\");", "-                    }", "-                    if (!basedir.isDirectory()) {", "+                    } else if (!basedir.isDirectory()) {", "-                                                            + \" directory\");", "+                                                            + \" directory.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1e4c2d934bb0068edf07403d306bab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java", "commitBeforeChange": "94fa51d8c2071551bb3549c026849781441cf0f9", "commitAfterChange": "34d8396f3ee1562bdd44ce669c25ec3dfe42e380", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-            SAXParser saxParser = getParserFactory().newSAXParser();", "-                parser = saxParser.getParser();", "-            } catch (SAXException exc) {", "-                parser = new XMLReaderAdapter(saxParser.getXMLReader());", "+                parser = JAXPUtils.getParser();", "+            } catch (BuildException e) {", "+                parser = new XMLReaderAdapter(JAXPUtils.getXMLReader());", "-        } catch (ParserConfigurationException exc) {", "-            throw new BuildException(\"Parser has not been configured correctly\", exc);", "-        } catch (FactoryConfigurationError e) {", "-            throw new BuildException(\"XML parser has not been configured \" ", "-                + \"correctly: \" + e.getMessage(), e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b673654540c454fa1b971eb7bc2dbc4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java", "commitBeforeChange": "59ad4c1654ec703e773d8e7dce593e57f7699690", "commitAfterChange": "8b31f08c8e3dfd5887ca4c5810e43f7170182fe4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final Reader getAssembledReader() throws BuildException", "signatureAfterChange": "     public final Reader getAssembledReader() throws BuildException", "diff": ["+                                boolean consPresent = false;", "+                                        consPresent = true;", "+                                if ( !consPresent ) {", "+                                    throw new BuildException( className +", "+                                            \" does not define a public constructor\" +", "+                                            \" that takes in a Reader as its single argument.\");", "+                                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7659397ccb39136d74a34d13d640c5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1d3ca73f3c02e7a06c94f677057b04c3c238027e", "commitAfterChange": "cd517c28816d6aeb32efbd15e8442d5145b1ca30", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                            illegal = new IllegalStateException(", "-                                \"basedir \" + basedir + \" does not exist.\");", "+                            illegal = new IllegalStateException(\"basedir \"", "+                                                                + basedir", "+                                                                + DOES_NOT_EXIST_POSTFIX);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6dc6517dca2d4d47e291ac19676dcb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "6cbd301d147df65007108bbbbf6239071815b217", "commitAfterChange": "2bd38f0df1294b986163ec1ff27d12d0aab9c270", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["+                        if (haveExecuted) {", "+                            // need to reset the stream handler to restart", "+                            // reading of pipes", "+                            exe.setStreamHandler(createHandler());", "+                        }", "+                        if (haveExecuted) {", "+                            // need to reset the stream handler to restart", "+                            // reading of pipes", "+                            exe.setStreamHandler(createHandler());", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2da10b6153ad5f5f4647e1512f99f38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java", "commitBeforeChange": "f7def885dd7bc3f17bb095754a21805701d7ada7", "commitAfterChange": "7fbbcdf665363d7efd4fe092bc7b24bd8eb6d542", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void runFolder( Server s,                                com.starbase.starteam.Project p,                                View v,                                Type t,                                Folder f )", "signatureAfterChange": "     protected void runFolder( Server s,                                com.starbase.starteam.Project p,                                View v,                                Type t,                                Folder f,                               String tgt )", "diff": ["-                              Folder f )", "+                              Folder f,", "+                              String tgt )", "-            runItem(s, p, v, t, f, items[i]);", "+            runItem(s, p, v, t, f, items[i], tgt);", "-        if (getRecursionAsBoolean())", "+        if (getRecursion())", "-                runFolder(s, p, v, t, subfolders[i]);", "+                runFolder(s, p, v, t, subfolders[i], tgt + delim + subfolders[i].getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37f1f0c594c8cb1a147d7650f984b4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "8ea8f38c22dce6c8c6696751ae6c381e4f1985fa", "commitAfterChange": "5348fe6bcba126301a3f97e3919f7eeca1b940ea", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static void deleteSymlink(File linkfil)         throws IOException", "signatureAfterChange": "     public static void deleteSymlink(File linkfil)         throws IOException", "diff": ["+", "-                                              canfil.getParentFile(), false, false);", "+                                              canfil.getParentFile(), false,", "+                                              false);", "+", "+        if (FILE_UTILS.isLeadingPath(canfil, linkfil)) {", "+            // link points to a parent directory, renaming the parent", "+            // will rename the file", "+            linkfil = new File(temp,", "+                               FILE_UTILS.removeLeadingPath(canfil, linkfil));", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43f78a076e6d6867d46a09d7412282d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "40c79e53546eefa381c645fced7002592524a951", "commitAfterChange": "b0bdced687d02b5b68c19b2c7bf9bccb2724b802", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void scan() throws IllegalStateException", "signatureAfterChange": "     public void scan() throws IllegalStateException", "diff": ["-                        illegal = new IllegalStateException(\"basedir \" + basedir", "-                                                            + \" does not exist\");", "+                        if (errorOnMissingDir) {", "+                            illegal = new IllegalStateException(", "+                                \"basedir \" + basedir + \" does not exist\");", "+                        } else {", "+                            // Nothing to do - basedir does not exist", "+                            return;", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c612366eb00aa745efafbb4909eb0a7c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "9b7f00ab245e2c75e3e57d0de1782c4a8b3d50eb", "commitAfterChange": "c8d4ba2393fab9703138171f5d63efa34cbc37e8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "     protected void getFile(FTPClient ftp, String dir, String filename)          throws IOException, BuildException", "signatureAfterChange": "     protected void getFile(FTPClient ftp, String dir, String filename)          throws IOException, BuildException", "diff": ["+                if (preserveLastModified) {", "+                    outstream.close();", "+                    outstream = null;", "+                    FTPFile[] remote = ftp.listFiles(resolveFile(filename));", "+                    if (remote.length > 0) {", "+                        fileUtils.setFileLastModified(file,", "+                                                      remote[0].getTimestamp()", "+                                                      .getTime().getTime());", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a1293047644d14a5a54ce1328c9684", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "12e8a63e2f797fdfb28e9f30761669465cb033ee", "commitAfterChange": "f9121ee81e58e6cb4369a4e043e0a88cbfe3e503", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                                     location);", "+                                     getLocation());", "-                                         location);", "+                                         getLocation());", "-                                         + \" doesn\\'t exist\", location);", "+                                         + \" doesn\\'t exist\", getLocation());", "-            throw new BuildException(e, location);", "+            throw new BuildException(e, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87818b16028fa927620dd9a6c6c19e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/JavaxScriptRunner.java", "commitBeforeChange": "0c9ce8cd2164e864aa18d52fa7ec83119e67e265", "commitAfterChange": "f18d4b424dd49116185295c5bec052cd0229b38c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object evaluateScript(String execName) throws BuildException", "signatureAfterChange": "     public Object evaluateScript(String execName) throws BuildException", "diff": ["-                engine.invoke(", "-                    \"put\", String.class, key, Object.class, value);", "+                if (\"FX\".equals(getLanguage())) {", "+                    engine.invoke(", "+                        \"put\", String.class, key", "+                        + \":\" + value.getClass().getName(),", "+                        Object.class, value);", "+                } else {", "+                    engine.invoke(", "+                        \"put\", String.class, key,", "+                        Object.class, value);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de35b63ab75a29c50c7cf81080f20a61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "222693b10f20a17af93ca107ba09dc2a679ab5cd", "commitAfterChange": "85875db138d8efbc050b5d34dbba19cc9c707db6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            super.execute();", "+            try {", "+                super.execute();", "+            } finally {", "+                filesets.removeElement(defaultSet);", "+            }", "-            createArg().setValue(defaultSet.getDir(project).getPath());", "+            Commandline cloned = (Commandline) cmdl.clone();", "+            cloned.createArgument().setValue(defaultSet.getDir(project)", "+                                             .getPath());", "-                execute.setCommandline(cmdl.getCommandline());", "+                execute.setCommandline(cloned.getCommandline());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec75752b17194f0631fed1b0a6282146", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/WaitFor.java", "commitBeforeChange": "92e78a439b4dcc2db25fdd9b7df1674b4d5a1726", "commitAfterChange": "dac8f932ac91bd42f6fec9d8e1a324897312ab42", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                                     + \"condition into <waitfor>\");", "+                                     + \"condition into \"", "+                                     + getTaskName());", "-                                     + \"<waitfor>\");", "+                                     + getTaskName());", "+                    processSuccess();", "-            if (timeoutProperty != null) {", "-                getProject().setNewProperty(timeoutProperty, \"true\");", "-            }", "+            processTimeout();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1201e132f3d095b406e97ee5f552635", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "25253f3faa839d0341bdfe9eecb06d8791fcf8ea", "commitAfterChange": "925e23a2861ea0dd5605a31b21ce85e72d32238c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      private void resolveAllProperties(Properties props) throws BuildException", "signatureAfterChange": "      private void resolveAllProperties(Properties props) throws BuildException", "diff": ["-                ProjectHelper.parsePropertyString(value, fragments, propertyRefs);", "+                ProjectHelper.parsePropertyString(value, fragments, ", "+                                                  propertyRefs);", "-                                throw new BuildException(\"Property \" + name + \" was circularly defined.\");", "+                                throw new BuildException(\"Property \" + name ", "+                                                         + \" was circularly \"", "+                                                         + \"defined.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42667c161e0e44989a0f98b4c9f6888", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "be90dbd7b54f177a4ecf3b4de6d77366f34cad2e", "commitAfterChange": "39a7cce3ed1eb16238ef358336a4af9f8ce46fcd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void addDefinition(ClassLoader al, String name, String classname)         throws BuildException", "signatureAfterChange": "     protected void addDefinition(ClassLoader al, String name, String classname)         throws BuildException", "diff": ["-                    .addDataTypeDefinition(def);", "+                        .addDataTypeDefinition(def);", "-                    + \" cannot be found\";", "+                        + \" cannot be found\"", "+                        + \"\\n using the classloader \" + al;", "-                    + classname + \" cannot be found: \" + ncdfe.getMessage();", "+                        + classname + \" cannot be found: \" + ncdfe.getMessage()", "+                        + \"\\n using the classloader \" + al;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb93b3d8c12fc0e870a55e1d7fdadf22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "764ef4fd852696fd3e620583affdd3b439af4d14", "commitAfterChange": "28b68ab7d0689dbc35dbdf26d2308786549b8985", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                                    .addFilterSet(project.getGlobalFilterSet());", "+                                    .addFilterSet(getProject().getGlobalFilterSet());", "-                                                    getEncoding(), project);", "+                                                    getEncoding(), getProject());", "-                File dir = fs.getDir(project);", "+                File dir = fs.getDir(getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd27c9386edcee0b9fed392e8c0e09d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "ca86f16776d3ac0f57df0c8a2cde930ea1042b25", "commitAfterChange": "73d3298e62a626fe485cdff4909502598f44f765", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private void addUnicodeExtraFields(ZipEntry ze, boolean encodable,                                        ByteBuffer name)         throws IOException", "signatureAfterChange": "     private void addUnicodeExtraFields(ZipEntry ze, boolean encodable,                                        ByteBuffer name)         throws IOException", "diff": ["-                                                       name.limit()));", "+                                                       name.limit()", "+                                                       - name.position()));", "-                                                              commentB.limit())", "+                                                              commentB.limit()", "+                                                              - commentB.position())"]}]}