{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56cdca2a03d1f605618f93c06b6e5103", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b37e878a14e0df591dd574a870712d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "fdade0537c4628290168a365b9a14d28c3e32b72", "commitAfterChange": "9af46a2ca05b7e2da738a1688ff679445f2c1a6e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 59, "signatureBeforeChange": "     private void addVmExit(JUnitTest test, JUnitResultFormatter formatter,                            OutputStream out, final String message)", "signatureAfterChange": "     private void addVmExit(JUnitTest test, JUnitTaskMirror.JUnitResultFormatterMirror formatter,                            OutputStream out, final String message)", "diff": ["-    private void addVmExit(JUnitTest test, JUnitResultFormatter formatter,", "+    private void addVmExit(JUnitTest test, JUnitTaskMirror.JUnitResultFormatterMirror formatter,", "-        formatter.setOutput(out);", "-        formatter.startTestSuite(test);", "-", "-        //the trick to integrating test output to the formatter, is to", "-        //create a special test class that asserts an error", "-        //and tell the formatter that it raised.", "-        Test t = new Test() {", "-            public int countTestCases() { return 1; }", "-            public void run(TestResult r) {", "-                throw new AssertionFailedError(message);", "-            }", "-        };", "-        formatter.startTest(t);", "-        formatter.addError(t, new AssertionFailedError(message));", "-        formatter.endTestSuite(test);", "+        delegate.addVmExit(test, formatter, out, message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c75ad99edce5c15a08167d475cb5670", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "2f7478b5c436752b32f6f6ad1e3eefefd9018149", "commitAfterChange": "388c987ddcb15cebcf5d2afb2ade3c5ec636ca9a", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "      private void logTimeout(FormatterElement[] feArray, JUnitTest test)", "signatureAfterChange": "      private void logTimeout(FormatterElement[] feArray, JUnitTest test)", "diff": ["-                    formatter.setOutput(out);", "-                    formatter.startTestSuite(test);", "-                    test.setCounts(0, 0, 1);", "-                    Test t = new Test() {", "-                        public int countTestCases() { return 0; }", "-                        public void run(TestResult r) {", "-                            throw new AssertionFailedError(\"Timeout occurred\");", "-                        }", "-                    };", "-                    formatter.startTest(t);", "-                    formatter", "-                        .addError(t,", "-                                  new AssertionFailedError(\"Timeout occurred\"));", "-", "-                    formatter.endTestSuite(test);", "+                    addTimeout(test, formatter, out);", "+        if (summary) {", "+            SummaryJUnitResultFormatter f = new SummaryJUnitResultFormatter();", "+            f.setWithOutAndErr(\"withoutanderr\".equalsIgnoreCase(summaryValue));", "+            addTimeout(test, f, getDefaultOutput());", "+        }", "+    }"]}]}