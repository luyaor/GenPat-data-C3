{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af2c8f631f3ab674a3cbaac17dd06168", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7602828e45c0e71e2ec2667652890178", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void initialize()         throws Exception", "signatureAfterChange": "     public void initialize()         throws Exception", "diff": ["-        //setup default properties", "+        // setup default properties", "-        //create all the components", "-        createComponents();", "-", "-        //setup the components", "+        // setup the root components", "+        // locate the components we need", "+        // setup a service manager that creates the project services", "+        final ServiceManager projServiceManager", "+            = (ServiceManager)createService( ServiceManager.class, PREFIX + \"service.InstantiatingServiceManager\" );", "+        setupObject( projServiceManager, m_serviceManager, m_parameters );", "+", "+        // setup a service manager to be used by workspaces", "+        m_workspaceServiceManager = new MultiSourceServiceManager();", "+        m_workspaceServiceManager.add( projServiceManager );", "+        m_workspaceServiceManager.add( m_serviceManager );", "+", "+        // setup"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3ea32b5a3e0eb0a5898e0d84a3e75a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void setMagicProperties() throws AntException", "signatureAfterChange": "     protected void setMagicProperties() throws AntException", "diff": ["-        setDataValue(MagicProperties.ANT_HOME, antHomeString, false);", "+        DataValue antHomeValue", "+            = new DataValue(antHomeString, DataValue.PRIORITY_USER);", "+        dataService.setDataValue(MagicProperties.ANT_HOME, antHomeValue,", "+            false);", "-            setDataValue(MagicProperties.ANT_FILE, projectSource.getFile(),", "-                true);", "+            DataValue antFileValue = new DataValue(projectSource.getFile(),", "+                DataValue.PRIORITY_USER);", "+            dataService.setDataValue(MagicProperties.ANT_FILE,", "+                antFileValue, true);", "-            setDataValue(MagicProperties.ANT_PROJECT_NAME, projectName, true);", "+            dataService.setDataValue(MagicProperties.ANT_PROJECT_NAME,", "+                new DataValue(projectName, DataValue.PRIORITY_USER),", "+                true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5dbd025930eaf5e02956d872a2115b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipFileSet.java", "commitBeforeChange": "7e0d189209782f4a4af5e50fde82d8d4fc47c15e", "commitAfterChange": "6398d34e493561c4b3c2a9e43ac21f7089dcd558", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected AbstractFileSet getRef(Project p)", "signatureAfterChange": "     protected AbstractFileSet getRef(Project p)", "diff": ["-           return (new ZipFileSet((FileSet) o));", "+            ZipFileSet zfs = new ZipFileSet((FileSet) o);", "+            zfs.setPrefix(prefix);", "+            zfs.setFullpath(fullpath);", "+            zfs.fileModeHasBeenSet = fileModeHasBeenSet;", "+            zfs.fileMode = fileMode;", "+            zfs.dirModeHasBeenSet = dirModeHasBeenSet;", "+            zfs.dirMode = dirMode;", "+            return zfs;"]}]}