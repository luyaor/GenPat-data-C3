{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "874e413e2a6a8dd51a28045bffd45317", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197efc320ef0776e86d5db4e0e5d30ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "686cb8ffd17e68ce3595194f7b623d78b16f7251", "commitAfterChange": "8d3464f4e6fe2268c6fccbe4f9d651c8222496cd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-    public void execute() {", "+    public void execute() throws BuildException {", "-            String [] files =null;", "+            String[] files = null;", "-            if (srcDir != null){", "-              ds = super.getDirectoryScanner(srcDir);", "+            if (srcDir != null) {", "+                ds = super.getDirectoryScanner(srcDir);", "-              files = ds.getIncludedFiles();", "-              for (int i = 0; i < files.length; i++){", "-                filesList.add(new File(srcDir.getAbsolutePath() + File.separator + files[i]));", "-              }", "+                files = ds.getIncludedFiles();", "+                for (int i = 0; i < files.length; i++) {", "+                    filesList.add(new File(srcDir.getAbsolutePath() + File.separator + files[i]));", "+                }", "-                files =ds.getIncludedFiles();", "+                files = ds.getIncludedFiles();", "-                for (int j = 0; j < files.length; j++){", "-                  filesList.add(new File(fromDir.getAbsolutePath() + File.separator + files[j]));", "+                for (int j = 0; j < files.length; j++) {", "+                    filesList.add(new File(fromDir.getAbsolutePath() + File.separator + files[j]));", "-            if (!overwrite){", "-             // remove any files that shouldn't be overwritten.", "-             ArrayList filesToRemove = new ArrayList();", "-             for(Iterator i = filesList.iterator();i.hasNext();){", "-               File f = (File)i.next();", "-               File new_file = new File(destDir.getAbsolutePath() + File.separator + f.getName());", "-               if (new_file.exists()){", "-                 filesToRemove.add(f);", "-               }", "-             }", "-             filesList.removeAll(filesToRemove);", "+            if (!overwrite) {", "+                // remove any files that shouldn't be overwritten.", "+                ArrayList filesToRemove = new ArrayList();", "+                for (Iterator i = filesList.iterator(); i.hasNext();) {", "+                    File f = (File) i.next();", "+                    File new_file = new File(destDir.getAbsolutePath() + File.separator + f.getName());", "+                    if (new_file.exists()) {", "+                        filesToRemove.add(f);", "+                    }", "+                }", "+                filesList.removeAll(filesToRemove);", "-            for (Iterator i = filesList.iterator();i.hasNext();){", "-              File file = (File)i.next();", "+            for (Iterator i = filesList.iterator(); i.hasNext();) {", "+                File file = (File) i.next();", "-              processFile(file);", "-              if (garbage_collect) {", "-                  System.gc();", "-              }", "+                processFile(file);", "+                if (garbage_collect) {", "+                    System.gc();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1abe8150933b30a6e222d4b4f87afe0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "26839fdb3234b8344a313d1bee71aff8494b3842", "commitAfterChange": "541157c5de95bf1cb2ff9f47b8aadac0b3ee98e1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            DirectoryScanner ds = null;", "-            String[] files = null;", "-            ArrayList filesList = new ArrayList();", "+            File dest = destDir != null ? destDir : srcDir;", "+", "+            int writeCount = 0;", "+", "+            // build mapper", "+            final FileNameMapper mapper;", "+            if (mapperElement==null){", "+                mapper = new IdentityMapper();", "+            } else {", "+                mapper = mapperElement.getImplementation();", "+            }", "-                ds = super.getDirectoryScanner(srcDir);", "+                final DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "-                files = ds.getIncludedFiles();", "-                for (int i = 0; i < files.length; i++) {", "-                    filesList.add(new File(srcDir, files[i]));", "-                }", "+                final String[] files = ds.getIncludedFiles();", "+                writeCount += processDir(srcDir, files, dest, mapper);", "-                FileSet fs = (FileSet) filesets.elementAt(i);", "-                ds = fs.getDirectoryScanner(getProject());", "-                files = ds.getIncludedFiles();", "-                File fromDir = fs.getDir(getProject());", "-                for (int j = 0; j < files.length; j++) {", "-                    filesList.add(new File(fromDir, files[j]));", "-                }", "+                final FileSet fs = (FileSet) filesets.elementAt(i);", "+                final DirectoryScanner ds =", "+                    fs.getDirectoryScanner(getProject());", "+                final String[] files = ds.getIncludedFiles();", "+                final File fromDir = fs.getDir(getProject());", "+                writeCount += processDir(fromDir, files, dest, mapper);", "-            if (!overwrite) {", "-                // remove any files that shouldn't be overwritten.", "-                ArrayList filesToRemove = new ArrayList();", "-                for (Iterator i = filesList.iterator(); i.hasNext();) {", "-                    File f = (File) i.next();", "-                    File newFile = new File(destDir, f.getName());", "-                    if (newFile.exists()) {", "-                        filesToRemove.add(f);", "-                    }", "-                }", "-                filesList.removeAll(filesToRemove);", "-            }", "-            // iterator through all the files and process them.", "-            for (Iterator i = filesList.iterator(); i.hasNext();) {", "-                File file = (File) i.next();", "-                processFile(file);", "-                if (garbage_collect) {", "-                    System.gc();", "-                }", "+            if (writeCount>0){", "+                log(\"Processed \" + writeCount +", "+                    (writeCount == 1 ? \" image.\" : \" images.\"));", "+"]}]}