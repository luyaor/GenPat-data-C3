{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9da6585f4c471174f77699d0355563e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "114716703e5fdcf308e6ed593e515860", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "c32873b51961cb99f47b4ae6da2922b7b46a6f89", "commitAfterChange": "c437e0d2a0833a49114fa69e746b5f5ee9ed7d8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"replace token must not be null\");", "+            throw new BuildException(\"replace token must not be null\", location);", "-            throw new BuildException(\"Either the file or the dir attribute must be specified\");", "+            throw new BuildException(\"Either the file or the dir attribute must be specified\", location);", "-        log(\"Replacing \" + token + \" --> \" + value);", "+        log(\"Replacing \" + token.getText() + \" --> \" + value.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cba23e70c3dc314ac24252e402676a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/testing/Funtest.java", "commitBeforeChange": "f47e4095c872219cfb2054556307c5c12cbb2b81", "commitAfterChange": "393f5d34fa69854fd4eaa2126426b8a218654f5e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void processExceptions()", "signatureAfterChange": "     protected void processExceptions()", "diff": ["-                log(\"Application Exception:\" + applicationException.toString(),", "-                        applicationException,", "-                        Project.MSG_WARN);", "+                ignoringThrowable(APPLICATION_EXCEPTION, applicationException);", "-                log(\"teardown exception\" + teardownException.toString(),", "-                        teardownException,", "-                        Project.MSG_WARN);", "+                ignoringThrowable(TEARDOWN_EXCEPTION, teardownException);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841c4e24cb1b43092bb6a2c4e2e6db51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "12e8a63e2f797fdfb28e9f30761669465cb033ee", "commitAfterChange": "f9121ee81e58e6cb4369a4e043e0a88cbfe3e503", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                throw new BuildException(\"srcdir attribute must be set\", ", "-                    location);", "+                throw new BuildException(\"srcdir attribute must be set\",", "+                                         getLocation());", "-                throw new BuildException(\"srcdir attribute must be non-empty\", ", "-                    location);", "+                throw new BuildException(\"srcdir attribute must be non-empty\",", "+                                         getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0706925bbcc71de78c539b09d2074e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/script/org/apache/ant/antlib/script/ScriptBase.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ScriptException", "diff": ["-    public void execute() throws ExecutionException {", "+    public void execute() throws ScriptException {", "-            ", "+", "-            ", "+", "-            ", "+", "-            ", "+", "-                if (te instanceof ExecutionException) {", "-                    throw (ExecutionException) te;", "+                if (te instanceof ScriptException) {", "+                    throw (ScriptException) te;", "-            throw new ExecutionException(t);", "+            throw new ScriptException(t);"]}]}