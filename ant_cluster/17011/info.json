{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1b5a03bfd624343f28ccf82d24daab3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "391bb0d57c5dea689532f8874ef90d3c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ParallelTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testDemux()", "signatureAfterChange": "     @Test     public void testDemux()", "diff": ["+    @Test", "-        Project p = getProject();", "+        Project p = buildRule.getProject();", "-        PrintStream out = System.out;", "-        PrintStream err = System.err;", "-        System.setOut(new PrintStream(new DemuxOutputStream(p, false)));", "-        System.setErr(new PrintStream(new DemuxOutputStream(p, true)));", "+        synchronized (System.out) {", "+            PrintStream out = System.out;", "+            PrintStream err = System.err;", "+            System.setOut(new PrintStream(new DemuxOutputStream(p, false)));", "+            System.setErr(new PrintStream(new DemuxOutputStream(p, true)));", "-        try {", "-            p.executeTarget(\"testDemux\");", "-        } finally {", "-            System.setOut(out);", "-            System.setErr(err);", "+            try {", "+                p.executeTarget(\"testDemux\");", "+            } finally {", "+                System.setOut(out);", "+                System.setErr(err);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "910d09102bdc9cac173d04727981c6e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InitializeClassTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testAll() throws IOException", "signatureAfterChange": "      @Test     public void testAll() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"forked\");", "-        PrintStream ps = System.out;", "-        PrintStream newps = new PrintStream(new FileOutputStream(f2));", "-        System.setOut(newps);", "-        project.executeTarget(\"unforked\");", "-        System.setOut(ps);", "-        newps.close();", "-        assertTrue(\"Forked - non-forked mismatch\", FILE_UTILS.contentEquals(f1, f2));", "+        buildRule.executeTarget(\"forked\");", "+        synchronized (System.out) {", "+            PrintStream ps = System.out;", "+            PrintStream newps = new PrintStream(new FileOutputStream(f2));", "+             try {", "+                 System.setOut(newps);", "+                 buildRule.getProject().executeTarget(\"unforked\");", "+             } finally {", "+                 System.setOut(ps);", "+", "+                 newps.close();", "+             }", "+        }", "+        assertEquals(FileUtilities.getFileContents(f1), FileUtilities.getFileContents(f2));"]}]}