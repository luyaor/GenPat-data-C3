{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86d5921f4252632dd3ec07f03222b879", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df5ca20879eebe88c3dd57726a0693f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "78f58cb78a19e32ae0e77a76aeb578ff3f79c792", "commitAfterChange": "6a02f448306dee5d4d63dbb092c365469420129d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "diff": ["-            ProjectHelper2 parser = new ProjectHelper2();", "+            ProjectHelper parser = null;", "+            Object p =", "+                project.getReference(ProjectHelper.PROJECTHELPER_REFERENCE);", "+            if (p instanceof ProjectHelper) {", "+                parser = (ProjectHelper) p;", "+                if (!parser.canParseAntlibDescriptor(antlibUrl)) {", "+                    project.log(\"ProjectHelper class \" + p.getClass().getName()", "+                                + \" can't parse Antlib descriptors, falling back\"", "+                                + \" to ProjectHelper2.\");", "+                    parser = null;", "+                }", "+            }", "+            if (parser == null) {", "+                parser = new ProjectHelper2();", "+            }", "-                parser.parseUnknownElement(project, antlibUrl);", "+                parser.parseAntlibDescriptor(project, antlibUrl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a97a1711a533f403d440c238a3296943", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "632c01d0422cc1bcea7a7c672a63621ce5de5fa3", "commitAfterChange": "89ddfa3d6c328407d120b33bad3705b3f54f4d7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "diff": ["+        URLResource antlibResource = new URLResource(antlibUrl);", "-                if (!parser.canParseAntlibDescriptor(antlibUrl)) {", "-                    project.log(\"ProjectHelper class \" + p.getClass().getName()", "-                                + \" can't parse Antlib descriptors, falling back\"", "-                                + \" to ProjectHelper2.\");", "+                if (!parser.canParseAntlibDescriptor(antlibResource)) {", "-                parser = new ProjectHelper2();", "+                ProjectHelperRepository helperRepository =", "+                    ProjectHelperRepository.getInstance();", "+                parser = helperRepository.getProjectHelperForAntlib(antlibResource);", "-                parser.parseAntlibDescriptor(project, antlibUrl);", "+                parser.parseAntlibDescriptor(project, antlibResource);"]}]}