{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e72b78f46998d427d65911ab61bc32db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c2e0007abb2e1a1310c4e190c590807", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Taskdef.java", "commitBeforeChange": "91f7d992dc20124771b9a9709df15b4295c825ef", "commitAfterChange": "68f6b984a991fd9cbf20bdfe6c1abc5b1a410588", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "     protected void addDefinition(String name, Class c)", "diff": ["-", "-    public void execute() throws BuildException {", "-        if (name==null || value==null ) {", "-            String msg = \"name or classname attributes of taskdef element \"", "-                + \"are undefined\";", "-            throw new BuildException(msg);", "-        }", "-        try {", "-            ClassLoader loader = null;", "-            if (classpath != null) {", "-                AntClassLoader al = new AntClassLoader(project, classpath,", "-                                                       false);", "-                // need to load Task via system classloader or the new", "-                // task we want to define will never be a Task but always", "-                // be wrapped into a TaskAdapter.", "-                al.addSystemPackageRoot(\"org.apache.tools.ant\");", "-                loader = al;", "-            } else {", "-                loader = this.getClass().getClassLoader();", "-            }", "-", "-            Class taskClass = null;", "-            if (loader != null) {", "-                taskClass = loader.loadClass(value);", "-                AntClassLoader.initializeClass(taskClass);", "-            } else {", "-                taskClass = Class.forName(value);", "-            }", "-            project.addTaskDefinition(name, taskClass);", "-        } catch (ClassNotFoundException cnfe) {", "-            String msg = \"taskdef class \" + value +", "-                \" cannot be found\";", "-            throw new BuildException(msg, cnfe, location);", "-        } catch (NoClassDefFoundError ncdfe) {", "-            String msg = \"taskdef class \" + value +", "-                \" cannot be found\";", "-            throw new BuildException(msg, ncdfe, location);", "-        }", "-    }", "+public class Taskdef extends Definer {", "+    protected void addDefinition(String name, Class c) {", "+        project.addTaskDefinition(name, c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5184585bf364ed8b8390a32746a57c78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 33, "signatureBeforeChange": "  \tprivate Class loadClass(String className) \t    throws SAXParseException", "signatureAfterChange": "          private Class loadClass(String className)             throws SAXParseException", "diff": ["-", "-\tprivate Class loadClass(String className)", "-\t    throws SAXParseException {", "-\t    try {", "-\t\t//load the named class", "-\t\tClass cls;", "-\t\tif(classloader==null) {", "-\t\t    cls=Class.forName(className);", "-\t\t}", "-\t\telse {", "-\t\t    cls=classloader.loadClass(className);", "-\t\t}", "-\t\treturn cls;", "-\t    }", "-\t    catch (ClassNotFoundException cnfe) {", "-\t\tString msg = \"Class \" + className +", "-\t\t    \" cannot be found\";", "-\t\tthrow new SAXParseException(msg, locator, cnfe);", "-\t    }", "-\t    catch (NoClassDefFoundError ncdfe) {", "-\t\tString msg = \"Class \" + className +", "-\t\t    \" cannot be found\";", "-\t\tthrow new SAXParseException(msg, locator);", "-\t    }", "-\t}", "+        private Class loadClass(String className)", "+            throws SAXParseException {", "+            String msg = null;", "+            try {", "+                //load the named class", "+                Class cls;", "+                if(classloader==null) {", "+                    cls=Class.forName(className);", "+                }", "+                else {", "+                    cls=classloader.loadClass(className);", "+                }", "+                return cls;", "+            }", "+            catch (ClassNotFoundException cnfe) {", "+                msg = \"Class \" + className + \" cannot be found\";", "+                if (onerror.getIndex() == FAIL)", "+                    throw new SAXParseException(msg, locator, cnfe);", "+            }", "+            catch (NoClassDefFoundError ncdfe) {", "+                msg = \"Class \" + className + \" cannot be loaded\";", "+                if (onerror.getIndex() == FAIL)", "+                    throw new SAXParseException(msg, locator);", "+            }", "+", "+            if (onerror.getIndex() == REPORT) {", "+                project.log(msg, project.MSG_WARN);", "+            }", "+            else {", "+                project.log(msg, project.MSG_DEBUG);", "+            }", "+            return null;"]}]}