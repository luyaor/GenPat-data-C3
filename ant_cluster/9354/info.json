{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b3021fbded78a59ded6fabf369bfddb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f6df996b095377da0c8cc32be547c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "5e898465ac1ab3d90fdc26dc34a2b87a2ea9be35", "commitAfterChange": "c5faebbd854cf6f4363402c2cd2a54749b4eeb61", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int executeJava() throws BuildException", "signatureAfterChange": "     public int executeJava() throws BuildException", "diff": ["+        String classname = cmdl.getClassname();", "-            StringBuffer b = new StringBuffer();", "-            b.append(\"java \");", "-            if (classpath != null) {", "-                b.append(\"-classpath \");", "-                b.append(classpath.toString());", "-                b.append(\" \");", "+            return run(cmdl.getCommandline());", "+        } else {", "+            if (cmdl.getVmCommand().size() > 1) {", "+                log(\"JVM args ignored when same JVM is used.\", Project.MSG_WARN);", "-            if (jvmargs != null) {", "-                b.append(jvmargs);", "-                b.append(\" \");", "-            }", "-            b.append(classname);", "-            if (args != null) {", "-                b.append(\" \");", "-                b.append(args);", "+            if (dir != null) {", "+                log(\"Working directory ignored when same JVM is used.\", Project.MSG_WARN);", "-            return run(b.toString());", "-        } else {", "-            Vector argList = tokenize(args);", "-            if (jvmargs != null) {", "-                log(\"JVM args and classpath ignored when same JVM is used.\", Project.MSG_VERBOSE);", "-            }", "-        ", "-            log(\"Java args: \" + argList.toString(), Project.MSG_VERBOSE);", "-            run(classname, argList);", "+            run(cmdl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da5eeec78ba9a15c22261268b9c3157b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "926fcdcbeb003e509c0a1d03208f0eab2bab6813", "commitAfterChange": "5cc29f61e6a8fbcf8cb8f0fe2f848955c41f486a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 38, "signatureBeforeChange": "          public String[] mapFileName(String name)", "signatureAfterChange": "     public boolean isValidRmiRemote(String classname)", "diff": ["+    public boolean isValidRmiRemote(String classname) {", "+        try {", "+            Class testClass = loader.loadClass(classname);", "+            // One cannot RMIC an interface", "+            if (testClass.isInterface()) {", "+                return false;", "+            return isValidRmiRemote(testClass);", "+        } catch (ClassNotFoundException e) {", "+            log(\"Unable to verify class \" + classname + ", "+                \". It could not be found.\", Project.MSG_WARN);", "+        } catch (NoClassDefFoundError e) {", "+            log(\"Unable to verify class \" + classname + ", "+                \". It is not defined.\", Project.MSG_WARN);", "+        } catch (Throwable t) {", "+            log(\"Unable to verify class \" + classname + ", "+                \". Loading caused Exception: \" +", "+                t.getMessage(), Project.MSG_WARN);", "+        // we only get here if an exception has been thrown", "+        return false;", "-", "-        public String[] mapFileName(String name) {", "-            String[] stubName = stubMapper.mapFileName(name);", "-", "-            if (stubName == null || name.endsWith(\"_Stub.class\") ", "-                || name.endsWith(\"_Skel.class\")) {", "-                // Not a .class file", "-                return null;", "-            }", "-", "-            String classname = name.replace(File.separatorChar, '.');", "-            classname = classname.substring(0, classname.indexOf(\".class\"));", "-            if (verify) {", "-                try {", "-                    Class testClass = loader.loadClass(classname);", "-                    // One cannot RMIC an interface", "-                    if (testClass.isInterface() || ", "-                        !isValidRmiRemote(testClass)) {", "-                        return null;", "-                    }", "-                } catch (ClassNotFoundException e) {", "-                    log(\"Unable to verify class \" + classname + ", "-                        \". It could not be found.\", Project.MSG_WARN);", "-                } catch (NoClassDefFoundError e) {", "-                    log(\"Unable to verify class \" + classname + ", "-                        \". It is not defined.\", Project.MSG_WARN);", "-                }", "-            }", "-", "-            if (skelMapper != null) {", "-                return new String[] {", "-                    stubName[0], ", "-                    skelMapper.mapFileName(name)[0]", "-                };", "-            } else {", "-                return stubName;", "-            }", "-        }"]}]}