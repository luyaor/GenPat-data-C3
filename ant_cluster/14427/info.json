{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d841163a3f06901ef392d98e3294717", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51153ce8c82ec0015f4df90a6e331668", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "4c4ad3483de60ef46e02f3b4f217e78422ac5ab4", "commitAfterChange": "4068d7cd9986a3f05760e3856c003bc9b8a6a8dd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void initSubProject(ComponentHelper helper)", "signatureAfterChange": "     public void initSubProject(ComponentHelper helper)", "diff": ["-        AntTypeTable typeTable = helper.antTypeTable;", "-        for (Iterator i = typeTable.values().iterator(); i.hasNext();) {", "-            AntTypeDefinition def = (AntTypeDefinition) i.next();", "-            antTypeTable.put(def.getName(), def);", "+        AntTypeTable typeTable = (AntTypeTable) helper.antTypeTable.clone();", "+        synchronized (antTypeTable) { ", "+            for (Iterator i = typeTable.values().iterator(); i.hasNext();) {", "+                AntTypeDefinition def = (AntTypeDefinition) i.next();", "+                antTypeTable.put(def.getName(), def);", "+            }", "-        for (Iterator i = helper.checkedNamespaces.iterator(); i.hasNext();) {", "-            checkedNamespaces.add(i.next());", "+        Set inheritedCheckedNamespace = helper.getCheckedNamespace();", "+        synchronized (this) {", "+            checkedNamespaces.addAll(inheritedCheckedNamespace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614f44e54ff76b9330fe4de8e41ebc83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void initSubProject(ComponentHelper helper)", "signatureAfterChange": "     public void initSubProject(ComponentHelper helper)", "diff": ["-        AntTypeTable typeTable = (AntTypeTable) helper.antTypeTable.clone();", "-        synchronized (antTypeTable) { ", "-            for (Iterator i = typeTable.values().iterator(); i.hasNext();) {", "-                AntTypeDefinition def = (AntTypeDefinition) i.next();", "+        @SuppressWarnings(\"unchecked\")", "+        final Hashtable<String, AntTypeDefinition> typeTable = (Hashtable<String, AntTypeDefinition>) helper.antTypeTable.clone();", "+        synchronized (antTypeTable) {", "+            for (AntTypeDefinition def : typeTable.values()) {", "-        Set inheritedCheckedNamespace = helper.getCheckedNamespace();", "+        Set<String> inheritedCheckedNamespace = helper.getCheckedNamespace();", "-        Map inheritedRestrictedDef = helper.getRestrictedDefinition();", "+        Map<String, List<AntTypeDefinition>> inheritedRestrictedDef = helper.getRestrictedDefinition();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7465c4c70636c55c4cba8b950246a827", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "4c4ad3483de60ef46e02f3b4f217e78422ac5ab4", "commitAfterChange": "4068d7cd9986a3f05760e3856c003bc9b8a6a8dd", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public String getElementName(Object o, boolean brief)", "signatureAfterChange": "     public String getElementName(Object o, boolean brief)", "diff": ["-        for (Iterator i = antTypeTable.values().iterator(); i.hasNext();) {", "-            AntTypeDefinition def = (AntTypeDefinition) i.next();", "-            if (elementClassname.equals(def.getClassName())", "-                    && (elementClass == def.getExposedClass(project))) {", "-                String name = def.getName();", "-                return brief ? name : \"The <\" + name + \"> type\";", "+        synchronized (antTypeTable) {", "+            for (Iterator i = antTypeTable.values().iterator(); i.hasNext();) {", "+                AntTypeDefinition def = (AntTypeDefinition) i.next();", "+                if (elementClassname.equals(def.getClassName())", "+                        && (elementClass == def.getExposedClass(project))) {", "+                    String name = def.getName();", "+                    return brief ? name : \"The <\" + name + \"> type\";", "+                }"]}]}