{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "930d0b90c2bc2453d94d6ffb7770930b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "361b05a347b6bbb6cbd0e212af71edca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "932dee230660188053b053ffa0c4f310e90bb010", "commitAfterChange": "41607341ae5329086cd459c53714ae14a59a4b3e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public File getSource()", "signatureAfterChange": "         public File getSource()", "diff": ["-                    File[] files = source.listFiles() ; ", "-                    int numfiles = files.length ;", "+                    String[] entries = source.list() ;", "+                    Vector files = new Vector() ;", "+                    for (int i=0 ; i < entries.length ; i++) {", "+                        File f = new File(source, entries[i]) ;", "+                        if (f.isFile()) {", "+                            files.addElement(f) ;", "+                        }", "+                    }", "+                    if ( files.size() < 1 ) {", "+                        throw new BuildException(\"No files found in directory \" + source);", "+                    }", "+                    int numfiles = files.size() ;", "-                    int i = rn.nextInt(numfiles) ;", "+                    int x = rn.nextInt(numfiles) ;", "-                    this.source = files[i] ;", "+                    this.source = (File)files.elementAt(x) ;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65d61828db44628e34947a644e3dc2f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ExpandProperties.java", "commitBeforeChange": "4b329724cccfa43eeb36cdbd81184bc7b1afa906", "commitAfterChange": "314d4d7ba7942ae0427800f340ff045f9f0b084e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-                queuedData = project.replaceProperties(queuedData);", "+                GetProperty getProperty;", "+                if (propertySet == null) {", "+                    getProperty = PropertyHelper.getPropertyHelper(project);", "+                } else {", "+                    final Properties props = propertySet.getProperties();", "+                    getProperty = new GetProperty() {", "+                        ", "+                        public Object getProperty(String name) {", "+                            return props.getProperty(name);", "+                        }", "+                    };", "+                }", "+                queuedData = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)", "+                        .getExpanders(), getProperty).parseProperties(queuedData).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc22fbc8272ac9c0015cac7868bfd32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "b4c9277617ab9ad1d56a9e1f87d5fdeffa07758b", "commitAfterChange": "826cc88ca90d863d5ad09f4e11cde87b28aecb53", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": "     public void execute()              throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["+        validate();", "+        long outputTimestamp;", "+        if(outputFile.exists()) {", "+            outputTimestamp = outputFile.lastModified();", "+        } else {", "+            outputTimestamp = 0;", "+        }", "+        int filesOutOfDate=0;", "+        File base=scanner.getBasedir();", "-            String targetFile = dependencies[i];", "-            targetFile = baseDir + File.separator + targetFile;", "-            command.addArgument(targetFile);", "+            File targetFile = new File(base,dependencies[i]);", "+            command.addArgument(targetFile.toString());", "+            if(targetFile.lastModified()>outputTimestamp) {", "+                filesOutOfDate++;", "+                log(\"Source file \"+targetFile.toString()+\" is out of date\");", "+            }", "-        command.runCommand();", "+        if(filesOutOfDate>0) {", "+            command.runCommand();", "+        }"]}]}