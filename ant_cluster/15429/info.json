{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a7b53d4afffebc607e18030ace7165e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "391316f9fc13f131d5e15e8c49582d7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "af97c64cb1b6bea8dd0d7aa333a51c7613cbe5e9", "commitAfterChange": "3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "       public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "           public void parse(Project project, Object source) throws BuildException", "diff": ["-", "-    public void parse(Project project, Object source) throws BuildException {", "-        // Hook our internal tasks. XXX refactor ", "-        AntXmlContext context=new AntXmlContext(this);", "-        AntXmlContext.resetImports();", "+", "+    public void parse(Project project, Object source) throws BuildException {", "+        hookSpecialTasks(project);", "+        AntXmlContext context=new AntXmlContext(project, this);", "+", "+", "+        // XXX How to deal with description ??"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ada8fd3ae9d826c93727327f83a6ad8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/RegexpPatternMapper.java", "commitBeforeChange": "29378f767f420b3a6a92e1f674b19c49ec3bd633", "commitAfterChange": "4c5c8d89bea267d0c11f945578cbd989668cdfcf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public RegexpPatternMapper() throws BuildException", "signatureAfterChange": "      public RegexpPatternMapper() throws BuildException", "diff": ["-        try {", "-            regexpMatcherClass = Class.forName(\"org.apache.tools.ant.util.regexp.JakartaOroMatcher\");", "-", "-            if (regexpMatcherClass == null) {", "-                regexpMatcherClass = Class.forName(\"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\");", "-                 ", "-            }", "-        } catch (ClassNotFoundException ce) {", "-        } catch (NoClassDefFoundError ne) {", "-        }", "-", "-        if (regexpMatcherClass == null) {", "-            throw new BuildException(\"No supported regular expression matcher found\");", "-        }", "+        reg = (new RegexpMatcherFactory()).newRegexpMatcher();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aede08c1c657aa560715d90f1f41edd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void init()         throws Exception", "signatureAfterChange": "      public void init()         throws Exception", "diff": ["-        m_taskletEngine = createTaskletEngine();", "-        m_taskletEngine.setLogger( m_logger );", "-", "+        setupTaskletEngine();", "+", "-        m_componentManager.put( \"org.apache.ant.tasklet.engine.TaskletRegistry\", ", "-                                m_taskletRegistry );", "-", "-        m_componentManager.put( \"org.apache.ant.convert.ConverterRegistry\", ", "-                                m_converterRegistry );", "-", "-        m_componentManager.put( \"org.apache.avalon.camelot.Deployer\", m_deployer );", "-       ", "-        m_taskletEngine.compose( m_componentManager );", "-        ", "-        if( m_taskletEngine instanceof Initializable )", "-        {", "-            ((Initializable)m_taskletEngine).init();", "-        }", "+        m_componentManager.put( \"org.apache.ant.tasklet.engine.TaskletEngine\", m_taskletEngine );"]}]}