{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "426b2aa7abc5b981fb8b6dbdf9d01dcc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3206bcd24aca805871cbd58c0f4f02a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private File findTypeLib( final String libraryName )         throws Exception", "signatureAfterChange": "      private File findTypeLib( final String libraryName )         throws Exception", "diff": ["-        final String home = m_parameters.getParameter( \"myrmidon.home\" );", "-        final File homeDir = new File( home + File.separatorChar + \"ext\" );", "-", "-        final File library = new File( homeDir, name );", "-", "-        if( library.exists() )", "+        final File[] extPath = (File[])m_context.get( \"myrmidon.antlib.path\" );", "+        for( int i = 0; i < extPath.length; i++ )", "-            if( !library.canRead() )", "+            final File extDir = extPath[ i ];", "+            final File library = new File( extDir, name );", "+", "+            if( library.exists() )", "-                final String message = REZ.getString( \"no-read.error\", library );", "-                throw new TaskException( message );", "-            }", "-            else", "-            {", "-                return library;", "+                if( !library.canRead() )", "+                {", "+                    final String message = REZ.getString( \"no-read.error\", library );", "+                    throw new TaskException( message );", "+                }", "+                else", "+                {", "+                    return library;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5159ac06a33b69cfbd3f55ced23ab3d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectBuilder.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void buildTopLevelProject( final DefaultProject project,                                           final Configuration configuration )         throws AntException", "signatureAfterChange": "     protected void buildTopLevelProject( final DefaultProject project,                                          final Configuration configuration )         throws AntException", "diff": ["-    protected void buildTopLevelProject( final DefaultProject project, ", "+    protected void buildTopLevelProject( final DefaultProject project,", "-        final Iterator elements = configuration.getChildren();", "+        final Configuration[] children = configuration.getChildren();", "-        while( elements.hasNext() )", "+        for( int i = 0; i < children.length; i++ )", "-            final Configuration element = (Configuration)elements.next();", "+            final Configuration element = children[ i ];", "-                throw new AntException( \"Unknown top-level element \" + name + ", "+                throw new AntException( \"Unknown top-level element \" + name +"]}]}