{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01ec6bb0b528e6e74e81ce629454e3eb", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "259095bc8df2f60d40df95f7405f5157", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Vector getGroups(String argument)", "signatureAfterChange": "     public Vector getGroups(String input, int options)         throws BuildException", "diff": ["-    public Vector getGroups(String argument) {", "-        Matcher matcher = pattern.matcher(argument);", "+     */", "+    public Vector getGroups(String input, int options)", "+        throws BuildException", "+    {", "+        Pattern p = getCompiledPattern(options);", "+        Matcher matcher = p.matcher(input);", "-        for (int i=0; i<=matcher.groupCount(); i++) {", "+        int cnt = matcher.groupCount();", "+        for (int i=0; i<=cnt; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99bbaaf8e947225ce30cdc934beb9487", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaOroMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Vector getGroups(String argument)", "signatureAfterChange": "     public Vector getGroups(String input, int options)         throws BuildException", "diff": ["-    public Vector getGroups(String argument) {", "-        if (!matches(argument)) {", "+     */", "+    public Vector getGroups(String input, int options)", "+        throws BuildException", "+    {", "+        if (!matches(input, options)) {", "-        MatchResult mr = reg.getMatch();", "-        for (int i=0; i<mr.groups(); i++) {", "+        MatchResult mr = matcher.getMatch();", "+        int cnt = mr.groups();", "+        for (int i=0; i<cnt; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b843eb0ab07d8cabec86eda3980726c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaRegexpMatcher.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Vector getGroups(String argument)", "signatureAfterChange": "      public Vector getGroups(String input, int options)         throws BuildException", "diff": ["-    public Vector getGroups(String argument) {", "-        if (!matches(argument)) {", "+", "+    public Vector getGroups(String input, int options)", "+        throws BuildException", "+    {", "+        RE reg = getCompiledPattern(options);", "+        if (!matches(input, reg)) {", "-        for (int i=0; i<reg.getParenCount(); i++) {", "+        int cnt = reg.getParenCount();", "+        for (int i=0; i<cnt; i++) {"]}]}