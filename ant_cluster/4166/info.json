{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c90d4c227e89fae2192a25f8660e0d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06166bdd0035969cc622c5c7a6c39177", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FailureRecorder.java", "commitBeforeChange": "824c630ff9c0aeb0e01d9d08c1541d65dfb3fa99", "commitAfterChange": "f02f90064bbd969d79995103290b722750fe67ba", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r     private String getMethodName(Test test)", "signatureAfterChange": "\r         public TestInfos(Test test)", "diff": ["-\r", "-    private String getMethodName(Test test) {\r", "-        String methodName = test.toString();\r", "-        return methodName.substring(0, methodName.indexOf('('));\r", "-    }\r", "+         */\r", "+        public TestInfos(Test test) {\r", "+            className = test.getClass().getName();\r", "+            methodName = test.toString();\r", "+            methodName = methodName.substring(0, methodName.indexOf('('));\r", "+        }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f491be52243fc7a3fd9524a29a0ed5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "7b722732fbbdb511be32f94588d43f55b0b51f65", "commitAfterChange": "8d9a74fe25ffb24cb1b8a2c6a191ea3ac7c02b38", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private Parameters createDefaultParameters()", "signatureAfterChange": "     private Parameters createDefaultParameters()", "diff": ["-        defaults.setParameter( \"org.apache.ant.convert.engine.ConverterEngine\",", "-                               \"org.apache.ant.convert.engine.DefaultConverterEngine\" );", "-", "+        defaults.setParameter( MasterConverter.ROLE,", "+                               \"org.apache.myrmidon.components.converter.DefaultMasterConverter\" );", "+        defaults.setParameter( ConverterRegistry.ROLE,", "+                               \"org.apache.myrmidon.components.converter.DefaultConverterRegistry\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df75cf60527c3e1089577a2ab36c5ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "17a23996114ed76b9302506a8f0d34b8284dee5e", "commitAfterChange": "87f090a12ad700915e0728cc7836980f7793f36b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "signatureAfterChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "diff": ["+        //Add in child type manager so each frame can register different ", "+        //sets of tasks etc", "+        componentManager.put( TypeManager.ROLE, m_typeManager.createChildTypeManager() );", "+", "-", "-        //Per frame TypeManager here..."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "120fda3170ae94b32a1c9069ced1eeb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "a4867d61a6fe50eacac0367c792b98af2c0f2981", "commitAfterChange": "ffc467b126ec5f41e0d4114a7683f384885e4108", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object processNode (Node node, String prefix, Object container)", "signatureAfterChange": "     public Object processNode (Node node, String prefix, Object container)", "diff": ["+        } else if ((node.getNodeType() == Node.ELEMENT_NODE)", "+                   && (node.getChildNodes().getLength() == 0)) {", "+            nodeText = \"\";", "-            if (nodeText.trim().length() != 0) {", "-                addProperty(prefix, nodeText, id);", "-            }", "+            addProperty(prefix, nodeText, id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12548496486193349176dc843eff89a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+        sb.append(\", Skipped: \");", "+        sb.append(suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23dbd78540da173b0e78704daf7120cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "7cbf740ee0a373241ba348b5b11cd45a97b3335b", "commitAfterChange": "a38273bbf4ab678873feee1d1907efde74baa016", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["+            } else if (error != null) {", "+                project.log(error.toString(), Project.MSG_ERR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f79df27560cfa8753a82b84604866eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ProcessDestroyer.java", "commitBeforeChange": "a3eef60027b7a7142377c38988529bb152540c0f", "commitAfterChange": "198cca7aa68c3d73f41cea3d673fc07e0009c7b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public ProcessDestroyer()", "signatureAfterChange": "     public ProcessDestroyer()", "diff": ["-            // check to see if the method exists (support pre-JDK 1.3 VMs)", "-            //", "+            // check to see if the shutdown hook methods exists ", "+            // (support pre-JDK 1.3 VMs)", "-            Method addShutdownHook =", "+            addShutdownHookMethod =", "-", "-            // add the hook", "-            //", "-            Object[] args = {this};", "-            addShutdownHook.invoke(Runtime.getRuntime(), args);", "+            ", "+            removeShutdownHookMethod =", "+                Runtime.class.getMethod(\"removeShutdownHook\", paramTypes);", "+            // wait to add shutdown hook as needed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ef9e876cb94809f1fae55b28692bc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/ProjectNavigator.java", "commitBeforeChange": "fd1d5f90f45c12539eb883a525c1adc46edb0cbd", "commitAfterChange": "29cc4173599c1773da1f9ff68d80c53aeb1c4aa9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public void eventPosted(EventObject event)", "signatureAfterChange": "         public void eventPosted(EventObject event)", "diff": ["+                _tree.setSelectionModel(null);", "+                _tree.setSelectionModel(project.getTreeSelectionModel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3828b09fc2a30726a4f387972b964077", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Workspace createWorkspace( final Parameters parameters )         throws Exception", "signatureAfterChange": "     public Workspace createWorkspace( final Parameters parameters )         throws Exception", "diff": ["+        // TODO - don't do this; need some way to pass separate sets of defines and config", "+        // to the workspace", "+        parameters.setParameter( MYRMIDON_HOME, m_parameters.getParameter( MYRMIDON_HOME ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414faa80e5fa91cd114064f781154638", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestTest.java", "commitBeforeChange": "9eb4c3a9a00c2062a02a7f064df983625c93a9bd", "commitAfterChange": "49d1d98452a7d35d5bbec427a2f7ec1e7718cada", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       @Before     public void setUp()", "signatureAfterChange": "       @Before     public void setUp()", "diff": ["+        outDir = new File(buildRule.getProject().getProperty(\"output\"));", "+        expandedManifest = new File(outDir, \"manifests/META-INF/MANIFEST.MF\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ed69301585efb66754055a27603f0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DesirableFilter.java", "commitBeforeChange": "af81133ecce548bbb1203c410c2ebaf5d8c456da", "commitAfterChange": "9f4642716c6149bfbb2c4b3ebfaa07807cac3617", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean accept(File dir, String name)", "signatureAfterChange": "      public boolean accept(File dir, String name)", "diff": ["+", "+        // CVS merge autosaves.", "+        if (name.startsWith(\".#\")) {", "+            return false;", "+        }", "+", "+        // SCCS/CSSC/TeamWare:", "+        if (name.equals(\"SCCS\")) {", "+            return false;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb260745cc8835974b2e54884e7fd91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void addLibraryConverters(AntLibrary library)          throws ExecutionException", "signatureAfterChange": "     private void addLibraryConverters(AntLibrary library)          throws ExecutionException", "diff": ["-        if (!library.hasConverters()) {", "+        if (!library.hasConverters()", "+             || loadedConverters.contains(library.getLibraryId())) {", "+            loadedConverters.add(library.getLibraryId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e3160c8d794fd94c9419de31550793", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "96062837118b7dffe0a2a11f60008ac2645b281f", "commitAfterChange": "e562c7649147acd8c16b3f98add755180a8aea37", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected ExecuteStreamHandler createHandler() throws BuildException", "signatureAfterChange": "     protected ExecuteStreamHandler createHandler() throws BuildException", "diff": ["-                log(\"Output redirected to ByteArray\", Project.MSG_VERBOSE);", "+                log(\"Output redirected to property: \" + outputprop, ", "+                     Project.MSG_VERBOSE);", "+        if (logError) {", "+            errorStream = new LogOutputStream(this, Project.MSG_WARN);", "+        }", "+        ", "-                log(\"Error redirected to \" + out, Project.MSG_VERBOSE);", "+                log(\"Error redirected to \" + error, Project.MSG_VERBOSE);", "-            log(\"Error redirected to ByteArray\", Project.MSG_VERBOSE);", "+            log(\"Error redirected to property: \" + errorProperty, ", "+                Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca3eb12bea0d5545aa925242031a1ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "3c3d9033a4fa8a46e637e42234e68e046634d4b0", "commitAfterChange": "c5a6bd97758856408365e17d4625d486c9769486", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        fileCopyMap.clear();", "+        dirCopyMap.clear();", "+        completeDirMap.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ad4166af3693033cb251f749d51719", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/service/test/InstantiatingServiceManagerTestCase.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void setUp()         throws Exception", "signatureAfterChange": "     protected void setUp()         throws Exception", "diff": ["+        m_serviceManager.contextualize( new DefaultContext() );", "-        m_serviceManager.parameterize( m_parameters );", "+        m_serviceManager.parameterize( new Parameters() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6617ac97cfbee539f0c3e4691c266ce7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "0e58e7173802078b20ef66fe472179c5863235fb", "commitAfterChange": "e3ce39634bb728f8af0f7e1dd43d8f5706ac9e76", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["+            te.setUserId(tarFileSet.getUid());", "+            te.setGroupId(tarFileSet.getGid());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ed5c51f7be6ec4dbfc20d1f0219e861", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "fc96c7e44ae2dfae08828a071be520487fc6f241", "commitAfterChange": "43cb5f9b25a5e32a7211994d49e60cc40e1f86c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean doGet(int logLevel, DownloadProgress progress)             throws IOException", "signatureAfterChange": "     public boolean doGet(int logLevel, DownloadProgress progress)             throws IOException", "diff": ["-        if (useTimestamp && hasTimestamp) {", "+        if (hasTimestamp) {", "-                    == HttpURLConnection.HTTP_NOT_MODIFIED)  {", "+                    == HttpURLConnection.HTTP_NOT_MODIFIED", "+                //workaround:  doesn't work on 1.2", "+                || (hasTimestamp", "+                && JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "+                && timestamp > httpConnection.getLastModified())) {", "+                // also, if timestamp is roughly >= now, HTTP_NOT_MODIFIED is _not_", "+                // returned... We may want to remove the 1.2 qualifier above."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f1a8f0aed3bd6390326ee3f83c1460", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/DescriptorHandler.java", "commitBeforeChange": "cea87ef983a6ea3fc23cdd6a0edd3e6f12061e02", "commitAfterChange": "df8f6d006fa97e72701588efbcc89f5964da425f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public void registerDTD(String publicId, String location)", "signatureAfterChange": "          public void registerDTD(String publicId, String location)", "diff": ["+", "+        try {", "+            if (publicId != null) {", "+                URL urldtd = new URL(location);", "+                urlDTDs.put(publicId, urldtd);", "+            }            ", "+        } catch ( java.net.MalformedURLException   e) {", "+            //ignored", "+        } ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8999b0801cc7e3f1fb6194d513176a96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "0bf139178affc6edbd26010b96cd727bd1396c84", "commitAfterChange": "722f6306c7ce1bcfed6c1baacb939978cd48fc6b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-            error.printStackTrace(err);", "+            if (Project.MSG_VERBOSE <= msgOutputLevel) {", "+                error.printStackTrace(err);", "+            }", "+            else {", "+                err.println(error.getMessage());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e15ce47cbc71ac3dbeb8488e55524f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/SummaryJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+        sb.append(\", Skipped: \");", "+        sb.append(suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9979089118481a80ef8f1c1cddf826b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "5764c6b4b566fd182c5034c5a833fa67e8c1a5ad", "commitAfterChange": "ec877a5787e2a356246fdd8f405025ca4e2eed73", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "      private void postProcessGeneratedJavadocs() throws IOException", "signatureAfterChange": "      private void postProcessGeneratedJavadocs() throws IOException", "diff": ["+        if (!destDir.isDirectory()) {", "+            log(\"No javadoc created, no need to post-process anything\",", "+                Project.MSG_VERBOSE);", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6334fac919b3a554e687be6468097d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "081d01391f8e9a6e9c1218e1dea279bd79e51fea", "commitAfterChange": "205151486acb02a98f17a73c8367302d53fb56b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private ProjectHelper(Project project, File buildFile)", "signatureAfterChange": "     private ProjectHelper(Project project, File buildFile)", "diff": ["-        this.buildFile = buildFile;", "+        this.buildFile = new File(buildFile.getAbsolutePath());", "+        buildFileParent = new File(this.buildFile.getParent());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31f7944aecf64b5270b4d1f8ff807fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "a8d43912400fdf1627f23abcfb1c27879c5e8153", "commitAfterChange": "df14132289636640ade9cc52ecf8bfdc4ba52433", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-                err.println(error.getMessage());", "+                if (error instanceof BuildException) {", "+                    err.println(error.toString());", "+                }", "+                else {", "+                    err.println(error.getMessage());", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7be75d8961fe782b35f29c4a7130f38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "a87db6897cde9e966d34343211266a421998e507", "commitAfterChange": "b689612fa923ba74b5c89dc891aeff801799e555", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private DefaultComponentManager createComponentManager()", "signatureAfterChange": "     private DefaultComponentManager createComponentManager()", "diff": ["+        //Following components used when want to types (ie tasks/mappers etc)", "+        componentManager.put( TypeManager.ROLE, m_typeManager );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab40e072ebd0ac03ab4737d77cce9567", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Javah.java", "commitBeforeChange": "d00b77dd77ead032390843335ce5810fe039c598", "commitAfterChange": "7eec24e3068d76fd1589274859008c9821acc739", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if ((cls == null) && (classes.size() == 0)) {", "+        if ((cls == null) && (classes.size() == 0) && (files.size() == 0)) {", "-        if ((cls != null) && (classes.size() > 0)) {", "-            throw new BuildException(\"set class attribute or class element, \"", "-                + \"not both.\", getLocation());", "+        if ((cls != null) && (classes.size() > 0) && (files.size() > 0)) {", "+            throw new BuildException(\"set class attribute OR class element OR fileset, \"", "+                + \"not 2 or more of them.\", getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cb42524dca3e8f5c8107b6030b597f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "28b202be0229f1f5ad3bb6e4de64f1a12f7c6702", "commitAfterChange": "ccef0f89820b6a6613fd587d00c6bab48e6f45ff", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "-                    throw new BuildException(\"basedir does not exist!\", ", "+                    throw new BuildException(\"basedir does not exist!\",", "-            ", "+", "-                    if (tarFile.equals(new File(fs.getDir(project), ", "+                    if (tarFile.equals(new File(fs.getDir(project),", "-                tOut = new TarOutputStream(new FileOutputStream(tarFile));", "+                tOut = new TarOutputStream(", "+                    compression.compress(", "+                        new BufferedOutputStream(", "+                            new FileOutputStream(tarFile))));", "-                for (Enumeration e = filesets.elements(); ", "+                for (Enumeration e = filesets.elements();", "-                                                 + \"be specified for \" ", "+                                                 + \"be specified for \""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c233411378ecf2725a1c4c6b673f3a3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "360b474c6c66c9d224a16e357090085bfd9eeab4", "commitAfterChange": "a202ce4f88421e701923b8ee29781de3d652dc5f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void zipDir(File dir, ZipOutputStream zOut, String vPath)         throws IOException", "signatureAfterChange": "      protected void zipDir(File dir, ZipOutputStream zOut, String vPath)         throws IOException", "diff": ["-        if (dir != null) ze.setTime (dir.lastModified ());", "+        if (dir != null && dir.exists()) {", "+            ze.setTime(dir.lastModified());", "+        } else {", "+            ze.setTime(System.currentTimeMillis());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03d160b8e8f5a61941177bb97ebb868", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        // load command line with required attributes", "-        if (outputDirectory != null) {", "-            if (!outputDirectory.isDirectory()) {", "-                throw new BuildException(\"Outputdir not a directory.\");", "-            }", "-            cmdl.createArgument().setValue(", "-                \"-OUTPUT_DIRECTORY:\"+outputDirectory.getAbsolutePath());", "-        }", "-", "+        ", "+        // use the directory containing the target as the output directory", "+        if (outputDirectory == null) {", "+            outputDirectory = new File(target.getParent());", "+        }        ", "+        if (!outputDirectory.isDirectory() ) {", "+            throw new BuildException(\"'outputdirectory' \" + outputDirectory + \" is not a directory.\");", "+        }", "+        // convert backslashes to slashes, otherwise jjtree will put this as", "+        // comments and this seems to confuse javacc", "+        cmdl.createArgument().setValue(", "+            \"-OUTPUT_DIRECTORY:\"+outputDirectory.getAbsolutePath().replace('\\\\', '/'));", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d34d7c2054c670ab91dfd951d3d7fbcc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "1d600fe6da225ed331cf90bfcf836da4c90fecc8", "commitAfterChange": "7171341fc60cfd4d7cd4f92bda0778bf98c17094", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private ByteArrayOutputStream executeCommand(Session session, String cmd)         throws BuildException", "signatureAfterChange": "      private void executeCommand(Session session, String cmd, StringBuffer sb)         throws BuildException", "diff": ["-    private ByteArrayOutputStream executeCommand(Session session, String cmd)", "+    private void executeCommand(Session session, String cmd, StringBuffer sb)", "+            sb.append(out.toString());", "-", "-        return out;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d48e70e6933e62dd2c87d609176072e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "746437d82490f90c25ea7ad04b805b286183c5f4", "commitAfterChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["+                project.setUserProperty(MagicNames.ANT_FILE_TYPE,", "+                                        MagicNames.ANT_FILE_TYPE_FILE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5bfe61afcf24d41ccaf5e83fe55eead", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/ChangeLog.java", "commitBeforeChange": "ded098d5399315e5cb057bf09a72c2142ad82965", "commitAfterChange": "6e56b4522ae86625e4e3a06921e52ec6326c1952", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void validate()         throws TaskException", "signatureAfterChange": "     private void validate()         throws TaskException", "diff": ["-        if( null == m_basedir )", "+        if( null == m_dir )", "-            final String message = REZ.getString( \"changelog.missing-basedir.error\" );", "-            throw new TaskException( message );", "+            m_dir = getContext().getBaseDirectory();", "-        if( !m_basedir.exists() )", "+        if( !m_dir.exists() )", "-                REZ.getString( \"changelog.bad-basedir.error\", m_basedir.getAbsolutePath() );", "+                REZ.getString( \"changelog.bad-basedir.error\", m_dir.getAbsolutePath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d2e8361bd3cda1a6f486933dfbbb54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "1a3ed5bfc3212a3dae3c9d62aa1fe7e6d93a759e", "commitAfterChange": "636efd4eb0a49b85b020aa22982f32e8958db9c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Javac()", "signatureAfterChange": "     public Javac()", "diff": ["+        } else if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_5)) {", "+            facade = new FacadeTaskHelper(\"javac1.5\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6167835637b665fe07a4f8f63312479", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "96e6561e659a24f1e2122d884e83561327cb0f48", "commitAfterChange": "88dcebf815f27d9b16735745605342963870010e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void reset()", "signatureAfterChange": "     public void reset()", "diff": ["+        forceOverwrite = true;", "-        fileSets = new Vector();", "+        sources.removeAllElements();", "+        sourceFiles.removeAllElements();", "+        filterChains = null;", "+        footer = null;", "+        header = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e894589501cfbe3cec36f2a897c944b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "7c6f6591f635626c1e3e8c47dfa1bff0af3ee370", "commitAfterChange": "1dc3ff85f64b99ede826fbfe4656f1a0b27bcbb5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["+                log(\"File has changed; saving the updated file\",Project.MSG_VERBOSE);", "+            } else {", "+                log(\"No change made\",Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f315094207a0c1a6188e28c53818119a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "11eb66160fc05b622bc3b8b68926b7e1fb5bc089", "commitAfterChange": "55ada84e847507662f8e884bca47fe2354d1f42f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          private void validate() throws BuildException", "signatureAfterChange": "          private void validate() throws BuildException", "diff": ["+        try {", "+            if (atLeast != null) {", "+                new DeweyDecimal(atLeast);", "+            } else {", "+                new DeweyDecimal(exactly);", "+            }", "+        } catch (NumberFormatException e) {", "+            throw new BuildException(\"The argument is not a Dewey Decimal eg 1.1.0\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f744730edd871b5ab74af96d97aa621d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "4213be7405b3972ce4b346144f04a1878f29561d", "commitAfterChange": "3930d3e938dfbe45835ef7b28d00d5714bc304d0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite)", "diff": ["+        sb.append(\", Skipped: \");", "+        sb.append(suite.skipCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc1c887ee3921379144cd0209a9e57e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "7e7fa2f905e691ba00568bc670cc80060c224fd4", "commitAfterChange": "590936af269c77bda5fb410fd81e19958062efe6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Manifest getDefaultManifest() throws IOException", "signatureAfterChange": "              private Manifest getDefaultManifest()", "diff": ["-", "-    private Manifest getDefaultManifest() throws IOException {", "-        String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "-        InputStream in = this.getClass().getResourceAsStream(s);", "-        if (in == null) {", "-            throw new BuildException(\"Could not find: \" + s);", "+        ", "+    private Manifest getDefaultManifest() {", "+        try {", "+            String s = \"/org/apache/tools/ant/defaultManifest.mf\";", "+            InputStream in = this.getClass().getResourceAsStream(s);", "+            if (in == null) {", "+                throw new BuildException(\"Could not find default manifest: \" + s);", "+            }", "+            return new Manifest(in);", "-        return new Manifest(in);", "+        catch (ManifestException e) {", "+            throw new BuildException(\"Default manifest is invalid !!\");", "+        }", "+        catch (IOException e) {", "+            throw new BuildException(\"Unable to read default manifest\", e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe390a33fe297fe3f749c8e7ea3ff788", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2d9fb4c56dafa32f2e22b5996f617621103286fd", "commitAfterChange": "e8e8e10d10004b8f369fa7c52ec4755b8afacd6f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "     private void clearCaches()", "signatureAfterChange": "     private void clearCaches()", "diff": ["+        includeNonPatterns.clear();", "+        excludeNonPatterns.clear();", "+        includePatterns = excludePatterns = null;", "+        areNonPatternSetsReady = false;"]}]}