{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c5c4dcb93b7b622a46ffb430b41b0d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8a4c2cb32b48b11aa516535d1b8df4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/dotnet/src/main/org/apache/tools/ant/taskdefs/optional/dotnet/AbstractBuildTask.java", "commitBeforeChange": "00fda119478c715878e724d0de3cda557d01de02", "commitAfterChange": "e3bbc7c3c043ec2f36aa5cb5f8dba72d3698a38e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        DotNetExecTask exec = new DotNetExecTask();", "-        if (vm != null) {", "-            exec.setVm(vm);", "-        }", "-        exec.setProject(getProject());", "-        exec.setExecutable(getExecutable());", "-        exec.setTaskName(getTaskName());", "+        DotNetExecTask exec = DotNetExecTask.getTask(this, vm, ", "+                                                     getExecutable(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a35815e2a02254fbd5bb78ffdfb9d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "f1d71eaeb8e405cb6da3dad2fe9b8c84a7e9394f", "commitAfterChange": "9f30d0550989766a9ad2032363a5dfdb49ee6932", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "diff": ["+        SymbolicLinkUtils u = SymbolicLinkUtils.getSymbolicLinkUtils();", "-            File f = new File(name);", "-            parent = f.getParentFile();", "-            name = f.getName();", "+            return u.isSymbolicLink(name);", "-        File toTest = new File(parent.getCanonicalPath(), name);", "-        return !toTest.getAbsolutePath().equals(toTest.getCanonicalPath());", "-    }", "+        return u.isSymbolicLink(parent, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f119e3d104e34d930ec1ae811c026d6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MatchingTask.java", "commitBeforeChange": "fa41974df0ab4bda115fd174d3d97842a6998dbe", "commitAfterChange": "1c3e443dd7482c35d229c86a6112d66b177fe904", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected DirectoryScanner getDirectoryScanner(File baseDir)", "signatureAfterChange": "     protected DirectoryScanner getDirectoryScanner(File baseDir)", "diff": ["-        DirectoryScanner ds = new DirectoryScanner();", "-        ds.setBasedir(baseDir);", "-        ds.setIncludes(makeArray(includeList));", "-        ds.setExcludes(makeArray(excludeList));", "-        if (useDefaultExcludes) ds.addDefaultExcludes();", "-        ds.scan();", "-        return ds;", "-    }", "+        fileset.setDir(baseDir);", "+        fileset.setDefaultexcludes(useDefaultExcludes);", "+        return fileset.getDirectoryScanner(project);"]}]}