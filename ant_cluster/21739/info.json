{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "324fcda2ab78141cfedc2062ae4ba311", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88198ec957f5888435b6314970cdba03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "commitAfterChange": "d571dff958cd85b5083a2a829f84e35b4abe4434", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-            List aspects = componentManager.getAspects();", "-                for (Iterator i = aspects.iterator(); i.hasNext();) {", "-                    Aspect aspect = (Aspect) i.next();", "-                    Object replacement ", "-                        = aspect.postCreateComponent(component, model);", "-                    if (replacement != null) {", "-                        component = replacement;", "-                    }", "-                }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957abd4c48ff792605aac296a14a6408", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/XmlLogger.java", "commitBeforeChange": "2fe8b860c0001d234880e9b27e8f8c7fef14de5c", "commitAfterChange": "64886360cf0d83287454a0b04a6613c3f47c0e7d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["-        switch (event.getPriority()) {", "+        switch (priority) {", "-", "-        /*", "-        if (parentElement == null) {", "-            Stack threadStack", "-                    = (Stack) threadStacks.get(Thread.currentThread());", "-            if (threadStack != null) {", "-                if (!threadStack.empty()) {", "-                    parentElement = (TimedElement) threadStack.peek();", "-                }", "-            }", "-        }", "-        */", "-"]}]}