{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b5fbd7215d0f48a1fda68a7f196f146", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "692a3790a9c09dd6046020961ceeeabf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "c64fafb60c841a1c7f014340167a84b32c0d19e3", "commitAfterChange": "adb161cdc40c45f6f563cdd7816973bc91a75178", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public long getFileTimestampGranularity()", "signatureAfterChange": "     public long getFileTimestampGranularity()", "diff": ["-        } else if (onWindows) {", "+        }", "+        if (onWindows) {", "-        } else if (onDos) {", "+        }", "+        if (onDos) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f0b1ea359b57c16ea29a24ddcc5111a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "27f9f065c82441f9e1f902ebcecb1b3249a0412e", "commitAfterChange": "a855a6dbfa1e5c8973fc8897cee409708e61175c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "     protected void runExec(Execute exe) throws BuildException", "diff": ["-            Iterator iter = resources.iterator();", "-            while (iter.hasNext()) {", "-                Resource res = (Resource) iter.next();", "+                Iterator iter = resources.iterator();", "+                while (iter.hasNext()) {", "+                    Resource res = (Resource) iter.next();", "-                if (!res.isExists() && ignoreMissing) {", "-                    continue;", "-                }", "-", "-                File base = null;", "-                String name = res.getName();", "-                if (res instanceof FileResource) {", "-                    FileResource fr = (FileResource) res;", "-                    base = fr.getBaseDir();", "-                    if (base == null) {", "-                        name = fr.getFile().getAbsolutePath();", "+                    if (!res.isExists() && ignoreMissing) {", "+                        continue;", "-                }", "-                if (restrict(new String[] {name}, base).length == 0) {", "-                    continue;", "-                }", "-", "-                if ((!res.isDirectory() || !res.isExists())", "-                    && !FileDirBoth.DIR.equals(type)) {", "-                    totalFiles++;", "-                } else if (res.isDirectory() && !FileDirBoth.FILE.equals(type)) {", "-                    totalDirs++;", "-                } else {", "-                    continue;", "-                }", "-", "-                baseDirs.add(base);", "-                fileNames.add(name);", "-", "-                if (!parallel) {", "-                    String[] command = getCommandline(name, base);", "-                    log(Commandline.describeCommand(command),", "-                        Project.MSG_VERBOSE);", "-                    exe.setCommandline(command);", "-", "-                    if (redirectorElement != null) {", "-                        setupRedirector();", "-                        redirectorElement.configure(redirector, name);", "+                    File base = null;", "+                    String name = res.getName();", "+                    if (res instanceof FileResource) {", "+                        FileResource fr = (FileResource) res;", "+                        base = fr.getBaseDir();", "+                        if (base == null) {", "+                            name = fr.getFile().getAbsolutePath();", "+                        }", "-                    if (redirectorElement != null || haveExecuted) {", "-                        // need to reset the stream handler to restart", "-                        // reading of pipes;", "-                        // go ahead and do it always w/ nested redirectors", "-                        exe.setStreamHandler(redirector.createHandler());", "+", "+                    if (restrict(new String[] {name}, base).length == 0) {", "+                        continue;", "-                    runExecute(exe);", "-                    haveExecuted = true;", "-                    fileNames.removeAllElements();", "-                    baseDirs.removeAllElements();", "+", "+                    if ((!res.isDirectory() || !res.isExists())", "+                        && !FileDirBoth.DIR.equals(type)) {", "+                        totalFiles++;", "+                    } else if (res.isDirectory()", "+                               && !FileDirBoth.FILE.equals(type)) {", "+                        totalDirs++;", "+                    } else {", "+                        continue;", "+                    }", "+", "+                    baseDirs.add(base);", "+                    fileNames.add(name);", "+", "+                    if (!parallel) {", "+                        String[] command = getCommandline(name, base);", "+                        log(Commandline.describeCommand(command),", "+                            Project.MSG_VERBOSE);", "+                        exe.setCommandline(command);", "+", "+                        if (redirectorElement != null) {", "+                            setupRedirector();", "+                            redirectorElement.configure(redirector, name);", "+                        }", "+                        if (redirectorElement != null || haveExecuted) {", "+                            // need to reset the stream handler to restart", "+                            // reading of pipes;", "+                            // go ahead and do it always w/ nested redirectors", "+                            exe.setStreamHandler(redirector.createHandler());", "+                        }", "+                        runExecute(exe);", "+                        haveExecuted = true;", "+                        fileNames.removeAllElements();", "+                        baseDirs.removeAllElements();", "+                    }", "-            }"]}]}