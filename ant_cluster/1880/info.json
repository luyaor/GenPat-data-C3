{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6194b7bd2583e482dbf5c798a38ea4f4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaebf2785e74fe7922e7949357f43f70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Class add(String role, String name, Class clz)", "signatureAfterChange": "     public Class add(String role, String name, Class clz)", "diff": ["-\t// Find the role definition", "-\tRole r = getRole(role);", "-\tif (r == null) {", "-\t    throw new BuildException(\"Unknown role: \" + role);", "-\t}", "-\t// Check if it is already defined", "-\tClass old = get(role, name);", "-\tif (old != null) {", "-\t    if (old.equals(clz)) {", "-\t\tproject.log(\"Ignoring override for \"+ role + \" \" + name ", "-\t\t\t    + \", it is already defined by the same class.\", ", "-\t\t\t    project.MSG_VERBOSE);", "-\t\treturn old;", "-\t    }", "-\t    else {", "+        // Find the role definition", "+        Role r = getRole(role);", "+        if (r == null) {", "+            throw new BuildException(\"Unknown role: \" + role);", "+        }", "+        // Check if it is already defined", "+        Factory old = get(role, name);", "+        if (old != null) {", "+            if (old.getOriginalClass().equals(clz)) {", "+                project.log(\"Ignoring override for \"+ role + \" \" + name", "+                            + \", it is already defined by the same class.\",", "+                            project.MSG_VERBOSE);", "+                return old.getOriginalClass();", "+            }", "+            else {", "-\t\t\t    role + \" \" + name, ", "-\t\t\t    project.MSG_WARN);", "-\t    }", "-\t}", "-\tcheckClass(clz);", "-\t// Check that the Class is compatible with the role definition", "-\tr.verifyAdaptability(role, clz);", "-\t// Record the new type", "-\tHashtable defTable = (Hashtable)defs.get(role);", "-\tif (defTable == null) {", "-\t    defTable = new Hashtable();", "-\t    defs.put(role, defTable);", "-\t}", "-\tdefTable.put(name, clz);", "-\treturn old;", "+                            role + \" \" + name,", "+                            project.MSG_WARN);", "+            }", "+        }", "+        Factory f = checkClass(clz);", "+        // Check that the Class is compatible with the role definition", "+        f = r.verifyAdaptability(role, f);", "+        // Record the new type", "+        Hashtable defTable = (Hashtable)defs.get(role);", "+        if (defTable == null) {", "+            defTable = new Hashtable();", "+            defs.put(role, defTable);", "+        }", "+        defTable.put(name, f);", "+", "+        String msg =", "+            \" +User \" + role + \": \" + name + \"     \" + clz.getName();", "+        project.log(msg, project.MSG_DEBUG);", "+        return (old != null ? old.getOriginalClass() : null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aba7887d6873278670d0e7f6412555ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "2bcc3b328adcc97c10be2efba1077ccf28b92caa", "commitAfterChange": "4ad59f0fc5eb69936f4322c1394993d33299959b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Class add(String role, String name, Class clz)", "signatureAfterChange": "     public Class add(String role, String name, Class clz)", "diff": ["-\tClass old = get(role, name);", "+\tFactory old = get(role, name);", "-\t    if (old.equals(clz)) {", "+\t    if (old.getOriginalClass().equals(clz)) {", "-\t\treturn old;", "+\t\treturn old.getOriginalClass();", "-\tcheckClass(clz);", "+\tFactory f = checkClass(clz);", "-\tr.verifyAdaptability(role, clz);", "+\tf = r.verifyAdaptability(role, f);", "-\tdefTable.put(name, clz);", "-\treturn old;", "+\tdefTable.put(name, f);", "+", "+        String msg = ", "+\t    \" +User \" + role + \": \" + name + \"     \" + clz.getName();", "+        project.log(msg, project.MSG_DEBUG);", "+\treturn (old != null ? old.getOriginalClass() : null);"]}]}