{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cd1705bbbe5942f2a6f2d180956f8ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206d89a9385a67e183863735d55b519f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileSystemProvider.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected ParsedUri parseURI( String uri ) throws FileSystemException", "signatureAfterChange": "     protected ParsedUri parseUri( final FileObject baseFile,                                   final String uriStr )         throws FileSystemException", "diff": ["-    protected ParsedUri parseURI( String uri ) throws FileSystemException", "+    protected ParsedUri parseUri( final FileObject baseFile,", "+                                  final String uriStr )", "+        throws FileSystemException", "-        return m_parser.parseUri( uri );", "+        // Parse the URI", "+        final ParsedZipUri uri = m_parser.parseZipUri( uriStr );", "+", "+        // Make the URI canonical", "+", "+        // Resolve the Zip file name", "+        final String fileName = uri.getZipFileName();", "+        final FileObject file = getContext().resolveFile( baseFile, fileName );", "+        uri.setZipFile( file );", "+", "+        // Rebuild the root URI", "+        final String rootUri = m_parser.buildRootUri( uri );", "+        uri.setRootUri( rootUri );", "+", "+        return uri;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92ac88d28b9ac8c5f3096a30d22303de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileSystemProvider.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public FileObject findFile( String uri ) throws FileSystemException", "signatureAfterChange": "     public FileObject findFile( final FileObject baseFile,                                 final String uri ) throws FileSystemException", "diff": ["-    public FileObject findFile( String uri ) throws FileSystemException", "+    public FileObject findFile( final FileObject baseFile,", "+                                final String uri ) throws FileSystemException", "-        ParsedUri parsedURI = null;", "+        ParsedUri parsedUri = null;", "-            parsedURI = parseURI( uri );", "+            parsedUri = parseUri( baseFile, uri );", "+        // Locate the file", "+        return findFile( parsedUri );", "+", "+    }", "-        FileSystem fs = m_context.getFileSystem( parsedURI.getRootURI() );", "-            // Need to create the file system", "-            fs = createFileSystem( parsedURI );", "-            m_context.putFileSystem( parsedURI.getRootURI(), fs );", "-        return fs.findFile( parsedURI.getPath() );"]}]}