{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da28dbb178aa2023516a2791a36c1f64", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1012ea2a35a264845ebd2a97756b33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testConditionEmpty()", "signatureAfterChange": "      @Test     public void testConditionEmpty()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"condition-empty\",", "-                                     \"no conditions\",", "-                                     \"You must nest a condition into <condition>\");", "+        try {", "+            buildRule.executeTarget(\"condition-empty\");", "+            fail(\"BuildException should have been thrown - no conditions\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"You must nest a condition into <condition>\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe991bfd911ca026eb2f9a34c70a4ba9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testNegationIncomplete()", "signatureAfterChange": "      @Test     public void testNegationIncomplete()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"negationincomplete\",", "-                                     \"no conditions in <not>\",", "-                                     \"You must nest a condition into <not>\");", "+        try {", "+            buildRule.executeTarget(\"negationincomplete\");", "+            fail(\"BuildException should have been thrown - no conditions in <not>\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"You must nest a condition into <not>\", ex.getMessage());", "+        }"]}]}