{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51b1bf7c155c696aecdbefb4ed4b2933", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d48c63c903ab7b7cdc99961a2095aa2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/DependentTargetChooser.java", "commitBeforeChange": "2ff201801b557593afe6cf9dcd4d4c4f4da65b39", "commitAfterChange": "cfa93603e73e635d31be01cdb31dc9959a5ea35c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean checkDepends(String name, ACSTargetElement aTarget)", "signatureAfterChange": "         public void preselectTargets(String[] targetNames)", "diff": ["-    private boolean checkDepends(String name, ACSTargetElement aTarget) {", "-        String[] depend = aTarget.getDepends();", "-        for( int i= 0; i < depend.length; i++) {", "-            if (name.equalsIgnoreCase(depend[i])) return true;", "-        return false;", "+         */", "+        public void preselectTargets(String[] targetNames) {", "+            int i = 0, j = 0;", "+            int iDim = getRowCount();", "+            int jDim = targetNames.length;", "+            for (i = 0; i < iDim; i++) {", "+                String name = getTarget(i).getName();", "+                for( j= 0; j < jDim; j++) {", "+                    if (name.equalsIgnoreCase(targetNames[j])) _selected[i] = true;", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44da201dbd6fa7cd3dbf090c493dd0d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "8b2d7026b2216c6a9200d22a9adfa6ad12b1762e", "commitAfterChange": "982db474ca24f7c65bcc07ab553f100b4f39b3e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                String[] s = ds.getIncludedFiles();", "-                for (int j=0; j<s.length; j++) {", "-                    v.addElement(new File(fs.getDir(), s[j]).getAbsolutePath());", "+                if (!\"dir\".equals(type)) {", "+                    String[] s = ds.getIncludedFiles();", "+                    for (int j=0; j<s.length; j++) {", "+                        v.addElement(new File(fs.getDir(), s[j]).getAbsolutePath());", "+                    }", "+                }", "+", "+                if (!\"file\".equals(type)) {", "+                    String[] s = ds.getIncludedDirectories();", "+                    for (int j=0; j<s.length; j++) {", "+                        v.addElement(new File(fs.getDir(), s[j]).getAbsolutePath());", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b7cc8fb680d5434c08c348cab296b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "db105dffc51d91759c8e656226bc6c4a5855d0ef", "commitAfterChange": "e8a1adf6c68a50c4d950a98761a5f1069ea635e4", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "signatureAfterChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "diff": ["-        String[] targetFiles = new String[targets.size()];", "-        targets.copyInto(targetFiles);", "+        String[] targetFiles = (String[]) targets.toArray(new String[targets.size()]);", "-            if (!relative) {", "-                result[srcIndex + i] =", "-                    (new File(baseDirs[i], srcFiles[i])).getAbsolutePath();", "+            String src;", "+            if (relative) {", "+                src = srcFiles[i];", "-                result[srcIndex + i] = srcFiles[i];", "+                src = new File(baseDirs[i], srcFiles[i]).getAbsolutePath();", "-                result[srcIndex + i] =", "-                    result[srcIndex + i].replace(fileSeparator, '/');", "+                src = src.replace(fileSeparator, '/');", "+            result[srcIndex + i] = src;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93eebf6ae504360f41c5e5416e4f71f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "2a713cc02adc21aa5bd5189c8a2718631e6f6a88", "commitAfterChange": "99067d060752e5a89c24d99c17b6eb7231f96380", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "      protected void buildMap(File fromDir, File toDir, String[] names,                             FileNameMapper mapper, Hashtable map)", "signatureAfterChange": "      protected void buildMap(File fromDir, File toDir, String[] names,                             FileNameMapper mapper, Hashtable map)", "diff": ["-            File dest = new File(toDir, mapper.mapFileName(toCopy[i])[0]);", "-            map.put(src.getAbsolutePath(), dest.getAbsolutePath());", "+", "+            String[] mappedFiles = mapper.mapFileName(toCopy[i]);", "+", "+            if (!enableMultipleMappings) {", "+                map.put(src.getAbsolutePath(),", "+                        new String[] {new File(toDir, mappedFiles[0]).getAbsolutePath()});", "+            } else {", "+                // reuse the array created by the mapper", "+                for (int k = 0; k < mappedFiles.length; k++) {", "+                    mappedFiles[k] = new File(toDir, mappedFiles[k]).getAbsolutePath();", "+                }", "+", "+                map.put(src.getAbsolutePath(), mappedFiles);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d839e11921b0005a4ce1a3733fa4a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "f4f7024234069cab8a6853720a326d12065a2d8e", "commitAfterChange": "c28fbe7d76ca748c52b9b935c815ddfe92f7c1cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "-        // Process all the directoried marked for styling", "-        dirs = scanner.getIncludedDirectories();", "-        for (int j = 0;j < dirs.length;++j){", "-            list=new File(baseDir,dirs[j]).list();", "-            for (int i = 0;i < list.length;++i) {", "-                process( baseDir, list[i], destDir, stylesheet );", "+        if (performDirectoryScan) {", "+            // Process all the directories marked for styling", "+            dirs = scanner.getIncludedDirectories();", "+            for (int j = 0;j < dirs.length;++j){", "+                list=new File(baseDir,dirs[j]).list();", "+                for (int i = 0;i < list.length;++i) {", "+                    process( baseDir, list[i], destDir, stylesheet );", "+                }"]}]}