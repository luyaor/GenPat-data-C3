{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab50d03501d5607450842a41e875e5de", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf188656d2edf6cf1947169c0dd2951", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "5a497d7dc79f7b6eda0770262f8d92d099c502c5", "commitAfterChange": "8ce1de2178a0422105fa437c327b49fb5637ff28", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected static void hbMakeCodeLengths( char[] len, int[] freq,                                              int alphaSize, int maxLen )", "signatureAfterChange": "      protected static void hbMakeCodeLengths( char[] len, int[] freq,                                              int alphaSize, int maxLen )", "diff": ["-        for( i = 0; i < alphaSize; i++ )", "+        for( i = 0; i < alphaSize; i++ ) {", "+        }", "-            if( !( nHeap < ( MAX_ALPHA_SIZE + 2 ) ) )", "+            if( !( nHeap < ( MAX_ALPHA_SIZE + 2 ) ) ) {", "+            }", "-                        if( yy > nHeap )", "+                        if( yy > nHeap ) {", "+                        }", "-                            weight[ heap[ yy + 1 ] ] < weight[ heap[ yy ] ] )", "+                            weight[ heap[ yy + 1 ] ] < weight[ heap[ yy ] ] ) {", "-                        if( weight[ tmp ] < weight[ heap[ yy ] ] )", "+                        }", "+                        if( weight[ tmp ] < weight[ heap[ yy ] ] ) {", "+                        }", "-                        if( yy > nHeap )", "+                        if( yy > nHeap ) {", "+                        }", "-                            weight[ heap[ yy + 1 ] ] < weight[ heap[ yy ] ] )", "+                            weight[ heap[ yy + 1 ] ] < weight[ heap[ yy ] ] ) {", "-                        if( weight[ tmp ] < weight[ heap[ yy ] ] )", "+                        }", "+                        if( weight[ tmp ] < weight[ heap[ yy ] ] ) {", "+                        }", "-            if( !( nNodes < ( MAX_ALPHA_SIZE * 2 ) ) )", "+            if( !( nNodes < ( MAX_ALPHA_SIZE * 2 ) ) ) {", "+            }", "-                if( j > maxLen )", "+                if( j > maxLen ) {", "+                }", "-            if( !tooLong )", "+            if( !tooLong ) {", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1f55f126bdda14af7d2096e58af2d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "b73026d50f2f0f71e50d1616649ff97fe9a1d200", "commitAfterChange": "fa9401b00e45852c2692e01439c9de8b4592a992", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected static void hbMakeCodeLengths( char[] len, int[] freq,                                              int alphaSize, int maxLen )", "signatureAfterChange": "      protected static void hbMakeCodeLengths( char[] len, int[] freq,                                              int alphaSize, int maxLen )", "diff": ["-                parent[ n1 ] = parent[ n2 ] = nNodes;", "+                parent[ n1 ] = nNodes;", "+                parent[ n2 ] = nNodes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8c64899979aa7a285531967d2612d55", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "5a497d7dc79f7b6eda0770262f8d92d099c502c5", "commitAfterChange": "8ce1de2178a0422105fa437c327b49fb5637ff28", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private boolean fullGtU( int i1, int i2 )", "signatureAfterChange": "      private boolean fullGtU( int i1, int i2 )", "diff": ["-        if( c1 != c2 )", "+        if( c1 != c2 ) {", "+        }", "-        if( c1 != c2 )", "+        if( c1 != c2 ) {", "+        }", "-        if( c1 != c2 )", "+        if( c1 != c2 ) {", "+        }", "-        if( c1 != c2 )", "+        if( c1 != c2 ) {", "+        }", "-        if( c1 != c2 )", "+        if( c1 != c2 ) {", "+        }", "-        if( c1 != c2 )", "+        if( c1 != c2 ) {", "+        }", "-            if( c1 != c2 )", "+            if( c1 != c2 ) {", "+            }", "-            if( s1 != s2 )", "+            if( s1 != s2 ) {", "+            }", "-            if( c1 != c2 )", "+            if( c1 != c2 ) {", "+            }", "-            if( s1 != s2 )", "+            if( s1 != s2 ) {", "+            }", "-            if( c1 != c2 )", "+            if( c1 != c2 ) {", "+            }", "-            if( s1 != s2 )", "+            if( s1 != s2 ) {", "+            }", "-            if( c1 != c2 )", "+            if( c1 != c2 ) {", "+            }", "-            if( s1 != s2 )", "+            if( s1 != s2 ) {", "+            }"]}]}