{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43482afedc46bdb8be9cf9ac8c42cf3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b2349730345a246662ae176a539538", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "3e35ab334b7e5ecd691960f61b58069130c4a2b0", "commitAfterChange": "6acb5be183f9d189628089d186ede0caf887cf0c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 32, "signatureBeforeChange": "     protected void scanDir(File srcDir, File destDir, String files[])", "signatureAfterChange": "     protected void scanDir(File srcDir, File destDir, String files[])", "diff": ["-            File srcFile = new File(srcDir, files[i]);", "-            if (files[i].endsWith(\".jsp\")) {", "-                // drop leading path (if any)", "-                int fileStart =", "-                    files[i].lastIndexOf(File.separatorChar) + 1;", "-                File javaFile = new File(destDir, files[i].substring(fileStart,", "-                                                                     files[i].indexOf(\".jsp\")) + \".java\");", "+            String filename=files[i];", "+            File srcFile = new File(srcDir, filename);", "+            File javaFile=mapToJavaFile(srcFile);", "-                if (srcFile.lastModified() > now) {", "-                    log(\"Warning: file modified in the future: \" +", "-                        files[i], Project.MSG_WARN);", "-                }", "+            if (srcFile.lastModified() > now) {", "+                    log(\"Warning: file modified in the future: \" +filename,", "+                            Project.MSG_WARN);", "+            }", "+            boolean shouldCompile=false;", "-                if (!javaFile.exists() ||", "-                    srcFile.lastModified() > javaFile.lastModified())", "-                    {", "-                        if (!javaFile.exists()) {", "-                            log(\"Compiling \" + srcFile.getPath() +", "-                                \" because java file \"", "-                                + javaFile.getPath() + \" does not exist\",", "-                                Project.MSG_DEBUG);", "-                        } else {", "-                            log(\"Compiling \" + srcFile.getPath() +", "-                                \" because it is out of date with respect to \"", "-                                + javaFile.getPath(), Project.MSG_DEBUG);", "-                        }", "-                        compileList.addElement(srcFile.getAbsolutePath());", "+            if (!javaFile.exists()) {", "+                shouldCompile=true;", "+                log(\"Compiling \" + srcFile.getPath() +", "+                        \" because java file \"+ javaFile.getPath() + \" does not exist\",", "+                        Project.MSG_DEBUG);", "+                } else {", "+                    if( srcFile.lastModified() > javaFile.lastModified()) {", "+                        shouldCompile=true;", "+                        log(\"Compiling \" + srcFile.getPath() +", "+                            \" because it is out of date with respect to \" + javaFile.getPath(),", "+                            Project.MSG_DEBUG);", "+            }", "+            if(shouldCompile) {", "+                compileList.addElement(srcFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ffc3f6074edda1f22273a35c00d0d6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "bc4909539a07b63a41e4031c696d9b251e529c23", "commitAfterChange": "9b3933e4e259e909052ff372e3e9465b450170eb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["-                    if (forceOverwrite", "-                        || destLastModified < srcLastModified", "-                        || destLastModified < bundleLastModified[0]", "-                        || destLastModified < bundleLastModified[1]", "-                        || destLastModified < bundleLastModified[2]", "-                        || destLastModified < bundleLastModified[3]", "-                        || destLastModified < bundleLastModified[4]", "-                        || destLastModified < bundleLastModified[5]", "-                        || destLastModified < bundleLastModified[6]) {", "+                    boolean needsWork = forceOverwrite", "+                        || destLastModified < srcLastModified;", "+                    if (!needsWork) {", "+                        for (int icounter = 0; icounter < BUNDLE_MAX_ALTERNATIVES; icounter++) {", "+                            needsWork = (destLastModified < bundleLastModified[icounter]);", "+                            if (needsWork) {", "+                                break;", "+                            }", "+                        }", "+                    }", "+                    if (needsWork) {"]}]}