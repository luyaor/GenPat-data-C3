{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd20418b7549eac28b832ec461f0e82c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8364f6d43e3d684cdf6e7c58e0d86c98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     private boolean couldHoldIncluded(TokenizedPath tokenizedName,                                       TokenizedPattern tokenizedInclude)", "signatureAfterChange": "     private boolean couldHoldIncluded(final TokenizedPath tokenizedName,                                       final TokenizedPattern tokenizedInclude)", "diff": ["-    private boolean couldHoldIncluded(TokenizedPath tokenizedName,", "-                                      TokenizedPattern tokenizedInclude) {", "+    private boolean couldHoldIncluded(final TokenizedPath tokenizedName,", "+                                      final TokenizedPattern tokenizedInclude) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1c5800d2d28cef28ce16e1133a246cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     private boolean couldHoldIncluded(TokenizedPath tokenizedName)", "signatureAfterChange": "     private boolean couldHoldIncluded(final TokenizedPath tokenizedName)", "diff": ["-    private boolean couldHoldIncluded(TokenizedPath tokenizedName) {", "+    private boolean couldHoldIncluded(final TokenizedPath tokenizedName) {", "-        for (Iterator<TokenizedPath> iter = includeNonPatterns.values().iterator();", "+        for (final Iterator<TokenizedPath> iter = includeNonPatterns.values().iterator();"]}]}