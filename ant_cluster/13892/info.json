{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcdb41f0a98687c77c52a7d572a961bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0927ef4328c24272adffaf5a31632b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "50558dd274c428071d86fbc78ce5431ebb88935c", "commitAfterChange": "a4c986354481641bc4b9811854fefaf2fec7f86a", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(FileSet[] filesets,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(FileSet[] filesets,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-            Resource[] resources = initialResources[i];", "-            if (doFilesonly) {", "-                resources = selectFileResources(resources);", "-            }", "+            Resource[] resources = selectFileResources(initialResources[i]);", "+            if (!doFilesonly) {", "+                Union u = new Union();", "+                u.addAll(Arrays", "+                         .asList(selectDirectoryResources(initialResources[i])));", "+                ResourceCollection rc =", "+                    ResourceUtils.selectSources(this, u,", "+                                                myMapper,", "+                                                getZipScanner(),", "+                                                MISSING_DIR_PROVIDER);", "+                if (rc.size() > 0) {", "+                    ArrayList newer = new ArrayList();", "+                    newer.addAll(Arrays.asList(((Union) rc).listResources()));", "+                    newer.addAll(Arrays.asList(newerResources[i]));", "+                    newerResources[i] =", "+                        (Resource[]) newer.toArray(newerResources[i]);", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0faa5df5cdfc1b1eb34b0b8fa42976b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "50558dd274c428071d86fbc78ce5431ebb88935c", "commitAfterChange": "a4c986354481641bc4b9811854fefaf2fec7f86a", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 56, "signatureBeforeChange": "     protected ArchiveState getNonFileSetResourcesToAdd(ResourceCollection[] rcs,                                                        File zipFile,                                                        boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getNonFileSetResourcesToAdd(ResourceCollection[] rcs,                                                        File zipFile,                                                        boolean needsUpdate)         throws BuildException", "diff": ["-            Resource[] rs = initialResources[i];", "-            if (doFilesonly) {", "-                rs = selectFileResources(rs);", "-            }", "+            Resource[] rs = selectFileResources(initialResources[i]);", "+            if (!doFilesonly) {", "+                Union u = new Union();", "+                u.addAll(Arrays", "+                         .asList(selectDirectoryResources(initialResources[i])));", "+                ResourceCollection rc =", "+                    ResourceUtils.selectSources(this, u,", "+                                                new IdentityMapper(),", "+                                                getZipScanner(),", "+                                                MISSING_DIR_PROVIDER);", "+                if (rc.size() > 0) {", "+                    ArrayList newer = new ArrayList();", "+                    newer.addAll(Arrays.asList(((Union) rc).listResources()));", "+                    newer.addAll(Arrays.asList(newerResources[i]));", "+                    newerResources[i] =", "+                        (Resource[]) newer.toArray(newerResources[i]);", "+                }", "+            }"]}]}