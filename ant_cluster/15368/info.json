{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "054f038ebbba4229cc75a9384fecc94b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9872fc3c9433378424b85cc685c919", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "e562f879e82fea2c7960533aaa097c769429968c", "commitAfterChange": "4db83aaa5baa9b47810796035a0e9cafeab911d7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void addToIncludeFileMap(File file) throws BuildException", "signatureAfterChange": "     private void addToIncludeFileMap(File file) throws BuildException", "diff": ["-        if (file != null) {", "-            if (file.exists()) {", "-                if (property == null) {", "-                    File checksumFile = getChecksumFile(file);", "-                    if (forceOverwrite || isCondition", "-                        || (file.lastModified() > checksumFile.lastModified())) {", "-                        includeFileMap.put(file, checksumFile);", "-                    } else {", "-                        log(file + \" omitted as \" + checksumFile + \" is up to date.\",", "-                            Project.MSG_VERBOSE);", "-                        if (totalproperty != null) {", "-                            // Read the checksum from disk.", "-                            String checksum = readChecksum(checksumFile);", "-                            byte[] digest = decodeHex(checksum.toCharArray());", "-                            allDigests.put(file, digest);", "-                        }", "-                    }", "+        if (file.exists()) {", "+            if (property == null) {", "+                File checksumFile = getChecksumFile(file);", "+                if (forceOverwrite || isCondition", "+                    || (file.lastModified() > checksumFile.lastModified())) {", "+                    includeFileMap.put(file, checksumFile);", "-                    includeFileMap.put(file, property);", "+                    log(file + \" omitted as \" + checksumFile + \" is up to date.\",", "+                        Project.MSG_VERBOSE);", "+                    if (totalproperty != null) {", "+                        // Read the checksum from disk.", "+                        String checksum = readChecksum(checksumFile);", "+                        byte[] digest = decodeHex(checksum.toCharArray());", "+                        allDigests.put(file, digest);", "+                    }", "-                String message = \"Could not find file \"", "-                    + file.getAbsolutePath()", "-                    + \" to generate checksum for.\";", "-                log(message);", "-                throw new BuildException(message, getLocation());", "+                includeFileMap.put(file, property);", "+        } else {", "+            String message = \"Could not find file \"", "+                + file.getAbsolutePath()", "+                + \" to generate checksum for.\";", "+            log(message);", "+            throw new BuildException(message, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e421dc224a2190e0c49c3d270342bd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java", "commitBeforeChange": "fc24b8bbecb508d4edddb2ecf8897b7479c8a63f", "commitAfterChange": "d5836ac061734031a67a6c3bb5fb2fe1e73e566f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isSelected(Resource r)", "signatureAfterChange": "     public boolean isSelected(Resource r)", "diff": ["-            if (in != null) {", "-                try {", "-                    in.close();", "-                } catch (Exception e) {", "-                    throw new BuildException(\"Could not close \"", "-                                             + r.toLongString());", "-                }", "+            try {", "+                in.close();", "+            } catch (Exception e) {", "+                throw new BuildException(\"Could not close \"", "+                                         + r.toLongString());"]}]}