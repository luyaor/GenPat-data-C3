{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eebb476e0f40c9ed970d7d761dcef79e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "393ed8360b640c450ea881ffe133e1f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "6f4f0c60756a92b3a5dbc1c123904be0db030ad3", "commitAfterChange": "8c9b19d0a2849ba712c6859ed7b7d3537cef33fb", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "     protected void actOnTestResult(int exitValue, boolean wasKilled,                                    JUnitTest test, String name)", "signatureAfterChange": "     protected void actOnTestResult(TestResultHolder result,JUnitTest test,                                     String name)", "diff": ["-    protected void actOnTestResult(int exitValue, boolean wasKilled,", "-                                   JUnitTest test, String name) {", "+    protected void actOnTestResult(TestResultHolder result,JUnitTest test, ", "+                                   String name) {", "+        boolean fatal = result.timedOut || result.crashed;", "-            exitValue == JUnitTestRunner.ERRORS || wasKilled;", "+            result.exitCode == JUnitTestRunner.ERRORS || fatal;", "-            exitValue != JUnitTestRunner.SUCCESS || wasKilled;", "+            result.exitCode != JUnitTestRunner.SUCCESS || fatal;", "-                    + (wasKilled ? \" (timeout)\" : \"\"), getLocation());", "+                    + (result.timedOut ? \" (timeout)\" : \"\")", "+                    + (result.crashed ? \" (crashed)\" : \"\"), getLocation());", "-                    + (wasKilled ? \" (timeout)\" : \"\"), Project.MSG_ERR);", "+                    + (result.timedOut ? \" (timeout)\" : \"\")", "+                    + (result.crashed ? \" (crashed)\" : \"\"), Project.MSG_ERR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1bf0c5bdf97c357dc3f2ce200e94947", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testExerciseDefaultAndIncrement() throws Exception", "signatureAfterChange": "      @Test     public void testExerciseDefaultAndIncrement() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"exercise\");", "-        assertEquals(\"3\",project.getProperty(\"int.with.default\"));", "-        assertEquals(\"1\",project.getProperty(\"int.without.default\"));", "-        assertEquals(\"-->\",project.getProperty(\"string.with.default\"));", "-        assertEquals(\".\",project.getProperty(\"string.without.default\"));", "-        assertEquals(\"2002/01/21 12:18\", project.getProperty(\"ethans.birth\"));", "-        assertEquals(\"2003/01/21\", project.getProperty(\"first.birthday\"));", "-        assertEquals(\"0124\", project.getProperty(\"olderThanAWeek\"));", "-        assertEquals(\"37\", project.getProperty(\"existing.prop\"));", "-        assertEquals(\"6\",project.getProperty(\"int.without.value\"));", "+        buildRule.executeTarget(\"exercise\");", "+        assertEquals(\"3\",buildRule.getProject().getProperty(\"int.with.default\"));", "+        assertEquals(\"1\",buildRule.getProject().getProperty(\"int.without.default\"));", "+        assertEquals(\"-->\",buildRule.getProject().getProperty(\"string.with.default\"));", "+        assertEquals(\".\",buildRule.getProject().getProperty(\"string.without.default\"));", "+        assertEquals(\"2002/01/21 12:18\", buildRule.getProject().getProperty(\"ethans.birth\"));", "+        assertEquals(\"2003/01/21\", buildRule.getProject().getProperty(\"first.birthday\"));", "+        assertEquals(\"0124\", buildRule.getProject().getProperty(\"olderThanAWeek\"));", "+        assertEquals(\"37\", buildRule.getProject().getProperty(\"existing.prop\"));", "+        assertEquals(\"6\",buildRule.getProject().getProperty(\"int.without.value\"));"]}]}