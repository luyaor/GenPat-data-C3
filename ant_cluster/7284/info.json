{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25ee1c1974b666c3eb838a097f928224", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236c9640b256008dbdadebc06887b945", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "822028744ff977b3588dcc54bafdc1e9e8f98375", "commitAfterChange": "b641968fade3f4f16c1676f2b5f06c6b4344ab08", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile(File src) throws BuildException", "signatureAfterChange": "     private void processFile(File src) throws BuildException", "diff": ["-        if (!src.exists()) { ", "+        if (!src.exists()) {", "-            // line separators in values and tokens are \"\\n\"", "-            // in order to compare with the file contents, replace them", "-            // as needed", "-            String linesep = System.getProperty(\"line.separator\");", "-            String val = stringReplace(value.getText(), \"\\n\", linesep);", "-            String tok = stringReplace(token.getText(), \"\\n\", linesep);", "+            //Preserve original string (buf) so we can compare the result", "+            String newString = new String(buf);", "-            // for each found token, replace with value", "-            String  newString = stringReplace(buf, tok, val);", "-            boolean changes   = !newString.equals(buf);", "+            if (token != null)", "+            {", "+                // line separators in values and tokens are \"\\n\"", "+                // in order to compare with the file contents, replace them", "+                // as needed", "+                String linesep = System.getProperty(\"line.separator\");", "+                String val = stringReplace(value.getText(), \"\\n\", linesep);", "+                String tok = stringReplace(token.getText(), \"\\n\", linesep);", "+                // for each found token, replace with value", "+                log(\"Replacing in \" + src.getPath() + \": \" + token.getText() + \" --> \" + value.getText(), Project.MSG_VERBOSE);", "+                newString = stringReplace(newString, tok, val);", "+            }", "+", "+            if (replacefilters.size() > 0) {", "+                newString = processReplacefilters(newString, src.getPath());", "+            }", "+", "+            boolean changes = !newString.equals(buf);", "-            ", "+", "-            // If there were changes, move the new one to the old one, otherwise, delete the new one", "+            // If there were changes, move the new one to the old one;", "+            // otherwise, delete the new one", "-        }       ", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbdc1aadb3f96805381e3f6c611a2184", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "c32873b51961cb99f47b4ae6da2922b7b46a6f89", "commitAfterChange": "c437e0d2a0833a49114fa69e746b5f5ee9ed7d8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void processFile(File src) throws BuildException", "signatureAfterChange": "     private void processFile(File src) throws BuildException", "diff": ["-            throw new BuildException(\"Replace: temporary file \" + temp.getPath() + \" already exists\");", "+            throw new BuildException(\"Replace: temporary file \" + temp.getPath() + \" already exists\", location);", "-            String line;", "-            ", "-            while (true) {", "-                line = br.readLine();", "-                if (line == null) break;", "-                if (line.length() != 0) bw.write(replace(line));", "-                bw.newLine();", "+            // read the entire file into a char[]", "+            int fileLength = (int)(src.length());", "+            char[] tmpBuf = new char[fileLength];", "+            int numread = 0;", "+            int totread = 0;", "+            while (numread != -1 && totread < fileLength) {", "+                numread = br.read(tmpBuf,totread,fileLength);", "+                totread += numread;", "-             ", "+", "+            // create a String so we can use indexOf", "+            String buf = new String(tmpBuf);", "+", "+            // line separators in values and tokens are \"\\n\"", "+            // in order to compare with the file contents, replace them", "+            // as needed", "+            String linesep = System.getProperty(\"line.separator\");", "+            String val = stringReplace(value.getText(), \"\\n\", linesep);", "+            String tok = stringReplace(token.getText(), \"\\n\", linesep);", "+", "+            // for each found token, replace with value and write to the", "+            // output file", "+            buf = stringReplace(buf, tok, val);", "+            bw.write(buf,0,buf.length());", "+            ", "+            // cleanup", "-            ", "-            throw new BuildException(ioe);", "+            throw new BuildException(ioe, location);"]}]}