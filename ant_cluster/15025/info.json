{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68b994647e4c6ec490065fa54a04380b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32c9318fe24d32b48cfaf0e11d98b34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void         readCentralDirectoryEntry(Map<ZipEntry, NameAndComment> noUTF8Flag)         throws IOException", "signatureAfterChange": "     private void         readCentralDirectoryEntry(final Map<ZipEntry, NameAndComment> noUTF8Flag)         throws IOException", "diff": ["-        readCentralDirectoryEntry(Map<ZipEntry, NameAndComment> noUTF8Flag)", "+        readCentralDirectoryEntry(final Map<ZipEntry, NameAndComment> noUTF8Flag)", "-        OffsetEntry offset = new OffsetEntry();", "-        Entry ze = new Entry(offset);", "+        final OffsetEntry offset = new OffsetEntry();", "+        final Entry ze = new Entry(offset);", "-        int versionMadeBy = ZipShort.getValue(CFH_BUF, off);", "+        final int versionMadeBy = ZipShort.getValue(CFH_BUF, off);", "-        long time = ZipUtil.dosToJavaTime(ZipLong.getValue(CFH_BUF, off));", "+        final long time = ZipUtil.dosToJavaTime(ZipLong.getValue(CFH_BUF, off));", "-        int fileNameLen = ZipShort.getValue(CFH_BUF, off);", "+        final int fileNameLen = ZipShort.getValue(CFH_BUF, off);", "-        int extraLen = ZipShort.getValue(CFH_BUF, off);", "+        final int extraLen = ZipShort.getValue(CFH_BUF, off);", "-        int commentLen = ZipShort.getValue(CFH_BUF, off);", "+        final int commentLen = ZipShort.getValue(CFH_BUF, off);", "-        int diskStart = ZipShort.getValue(CFH_BUF, off);", "+        final int diskStart = ZipShort.getValue(CFH_BUF, off);", "-        byte[] fileName = new byte[fileNameLen];", "+        final byte[] fileName = new byte[fileNameLen];", "-        byte[] cdExtraData = new byte[extraLen];", "+        final byte[] cdExtraData = new byte[extraLen];", "-        byte[] comment = new byte[commentLen];", "+        final byte[] comment = new byte[commentLen];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea86fe1e17e052aff4291257eb36e78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1fe6b17d5fbbf0f70c13def785498d87e7d3c685", "commitAfterChange": "98f306fa8431c78926e42cec5801c752747e016e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void         readCentralDirectoryEntry(Map<ZipEntry, NameAndComment> noUTF8Flag)         throws IOException", "signatureAfterChange": "     private void         readCentralDirectoryEntry(Map<ZipEntry, NameAndComment> noUTF8Flag)         throws IOException", "diff": ["-        byte[] cfh = new byte[CFH_LEN];", "-", "-        archive.readFully(cfh);", "+        archive.readFully(CFH_BUF);", "-        int versionMadeBy = ZipShort.getValue(cfh, off);", "+        int versionMadeBy = ZipShort.getValue(CFH_BUF, off);", "-        final GeneralPurposeBit gpFlag = GeneralPurposeBit.parse(cfh, off);", "+        final GeneralPurposeBit gpFlag = GeneralPurposeBit.parse(CFH_BUF, off);", "-        ze.setMethod(ZipShort.getValue(cfh, off));", "+        ze.setMethod(ZipShort.getValue(CFH_BUF, off));", "-        long time = ZipUtil.dosToJavaTime(ZipLong.getValue(cfh, off));", "+        long time = ZipUtil.dosToJavaTime(ZipLong.getValue(CFH_BUF, off));", "-        ze.setCrc(ZipLong.getValue(cfh, off));", "+        ze.setCrc(ZipLong.getValue(CFH_BUF, off));", "-        ze.setCompressedSize(ZipLong.getValue(cfh, off));", "+        ze.setCompressedSize(ZipLong.getValue(CFH_BUF, off));", "-        ze.setSize(ZipLong.getValue(cfh, off));", "+        ze.setSize(ZipLong.getValue(CFH_BUF, off));", "-        int fileNameLen = ZipShort.getValue(cfh, off);", "+        int fileNameLen = ZipShort.getValue(CFH_BUF, off);", "-        int extraLen = ZipShort.getValue(cfh, off);", "+        int extraLen = ZipShort.getValue(CFH_BUF, off);", "-        int commentLen = ZipShort.getValue(cfh, off);", "+        int commentLen = ZipShort.getValue(CFH_BUF, off);", "-        int diskStart = ZipShort.getValue(cfh, off);", "+        int diskStart = ZipShort.getValue(CFH_BUF, off);", "-        ze.setInternalAttributes(ZipShort.getValue(cfh, off));", "+        ze.setInternalAttributes(ZipShort.getValue(CFH_BUF, off));", "-        ze.setExternalAttributes(ZipLong.getValue(cfh, off));", "+        ze.setExternalAttributes(ZipLong.getValue(CFH_BUF, off));", "-        offset.headerOffset = ZipLong.getValue(cfh, off);", "+        offset.headerOffset = ZipLong.getValue(CFH_BUF, off);"]}]}