{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "564b57281ade6220cd4c3b982a94ce9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e429138a1c074a5573564e3964786c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void addContinuation(String line)", "signatureAfterChange": "         public void addContinuation(String line)", "diff": ["-            value += line.substring(1);", "+            String currentValue = (String)values.elementAt(currentIndex);", "+            setValue(currentValue + line.substring(1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ade18f1be30bdec3c4b1f274a24cbfd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "b839a3ed0f3a0ad050579c33f2ede3e8b8542fea", "commitAfterChange": "f1bfa329163db7a4992c25741e2d2db243a69fa0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private URL getResourceURL(File file, String resourceName)", "signatureAfterChange": "     private URL getResourceURL(File file, String resourceName)", "diff": ["-                ZipFile zipFile = null;", "-                try {", "+                ZipFile zipFile = (ZipFile)zipFiles.get(file);", "+                if (zipFile == null) {", "-", "-                    ZipEntry entry = zipFile.getEntry(resourceName);", "-                    if (entry != null) {", "-                        try {", "-                            return new URL(\"jar:file:\"+file.toString()+\"!/\"+entry);", "-                        } catch (MalformedURLException ex) {", "-                            return null;", "-                        }", "-                    }", "+                    zipFiles.put(file, zipFile);                    ", "-                finally {", "-                    if (zipFile != null) {", "-                        zipFile.close();", "+", "+                ZipEntry entry = zipFile.getEntry(resourceName);", "+                if (entry != null) {", "+                    try {", "+                        return new URL(\"jar:file:\"+file.toString()+\"!/\"+entry);", "+                    } catch (MalformedURLException ex) {", "+                        return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643a54566814c569a6812234b3d5bb32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "76f5174e7c5e445a20eb0c1cbcb22f81e2c72503", "commitAfterChange": "c6d10f6ffcfc9ba5ebf41d7ea079047833f97642", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["+        Element currentTest = null;", "-            currentTest.appendChild(nested);", "+            currentTest = (Element) testElements.get(test);", "-            rootElement.appendChild(nested);", "+            currentTest = rootElement;", "+        currentTest.appendChild(nested);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68eb90b4a9a1a4ebaa03d6867de4b949", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "9ec9a279f5b0d54e1d1362475edc52717b2197ab", "commitAfterChange": "4d8702d1f414ef88110183568a3aa502d18e06f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "signatureAfterChange": "     public void addAntLibraries(Map librarySpecs, URL libURL)          throws MalformedURLException, ExecutionException", "diff": ["+                        AntLibrarySpec currentSpec ", "+                            = (AntLibrarySpec)librarySpecs.get(libraryId);", "-                             + \"copy of library with id = \" + libraryId +", "-                            \" (\" + libURLs[i] + \")\");", "+                             + \"copy of library with id = \" + libraryId ", "+                             + \" (\" + libURLs[i] + \") + existing library at (\"", "+                             + currentSpec.getLibraryURL() + \")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "750b47a3f5b5cbfa9cccb94eab4d946f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "86029316faa68d77a37eab0a07714c5bd2dd46e1", "commitAfterChange": "f923ab50f9caea6910391d866039acd889f99077", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        cmd.setExecutable(\"patch\");", "+        Commandline toExecute = (Commandline)cmd.clone();", "+        toExecute.setExecutable(\"patch\");", "-            cmd.createArgument().setFile(originalFile);", "+            toExecute.createArgument().setFile(originalFile);", "-        exe.setCommandline(cmd.getCommandline());", "+        exe.setCommandline(toExecute.getCommandline());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3e485903ff45022d2f6ce5baa980cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java", "commitBeforeChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "commitAfterChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "                  public void characters(char ch[], int start, int length) throws SAXException", "signatureAfterChange": "                  public void characters(char ch[], int start, int length) throws SAXException", "diff": ["+            StringBuffer buf = (StringBuffer)tagCharDataStack.elementAt(0);", "+            buf.append(ch, start, length);"]}]}