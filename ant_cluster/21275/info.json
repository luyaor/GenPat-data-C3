{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4390afcf574cd46eafc5c245e80e9ba", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "170b80253df9aac968ac9e8e96b457f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEncodingHelper.java", "commitBeforeChange": "cbd20a77eba224b21654251583971e054729f006", "commitAfterChange": "752d64fa43db2172327771ba4d36bee3f2d3b49a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     static final boolean canEncodeName(String name, String encoding)", "signatureAfterChange": "     static ZipEncoding getZipEncoding(String name)", "diff": ["+     */", "+    static ZipEncoding getZipEncoding(String name) {", "+ ", "+        // fallback encoding is good enough for utf-8.", "+        if (isUTF8(name)) {", "+            return UTF8_ZIP_ENCODING;", "+        }", "+", "+        if (name == null) {", "+            return new FallbackZipEncoding();", "+        }", "+", "+        SimpleEncodingHolder h =", "+            (SimpleEncodingHolder) simpleEncodings.get(name);", "+", "+        if (h!=null) {", "+            return h.getEncoding();", "+        }", "+", "+        try {", "+", "+            Charset cs = Charset.forName(name);", "+            return new NioZipEncoding(cs);", "+", "+        } catch (UnsupportedCharsetException e) {", "+            return new FallbackZipEncoding(name);", "+        }", "+    }", "-     */", "-    static final boolean canEncodeName(String name, String encoding) {", "-", "-        Charset cs = Charset.forName(encoding);", "-", "-        CharsetEncoder enc = cs.newEncoder();", "-        enc.onMalformedInput(CodingErrorAction.REPORT);", "-        enc.onUnmappableCharacter(CodingErrorAction.REPORT);", "-", "-        return enc.canEncode(name);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824c5f13271214b81c0fc7381ed00810", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/repository/Library.java", "commitBeforeChange": "4d831bb7cbb2bb2839303380a28f888c587802a0", "commitAfterChange": "f630ef56ed68316b07aaa27e05cf871de1070498", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public String getIf()", "signatureAfterChange": "     public boolean equals(Object o)", "diff": ["-     */", "-    public String getIf() {", "-        return ifClause;", "-    }", "+     */", "+    public boolean equals(Object o) {", "+        if (this == o) {", "+            return true;", "+        }", "+        if (!(o instanceof Library)) {", "+            return false;", "+        }", "+", "+        final Library library = (Library) o;", "+", "+        if (archive != null ? !archive.equals(library.archive) : library.archive != null) {", "+            return false;", "+        }", "+        if (destinationName != null ? !destinationName.equals(", "+                library.destinationName) : library.destinationName != null) {", "+            return false;", "+        }", "+        if (project != null ? !project.equals(library.project) : library.project != null) {", "+            return false;", "+        }", "+        if (suffix != null ? !suffix.equals(library.suffix) : library.suffix != null) {", "+            return false;", "+        }", "+        if (version != null ? !version.equals(library.version) : library.version != null) {", "+            return false;", "+        }", "+", "+        return true;", "+    }"]}]}