{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1046fc385b4473ef0350861877c6e731", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1988f71f266775eabd2ead6a7b47bb54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "8947bdbc21d3439529ce0f424f5224c500bc7958", "commitAfterChange": "9bd75d2c4e8bb5387ec65dd76ccf483f2bec59e7", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "     private String getPackageName(File file)", "signatureAfterChange": "     private String getPackageName(File file)", "diff": ["-                    project.log(\"Could not evaluate package for \" + file, \"javadoc\", project.MSG_WARN);", "+                    log(\"Could not evaluate package for \" + file, Project.MSG_WARN);", "-            project.log(\"Exception \" + e + \" parsing \" + file, \"javadoc\", project.MSG_WARN);", "+            log(\"Exception \" + e + \" parsing \" + file, Project.MSG_WARN);", "-        project.log(file + \" --> \" + name, \"javadoc\", project.MSG_VERBOSE);", "+        log(file + \" --> \" + name, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb4b63ce6dab29be5850458fedf6e11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "8947bdbc21d3439529ce0f424f5224c500bc7958", "commitAfterChange": "9bd75d2c4e8bb5387ec65dd76ccf483f2bec59e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int executeJava() throws BuildException", "signatureAfterChange": "     public int executeJava() throws BuildException", "diff": ["-        project.log(\"Calling \" + classname, \"java\", project.MSG_VERBOSE);", "+        log(\"Calling \" + classname, Project.MSG_VERBOSE);", "-            if (jvmargs != null) project.log(\"JVM args and classpath ignored when same JVM is used.\", \"java\", project.MSG_VERBOSE);", "-            project.log(\"Java args: \" + argList.toString(), \"java\", project.MSG_VERBOSE);", "+            if (jvmargs != null) {", "+                log(\"JVM args and classpath ignored when same JVM is used.\", Project.MSG_VERBOSE);", "+            }", "+        ", "+            log(\"Java args: \" + argList.toString(), Project.MSG_VERBOSE);"]}]}