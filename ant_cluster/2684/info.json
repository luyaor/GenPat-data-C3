{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "954789ee4609e9f1e4e96057031e1b16", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca3e1a8a5fb9cd60257e35d11882a4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "ee5f3b4185bf2539cc29e20893d1d296910cf62c", "commitAfterChange": "eb08ea9fd094b675617320ddf8b66940644a8364", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(String[] args)", "diff": ["+        ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "+        ", "-                // we don't have any more args to recognize!", "-                String msg = \"Unknown argument: \" + arg;", "-                System.err.println(msg);", "-                printUsage();", "-                throw new BuildException(\"\");", "+                boolean processed = false;", "+                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    int newI = processor.readArguments(args, i);", "+                    if (newI != -1) {", "+                        List<String> extraArgs = extraArguments.get(processor.getClass());", "+                        if (extraArgs == null) {", "+                            extraArgs = new ArrayList<String>();", "+                            extraArguments.put(processor.getClass(), extraArgs);", "+                        }", "+                        for (; i < newI && i < args.length; i++) {", "+                            extraArgs.add(args[i]);", "+                        }", "+                        processed = true;", "+                        break;", "+                    }", "+                }", "+                if (!processed) {", "+                    // we don't have any more args to recognize!", "+                    String msg = \"Unknown argument: \" + arg;", "+                    System.err.println(msg);", "+                    printUsage();", "+                    throw new BuildException(\"\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad04f38ac980f7bbc446610ed87d6930", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "ee5f3b4185bf2539cc29e20893d1d296910cf62c", "commitAfterChange": "eb08ea9fd094b675617320ddf8b66940644a8364", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["+        ArgumentProcessorRegistry processorRegistry = ArgumentProcessorRegistry.getInstance();", "+", "+        for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+            List<String> extraArgs = extraArguments.get(processor.getClass());", "+            if (extraArgs != null) {", "+                if (processor.handleArg(extraArgs)) {", "+                    return;", "+                }", "+            }", "+        }", "+", "+                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    List<String> extraArgs = extraArguments.get(processor.getClass());", "+                    if (extraArgs != null) {", "+                        processor.prepareConfigure(project, extraArgs);", "+                    }", "+                }", "+", "+", "+                for (ArgumentProcessor processor : processorRegistry.getProcessors()) {", "+                    List<String> extraArgs = extraArguments.get(processor.getClass());", "+                    if (extraArgs != null) {", "+                        if (processor.handleArg(project, extraArgs)) {", "+                            return;", "+                        }", "+                    }", "+                }"]}]}