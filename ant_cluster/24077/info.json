{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "133c22e12f5f039faafeff03aba94088", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a409c4beada0aafc1d98822a86add20", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/Matches.java", "commitBeforeChange": "3a912beff76f60fca0e92f3c9a2170c1bd5da28a", "commitAfterChange": "401473f8de76542db1ada7cfe12a5f7c1cc326d9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        int options = RegexpMatcher.MATCH_DEFAULT;", "-        if (!caseSensitive) {", "-            options = options | RegexpMatcher.MATCH_CASE_INSENSITIVE;", "-        }", "-        if (multiLine) {", "-            options = options | RegexpMatcher.MATCH_MULTILINE;", "-        }", "-        if (singleLine) {", "-            options = options | RegexpMatcher.MATCH_SINGLELINE;", "-        }", "+        int options = RegexpUtil.asOptions(caseSensitive, multiLine, singleLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f015f457462ca5b2b660249c4e899d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java", "commitBeforeChange": "02e939c261d79e9d1c2df779bfe1b787b63dd55c", "commitAfterChange": "d814a03e98431c1ae142e398f02be2a3b7205b3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     public boolean isSelected(File basedir, String filename, File file)", "diff": ["-", "+        if (pattern != null) {", "+        } else {", "+            if (reg == null) {", "+                reg = new RegularExpression();", "+                reg.setPattern(regex);", "+                expression = reg.getRegexp(getProject());", "+            }", "+            int options = Regexp.MATCH_DEFAULT;", "+            if (!casesensitive) {", "+                options |= Regexp.MATCH_CASE_INSENSITIVE;", "+            }", "+            return expression.matches(filename, options) == !negated;", "+        }"]}]}