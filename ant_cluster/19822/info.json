{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce55a5d2ae8454428f0b2715f20ede0f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de99a996dfebffae5609873c66389c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/aspect/DefaultAspectManager.java", "commitBeforeChange": "1dc00cb1d11437ed4284e6a8de584435f13e2564", "commitAfterChange": "190db7ce1a9cdad175a551c410fe22a85f03fb4a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public synchronized void addAspectHandler( final AspectHandler handler )", "signatureAfterChange": "      public synchronized void addAspectHandler( final String name, final AspectHandler handler )         throws TaskException", "diff": ["-    public synchronized void addAspectHandler( final AspectHandler handler )", "-        m_aspectCopy.add( handler );", "-        m_aspects = (AspectHandler[])m_aspectCopy.toArray( m_aspects );", "+    public synchronized void addAspectHandler( final String name, final AspectHandler handler )", "+        throws TaskException", "+        m_aspectMap.put( name, handler );", "+        rebuildArrays();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da4ef3c9c88530dc287600b079808574", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "3b1f2fca74ade338347b53d7f450d5dc1bdea0c9", "commitAfterChange": "585ca2b4d92ac5cc3bacfc5aa5ebeeee3fe8659a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected static File[] grabFiles(FileScanner[] scanners)", "signatureAfterChange": "      protected static File[] grabFiles(FileScanner[] scanners,                                        String[][] fileNames)", "diff": ["-        Vector files = new Vector ();", "-        for (int i = 0; i < scanners.length; i++) {", "+", "+    protected static File[] grabFiles(FileScanner[] scanners, ", "+                                      String[][] fileNames) {", "+        Vector files = new Vector();", "+        for (int i = 0; i < fileNames.length; i++) {", "-            String[] ifiles = scanners[i].getIncludedFiles();", "-            for (int j = 0; j < ifiles.length; j++)", "-                files.addElement(new File(thisBaseDir, ifiles[j]));", "+            for (int j = 0; j < fileNames[i].length; j++)", "+                files.addElement(new File(thisBaseDir, fileNames[i][j]));"]}]}