{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "338bcfe91185d9b23ffebf95cfd5e962", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d37cd2950d0f2e252f8a66f4ebc1193", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "6243b5ffe48c2c3f094b97a0356bf4f52a653c31", "commitAfterChange": "cae2d444f7e933d5d55072f4b546b27ce174a720", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "signatureAfterChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-                throw new ExecutionException(\"Ant Library \\\"\" + libraryId", "-                     + \"\\\" is already loaded from \"", "-                     + currentVersion.getDefinitionURL());", "+                // same location?", "+                AntLibrarySpec spec ", "+                    = (AntLibrarySpec) librarySpecs.get(libraryId); ", "+                URL specURL = spec.getLibraryURL();", "+                if (!specURL.equals(currentVersion.getDefinitionURL())) {", "+                    throw new ExecutionException(\"Ant Library \\\"\" + libraryId", "+                         + \"\\\" is already loaded from \"", "+                         + currentVersion.getDefinitionURL() ", "+                         + \" new version found at \" ", "+                         + specURL);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277c0374abc6ea4c5f3b170f23b8a64c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java", "commitBeforeChange": "1b72f9a64919a7aa775038eaf63d8c4c96109ee3", "commitAfterChange": "1b510286c2028c6d9ab28e190e06adb510b93791", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "       public void off_testFailOnError()", "signatureAfterChange": "       public void off_testFailOnError()", "diff": ["-      try {", "-        expectLogContaining(\"testFailOnError\", \"Unable to process image stream\");", "-      }", "-      catch (RuntimeException re){", "-        assertTrue(\"Run time exception should say 'Unable to process image stream'. :\" + re.toString(),re.toString().indexOf(\"Unable to process image stream\") > -1);", "-      }", "+        try {", "+            expectLogContaining(\"testFailOnError\", ", "+                                \"Unable to process image stream\");", "+        }", "+        catch (RuntimeException re){", "+            assertTrue(\"Run time exception should say \"", "+                       + \"'Unable to process image stream'. :\" ", "+                       + re.toString(),", "+                       re.toString()", "+                       .indexOf(\"Unable to process image stream\") > -1);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758d109e3aaec24458da12a86b91ee62", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "7ffe5725b354fcb2af5eb239e2c7ab62adba41d6", "commitAfterChange": "bcc7e3dff34ce66d4f1af34c5d5fbb1603808210", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private String getJonasDescriptorName()", "signatureAfterChange": "     private String getJonasDescriptorName()", "diff": ["-        String jonasDescriptorName; // JOnAS-specific DD", "+        String jonasDN; // JOnAS-specific DD", "-            jonasDescriptorName = path + \"jonas-\" + baseName + \".xml\";", "+            jonasDN = path + \"jonas-\" + baseName + \".xml\";", "-            jonasDescriptorName = path + baseName + \"jonas-\" + remainder;", "+            jonasDN = path + baseName + \"jonas-\" + remainder;", "-        log(\"JOnAS-specific descriptor name: \" + jonasDescriptorName, Project.MSG_VERBOSE);", "+        log(\"JOnAS-specific descriptor name: \" + jonasDN, Project.MSG_VERBOSE);", "-        return jonasDescriptorName;", "+        return jonasDN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8faf31efdcef0ada251fe7ae24cc2542", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "08f2880c54aa3d62423a27e167343dbd563d0633", "commitAfterChange": "873ae06dedf1e003f7aa23fefe8dcaa1e765fbd5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected boolean doValidate(File afile)", "signatureAfterChange": "     protected boolean doValidate(File afile)", "diff": ["-", "+        boolean result = true;", "-            return true;", "-            } else {", "-                log(\"Could not validate document \" + afile + \": \" + ex.toString());", "+            log(\"Could not validate document \" + afile + \": \" + ex.toString());", "+            result = false;", "-", "-            } else {", "-                log(afile + \" is not a valid XML document\", Project.MSG_ERR);", "+            result = false;", "+            log(afile + \" is not a valid XML document\", Project.MSG_ERR);", "-        //if we got here. it was as a result of a caught and logged exception.", "-        return false;", "+        return result;"]}]}