{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d05f16f199a413ee966e679099469c1e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018bf27e308133ac40bf171bf62bf232", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/ZipResource.java", "commitBeforeChange": "4af209f564ee4c3b8408f089a8f23723a99a6704", "commitAfterChange": "a96627738decba56e1c94e54fa23ecbd7bfdb9a2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private synchronized void checkEntry() throws BuildException", "signatureAfterChange": "     protected void fetchEntry()", "diff": ["-", "-    private synchronized void checkEntry() throws BuildException {", "-        if (haveEntry) {", "-            return;", "-        }", "-        String name = getName();", "-        if (name == null) {", "-            throw new BuildException(\"zip entry name not set\");", "-        }", "-        File f = getZipfile();", "-        if (f == null) {", "-            throw new BuildException(\"zipfile attribute not set\");", "-        }", "-        if (!f.exists()) {", "-            throw new BuildException(f.getAbsolutePath() + \" does not exist.\");", "-        }", "-        if (f.isDirectory()) {", "-            throw new BuildException(f + \" denotes a directory.\");", "-        }", "+    protected void fetchEntry() {", "-            z = new ZipFile(f, getEncoding());", "-            setEntry(z.getEntry(name));", "+            z = new ZipFile(getZipfile(), getEncoding());", "+            setEntry(z.getEntry(getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b6c84aa74cf2c15fa6fde55ea81538b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "249962b3e269542ba7558dc63b4b2120aee75860", "commitAfterChange": "e24825b3b81014e025f1181702cff049a41adc65", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean doGet(int logLevel, DownloadProgress progress)             throws IOException", "signatureAfterChange": "     public boolean doGet(int logLevel, DownloadProgress progress)             throws IOException", "diff": ["-        if (source == null) {", "-            throw new BuildException(\"src attribute is required\", getLocation());", "-        }", "+        checkAttributes();", "-        if (dest == null) {", "-            throw new BuildException(\"dest attribute is required\", getLocation());", "-        }", "-", "-        if (dest.exists() && dest.isDirectory()) {", "-            throw new BuildException(\"The specified destination is a directory\",", "-                    getLocation());", "-        }", "-", "-        if (dest.exists() && !dest.canWrite()) {", "-            throw new BuildException(\"Can't write to \" + dest.getAbsolutePath(),", "-                    getLocation());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49d31c37e8cf152ebc00aa6679f196ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "261050f72e9a86e4249c9ee91495ec796f3c382b", "commitAfterChange": "e5f3393251f3b7b8b8df1e5300559828bc73d8f0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public synchronized void setAttribute(String name, String value)", "signatureAfterChange": "     public synchronized void setAttribute(String name, String value)", "diff": ["+        setAttribute(name, (Object) value);", "+    }", "-            this.polyType = value;", "-                attributeMap = new LinkedHashMap();", "-                LinkedHashMap newAttributeMap = new LinkedHashMap();", "-                this.id = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553acb25e0e08763b314262722bbcfdf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/script/ScriptDefBase.java", "commitBeforeChange": "a812b0a411cf480013ea88e0a272d82143be4702", "commitAfterChange": "e00d04fd4a3b08756835d0238168daa01cd701b0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        getScript().executeScript(attributes, nestedElementMap);", "+    }", "-        definition.executeScript(getWrapper(), nestedElements);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad731c2218ac974f86dbb6a7c76971f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "4bbd382ebfff068d180a5fca87a25f623717bc4a", "commitAfterChange": "f6af37217ec11e6f0e72a373dd6d0f4c5edda746", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Javac()", "signatureAfterChange": "     public Javac()", "diff": ["+        facade = new FacadeTaskHelper(assumedJavaVersion());", "+    }", "-            facade = new FacadeTaskHelper(\"javac1.1\");", "-            facade = new FacadeTaskHelper(\"javac1.2\");", "-            facade = new FacadeTaskHelper(\"javac1.3\");", "-            facade = new FacadeTaskHelper(\"javac1.4\");", "-            facade = new FacadeTaskHelper(\"javac1.5\");", "-            facade = new FacadeTaskHelper(\"classic\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ce697f43f2728d99c2e129a4ebef18b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2b925503d71972d8b782eedd6cdf75711377d7b0", "commitAfterChange": "2c4faa154f069f3f69d6c3c95629409a7b8b0cc4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["+        scandir(dir, new TokenizedPath(vpath), fast);", "+    }", "-        scandir(dir, vpath, fast, newfiles, new LinkedList());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781162f61d8dd5fb2bf6a130667bf79a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void addLibPath(String libraryId, URL libPath)          throws ExecutionException", "signatureAfterChange": "     public void addLibPath(String libraryId, URL libPath)          throws AntException", "diff": ["-         throws ExecutionException {", "-        List libPaths = (List) libPathsMap.get(libraryId);", "-        if (libPaths == null) {", "-            libPaths = new ArrayList();", "-            libPathsMap.put(libraryId, libPaths);", "-        }", "-        libPaths.add(libPath);", "-", "-        // If this library already exists give it the new path now", "-        AntLibrary library = (AntLibrary) antLibraries.get(libraryId);", "-        if (library != null) {", "-            libManager.addLibPath(library, libPath);", "-        }", "+         throws AntException {", "+        libManager.addLibPath(libraryId, libPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c9f961a728236d2b3aaab8019cbb10", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "822028744ff977b3588dcc54bafdc1e9e8f98375", "commitAfterChange": "b641968fade3f4f16c1676f2b5f06c6b4344ab08", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        ", "-        if (token == null) {", "-            throw new BuildException(\"replace token must not be null\", location);", "+        validateAttributes();", "+", "+        if (propertyFile != null) {", "+            properties = getProperties(propertyFile);", "-        if (token.getText().equals(\"\")) {", "-            throw new BuildException(\"replace token must not be empty\", location);", "-        }", "-", "-        if (src == null && dir == null) {", "-            throw new BuildException(\"Either the file or the dir attribute must be specified\", location);", "-        }", "-        ", "-        log(\"Replacing \" + token.getText() + \" --> \" + value.getText());", "+        validateReplacefilters();", "-        ", "+", "-            DirectoryScanner ds = super.getDirectoryScanner(dir);", "+        DirectoryScanner ds = super.getDirectoryScanner(dir);", "-                File file = new File(dir,srcs[i]); ", "+                File file = new File(dir,srcs[i]);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bede536efc98f090f07b3460146eba9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "b719b19b85dff26de1653b8856936c0b99afe1ff", "commitAfterChange": "062217277c2cdf426144efb0151eb912ddcd96ab", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected static File getArchiveFile(File home) throws BuildException", "signatureAfterChange": "     protected static File getArchiveFile(File home) throws BuildException", "diff": ["+        return new File(home, ", "+                        ARCHIVE_LOCATIONS[getMajorVersionNumber(home) - 1]);", "+    }", "-        // javacc prior to 2.0", "-        File f = new File(home, \"JavaCC.zip\");", "-        if (f.exists()){", "-          return f;", "-        // javacc install 2.0+", "-        f = new File(home, \"bin/lib/JavaCC.zip\");", "-        if (f.exists()){", "-          return f;", "-        }", "-        throw new BuildException(\"Could not find a path to JavaCC.zip from '\" + home + \"'.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd648b85df14cbbfcf466e87d24482d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "579a1f76bd6eff87405967c4fe523ffe4d9342bb", "commitAfterChange": "803fb00df9e066be53b6bca73efea6fe0d8a83ba", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void validate()             throws BuildException", "signatureAfterChange": "     protected void validate()             throws BuildException", "diff": ["-            throw new BuildException(\"destination file must be specified\");", "+            throw new BuildException(ERROR_NO_DEST_FILE);", "-                \"destination file is a directory\");", "+                    ERROR_DEST_FILE_IS_DIR);", "-        if (url != null && srcFileName != null) {", "-            throw new BuildException(", "-                    \"you can not specify both a source file and a URL\");", "-        }", "-        if (url == null && srcFileName == null) {", "-            throw new BuildException(", "-                    \"you must specify either a source file or a URL\");", "-        }", "-        if (srcFileName != null) {", "-            File srcFile = getProject().resolveFile(srcFileName);", "-            if (!srcFile.exists()) {", "-                throw new BuildException(", "-                    \"source file does not exist\");", "-            }", "-            if (srcFile.isDirectory()) {", "-                throw new BuildException(", "-                    \"source file is a directory\");", "-            }", "-        }", "-", "+        wsdl.validate();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2deef1261e421e72595ad69d5a2f781", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "df25e856f651d0652a66d861f44032368c78ebfb", "commitAfterChange": "30a41589b40d875b84d124885d566d3614e17079", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        validate();", "+        ", "+        // log options used", "+        String enc = encoding == null ? \"default\" : encoding;", "+        log(\"options:\"", "+            + \" eol=\" + filter.getEol().getValue()", "+            + \" tab=\" + filter.getTab().getValue()", "+            + \" eof=\" + filter.getEof().getValue()", "+            + \" tablength=\" + filter.getTablength()", "+            + \" encoding=\" + enc", "+            + \" outputencoding=\"", "+            + (outputEncoding == null ? enc : outputEncoding),", "+            Project.MSG_VERBOSE);", "+        DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "+        String[] files = ds.getIncludedFiles();", "+", "+        for (int i = 0; i < files.length; i++) {", "+            processFile(files[i]);", "+        }", "+    }", "-        // log options used", "-        String enc = encoding == null ? \"default\" : encoding;", "-        log(\"options:\"", "-            + \" eol=\" + filter.getEol().getValue()", "-            + \" tab=\" + filter.getTab().getValue()", "-            + \" eof=\" + filter.getEof().getValue()", "-            + \" tablength=\" + filter.getTablength()", "-            + \" encoding=\" + enc", "-            + \" outputencoding=\"", "-            + (outputEncoding == null ? enc : outputEncoding),", "-            Project.MSG_VERBOSE);", "-", "-        DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "-        String[] files = ds.getIncludedFiles();", "-", "-        for (int i = 0; i < files.length; i++) {", "-            processFile(files[i]);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4664814386c610ba249f0ef8a9577b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FilterChain.java", "commitBeforeChange": "07119705a3be7e0bcf6145d4de1dfd58b42b3734", "commitAfterChange": "abf343291206f3cab8b3436214cc0a88efefcb25", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "          public Object createDynamicElement(String name)", "signatureAfterChange": "      public void add(ChainableReader filter)", "diff": ["-    ", "-    public Object createDynamicElement(String name)", "-    {", "-        if (getProject() == null)", "-            throw new BuildException(\"Unable to get the project\");", "-        Object obj = getProject().createDataType(name);", "-        if (obj == null)", "-            throw new BuildException(\"Unknown type \" + name);", "-        if (! (obj instanceof ChainableReader))", "-            throw new BuildException(", "-                \"type \" + name + \" is not a filterreader\");", "-        filterReaders.addElement(obj);", "-        return obj;", "-    }", "+    public void add(ChainableReader filter) {", "+        filterReaders.addElement(filter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56f112ea271861273c660681915ea9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "f492cc5278c29092c6d1b90491f66839509329d1", "commitAfterChange": "ab0aa53ee1b8cf5058dc8b9ceff1af934f5a7aa7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addTask(Task nestedTask)", "signatureAfterChange": "         public void addTask(Task task)", "diff": ["-    public void addTask(Task nestedTask) {", "-        if (this.nestedTask != null) {", "-        UnknownElement ue = (UnknownElement) nestedTask;", "-        if (!ue.getNamespace().equals(\"\")", "-            || !ue.getTag().equals(\"sequential\")) {", "-            throw new BuildException(\"Unsupported tag \" + ue.getQName());", "-        }", "-        this.nestedTask = ue;", "+         */", "+        public void addTask(Task task) {", "+            nested.add(task);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e04854ca6b77c9fdc6ba6580b67883", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "b5388a13508f06fa8db0823d69fd93b55c51a514", "commitAfterChange": "6fd8df2dc29733f2f2b0d2c844877f26543a0070", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void onTestEnded(TestRunEvent evt)", "signatureAfterChange": "      public void onTestEnded(TestRunEvent evt)", "diff": ["-        Element currentTest = (Element) testElements.get(evt.getName());", "-        if (currentTest == null) {", "+        if (lastTestEvent == null) {", "-            currentTest = (Element) testElements.get(evt.getName());", "-        TestRunEvent start = (TestRunEvent)testStarts.get(evt.getName());", "-        float time = ((evt.getTimeStamp() - start.getTimeStamp()) / 1000.0f);", "-        currentTest.setAttribute(ATTR_TIME, Float.toString(time));", "-        removeEvent(evt);", "+        float time = (evt.getTimeStamp() - lastTestEvent.getTimeStamp()) / 1000.0f;", "+        lastTestElement.setAttribute(ATTR_TIME, Float.toString(time));", "+        lastTestElement = null;", "+        lastTestEvent = null;", "+    }"]}]}