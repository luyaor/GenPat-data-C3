{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "325aad6edeaefbab12a4c44b48bb2102", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d8cfa6cf125165a00e53a952ae0ad42", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "956f4eec6cac8bce92f4c1585829d4c4ff5e31e1", "commitAfterChange": "1af1e04eefdc1cd751ef1286fb680420f6131d19", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "          public int read() throws IOException", "signatureAfterChange": "          public int read() throws IOException", "diff": ["-                if (c == '*') {", "+                if (c == '/') {", "+                    while (c != '\\n') c = in.read();", "+                } else if (c == '*') {", "-                                c = in.read();", "+                                c = read();", "+            if (c == '\"') {", "+                while (true) {", "+                    c = in.read();", "+                    if (c == '\\\\') c = in.read();", "+                    if (c == '\"') {", "+                        c = read();", "+                        break;", "+                    }", "+                }", "+            }", "+            if (c == '\\'') {", "+                c = in.read();", "+                if (c == '\\\\') c = in.read();", "+                c = in.read();", "+                c = read();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b19ac6303804acbb70a29c5c7dddf27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "commitAfterChange": "cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                scanDir(baseDir, new String[] {", "-                        classname.replace('.', File.separatorChar)", "-                        + \".class\" }, adapter.getMapper());", "+                String path = classname.replace('.', File.separatorChar) + \".class\";", "+                File f = new File(baseDir, path);", "+                if (f.isFile()) {", "+                    scanDir(baseDir, new String[] { path }, adapter.getMapper());", "+                } else {", "+                    // Does not exist, so checking whether it is up to date makes no sense.", "+                    // Compilation will fail later anyway, but tests expect a certain output.", "+                    compileList.add(classname);", "+                }"]}]}