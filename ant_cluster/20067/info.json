{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ff1c764be9a52ccac1bd62144bd3ab7", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc6ab3dddf3e131fd58ee3dd714a8ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToFloatConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Float( (String)original ); }", "+        try { return new Float( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-float.error\", object );", "+            throw new ConverterException( message, nfe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b7c4e43413c1d1dbd9dd62bc48800d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToDoubleConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Double( (String)original ); }", "+        try { return new Double( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-double.error\", object );", "+            throw new ConverterException( message, nfe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ceec0048a0d5564decacb420878ab5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToClassConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return Class.forName( (String)original ); }", "+        try { return Class.forName( (String)object ); }", "-            throw new ConverterException( \"Error converting to class type\", e );", "+            final String message = REZ.getString( \"convert.bad-class.error\", object );", "+            throw new ConverterException( message, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d86107a35e5ee0997fd046c33ae10e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToByteConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Byte( (String)original ); }", "+        try { return new Byte( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-byte.error\", object );", "+            throw new ConverterException( message, nfe );", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b5e9231e79a385b8e5a17d9f63bbf30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToShortConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Short( (String)original ); }", "+        try { return new Short( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-short.error\", object );", "+            throw new ConverterException( message, nfe );", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faa50f85faaa7b420544db4f45eb27d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToURLConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new URL( (String)original ); }", "+        try { return new URL( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", mue );", "+            final String message = REZ.getString( \"convert.bad-url.error\", object );", "+            throw new ConverterException( message, mue );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68e5e6c78e9827c413b2413d731fcd4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToLongConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Long( (String)original ); }", "+        try { return new Long( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-long.error\", object );", "+            throw new ConverterException( message, nfe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e349b633f1e288c985a08e15f0262f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToIntegerConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Integer( (String)original ); }", "+        try { return new Integer( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-integer.error\", object );", "+            throw new ConverterException( message, nfe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bafd3711993cf9eb5a9e96db58b04e46", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToFileConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-            return taskContext.resolveFile( (String)original );", "+            return taskContext.resolveFile( (String)object );", "-            throw new ConverterException( \"Error resolving file during conversion\", te );", "+            final String message = REZ.getString( \"convert.bad-file.error\", object );", "+            throw new ConverterException( message, te );"]}]}