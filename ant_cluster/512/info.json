{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fe6dc601a654599c42162cf6d28cb99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6619b5ee42b8e0e6e10303fa1c0b54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "commitAfterChange": "ff41336fc19f549bc995898f4543da6d7e9d9bf9", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     private void checkIncludeAntRuntime(CommandlineJava cmd)", "signatureAfterChange": "     private void checkIncludeAntRuntime(CommandlineJava cmd)", "diff": ["-            Vector v = Execute.getProcEnvironment();", "-            Enumeration e = v.elements();", "-            while (e.hasMoreElements()) {", "-                String s = (String) e.nextElement();", "-                if (s.startsWith(CLASSPATH)) {", "-                    cmd.createClasspath(getProject()).createPath()", "-                        .append(new Path(getProject(),", "-                                         s.substring(CLASSPATH.length()", "-                                                     )));", "-                }", "+            Map/*<String, String>*/ env = Execute.getEnvironmentVariables();", "+            String cp = (String) env.get(CLASSPATH);", "+            if (cp != null) {", "+                cmd.createClasspath(getProject()).createPath()", "+                    .append(new Path(getProject(), cp));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8b2a9d65c4fb5b63dc7d337a146f79b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "commitAfterChange": "ff41336fc19f549bc995898f4543da6d7e9d9bf9", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public int executeAsForked(CommandlineJava commandline,                                ExecuteWatchdog watchdog) throws BuildException", "signatureAfterChange": "     public int executeAsForked(CommandlineJava commandline,                                ExecuteWatchdog watchdog) throws BuildException", "diff": ["-            Vector v = Execute.getProcEnvironment();", "-            Enumeration e = v.elements();", "-            while (e.hasMoreElements()) {", "-                String s = (String) e.nextElement();", "-                if (s.startsWith(\"CLASSPATH=\")) {", "-                    commandline.createClasspath(getProject()).createPath()", "-                        .append(new Path(getProject(),", "-                                         s.substring(\"CLASSPATH=\".length()", "-                                                     )));", "-                }", "+            Map/*<String, String>*/ env = Execute.getEnvironmentVariables();", "+            String cp = (String) env.get(\"CLASSPATH\");", "+            if (cp != null) {", "+                commandline.createClasspath(getProject()).createPath()", "+                    .append(new Path(getProject(), cp));"]}]}