{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcdbf228460a97d7eddf29d7935eec48", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29bf82667ffcf5eb2691ccd8ba03631f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void setValue( final PropertyConfigurer setter,                            final Object object,                            final String value,                            final Context context )         throws Exception", "signatureAfterChange": "     private void setValue( final PropertyConfigurer setter,                            final ConfigurationState state,                            final String value,                            final Context context )         throws CascadingException", "diff": ["-                           final Object object,", "+                           final ConfigurationState state,", "-        throws Exception", "+        throws CascadingException", "-        // Check if the creator method must be used", "-        if( setter.useCreator() )", "-        {", "-            final String message = REZ.getString( \"must-be-element.error\" );", "-            throw new ConfigurationException( message );", "-        }", "-", "-        setter.setValue( object, objValue );", "+        setter.addValue( state, objValue );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a128dc5aa7f8e046f021c6e831b12479", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/property/DefaultPropertyResolver.java", "commitBeforeChange": "e06736172f4319d8d75ef9c4cd2fd6322ab44b4e", "commitAfterChange": "0f1259d2f38c0a759f6d1cc89605baba43c5838f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Object getPropertyValue( final String propertyName,                                        final TaskContext context )         throws TaskException", "signatureAfterChange": "     protected Object getPropertyValue( final String propertyName,                                        final PropertyStore properties )         throws TaskException", "diff": ["-                                       final TaskContext context )", "+                                       final PropertyStore properties )", "-        Object propertyValue = context.getProperty( propertyName );", "-        if ( propertyValue == null )", "-        {", "-            final String message = REZ.getString( \"prop.missing-value.error\", propertyName );", "-            throw new TaskException( message );", "-        }", "-        else", "-        {", "-            return propertyValue;", "-        }", "+        return properties.getProperty( propertyName );"]}]}