{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fc1cc54ab609a5b74d9e8b2ced3710e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d712dcbb4ce218f1444e42f9f2679cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void getVersionDateCommand( Commandline cmd )         throws TaskException", "signatureAfterChange": "     private void getVersionDateCommand( Commandline cmd )         throws TaskException", "diff": ["-            cmd.createArgument().setValue( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + m_FromDate );", "+            cmd.addArgument( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + m_FromDate );", "-            cmd.createArgument().setValue( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + startDate );", "+            cmd.addArgument( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + startDate );", "-            cmd.createArgument().setValue( FLAG_VERSION_DATE + endDate + VALUE_FROMDATE + m_FromDate );", "+            cmd.addArgument( FLAG_VERSION_DATE + endDate + VALUE_FROMDATE + m_FromDate );", "-                cmd.createArgument().setValue( FLAG_VERSION + VALUE_FROMDATE + m_FromDate );", "+                cmd.addArgument( FLAG_VERSION + VALUE_FROMDATE + m_FromDate );", "-                cmd.createArgument().setValue( FLAG_VERSION_DATE + m_ToDate );", "+                cmd.addArgument( FLAG_VERSION_DATE + m_ToDate );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc3b6d0f69b49f4c8236098f0ed3cb6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "1e745fe39610746a046ce2ea1eef71fa15a6ea8e", "commitAfterChange": "38dce34edfdb4041103530c656e12e6ed61e2bd6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void getVersionDateCommand( Commandline cmd )         throws TaskException", "signatureAfterChange": "     private void getVersionDateCommand( Commandline cmd )         throws TaskException", "diff": ["-            cmd.createArgument().setValue( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + m_FromDate );", "+            cmd.addArgument( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + m_FromDate );", "-            cmd.createArgument().setValue( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + startDate );", "+            cmd.addArgument( FLAG_VERSION_DATE + m_ToDate + VALUE_FROMDATE + startDate );", "-            cmd.createArgument().setValue( FLAG_VERSION_DATE + endDate + VALUE_FROMDATE + m_FromDate );", "+            cmd.addArgument( FLAG_VERSION_DATE + endDate + VALUE_FROMDATE + m_FromDate );", "-                cmd.createArgument().setValue( FLAG_VERSION + VALUE_FROMDATE + m_FromDate );", "+                cmd.addArgument( FLAG_VERSION + VALUE_FROMDATE + m_FromDate );", "-                cmd.createArgument().setValue( FLAG_VERSION_DATE + m_ToDate );", "+                cmd.addArgument( FLAG_VERSION_DATE + m_ToDate );"]}]}