{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ab1d65a564eeec9a81881ad9794ea24", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64826855e0a1dec1196986c0f800e0e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "commitAfterChange": "80793a20ada49e7453e836ffeab1e41c8a88d49d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void verifyName( final String name, final Configuration target ) throws Exception", "signatureAfterChange": "      private void verifyTargetName( final String name, final Configuration target )         throws ProjectException", "diff": ["-    private void verifyName( final String name, final Configuration target ) throws Exception", "+    private void verifyTargetName( final String name, final Configuration target )", "+        throws ProjectException", "-            throw new Exception( message );", "+            throw new ProjectException( message );", "-        if( !validName( name ) )", "+        try", "+        {", "+            m_nameValidator.validate( name );", "+        }", "+        catch( Exception e )", "-            throw new Exception( message );", "+            throw new ProjectException( message, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9523285edd9b55f81383dd19249eb082", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "4d492454dde097210c04b4cca33feb56fa0f9554", "commitAfterChange": "80793a20ada49e7453e836ffeab1e41c8a88d49d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void buildProjectRef( final DefaultProject project,                                   final Configuration element,                                   final HashMap projects )         throws Exception", "signatureAfterChange": "      private void buildProjectRef( final DefaultProject project,                                   final Configuration element,                                   final HashMap projects )         throws ProjectException", "diff": ["-        throws Exception", "+        throws ProjectException", "-            throw new Exception( message );", "+            throw new ProjectException( message );", "-        if( !validName( name ) )", "+        try", "+        {", "+            m_nameValidator.validate( name );", "+        }", "+        catch( Exception e )", "-            throw new Exception( message );", "+            throw new ProjectException( message, e );", "-            throw new Exception( message );", "+            throw new ProjectException( message );", "-        final String systemID = file.toURL().toString();", "+        final String systemID = extractURL( file ).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bab2aa96646f83da71ae37d663d29ecd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/IntrospectionHelperTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testElementCreators() throws BuildException", "signatureAfterChange": "      @Test     public void testElementCreators() throws BuildException", "diff": ["+    @Test", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here", "+            //TODO we should be asserting a value in here"]}]}