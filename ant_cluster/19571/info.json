{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9687bbb56a96181c4170907cea79d143", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "091edf1e835c8ad67984fa7aa95d9b34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "f45adb64fe4845bc5e44cea075b39180fbb453a0", "commitAfterChange": "4d402cce79451553a323aa999676782e425000a0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String[] getFilenames()", "signatureAfterChange": "     private String[] getFilenames()", "diff": ["-        final int size = this.filesets.size();", "-        for (int j = 0; j < size; j++) {", "-            FileSet fs = (FileSet) filesets.elementAt(j);", "-            DirectoryScanner ds = fs.getDirectoryScanner(project);", "-            ds.scan();", "-            String[] f = ds.getIncludedFiles();", "-            for (int k = 0; k < f.length; k++) {", "-                String pathname = f[k];", "+\tIterator iter = resources.iterator();", "+\twhile (iter.hasNext()) {", "+\t    Resource r = (Resource) iter.next();", "+\t    if (r.isExists()) {", "+\t\tString pathname = r.getName();", "-            }", "+\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701f49dc895a6bac88be3e360638431a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "519b97d7cf70e486ddcc74dc70285642320ef109", "commitAfterChange": "49727a3da8d30bd6abcb219f140097f4a3b6fe95", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 127, "signatureBeforeChange": "     private void addFileSets(Vector sf)", "signatureAfterChange": "     private void addSourceFiles(Vector sf)", "diff": ["-    private void addFileSets(Vector sf) {", "-        Enumeration e = fileSets.elements();", "-        while (e.hasMoreElements()) {", "-            FileSet fs = (FileSet) e.nextElement();", "+    private void addSourceFiles(Vector sf) {", "+        Iterator e = nestedSourceFiles.iterator();", "+        while (e.hasNext()) {", "+            ResourceCollection rc = (ResourceCollection) e.next();", "+            if (!rc.isFilesystemOnly()) {", "+                throw new BuildException(\"only file system based resources are\"", "+                                         + \" supported by javadoc\");", "+            }", "+            if (rc instanceof FileSet) {", "+                FileSet fs = (FileSet) rc;", "-            File baseDir = fs.getDir(getProject());", "-            DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-            String[] files = ds.getIncludedFiles();", "-            for (int i = 0; i < files.length; i++) {", "-                sf.addElement(new SourceFile(new File(baseDir, files[i])));", "+            }", "+            Iterator iter = rc.iterator();", "+            while (iter.hasNext()) {", "+                sf.addElement(new SourceFile(((FileResource) iter.next())", "+                                             .getFile()));"]}]}