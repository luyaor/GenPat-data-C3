{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fcc77414098542992c65036bfd7a807", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1edb504b964ced7819561afc712723b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java", "commitBeforeChange": "adb10aa72e51f837386530781d2845cdcba3f799", "commitAfterChange": "7cd7c4e5f82cbe8a3fe5d03b7c8ea871a523fdd1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        for (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "-            importFileset((FileSet) e.nextElement());", "+        try {", "+            for (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "+                importFileset((FileSet) e.nextElement());", "+            }", "+        } catch (BuildException ex) {", "+            if (haltOnError) {", "+                throw ex;", "+            } else {", "+                log(ex.toString());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "868a6a41d7957f60d74f39ac1e3e9679", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJExport.java", "commitBeforeChange": "adb10aa72e51f837386530781d2845cdcba3f799", "commitAfterChange": "7cd7c4e5f82cbe8a3fe5d03b7c8ea871a523fdd1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        getUtil().exportPackages(destDir,", "-            patternSet.getIncludePatterns(getProject()),", "-            patternSet.getExcludePatterns(getProject()),", "-            exportClasses, exportDebugInfo,", "-            exportResources, exportSources,", "-            useDefaultExcludes, overwrite);", "+        try {", "+            getUtil().exportPackages(destDir,", "+                patternSet.getIncludePatterns(getProject()),", "+                patternSet.getExcludePatterns(getProject()),", "+                exportClasses, exportDebugInfo,", "+                exportResources, exportSources,", "+                useDefaultExcludes, overwrite);", "+        } catch (BuildException ex) {", "+            if (haltOnError) {", "+                throw ex;", "+            } else {", "+                log(ex.toString());", "+            }", "+        }"]}]}