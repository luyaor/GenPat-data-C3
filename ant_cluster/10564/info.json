{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e4239f8dd893c6a9428511e69a389fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46409e19bb8f706b61e85328b26a251f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private AntConfig getAntConfig(File configArea) throws ConfigException", "signatureAfterChange": "     private AntConfig getAntConfigFile(File configFile)          throws ConfigException, FileNotFoundException", "diff": ["-            File configFile = new File(configArea, \"antconfig.xml\");", "+     */", "+    private AntConfig getAntConfigFile(File configFile)", "+         throws ConfigException, FileNotFoundException {", "+        try {", "-                 + configArea, e);", "+                 + configFile, e);", "-            if (!(e.getCause() instanceof FileNotFoundException)) {", "-                throw new ConfigException(\"Unable to parse config file from \"", "-                     + configArea, e);", "+            if (e.getCause() instanceof FileNotFoundException) {", "+                throw (FileNotFoundException)e.getCause();", "-            // ignore missing config files", "-            return null;", "+", "+            throw new ConfigException(\"Unable to parse config file from \"", "+                 + configFile, e);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b0d3a5da6d4136f2efa3f0625afc080", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private AntConfig getAntConfig(File configArea) throws ConfigException", "signatureAfterChange": "     private AntConfig getAntConfig(File configArea) throws ConfigException", "diff": ["+        File configFile = new File(configArea, \"antconfig.xml\");", "-            File configFile = new File(configArea, \"antconfig.xml\");", "+            return getAntConfigFile(configFile);", "+        } catch (FileNotFoundException e) {", "+            // ignore if files are not present", "+            return null;", "+        }", "+    }", "-                 + configArea, e);", "-            if (!(e.getCause() instanceof FileNotFoundException)) {", "-                throw new ConfigException(\"Unable to parse config file from \"", "-                     + configArea, e);", "-            // ignore missing config files", "-            return null;"]}]}