{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e5f73adcad77cef8b07352a9a49c4cc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553bc8dc24ddc46e77f955edeccf361b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testEntryReference()", "signatureAfterChange": "      @Test     public void testEntryReference() throws IOException, SAXException, TransformerException", "diff": ["-    public void testEntryReference() {", "+    @Test", "+    public void testEntryReference() throws IOException, SAXException, TransformerException {", "-        try {", "-            InputSource result = catalog2.resolveEntity(publicId,", "-                                                        \"nap:chemical+brothers\");", "+        InputSource isResult = catalog2.resolveEntity(publicId,", "+                                                    \"nap:chemical+brothers\");", "-            assertNotNull(result);", "-            assertEquals(toURLString(dtdFile),", "-                         result.getSystemId());", "-        } catch (Exception e) {", "-            fail(\"resolveEntity() failed!\" + e.toString());", "-        }", "+        assertNotNull(isResult);", "+        assertEquals(toURLString(dtdFile),", "+                     isResult.getSystemId());", "-        try {", "+", "-        } catch (Exception e) {", "-            fail(\"resolve() failed!\" + e.toString());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe169ca3e968b5193f0dfd23eca6918f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testNestedCatalog()", "signatureAfterChange": "      @Test     public void testNestedCatalog() throws IOException, SAXException, TransformerException", "diff": ["-    public void testNestedCatalog() {", "+    @Test", "+    public void testNestedCatalog() throws IOException, SAXException, TransformerException {", "-        try {", "-            InputSource result = catalog1.resolveEntity(publicId,", "-                                                        \"nap:chemical+brothers\");", "-            assertNotNull(result);", "-            assertEquals(toURLString(dtdFile),", "-                         result.getSystemId());", "-        } catch (Exception e) {", "-            fail(\"resolveEntity() failed!\" + e.toString());", "-        }", "+        InputSource isResult = catalog1.resolveEntity(publicId,", "+                                                    \"nap:chemical+brothers\");", "+        assertNotNull(isResult);", "+        assertEquals(toURLString(dtdFile),", "+                     isResult.getSystemId());", "-        try {", "-            Source result = catalog.resolve(uri, null);", "-            assertNotNull(result);", "-            assertEquals(toURLString(xmlFile),", "-                         result.getSystemId());", "-        } catch (Exception e) {", "-            fail(\"resolve() failed!\" + e.toString());", "-        }", "+        Source result = catalog.resolve(uri, null);", "+        assertNotNull(result);", "+        assertEquals(toURLString(xmlFile),", "+                     result.getSystemId());"]}]}