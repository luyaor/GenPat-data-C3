{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f26a5a9584a4e806cb521c356777af7c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dd4e7179d640adcc501137f6a612dff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public boolean getUnsafe()", "signatureAfterChange": "     public boolean getUnsafe()", "diff": ["-        return this._unsafe;", "+        return this.unsafe;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f28573da7149cc07b3b14e784ebb750", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void setUnsafe(boolean unsafe)", "signatureAfterChange": "     public void setUnsafe(boolean unsafe)", "diff": ["-        this._unsafe = unsafe;", "+        this.unsafe = unsafe;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0071891b46b6b1b8192e2e1ec8ccff3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected String getUnsafeParameter()", "signatureAfterChange": "     protected String getUnsafeParameter()", "diff": ["-        return _unsafe?\"/unsafe\":null;", "+        return unsafe ? \"/unsafe\" : null;"]}]}