{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a5f9ca9323886e23299127d818c00b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d0e80908d90ffee233607cd052f7356", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/sitraka/CovReport.java", "commitBeforeChange": "69cff8fa828c6ad507c770e5726aebe83668a722", "commitAfterChange": "b6410584b65289fce8b334f40163fa2b6203479d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            final ExecManager execManager = (ExecManager)getService( ExecManager.class );", "-            final Execute exe = new Execute( execManager );", "-            getContext().debug( cmdl.toString() );", "+            final Execute exe = new Execute();", "-            int exitValue = exe.execute();", "-            if( exitValue != 0 )", "-            {", "-                throw new TaskException( \"JProbe Coverage Report failed (\" + exitValue + \")\" );", "-            }", "+            exe.setReturnCode( 0 );", "+            exe.execute( getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef4612472aee392ba35e589346700cec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/TreeBasedTask.java", "commitBeforeChange": "837f7ef785e24137608ba41f850d605b23bccff4", "commitAfterChange": "23e61358c8ed2aa3fe63c1f67082150047f1df9e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public final void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "-            testPreconditions();", "-", "-            Folder starteamrootfolder =", "-            if (null == starteamrootfolder) {", "-                throw new BuildException(", "-                        \"Unable to find root folder in repository.\");", "-            }", "+", "+    public final void execute() throws BuildException {", "+        try {", "+            testPreconditions();", "+", "+            Folder starteamrootfolder = configureRootStarteamFolder();", "-            java.io.File localrootfolder;", "-            if (null == this.rootLocalFolder) {", "-                // use Star Team's default", "-                localrootfolder =", "-                        new java.io.File(starteamrootfolder.getPath());", "-            } else {", "-                // force StarTeam to use our folder", "-                localrootfolder = new java.io.File(getRootLocalFolder());", "-                log(\"overriding local folder to \" + localrootfolder);", "-            }", "+            java.io.File localrootfolder = ", "+                getLocalRootMapping(starteamrootfolder);", "+            // Tell user what he is doing", "+            logOperationDescription(starteamrootfolder, localrootfolder);", "+            ", "+", "+    }"]}]}