{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "799d283906b6114d1eb45c1cff6b8bd7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af337bbdcc20f1fdb826da3b63d16c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "ca86f16776d3ac0f57df0c8a2cde930ea1042b25", "commitAfterChange": "73d3298e62a626fe485cdff4909502598f44f765", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void putNextEntry(TarEntry entry) throws IOException", "signatureAfterChange": "     public void putNextEntry(TarEntry entry) throws IOException", "diff": ["-        final byte[] nameBytes = encoding.encode(entryName).array();", "+        final ByteBuffer encodedName = encoding.encode(entryName);", "+        final int nameLen = encodedName.limit() - encodedName.position();", "-        if (nameBytes.length >= TarConstants.NAMELEN) {", "+        if (nameLen >= TarConstants.NAMELEN) {", "-                longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL", "+                longLinkEntry.setSize(nameLen + 1); // +1 for NUL", "-                write(nameBytes);", "+                write(encodedName.array(), encodedName.arrayOffset(), nameLen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d41442262d2fa01a4a740a663228af8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b", "commitAfterChange": "6d98fbb958f80d5539d053f57019155a88119035", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void putNextEntry(TarEntry entry) throws IOException", "signatureAfterChange": "     public void putNextEntry(TarEntry entry) throws IOException", "diff": ["-        boolean paxHeaderContainsPath = handleLongName(entryName, paxHeaders, \"path\",", "+        boolean paxHeaderContainsPath = handleLongName(entry, entryName, paxHeaders, \"path\",", "-        boolean paxHeaderContainsLinkPath = linkName != null", "-            && handleLongName(linkName, paxHeaders, \"linkpath\",", "+        boolean paxHeaderContainsLinkPath = linkName != null && linkName.length() > 0", "+            && handleLongName(entry, linkName, paxHeaders, \"linkpath\",", "-            writePaxHeaders(entryName, paxHeaders);", "+            writePaxHeaders(entry, entryName, paxHeaders);"]}]}