{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09a99da7cc132e8e7a83e8e64082af06", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9e58370fada651f814ab305a6786ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "4c36f7cb5aca402d90ea046454939860ba5457e8", "commitAfterChange": "4a9c6d79bc91a3a35d222c8f037830feb7de0cfe", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "          public String[] getJavaVariables()             throws TaskException", "signatureAfterChange": "          public String[] getJavaVariables()             throws TaskException", "diff": ["-            String props[] = Environment.toNativeFormat( super.getVariables() );", "+            String props[] = new String[ 0 ];", "+            try", "+            {", "+                props = Environment.toNativeFormat( super.getVariables() );", "+            }", "+            catch( final ExecException ee )", "+            {", "+                throw new TaskException( ee.getMessage(), ee );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "377cf046310788de025a9c29a988731e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/SysProperties.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public String[] getJavaVariables()         throws TaskException", "signatureAfterChange": "     public static String[] getJavaVariables( final EnvironmentData environment )", "diff": ["-    public String[] getJavaVariables()", "-        String props[] = toNativeFormat( super.getVariables() );", "-        for( int i = 0; i < props.length; i++ )", "-        {", "-            props[ i ] = \"-D\" + props[ i ];", "-        }", "-        return props;", "+     */", "+    public static String[] getJavaVariables( final EnvironmentData environment )", "+        return getJavaVariables( environment.getVariables() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b0597519b88717aa3d1f100e0cae64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/SysProperties.java", "commitBeforeChange": "a989b254f04d33e5bc2370b62121bd56830ac2f1", "commitAfterChange": "3fee832d2527f3b952683181980a446b44f5e5bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public String[] getJavaVariables()         throws TaskException", "signatureAfterChange": "     public String[] getJavaVariables()         throws TaskException", "diff": ["+     */", "-        String props[] = new String[ 0 ];", "-        try", "-        {", "-            props = toNativeFormat( super.getVariables() );", "-        }", "-        catch( final ExecException ee )", "-        {", "-            throw new TaskException( ee.getMessage(), ee );", "-        }", "-", "-        if( props == null )", "-        {", "-            return null;", "-        }", "-", "+        String props[] = toNativeFormat( super.getVariables() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79651cfafb3f50ec7a217e2037df82b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java", "commitBeforeChange": "9be3d121b008a13bcef8c1bbd6adfa36a5d9d0e8", "commitAfterChange": "ce9af8263b480d123091720ab334e9c18061f359", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private Date parseDate(final String date)", "signatureAfterChange": "     private Date parseDate(final String date)", "diff": ["-            //final String message = REZ.getString( \"changelog.bat-date.error\", date );", "-            //getContext().error( message );", "-            return null;", "+            try {", "+                return CVS1129_INPUT_DATE.parse(date);", "+            } catch (ParseException e2) {", "+                throw new IllegalStateException(\"Invalid date format: \" + date);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72d181d21ecab0dc7824bc39a250cfa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "4c36f7cb5aca402d90ea046454939860ba5457e8", "commitAfterChange": "4a9c6d79bc91a3a35d222c8f037830feb7de0cfe", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "          public String[] getJavaVariables()             throws TaskException", "signatureAfterChange": "          public String[] getJavaVariables()             throws TaskException", "diff": ["-            String props[] = Environment.toNativeFormat( super.getVariables() );", "+            String props[] = new String[ 0 ];", "+            try", "+            {", "+                props = Environment.toNativeFormat( super.getVariables() );", "+            }", "+            catch( final ExecException ee )", "+            {", "+                throw new TaskException( ee.getMessage(), ee );", "+            }"]}]}