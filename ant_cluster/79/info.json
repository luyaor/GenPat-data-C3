{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80379480fb628b3d6af6860504c7e73b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "052dfb226bdac829f38d65fb40d8af68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileObject.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void delete() throws FileSystemException", "signatureAfterChange": "     public void delete( final FileSelector selector ) throws FileSystemException", "diff": ["-    public void delete() throws FileSystemException", "+    public void delete( final FileSelector selector ) throws FileSystemException", "-        // Recursively delete this file and all its children", "-        List queue = new ArrayList();", "-        Set expanded = new HashSet();", "-        queue.add( this );", "+        // Locate all the files to delete", "+        ArrayList files = new ArrayList();", "+        findFiles( selector, true, files );", "-        // Recursively delete each file", "-        // TODO - recover from errors", "-        while( queue.size() > 0 )", "+        // Delete 'em", "+        final int count = files.size();", "+        for( int i = 0; i < count; i++ )", "-            AbstractFileObject file = (AbstractFileObject)queue.get( 0 );", "+            final AbstractFileObject file = (AbstractFileObject)files.get( i );", "-            if( file.m_type == null )", "+            // If the file is a folder, make sure all its children have been deleted", "+            if( file.m_type == FileType.FOLDER && file.getChildren().length != 0 )", "-                // Shouldn't happen", "-                queue.remove( 0 );", "+                // Skip", "+                continue;", "-            else if( file.m_type == FileType.FILE )", "-            {", "-                // Delete the file", "-                file.deleteSelf();", "-                queue.remove( 0 );", "-            }", "-            else if( expanded.contains( file ) )", "-            {", "-                // Have already deleted all the children of this folder -", "-                // delete it", "-                file.deleteSelf();", "-                queue.remove( 0 );", "-            }", "-            else", "-            {", "-                // Delete the folder's children", "-                FileObject[] children = file.getChildren();", "-                for( int i = 0; i < children.length; i++ )", "-                {", "-                    FileObject child = children[ i ];", "-                    queue.add( 0, child );", "-                }", "-                expanded.add( file );", "-            }", "-        }", "-        // Update parent's child list", "-        notifyParent();", "+            // Delete the file", "+            file.deleteSelf();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57e8f22d398be2aee41f30a68f813da6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/AbstractFileObject.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void copy( final FileObject file ) throws FileSystemException", "signatureAfterChange": "     public void copyFrom( final FileObject file, final FileSelector selector )         throws FileSystemException", "diff": ["+     */", "+    public void copyFrom( final FileObject file, final FileSelector selector )", "+        throws FileSystemException", "+    {", "+        if( !file.exists() )", "+        {", "+            final String message = REZ.getString( \"copy-missing-file.error\", file.getName() );", "+            throw new FileSystemException( message );", "+        }", "+        if( isReadOnly() )", "+        {", "+            final String message = REZ.getString( \"copy-read-only.error\", file.getType(), file.getName(), m_name );", "+            throw new FileSystemException( message );", "+        }", "+", "+        // Locate the files to copy across", "+        final ArrayList files = new ArrayList();", "+        ( (AbstractFileObject)file ).findFiles( selector, false, files );", "+", "+        // Copy everything across", "+        final int count = files.size();", "+        for( int i = 0; i < count; i++ )", "+        {", "+            final FileObject srcFile = (FileObject)files.get( i );", "+", "+            // Determine the destination file", "+            final String relPath = file.getName().getRelativeName( srcFile.getName() );", "+            final FileObject destFile = resolveFile( relPath, NameScope.DESCENDENT_OR_SELF );", "+", "+            // Clean up the destination file, if necessary", "+            if( destFile.exists() && destFile.getType() != srcFile.getType() )", "+            {", "+                // The destination file exists, and is not of the same type,", "+                // so delete it", "+                // TODO - add a pluggable policy for deleting and overwriting existing files", "+                destFile.delete( FileConstants.SELECT_ALL );", "+            }", "+", "+            // Copy across", "+            if( srcFile.getType() == FileType.FILE )", "+            {", "+                copyContent( srcFile, destFile );", "+            }", "+            else", "+            {", "+                destFile.create( FileType.FOLDER );", "+            }", "+        }", "+    }", "-    public void copy( final FileObject file ) throws FileSystemException", "-            final InputStream instr = file.getContent().getInputStream();", "-                // Create the output strea via getContent(), to pick up the", "-                final OutputStream outstr = getContent().getOutputStream();", "-            final String message = REZ.getString( \"copy-file.error\", file.getName(), m_name );"]}]}