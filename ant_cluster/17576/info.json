{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2dfe2f7277b904d821ffc952e9c86c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa5c31f4027df16c81cecf465041c40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "6c40e0ca77d68418106ebd401936949e61e152bd", "commitAfterChange": "47dce162e8c5dbd403a4456eb427ae439171ca99", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure)", "signatureAfterChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure)", "diff": ["+     */", "+        this(test, haltOnError, haltOnFailure, null);", "+    }", "-            Class testClass = Class.forName(test.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6448e0f8dfca26582b46de6016791f6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "e5235423ccd494cb7516a1df6e3e13a74a22b767", "commitAfterChange": "da5a13f8e4e0e4475f942b5ae5670271b711d423", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 32, "signatureBeforeChange": "     protected void configureLiaison(File stylesheet) throws BuildException", "signatureAfterChange": "     protected void configureLiaison(File stylesheet) throws BuildException", "diff": ["-            if (outputtype != null) {", "-                liaison.setOutputtype(outputtype);", "-            }", "+            if (liaison instanceof TraXLiaison) {", "+                configureTraXLiaison((TraXLiaison)liaison);", "+            }", "-            log(\"Failed to read stylesheet \" + stylesheet, Project.MSG_INFO);", "+            log(\"Failed to transform using stylesheet \" + stylesheet, Project.MSG_INFO);", "+    }", "-        try {", "-            // if liaison is a TraxLiason, use XMLCatalog as the entity", "-            // resolver and URI resolver", "-            if (liaison.getClass().getName().equals(TRAX_LIAISON_CLASS) &&", "-                xmlCatalog != null) {", "-                log(\"Configuring TraxLiaison: setting entity resolver \" +", "-                    \"and setting URI resolver\", Project.MSG_DEBUG);", "-                Method resolver = liaison.getClass()", "-                    .getDeclaredMethod(\"setEntityResolver\",", "-                                       new Class[] {EntityResolver.class});", "-                resolver.invoke(liaison, new Object[] {xmlCatalog});", "-                resolver = liaison.getClass()", "-                    .getDeclaredMethod(\"setURIResolver\",", "-                                       new Class[] {loadClass(\"javax.xml.transform.URIResolver\")});", "-                resolver.invoke(liaison, new Object[] {xmlCatalog});", "-            }", "-        } catch (Exception e) {", "-            throw new BuildException(\"Failed to configure XMLCatalog for \"", "-                                     + \"TraxLiaison\", e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c2014ab7275ea9902bfb7e10a22396", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "89531ee35458b1c34de19d32cde979948ec4c70b", "commitAfterChange": "66676d22f4163163a8f7b567577705159d7d4d60", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure,                            boolean showOutput, ClassLoader loader)", "signatureAfterChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure,                            boolean showOutput, ClassLoader loader)", "diff": ["-", "-        try {", "-            Class testClass = null;", "-            if (loader == null) {", "-                testClass = Class.forName(test.getName());", "-            } else {", "-                testClass = Class.forName(test.getName(), true, loader);", "-            }", "-", "-            Method suiteMethod = null;", "-            try {", "-                // check if there is a suite method", "-                suiteMethod = testClass.getMethod(\"suite\", new Class[0]);", "-            } catch (NoSuchMethodException e) {", "-                // no appropriate suite method found. We don't report any", "-                // error here since it might be perfectly normal.", "-            }", "-            if (suiteMethod != null) {", "-                // if there is a suite method available, then try", "-                // to extract the suite from it. If there is an error", "-                // here it will be caught below and reported.", "-                suite = (Test) suiteMethod.invoke(null, new Class[0]);", "-            } else {", "-                // try to extract a test suite automatically", "-                // this will generate warnings if the class is no suitable Test", "-                suite = new TestSuite(testClass);", "-            }", "-", "-        } catch (Exception e) {", "-            retCode = ERRORS;", "-            exception = e;", "-        }", "+        this.loader = loader;"]}]}