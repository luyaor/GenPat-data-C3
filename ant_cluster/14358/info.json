{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "edc3316a24fb7112abe13c18a52decdf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a067a0c6a37c3db90ada9f2eecee404", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/Message.java", "commitBeforeChange": "39b1929142d8d29f58b4654edf13d677e3959dcb", "commitAfterChange": "416d46165ba953cbc74387d62e82515e8180208a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void print(PrintStream out)          throws IOException", "signatureAfterChange": "     public void print(PrintStream ps)          throws IOException", "diff": ["-    public void print(PrintStream out)", "+    public void print(PrintStream ps)", "+        // We need character encoding aware printing here.", "+        // So, using PrintWriter over OutputStreamWriter instead of PrintStream", "+        PrintWriter out = charset!=null?", "+                          new PrintWriter(new OutputStreamWriter(ps,charset)):", "+                          new PrintWriter(ps);", "-", "+        out.flush();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0866a0c906d6546e2e0f5d27d878891", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "dc2e0846ac0b71caf2bfc3e6b24042c87062ebc8", "commitAfterChange": "1e57e83036edb25a9106c8eb30bbb0183a6f44ed", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 18, "signatureBeforeChange": "          protected XSLTLiaison getLiaison()", "signatureAfterChange": "          protected XSLTLiaison getLiaison()", "diff": ["-            try {", "-                setProcessor(\"trax\");", "-            } catch (Throwable e1) {", "+            if (processor != null) {", "-                    setProcessor(\"xslp\");", "-                } catch (Throwable e2) {", "+                    resolveProcessor(processor);", "+                } catch (Exception e) {", "+                    throw new BuildException(e);", "+                }", "+            } else {", "+                try {", "+                    resolveProcessor(\"trax\");", "+                } catch (Throwable e1) {", "-                        setProcessor(\"xalan\");", "-                    } catch (Throwable e3) {", "-                        e2.printStackTrace();", "-                        e3.printStackTrace();", "-                        throw new BuildException(e1);", "+                        resolveProcessor(\"xslp\");", "+                    } catch (Throwable e2) {", "+                        try {", "+                            resolveProcessor(\"xalan\");", "+                        } catch (Throwable e3) {", "+                            e3.printStackTrace();", "+                            e2.printStackTrace();", "+                            throw new BuildException(e1);", "+                        }"]}]}