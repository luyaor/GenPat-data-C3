{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f6aaae15f74d4eeb9fdc8d88901be51", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33422210f658811669feff0a7be5f7f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TypeSelector.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["-                if (TYPE_KEY.equalsIgnoreCase(paramname)) {", "+                if (paramname != null) {", "+                    paramname = paramname.toLowerCase(Locale.ENGLISH);", "+                }", "+                if (TYPE_KEY.equals(paramname)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f703a9a72a4c46089304df74cbbd33a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/AbstractScriptComponent.java", "commitBeforeChange": "14805c9fcdf4b354aed1f746c7076d49cb6634f8", "commitAfterChange": "a757f30ad3e2467dfebaa5b535a50108f810fd4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void initScriptRunner()", "signatureAfterChange": "     protected void initScriptRunner()", "diff": ["-        getRunner().bindToComponent(this);", "+        if (runner != null) {", "+            return;", "+        }", "+        helper.setProjectComponent(this);", "+        runner = helper.getScriptRunner();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7a1c25b591f3ed46c3206d249f6985", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "6aa8641eafee512136fd140957f859be03b10950", "commitAfterChange": "594d2dd6c891e638a4a9ce006a8167594b0cabf6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "diff": ["+            Object parent=null;", "+            if( parentWrapper!=null ) {", "+                parent=parentWrapper.getProxy();", "+            }", "+", "+            if( parent != null ) {", "+                // nested elements. Backward compatibilitiy - only nested elements", "+                // are lower cased in the original processor", "+                qname=qname.toLowerCase( Locale.US );", "+                // XXX What about nested elements that are inside TaskContainers ?", "+                // We can't know that that we need lowercase until we know", "+                // parent is not a TaskContainer. Maybe this test should", "+                // be done in UnknownElement.", "+", "+                // Note: the original code seems to have a similar problem: the lowercase", "+                // conversion happens only inside ProjectHelper, if we know that the", "+                // parent is not TaskContainer. If the parent is not known - UE are used", "+                // and AFAIK there is no code to deal with that, so the conversion will be", "+                // different based on context ( if the enclosing task is taskdefed in target", "+                // or known at top level ).", "+            }", "+            ", "-", "-            Object parent=null;", "-            if( parentWrapper!=null ) {", "-                parent=parentWrapper.getProxy();", "-            }"]}]}