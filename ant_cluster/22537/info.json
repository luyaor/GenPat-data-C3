{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5a8e7fbcf050ed84c27bdad7f803030", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9ce844066531d340b02d63bfa0cbf2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "d15c92db595b65d5c6d1a53efcfc4b5ab5ab2e0c", "commitAfterChange": "642439097046132c508bad3827559fe5fb709926", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-                        srcChannel.transferTo(position, chunk,", "-                                              destChannel);", "+                        destChannel.transferFrom(srcChannel, position, chunk);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c6af54f16883c8e9b707935930dfa1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "75be43a0db87407b5342e80fb809b42f618a4c4b", "commitAfterChange": "a22c8c09c83a3a684cd003cf0661c7913291640f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "signatureAfterChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "diff": ["-            proj.addBuildListener(entry);", "+            entry.setProject(proj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e15d0874deb4ebd37b1f262105310f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "bb34e52397404ec167b21c72a47e4238d19893c2", "commitAfterChange": "caa574d58ebc1d89880f000bd4c00cace74332a0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected FileSet getRef(Project p)", "signatureAfterChange": "     protected FileSet getRef(Project p)", "diff": ["-        if (!o.getClass().equals(getClass())) {", "+        if (!getClass().isAssignableFrom(o.getClass())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6994513628861c7e290e6f9ddfa2e5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "bfa0ded769f1a10b04868adb7930ae8d0fe5a610", "commitAfterChange": "326b38f70193a95c9ef8371a727747fe0a5fecb5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public static boolean isContextRelativePath(String filename)", "signatureAfterChange": "     public static boolean isContextRelativePath(String filename)", "diff": ["-                && filename.indexOf(':') == 1", "+                && filename.charAt(1) == ':'"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b406d8453fdc4339c3660be32d0160", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Condition.java", "commitBeforeChange": "3711bbb13c7e1bdebf4d0f869f04e58390a627a6", "commitAfterChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public boolean evaluate( final TaskContext context )         throws ContextException", "signatureAfterChange": "      public boolean evaluate( final TaskContext context )         throws TaskException", "diff": ["-        throws ContextException", "+        throws TaskException", "-        catch( final TaskException te )", "+        catch( final ContextException ce )", "+            // Unknown property"]}]}