{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3a57fa7aea70dd5f89f148a299a2ae3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3eeca342978da2de034fe5397d2d8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "243adc40d5157fb5e35de58bb84a5df99af4baa7", "commitAfterChange": "8513609d9c7d547fa4907dde0522e409b0018095", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private Transformer newTransformer() throws Exception", "signatureAfterChange": "     private void createTransformer() throws Exception", "diff": ["-    private Transformer newTransformer() throws Exception {", "-        InputStream xslStream = new BufferedInputStream(", "-                new FileInputStream(stylesheet));", "-            Templates templates = getFactory().newTemplates(src);", "-            Transformer transformer = templates.newTransformer();", "-", "-            // configure the transformer...", "-            transformer.setErrorListener(this);", "-            if (uriResolver != null) {", "-                transformer.setURIResolver(uriResolver);", "-            }", "-            for (int i = 0; i < params.size(); i++) {", "-                final String[] pair = (String[]) params.elementAt(i);", "-                transformer.setParameter(pair[0], pair[1]);", "-            }", "-            for (int i = 0; i < outputProperties.size(); i++) {", "-                final String[] pair = (String[]) outputProperties.elementAt(i);", "-                transformer.setOutputProperty(pair[0], pair[1]);", "-            }", "-            return transformer;", "-            try {", "-            } catch (IOException ignored) {", "+     */", "+    private void createTransformer() throws Exception {", "+        if (templates == null) {", "+            readTemplates();", "+        }", "+", "+        transformer = templates.newTransformer();", "+", "+        // configure the transformer...", "+        transformer.setErrorListener(this);", "+        if (uriResolver != null) {", "+            transformer.setURIResolver(uriResolver);", "+        }", "+        for (int i = 0; i < params.size(); i++) {", "+            final String[] pair = (String[]) params.elementAt(i);", "+            transformer.setParameter(pair[0], pair[1]);", "+        }", "+        for (int i = 0; i < outputProperties.size(); i++) {", "+            final String[] pair = (String[]) outputProperties.elementAt(i);", "+            transformer.setOutputProperty(pair[0], pair[1]);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643b26a5c4c884abfb917fbd1a1fd835", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "649af7a77f9c8b06e2d92f2e07423cef7b88e400", "commitAfterChange": "2bf735118217ed87488f9e5519c5122da48c5e43", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void initValidator()", "signatureAfterChange": "     protected void initValidator()", "diff": ["-    private void initValidator() {", "+    protected void initValidator() {", "+        xmlReader=createXmlReader();", "+", "+        xmlReader.setEntityResolver(getEntityResolver());", "+        xmlReader.setErrorHandler(errorHandler);", "+", "+        if (!isSax1Parser()) {", "+            // turn validation on", "+            if (!lenient) {", "+                setFeature(XmlConstants.FEATURE_VALIDATION, true);", "+            }", "+            // set the feature from the attribute list", "+            for (int i = 0; i < attributeList.size(); i++) {", "+                Attribute feature = (Attribute) attributeList.elementAt(i);", "+                setFeature(feature.getName(), feature.getValue());", "+", "+            }", "+", "+            // Sets properties", "+            for (int i = 0; i < propertyList.size(); i++) {", "+                final Property prop = (Property) propertyList.elementAt(i);", "+                setProperty(prop.getName(), prop.getValue());", "+            }", "+        }", "+    }", "-            try {", "-                reader = JAXPUtils.getXMLReader();", "-            } catch (BuildException exc) {", "-                reader = JAXPUtils.getParser();", "-            }", "-            xmlReader = (XMLReader) reader;", "-                xmlReader = new ParserAdapter((Parser) reader);", "-        xmlReader.setEntityResolver(getEntityResolver());", "-        xmlReader.setErrorHandler(errorHandler);", "-", "-        if (!(xmlReader instanceof ParserAdapter)) {", "-            // turn validation on", "-            if (!lenient) {", "-                setFeature(\"http://xml.org/sax/features/validation\", true);", "-            }", "-            // set the feature from the attribute list", "-            for (int i = 0; i < attributeList.size(); i++) {", "-                Attribute feature = (Attribute) attributeList.elementAt(i);", "-                setFeature(feature.getName(), feature.getValue());", "-", "-            }", "-", "-            // Sets properties", "-            for (int i = 0; i < propertyList.size(); i++) {", "-                final Property prop = (Property) propertyList.elementAt(i);", "-                setProperty(prop.getName(), prop.getValue());", "-            }"]}]}