{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf7e3c366901ac65ecc97b7048f71328", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e51983cc44604d08c486e6ece899776", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/WeakishReference.java", "commitBeforeChange": "122c6ddd9ee015a8638b9143815d3289badfdf04", "commitAfterChange": "fb773596657265aa101b7513a2374aab27afbbd9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static WeakishReference createReference(Object object)", "signatureAfterChange": "     public static WeakishReference createReference(Object object)", "diff": ["-        if (referenceConstructor == null) {", "-            createReferenceConstructor();", "-        }", "-        try {", "-            return (WeakishReference) referenceConstructor", "-                        .newInstance(new Object[]{object});", "-        } catch (Exception e) {", "-            throw new BuildException(\"while creating a weakish reference\", e);", "-        }", "+            return new WeakishReference12(object);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78cf2d30d26f29354f3290858bd1edd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LoaderUtils.java", "commitBeforeChange": "d6ae851614fdd338ece0f76246e8b4939f0126f6", "commitAfterChange": "b66c87eff7277caeedb01e50a986b70a0d0687aa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void setContextClassLoader(ClassLoader loader)", "signatureAfterChange": "     public static void setContextClassLoader(ClassLoader loader)", "diff": ["-        if (setContextClassLoader == null) {", "-            return;", "-        }", "-", "-        try {", "-            Thread currentThread = Thread.currentThread();", "-            setContextClassLoader.invoke(currentThread,", "-                new Object[]{loader});", "-        } catch (IllegalAccessException e) {", "-            throw new BuildException", "-                (\"Unexpected IllegalAccessException\", e);", "-        } catch (InvocationTargetException e) {", "-            throw new BuildException", "-                (\"Unexpected InvocationTargetException\", e);", "-        }", "-", "+        Thread currentThread = Thread.currentThread();", "+        currentThread.setContextClassLoader(loader);"]}]}