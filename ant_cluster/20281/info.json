{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f39efae72b80c6bbceaafba7ca249897", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c68d53a6d35b02ca028a3ef6dd29d30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "84d14bfb72b481348097d71c76c1e47253a8660c", "commitAfterChange": "1038e813e3eccdf970c5a2a82d8b0286370f4270", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public synchronized void setAttribute(String name, String value)", "signatureAfterChange": "     public synchronized void setAttribute(String name, String value)", "diff": ["-            if (attributeNames == null) {", "-                attributeNames = new ArrayList();", "-                attributeMap = new HashMap();", "+            if (attributeMap == null) {", "+                attributeMap = new LinkedHashMap();", "-            if (name.equalsIgnoreCase(\"refid\")) {", "-                attributeNames.add(0, name);", "+            if (name.equalsIgnoreCase(\"refid\") && !attributeMap.isEmpty()) {", "+                LinkedHashMap newAttributeMap = new LinkedHashMap();", "+                newAttributeMap.put(name, value);", "+                newAttributeMap.putAll(attributeMap);", "+                attributeMap = newAttributeMap;", "-                attributeNames.add(name);", "+                attributeMap.put(name, value);", "-            attributeMap.put(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d105a394c5a1625deccc3e43514ad18a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "2fe8b860c0001d234880e9b27e8f8c7fef14de5c", "commitAfterChange": "64886360cf0d83287454a0b04a6613c3f47c0e7d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private String getAttributeName (Node attributeNode)", "signatureAfterChange": "     private String getAttributeName (Node attributeNode)", "diff": ["-            // Otherwise, return it appended unless property to hide it is set.", "-            } else if (!isSemanticAttribute(attributeName)", "-                       || includeSemanticAttribute) {", "-                return \".\" + attributeName;", "-            } else {", "-                return \"\";", "-        } else if (collapseAttributes) {", "-            return \".\" + attributeName;", "-        } else {", "-            return \"(\" + attributeName + \")\";", "+            // Otherwise, return it appended unless property to hide it is set.", "+            if (!isSemanticAttribute(attributeName) || includeSemanticAttribute) {", "+                return \".\" + attributeName;", "+            }", "+            return \"\";", "+        return collapseAttributes ? \".\" + attributeName : \"(\" + attributeName + \")\";"]}]}