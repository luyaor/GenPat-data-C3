{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de568d16b4effe0cecf2c34a2c719820", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d1ad2d74f2d9770a0623fd3d974ff3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/build/Checksum.java", "commitBeforeChange": "67d542191a40e64a06ac9e54e42216048d729254", "commitAfterChange": "2e60e0841cb84a45444da250e84915237a686940", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private boolean z( final File src, boolean checksumMatches )         throws TaskException", "signatureAfterChange": "      private boolean z( final File src, final boolean checksumMatches )         throws TaskException", "diff": ["-    private boolean z( final File src, boolean checksumMatches )", "+    private boolean z( final File src, final boolean checksumMatches )", "+        boolean match = checksumMatches;", "-            String checksum = \"\";", "+            final StringBuffer sb = new StringBuffer();", "-                    checksum += \"0\";", "+                    sb.append( '0' );", "-                checksum += hexStr;", "+                sb.append( hexStr );", "+            final String checksum = sb.toString();", "+", "-            Object destination = m_includeFileMap.get( src );", "+            final Object destination = m_includeFileMap.get( src );", "-                checksumMatches = checksum.equals( m_property );", "+                match = checksum.equals( m_property );", "-        return checksumMatches;", "+        return match;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd8db02d826573a2d32c2e9ac62e6983", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java", "commitBeforeChange": "bbdd61de1fc1d3f7a84cb56e231fecc0baa61f32", "commitAfterChange": "737d0434c862c289ce80c962c4ceace7395f4360", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                SetProxy sp = new SetProxy();", "+                sp.setProxyHost(proxy);", "+                if (port != null) {", "+                    sp.setProxyPort(Integer.parseInt(port));", "+                }", "+                sp.setProxyUser(user);", "+                sp.setProxyPassword(password);", "+                sp.applyWebProxySettings();", "+", "-                    System.getProperties().put(\"http.proxyHost\", proxy);", "-                    System.getProperties().put(\"http.proxyPort\", port);", "-                    System.getProperties().put(\"http.proxyHost\", \"\");", "-                    System.getProperties().put(\"http.proxyPort\", \"\");"]}]}