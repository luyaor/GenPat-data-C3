{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14274262baf6fdeecdee19568c1ae690", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e81931e29664ba555df48aae5ba1e1d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MatchingTask.java", "commitBeforeChange": "8de96cafd7f3f5a23fe1e03f5325d0a7f2b7f006", "commitAfterChange": "7f93c6c464471c53f323dd190182b1cd3bd9fb2e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setIgnore(String ignoreString)", "signatureAfterChange": "     public void setIgnore(String ignoreString)", "diff": ["-                tmpExcludes.addElement(\"**/\"+tok.nextToken().trim()+\"/**\");", "+                addExclude().setName(\"**/\"+tok.nextToken().trim()+\"/**\");", "-            this.excludes = new String[tmpExcludes.size()];", "-            for (int i = 0; i < tmpExcludes.size(); i++) {", "-                this.excludes[i] = (String)tmpExcludes.elementAt(i);", "-            }", "-        } else {", "-            this.excludes = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23238fc50ffb1104d22db04409f06cda", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private InputStream loadResource(String name)", "signatureAfterChange": "     private InputStream loadResource(String name)", "diff": ["-        String[] pathElements = classpath.list();", "-        for (int i = 0; i < pathElements.length && stream == null; ++i) {", "-            try {", "-                File pathComponent = project.resolveFile((String)pathElements[i]);", "-                stream = getResourceStream(pathComponent, name);", "-            }", "-            catch (BuildException e) {", "-                // ignore path elements which are invalid relative to the project", "-            }", "+        for (Enumeration e = pathComponents.elements(); e.hasMoreElements() && stream == null; ) {", "+            File pathComponent = (File)e.nextElement();", "+            stream = getResourceStream(pathComponent, name);", "-"]}]}