{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e73d2bcaceb47a0a95661c7b0787e9b0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0264e7cbc52eda7da07cc4149707d62e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/launch/LocatorTest.java", "commitBeforeChange": "50333ecba9313e1b0b85368279daf50e5b7db649", "commitAfterChange": "74fb3d870dc2bb95466ba7672eb63ff3d106ad96", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testInternationalURI() throws Exception", "signatureAfterChange": "      public void testInternationalURI() throws Exception", "diff": ["+        assertEquals(\"file:/tmp/a%C3%A7a%C3%AD%20berry\", Locator.encodeURI(\"file:/tmp/a\\u00E7a\\u00ED berry\"));", "+        assertEquals(\"file:/tmp/a\\u00E7a\\u00ED berry\", Locator.decodeUri(\"file:/tmp/a%C3%A7a%C3%AD%20berry\"));", "+        assertEquals(\"file:/tmp/a\\u00E7a\\u00ED berry\", Locator.decodeUri(\"file:/tmp/a\\u00E7a\\u00ED%20berry\")); // #50543", "+        assertEquals(\"file:/tmp/hezky \\u010Desky\", Locator.decodeUri(\"file:/tmp/hezky%20\\u010Desky\")); // non-ISO-8859-1 variant"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0310461653150c52be62d1c3fa295f54", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfigHandler.java", "commitBeforeChange": "06ea1d271a3c3557c120e36c2df913050317cb53", "commitAfterChange": "42d4199104ee00135db43ba0d7b320244c666a3f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void processElement(String elementName)          throws SAXParseException", "signatureAfterChange": "     public void processElement(String elementName)          throws SAXParseException", "diff": ["-    }", "+        config.allowRemoteLibs(getBooleanAttribute(REMOTE_LIBRARY_ATTR));", "+        config.allowRemoteProjects(getBooleanAttribute(REMOTE_PROJECT_ATTR));", "+        config.allowUnsetProperties(getBooleanAttribute(UNSET_PROPS_ATTR));", "+    }        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0391b9672f39a8712aa9ff924724817f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/MailLogger.java", "commitBeforeChange": "c43123e21ddaad693a9a6fd4cdf9a7e015f56b36", "commitAfterChange": "43166e68847e0e309441e5aaba7c93d9e331f2cf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void sendMimeMail(Project project, Values values, String message)", "signatureAfterChange": "     private void sendMimeMail(Project project, Values values, String message)", "diff": ["-        // convert the replyTo string into a vector of emailaddresses", "+        // convert the replyTo string into a vector of emailaddresses", "+        mymessage.setMimeType(values.mimeType());", "+        if (values.charset().length() > 0) {", "+            mymessage.setCharset(values.charset());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4ed286672e32fbdff062cf3e7d0087", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/MutantBuilder.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void main(BuildHelper helper)", "signatureAfterChange": "     protected void setup_conf(BuildHelper helper)", "diff": ["+    }", "+    protected void setup_conf(BuildHelper helper) {", "+        helper.runDepends(this, \"setup_conf\", \"\");", "+        System.out.println(\"setup-conf: \");", "+        helper.mkdir(\"${dist.conf}\");", "+        helper.copyFileset(\"${conf.dir}/\", \"${dist.conf}\");", "-    }", "-    protected void main(BuildHelper helper) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dbf21fdbe1005ca9ec506358e441e4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/testing/Funtest.java", "commitBeforeChange": "6b472602fcf0b403556f89ce4c3a0a144dfc97e0", "commitAfterChange": "8d0bd81aaef83b8e46eb962d9e8ef0b5953fad4b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        //before anything else, check the condition", "+        //validation", "+        validateTask(setup, \"setup\");", "+        validateTask(application, \"application\");", "+        validateTask(tests, \"tests\");", "+        validateTask(reporting, \"reporting\");", "+        validateTask(teardown, \"teardown\");", "+", "+        //check the condition", "-            testRun.addTask(new TaskAdapter(block));", "+            TaskAdapter ta = new TaskAdapter(block);", "+            ta.bindToOwner(this);", "+            validateTask(ta, \"block\");", "+            testRun.addTask(ta);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8d0ec9af97b3ae5c71ed83a609b1fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/About.java", "commitBeforeChange": "71cd7defed7816e61f8779e3605e5e808933475d", "commitAfterChange": "7fadc50ca4662547852d6554b37490c41e9bf2e9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic About(AppContext context)", "signatureAfterChange": " \tpublic About(AppContext context)", "diff": ["-            buf.append(\"<P>\\n\");", "+            buf.append(\"<br>\\n\");", "-\t\tJLabel contents = new JLabel(message);", "+        JTextPane contents = new JTextPane();", "+        contents.setContentType(\"text/html\");", "+        contents.setText(message);", "+        contents.setEditable(false);", "+        // XXX Still not sure why this is necessary. JTextPane doesn't ", "+        // seem to report a \"true\" preferred size.", "+        contents.setPreferredSize(", "+            new Dimension(contents.getPreferredSize().width, 450));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f5a156c41d1403e0f3e8601ebeb2d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "41c047f603dc46b74b7058e2c1dd0d3001cd29ab", "commitAfterChange": "c1080f1b8a8469dc79a8f5f86b287544b0ad0b6b", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 49, "signatureBeforeChange": "      public void execute()          throws BuildException", "signatureAfterChange": "     public void execute()          throws BuildException", "diff": ["-", "+    */", "-", "+    ", "-        /* space for more argumentativeness", "-           command.addArgument();", "-           command.addArgument();", "-        */", "-", "-", "+        command.addArgument(getIncludeDefaultReferencesParameter());", "+        command.addArgument(getDefaultReferenceParameter());", "+        command.addArgument(getExtraOptionsParameter());", "+    ", "-    ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2909eaa65e767905f693f7712f2780cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/MutantBuilder.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void systemlib(BuildHelper helper)", "signatureAfterChange": "     protected void buildlib(BuildHelper helper)", "diff": ["+    protected void buildlib(BuildHelper helper) {", "+        helper.runDepends(this, \"buildlib\", \"\");", "+        System.out.println(\"buildlib: \");", "+        helper.setProperty(\"antlib.build.dir\", \"${bin.dir}/antlibs/${libname}\");", "+        helper.setProperty(\"antlib.src.dir\", \"${java.dir}/antlibs/${libname}\");", "+        helper.mkdir(\"${antlib.build.dir}\");", "+        helper.mkdir(\"${antlibdir}\");", "+        helper.createPath(\"classpath.antlibs\");", "+        helper.addPathElementToPath(\"classpath.antlibs\", \"${dist.core.dir}/common/common.jar\");", "+        helper.addPathToPath(\"classpath.antlibs\", \"classpath.common\");", "+        helper.javac(\"${antlib.src.dir}\", \"${antlib.build.dir}\", \"classpath.antlibs\");", "+        helper.jar(\"${antlib.build.dir}\", \"${antlibdir}/${libname}.jar\",", "+                   \"${antlib.src.dir}\", \"antlib.xml\", null, null);", "+    }", "-    }", "-    protected void systemlib(BuildHelper helper) {", "-        helper.mkdir(\"${bin.dir}/antlibs/system\");", "-        helper.mkdir(\"${distlib.dir}/syslibs\");", "-        helper.createPath(\"classpath.antlibs\");", "-        helper.addPathElementToPath(\"classpath.antlibs\", \"${distlib.dir}/common/common.jar\");", "-        helper.addPathToPath(\"classpath.antlibs\", \"classpath.common\");", "-        helper.javac(\"${java.dir}/antlibs/system\", \"${bin.dir}/antlibs/system\", \"classpath.antlibs\");", "-        helper.jar(\"${bin.dir}/antlibs/system\", \"${distlib.dir}/syslibs/system.jar\",", "-                   \"${java.dir}/antlibs/system\", \"antlib.xml\", null, null);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421dfdd3db333036d1a46872e0ce5d24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "24bb66e6547c68c19855f363e211606e03eeb17f", "commitAfterChange": "792642344dd1e5f6135f2b96020b1dd2cfe47bcf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void configure(EjbJar.Config config)", "signatureAfterChange": "     public void configure(EjbJar.Config config)", "diff": ["-", "+        dependencyAnalyzer.addClassPath(new Path(task.getProject(), ", "+            config.srcDir.getPath()));", "+        dependencyAnalyzer.addClassPath(config.classpath);", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45acca121329bcbf4b38299c140ed93c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/DependentTargetChooser.java", "commitBeforeChange": "2ff201801b557593afe6cf9dcd4d4c4f4da65b39", "commitAfterChange": "cfa93603e73e635d31be01cdb31dc9959a5ea35c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private JPanel getCommandButtonPanel()", "signatureAfterChange": "     private JPanel getCommandButtonPanel()", "diff": ["-            _ok = new JButton(\"OK\");", "+            _ok = new JButton(_resources.getString(getClass(), \"ok\"));", "+            _ok.setMnemonic('O');", "-            _cancel = new JButton(\"Cancel\");", "+            getRootPane().setDefaultButton(_ok);", "+            _cancel = new JButton(_resources.getString(getClass(), \"cancel\"));", "+            _cancel.setMnemonic('c');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "489e2f93bc3b62e278b752511a39813e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "72b360356e7489987a637636f2d8c9cdc85a8145", "commitAfterChange": "59e489be6d6d656a7358bed90a391fda6342076c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void upload(List fileSet, String toSshUri)         throws IOException, JSchException", "signatureAfterChange": "      private void upload(List fileSet, String toSshUri)         throws IOException, JSchException", "diff": ["-                ScpToMessage message = new ScpToMessage(getVerbose(), session,", "-                                                        list, file);", "+                ScpToMessage message = null;", "+                if (!isSftp){", "+                    message = new ScpToMessage(getVerbose(), session,", "+                                               list, file);", "+                } else{", "+                    message = new ScpToMessageBySftp(getVerbose(), session,", "+                                                     list, file);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c30a8df740815321e991decd9b4b32e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSTaskElementBeanInfo.java", "commitBeforeChange": "0b486643903c3f52384b8110c56c1fda819ccf94", "commitAfterChange": "414e0ad17819770b1557dfd56814dd30a3e58e5c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public PropertyDescriptor[] getPropertyDescriptors()", "signatureAfterChange": "     public PropertyDescriptor[] getPropertyDescriptors()", "diff": ["+                new PropertyDescriptor(ACSTaskElement.NAMED_VALUES, ", "+                                       ACSTaskElement.class),", "+                getClass(),ACSTaskElement.NAMED_VALUES));", "+            retval[2].setDisplayName(getResources().getString("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d547e3c19afd4da71abefd2cfdd7daf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "72b360356e7489987a637636f2d8c9cdc85a8145", "commitAfterChange": "59e489be6d6d656a7358bed90a391fda6342076c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void download(String fromSshUri, String toPath)         throws JSchException, IOException", "signatureAfterChange": "      private void download(String fromSshUri, String toPath)         throws JSchException, IOException", "diff": ["-            ScpFromMessage message =", "-                new ScpFromMessage(getVerbose(), session, file,", "-                                   getProject().resolveFile(toPath),", "-                                   fromSshUri.endsWith(\"*\"));", "+            ScpFromMessage message = null;", "+            if (!isSftp){", "+                message =", "+                    new ScpFromMessage(getVerbose(), session, file,", "+                                       getProject().resolveFile(toPath),", "+                                       fromSshUri.endsWith(\"*\"));", "+            } else{", "+                message =", "+                    new ScpFromMessageBySftp(getVerbose(), session, file,", "+                                             getProject().resolveFile(toPath),", "+                                             fromSshUri.endsWith(\"*\"));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e9e92c5d100da0d0a7b1f50c4b251c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKOUT.java", "commitBeforeChange": "5722812dbe0cfda11a528c3e6c32b2b2b67b7960", "commitAfterChange": "d76fda652ab6bb3f3840e8606f73d23307a33ca4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Commandline buildCmdLine()", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-        commandLine.createArgument().setValue(getVersion());", "+        commandLine.createArgument().setValue(getVersionDateLabel());", "+        // -G", "+        commandLine.createArgument().setValue(getFileTimeStamp());", "+        // -GWS or -GWR", "+        commandLine.createArgument().setValue(getWritableFiles());", "+        // -G-", "+        commandLine.createArgument().setValue(getGetLocalCopy());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee1e0eecf4cc66622be226a48a0b9ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/bootstrap/org/apache/ant/builder/Ant1CompatBuilder.java", "commitBeforeChange": "1a2722cfc5a8640c8db6bb5a0902d093427572dd", "commitAfterChange": "454c12b7fe74d675d9ee050176aaa162d7533123", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected void _init(BuildHelper helper)", "signatureAfterChange": "     protected void _init(BuildHelper helper)", "diff": ["+        helper.setProperty(\"ant1base.dir\", \"../..\");", "+        helper.setProperty(\"ant1src.dir\", \"${ant1base.dir}/src\");", "+        helper.setProperty(\"ant1java.dir\", \"${ant1src.dir}/main\");", "+        helper.setProperty(\"ant1etc.dir\", \"${ant1src.dir}/etc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61feed8a12e8b1a5dc75fdcfc09c4e83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "b19ac2c39b9ba407994ec7ef2fce7972f274f22f", "commitAfterChange": "bf042df7ec488399fe7db09e73454320f27b8ef1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void transform() throws BuildException", "signatureAfterChange": "     public void transform() throws BuildException", "diff": ["-        String tempFileProperty = getClass().getName() + String.valueOf(counter++);", "-        File tmp = FILE_UTILS.resolveFile(project.getBaseDir(),", "-                project.getProperty(\"java.io.tmpdir\"));", "-        tempFileTask.setDestDir(tmp);", "-        tempFileTask.setProperty(tempFileProperty);", "-        tempFileTask.execute();", "-        File dummyFile = new File(project.getProperty(tempFileProperty));", "-        xsltTask.setOut(dummyFile);", "+        File outputFile = null;", "+        if (format.equals(FRAMES)) {", "+            String tempFileProperty = getClass().getName() + String.valueOf(counter++);", "+            File tmp = FILE_UTILS.resolveFile(project.getBaseDir(),", "+                    project.getProperty(\"java.io.tmpdir\"));", "+            tempFileTask.setDestDir(tmp);", "+            tempFileTask.setProperty(tempFileProperty);", "+            tempFileTask.execute();", "+            outputFile = new File(project.getProperty(tempFileProperty));", "+        } else {", "+            outputFile = new File(toDir, \"junit-noframes.html\");", "+        }", "+        xsltTask.setOut(outputFile);", "-        Delete delete = new Delete();", "-        delete.bindToOwner(task);", "-        delete.setFile(dummyFile);", "-        delete.execute();", "+        if (format.equals(FRAMES)) {", "+            Delete delete = new Delete();", "+            delete.bindToOwner(task);", "+            delete.setFile(outputFile);", "+            delete.execute();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67759d711f41a9e642b9249e3a35d0fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "deadaf0b019f2223316e41141161f781b55fe71b", "commitAfterChange": "aa8f01df3ca1287a3cab4e27edb8093384748c92", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public void execute()          throws BuildException", "signatureAfterChange": "     public void execute()          throws BuildException", "diff": ["+        command.addArgument(getWin32ResParameter());", "+        command.addArgument(getUtf8OutpuParameter());", "+        command.addArgument(getNoConfigParameter());", "+        command.addArgument(getFullPathsParameter());", "-    ", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68aea36c699628fe7ea05196cb1238fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ManifestTest.java", "commitBeforeChange": "61bbc457fe3990df477972e66b7ec7ef0d78c094", "commitAfterChange": "4e687594a1d8d6c4e501556b528e21f3ac605f05", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testUpdate() throws IOException, ManifestException", "signatureAfterChange": "     public void testUpdate() throws IOException, ManifestException", "diff": ["+", "+        mf = getManifest(\"src/etc/testcases/taskdefs/mftest2.mf\");", "+        assertNotNull(mf);", "+        mfAsString = mf.toString();", "+        assertNotNull(mfAsString);", "+        assertEquals(-1, mfAsString.indexOf(\"Foo: Bar\"));", "+        assertTrue(mfAsString.indexOf(\"Foo: Baz\") > -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7081b3be8a0905bb60ac1dc305d3df6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "fca57f83a2f6e6194cf2e223068f7f3bb714a676", "commitAfterChange": "8a21be498479cb838b88fc0f77547e82ed1c5334", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "      protected DescriptorHandler getWeblogicDescriptorHandler(final File srcDir)", "signatureAfterChange": "      protected DescriptorHandler getWeblogicDescriptorHandler(final File srcDir)", "diff": ["-            new DescriptorHandler(srcDir) {        ", "+            new DescriptorHandler(getTask(), srcDir) {        ", "-        handler.registerDTD(PUBLICID_WEBLOGIC_EJB, ", "-                            weblogicDTD == null ? DEFAULT_WL_DTD_LOCATION : weblogicDTD);", "+        handler.registerDTD(PUBLICID_WEBLOGIC_EJB510, DEFAULT_WL51_DTD_LOCATION);", "+        handler.registerDTD(PUBLICID_WEBLOGIC_EJB510, DEFAULT_WL60_51_DTD_LOCATION);", "+        handler.registerDTD(PUBLICID_WEBLOGIC_EJB600, DEFAULT_WL60_DTD_LOCATION);", "+        handler.registerDTD(PUBLICID_WEBLOGIC_EJB510, weblogicDTD);", "+        handler.registerDTD(PUBLICID_WEBLOGIC_EJB600, weblogicDTD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "718c03c4b1668960543656c5876b367c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandDeploymentTool.java", "commitBeforeChange": "16218478e15fb5e9c80609e50190afcc0bbc83ed", "commitAfterChange": "edd396be180db9bf362a71771449b6daff0cf53c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "signatureAfterChange": "     private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "diff": ["-    private void buildBorlandStubs(Iterator ithomes,Hashtable files )", "-    {", "+    private void buildBorlandStubs(Iterator ithomes,Hashtable files ) {", "-        File java2iiopOut = new File(\"java2iiop.log\");", "-        try ", "-        {", "+        //File java2iiopOut = new File(\"java2iiop.log\");", "+        File java2iiopOut = null;", "+        try {", "+            java2iiopOut = File.createTempFile(\"java2iiop\",\"log\");", "+            log(\" iiop log file : \"+ java2iiopOut ,Project.MSG_DEBUG);", "+", "-            if ( java2iiopdebug ) ", "-            {", "+            if ( java2iiopdebug ) {", "+            //no TIE classes", "+            execTask.createArg().setValue(\"-no_tie\");", "-            while ( ithomes.hasNext()) ", "-            {", "+            while ( ithomes.hasNext()) {", "-        try", "-        {", "+        try {", "-            while ( ( javafile = lnr.readLine()) != null) ", "-            {", "-                if ( javafile.endsWith(\".java\") )", "-                {", "+            while ( ( javafile = lnr.readLine()) != null) {", "+                if ( javafile.endsWith(\".java\") ) {", "-        catch(Exception e)", "-        {", "+        catch(Exception e) {", "+", "+        //delete the output , only if all is succesfull", "+        java2iiopOut.delete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8f225a1d167351ddc451ac67a9906c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/AntCall.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Property createParam()", "signatureAfterChange": "      public Property createParam()         throws Exception", "diff": ["+        throws Exception", "+        property.setLogger( getLogger() );", "+        property.contextualize( m_childContext );", "+        property.compose( m_componentManager );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93958d5d3b5a83742e283a8b275423e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "72b360356e7489987a637636f2d8c9cdc85a8145", "commitAfterChange": "59e489be6d6d656a7358bed90a391fda6342076c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void upload(String fromPath, String toSshUri)         throws IOException, JSchException", "signatureAfterChange": "      private void upload(String fromPath, String toSshUri)         throws IOException, JSchException", "diff": ["-            ScpToMessage message =", "-                new ScpToMessage(getVerbose(), session,", "-                                 getProject().resolveFile(fromPath), file);", "+            ScpToMessage message = null;", "+            if (!isSftp){", "+                message =", "+                    new ScpToMessage(getVerbose(), session,", "+                                     getProject().resolveFile(fromPath), file);", "+            } else{", "+                message =", "+                    new ScpToMessageBySftp(getVerbose(), session,", "+                                           getProject().resolveFile(fromPath),", "+                                           file);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957d084f05ca4c64cba04e7692ec6e38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "8d41239ee736028930c340f44ab8f90d5d2669ae", "commitAfterChange": "3ab1146ce22f73332df654cb8c22997b6ef8e6fe", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public synchronized void createStreams()", "signatureAfterChange": "     public synchronized void createStreams()", "diff": ["+                    helper.setProject(managingTask.getProject());", "+                    helper.setProject(managingTask.getProject());", "+            helper.setProject(managingTask.getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e9d3d30dd89fc1fc67d6a16cbfdd45", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "f844348eff346280acc9d922bfacf5c99668ac4a", "commitAfterChange": "1a4946cfd6c88cd17f387b99634ab859dbbea692", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["-        boolean found = tryToLocateSignature(MIN_EOCD_SIZE + ZIP64_EOCDL_LENGTH,", "-                                             MAX_EOCD_SIZE + ZIP64_EOCDL_LENGTH,", "-                                             ZipOutputStream", "-                                             .ZIP64_EOCD_LOC_SIG);", "+        positionAtEndOfCentralDirectoryRecord();", "+        archive.seek(archive.getFilePointer() - ZIP64_EOCDL_LENGTH);", "+        archive.readFully(WORD_BUF);", "+        boolean found = Arrays.equals(ZipOutputStream.ZIP64_EOCD_LOC_SIG,", "+                                      WORD_BUF);", "+            skipBytes(ZIP64_EOCDL_LENGTH - WORD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac07964734200cae0e1cc62ea6607cd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "13355064e679198a0b8212779599eb888739a9bd", "commitAfterChange": "662f68f096613b90eb1448be53d907453492287f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["-                realChild = makeTask(child, childWrapper, false);", "+                realChild = makeTask(child, childWrapper);", "-                    throw getNotFoundException(\"task\", child.getTag());", "+                    ih.throwNotSupported(getProject(), parent, child.getTag());", "-                    // What ? Add data type ? createElement ?", "+                    // should not happen", "+                    ih.throwNotSupported(getProject(), parent, child.getTag());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf3ac427c96abe8a17f1591b5ecdce7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java", "commitBeforeChange": "5722812dbe0cfda11a528c3e6c32b2b2b67b7960", "commitAfterChange": "d76fda652ab6bb3f3840e8606f73d23307a33ca4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Commandline buildCmdLine()", "signatureAfterChange": "     Commandline buildCmdLine()", "diff": ["-        commandLine.createArgument().setValue(getVersion());", "+        commandLine.createArgument().setValue(getVersionDateLabel());", "+        // -G", "+        commandLine.createArgument().setValue(getFileTimeStamp());", "+        // -GWS or -GWR", "+        commandLine.createArgument().setValue(getWritableFiles());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0819ec0bb49e7d1b92172b458020285", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "59fcd9ab821784fbf7d5ccee60b4f63c0f9b7735", "commitAfterChange": "09a7def3cd210a903db5fa8969a5292b93cb8192", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "       private void initBuildPropFile() throws Exception", "signatureAfterChange": "       private void initBuildPropFile() throws Exception", "diff": ["+        buildProps.put(PHONE_KEY, NEW_PHONE);", "+        buildProps.put(AGE_KEY, NEW_AGE);", "+        buildProps.put(DATE_KEY, NEW_DATE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5a51fbeec3c498e503e996f6c981ae9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "d448e74cb70204f9a2b8f2b81fb1d3e98ab1d8b3", "commitAfterChange": "b44a63dfe95420e9b9080a97822041d9db8debca", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void configureProject(String filename, int logLevel)         throws BuildException", "signatureAfterChange": "     public void configureProject(String filename, int logLevel)         throws BuildException", "diff": ["+        // set two new properties to allow to build unique names when running multithreaded tests", "+        project.setProperty(\"ant.processid\", ProcessUtil.getProcessId(\"<Process>\"));", "+        project.setProperty(\"ant.threadname\", Thread.currentThread().getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce63fd83d3dc30ab8954e08b493b88b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/DOMElementWriterTest.java", "commitBeforeChange": "a29e1aaf138cf3bc63dd4adf70604c95ff8ca64f", "commitAfterChange": "a623bba85d5af41104d951e50e313c23d4eee081", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testEncode()", "signatureAfterChange": "      public void testEncode()", "diff": ["+        assertEquals(\"&#x17;\", w.encode(\"\\u0017\"));", "+        assertEquals(\"&#20;\\\"20;&\", w.encodedata(\"&#20;\\\"20;&\"));", "+        assertEquals(\"&#x17;\", w.encodedata(\"\\u0017\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d809219165691f5bcc6c2a3aa2c06535", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "f8364919d7befeeadc21609e09f6e758b6854134", "commitAfterChange": "b4b082c568845449de0d7a25735a47264ff11c17", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private boolean generateChecksums() throws BuildException", "signatureAfterChange": "     private boolean generateChecksums() throws BuildException", "diff": ["+                                                    FILE_UTILS", "+                                                    .getRelativePath(dest", "+                                                                     .getParentFile(),", "+                                                                     src),", "+                                                    FILE_UTILS", "+                                                    .getRelativePath(getProject()", "+                                                                     .getBaseDir(),", "+                                                                     src),", "+                                                    src.getAbsolutePath()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db3ea8c358ca6bb3e884299ebd2414f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "334ac128fea4c6e8e76c7c8af8061a47b5019bf4", "commitAfterChange": "ba37bf7991e099b567f8cd5a09178893ff55bb9c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 22, "signatureBeforeChange": "          public void setOperation(String op)", "signatureAfterChange": "              public static int toOperation(String oper)", "diff": ["-    ", "-    public void setOperation(String op) ", "-        mainEntry.setOperation(op);", "+", "+            public static int toOperation(String oper) {", "+                if (\"+\".equals(oper)) {", "+                    return INCREMENT_OPER;", "+                }", "+                else if (\"-\".equals(oper)) {", "+                    return DECREMENT_OPER;", "+                }", "+                else if (NOW_VALUE_.equals(oper)) {", "+                    return NOW_VALUE;", "+                }", "+                else if (NULL_VALUE_.equals(oper)) {", "+                    return NULL_VALUE;", "+                }", "+                return EQUALS_OPER;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e051593272ddb9f1dcdb9870d7d15702", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/PathTest.java", "commitBeforeChange": "3b378ba6377a9fd26a2bc7052041b6f59e5beeaa", "commitAfterChange": "cf4c2f018749355bf2c390e438cc18bc7e234efa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testAppending()", "signatureAfterChange": "      public void testAppending()", "diff": ["+        p.append(new Path(\"\\\\f\"));", "+        l = p.list();", "+        assertEquals(\"6 after append\", 6, l.length);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c45dfd10284b0995f8ffee9e7418d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "ab08e2cd2569fe20d71c5b268b5f0994161b8187", "commitAfterChange": "2d1c5924e54f556642b92ec702cdbee071db3e75", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "             private String getRelativePath(String currentPath, String currentRelativePath)", "signatureAfterChange": "             private String getRelativePath(String currentPath, String currentRelativePath)", "diff": ["+                    if (!relPath.equals(\"\")) {", "+                        relPath = relPath + remoteFileSep;", "+                    }", "-                        throw new BuildException(\"could not find \" + currentElement", "-                            + \" from \" + currentPath);", "+                        // hit a hidden file assume not a symlink", "+                        relPath = relPath + currentElement;", "+                        currentPath = currentPath + remoteFileSep + currentElement;", "+                        log(\"Hidden file \" + relPath + \" assumed to not be a symlink.\", Project.MSG_VERBOSE);", "-                        if (!relPath.equals(\"\")) {", "-                            relPath = relPath + remoteFileSep;", "-                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c4394cb3bdb569619559786199b446", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/DefaultLoggerTest.java", "commitBeforeChange": "b9e04be31565d39250926e318190aa56bfb76452", "commitAfterChange": "78f88a7c4a3ea7ea57dafbd2dd0bd3801b30588d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testThrowableMessage() throws Exception", "signatureAfterChange": "      public void testThrowableMessage() throws Exception", "diff": ["-        be = new BuildException(x);", "-                msg(be, false));", "-        /* XXX still broken:", "-        be = ProjectHelper.addLocationToBuildException(be, new Location(\"build.xml\", 1, 0));", "+                msg(x, false));", "+        be = new BuildException(x, new Location(\"build.xml\", 1, 0));", "-                \"The following error occurred while executing this line:\\n\" +", "-         */", "+        be = ProjectHelper.addLocationToBuildException(be, new Location(\"build.xml\", 2, 0));", "+        assertEquals(", "+                \"build.xml:2: The following error occurred while executing this line:\\n\" +", "+                \"build.xml:1: problem\\n\" +", "+                \"  at p.C.m\\n\",", "+                msg(be, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffaede144da5b7b008f0df3bfa456c80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java", "commitBeforeChange": "cca008dd0001628eefae7a0ebffba4815a6909f1", "commitAfterChange": "021fdf251c92ecb3981724d83c0265dc770280b3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setClassname(String classname)", "signatureAfterChange": "     public void setClassname(String classname)", "diff": ["+        if (XML_FORMATTER_CLASS_NAME.equals(classname)) {", "+           setExtension(\".xml\");", "+        } else if (PLAIN_FORMATTER_CLASS_NAME.equals(classname)) {", "+           setExtension(\".txt\");", "+        } else if (BRIEF_FORMATTER_CLASS_NAME.equals(classname)) {", "+           setExtension(\".txt\");", "+        }"]}]}