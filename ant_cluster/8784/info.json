{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "880ebf2a40eaae00266a671c5b1bb5fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d15c19bd5fa565f5224467d01ef2c1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void setupListener( final String listenerName )", "signatureAfterChange": "     protected ProjectListener createListener( final String listenerName )         throws AntException", "diff": ["-    protected void setupListener( final String listenerName )", "+    protected ProjectListener createListener( final String listenerName )", "+        throws AntException", "-        m_listener = createListener( listenerName );", "-        m_logger.addLogTarget( new LogTargetToListenerAdapter( m_listener ) );", "+        ProjectListener result = null;", "+", "+        try { result = (ProjectListener)ObjectUtil.createObject( listenerName ); }", "+        catch( final Throwable t )", "+        {", "+            throw new AntException( \"Error creating the listener \" + listenerName + ", "+                                    \" due to \" + StringUtil.printStackTrace( t, 5, true ), ", "+                                    t );", "+        }", "+", "+        getLogger().addLogTarget( new LogTargetToListenerAdapter( result ) );", "+", "+        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73de41911e356b220f3ef191cb1ae207", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "685af27ceefe23e6cbaf8e8212805d3850765bdc", "commitAfterChange": "157d8f04d2c676ac93a8cda891f804bddf6f7836", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected ProjectListener createListener( final String listenerName )         throws TaskException", "signatureAfterChange": "     protected ProjectListener createListener( final String listener )         throws TaskException", "diff": ["-    protected ProjectListener createListener( final String listenerName )", "+    protected ProjectListener createListener( final String listener )", "-        ProjectListener result = null;", "-", "-        try { result = (ProjectListener)Class.forName( listenerName ).newInstance(); }", "+        try { return (ProjectListener)Class.forName( listener ).newInstance(); }", "-            throw new TaskException( \"Error creating the listener \" + listenerName +", "-                                    \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ),", "-                                    t );", "+            throw new TaskException( \"Error creating the listener \" + listener +", "+                                     \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ),", "+                                     t );", "-", "-        final LogTarget target = new LogTargetToListenerAdapter( result );", "-", "-        getLogger().setLogTargets( new LogTarget[] { target } );", "-", "-        return result;"]}]}