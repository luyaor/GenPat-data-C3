{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65f9e2399b37169116796b417f1d6070", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c64458faaaef8e8af99ab6ec8d51227", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "80962473e91835af31b494928c227d62aba6a9ef", "commitAfterChange": "2058109551cc0acb90301456c4c6627dba65836d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "diff": ["+        // ValidatedFileAttributes have their own helper class", "+        } else if (ValidatedFileAttribute.class.isAssignableFrom(arg)) {", "+            return new AttributeSetter() {", "+                    public void set(Project p, Object parent, String value)", "+                        throws InvocationTargetException, IllegalAccessException, BuildException {", "+                        try {", "+                            ValidatedFileAttribute[] vfa = {", "+                                (ValidatedFileAttribute) arg.newInstance()", "+                            };", "+                            File f = p.resolveFile(value);", "+                            vfa[0].setFile(f);", "+                            m.invoke(parent, vfa);", "+                        } catch (InstantiationException ie) {", "+                            throw new BuildException(ie);", "+                        }", "+                    }", "+                };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8108bcf55f49f6ed278dbf21419d3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "58cde0d26ddac7ad67880de2131fb9b90548fbe8", "commitAfterChange": "084609e5ef285ee28ab65f11f0ec423a1526f1d6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   final Class arg)", "diff": ["+        // EnumeratedAttributes have their own helper class", "+        } else if (org.apache.tools.ant.EnumeratedAttribute.class.isAssignableFrom(arg)) {", "+            return new AttributeSetter() {", "+                    public void set(Project p, Object parent, String value) ", "+                        throws InvocationTargetException, IllegalAccessException, BuildException {", "+                        try {", "+                            EnumeratedAttribute ea = ", "+                                (EnumeratedAttribute)arg.newInstance();", "+                            ea.setValue(value);", "+                            m.invoke(parent, new EnumeratedAttribute[] {ea});", "+                        } catch (InstantiationException ie) {", "+                            throw new BuildException(ie);", "+                        }", "+                    }", "+                };", "+        ", "+"]}]}