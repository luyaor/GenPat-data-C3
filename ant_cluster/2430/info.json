{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2b963fcd082874cd371eb383b128e29", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e73c735ef4e94dac8f28f200f49aa7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "f6a78a634593cd4660e2efa17a80f71a927df3d5", "commitAfterChange": "1d3dc3765d4efd6ae54488feab07f6a17315ebe6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void executeTask( final Configuration configuration )         throws AntException", "signatureAfterChange": "      protected void executeTask( final Configuration configuration,                                  final TaskletContext context )         throws AntException", "diff": ["-    protected void executeTask( final Configuration configuration )", "+    protected void executeTask( final Configuration configuration, ", "+                                final TaskletContext context )", "+        //Set up context for task...", "+        final TaskletContext taskletContext = context;", "+", "+        //is Only necessary if we are multi-threaded", "+        //final TaskletContext targetContext = new DefaultTaskletContext( context );", "+        taskletContext.setProperty( TaskletContext.NAME, name );", "+", "+        m_taskletEngine.contextualize( taskletContext );", "+", "+        //notify listeners", "+        m_listenerSupport.taskletStarted( name );", "+", "+        //run task", "+", "+        //notify listeners task has ended", "+        m_listenerSupport.taskletFinished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e91de024c08a14f6b9bc6776e530221", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void execute( final Project project,                           final String targetName,                           final TaskContext context,                           final ArrayList done )         throws TaskException", "signatureAfterChange": "     private void execute( final Project project,                           final String targetName,                           final ProjectEntry entry )         throws TaskException", "diff": ["-                          final TaskContext context,", "-                          final ArrayList done )", "+                          final ProjectEntry entry )", "-", "-        done.add( targetName );", "+        entry.completeTarget( targetName );", "-            if( !done.contains( dependencies[ i ] ) )", "+            if( !entry.isTargetCompleted( dependencies[ i ] ) )", "-                execute( project, dependencies[ i ], context, done );", "+                execute( project, dependencies[ i ], entry );", "-        executeTarget( targetName, target, context );", "+        //notify listeners", "+        m_listenerSupport.targetStarted( targetName );", "+", "+        executeTarget( targetName, target, entry.getFrame() );", "+", "+        //notify listeners", "+        m_listenerSupport.targetFinished();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8fb8e46964f8c0479d12e5cac4aa0e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void executeTask( final Configuration task, final TaskContext context )         throws TaskException", "signatureAfterChange": "     private void executeTask( final Configuration task, final ExecutionFrame frame )         throws TaskException", "diff": ["-    private void executeTask( final Configuration task, final TaskContext context )", "+    private void executeTask( final Configuration task, final ExecutionFrame frame )", "-        //Set up context for task...", "-        //is Only necessary if we are multi-threaded", "-        //final TaskletContext targetContext = new DefaultTaskletContext( context );", "-", "-        context.setProperty( TaskContext.NAME, name );", "+        frame.getContext().setProperty( TaskContext.NAME, name );", "-        m_executor.execute( task, context );", "+        m_executor.execute( task, frame );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91d92be7d8e77204a283f0b878b4699", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected void executeTask( final Configuration configuration,                                  final TaskletContext context )         throws AntException", "signatureAfterChange": "     protected void executeTask( final Configuration task, final TaskletContext context )         throws AntException", "diff": ["-    protected void executeTask( final Configuration configuration, ", "-                                final TaskletContext context )", "+     */", "+    protected void executeTask( final Configuration task, final TaskletContext context )", "-        final String name = configuration.getName();", "-        m_logger.debug( \"Executing task \" + name );", "+        final String name = task.getName();", "+        getLogger().debug( \"Executing task \" + name );", "+", "+        //is setting name even necessary ???", "-        m_taskletEngine.execute( configuration, context, m_componentManager );", "+        m_taskletEngine.execute( task, context );"]}]}