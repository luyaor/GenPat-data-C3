{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "293d8f2ffda34fe917e18b39450cc38a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09fefa9e46107b047fe714a1919ef0b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "e1f227ae3daabd921f4557a8bdd849ee8c23e221", "commitAfterChange": "e7b3093e3e8b57071284362be40bf58fa7f0f88b", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "      public int lastDelimiterPosition(StringBuffer buf, String currentLine)", "signatureAfterChange": "      public int lastDelimiterPosition(StringBuffer buf, String currentLine)", "diff": ["-            if (delimiterType.equals(DelimiterType.NORMAL)", "-                && StringUtils.endsWith(buf, delimiter)) {", "+            if ((delimiterType.equals(DelimiterType.NORMAL)", "+                 && StringUtils.endsWith(buf, delimiter)) ||", "+                (delimiterType.equals(DelimiterType.ROW)", "+                 && currentLine.equals(delimiter))) {", "-            } else if (delimiterType.equals(DelimiterType.ROW)", "-                       && currentLine.equals(delimiter)) {", "-                return 0;", "-                    if (buf.substring(bufferIndex, 1).toLowerCase(Locale.US)", "-                        .charAt(0) != d.charAt(endIndex)) {", "+                    if (buf.substring(bufferIndex, bufferIndex + 1)", "+                        .toLowerCase(Locale.US).charAt(0)", "+                        != d.charAt(endIndex)) {", "-                return bufferIndex;", "+                return bufferIndex + 1;", "-                    ? 0 : -1;", "+                    ? buf.length() - currentLine.length() : -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79b4d97f511502da0b147e23f664f59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "611d085ff653bcf61d3cea4eb72869095e98439d", "commitAfterChange": "71ecbaefb28107447e2d3875786501ba1a71cc4d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public boolean equals(Object obj)", "signatureAfterChange": "         public boolean equals(Object obj)", "diff": ["+         */", "+        public boolean equals(Object obj) {", "+            if (obj == this) {", "+              return true;", "+            }", "+            if (obj != null && obj.getClass().equals(getClass())) {", "+              equals((Member) obj);", "+            }", "+            return false;", "+        }", "-         */", "-        public boolean equals(Object obj) {", "-            if (obj == null) {", "-                return false;", "-            }", "-            if (obj.getClass() != getClass()) {", "-                return false;", "-            }", "-            Text other = (Text) obj;", "-            if (name == null) {", "-                if (other.name != null) {", "-                    return false;", "-                }", "-            } else if (!name.equals(other.name)) {", "-                return false;", "-            }", "-            if (optional != other.optional) {", "-                return false;", "-            }", "-            if (trim != other.trim) {", "-                return false;", "-            }", "-            return true;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeea1319db700fffeb6c32d2bc008ffb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public int read()", "signatureAfterChange": "      public int read() throws IOException", "diff": ["+", "+    public int read() throws IOException {", "+        if (this.in != null) {", "+            return read0();", "+        } else {", "+            throw new IOException(\"stream closed\");", "+        }", "+    }", "-    public int read() {", "-        if (streamEnd) {", "-            return -1;", "-            int retChar = currentChar;", "-            switch(currentState) {", "-            case START_BLOCK_STATE:", "-                break;", "-            case RAND_PART_A_STATE:", "-                break;", "-            case RAND_PART_B_STATE:", "-                setupRandPartB();", "-                break;", "-            case RAND_PART_C_STATE:", "-                setupRandPartC();", "-                break;", "-            case NO_RAND_PART_A_STATE:", "-                break;", "-            case NO_RAND_PART_B_STATE:", "-                setupNoRandPartB();", "-                break;", "-            case NO_RAND_PART_C_STATE:", "-                setupNoRandPartC();", "-                break;", "-            default:", "-                break;", "-            return retChar;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82164ccb4a942e940fb20b3e560e811", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry.java", "commitBeforeChange": "f9e2c884babcb11e65fdc2317705993ea839c286", "commitAfterChange": "fff434e903ebdcb26009b4f11722e355efcd203c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ConstantPoolEntry readEntry(DataInputStream cpStream) throws IOException", "signatureAfterChange": "     public static ConstantPoolEntry readEntry(DataInputStream cpStream)          throws IOException", "diff": ["-    public static ConstantPoolEntry readEntry(DataInputStream cpStream) throws IOException {", "+    public static ConstantPoolEntry readEntry(DataInputStream cpStream)", "+         throws IOException {", "-            case CONSTANT_Utf8:", "+            case CONSTANT_UTF8:", "-", "-            case CONSTANT_Integer:", "+            case CONSTANT_INTEGER:", "-", "-            case CONSTANT_Float:", "+            case CONSTANT_FLOAT:", "-", "-            case CONSTANT_Long:", "+            case CONSTANT_LONG:", "-", "-            case CONSTANT_Double:", "+            case CONSTANT_DOUBLE:", "-", "-            case CONSTANT_Class:", "+            case CONSTANT_CLASS:", "-", "-            case CONSTANT_String:", "+            case CONSTANT_STRING:", "-", "-            case CONSTANT_FieldRef:", "+            case CONSTANT_FIELDREF:", "-", "-            case CONSTANT_MethodRef:", "+            case CONSTANT_METHODREF:", "-", "-            case CONSTANT_InterfaceMethodRef:", "+            case CONSTANT_INTERFACEMETHODREF:", "-", "-            case CONSTANT_NameAndType:", "+            case CONSTANT_NAMEANDTYPE:", "-", "-                throw new ClassFormatError(\"Invalid Constant Pool entry Type \" + cpTag);", "+                throw new ClassFormatError(\"Invalid Constant Pool entry Type \"", "+                     + cpTag);"]}]}