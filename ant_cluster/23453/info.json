{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1631a21ec652e7e23a9fd40967bb374a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0ee39d12c8dedf29a4b9262027eaeb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/StringUtils.java", "commitBeforeChange": "3a42777b65320f28e62ec04faa467fd02f715b10", "commitAfterChange": "3c64066ee795554897c5a4003e81d37c5375bafa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "signatureAfterChange": "     public static long parseHumanSizes(String humanSize) throws Exception", "diff": ["-    \tfinal long KILOBYTE = 1024;", "-    \tfinal long MEGABYTE = KILOBYTE * 1024;", "-    \tfinal long GIGABYTE = MEGABYTE * 1024;", "-    \tfinal long TERABYTE = GIGABYTE * 1024;", "-    \tfinal long PETABYTE = TERABYTE * 1024;", "-    \tif(!Character.isDigit(humanSize.charAt(humanSize.length()-1))) {", "-    \t\tchar c = humanSize.charAt(humanSize.length()-1);", "-    \t\tlong value = Long.valueOf(humanSize.substring(0, humanSize.length()-1)).longValue();", "-    \t\tswitch (c) {", "-    \t\t\tcase 'K':", "-    \t\t\t\treturn value * KILOBYTE;", "-    \t\t\tcase 'M':", "-    \t\t\t\treturn value * MEGABYTE;", "-    \t\t\tcase 'G':", "-    \t\t\t\treturn value * GIGABYTE;", "-    \t\t\tcase 'T':", "-    \t\t\t\treturn value * TERABYTE;", "-    \t\t\tcase 'P':", "-    \t\t\t\treturn value * PETABYTE;", "-    \t\t\tdefault:", "-    \t\t\t\treturn value;", "-    \t\t}", "-    \t} else {", "-    \t    return Long.parseLong(humanSize);", "-    \t}", "+        if (!Character.isDigit(humanSize.charAt(humanSize.length() - 1))) {", "+            char c = humanSize.charAt(humanSize.length() - 1);", "+            long value = Long.valueOf(", "+                humanSize.substring(", "+                    0, humanSize.length() - 1)).longValue();", "+            switch (c) {", "+                case 'K':", "+                    return value * KILOBYTE;", "+                case 'M':", "+                    return value * MEGABYTE;", "+                case 'G':", "+                    return value * GIGABYTE;", "+                case 'T':", "+                    return value * TERABYTE;", "+                case 'P':", "+                    return value * PETABYTE;", "+                default:", "+                    return value;", "+            }", "+        } else {", "+            return Long.parseLong(humanSize);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b65b6cea3767cb9b8903b8cbd5753362", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "b55b65d798557c5b80addeb53537c13c33994b86", "commitAfterChange": "5886e7a10125a97e36de6aeac98e76376eed8997", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected static String formatTime(long millis)", "signatureAfterChange": "      protected static String formatTime(final long millis)", "diff": ["-    protected static String formatTime(long millis) {", "-        long seconds = millis / 1000;", "-        long minutes = seconds / 60;", "-", "-        Object[] args = {", "-            new Long(minutes),", "-            new Long(seconds % 60)", "-        };", "-", "-        return MINUTE_SECONDS.format(args);", "+    protected static String formatTime(final long millis) {", "+        return DateUtils.formatElapsedTime(millis);"]}]}