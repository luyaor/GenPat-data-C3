{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62e6458da0fc2ce9be9b32e924965441", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "296ae183035884a5246d651678b38143", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "23a58df47dca238cc3a25e99845e14584c68d686", "commitAfterChange": "7517bc70580950fd744751a673d7c9b77ca06d94", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        PropertyHelper propertyHelper =", "+            PropertyHelper.getPropertyHelper(getProject());", "+        propertyHelper.enterLocalPropertyScope();", "+        for (Iterator i = macroDef.getLocalProperties().values().iterator();", "+             i.hasNext();) {", "+            MacroDef.LocalPropertyElement el = (MacroDef.LocalPropertyElement) i.next();", "+            propertyHelper.addLocalProperty(el.getName(), null);", "+        }", "+", "-        localProperties = new Hashtable();", "+        localAttributes = new Hashtable();", "-                value = macroSubs(value, localProperties);", "+                value = macroSubs(value, localAttributes);", "-            localProperties.put(attribute.getName(), value);", "+            localAttributes.put(attribute.getName(), value);", "-            localProperties.put(macroDef.getText().getName(), text);", "+            localAttributes.put(macroDef.getText().getName(), text);", "+        } finally {", "+            presentElements = null;", "+            localAttributes = null;", "+            propertyHelper.exitLocalPropertyScope();", "-        presentElements = null;", "-        localProperties = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c01955c562cab7898fc683a56de48a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "commitAfterChange": "c09d386575d236bd32d3d4ce78f716e90b5bbdfa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void initializeProject()", "signatureAfterChange": "     private void initializeProject()", "diff": ["-        // set user-defined or all properties from calling project", "-        Hashtable prop1;", "-        if (inheritAll) {", "-           prop1 = project.getProperties();", "-        } else {", "-           prop1 = project.getUserProperties();", "+        // set user-defined", "+        Hashtable props = getProject().getUserProperties();", "+        e = props.keys();", "+        while (e.hasMoreElements()) {", "+            String arg = e.nextElement().toString();", "+            String value = props.get(arg).toString();", "+            newProject.setUserProperty(arg, value);", "+        }", "+        if (!inheritAll) {", "-        }", "-        e = prop1.keys();", "-        while (e.hasMoreElements()) {", "-            String arg = (String) e.nextElement();", "-            if (\"basedir\".equals(arg) || \"ant.file\".equals(arg)) {", "-                // basedir and ant.file get special treatment in execute()", "-                continue;", "-            }", "+        } else {", "+            // set all properties from calling project", "-            String value = (String) prop1.get(arg);", "-            if (inheritAll){", "-               newProject.setProperty(arg, value);", "-            } else {", "-               newProject.setUserProperty(arg, value);", "+            props = getProject().getProperties();", "+            e = props.keys();", "+            while (e.hasMoreElements()) {", "+                String arg = e.nextElement().toString();", "+                if (\"basedir\".equals(arg) || \"ant.file\".equals(arg)) {", "+                    // basedir and ant.file get special treatment in execute()", "+                    continue;", "+                }", "+", "+                String value = props.get(arg).toString();", "+                if (newProject.getProperty(arg) == null){", "+                    // no user property", "+                    newProject.setProperty(arg, value);", "+                }"]}]}