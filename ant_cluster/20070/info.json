{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc363041f5a9046c32d84d4c67111710", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0775a01d4805e8c76eeae6c91cf81e02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "59e982fc741c834f8436bfca6abc72196a5e5b3b", "commitAfterChange": "569e491428f5899676aed3461999c2ff05cfd2fe", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int executeInVM( CommandlineJava commandline )         throws TaskException", "signatureAfterChange": "     public int executeInVM( final CommandlineJava commandline )         throws TaskException", "diff": ["-    public int executeInVM( CommandlineJava commandline )", "+    public int executeInVM( final CommandlineJava commandline )", "-        if( \"xml\".equals( format ) )", "+        if( \"xml\".equals( m_format ) )", "+        {", "+        }", "+        {", "+        }", "-        if( getOutputFile() != null )", "+        if( m_outputFile != null )", "-                fw = new FileWriter( getOutputFile().getPath() );", "+                fw = new FileWriter( m_outputFile.getPath() );", "-            getLogger().info( \"Output to be stored in \" + getOutputFile().getPath() );", "+            getLogger().info( \"Output to be stored in \" + m_outputFile.getPath() );", "-        PathTokenizer sourcesPath = new PathTokenizer( getSourcespath().toString() );", "+        PathTokenizer sourcesPath = new PathTokenizer( m_sourcesPath.toString() );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02f13d434f5c238313590bbe6482557", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "59e982fc741c834f8436bfca6abc72196a5e5b3b", "commitAfterChange": "569e491428f5899676aed3461999c2ff05cfd2fe", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int executeInVM( CommandlineJava commandline )         throws TaskException", "signatureAfterChange": "     public int executeInVM( final CommandlineJava commandline )         throws TaskException", "diff": ["-    public int executeInVM( CommandlineJava commandline )", "+    public int executeInVM( final CommandlineJava commandline )", "-        if( \"xml\".equals( format ) )", "+        if( \"xml\".equals( m_format ) )", "+        {", "+        }", "+        {", "+        }", "-        if( getOutputFile() != null )", "+        if( m_outputFile != null )", "-                fw = new FileWriter( getOutputFile().getPath() );", "+                fw = new FileWriter( m_outputFile.getPath() );", "-            getLogger().info( \"Output to be stored in \" + getOutputFile().getPath() );", "+            getLogger().info( \"Output to be stored in \" + m_outputFile.getPath() );", "-        PathTokenizer sourcesPath = new PathTokenizer( getSourcespath().toString() );", "+        PathTokenizer sourcesPath = new PathTokenizer( m_sourcesPath.toString() );", "-    }"]}]}