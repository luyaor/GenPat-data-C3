{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1dd0a60b9ffd2193d3c7e92466cb259e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4357d7e246da02ae1f8a150a50a511", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "37e1a669340af86ea163020ac3cec13cbd881b29", "commitAfterChange": "ce8272e144b8168b864015d2dd304410ebb236fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void transform(Node root, String xslname, String htmlname) throws SAXException", "signatureAfterChange": "     private static String getXalanVersion(Class procVersion)", "diff": ["-     */", "-    protected void transform(Node root, String xslname, String htmlname) throws SAXException {", "-        try{", "-            XSLTInputSource xsl_source = getXSLStreamSource(xslname);", "-            XSLTProcessor processor = XSLTProcessorFactory.getProcessor();", "-            File htmlfile = new File(toDir, htmlname);", "-            // create the directory if it does not exist", "-            File dir = new File(htmlfile.getParent()); // getParentFile is in JDK1.2+", "-            if (!dir.exists()) {", "-                dir.mkdirs();", "-            }", "-            task.log(\"Applying '\" + xslname + \"'. Generating '\" + htmlfile + \"'\", Project.MSG_VERBOSE);", "-            processor.process( new XSLTInputSource(root), xsl_source, new XSLTResultTarget(htmlfile.getAbsolutePath()) );", "-        } catch (IOException e){", "-            task.log(e.getMessage(), Project.MSG_ERR);", "-            e.printStackTrace(); //@todo bad, change this", "-            throw new SAXException(e.getMessage());", "-        }", "-    }", "+    /** pretty useful data (Xalan version information) to display. */", "+    private static String getXalanVersion(Class procVersion) {", "+        try {", "+            Field f = procVersion.getField(\"S_VERSION\");", "+            return f.get(null).toString();", "+        } catch (Exception e){", "+            return \"?\";", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec0e19a2c3bfe5a227a241557f095622", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void setCommandline(String [] args)", "signatureAfterChange": "      public boolean shouldRun(Project p)", "diff": ["-", "-    public void setCommandline(String [] args) {", "-        for (int i=0; i<args.length; i++) {", "-            if (args[i] == null) continue;", "-            if (args[i].startsWith(\"haltOnError=\")) {", "-                haltOnError = Project.toBoolean(args[i].substring(12));", "-            } else if (args[i].startsWith(\"haltOnFailure=\")) {", "-                haltOnFail = Project.toBoolean(args[i].substring(14));", "-            } else if (args[i].startsWith(\"printSummary=\")) {", "-                printSummary = Project.toBoolean(args[i].substring(13));", "-            } else if (args[i].startsWith(\"printXML=\")) {", "-                printXml = Project.toBoolean(args[i].substring(9));", "-            } else if (args[i].startsWith(\"outfile=\")) {", "-                outfile = args[i].substring(8);", "-            }", "-    }", "+", "+    public boolean shouldRun(Project p) {", "+        if (ifProperty != null && p.getProperty(ifProperty) == null) {", "+            return false;", "+        } else if (unlessProperty != null && ", "+                   p.getProperty(unlessProperty) != null) {", "+            return false;", "+        }", "+        return true;", "+    }"]}]}