{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f41738e9ca1a3a15494735419ccc5af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75842189fde87dbe8aabfff853f4efa7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void makeMaps()", "signatureAfterChange": "      private void makeMaps()", "diff": ["-        int i;", "-        nInUse = 0;", "-        for (i = 0; i < 256; i++) {", "-            if (inUse[i]) {", "-                seqToUnseq[nInUse] = (char) i;", "-                unseqToSeq[i] = (char) nInUse;", "-                nInUse++;", "-            }", "+        final boolean[] inUse   = this.data.inUse;", "+        final byte[] seqToUnseq = this.data.seqToUnseq;", "+", "+        int nInUse = 0;", "+", "+        for (int i = 0; i < 256; i++) {", "+            if (inUse[i])", "+                seqToUnseq[nInUse++] = (byte) i;", "+", "+        this.nInUse = nInUse;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c69a364f1f3bb71f66536d946afeee39", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "commitAfterChange": "a67cf020bd250a1fb2acecf7cfd0159f25200dc2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void makeMaps()", "signatureAfterChange": "      private void makeMaps()", "diff": ["-", "-    private void makeMaps() {", "-        final boolean[] inUse   = this.data.inUse;", "-        final byte[] seqToUnseq = this.data.seqToUnseq;", "-", "-        int nInUseShadow = 0;", "-", "-        for (int i = 0; i < 256; i++) {", "-            if (inUse[i])", "-                seqToUnseq[nInUseShadow++] = (byte) i;", "-        }", "-", "-        this.nInUse = nInUseShadow;", "-    }", "+", "+    private void makeMaps() {", "+        final boolean[] inUse   = this.data.inUse;", "+        final byte[] seqToUnseq = this.data.seqToUnseq;", "+", "+        int nInUseShadow = 0;", "+", "+        for (int i = 0; i < 256; i++) {", "+            if (inUse[i]) {", "+                seqToUnseq[nInUseShadow++] = (byte) i;", "+            }", "+        }", "+", "+        this.nInUse = nInUseShadow;"]}]}