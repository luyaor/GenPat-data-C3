{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b516b8b24c82ef9496c14c16a3d02f6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f63e8c86709f75122ab70ce66b54a70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void executeTask(Task task) throws ExecutionException", "signatureAfterChange": "     public void executeTask(Task task) throws ExecutionException", "diff": ["-        AntContext context = task.getAntContext();", "-", "-        if (!(context instanceof ExecutionContext)) {", "-            throw new ExecutionException(\"The Task was not configured with an\"", "-                 + \" appropriate context\");", "-        }", "-        ExecutionContext execContext = (ExecutionContext) context;", "-", "-        frame.getEventSupport().fireTaskStarted(task);", "-", "-        Throwable failureCause = null;", "-", "-        try {", "-            ClassLoader currentLoader", "-                 = LoaderUtils.setContextLoader(execContext.getClassLoader());", "-", "-            task.execute();", "-            LoaderUtils.setContextLoader(currentLoader);", "-        } catch (ExecutionException e) {", "-            failureCause = e;", "-            throw e;", "-        } catch (Throwable e) {", "-            ExecutionException ee =", "-                new ExecutionException(e);", "-", "-            failureCause = ee;", "-            throw ee;", "-        } finally {", "-            frame.getEventSupport().fireTaskFinished(task, failureCause);", "-        }", "+        frame.executeTask(task);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beba9904a64156c74b9c919bd4443fa6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "2ae23a6a4b6246a53bb97a6df1a089b549b84391", "commitAfterChange": "3a0e49f25af2ea0bf75676ce88ea611e46997cef", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void configureTraXLiaison(TraXLiaison liaison)", "signatureAfterChange": "      public Enumeration getOutputProperties()", "diff": ["+", "+    public Enumeration getOutputProperties() {", "+        return outputProperties.elements();", "+    }", "-     */", "-    protected void configureTraXLiaison(TraXLiaison liaison) {", "-        if (factory != null) {", "-            liaison.setFactory(factory.getName());", "-", "-            // configure factory attributes", "-            for (Enumeration attrs = factory.getAttributes();", "-                    attrs.hasMoreElements();) {", "-                Factory.Attribute attr =", "-                        (Factory.Attribute) attrs.nextElement();", "-                liaison.setAttribute(attr.getName(), attr.getValue());", "-            }", "-        }", "-", "-        // use XMLCatalog as the entity resolver and URI resolver", "-        if (xmlCatalog != null) {", "-            liaison.setEntityResolver(xmlCatalog);", "-            liaison.setURIResolver(xmlCatalog);", "-        }", "-", "-        // configure output properties", "-        for (Enumeration props = outputProperties.elements();", "-                props.hasMoreElements();) {", "-            OutputProperty prop = (OutputProperty) props.nextElement();", "-            liaison.setOutputProperty(prop.getName(), prop.getValue());"]}]}