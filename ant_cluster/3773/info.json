{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6097bac9de03d330b02dbc5798e3706", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9539bea674baeb36711714b2e676ee93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Console.java", "commitBeforeChange": "dcba4b34366cde2807fe472c6a67bd68cf8afec6", "commitAfterChange": "75b3eb1e70c3ccb912e47445a8cf50d3bdb1dd09", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public void eventPosted(EventObject event)", "signatureAfterChange": "         public void eventPosted(EventObject event)", "diff": ["+            if(event instanceof NewProjectEvent) {", "+                clearDisplay();", "+                return;", "+            }", "+", "-            Document doc = _text.getDocument();", "-", "-                  try {", "-                      doc.remove(0, doc.getLength());", "-                  }", "-                  catch(Exception ex) {", "-                      // Intentionally ignored.", "-                  }", "+                  clearDisplay();", "+                    Document doc = _text.getDocument();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0043722e18a4056f7491aceca73ef0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure, ClassLoader loader)", "signatureAfterChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure, ClassLoader loader)", "diff": ["+            Method suiteMethod = null;", "-                Method suiteMethod= testClass.getMethod(\"suite\", new Class[0]);", "-                suite = (Test)suiteMethod.invoke(null, new Class[0]);", "-            } catch(NoSuchMethodException e) {", "-            } catch(InvocationTargetException e) {", "-            } catch(IllegalAccessException e) {", "+                // check if there is a suite method", "+                suiteMethod= testClass.getMethod(\"suite\", new Class[0]);", "+            } catch(Exception e) {", "+                // no appropriate suite method found. We don't report any", "+                // error here since it might be perfectly normal. We don't", "+                // know exactly what is the cause, but we're doing exactly", "+                // the same as JUnit TestRunner do. We swallow the exceptions.", "-            ", "-            if (suite == null) {", "+            if (suiteMethod != null){", "+                // if there is a suite method available, then try", "+                // to extract the suite from it. If there is an error", "+                // here it will be caught below and reported.", "+                suite = (Test)suiteMethod.invoke(null, new Class[0]);", "+            } else {"]}]}