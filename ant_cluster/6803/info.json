{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "703eb7a6d730f41087e8a25770bebecc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b0597519b88717aa3d1f100e0cae64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/SysProperties.java", "commitBeforeChange": "a989b254f04d33e5bc2370b62121bd56830ac2f1", "commitAfterChange": "3fee832d2527f3b952683181980a446b44f5e5bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public String[] getJavaVariables()         throws TaskException", "signatureAfterChange": "     public String[] getJavaVariables()         throws TaskException", "diff": ["+     */", "-        String props[] = new String[ 0 ];", "-        try", "-        {", "-            props = toNativeFormat( super.getVariables() );", "-        }", "-        catch( final ExecException ee )", "-        {", "-            throw new TaskException( ee.getMessage(), ee );", "-        }", "-", "-        if( props == null )", "-        {", "-            return null;", "-        }", "-", "+        String props[] = toNativeFormat( super.getVariables() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84c4f8e4a2766dccf40ba16b362cb44", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "2091b2c9a5af65d5c46ec058ce02382a6cc0fe8f", "commitAfterChange": "7002aa3c760699ccac9f90d63fbbbf912a033b0b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["-        CommandlineJava cmd = null;", "-        try {", "-            cmd = (CommandlineJava) (getCommandline().clone());", "-        } catch (CloneNotSupportedException e) {", "-            throw new BuildException(\"This shouldn't happen\", e, getLocation());", "-        }", "+        CommandlineJava cmd = (CommandlineJava) (getCommandline().clone());"]}]}