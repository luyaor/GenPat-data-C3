{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d179ab29e06679373114db39c6c9423", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eec616aff5c24591aa7bca98f06a025", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "74b6597e3a4c61f84321f72eb1f5be186f2a6e51", "commitAfterChange": "524a7831a7c83f78afd325bb3b7917ff73b196cf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      void addNodeRecursively(org.w3c.dom.Node node, String prefix)", "signatureAfterChange": "      void addNodeRecursively(org.w3c.dom.Node node, String prefix)", "diff": ["+        addNodeRecursively(node, prefix, null);", "+    }", "-            org.w3c.dom.NamedNodeMap nodeAttributes = node.getAttributes();", "-                String attributeName;", "-                if(collapseAttributes){", "-                  attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \".\" + attributeNode.getNodeName();", "-                }", "-                else{", "-                  attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \"(\" + attributeNode.getNodeName() + \")\";", "-                }", "-                String attributeValue = attributeNode.getNodeValue();", "-                log(attributeName + \":\" + attributeValue, Project.MSG_DEBUG);", "-                getProject().setNewProperty(attributeName, attributeValue);", "-            String nodeText = node.getNodeValue();", "-                log(prefix + \":\" + nodeText, Project.MSG_DEBUG);", "-                 getProject().setNewProperty(prefix, nodeText);", "-        if (node.hasChildNodes()) {", "-            prefix += ((prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName());", "-            org.w3c.dom.NodeList nodeChildren = node.getChildNodes();", "-            int numChildren = nodeChildren.getLength();", "-            for (int i = 0; i < numChildren; i++) {", "-                addNodeRecursively(nodeChildren.item(i), prefix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd91d9b608e62c084fcba6f0eef9257", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "0b3cd9d4fe4d689c6d71ab504414d6ac12b1cbca", "commitAfterChange": "422f63ab870fc467aebc0746cb87df8d7691d440", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       void addNodeRecursively(org.w3c.dom.Node node, String prefix, int index)", "signatureAfterChange": "       void addNodeRecursively(org.w3c.dom.Node node, String prefix)", "diff": ["-    void addNodeRecursively(org.w3c.dom.Node node, String prefix, int index) {", "+    void addNodeRecursively(org.w3c.dom.Node node, String prefix) {", "-                String attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \"(\" + attributeNode.getNodeName() + \")\";", "+                String attributeName;", "+                ", "+                if(collapseAttributes){", "+                  attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \".\" + attributeNode.getNodeName();", "+                }", "+                else{", "+                  attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \"(\" + attributeNode.getNodeName() + \")\";", "+\t\t}              ", "+\t\t  ", "-                if (index == 0) {", "-                    project.setNewProperty(prefix, nodeText);", "-                }", "-", "-                project.setNewProperty(prefix + \"[\" + String.valueOf(index) + \"]\", nodeText);", "+                 project.setNewProperty(prefix, nodeText);", "-            org.w3c.dom.NodeList nodeChildren = node.getChildNodes();", "+            org.w3c.dom.NodeList nodeChildren = node.getChildNodes();", "-            StringBuffer childList = new StringBuffer();", "-", "-                if (i != 0) {", "-                    childList.append(\",\");", "-                }", "-                childList.append(node.getNodeName() + \"[\" + String.valueOf(index) + \"]\");", "-                addNodeRecursively(nodeChildren.item(i), prefix, i);", "+                addNodeRecursively(nodeChildren.item(i), prefix);", "-", "-            project.setNewProperty(prefix + \"[]\", childList.toString());", "-"]}]}