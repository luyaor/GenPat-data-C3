{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "534a01e4e6d26c484531eae53df395e8", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e3c9a0e2ace03e06eba6a5e94cbc24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "3267eeb3160fa391d6f568303aaab98a8d99002f", "commitAfterChange": "5184f14831e2987c93d2cbbf5da2318ca5c00241", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname, Attributes attrs,                                    AntXMLContext context) throws SAXParseException", "diff": ["-        public void onStartElement(String uri, String tag, String qname,", "-                                   Attributes attrs,", "-                                   AntXMLContext context)", "-            throws SAXParseException {", "+        public void onStartElement(String uri, String tag, String qname, Attributes attrs,", "+                                   AntXMLContext context) throws SAXParseException {", "-            context.getImplicitTarget().setLocation(", "-                new Location(context.getLocator()));", "+            context.getImplicitTarget().setLocation(new Location(context.getLocator()));", "-                if (attrUri != null", "-                    && !attrUri.equals(\"\")", "-                    && !attrUri.equals(uri)) {", "+                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {", "-                if (context.isIgnoringProjectTag()", "-                    && !dupFile.equals(context.getBuildFile())) {", "+                if (context.isIgnoringProjectTag() && !dupFile.equals(context.getBuildFile())) {", "-                        + context.getCurrentProjectName() + \" defined first in \"", "-                        + dup + \" and again in \" + context.getBuildFile(),", "-                        Project.MSG_WARN);", "+                            + context.getCurrentProjectName() + \" defined first in \"", "+                            + dup + \" and again in \" + context.getBuildFile(), Project.MSG_WARN);", "-                project.setUserProperty(\"ant.file.\"", "-                    + context.getCurrentProjectName(),", "-                    context.getBuildFile().toString());", "+                project.setUserProperty(MagicNames.ANT_FILE + \".\"", "+                    + context.getCurrentProjectName(), context.getBuildFile().toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c67f869c6741601d79ad7fe65701be2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "3267eeb3160fa391d6f568303aaab98a8d99002f", "commitAfterChange": "5184f14831e2987c93d2cbbf5da2318ca5c00241", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname, Attributes attrs,                                    AntXMLContext context) throws SAXParseException", "diff": ["-        public void onStartElement(String uri, String tag, String qname,", "-                                   Attributes attrs,", "-                                   AntXMLContext context)", "-            throws SAXParseException {", "+        public void onStartElement(String uri, String tag, String qname, Attributes attrs,", "+                                   AntXMLContext context) throws SAXParseException {", "-            task.setTaskType(", "-                ProjectHelper.genComponentName(task.getNamespace(), tag));", "+            task.setTaskType(ProjectHelper.genComponentName(task.getNamespace(), tag));", "-                    context.getLocator().getLineNumber(),", "-                    context.getLocator().getColumnNumber());", "+                    context.getLocator().getLineNumber(), context.getLocator().getColumnNumber());", "-            RuntimeConfigurable wrapper", "-                = new RuntimeConfigurable(task, task.getTaskName());", "+            RuntimeConfigurable wrapper = new RuntimeConfigurable(task, task.getTaskName());", "-                if (attrUri != null", "-                    && !attrUri.equals(\"\")", "-                    && !attrUri.equals(uri)) {", "+                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {", "-                if (ANT_TYPE.equals(name)", "-                    || (ANT_CORE_URI.equals(attrUri)", "+                if (ANT_TYPE.equals(name) || (ANT_CORE_URI.equals(attrUri)", "-                    if (index != -1) {", "+                    if (index >= 0) {", "-                                \"Unable to find XML NS prefix \" + prefix);", "+                                    \"Unable to find XML NS prefix \\\"\" + prefix + \"\\\"\");", "-                            mappedUri, value.substring(index + 1));", "+                                mappedUri, value.substring(index + 1));", "-", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5ecad20e50eda80cc9169e97e940b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "3267eeb3160fa391d6f568303aaab98a8d99002f", "commitAfterChange": "5184f14831e2987c93d2cbbf5da2318ca5c00241", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname, Attributes attrs,                                    AntXMLContext context) throws SAXParseException", "diff": ["-        public void onStartElement(String uri, String tag, String qname,", "-                                   Attributes attrs,", "-                                   AntXMLContext context)", "-            throws SAXParseException {", "+        public void onStartElement(String uri, String tag, String qname, Attributes attrs,", "+                                   AntXMLContext context) throws SAXParseException {", "-                if (attrUri != null", "-                    && !attrUri.equals(\"\")", "-                    && !attrUri.equals(uri)) {", "+                if (attrUri != null && !attrUri.equals(\"\") && !attrUri.equals(uri)) {", "-                        throw new BuildException(\"name attribute must \"", "-                            + \"not be empty\");", "+                        throw new BuildException(\"name attribute must \" + \"not be empty\");", "-                        + key + \"\\\"\", context.getLocator());", "+                            + key + \"\\\"\", context.getLocator());", "-                throw new SAXParseException(\"target element appears without \"", "-                    + \"a name attribute\", context.getLocator());", "+                throw new SAXParseException(\"target element appears without a name attribute\",", "+                        context.getLocator());", "-                throw new BuildException(", "-                    \"Duplicate target '\" + name + \"'\", target.getLocation());", "+                throw new BuildException(\"Duplicate target '\" + name + \"'\", target.getLocation());", "-                project.log(\"Already defined in main or a previous import, \"", "-                            + \"ignore \" + name, Project.MSG_VERBOSE);", "+                project.log(\"Already defined in main or a previous import, ignore \"", "+                        + name, Project.MSG_VERBOSE);", "-                String newName = context.getCurrentProjectName()", "-                    + \".\" + name;", "+                String newName = context.getCurrentProjectName() + \".\" + name;"]}]}