{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b8452ee430446062328e0fe92a96b07", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df6f9fa9ed3967ef123767ec9d5f554", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecuteOnTest.java", "commitBeforeChange": "3732eb195b3d24d6480a2d7edb2818b325a3e199", "commitAfterChange": "b0507d4451b72856ddca45183143a96493e8ef3e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void testRedirect5or6(String target)", "signatureAfterChange": "      private void testRedirect5or6(String target) throws IOException", "diff": ["-    private void testRedirect5or6(String target) {", "+    private void testRedirect5or6(String target) throws IOException {", "-        String actualOut = null;", "-        String actualErr = null;", "-        try {", "-            actualOut = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.out\")));", "-            actualErr = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.err\")));", "-        } catch (IOException eyeOhEx) {", "-        }", "-        assertPropertyEquals(\"redirect.out\", \"blah y z\");", "+", "+        assertPropertyEquals(\"redirect.out\", getProject().replaceProperties(", "+            \"blah y z${line.separator}x blah z${line.separator}x y blah\"));", "-        assertEquals(\"unexpected content in redirect.out\",", "-            \"blah y z\\nx blah z\\nx y blah\\n\", actualOut);", "-        assertEquals(\"unexpected content in redirect.err\", null, actualErr);", "+        assertEquals(\"unexpected output\",", "+            \"blah y z\\nx blah z\\nx y blah\\n\", getFileString(\"redirect.out\"));", "+        assertNull(\"unexpected error output\", getFileString(\"redirect.err\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c938167186b5cc81164dfd886cd15da1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecTaskTest.java", "commitBeforeChange": "3732eb195b3d24d6480a2d7edb2818b325a3e199", "commitAfterChange": "b0507d4451b72856ddca45183143a96493e8ef3e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testRedirect5or6(String target)", "signatureAfterChange": "      public void testRedirect5or6(String target) throws IOException", "diff": ["-    public void testRedirect5or6(String target) {", "+    public void testRedirect5or6(String target) throws IOException {", "-        String expectedOut = getProject().getProperty(\"ant.file\") + \" out\\n\";", "-", "-        String actualOut = null;", "-        String actualErr = null;", "-        try {", "-            actualOut = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.out\")));", "-            actualErr = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.err\")));", "-        } catch (IOException eyeOhEx) {", "-        }", "-        assertEquals(\"unexpected output\", \"3\", actualOut.trim());", "-        assertEquals(getProject().getProperty(\"redirect.out\").trim(), \"3\");", "-        assertEquals(\"unexpected error output\", null, actualErr);", "+        assertEquals(\"unexpected output\", \"3\", getFileString(\"redirect.out\").trim());", "+        assertEquals(\"property redirect.out\", \"3\",", "+            getProject().getProperty(\"redirect.out\").trim());", "+        assertNull(\"unexpected error output\", getFileString(\"redirect.err\"));"]}]}