{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acab43c7a01e15ae246db75069972ce4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b1d31b7cfa12f803ec6dd61fe3f9d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "a5b10335fc510556629f738fcb0dfda526d74d8d", "commitAfterChange": "824c630ff9c0aeb0e01d9d08c1541d65dfb3fa99", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testCreateTempFile()", "signatureAfterChange": "     public void testCreateTempFile()", "diff": ["-    public void testCreateTempFile() {", "+    public void testCreateTempFile()", "+    {", "+    // null parent dir", "+    File tmp1 = FILE_UTILS.createTempFile(\"pre\", \".suf\", null, false);", "+    String  tmploc = System.getProperty(\"java.io.tmpdir\");", "+    String name = tmp1.getName();", "+    assertTrue(\"starts with pre\", name.startsWith(\"pre\"));", "+    assertTrue(\"ends with .suf\", name.endsWith(\".suf\"));", "+    assertTrue(\"File was created\", tmp1.exists());", "+    assertEquals((new File(tmploc, tmp1.getName())).getAbsolutePath(),", "+                 tmp1.getAbsolutePath());", "+    tmp1.delete();", "+    ", "+    File dir2 = new File(tmploc+\"/ant-test\");", "+    dir2.mkdir();", "+    removeThis = dir2;", "+    ", "+    File tmp2 = FILE_UTILS.createTempFile(\"pre\", \".suf\", dir2, true);", "+    String name2 = tmp2.getName();", "+    assertTrue(\"starts with pre\", name2.startsWith(\"pre\"));", "+    assertTrue(\"ends with .suf\", name2.endsWith(\".suf\"));", "+    assertTrue(\"File was created\", tmp2.exists());", "+    assertEquals((new File(dir2, tmp2.getName())).getAbsolutePath(),", "+                 tmp2.getAbsolutePath());", "+    tmp2.delete();", "+    dir2.delete();", "+    }", "-        File tmp1 = FILE_UTILS.createTempFile(\"pre\", \".suf\", parent);", "-        File tmp2 = FILE_UTILS.createTempFile(\"pre\", \".suf\", parent);", "-        File tmp3 = FILE_UTILS.createTempFile(\"pre\", \".suf\", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a761df4a6edcb275a2c93a143cab18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void checkHomeDir() throws Exception", "signatureAfterChange": "     private void setupPaths(  Map parameters ) throws Exception", "diff": ["-    private void checkHomeDir() throws Exception", "+    private void setupPaths(  Map parameters ) throws Exception", "-        m_embeddorParameters.setParameter( \"myrmidon.home\", m_homeDir.getAbsolutePath() );", "+        parameters.put( \"myrmidon.home\", m_homeDir );", "-        String path = m_embeddorParameters.getParameter( \"myrmidon.lib.path\", \"lib\" );", "-        File dir = resolveDirectory( m_homeDir, path, \"task-lib-dir.name\" );", "-        m_embeddorParameters.setParameter( \"myrmidon.lib.path\", dir.getAbsolutePath() );", "+        // Build the lib path", "+        String path = (String)parameters.get( \"myrmidon.lib.path\" );", "+        File[] dirs = buildPath( m_homeDir, path, \"lib\", \"lib-dir.name\" );", "+        parameters.put( \"myrmidon.lib.path\", dirs );", "-        path = m_embeddorParameters.getParameter( \"myrmidon.ext.path\", \"ext\" );", "-        dir = resolveDirectory( m_homeDir, path, \"ext-dir.name\" );", "-        m_embeddorParameters.setParameter( \"myrmidon.ext.path\", dir.getAbsolutePath() );", "+        // Build the antlib search path", "+        path = (String)parameters.get( \"myrmidon.antlib.path\" );", "+        dirs = buildPath( m_homeDir, path, \"ext\", \"task-lib-dir.name\" );", "+        parameters.put( \"myrmidon.antlib.path\", dirs );", "+", "+        // Build the extension search path", "+        path = (String)parameters.get( \"myrmidon.ext.path\" );", "+        dirs = buildPath( m_homeDir, path, \"ext\", \"ext-dir.name\" );", "+        parameters.put( \"myrmidon.ext.path\", dirs );"]}]}