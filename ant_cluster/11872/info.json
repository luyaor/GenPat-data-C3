{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a6b509e72432dcd37fb98378d9ca3c0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b5d84211cc032c3b53f3ef8ac74f68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected ClassLoader makeClassLoader(File file)         throws BuildException", "signatureAfterChange": "     protected ClassLoader makeClassLoader(Path clspath)         throws BuildException", "diff": ["-    protected ClassLoader makeClassLoader(File file)", "+    protected ClassLoader makeClassLoader(Path clspath)", "+        if (loaderId == null) {", "+            log(\"Loading definitions from CORE, <classpath> ignored\",", "+                project.MSG_VERBOSE);", "+            return project.getCoreLoader();", "+        }", "+", "+        log(\"Using ClassLoader '\" + loaderId + \"' to load path: \" + clspath,", "+            project.MSG_VERBOSE);", "+        return project.addToLoader(loaderId, clspath);", "+    }", "-        clspath.setLocation(file);", "-\treturn project.getSymbols().addToLoader(loaderId, clspath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158d767785970914794f17d743626cb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void setupClassLoader( final File libDir )", "signatureAfterChange": "     protected ClassLoader createClassLoader( final File libDir )", "diff": ["-    protected void setupClassLoader( final File libDir )", "+    protected ClassLoader createClassLoader( final File libDir )", "+        final ClassLoader candidate = getClass().getClassLoader();", "+        ", "+        if( !(candidate instanceof AntClassLoader) )", "+        {", "+            getLogger().warn( \"Warning: Unable to add entries from \" + ", "+                              \"lib-path to classloader\" );", "+            return candidate;", "+        }", "+        ", "+        final AntClassLoader classLoader = (AntClassLoader)candidate;", "+", "-", "-        final AntLoader classLoader = AntLoader.getLoader();", "-    }", "+        return classLoader;"]}]}