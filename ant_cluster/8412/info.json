{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e7b0f9c7369ccacad0e538e868f672c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e127a8f7991b8b48f22ca7a4bd2e9fe1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "bb97500b49aa094fae4ad7770f31f1cd84148b6e", "commitAfterChange": "3f45fc1d3e95a270f2296d1f156a3bb21a73288a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setWhenempty(String we) throws BuildException", "signatureAfterChange": "     public void setWhenempty(WhenEmpty we)", "diff": ["-    public void setWhenempty(String we) throws BuildException {", "-        we = we.toLowerCase();", "-        // XXX could instead be using EnumeratedAttribute, but this works", "-        if (!\"fail\".equals(we) && !\"skip\".equals(we) && !\"create\".equals(we))", "-            throw new BuildException(\"Unrecognized whenempty attribute: \" + we);", "-        emptyBehavior = we;", "+    public void setWhenempty(WhenEmpty we) {", "+        emptyBehavior = we.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56f112ea271861273c660681915ea9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "f492cc5278c29092c6d1b90491f66839509329d1", "commitAfterChange": "ab0aa53ee1b8cf5058dc8b9ceff1af934f5a7aa7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addTask(Task nestedTask)", "signatureAfterChange": "         public void addTask(Task task)", "diff": ["-    public void addTask(Task nestedTask) {", "-        if (this.nestedTask != null) {", "-        UnknownElement ue = (UnknownElement) nestedTask;", "-        if (!ue.getNamespace().equals(\"\")", "-            || !ue.getTag().equals(\"sequential\")) {", "-            throw new BuildException(\"Unsupported tag \" + ue.getQName());", "-        }", "-        this.nestedTask = ue;", "+         */", "+        public void addTask(Task task) {", "+            nested.add(task);", "+        }"]}]}