{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0acf88eeac263b6dbbb9fcd135ee0da2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004449f018d7eb89a92556b53d089c65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "59024a8a7b8cec05501e3c6b28a5bb5c8478addf", "commitAfterChange": "07b710cc96c363b69d4e7225c96ffc0296354597", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Resource[] getIncludedFileResources()", "signatureAfterChange": "     public Resource[] getIncludedFileResources()", "diff": ["-        Vector myvector = new Vector();", "-        // first check if the archive needs to be scanned again", "-        scanme();", "-        for (Enumeration e = myentries.elements() ; e.hasMoreElements() ;) {", "-            Resource myresource= (Resource) e.nextElement();", "-            if (!myresource.isDirectory() && match(myresource.getName())) {", "-                myvector.addElement(myresource.clone());", "+        if (srcFile != null) {", "+            Vector myvector = new Vector();", "+            // first check if the archive needs to be scanned again", "+            scanme();", "+            for (Enumeration e = myentries.elements(); e.hasMoreElements() ;) {", "+                Resource myresource= (Resource) e.nextElement();", "+                if (!myresource.isDirectory() && match(myresource.getName())) {", "+                    myvector.addElement(myresource.clone());", "+                }", "+            Resource[] resources = new Resource[myvector.size()];", "+            myvector.copyInto(resources);", "+            return resources;", "+        } else {", "+            return super.getIncludedFileResources();", "-        Resource[] resources = new Resource[myvector.size()];", "-        myvector.copyInto(resources);", "-        return resources;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19acb7b8dc36fb8f8396637f8b3f0da5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "59024a8a7b8cec05501e3c6b28a5bb5c8478addf", "commitAfterChange": "07b710cc96c363b69d4e7225c96ffc0296354597", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] getIncludedFiles()", "signatureAfterChange": "     public String[] getIncludedFiles()", "diff": ["-        Vector myvector = new Vector();", "-        // first check if the archive needs to be scanned again", "-        scanme();", "-        for (Enumeration e = myentries.elements() ; e.hasMoreElements() ;) {", "-            Resource myresource= (Resource) e.nextElement();", "-            if (!myresource.isDirectory() && match(myresource.getName())) {", "-                myvector.addElement(myresource.getName());", "+        if (srcFile != null) {", "+            Vector myvector = new Vector();", "+            // first check if the archive needs to be scanned again", "+            scanme();", "+            for (Enumeration e = myentries.elements(); e.hasMoreElements() ;) {", "+                Resource myresource= (Resource) e.nextElement();", "+                if (!myresource.isDirectory() && match(myresource.getName())) {", "+                    myvector.addElement(myresource.getName());", "+                }", "+            String[] files = new String[myvector.size()];", "+            myvector.copyInto(files);", "+            return files;", "+        } else {", "+            return super.getIncludedFiles();", "-        String[] files = new String[myvector.size()];", "-        myvector.copyInto(files);", "-        return files;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21581d8598295f8505d565145404919e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "59024a8a7b8cec05501e3c6b28a5bb5c8478addf", "commitAfterChange": "07b710cc96c363b69d4e7225c96ffc0296354597", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String[] getIncludedDirectories()", "signatureAfterChange": "     public String[] getIncludedDirectories()", "diff": ["-        Vector myvector=new Vector();", "-        // first check if the archive needs to be scanned again", "-        scanme();", "-        for (Enumeration e = myentries.elements() ; e.hasMoreElements() ;) {", "-            Resource myresource= (Resource) e.nextElement();", "-            if (myresource.isDirectory() && match(myresource.getName())) {", "-                myvector.addElement(myresource.getName());", "+        if (srcFile != null) {", "+            Vector myvector=new Vector();", "+            // first check if the archive needs to be scanned again", "+            scanme();", "+            for (Enumeration e = myentries.elements(); e.hasMoreElements() ;) {", "+                Resource myresource= (Resource) e.nextElement();", "+                if (myresource.isDirectory() && match(myresource.getName())) {", "+                    myvector.addElement(myresource.getName());", "+                }", "+            String[] files = new String[myvector.size()];", "+            myvector.copyInto(files);", "+            return files;", "+        } else {", "+            return super.getIncludedDirectories();", "-        String[] files = new String[myvector.size()];", "-        myvector.copyInto(files);", "-        return files;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7ef2e3f048ce8433159bdef3783b30d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "59024a8a7b8cec05501e3c6b28a5bb5c8478addf", "commitAfterChange": "07b710cc96c363b69d4e7225c96ffc0296354597", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Resource[] getIncludedDirectoryResources()", "signatureAfterChange": "     public Resource[] getIncludedDirectoryResources()", "diff": ["-        Vector myvector = new Vector();", "-        // first check if the archive needs to be scanned again", "-        scanme();", "-        for (Enumeration e = myentries.elements() ; e.hasMoreElements() ;) {", "-            Resource myresource= (Resource) e.nextElement();", "-            if (myresource.isDirectory() && match(myresource.getName())) {", "-                myvector.addElement(myresource.clone());", "+        if (srcFile != null) {", "+            Vector myvector = new Vector();", "+            // first check if the archive needs to be scanned again", "+            scanme();", "+            for (Enumeration e = myentries.elements(); e.hasMoreElements() ;) {", "+                Resource myresource= (Resource) e.nextElement();", "+                if (myresource.isDirectory() && match(myresource.getName())) {", "+                    myvector.addElement(myresource.clone());", "+                }", "+            Resource[] resources = new Resource[myvector.size()];", "+            myvector.copyInto(resources);", "+            return resources;", "+        } else {", "+            return super.getIncludedDirectoryResources();", "-        Resource[] resources = new Resource[myvector.size()];", "-        myvector.copyInto(resources);", "-        return resources;"]}]}