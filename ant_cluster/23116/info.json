{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c39421ae087399fe9516f5bc004d8ff9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31951acd1ea13f015c760155386ad77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "d377aa50f3aef9a5dbb9974d1e5818489ab2db99", "commitAfterChange": "944210b384ccb4e335ce5a5c3ded7f784fd3e581", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public void resolveExtensionOfAttributes(Project project)             throws BuildException", "signatureAfterChange": "     public void resolveExtensionOfAttributes(Project project)             throws BuildException", "diff": ["-            String tgName = extensionInfo[0];", "-            String name = extensionInfo[1];", "+            String extPointName = extensionInfo[0];", "+            String targetName = extensionInfo[1];", "+            // if the file has been included or imported, it may have a prefix", "+            // we should consider when trying to resolve the target it is", "+            // extending", "+            String prefixAndSep = extensionInfo.length > 3 ? extensionInfo[3] : null;", "+", "+            // find the target we're extending", "-            if (!projectTargets.containsKey(tgName)) {", "-                String message = \"can't add target \" + name", "-                        + \" to extension-point \" + tgName", "+            Target extPoint = null;", "+            if (prefixAndSep == null) {", "+                // no prefix - not from an imported/included build file", "+                extPoint = (Target) projectTargets.get(extPointName);", "+            } else {", "+                // we have a prefix, which means we came from an include/import", "+", "+                // FIXME: here we handle no particular level of include. We try", "+                // the fully prefixed name, and then the non-prefixed name. But", "+                // there might be intermediate project in the import stack,", "+                // which prefix should be tested before testing the non-prefix", "+                // root name.", "+", "+                extPoint = (Target) projectTargets.get(prefixAndSep + extPointName);", "+                if (extPoint == null) {", "+                    extPoint = (Target) projectTargets.get(extPointName);", "+                }", "+            }", "+", "+            // make sure we found a point to extend on", "+            if (extPoint == null) {", "+                String message = \"can't add target \" + targetName", "+                        + \" to extension-point \" + extPointName", "-                    Target target = (Target) projectTargets.get(name);", "-                    project.log(target, \"Warning: \" + message, Project.MSG_WARN);", "+                    Target t = (Target) projectTargets.get(targetName);", "+                    project.log(t, \"Warning: \" + message, Project.MSG_WARN);", "-                Target t = (Target) projectTargets.get(tgName);", "-                if (!(t instanceof ExtensionPoint)) {", "-                    throw new BuildException(\"referenced target \" + tgName", "+                if (!(extPoint instanceof ExtensionPoint)) {", "+                    throw new BuildException(\"referenced target \" + extPointName", "-                t.addDependency(name);", "+                extPoint.addDependency(targetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbf50aba190b7beb6830389d79c27d47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "39b1929142d8d29f58b4654edf13d677e3959dcb", "commitAfterChange": "416d46165ba953cbc74387d62e82515e8180208a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "   public void send()", "diff": ["-    /** Sends the email  */", "-    public void send() {", "+  /** Sends the email  */", "+  public void send() {", "-            if (subject != null) {", "-                msg.setSubject(subject);", "+            // Choosing character set of the mail message", "+            // First: looking it from MimeType", "+            String charset = parseCharSetFromMimeType(message.getMimeType());", "+            if(charset!=null) {", "+              // Assign/reassign message charset from MimeType", "+                message.setCharset(charset);", "+            // Next: looking if charset having explict definition", "+            else {", "+              charset = message.getCharset();", "+              if(charset==null) {", "+                // Using default", "+                charset=defaultCharset;", "+                message.setCharset(charset);", "+              }", "+            }", "+", "+            // Using javax.activation.DataSource paradigm", "+            StringDataSource sds = new StringDataSource();", "+            sds.setContentType(message.getMimeType());", "+            sds.setCharset(charset);", "+", "+            if (subject != null)", "+                msg.setSubject(subject,charset);", "-            ByteArrayOutputStream baos = new ByteArrayOutputStream();", "-            PrintStream out = new PrintStream(baos);", "-", "+            PrintStream out = new PrintStream(sds.getOutputStream());", "-", "-            textbody.setContent(baos.toString(), message.getMimeType());", "+            textbody.setDataHandler(new DataHandler(sds));"]}]}