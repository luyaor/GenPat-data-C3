{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ed741a0be7f0d9dce893243916a44b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00319862bbe831249c7b34d2d6bac8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cbce4bf09d398a8f7cb9011b3f859f09274aa82", "commitAfterChange": "c2dba687256b368d6ca095487a17d432dcab22e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "diff": ["-            throws BuildException", "-    {", "+            throws BuildException {", "-        AntXmlContext context=handler.context;", "+        AntXMLContext context = handler.context;", "-        if(source instanceof File) {", "-            context.buildFile=(File)source;", "+        File buildFile = null;", "+", "+        if (source instanceof File) {", "+            buildFile = (File) source;", "-            throw new BuildException( \"Source \" + source.getClass().getName() +", "-                                      \" not supported by this plugin\" );", "+            throw new BuildException(\"Source \" + source.getClass().getName() +", "+                                     \" not supported by this plugin\");", "-        context.buildFile = new File(context.buildFile.getAbsolutePath());", "-        context.buildFileParent = new File(context.buildFile.getParent());", "+        buildFile = new File(buildFile.getAbsolutePath());", "+        context.setBuildFile(buildFile);", "-            context.parser =JAXPUtils.getNamespaceXMLReader();", "+            XMLReader parser = JAXPUtils.getNamespaceXMLReader();", "-            String uri = fu.toURI(context.buildFile.getAbsolutePath());", "+            String uri = fu.toURI(buildFile.getAbsolutePath());", "-            inputStream = new FileInputStream(context.buildFile);", "+            inputStream = new FileInputStream(buildFile);", "-            project.log(\"parsing buildfile \" + context.buildFile + \" with URI = \" + uri, Project.MSG_VERBOSE);", "+            project.log(\"parsing buildfile \" + buildFile", "+                + \" with URI = \" + uri, Project.MSG_VERBOSE);", "-            context.parser.setContentHandler(hb);", "-            context.parser.setEntityResolver(hb);", "-            context.parser.setErrorHandler(hb);", "-            context.parser.setDTDHandler(hb);", "-            context.parser.parse(inputSource);", "-        } catch(SAXParseException exc) {", "-            Location location =", "-                new Location(exc.getSystemId(), exc.getLineNumber(), exc.getColumnNumber());", "+            parser.setContentHandler(hb);", "+            parser.setEntityResolver(hb);", "+            parser.setErrorHandler(hb);", "+            parser.setDTDHandler(hb);", "+            parser.parse(inputSource);", "+        } catch (SAXParseException exc) {", "+            Location location = new Location(exc.getSystemId(),", "+                exc.getLineNumber(), exc.getColumnNumber());", "-        }", "-        catch(SAXException exc) {", "+        } catch (SAXException exc) {", "-        }", "-        catch(FileNotFoundException exc) {", "+        } catch (FileNotFoundException exc) {", "-        }", "-        catch(UnsupportedEncodingException exc) {", "-              throw new BuildException(\"Encoding of project file is invalid.\",exc);", "-        }", "-        catch(IOException exc) {", "-            throw new BuildException(\"Error reading project file: \" +exc.getMessage(), exc);", "-        }", "-        finally {", "+        } catch (UnsupportedEncodingException exc) {", "+              throw new BuildException(\"Encoding of project file is invalid.\",", "+                exc);", "+        } catch (IOException exc) {", "+            throw new BuildException(\"Error reading project file: \"", "+                + exc.getMessage(), exc);", "+        } finally {", "-                }", "-                catch (IOException ioe) {", "+                } catch (IOException ioe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db251a334f19c7923adc4981cdabab4c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "536bfb63e3ad71036b032550ca8241e07e1f5d45", "commitAfterChange": "b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void parse() throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source) throws BuildException", "diff": ["-    private void parse() throws BuildException {", "-        FileInputStream inputStream = null;", "-        InputSource inputSource = null;", "+    public void parse(Project project, Object source) throws BuildException {", "+        throw new BuildException(\"ProjectHelper.parse() must be implemented in a helper plugin \"", "+                                 + this.getClass().getName());", "+    }", "-            SAXParser saxParser = getParserFactory().newSAXParser();", "-                parser = saxParser.getParser();", "-            } catch (SAXException exc) {", "-                parser = new XMLReaderAdapter(saxParser.getXMLReader());", "-            }", "-", "-            String uri = \"file:\" + buildFile.getAbsolutePath().replace('\\\\', '/');", "-            for (int index = uri.indexOf('#'); index != -1; index = uri.indexOf('#')) {", "-                uri = uri.substring(0, index) + \"%23\" + uri.substring(index+1);", "-            }", "-            ", "-            inputStream = new FileInputStream(buildFile);", "-            inputSource = new InputSource(inputStream);", "-            inputSource.setSystemId(uri);", "-            project.log(\"parsing buildfile \" + buildFile + \" with URI = \" + uri, Project.MSG_VERBOSE);", "-            HandlerBase hb = new RootHandler();", "-            parser.setDocumentHandler(hb);", "-            parser.setEntityResolver(hb);", "-            parser.setErrorHandler(hb);", "-            parser.setDTDHandler(hb);", "-            parser.parse(inputSource);", "-        }", "-        catch(ParserConfigurationException exc) {", "-            throw new BuildException(\"Parser has not been configured correctly\", exc);", "-        }", "-        catch(SAXParseException exc) {", "-            Location location =", "-                new Location(buildFile.toString(), exc.getLineNumber(), exc.getColumnNumber());", "-", "-            Throwable t = exc.getException();", "-            if (t instanceof BuildException) {", "-                BuildException be = (BuildException) t;", "-                if (be.getLocation() == Location.UNKNOWN_LOCATION) {", "-                    be.setLocation(location);", "-                throw be;", "-            }", "-            ", "-            throw new BuildException(exc.getMessage(), t, location);", "-        }", "-        catch(SAXException exc) {", "-            Throwable t = exc.getException();", "-            if (t instanceof BuildException) {", "-                throw (BuildException) t;", "-            }", "-            throw new BuildException(exc.getMessage(), t);", "-        }", "-        catch(FileNotFoundException exc) {", "-            throw new BuildException(exc);", "-        }", "-        catch(IOException exc) {", "-            throw new BuildException(\"Error reading project file\", exc);", "-        }", "-        finally {", "-            if (inputStream != null) {", "-                try {", "-                    inputStream.close();", "-                }", "-                catch (IOException ioe) {", "-                    // ignore this", "-                }", "-            }", "-        }", "-    }"]}]}