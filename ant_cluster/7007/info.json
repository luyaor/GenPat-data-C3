{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81e917bce3c8ba471dba0a6eb20ea0f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29561932ae1788a9444bc3f51f8b06b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "cf12b9b863b658fec3fa94eecd4c0e7df3b8e986", "commitAfterChange": "05988f712e1b2011194e635b8ffe5b57aebd8bf1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Collection getCollection()", "signatureAfterChange": "         protected Collection getCollection()", "diff": ["+         */", "+        protected Collection getCollection() {", "+            ArrayList result = new ArrayList();", "+outer:      for (Iterator ri = w.getResourceCollection().iterator(); ri.hasNext();) {", "+                Resource r = (Resource) ri.next();", "+                for (Iterator i = getSelectors(); i.hasNext();) {", "+                    if (!((ResourceSelector) (i.next())).isSelected(r)) {", "+                        continue outer;", "+                    }", "+                }", "+                result.add(r);", "+            }", "+            return result;", "+        }", "-     */", "-    protected Collection getCollection() {", "-        ArrayList result = new ArrayList();", "-outer:  for (Iterator ri = rc.iterator(); ri.hasNext();) {", "-            Resource r = (Resource) ri.next();", "-            for (Iterator i = getSelectors(); i.hasNext();) {", "-                if (!((ResourceSelector) (i.next())).isSelected(r)) {", "-                    continue outer;", "-                }", "-            }", "-            result.add(r);", "-        }", "-        return result;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8dea50cf2aedc81695f02e3bddeacb3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/repository/HttpRepository.java", "commitBeforeChange": "c8203de650acea3fa8e0e1a6acce7425f5bbe322", "commitAfterChange": "7651d02856325bec057619d215ee30c4c605ee80", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void connect(GetLibraries newOwner)", "signatureAfterChange": "     public void connect(GetLibraries newOwner)", "diff": ["-        if (client != null) {", "-            throw new BuildException(ERROR_REENTRANT_USE);", "-        }", "-        client = new HttpClient();", "-        //retry handler", "-        retryhandler = new DefaultMethodRetryHandler();", "-        retryhandler.setRequestSentRetryEnabled(false);", "-        retryhandler.setRetryCount(retries);", "-        //authentication", "-        if (username != null) {", "-            Credentials defaultcreds =", "-                    new UsernamePasswordCredentials(username, password);", "-            client.getState().setCredentials(realm,", "-                    repository.getHost(),", "-                    defaultcreds);", "-            //turn auth on on first call", "-            client.getState().setAuthenticationPreemptive(true);", "-        }", "-        //cookies", "-        client.getState().setCookiePolicy(CookiePolicy.COMPATIBILITY);"]}]}