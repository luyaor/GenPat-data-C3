{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7922a91493f6468b87b43254be775e29", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b8c0ecbab8f7f7a690b874e3de74cc7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     @Override \tpublic void scan() throws IllegalStateException", "signatureAfterChange": " \tpublic void scan() throws IllegalStateException", "diff": ["-    @Override", "-                    } catch (InterruptedException e) {", "+                    } catch (final InterruptedException e) {", "-        File savedBase = basedir;", "+        final File savedBase = basedir;", "-                boolean nullIncludes = (includes == null);", "+                final boolean nullIncludes = (includes == null);", "-                boolean nullExcludes = (excludes == null);", "+                final boolean nullExcludes = (excludes == null);", "-        } catch (IOException ex) {", "+        } catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf710bdc7e0ee3f65d116b09da1bfd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean isDanglingSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isDanglingSymbolicLink(final File parent, final String name)         throws IOException", "diff": ["-    public boolean isDanglingSymbolicLink(File parent, String name)", "+    public boolean isDanglingSymbolicLink(final File parent, final String name)", "-        File f = new File(parent, name);", "+        final File f = new File(parent, name);", "-            String[] c = parent.list(new FilenameFilter() {", "-                    @Override", "-\t\t\t\t\tpublic boolean accept(File d, String n) {", "+            final String[] c = parent.list(new FilenameFilter() {", "+\t\t\t\t\tpublic boolean accept(final File d, final String n) {"]}]}