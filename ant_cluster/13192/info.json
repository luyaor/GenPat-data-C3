{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c10f3f9cceb9ed9f620fcf3f1fe7329", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa661620f06329a8cf118036404b8d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object createElement( Project project, Object element, String elementName )         throws BuildException", "signatureAfterChange": "     public Object createElement( Project project, Object element, String elementName )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        NestedCreator nc = ( NestedCreator )nestedCreators.get( elementName );", "+        NestedCreator nc = (NestedCreator)nestedCreators.get( elementName );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-                ( ( ProjectComponent )nestedElement ).setProject( project );", "+                ( (ProjectComponent)nestedElement ).setProject( project );", "-            throw new BuildException( ie );", "+            throw new TaskException( ie.getMessage(), ie );", "-            throw new BuildException( ine );", "+            throw new TaskException( ine.getMessage(), ine );", "-            if( t instanceof BuildException )", "+            if( t instanceof TaskException )", "-                throw ( BuildException )t;", "+                throw (TaskException)t;", "-            throw new BuildException( t );", "+            throw new TaskException( t.getMessage(), t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76842f034d84d851c95299cb31a788af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object createElement( Project project, Object element, String elementName )         throws BuildException", "signatureAfterChange": "     public Object createElement( Project project, Object element, String elementName )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        NestedCreator nc = ( NestedCreator )nestedCreators.get( elementName );", "+        NestedCreator nc = (NestedCreator)nestedCreators.get( elementName );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-                ( ( ProjectComponent )nestedElement ).setProject( project );", "+                ( (ProjectComponent)nestedElement ).setProject( project );", "-            throw new BuildException( ie );", "+            throw new TaskException( ie.getMessage(), ie );", "-            throw new BuildException( ine );", "+            throw new TaskException( ine.getMessage(), ine );", "-            if( t instanceof BuildException )", "+            if( t instanceof TaskException )", "-                throw ( BuildException )t;", "+                throw (TaskException)t;", "-            throw new BuildException( t );", "+            throw new TaskException( t.getMessage(), t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b16ba9027a326e4e8ff5aedb1059cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java", "commitBeforeChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "commitAfterChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      Project buildFromFile(File file) throws AntException", "signatureAfterChange": "     public Project buildFromFile(File file) throws AntException", "diff": ["-    Project buildFromFile(File file) throws AntException {", "+     */", "+    public Project buildFromFile(File file) throws AntException {", "+            bhb.setProjectFileLocation(file);", "-            return bhb.getProject();", "+            Project project = bhb.getProject();", "+            project.setFrontEnd(frontEnd);", "+            return project;", "-            throw new AntException(pce.getMessage());", "+            throw new AntException(pce);", "-            System.out.println(se);", "-            System.out.println(se.getMessage());", "-            throw new AntException(se.getMessage());", "+            Exception e = se.getException();", "+            if (e != null && e instanceof AntException) {", "+                // it's one of our own thrown from inside the parser to stop it", "+                throw (AntException)e;", "+            }", "+            throw new AntException(se);", "-            throw new AntException(ioe.getMessage());", "+            throw new AntException(ioe);"]}]}