{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f743f36d7652e056683f15d21a0f5dea", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dc8b82f6bcbcfdfa0e36b0e0cd10b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setWorkdir(final File inValue)", "signatureAfterChange": "      public void processDescriptor(String aDescriptorName, SAXParser saxParser)", "diff": ["-     */", "-    public void setWorkdir(final File inValue) {", "-        setOuputdir(inValue);", "-    }", "+", "+    public void processDescriptor(String aDescriptorName, SAXParser saxParser) {", "+\t", "+        descriptorName = aDescriptorName;", "+ ", "+        log(\"JOnAS Deployment Tool processing: \" + descriptorName,", "+        super.processDescriptor(descriptorName, saxParser);", "+", "+\tif ( outputdir != null ) {", "+\t    // the method deleteOnExit() do not work because the directory is not empty\t     ", "+\t    log(\"Deleting temp output directory '\" + outputdir + \"'.\", Project.MSG_VERBOSE);", "+\t    deleteAllFiles(outputdir);", "+\t}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1eca1a4a71b37c93ebe91da27ffe98f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "261050f72e9a86e4249c9ee91495ec796f3c382b", "commitAfterChange": "e5f3393251f3b7b8b8df1e5300559828bc73d8f0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized void setAttribute(String name, String value)", "signatureAfterChange": "     public synchronized void setAttribute(String name, Object value)", "diff": ["+     */", "+    public synchronized void setAttribute(String name, Object value) {", "-            this.polyType = value;", "+            this.polyType = value == null ? null : value.toString();", "-                attributeMap = new LinkedHashMap();", "+                attributeMap = new LinkedHashMap<String, Object>();", "-                LinkedHashMap newAttributeMap = new LinkedHashMap();", "+                LinkedHashMap<String, Object> newAttributeMap = new LinkedHashMap<String, Object>();", "-                this.id = value;", "+                this.id = value == null ? null : value.toString();"]}]}