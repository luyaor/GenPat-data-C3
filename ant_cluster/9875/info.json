{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43c57c8517a243ad65e6e753ead60adf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdfa444405ff4c1227ad4ede9d97147e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "f8ab615aea394cd89a8190fa4aa43124030c0c39", "commitAfterChange": "9bed3906ffbdca75b6414a193f2c13f1028fcaf7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["+        validate();", "-        Commandline baseCmd = null;// the common portion of our cmd line", "-        DirectoryScanner scanner = null;// Scanner to find our inputs", "-        String[] files;// list of files to process", "+        final DirectoryScanner scanner = getDirectoryScanner( m_srcDir );", "+        String[] files = scanner.getIncludedFiles();", "-        // default srcDir to basedir", "-        if( srcDir == null )", "+        final SourceFileScanner sfs = new SourceFileScanner( this );", "+        final FileNameMapper mapper = buildMapper();", "+        files = sfs.restrict( files, m_srcDir, m_destDir, mapper );", "+        int count = files.length;", "+        if( count == 0 )", "-            srcDir = getBaseDirectory();", "+            return;", "+        final String message = \"Converting \" + count + \" file\" +", "+            ( count != 1 ? \"s\" : \"\" ) + \" from \" + m_srcDir + \" to \" +", "+            m_destDir;", "+        getLogger().info( message );", "+", "+        for( int i = 0; i < files.length; i++ )", "+        {", "+            final String name = mapper.mapFileName( files[ i ] )[ 0 ];", "+            convert( files[ i ], name );", "+        }", "+    }", "-        if( destDir == null )", "-        if( srcDir.equals( destDir ) && extension == null && mapper == null )", "-            throw new TaskException( \"The ext attribute or a mapper must be set if\"", "-                                     + \" src and dest dirs are the same.\" );", "-        FileNameMapper m = null;", "-        if( mapper == null )", "-            if( extension == null )", "-            {", "-                m = new IdentityMapper();", "-            }", "-            else", "-            {", "-                m = new ExtMapper();", "-            }", "-        }", "-        else", "-        {", "-            m = mapper.getImplementation();", "-        }", "-", "-        scanner = getDirectoryScanner( srcDir );", "-        files = scanner.getIncludedFiles();", "-        SourceFileScanner sfs = new SourceFileScanner( this );", "-        files = sfs.restrict( files, srcDir, destDir, m );", "-        int count = files.length;", "-        if( count == 0 )", "-        {", "-            return;", "-        }", "-        String message = \"Converting \" + count + \" file\"", "-            + ( count != 1 ? \"s\" : \"\" ) + \" from \";", "-        getLogger().info( message + srcDir + \" to \" + destDir );", "-        for( int i = 0; i < files.length; i++ )", "-        {", "-            convert( files[ i ], m.mapFileName( files[ i ] )[ 0 ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a9f3e7a11493feb578ad8482498c83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "f8ab615aea394cd89a8190fa4aa43124030c0c39", "commitAfterChange": "9bed3906ffbdca75b6414a193f2c13f1028fcaf7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["+        validate();", "-        Commandline baseCmd = null;// the common portion of our cmd line", "-        DirectoryScanner scanner = null;// Scanner to find our inputs", "-        String[] files;// list of files to process", "+        final DirectoryScanner scanner = getDirectoryScanner( m_srcDir );", "+        String[] files = scanner.getIncludedFiles();", "-        // default srcDir to basedir", "-        if( srcDir == null )", "+        final SourceFileScanner sfs = new SourceFileScanner( this );", "+        final FileNameMapper mapper = buildMapper();", "+        files = sfs.restrict( files, m_srcDir, m_destDir, mapper );", "+        int count = files.length;", "+        if( count == 0 )", "-            srcDir = getBaseDirectory();", "+            return;", "+        final String message = \"Converting \" + count + \" file\" +", "+            ( count != 1 ? \"s\" : \"\" ) + \" from \" + m_srcDir + \" to \" +", "+            m_destDir;", "+        getLogger().info( message );", "+", "+        for( int i = 0; i < files.length; i++ )", "+        {", "+            final String name = mapper.mapFileName( files[ i ] )[ 0 ];", "+            convert( files[ i ], name );", "+        }", "+    }", "-        if( destDir == null )", "-        if( srcDir.equals( destDir ) && extension == null && mapper == null )", "-            throw new TaskException( \"The ext attribute or a mapper must be set if\"", "-                                     + \" src and dest dirs are the same.\" );", "-        FileNameMapper m = null;", "-        if( mapper == null )", "-            if( extension == null )", "-            {", "-                m = new IdentityMapper();", "-            }", "-            else", "-            {", "-                m = new ExtMapper();", "-            }", "-        }", "-        else", "-        {", "-            m = mapper.getImplementation();", "-        }", "-", "-        scanner = getDirectoryScanner( srcDir );", "-        files = scanner.getIncludedFiles();", "-        SourceFileScanner sfs = new SourceFileScanner( this );", "-        files = sfs.restrict( files, srcDir, destDir, m );", "-        int count = files.length;", "-        if( count == 0 )", "-        {", "-            return;", "-        }", "-        String message = \"Converting \" + count + \" file\"", "-            + ( count != 1 ? \"s\" : \"\" ) + \" from \";", "-        getLogger().info( message + srcDir + \" to \" + destDir );", "-        for( int i = 0; i < files.length; i++ )", "-        {", "-            convert( files[ i ], m.mapFileName( files[ i ] )[ 0 ] );"]}]}