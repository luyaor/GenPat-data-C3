{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "612f71bc7db54acf6e7f15825ca85f2d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77ec2c485de74fff417d3a279e5d8a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/spi/Service.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public InputStream getAsStream() throws IOException", "signatureAfterChange": "     public InputStream getAsStream() throws IOException", "diff": ["-        ByteArrayOutputStream arrayOut;", "-        Writer writer;", "-        Iterator providerIterator;", "-        Provider provider;", "-", "-        arrayOut = new ByteArrayOutputStream();", "-        writer = new OutputStreamWriter(arrayOut, \"UTF-8\");", "-        providerIterator = providerList.iterator();", "-        while (providerIterator.hasNext()) {", "-            provider = (Provider) providerIterator.next();", "+        ByteArrayOutputStream arrayOut = new ByteArrayOutputStream();", "+        Writer writer = new OutputStreamWriter(arrayOut, \"UTF-8\");", "+        for (Provider provider : providerList) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f35134b12b31f6ed00841cd390c201b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void writeServices(ZipOutputStream zOut) throws IOException", "signatureAfterChange": "     private void writeServices(ZipOutputStream zOut) throws IOException", "diff": ["-        Iterator serviceIterator;", "-        Service service;", "-", "-        serviceIterator = serviceList.iterator();", "-        while (serviceIterator.hasNext()) {", "-           service = (Service) serviceIterator.next();", "-", "+        for (Service service : serviceList) {"]}]}