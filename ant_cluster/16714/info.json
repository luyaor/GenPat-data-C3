{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff449e24f37069bec5e3574ddab69b36", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d63e63922e47238fbc8ba6edb63249", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/smb/SmbFileNameParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParsedUri parseUri( String uriStr ) throws FileSystemException", "signatureAfterChange": "     public ParsedUri parseSmbUri( final String uriStr )         throws FileSystemException", "diff": ["-    public ParsedUri parseUri( String uriStr ) throws FileSystemException", "+    public ParsedUri parseSmbUri( final String uriStr )", "+        throws FileSystemException", "-        ParsedSmbUri uri = new ParsedSmbUri();", "-        StringBuffer name = new StringBuffer();", "+        final ParsedSmbUri uri = new ParsedSmbUri();", "+        final StringBuffer name = new StringBuffer();", "-        // Normalise paths", "+        // Convert the hostname to lowercase", "+        final String hostname = uri.getHostName().toLowerCase();", "+        uri.setHostName( hostname );", "+", "+        // TODO - drop the default port", "+", "+        // Decode and adjust separators", "+        decode( name, 0, name.length() );", "-        String share = extractFirstElement( name );", "+        final String share = extractFirstElement( name );", "+        // Normalise the path", "+        normalisePath( name );", "+", "-        rootUri.append( uri.getScheme() );", "-        rootUri.append( \"://\" );", "-        String userInfo = uri.getUserInfo();", "-        if( userInfo != null )", "-        {", "-            rootUri.append( userInfo );", "-            rootUri.append( '@' );", "-        }", "-        rootUri.append( uri.getHostName() );", "+        appendRootUri( uri, rootUri );", "-        uri.setRootURI( rootUri.toString() );", "+        uri.setRootUri( rootUri.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a79eac65d19203ec0b965a12d3efbdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileNameParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParsedUri parseUri( String uriStr ) throws FileSystemException", "signatureAfterChange": "     public ParsedZipUri parseZipUri( final String uriStr )         throws FileSystemException", "diff": ["-    public ParsedUri parseUri( String uriStr ) throws FileSystemException", "+    public ParsedZipUri parseZipUri( final String uriStr )", "+        throws FileSystemException", "-        StringBuffer name = new StringBuffer();", "-        ParsedZipUri uri = new ParsedZipUri();", "+        final StringBuffer name = new StringBuffer();", "+        final ParsedZipUri uri = new ParsedZipUri();", "-        String scheme = extractScheme( uriStr, name );", "+        final String scheme = extractScheme( uriStr, name );", "-        String zipName = extractZipName( name );", "-        uri.setZipFile( zipName );", "+        final String zipName = extractZipName( name );", "+        uri.setZipFileName( zipName );", "-        // Adjust the separators", "-        fixSeparators( name );", "-", "-        // Normalise the file name", "+        // Decode and normalise the file name", "+        decode( name, 0, name.length() );", "-", "-        // Build root URI", "-        StringBuffer rootUri = new StringBuffer();", "-        rootUri.append( scheme );", "-        rootUri.append( \":\" );", "-        rootUri.append( zipName );", "-        rootUri.append( \"!\" );", "-        uri.setRootURI( rootUri.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1069a3665364e5b3971f4b6f872fe14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/ftp/FtpFileNameParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParsedUri parseUri( String uriStr ) throws FileSystemException", "signatureAfterChange": "     public ParsedFtpUri parseFtpUri( final String uriStr )         throws FileSystemException", "diff": ["-    public ParsedUri parseUri( String uriStr ) throws FileSystemException", "+    public ParsedFtpUri parseFtpUri( final String uriStr )", "+        throws FileSystemException", "-        ParsedFtpUri uri = new ParsedFtpUri();", "+        final ParsedFtpUri uri = new ParsedFtpUri();", "+        // Adjust the hostname to lower-case", "+        final String hostname = uri.getHostName().toLowerCase();", "+        uri.setHostName( hostname );", "+", "+        // Drop the port if it is 21", "+        final String port = uri.getPort();", "+        if( port != null && port.equals( \"21\" ) )", "+        {", "+            uri.setPort( null );", "+        }", "+", "-        String userInfo = uri.getUserInfo();", "+        final String userInfo = uri.getUserInfo();", "+        // Now build the root URI", "+        final StringBuffer rootUri = new StringBuffer();", "+        appendRootUri( uri, rootUri );", "+        uri.setRootUri( rootUri.toString() );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5b4c37a7359eebbebb61c231283672", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/local/LocalFileNameParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public ParsedUri parseUri( final String uriStr )         throws FileSystemException", "signatureAfterChange": "     public ParsedUri parseFileUri( final String uriStr )         throws FileSystemException", "diff": ["-    public ParsedUri parseUri( final String uriStr )", "+    public ParsedUri parseFileUri( final String uriStr )", "-        StringBuffer name = new StringBuffer();", "-        ParsedFileUri uri = new ParsedFileUri();", "+        final StringBuffer name = new StringBuffer();", "+        final ParsedFileUri uri = new ParsedFileUri();", "-        String scheme = extractScheme( uriStr, name );", "+        final String scheme = extractScheme( uriStr, name );", "-        // Adjust the separators", "+        // Remove encoding, and adjust the separators", "+        decode( name, 0, name.length() );", "-        String rootFile = extractRootPrefix( uriStr, name );", "+        final String rootFile = extractRootPrefix( uriStr, name );", "-        StringBuffer rootUri = new StringBuffer();", "+        final StringBuffer rootUri = new StringBuffer();", "-        uri.setRootURI( rootUri.toString() );", "+        uri.setRootUri( rootUri.toString() );"]}]}