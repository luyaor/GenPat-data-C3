{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95b49ab4f3d6a9b86e9dcc19d7743a3b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06fa9ee92ac3a730ab058b0659803150", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ExpandProperties.java", "commitBeforeChange": "314d4d7ba7942ae0427800f340ff045f9f0b084e", "commitAfterChange": "4b3719fe42e1068aa206645dde99be722f6a89c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-", "-        int ch = -1;", "-", "-        if (queuedData != null && queuedData.length() == 0) {", "-            queuedData = null;", "-        }", "-", "-        if (queuedData != null) {", "-            ch = queuedData.charAt(0);", "-            queuedData = queuedData.substring(1);", "-            if (queuedData.length() == 0) {", "-                queuedData = null;", "-            }", "-        } else {", "-            queuedData = readFully();", "-            if (queuedData == null || queuedData.length() == 0) {", "-                ch = -1;", "-            } else {", "+        if (index > EOF) {", "+            if (buffer == null) {", "+                String data = readFully();", "-                        ", "+", "-                queuedData = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)", "-                        .getExpanders(), getProperty).parseProperties(queuedData).toString();", "-                return read();", "+                buffer = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)", "+                        .getExpanders(), getProperty).parseProperties(data).toString()", "+                        .toCharArray();", "+            if (index < buffer.length) {", "+                return buffer[index++];", "+            }", "+            index = EOF;", "-        return ch;", "+        return EOF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ab8ef6ed9ec3bf357c51721d88e443", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "62f2142b3431002933bf1281d244c164ed962890", "commitAfterChange": "6cbeee38fa5502baa5d75036ad2c0418cf808d56", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "         private void executeInteger(String oldValue) throws BuildException", "signatureAfterChange": "         private void executeInteger(String oldValue) throws BuildException", "diff": ["-            int value = 0;          // the value given in the 'value' attr", "-            int newValue  = 0;      // the new value, after the operation", "-            int oldIntValue  = 0;   // the old value from the prop file", "+            int currentValue = DEFAULT_INT_VALUE;", "+            int newValue  = DEFAULT_INT_VALUE;", "-            DecimalFormat fmt = (m_pattern != null) ? new DecimalFormat(m_pattern)", "+", "+            DecimalFormat fmt = (pattern != null) ? new DecimalFormat(pattern)", "-", "-            if (oldValue != null) {", "-                try {", "-                    oldIntValue = fmt.parse(oldValue).intValue();", "-                }", "-                catch (NumberFormatException nfe) { /* swollow */ }", "-                catch (ParseException pe)  { /* swollow */ }", "+            try {", "+                currentValue = fmt.parse(getCurrentValue(oldValue)).intValue();", "-            if (m_value != null) {", "-                try {", "-                    value = fmt.parse(m_value).intValue();", "-                }", "-                catch (NumberFormatException nfe) { /* swollow */ }", "-                catch (ParseException pe)  { /* swollow */ }", "+            catch (NumberFormatException nfe) { /* swollow */ }", "+            catch (ParseException pe)  { /* swollow */ }", "+            ", "+            if (operation == Operation.EQUALS_OPER) {", "+                newValue = currentValue;", "-            if (m_default != null && oldValue == null) {", "+            else {", "+                int operationValue = 1;", "-                    oldIntValue = fmt.parse(m_default).intValue();", "+                    operationValue = fmt.parse(value).intValue();", "+                ", "+                if (operation == Operation.INCREMENT_OPER) {", "+                    newValue = currentValue + operationValue;", "+                }", "+                else if (operation == Operation.DECREMENT_OPER) {", "+                    newValue = currentValue - operationValue;", "+                }", "-            if (m_operation == Operation.EQUALS_OPER) {", "-                newValue = oldIntValue;", "-            }", "-            else if (m_operation == Operation.INCREMENT_OPER) {", "-                if (m_value == \"\") {", "-                    // No value attr was given, so just increment the", "-                    // old value from the prop file (0 by assignment above,", "-                    // if none).", "-                    newValue = ++oldIntValue;", "-                } else {", "-                    // A value attr was given, so add the old value from", "-                    // the prop file (0, if none) to the specified value.", "-                    newValue = (oldIntValue + value) ;", "-                }", "-            }", "-            else if (m_operation == Operation.DECREMENT_OPER) {", "-                if (m_value == \"\") {", "-                    // No value attr was given, so just decrement the", "-                    // old value from the prop file (0 by assignment above,", "-                    // if none).", "-                    newValue = --oldIntValue;", "-                } else {", "-                    // A value attr was given, so subtract from the", "-                    // old value from the prop file (0, if none) the", "-                    // specified value.", "-                    newValue = (oldIntValue - value);", "-                }", "-            }", "-            m_value = fmt.format(newValue);", "+            value = fmt.format(newValue);"]}]}