{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96b0f2122f7eebdc69586218ce43f24f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5733d294dcbb2a793ee7ab4ee976eb32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "bc9dc4239a1889d0da388b3e52372dbb1ded7f09", "commitAfterChange": "d7d6e9fa4c426534b21ce6a7011b40e7a6a63f13", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws TaskException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-            reader = encoding == null ? new FileReader( src )", "-                : new InputStreamReader( new FileInputStream( src ), encoding );", "-            writer = encoding == null ? new FileWriter( temp )", "-                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+            reader = m_encoding == null ? new FileReader( src )", "+                : new InputStreamReader( new FileInputStream( src ), m_encoding );", "+            writer = m_encoding == null ? new FileWriter( temp )", "+                : new OutputStreamWriter( new FileOutputStream( temp ), m_encoding );", "-            if( token != null )", "+            if( m_token != null )", "-                final String val = stringReplace( value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                final String tok = stringReplace( token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String val = stringReplace( m_value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String tok = stringReplace( m_token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + token.getText() + \" --> \" + value.getText() );", "+                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + m_token.getText() + \" --> \" + m_value.getText() );", "-            if( replacefilters.size() > 0 )", "+            if( m_replacefilters.size() > 0 )", "-                ++fileCount;", "+                ++m_fileCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d863f2f458c140f1d667d9445162a422", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "bc9dc4239a1889d0da388b3e52372dbb1ded7f09", "commitAfterChange": "d7d6e9fa4c426534b21ce6a7011b40e7a6a63f13", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws TaskException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-            reader = encoding == null ? new FileReader( src )", "-                : new InputStreamReader( new FileInputStream( src ), encoding );", "-            writer = encoding == null ? new FileWriter( temp )", "-                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+            reader = m_encoding == null ? new FileReader( src )", "+                : new InputStreamReader( new FileInputStream( src ), m_encoding );", "+            writer = m_encoding == null ? new FileWriter( temp )", "+                : new OutputStreamWriter( new FileOutputStream( temp ), m_encoding );", "-            if( token != null )", "+            if( m_token != null )", "-                final String val = stringReplace( value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                final String tok = stringReplace( token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String val = stringReplace( m_value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String tok = stringReplace( m_token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + token.getText() + \" --> \" + value.getText() );", "+                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + m_token.getText() + \" --> \" + m_value.getText() );", "-            if( replacefilters.size() > 0 )", "+            if( m_replacefilters.size() > 0 )", "-                ++fileCount;", "+                ++m_fileCount;"]}]}