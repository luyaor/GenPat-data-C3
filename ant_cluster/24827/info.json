{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ae236e887c1284ea0d3bc631da5d5e3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f5c339b8b889e6efad9479063c81c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "275cdebdc9a946e9aaed2331247964c96439fc09", "commitAfterChange": "b5c4bdbec2f8a8c26b6466a588ba64d0f375152e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            ProjectHelper.configureProject(newProject, new File(antFile));", "+            try {", "+                ProjectHelper.configureProject(newProject, new File(antFile));", "+            } catch (BuildException ex) {", "+                throw ProjectHelper.addLocationToBuildException(", "+                    ex, getLocation());", "+            }", "-                } finally {", "+                } catch (BuildException ex) {", "+                    throw ProjectHelper.addLocationToBuildException(", "+                        ex, getLocation());", "+              } finally {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dac3906520dc343a72fc178f590920", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "688242497ca144f9547b31e4706274cffa71d9ef", "commitAfterChange": "22891078b14f9a248e413f7b310441bb0f60d192", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void addPath(String path, boolean getJars, List libPathURLs)             throws MalformedURLException", "signatureAfterChange": "     private void addPath(String path, boolean getJars, List libPathURLs)             throws MalformedURLException", "diff": ["-            libPathURLs.add(element.toURL());", "+            try {", "+                libPathURLs.add(new URL(Locator.encodeUri(element.toURL().toString())));", "+            } catch (UnsupportedEncodingException ex) {", "+                throw new MalformedURLException(ex.toString());", "+            }"]}]}