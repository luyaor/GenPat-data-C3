{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36be818ced6c672e6f0134e1c1fc4aad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0cdff54eb7cafe53985e6b81f93dd2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public UnknownElement copy(Project newProject)", "signatureAfterChange": "     public UnknownElement copy(Project newProject)", "diff": ["-        Map m = getWrapper().getAttributeMap();", "-        for (Iterator i = m.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry entry = (Map.Entry) i.next();", "-            copyRC.setAttribute(", "-                (String) entry.getKey(), (String) entry.getValue());", "+        Map<String, Object> m = getWrapper().getAttributeMap();", "+        for (Map.Entry<String, Object> entry : m.entrySet()) {", "+            copyRC.setAttribute(entry.getKey(), (String) entry.getValue());", "-        for (Enumeration e = getWrapper().getChildren(); e.hasMoreElements();) {", "-            RuntimeConfigurable r = (RuntimeConfigurable) e.nextElement();", "+        for (Enumeration<RuntimeConfigurable> e = getWrapper().getChildren(); e.hasMoreElements();) {", "+            RuntimeConfigurable r = e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2bea63a6844f548dc8d2d07ed93535e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "     private void generateMissingPackageInfoClasses(File dest) throws IOException", "signatureAfterChange": "     private void generateMissingPackageInfoClasses(File dest) throws IOException", "diff": ["-        for (Iterator i = packageInfos.entrySet().iterator(); i.hasNext(); ) {", "-            Map.Entry entry = (Map.Entry) i.next();", "-            String pkg = (String) entry.getKey();", "-            Long sourceLastMod = (Long) entry.getValue();", "+        for (Entry<String, Long> entry : packageInfos.entrySet()) {", "+            String pkg = entry.getKey();", "+            Long sourceLastMod = entry.getValue();"]}]}