{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25bd2226515c272085ccd2509cf9b8c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26074d5b35bf1c8b38a588c36d4edb8a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/TaskContainerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testTaskdef()", "signatureAfterChange": "      @Test     public void testTaskdef()", "diff": ["+    @Test", "-        executeTarget(\"testTaskdef\");", "+        buildRule.executeTarget(\"testTaskdef\");", "-                   getLog().indexOf(\"As attribute: it worked\") > -1);", "+                   buildRule.getLog().indexOf(\"As attribute: it worked\") > -1);", "-                   getLog().indexOf(\"As nested text: it worked\") > -1);", "+                   buildRule.getLog().indexOf(\"As nested text: it worked\") > -1);", "-                   getLog().indexOf(\"As nested task: it worked\") > -1);", "+                   buildRule.getLog().indexOf(\"As nested task: it worked\") > -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb470d376c4f11e63d19153526d8c811", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public JUnitTest createTest()", "signatureAfterChange": "      public BatchTest createBatchTest()", "diff": ["-    public JUnitTest createTest() {", "-        final JUnitTest result;", "-        result = new JUnitTest(", "-            defaults.getFork(),", "-            defaults.getHaltonerror(),", "-            defaults.getHaltonfailure(),", "-            defaults.getPrintsummary(),", "-            defaults.getPrintxml(),", "-            null, null);", "-", "-        tests.addElement(result);", "-        return result;", "+    public BatchTest createBatchTest() {", "+        BatchTest test = new BatchTest(project);", "+        test.setHaltonerror(defaults.getHaltonerror());", "+        test.setHaltonfailure(defaults.getHaltonfailure());", "+        test.setFork(defaults.getFork());", "+        batchTests.addElement(test);", "+        return test;", "+    }"]}]}