{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5bce9938cd73f4d864dd88fc943b794", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c305dca8ad96bcc30ebfa27d85009f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "37879f0723eadaec6ce4c357b4c41338f55a86d9", "commitAfterChange": "7d82c966657d24ff761589a1e28c3b6e82c08708", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        /**", "-         * XXX Perhaps we shouldn't use properties for these three options", "-         * (emacs mode, warnings and pedantic), but include it in the javac", "-         * directive?", "-         */", "-", "-        /**", "-         * Jikes has the nice feature to print error messages in a form readable", "-         * by emacs, so that emacs can directly set the cursor to the place,", "-         * where the error occured.", "-         */", "-        String emacsProperty = m_project.getProperty( \"build.compiler.emacs\" );", "-        if( emacsProperty != null && Project.toBoolean( emacsProperty ) )", "-        {", "-            cmd.createArgument().setValue( \"+E\" );", "-        }", "-        }", "-", "-        /**", "-         * Jikes can issue pedantic warnings.", "-         */", "-        String pedanticProperty = m_project.getProperty( \"build.compiler.pedantic\" );", "-        if( pedanticProperty != null && Project.toBoolean( pedanticProperty ) )", "-        {", "-            cmd.createArgument().setValue( \"+P\" );", "-        }", "-", "-        /**", "-         * Jikes supports something it calls \"full dependency checking\", see the", "-         * jikes documentation for differences between -depend and +F.", "-         */", "-        String fullDependProperty = m_project.getProperty( \"build.compiler.fulldepend\" );", "-        if( fullDependProperty != null && Project.toBoolean( fullDependProperty ) )", "-        {", "-            cmd.createArgument().setValue( \"+F\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f4c7bf05fb9372de85758a97c2ef74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "37879f0723eadaec6ce4c357b4c41338f55a86d9", "commitAfterChange": "7d82c966657d24ff761589a1e28c3b6e82c08708", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        /**", "-         * XXX Perhaps we shouldn't use properties for these three options", "-         * (emacs mode, warnings and pedantic), but include it in the javac", "-         * directive?", "-         */", "-", "-        /**", "-         * Jikes has the nice feature to print error messages in a form readable", "-         * by emacs, so that emacs can directly set the cursor to the place,", "-         * where the error occured.", "-         */", "-        String emacsProperty = m_project.getProperty( \"build.compiler.emacs\" );", "-        if( emacsProperty != null && Project.toBoolean( emacsProperty ) )", "-        {", "-            cmd.createArgument().setValue( \"+E\" );", "-        }", "-        }", "-", "-        /**", "-         * Jikes can issue pedantic warnings.", "-         */", "-        String pedanticProperty = m_project.getProperty( \"build.compiler.pedantic\" );", "-        if( pedanticProperty != null && Project.toBoolean( pedanticProperty ) )", "-        {", "-            cmd.createArgument().setValue( \"+P\" );", "-        }", "-", "-        /**", "-         * Jikes supports something it calls \"full dependency checking\", see the", "-         * jikes documentation for differences between -depend and +F.", "-         */", "-        String fullDependProperty = m_project.getProperty( \"build.compiler.fulldepend\" );", "-        if( fullDependProperty != null && Project.toBoolean( fullDependProperty ) )", "-        {", "-            cmd.createArgument().setValue( \"+F\" );"]}]}