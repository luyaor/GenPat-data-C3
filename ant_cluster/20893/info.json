{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41295ed8d1f8c6b6ae91cd44c418fb82", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4509fd5987076fb564beefc966467525", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "4b364736eef7f9740caba2130df3113462b1b612", "commitAfterChange": "32c6ef39e4527cdcaeb6a702be90203ca8ced940", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDepends(String depS)", "signatureAfterChange": "     public void setDepends(String depS)", "diff": ["-        if (depS.length() > 0) {", "+        for (Iterator iter = parseDepends(depS, getName()).iterator();", "+             iter.hasNext(); ) {", "+            addDependency((String) iter.next());", "+        }", "+    }", "-                new StringTokenizer(depS, \",\", true);", "-                    throw new BuildException(\"Syntax Error: depends \" + \"attribute of target \\\"\"", "-                            + getName() + \"\\\" has an empty string as dependency.\");", "-                addDependency(token);", "-                                + \"attribute for target \\\"\" + getName()", "-                                + \"\\\" ends with a , character\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57ade1717959989dfabd5ad78094020e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "12278c16e0bea33aa550ae6afc8c7d3bac39607a", "commitAfterChange": "01967f4543e3d84e079481c6ea968fb0b517fad2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "signatureAfterChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "diff": ["+        if (emptyBehavior.equals(\"skip\")) {", "+                log(\"Warning: skipping \" + archiveType + \" archive \"", "+                    + zipFile + \" because no files were included.\",", "+                    Project.MSG_WARN);", "+                return true;", "+        } else if (emptyBehavior.equals(\"fail\")) {", "+            throw new BuildException(\"Cannot create \" + archiveType", "+                                     + \" archive \" + zipFile", "+                                     + \": no files were included.\",", "+                                     getLocation());", "+        }", "+        "]}]}