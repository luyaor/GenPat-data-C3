{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d75b85b51942c506fbf983a53f3231f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16dd1effa9f11da890225a7be4b3aeec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java", "commitBeforeChange": "da87b9ec602883b50c49714cfd1536507bd257a8", "commitAfterChange": "52831c9ad417f328fa61cd206fb32701123333bc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                        // converted from sun internal classes to", "+                        // new Base64Converter", "+                        // utility class extracted from Get task", "-                            new sun.misc.BASE64Encoder().encode(", "-                                (new String(user + \":\" + password)).getBytes());", "+                            new Base64Converter().encode(user + \":\" + password);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211ac2dfeb068764c0c35e123383fdb6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                    throw new BuildException( msg, ioe, location );", "+                    throw new BuildException( msg, ioe );", "-                        throw new BuildException( msg, ioe, location );", "+                        throw new BuildException( msg, ioe );", "-                            throw new BuildException( msg, ioe, location );", "+                            throw new BuildException( msg, ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824bb89235c2e965fe130728ffb8fd2e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-                    throw new BuildException( msg, ioe, location );", "+                    throw new BuildException( msg, ioe );", "-                        throw new BuildException( msg, ioe, location );", "+                        throw new BuildException( msg, ioe );", "-                            throw new BuildException( msg, ioe, location );", "+                            throw new BuildException( msg, ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a742afa5a4e8a0a03a3ed7ab6fa4cb34", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void missingExtension()", "signatureAfterChange": "     private void missingExtension()", "diff": ["-    private void missingExtension()", "-    {", "+    private void missingExtension() {", "-        if( m_failOnError )", "-        {", "-            throw new BuildException( message );", "-        }", "-        else", "-        {", "-            getProject().log( message, Project.MSG_ERR );", "+        if (failOnError) {", "+            throw new BuildException(message);", "+        } else {", "+            getProject().log(message, Project.MSG_ERR);"]}]}