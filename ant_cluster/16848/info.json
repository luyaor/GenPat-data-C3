{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "567183d2c975de44ae07a5ae783e828a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa661620f06329a8cf118036404b8d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object createElement( Project project, Object element, String elementName )         throws BuildException", "signatureAfterChange": "     public Object createElement( Project project, Object element, String elementName )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        NestedCreator nc = ( NestedCreator )nestedCreators.get( elementName );", "+        NestedCreator nc = (NestedCreator)nestedCreators.get( elementName );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-                ( ( ProjectComponent )nestedElement ).setProject( project );", "+                ( (ProjectComponent)nestedElement ).setProject( project );", "-            throw new BuildException( ie );", "+            throw new TaskException( ie.getMessage(), ie );", "-            throw new BuildException( ine );", "+            throw new TaskException( ine.getMessage(), ine );", "-            if( t instanceof BuildException )", "+            if( t instanceof TaskException )", "-                throw ( BuildException )t;", "+                throw (TaskException)t;", "-            throw new BuildException( t );", "+            throw new TaskException( t.getMessage(), t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76842f034d84d851c95299cb31a788af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object createElement( Project project, Object element, String elementName )         throws BuildException", "signatureAfterChange": "     public Object createElement( Project project, Object element, String elementName )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        NestedCreator nc = ( NestedCreator )nestedCreators.get( elementName );", "+        NestedCreator nc = (NestedCreator)nestedCreators.get( elementName );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-                ( ( ProjectComponent )nestedElement ).setProject( project );", "+                ( (ProjectComponent)nestedElement ).setProject( project );", "-            throw new BuildException( ie );", "+            throw new TaskException( ie.getMessage(), ie );", "-            throw new BuildException( ine );", "+            throw new TaskException( ine.getMessage(), ine );", "-            if( t instanceof BuildException )", "+            if( t instanceof TaskException )", "-                throw ( BuildException )t;", "+                throw (TaskException)t;", "-            throw new BuildException( t );", "+            throw new TaskException( t.getMessage(), t );"]}]}