{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5834f9a363223c6ab3806c7e34650d7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "751f07082b2eea8ea11ff2e6ca780bef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "74a7d1b01fef1876fe00b66aa7352afc7e79b538", "commitAfterChange": "d03eda1c3aaa0eacdacd83236bf21a9b9d81cd62", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "signatureAfterChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "diff": ["-            if( current instanceof CascadingThrowable )", "-            {", "-                current = ( (CascadingThrowable)current ).getCause();", "-            }", "-            else", "-            {", "-                current = null;", "-            }", "+            // Get the next exception in the chain", "+            current = ExceptionUtil.getCause( current, true );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c1c37b942e2b27dabf2edfd4d3a991", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "74a7d1b01fef1876fe00b66aa7352afc7e79b538", "commitAfterChange": "d03eda1c3aaa0eacdacd83236bf21a9b9d81cd62", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "signatureAfterChange": "     protected void assertSameMessage( final String[] messages, final Throwable throwable )", "diff": ["-            if( current instanceof CascadingThrowable )", "-            {", "-                current = ( (CascadingThrowable)current ).getCause();", "-            }", "-            else", "-            {", "-                current = null;", "-            }", "+            // Get the next exception in the chain", "+            current = ExceptionUtil.getCause( current, true );"]}]}