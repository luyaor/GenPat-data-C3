{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "229010d10b6304998d473b2ec073a066", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66fd3d05622501d0970e42c3cc38d8d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void validate()         throws BuildException", "signatureAfterChange": "     private void validate() throws BuildException", "diff": ["-    private void validate()", "-        throws BuildException", "-    {", "-        if( null == m_property )", "-        {", "+    private void validate() throws BuildException {", "+        if (null == propertyName) {", "-            throw new BuildException( message );", "+            throw new BuildException(message);", "-        if( null == m_extension )", "-        {", "+        if (null == requiredExtension) {", "-            throw new BuildException( message );", "+            throw new BuildException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab931c4ef4a9f66d2230cc118674bba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "b3cb9a9d4f526df3bfef0706e46bc82857babdc3", "commitAfterChange": "06f6d787d2c96939d850d1cd735d12dd4355d6fa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void validateAttributes() throws BuildException", "signatureAfterChange": "     public void validateAttributes() throws BuildException", "diff": ["+        if (token == null && replacefilters.size() == 0) {", "+            String message = \"Either token or a nested replacefilter \"", "+                + \"must be specified\";", "+            throw new BuildException(message, location);", "+        }", "+        if (token != null && \"\".equals(token.getText())) {", "+            String message =\"The token attribute must not be an empty string.\";", "+            throw new BuildException(message, location);", "+        }"]}]}