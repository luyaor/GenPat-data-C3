{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3da7dd9858314c10cbc25d95b556957", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58de92b68f8fc22ac5ad1af5fc5d2213", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/AbstractComponentTest.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final ServiceManager getServiceManager() throws Exception", "signatureAfterChange": "     protected final ServiceManager getServiceManager() throws Exception", "diff": ["+            components.add( component );", "+", "+            component = new DefaultExecutor();", "+            m_serviceManager.put( Executor.ROLE, component );", "+", "+            // Register some standard roles", "+            // Add some core roles", "+            final RoleManager roleManager = (RoleManager)getServiceManager().lookup( RoleManager.ROLE );", "+            roleManager.addRole( new RoleInfo( DataType.ROLE, DATA_TYPE_ROLE, DataType.class ) );", "+            roleManager.addRole( new RoleInfo( Converter.ROLE, CONVERTER_ROLE, Converter.class ) );", "+            roleManager.addRole( new RoleInfo( ServiceFactory.ROLE, SERVICE_FACTORY_ROLE, ServiceFactory.class ) );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f62442f9607d32990f9934b8f08d432", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/AbstractComponentTest.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final ServiceManager getServiceManager() throws Exception", "signatureAfterChange": "     protected final ServiceManager getServiceManager() throws Exception", "diff": ["+            components.add( component );", "+", "+            component = new DefaultExecutor();", "+            m_serviceManager.put( Executor.ROLE, component );", "+", "+            // Register some standard roles", "+            // Add some core roles", "+            final RoleManager roleManager = (RoleManager)getServiceManager().lookup( RoleManager.ROLE );", "+            roleManager.addRole( new RoleInfo( DataType.ROLE, DATA_TYPE_ROLE, DataType.class ) );", "+            roleManager.addRole( new RoleInfo( Converter.ROLE, CONVERTER_ROLE, Converter.class ) );", "+            roleManager.addRole( new RoleInfo( ServiceFactory.ROLE, SERVICE_FACTORY_ROLE, ServiceFactory.class ) );", "+"]}]}