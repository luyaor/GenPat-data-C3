{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "929bf3840b103d65c61f932f20c30e61", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21a9c832a33061754cf593cf8739c1f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "2cd5cfabd458ab9d92e045a32d6831f72a4e2940", "commitAfterChange": "b7443f2b77a8daeba5f4b36a14ef34d1fb7fe931", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        long savedMillis = millis;", "+", "-                new BuildException(\"Specify at least one source - a file or a fileset.\");", "+                new BuildException(\"Specify at least one source - a file or \"", "+                                   + \"a fileset.\");", "-        if (dateTime != null) {", "-            DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT,", "-                                                           DateFormat.SHORT,", "-                                                           Locale.US);", "-            try {", "-                setMillis(df.parse(dateTime).getTime());", "-                if (millis < 0) {", "-                    throw new BuildException(\"Date of \" + dateTime", "-                                             + \" results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\");", "+        try {", "+            if (dateTime != null) {", "+                DateFormat df = ", "+                    DateFormat.getDateTimeInstance(DateFormat.SHORT,", "+                                                   DateFormat.SHORT,", "+                                                   Locale.US);", "+                try {", "+                    setMillis(df.parse(dateTime).getTime());", "+                    if (millis < 0) {", "+                        throw new BuildException(\"Date of \" + dateTime", "+                                                 + \" results in negative \"", "+                                                 + \"milliseconds value \"", "+                                                 + \"relative to epoch \"", "+                                                 + \"(January 1, 1970, \"", "+                                                 + \"00:00:00 GMT).\");", "+                    }", "+                } catch (ParseException pe) {", "+                    throw new BuildException(pe.getMessage(), pe, location);", "-            } catch (ParseException pe) {", "-                throw new BuildException(pe.getMessage(), pe, location);", "-        }", "-        touch();", "+            touch();", "+        } finally {", "+            millis = savedMillis;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f97e4d4927ad7fa0782e9c2f4ac08ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JJTree.java", "commitBeforeChange": "f987ed2417d66f6e74eb0b78cc290ca3f3ee3863", "commitAfterChange": "2366612c9c9ca8e538fd8faaec24184bc5b96c73", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        ", "+        if (outputFile != null) {", "+            cmdl.createArgument().setValue(\"-\" + OUTPUT_FILE + \":\" ", "+                                           + outputFile.replace('\\\\', '/'));", "+        }", "+", "+        File javaFile = null;", "-            outputDirectory = new File(target.getParent());", "+            javaFile = new File(createOutputFileName(target, outputFile, ", "+                                                     null));", "+        } else {", "+            if (!outputDirectory.isDirectory()) {", "+                throw new BuildException(\"'outputdirectory' \" + outputDirectory", "+                                         + \" is not a directory.\");", "+            }", "+ ", "+            // convert backslashes to slashes, otherwise jjtree will", "+            // put this as comments and this seems to confuse javacc", "+            cmdl.createArgument().setValue(\"-OUTPUT_DIRECTORY:\"", "+                                           + outputDirectory.getAbsolutePath()", "+                                             .replace('\\\\', '/'));", "+ ", "+            javaFile = new File(createOutputFileName(target, outputFile, ", "+                                                     outputDirectory", "+                                                     .getPath()));", "-        if (!outputDirectory.isDirectory()) {", "-            throw new BuildException(\"'outputdirectory' \" + outputDirectory", "-                + \" is not a directory.\");", "-        }", "-        // convert backslashes to slashes, otherwise jjtree will put this as", "-        // comments and this seems to confuse javacc", "-        cmdl.createArgument().setValue(\"-OUTPUT_DIRECTORY:\"", "-            + outputDirectory.getAbsolutePath().replace('\\\\', '/'));", "-        String targetName = target.getName();", "-        final File javaFile = new File(outputDirectory,", "-            targetName.substring(0, targetName.indexOf(\".jjt\")) + \".jj\");", "-             && target.lastModified() < javaFile.lastModified()) {", "+            && target.lastModified() < javaFile.lastModified()) {", "-        cmdl.setClassname(JavaCC.getMainClass(javaccHome,", "+        cmdl.setClassname(JavaCC.getMainClass(javaccHome, "]}]}