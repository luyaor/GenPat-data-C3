{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "050acc9cf8f1ea6b4dd045b63aca42ca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7169c77c0e853ccce7a3951c6917fc65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void enableElements()         throws ConfigurationException", "signatureAfterChange": "     public void enableAdders()         throws ConfigurationException", "diff": ["-     */", "-    public void enableElements()", "+    public void enableAdders()", "-            final String elemName = (String)iterator.next();", "-            final Method createMethod = (Method)creators.get( elemName );", "-            final Method addMethod = (Method)adders.get( elemName );", "+            final String propName = (String)iterator.next();", "+            final Method createMethod = (Method)creators.get( propName );", "+            final Method addMethod = (Method)adders.get( propName );", "-                                       elemName,", "+                                       propName,", "-            final DefaultElementConfigurer configurer =", "-                new DefaultElementConfigurer( type, createMethod, addMethod );", "-            m_elements.put( elemName, configurer );", "+            final DefaultPropertyConfigurer configurer =", "+                new DefaultPropertyConfigurer( type, createMethod, addMethod );", "+            m_props.put( propName, configurer );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e47796c5ab7e4a4027bdd7025baae18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected void createParents(FTPClient ftp, String filename)          throws IOException, BuildException", "signatureAfterChange": "     protected void createParents(FTPClient ftp, String filename)          throws IOException, BuildException", "diff": ["-                ftp.makeDirectory(resolveFile(dir.getPath()));", "-                // Both codes 550 and 553 can be produced by FTP Servers", "-                //  to indicate that an attempt to create a directory has", "-                //  failed because the directory already exists.", "-                int result = ftp.getReplyCode();", "-", "-                if (!FTPReply.isPositiveCompletion(result) &&", "-                    (result != 550) && (result != 553) &&", "-                    !ignoreNoncriticalErrors) {", "-                    throw new BuildException(\"could not create directory: \" +", "-                        ftp.getReplyString());", "+                if(!ftp.makeDirectory(resolveFile(dir.getPath()))) {", "+                    handleMkDirFailure(ftp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823a7c0793a61c6cb96c28270e3d6383", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "9ca90c8d554c625344a9ce361de4eeae69e1259f", "commitAfterChange": "c7e4640df951e885a5552ee0ebc11e56e67fb003", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private UnknownElement copy(UnknownElement ue)", "signatureAfterChange": "      private UnknownElement copy(UnknownElement ue, boolean nested)", "diff": ["-    private UnknownElement copy(UnknownElement ue) {", "+    private UnknownElement copy(UnknownElement ue, boolean nested) {", "-            if (templateElement == null) {", "-                UnknownElement child = copy(unknownElement);", "+            if (templateElement == null || nested) {", "+                UnknownElement child = copy(unknownElement, nested);", "-                    UnknownElement child = copy((UnknownElement) i.next());", "+                    UnknownElement child", "+                        = copy((UnknownElement) i.next(), true);", "-                        UnknownElement child = copy((UnknownElement) i.next());", "+                        UnknownElement child", "+                            = copy((UnknownElement) i.next(), true);"]}]}