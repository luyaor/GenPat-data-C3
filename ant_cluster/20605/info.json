{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb0b9a56bf1b74c43b2c5e96557e2124", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a55d64c2e423cc87a410e3147d782fb8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/build/Patch.java", "commitBeforeChange": "1b9d7fdf9ba4b76541c318fbe171610d9b36c675", "commitAfterChange": "ee04eba6358b925f927472063106abe998d2ab00", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void validate()         throws TaskException", "signatureAfterChange": "      private void validate()         throws TaskException", "diff": ["-            final String message = \"patchfile argument is required\";", "+            final String message = REZ.getString( \"patch.missing-file.error\" );", "-            final String message = \"patchfile \" + m_patchFile + \" doesn\\'t exist\";", "+            final String message = REZ.getString( \"patch.file-noexist.error\", m_patchFile );", "-            throw new TaskException( \"strip has to be >= 0\" );", "+            final String message = REZ.getString( \"patch.neg-strip.error\" );", "+            throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76e41be3015c90c7adb31f6e90a932a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/MapperTest.java", "commitBeforeChange": "3375d671acfa1fceb3325dc54fda5484b9e19208", "commitAfterChange": "2ead66e52c56fbc1a59789187ddba634ebe4ae2d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testChainedContainer()", "signatureAfterChange": "      public void testChained()", "diff": ["-    public void testChainedContainer() {", "+    public void testChained() {", "+        //implicit composite", "-        ContainerMapper chained = new ContainerMapper();", "-        chained.setChained(true);", "+        Mapper chained = new Mapper(project);", "+        chained.setClassname(ChainedMapper.class.getName());", "-        String[] targets = chained.mapFileName(\"a\");", "+        FileNameMapper fileNameMapper = chained.getImplementation();", "+        String[] targets = fileNameMapper.mapFileName(\"a\");", "-        assertTrue(\"cannot find expected target \\\"def\\\"\",", "-            list.contains(\"def\"));", "-        assertTrue(\"cannot find expected target \\\"ghi\\\"\",", "-            list.contains(\"ghi\"));", "+        assertTrue(\"cannot find expected target \\\"def\\\"\", list.contains(\"def\"));", "+        assertTrue(\"cannot find expected target \\\"ghi\\\"\", list.contains(\"ghi\"));"]}]}