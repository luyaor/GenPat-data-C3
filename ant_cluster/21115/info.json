{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2706ef3ada651e378134e458a853fe9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0d7b0c93f10fee66c28a5e2418b26f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              final ExecuteWatchdog watchdog,                                              final File casesFile)         throws BuildException", "diff": ["-                                             ExecuteWatchdog watchdog,", "-                                             File casesFile)", "+                                             final ExecuteWatchdog watchdog,", "+                                             final File casesFile)", "-        } catch (CloneNotSupportedException e) {", "+        } catch (final CloneNotSupportedException e) {", "-            FormatterElement fe = feArray[i];", "+            final FormatterElement fe = feArray[i];", "-                File outFile = getOutput(fe, test);", "+                final File outFile = getOutput(fe, test);", "-        File vmWatcher = createTempPropertiesFile(\"junitvmwatcher\");", "+        final File vmWatcher = createTempPropertiesFile(\"junitvmwatcher\");", "-        File propsFile = createTempPropertiesFile(\"junit\");", "+        final File propsFile = createTempPropertiesFile(\"junit\");", "-        Hashtable p = getProject().getProperties();", "-        Properties props = new Properties();", "-        for (Enumeration e = p.keys(); e.hasMoreElements();) {", "-            Object key = e.nextElement();", "+        final Hashtable p = getProject().getProperties();", "+        final Properties props = new Properties();", "+        for (final Enumeration e = p.keys(); e.hasMoreElements();) {", "+            final Object key = e.nextElement();", "-            FileOutputStream outstream = new FileOutputStream(propsFile);", "+            final FileOutputStream outstream = new FileOutputStream(propsFile);", "-        } catch (java.io.IOException e) {", "+        } catch (final java.io.IOException e) {", "-        Execute execute = new Execute(", "+        final Execute execute = new Execute(", "-        String[] environment = env.getVariables();", "+        final String[] environment = env.getVariables();", "-        TestResultHolder result = new TestResultHolder();", "+        final TestResultHolder result = new TestResultHolder();", "-        } catch (IOException e) {", "+        } catch (final IOException e) {", "-            } catch (Exception e) {", "+            } catch (final Exception e) {", "-            boolean crash = (watchdog != null && watchdog.killedProcess())", "+            final boolean crash = (watchdog != null && watchdog.killedProcess())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cb3beb361685157519893ecbbad3b31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            Properties props = new Properties();", "+            final Properties props = new Properties();", "-                    Provider p = (Provider) Class.forName(", "+                    final Provider p = (Provider) Class.forName(", "-                } catch (Exception e) {", "+                } catch (final Exception e) {", "-            MimeMessage msg = new MimeMessage(sesh);", "-            MimeMultipart attachments = new MimeMultipart();", "+            final MimeMessage msg = new MimeMessage(sesh);", "+            final MimeMultipart attachments = new MimeMultipart();", "-            StringDataSource sds = new StringDataSource();", "+            final StringDataSource sds = new StringDataSource();", "-                for (Iterator iter = headers.iterator(); iter.hasNext();) {", "-                    Header h = (Header) iter.next();", "+                for (final Iterator iter = headers.iterator(); iter.hasNext();) {", "+                    final Header h = (Header) iter.next();", "-            PrintStream out = new PrintStream(sds.getOutputStream());", "+            final PrintStream out = new PrintStream(sds.getOutputStream());", "-            MimeBodyPart textbody = new MimeBodyPart();", "+            final MimeBodyPart textbody = new MimeBodyPart();", "-            Enumeration e = files.elements();", "+            final Enumeration e = files.elements();", "-                File file = (File) e.nextElement();", "+                final File file = (File) e.nextElement();", "-                FileDataSource fileData = new FileDataSource(file);", "-                DataHandler fileDataHandler = new DataHandler(fileData);", "+                final FileDataSource fileData = new FileDataSource(file);", "+                final DataHandler fileDataHandler = new DataHandler(fileData);", "-                Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "+                final Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "-            } catch (SendFailedException sfe) {", "+            } catch (final SendFailedException sfe) {", "-        } catch (MessagingException e) {", "+        } catch (final MessagingException e) {", "-        } catch (IOException e) {", "+        } catch (final IOException e) {"]}]}