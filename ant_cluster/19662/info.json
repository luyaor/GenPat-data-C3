{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b20dfd16eb69f45e6267838b19d8c898", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbceeefc38f2ac2bab0ba946b9aee50", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamLabel.java", "commitBeforeChange": "837f7ef785e24137608ba41f850d605b23bccff4", "commitAfterChange": "23e61358c8ed2aa3fe63c1f67082150047f1df9e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        if (this.revisionlabel && this.buildlabel) {", "+            throw new BuildException(", "+                \"'revisionlabel' and 'buildlabel' both specified.  \" +", "+                \"A revision label cannot be a build label.\");", "+        }", "+", "-        new Label(snapshot, labelName, description, this.lastBuild, true).update();", "-        log(\"Created Label \" + labelName);", "+", "+        if (this.revisionlabel) {", "+            new Label(snapshot, this.labelName, this.description).update();", "+            log(\"Created Revision Label \" + this.labelName);", "+        } ", "+        else if (null != lastBuild){", "+            new Label(snapshot, this.labelName, this.description,this.lastBuild,", "+                      this.buildlabel).update();", "+            log(\"Created View Label (\" ", "+                +(this.buildlabel ? \"\" : \"non-\") + \"build) \" + this.labelName", "+                +\" as of \" + this.lastBuild.toString());", "+        }", "+        else {", "+            new Label(snapshot, this.labelName, this.description,", "+                      this.buildlabel).update();", "+            log(\"Created View Label (\" ", "+                +(this.buildlabel ? \"\" : \"non-\") + \"build) \" + this.labelName);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f08ed15fd8130f1653663982b84ba002", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "4848c4503153606ff29c6a0548ec094eec904091", "commitAfterChange": "6e72d89be84e4a3b021e1d59f14a97d2f4959adc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private int run(String[] args)             throws LaunchException, MalformedURLException", "signatureAfterChange": "     private int run(String[] args)             throws LaunchException, MalformedURLException", "diff": ["-            System.setProperty(ANTHOME_PROPERTY, antHome.getAbsolutePath());", "+            setProperty(ANTHOME_PROPERTY, antHome.getAbsolutePath());", "-                + \"ant could not be located\");", "+                + \"ant could not be located (estimated value=\"+antHome.getAbsolutePath()+\")\");", "+            } else if (args[i].equals(\"--launchdiag\")) {", "+                launchDiag = true;", "+", "+        logPath(\"Launcher JAR\",sourceJar);", "+        logPath(\"Launcher JAR directory\", sourceJar.getParentFile());", "+        logPath(\"java.home\", new File(System.getProperty(\"java.home\")));", "+        File toolsJAR = Locator.getToolsJar();", "+        logPath(\"tools.jar\",toolsJAR);", "-            libURLs, userURLs, systemURLs, Locator.getToolsJar());", "+            libURLs, userURLs, systemURLs, toolsJAR);", "-        System.setProperty(JAVA_CLASS_PATH, baseClassPath.toString());", "+        setProperty(JAVA_CLASS_PATH, baseClassPath.toString());", "+        Throwable thrown=null;", "-            exitCode = EXIT_CODE_ERROR;", "+            thrown = ex;", "+        } catch (ClassNotFoundException cnfe) {", "+            System.err.println(", "+                    \"Failed to locate\" + mainClassname);", "+            thrown = cnfe;", "+            thrown=t;", "+        }", "+        if(thrown!=null) {", "+            System.err.println(ANTHOME_PROPERTY+\": \"+antHome.getAbsolutePath());", "+            System.err.println(\"Classpath: \" + baseClassPath.toString());", "+            System.err.println(\"Launcher JAR: \" + sourceJar.getAbsolutePath());", "+            System.err.println(\"Launcher Directory: \" + jarDir.getAbsolutePath());"]}]}