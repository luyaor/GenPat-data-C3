{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "275b93c74d6f5467f875ce6ca6078197", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2dd4a9200b1d18852c386ae4f37566", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "87711d5afc3fc82ba10ace9fabaf47a47d4e3a59", "commitAfterChange": "cef6bbb3c32f64f13892e616ce8722cba6dde746", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )", "signatureAfterChange": "     private void executeTargetWork( final String name,                                     final Target target,                                     final TaskContext context )", "diff": ["-        final Iterator tasks = target.getTasks();", "-        while( tasks.hasNext() )", "+        final Configuration[] tasks = target.getTasks();", "+        for( int i = 0; i < tasks.length; i++ )", "-            final Configuration task = (Configuration)tasks.next();", "-            executeTask( task, context );", "+            executeTask( tasks[ i ], context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3affb1c8f31ac7f5e357d51f08a6e6f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "87711d5afc3fc82ba10ace9fabaf47a47d4e3a59", "commitAfterChange": "cef6bbb3c32f64f13892e616ce8722cba6dde746", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void execute( final Project project,                           final String targetName,                           final TaskContext context,                           final ArrayList done )         throws AntException", "signatureAfterChange": "     private void execute( final Project project,                           final String targetName,                           final TaskContext context,                           final ArrayList done )         throws AntException", "diff": ["-        final Iterator dependencies = target.getDependencies();", "-        while( dependencies.hasNext() )", "+        final String[] dependencies = target.getDependencies();", "+        for( int i = 0; i < dependencies.length; i++ )", "-            final String dependency = (String)dependencies.next();", "-            if( !done.contains( dependency ) )", "+            if( !done.contains( dependencies[ i ] ) )", "-                execute( project, dependency, context, done );", "+                execute( project, dependencies[ i ], context, done );"]}]}