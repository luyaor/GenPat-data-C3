{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "faaed678df844e1db961e5f8f6d8d438", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d97ca0e17fdbed798d15231dde12cdf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "89770b70fe1cc567b9a938123a4e803aa6d57072", "commitAfterChange": "915968627a3c1b2dc1402127c90465cdcacdd73b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void addLine( final String line )         throws TaskException", "signatureAfterChange": "      public void addLine( final String line )         throws TaskException", "diff": ["-        final Argument argument = new Argument();", "-        argument.setLine( line );", "-        addArgument( argument );", "+        final String[] parts = FileUtils.translateCommandline( line );", "+        for( int i = 0; i < parts.length; i++ )", "+        {", "+            addArgument( parts[ i ] );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776e68116009be7416d3c3dfe5893352", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "89770b70fe1cc567b9a938123a4e803aa6d57072", "commitAfterChange": "915968627a3c1b2dc1402127c90465cdcacdd73b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void addLine( final String line )         throws TaskException", "signatureAfterChange": "      public void addLine( final String line )         throws TaskException", "diff": ["-        final Argument argument = new Argument();", "-        argument.setLine( line );", "-        addArgument( argument );", "+        final String[] parts = FileUtils.translateCommandline( line );", "+        for( int i = 0; i < parts.length; i++ )", "+        {", "+            addArgument( parts[ i ] );", "+        }"]}]}