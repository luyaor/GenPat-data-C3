{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcfe8cbe19329ccaa9520f3127f4f384", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "609ef8eed6904b5e650f0500b233dddd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "59fcd9ab821784fbf7d5ccee60b4f63c0f9b7735", "commitAfterChange": "09a7def3cd210a903db5fa8969a5292b93cb8192", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testUpdatesExistingProperties() throws Exception", "signatureAfterChange": "     public void testUpdatesExistingProperties() throws Exception", "diff": ["-        FileInputStream beforeUpdateFile = new FileInputStream(testPropsFilePath);", "-        Properties beforeUpdate = new Properties();", "-        beforeUpdate.load(beforeUpdateFile);", "+        Properties beforeUpdate = getTestProperties();", "-        beforeUpdateFile.close();", "+        assertEquals(null, beforeUpdate.getProperty(PHONE_KEY));", "+        assertEquals(null, beforeUpdate.getProperty(AGE_KEY));", "+        assertEquals(null, beforeUpdate.getProperty(DATE_KEY));", "-        FileInputStream afterUpdateFile = new FileInputStream(testPropsFilePath);", "-        Properties afterUpdate = new Properties();", "-        afterUpdate.load(afterUpdateFile);", "+        Properties afterUpdate = getTestProperties();", "-        afterUpdateFile.close();", "+        assertEquals(NEW_PHONE, afterUpdate.getProperty(PHONE_KEY));", "+        assertEquals(NEW_AGE, afterUpdate.getProperty(AGE_KEY));", "+        assertEquals(NEW_DATE, afterUpdate.getProperty(DATE_KEY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "865cc6269bfda4e26d85980cd68f8647", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/PropertyFileTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public PropertyFileTest(String name)", "signatureAfterChange": "       @Test     @Ignore(\"Previously commented out\")     public void testDirect() throws Exception", "diff": ["-    public PropertyFileTest(String name) {", "-        super(name);", "-    }", "+", "+    @Test", "+    @Ignore(\"Previously commented out\")", "+    public void testDirect() throws Exception {", "+        PropertyFile pf = new PropertyFile();", "+        pf.setProject(buildRule.getProject());", "+        pf.setFile(new File(System.getProperty(\"root\"), testPropsFilePath));", "+        PropertyFile.Entry entry = pf.createEntry();", "+", "+        entry.setKey(\"date\");", "+        entry.setValue(\"123\");", "+        PropertyFile.Entry.Type type = new PropertyFile.Entry.Type();", "+        type.setValue(\"date\");", "+        entry.setType(type);", "+", "+        entry.setPattern(\"yyyy/MM/dd\");", "+", "+        PropertyFile.Entry.Operation operation = new PropertyFile.Entry.Operation();", "+        operation.setValue(\"+\");", "+        pf.execute();", "+", "+        Properties props = getTestProperties();", "+        assertEquals(\"yeehaw\", props.getProperty(\"date\"));", "+    }"]}]}