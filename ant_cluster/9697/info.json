{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d85135ab1bc31daa47b4309e3c1da10", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0dc35ef3793f3b176f88fdf32853a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "c8f231cceb0ad6c2eafe1c873b240e984bf3292f", "commitAfterChange": "4fd2002344affdd629fb388e6c9a21a0f62b607f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["+                    long chunck = Math.min(MAX_IO_CHUNCK_SIZE, count - position);", "-                        srcChannel.transferTo(position, count - position,", "+                        srcChannel.transferTo(position, chunck,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb544c813d9d4fec69550b37fc47155", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "4fd2002344affdd629fb388e6c9a21a0f62b607f", "commitAfterChange": "c78b5d0baa7d9d1f00e81af7cf53a40044e5a799", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-                    long chunck = Math.min(MAX_IO_CHUNCK_SIZE, count - position);", "+                    long chunk = Math.min(MAX_IO_CHUNCK_SIZE, count - position);", "-                        srcChannel.transferTo(position, chunck,", "+                        srcChannel.transferTo(position, chunk,"]}]}