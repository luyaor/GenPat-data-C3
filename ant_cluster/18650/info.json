{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3cb1139620648aa74be86a5d159c96f1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8dd1d522f61974ce1405e8f6089dba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "630e898f2013b4400657889adbb97940e015538d", "commitAfterChange": "d5e3608bf56d9b6510e1f831d0e9f25d506da504", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["+            BufferedReader br = null;", "-                BufferedReader br = new BufferedReader(new FileReader(vmWatcher));", "+                br = new BufferedReader(new FileReader(vmWatcher));", "+            } finally {", "+                try {", "+                    br.close();", "+                } catch (IOException ioe) {", "+                    // nothing", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8989855c574aa1535f1556680ed0dcef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "172b90cdaef43160dcf7488edbfd4ca1bb638a5d", "commitAfterChange": "b5e606fe0ec7e62fc26854a77e29de35829df027", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["+                BufferedReader r = null;", "-                    BufferedReader r =", "-                        new BufferedReader(", "+                    r = new BufferedReader(", "+                } finally {", "+                    if (r != null) {", "+                        FileUtils.close(r);", "+                    }", "+", "+                //emacs mode or there is no task"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95c9c37304069451cd82ef9c429e203", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "50cd7c54a8bafdcb31b2f53e6a0f1e5f5a6e8968", "commitAfterChange": "6ffc1671f30b8a233754745ea281d9a8bac6d0c1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void readPatterns(File patternfile, Vector patternlist, Project p)         throws BuildException", "signatureAfterChange": "     private void readPatterns(File patternfile, Vector patternlist, Project p)         throws BuildException", "diff": ["+        BufferedReader patternReader = null;", "-            BufferedReader patternReader = ", "+            patternReader = ", "+        } finally {", "+            if( null != patternReader ) {", "+                try {", "+                    patternReader.close();", "+                } catch(IOException ioe) { ", "+                    //Ignore exception", "+                }", "+            }"]}]}