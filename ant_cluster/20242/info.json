{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80a5beb0e26f6cc9774f3eee2d4dcb06", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd326c22a029c135c630b071e623f970", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "6c898aeb37be06c6dc3ce020c21819310caf59ec", "commitAfterChange": "94a192bb792ac737581a3510a278dfb5c2f0fd3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl)", "diff": ["-        try {", "-            ProjectHelper2 parser = new ProjectHelper2();", "-            UnknownElement ue =", "-                parser.parseUnknownElement(project, antlibUrl);", "-            // Check name is \"antlib\"", "-            if (!(ue.getTag().equals(TAG))) {", "-                throw new BuildException(", "-                    \"Unexpected tag \" + ue.getTag() + \" expecting \"", "-                    + TAG, ue.getLocation());", "-            }", "-            Antlib antlib = new Antlib();", "-            antlib.setProject(project);", "-            antlib.setLocation(ue.getLocation());", "-            antlib.init();", "-            ue.configure(antlib);", "-            return antlib;", "-        } catch (BuildException ex) {", "-            Location location = ex.getLocation();", "-            if (location == null) {", "-                throw ex;", "-            }", "+        ProjectHelper2 parser = new ProjectHelper2();", "+        UnknownElement ue =", "+            parser.parseUnknownElement(project, antlibUrl);", "+        // Check name is \"antlib\"", "+        if (!(ue.getTag().equals(TAG))) {", "-                \"Error in \"", "-                + System.getProperty(\"line.separator\")", "-                + location.toString()", "-                + \" \" + ex.getMessage());", "+                \"Unexpected tag \" + ue.getTag() + \" expecting \"", "+                + TAG, ue.getLocation());", "+        Antlib antlib = new Antlib();", "+        antlib.setProject(project);", "+        antlib.setLocation(ue.getLocation());", "+        antlib.init();", "+        ue.configure(antlib);", "+        return antlib;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8282a73233b15511f4d828707fdb2ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "1d86fa90cf45aacdf5fc9d61e081895f1c099836", "commitAfterChange": "99b22a7da3308ae6800e2b6d95ec3827b54c852f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "diff": ["-    public static Antlib createAntlib(Project project, URL antlibUrl) {", "+    public static Antlib createAntlib(Project project, URL antlibUrl,", "+                                      String uri) {", "-        // Should be safe to parse", "-        ProjectHelper2 parser = new ProjectHelper2();", "-        UnknownElement ue =", "-            parser.parseUnknownElement(project, antlibUrl);", "-        // Check name is \"antlib\"", "-        if (!(ue.getTag().equals(TAG))) {", "-            throw new BuildException(", "-                \"Unexpected tag \" + ue.getTag() + \" expecting \"", "-                + TAG, ue.getLocation());", "+        ComponentHelper helper =", "+            ComponentHelper.getComponentHelper(project);", "+        helper.enterAntLib(uri);", "+        try {", "+            // Should be safe to parse", "+            ProjectHelper2 parser = new ProjectHelper2();", "+            UnknownElement ue =", "+                parser.parseUnknownElement(project, antlibUrl);", "+            // Check name is \"antlib\"", "+            if (!(ue.getTag().equals(TAG))) {", "+                throw new BuildException(", "+                    \"Unexpected tag \" + ue.getTag() + \" expecting \"", "+                    + TAG, ue.getLocation());", "+            }", "+            Antlib antlib = new Antlib();", "+            antlib.setProject(project);", "+            antlib.setLocation(ue.getLocation());", "+            antlib.init();", "+            ue.configure(antlib);", "+            return antlib;", "+        } finally {", "+            helper.exitAntLib();", "-        Antlib antlib = new Antlib();", "-        antlib.setProject(project);", "-        antlib.setLocation(ue.getLocation());", "-        antlib.init();", "-        ue.configure(antlib);", "-        return antlib;"]}]}