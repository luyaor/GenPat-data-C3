{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2aa10ab428b327eb1c22fe8235b4c97a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51df2e4b54364ed04437bade0eea622", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "33b7e4299233528015cc4b40713098fb6342b05e", "commitAfterChange": "787728897a6052af385456788bc4e578ba170ba5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static Vector tokenizePath(String path)", "signatureAfterChange": "    public static Vector tokenizePath (String path, String separator)", "diff": ["-     */", "-    public static Vector tokenizePath(String path) {", "-        Vector ret = new Vector();", "-        StringTokenizer st = new StringTokenizer(path, File.separator);", "-        while (st.hasMoreTokens()) {", "-            ret.addElement(st.nextToken());", "-        }", "-        return ret;", "-    }", "+  */", "+   public static Vector tokenizePath (String path, String separator) {", "+     Vector ret = new Vector();", "+     StringTokenizer st = new StringTokenizer(path,separator);", "+     while (st.hasMoreTokens()) {", "+         ret.addElement(st.nextToken());", "+     }", "+     return ret;", "+", "+   }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca620e0285ce494418b89a914315642", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/init/org/apache/ant/init/InitConfig.java", "commitBeforeChange": "bd2ddfd03df5d01d949d120c13a4b2383b9dc986", "commitAfterChange": "e503d4fa0e071937c2c69afe2ee9bc5c9b696efa", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private URL getAntLibURL() throws MalformedURLException", "signatureAfterChange": "     private URL getAntLibURL(Class libraryClass) throws MalformedURLException", "diff": ["-    private URL getAntLibURL() throws MalformedURLException {", "-        URL initClassURL = ClassLocator.getClassLocationURL(getClass());", "+    private URL getAntLibURL(Class libraryClass) throws MalformedURLException {", "+        URL initClassURL = ClassLocator.getClassLocationURL(libraryClass);"]}]}