{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "989f71ceff4b6d1f4c7a05ac9fe67104", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95d5f61e42703d4236881ef3d4f89dd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/configuration/DefaultConfigurer.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                             final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-    public void configure( final Object object, ", "+    public void configure( final Object object,", "-            m_logger.debug( \"Configuring \" + object );", "+            getLogger().debug( \"Configuring \" + object );", "-            if( DEBUG ) ", "+            if( DEBUG )", "-                m_logger.debug( \"Configuring object via Configurable interface\" );", "+                getLogger().debug( \"Configuring object via Configurable interface\" );", "-            if( DEBUG ) ", "+            if( DEBUG )", "-                m_logger.debug( \"Configuring object via Configurable reflection\" );", "+                getLogger().debug( \"Configuring object via Configurable reflection\" );", "-            final Iterator attributes = configuration.getAttributeNames();", "-            while( attributes.hasNext() )", "+            final String[] attributes = configuration.getAttributeNames();", "+            for( int i = 0; i < attributes.length; i++ )", "-                final String name = (String)attributes.next();", "+                final String name = attributes[ i ];", "-             ", "-                if( DEBUG ) ", "+", "+                if( DEBUG )", "-                    m_logger.debug( \"Configuring attribute name=\" + name +", "+                    getLogger().debug( \"Configuring attribute name=\" + name +", "-                ", "+", "-            final Iterator elements = configuration.getChildren();", "-            ", "-            while( elements.hasNext() )", "+            final Configuration[] children = configuration.getChildren();", "+", "+            for( int i = 0; i < children.length; i++ )", "-                final Configuration element = (Configuration)elements.next();", "-                ", "-                if( DEBUG ) ", "+                final Configuration child = children[ i ];", "+", "+                if( DEBUG )", "-                    m_logger.debug( \"Configuring subelement name=\" + element.getName() );", "+                    getLogger().debug( \"Configuring subelement name=\" + child.getName() );", "-                ", "-                configureElement( object, element, context );", "+", "+                configureElement( object, child, context );", "-                    if( DEBUG ) ", "+                    if( DEBUG )", "-                        m_logger.debug( \"Configuring content \" + content );", "+                        getLogger().debug( \"Configuring content \" + content );", "-                    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f78c5db97a4e5f523f39ccb335a665", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "f87b5ed7757c30daca5cf875c95520a00dce2269", "commitAfterChange": "010a31e84477b60ff536725b388b38323540dcca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-            getLogger().debug( \"Configuring \" + object );", "+            getLogger().debug( message );", "-                getLogger().debug( \"Configuring object via Configurable interface\" );", "+                getLogger().debug( message );", "+            // Let the object configure itself", "+            // Locate the configurer for this object", "+            final ObjectConfigurer configurer = getConfigurer( object.getClass() );", "+", "+            // Set each of the attributes", "-                if( DEBUG )", "-                {", "-                    final String message = REZ.getString( \"configure-attribute.notice\", name, value );", "-                    getLogger().debug( message );", "-                }", "-", "-                configureAttribute( object, name, value, context );", "+                // Set the attribute", "+                setAttribute( configurer, object, name, value, context );", "-            final Configuration[] children = configuration.getChildren();", "+            // Set the text content", "+            final String content = configuration.getValue( null );", "+            if( null != content && content.length() > 0 )", "+            {", "+                setContent( configurer, object, content, context );", "+            }", "+            // Create and configure each of the child elements", "+            final Configuration[] children = configuration.getChildren();", "-                final Configuration child = children[ i ];", "-", "-                if( DEBUG )", "-                {", "-                    final String message =", "-                        REZ.getString( \"configure-subelement.notice\", child.getName() );", "-                    getLogger().debug( message );", "-                }", "-", "-                configureElement( object, child, context );", "+                final Configuration childConfig = children[ i ];", "+                configureElement( configurer, object, childConfig, context );", "+        }", "+    }", "-            final String content = configuration.getValue( null );", "-            if( null != content )", "-            {", "-                if( !content.trim().equals( \"\" ) )", "-                {", "-                    if( DEBUG )", "-                    {", "-                        final String message =", "-                            REZ.getString( \"configure-content.notice\", content );", "-                        getLogger().debug( message );", "-                    }", "-                    configureContent( object, content, context );", "-                }", "-            }"]}]}