{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2695f9401679685e4872cd6138107a42", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b5d4032cf7b2b67d3aa149d5def4ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java", "commitBeforeChange": "225893c4b96e202aae6654f8ab2354b307ad35ef", "commitAfterChange": "6409f0ec87cfcc04196be80e0c72aec39a76ec04", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile(com.starbase.starteam.File eachFile,                               java.io.File targetFolder )     throws IOException", "signatureAfterChange": "     private void processFile(com.starbase.starteam.File eachFile,                               java.io.File targetFolder )     throws IOException", "diff": ["+            if (!targetFolder.exists()) {", "+                if (targetFolder.mkdirs()) {", "+                    log(\"Creating folder: \" + targetFolder);", "+                } else {", "+                    throw new BuildException(", "+                        \"Failed to create local folder \" + targetFolder);", "+                }", "+            }", "+                if (!targetFolder.exists()) {", "+                    if (targetFolder.mkdirs()) {", "+                        log(\"Creating folder: \" + targetFolder);", "+                    } else {", "+                        throw new BuildException(", "+                            \"Failed to create local folder \" + targetFolder);", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10744966102132e9fdf22b5cbf0f2249", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "ac1664c3fdae2848480acfb061ab8413daa00923", "commitAfterChange": "70b420621ba892d07049960e4cc4ac34c58549f6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void processFile(String file) throws BuildException", "signatureAfterChange": "      private void processFile(String file) throws BuildException", "diff": ["-\tFile srcFile = new File(srcDir, file);", "-\tFile tmpFile = null;", "+        File srcFile = new File(srcDir, file);", "+        File tmpFile = null;", "-\t// read the contents of the file", "+        // read the contents of the file", "+", "+            try {                                            ", "+                lines.close();", "+                lines = null;", "+            }", "+            catch (IOException e) {", "+                throw new BuildException(\"Unable to close source file \" + srcFile);", "+            }", "+                                     ", "+            if (destFile.exists()) {", "+                if (!destFile.delete()) {", "+                    throw new BuildException(\"Unable to delete \" + destFile);", "+                }", "+            }", "+                                     ", "-                                         + \". Couldn't rename temporary file.\");", "+                                         + \". Couldn't rename temporary file: \" + tmpFile);", "-                lines.close();", "+                if (lines != null) {", "+                    lines.close();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24cd327409f3d23948bd8e3541ca5e83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/types/DataType.java", "commitBeforeChange": "15e2ec5002d2079ada010931aa500297d91f36ea", "commitAfterChange": "94fb3a440b69f2b3a668ab411ace8056a9f96541", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setRefid(String reference) throws ExecutionException", "signatureAfterChange": "     public void setRefid(String reference) throws ExecutionException", "diff": ["-        // check the reference now", "-        getReferencedObject();", "+        Object referencedObject = getTaskContext().getDataValue(reference);", "+", "+        if (referencedObject == null) {", "+            throw new ExecutionException(\"Unable to locate the reference specified by refid '\" +", "+                                         getReference() + \"'\");", "+        }", "+        ", "+        if (!this.getClass().isAssignableFrom(referencedObject.getClass())) {", "+            throw new ExecutionException(\"The object referenced by refid '\" +", "+                                         getReference() + \"' is not compatible with this element \");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3149ea1c3e90f8f5ee370644c7e051a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "18e948f21127276214a791a4c553daad93f60916", "commitAfterChange": "508bb0dae114778e531d55d849b70e503c7c7edb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "diff": ["+", "+        // identical logic lives in ResourceUtils.copyResource():", "+        if (destFile.isFile() && !destFile.canWrite()) {", "+            if (!getForce()) {", "+                throw new IOException(\"can't replace read-only destination \"", "+                                      + \"file \" + destFile);", "+            } else if (!getFileUtils().tryHardToDelete(destFile)) {", "+                throw new IOException(\"failed to delete read-only \"", "+                                      + \"destination file \" + destFile);", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab931c4ef4a9f66d2230cc118674bba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "b3cb9a9d4f526df3bfef0706e46bc82857babdc3", "commitAfterChange": "06f6d787d2c96939d850d1cd735d12dd4355d6fa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void validateAttributes() throws BuildException", "signatureAfterChange": "     public void validateAttributes() throws BuildException", "diff": ["+        if (token == null && replacefilters.size() == 0) {", "+            String message = \"Either token or a nested replacefilter \"", "+                + \"must be specified\";", "+            throw new BuildException(message, location);", "+        }", "+        if (token != null && \"\".equals(token.getText())) {", "+            String message =\"The token attribute must not be an empty string.\";", "+            throw new BuildException(message, location);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "921b89a64af212b94adccb86848b53ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "c9c4a2ce8d7cd469b1bd82242a2f4443c86745a7", "commitAfterChange": "35e9c976aca460e541e62bd67f88fa8482014f1e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified, boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-                            boolean overwrite, boolean preserveLastModified, boolean append,", "+     */", "+    public static void copyResource(Resource source, Resource dest,", "+                            FilterSetCollection filters, Vector filterChains,", "+                            boolean overwrite, boolean preserveLastModified,", "+                                    boolean append,", "+                                    String inputEncoding, String outputEncoding,", "+                                    Project project, boolean force)", "+", "+        File destFile = null;", "+        if (dest.as(FileProvider.class) != null) {", "+            destFile = ((FileProvider) dest.as(FileProvider.class)).getFile();", "+        }", "+        if (destFile != null && destFile.isFile() && !destFile.canWrite()) {", "+            if (!force) {", "+                throw new IOException(\"can't write to read-only destination \"", "+                                      + \"file \" + destFile);", "+            } else if (!FILE_UTILS.tryHardToDelete(destFile)) {", "+                throw new IOException(\"failed to delete read-only \"", "+                                      + \"destination file \" + destFile);", "+            }", "+        }", "+", "-                   && dest.as(FileProvider.class) != null) {", "+                   && destFile != null) {", "-            File destFile =", "-                ((FileProvider) dest.as(FileProvider.class)).getFile();"]}]}