{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2adfa1dba039993f613215344d5c1bb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73487463bde8de5895c898bbf53eff5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestListenerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testFullLogOutput()", "signatureAfterChange": "       @Test     public void testFullLogOutput()", "diff": ["+", "+    @Test", "-        getProject().setProperty(\"enableEvents\", \"true\");", "-        executeTarget(PASS_TEST_TARGET);", "-        assertTrue(\"expecting full log to have BuildListener events\", ", "-                   hasBuildListenerEvents(getFullLog()));", "+        buildRule.getProject().setProperty(\"enableEvents\", \"true\");", "+        buildRule.executeTarget(PASS_TEST_TARGET);", "+        assertContains(\"expecting full log to have BuildListener events\", ", "+        \t\tJUnitTask.TESTLISTENER_PREFIX, buildRule.getFullLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e59465f3145df4d5c932c6b1e80a3f32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/PropertyTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void test5()", "signatureAfterChange": "      @Test     public void test5()", "diff": ["+    @Test", "-        String baseDir = getProject().getProperty(\"basedir\");", "-        try {", "-            String uri = FILE_UTILS.toURI(", "-                baseDir + \"/property3.properties\");", "-            getProject().setNewProperty(", "-                \"test5.url\", uri);", "-        } catch (Exception ex) {", "-            throw new BuildException(ex);", "-        }", "-        expectLog(\"test5\", \"http.url is http://localhost:999\");", "+        String baseDir = buildRule.getProject().getProperty(\"basedir\");", "+    \tString uri = FILE_UTILS.toURI(baseDir + \"/property3.properties\");", "+        buildRule.getProject().setNewProperty(\"test5.url\", uri);", "+        ", "+        buildRule.executeTarget(\"test5\");", "+        assertContains(\"http.url is http://localhost:999\", buildRule.getLog());"]}]}