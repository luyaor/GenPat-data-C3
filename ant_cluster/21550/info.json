{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7159997215f8c04e293fa89b729282f8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59cf2f92f681ad60af17f626eee2dc49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/Gcj.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected Commandline setupGCJCommand()         throws TaskException", "signatureAfterChange": "      protected Commandline setupGCJCommand()         throws TaskException", "diff": ["-        if( m_bootclasspath != null )", "-        {", "-            classpath.addPath( m_bootclasspath );", "-        }", "+        final String[] bootclasspath = m_bootclasspath.listFiles( getTaskContext() );", "+        classpath.addPath( bootclasspath );", "-        if( ( m_bootclasspath == null ) || m_bootclasspath.isEmpty() )", "+        if( bootclasspath.length == 0 )", "+", "-        cmd.addArgument( PathUtil.formatPath( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath, getTaskContext() ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64549f81b465929c97245d8c64c8bffd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MParse.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected String[] getOptions() throws TaskException", "signatureAfterChange": "     protected String[] getOptions() throws TaskException", "diff": ["-        if( ! m_classpath.isEmpty() )", "+        final String[] classpath = m_classpath.listFiles( getContext() );", "+        if( classpath.length > 0 )", "-            options.add( PathUtil.formatPath( m_classpath ) );", "+            options.add( PathUtil.formatPath( classpath ) );", "-        if( ! m_sourcepath.isEmpty() )", "+        final String[] sourcepath = m_sourcepath.listFiles( getContext() );", "+        if( sourcepath.length > 0 )", "-            options.add( PathUtil.formatPath( m_sourcepath ) );", "+            options.add( PathUtil.formatPath( sourcepath ) );"]}]}