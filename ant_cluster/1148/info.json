{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "957342cc858531ac7e266ef55a4ff03b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2439a0925d65380df9d31b346691856a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/component/core/URLConverter.java", "commitBeforeChange": "8d130028151fa7cc9d93e3cdf9ea1637cb16fcde", "commitAfterChange": "362903a2bd195f64f594d4b3f333900d67a3c7bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public Object convert(String value, Class type) throws ConversionException", "signatureAfterChange": "          public Object convert(String value, Class type) throws ConversionException", "diff": ["-            throw new ConversionException(\"Unable to convert \" + value ", "-                                          + \" into a URL relative to the project's base\");", "+            //try a local file", "+            try {", "+                File file = new File(value);", "+                return file.toURL();", "+            }", "+            catch (MalformedURLException e2) {", "+                throw new ConversionException(\"Unable to convert \" + value ", "+                                              + \" into a URL relative to the project's base\");", "+            }                                              "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1f2ea4f079b9a7a47f1d10ca774d195", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Union.java", "commitBeforeChange": "4bad7aa79d384ef8dfbff97b2c04621ef7eb3c34", "commitAfterChange": "43953950aa6f381b7b0f2b1ff7ab4190bc61535f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Collection getCollection(boolean asString)", "signatureAfterChange": "     protected Collection getCollection(boolean asString)", "diff": ["+        // (LinkedHashSet better, but JDK 1.4+)", "+        Set _union = new HashSet(rc.size() * 2);", "-                if (!(union.contains(o))) {", "+                if (_union.add(o)) {"]}]}