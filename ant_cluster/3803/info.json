{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1183efb24c48f396afe78ec4a53edd35", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b6feb70e70bb88fdd49a5ee4f8e1997", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/configuration/DefaultConfigurer.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected void setValue( final Object object, Object value, final Method methods[] )         throws ConfigurationException", "signatureAfterChange": "      protected void setValue( final Object object,                               Object value,                               final Method methods[],                              final Context context )         throws ConfigurationException", "diff": ["-    protected void setValue( final Object object, Object value, final Method methods[] )", "+    protected void setValue( final Object object, ", "+                             Object value, ", "+                             final Method methods[],", "+                             final Context context )", "-            if( setValue( object, value, methods[ i ], sourceClass, source ) )", "+            if( setValue( object, value, methods[ i ], sourceClass, source, context ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a421e2f4c5d1dd1544c0c9ee5ba103", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Object convert( Class destination, final Object original )         throws Exception", "signatureAfterChange": "     public Object convert( Class destination, final Object original, final Context context )         throws Exception", "diff": ["-", "-    public Object convert( Class destination, final Object original )", "+     */", "+    public Object convert( Class destination, final Object original, final Context context )", "+        //TODO: Start searching inheritance hierarchy for converter", "+        //TODO: Start caching converters instead of repeatedly instantiating em.", "-        return converter.convert( destination, original );", "+        return converter.convert( destination, original, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af245e6efd04a13b87281bf63e6a14d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/configuration/DefaultConfigurer.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected boolean setValue( final Object object,                                  Object value,                                  final Method method,                                 final Class sourceClass,                                 final String source )         throws ConfigurationException", "signatureAfterChange": "      protected boolean setValue( final Object object,                                  Object value,                                  final Method method,                                 final Class sourceClass,                                 final String source,                                 final Context context )         throws ConfigurationException", "diff": ["-                                final String source )", "+                                final String source,", "+                                final Context context )", "-            value = m_converter.convert( parameterType, value );", "+            value = m_converter.convert( parameterType, value, context );"]}]}