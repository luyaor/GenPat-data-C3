{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "403cf5165905403d783032fc0cc11df4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c76f26b177c93f22eca092be9359aa1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testTrimFileByLine() throws IOException", "signatureAfterChange": "      @Test     public void testTrimFileByLine() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"trimfilebyline\", getProject().getProperty(\"output\") + \"/trimfilebyline\");", "+    \tbuildRule.executeTarget(\"trimfilebyline\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfilebyline\");", "-        assertStringNotContains(contents, \"  This is the second\");", "-        assertStringContains(contents, \"file.\\nThis is the second\");", "+        assertNotContains(\"  This is the second\", contents);", "+        assertContains(\"file.\\nThis is the second\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d765c60f650a7cef003c4a5445628c64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testTrimFile() throws IOException", "signatureAfterChange": "      @Test     public void testTrimFile() throws IOException", "diff": ["+    @Test", "-        String contents = getFileString(", "-            \"trimfile\", getProject().getProperty(\"output\") + \"/trimfile\");", "+    \tbuildRule.executeTarget(\"trimfile\");", "+        String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/trimfile\");", "-        assertStringContains(contents, \"  This is the second\");", "+        assertContains(\"  This is the second\", contents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87c3a2d2190644a45c2779415bf2f36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/DynamicFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testCustomFilter() throws IOException", "signatureAfterChange": "      @Test     public void testCustomFilter() throws IOException", "diff": ["+    @Test", "-        expectFileContains(\"dynamicfilter\", getProject().getProperty(\"output\") + \"/dynamicfilter\",", "-                           \"hellO wOrld\");", "+        buildRule.executeTarget(\"dynamicfilter\");", "+        String content = FileUtilities.getFileContents(", "+                new File(buildRule.getProject().getProperty(\"output\") + \"/dynamicfilter\"));", "+        assertContains(\"hellO wOrld\", content);"]}]}