{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85e1b0dd5310a5f6fc7f4cbb9f38f14b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991d400317d1741b7875f1f2e0a2cfe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "9c8f401ba1b75b03f001db7415bc3cfbfd320cd9", "commitAfterChange": "5ddb0dfbd998fbfaca281f7537828e202bf02f44", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            addProperty(name, untypedValue);", "+            if (relative) {", "+                try {", "+                    File from = untypedValue instanceof File ? (File)untypedValue : new File(untypedValue.toString());", "+                    File to = basedir != null ? basedir : getProject().getBaseDir();", "+                    String relPath = FileUtils.getFileUtils().getRelativePath(to, from);", "+                    relPath = relPath.replace('/', File.separatorChar);", "+                    addProperty(name, relPath);", "+                } catch (Exception e) {", "+                    throw new BuildException(e, getLocation());", "+                }", "+            } else {", "+                addProperty(name, untypedValue);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b6b14d2818c6f0e5658c16ea555a2c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "8efca5a58020f66fafe94ec85550c80516e60837", "commitAfterChange": "c012d33f03aa6d0fa3d52fdac1e4b42851e927ee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                    doLink(resource, link);", "+\t\t    // handle the case where the link exists ", "+\t\t    // and points to a directory (bug 25181)", "+\t\t    try {", "+\t\t\tFileUtils fu = FileUtils.newFileUtils();", "+\t\t\tFile test = new File(link);", "+\t\t\tFile testRes = new File(resource);", "+\t\t\tif (!fu.isSymbolicLink(test.getParentFile(), ", "+\t\t\t\t\t       test.getName())) {", "+\t\t\t    doLink(resource, link);", "+\t\t\t} else {", "+\t\t\t    if (!test.getCanonicalPath().", "+\t\t\t    \tequals(testRes.getCanonicalPath())) {", "+\t\t\t    \tSymlink.deleteSymlink(link);", "+\t\t\t    \tdoLink(resource,link);", "+\t\t\t    } // else the link exists, do nothing", "+\t\t\t}", "+\t\t    } catch (IOException ioe) {", "+\t\t\thandleError(\"IO exception while creating \"", "+\t\t\t\t    + \"link\");", "+\t\t    }"]}]}