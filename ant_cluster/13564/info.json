{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f3e07465a8ca7b7a5ff37a0a8c06836", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ed3b46fafe3c2c8eea9ad26e42b7c28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bc60284c4113a11be40a67932557b1f9f178a015", "commitAfterChange": "94da71c7641a9cdccc8e4b5f0bd814fb75a70b7c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(String[] args)", "diff": ["+        boolean justPrintUsage = false;", "+        boolean justPrintVersion = false;", "+        boolean justPrintDiagnostics = false;", "+", "-                printUsage();", "-                return;", "+                justPrintUsage = true;", "-                printVersion();", "-                return;", "+                justPrintVersion = true;", "-                Diagnostics.doReport(System.out);", "-                return;", "+                justPrintDiagnostics = true;", "-                printVersion();", "-                printVersion();", "+        }", "+", "+        if (msgOutputLevel >= Project.MSG_VERBOSE || justPrintVersion) {", "+            printVersion(msgOutputLevel);", "+        }", "+", "+        if (justPrintUsage || justPrintVersion || justPrintDiagnostics) {", "+            if (justPrintUsage) {", "+                printUsage();", "+            }", "+            if (justPrintDiagnostics) {", "+                Diagnostics.doReport(System.out, msgOutputLevel);", "+            }", "+            return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62b3e513de59730dfe08e3535f14307", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "eca5133693881d72fbd157619b03647e7e255789", "commitAfterChange": "d1392f7d25e288ce299c1be10afb6cbe5081afe9", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        Manifest current = null;", "+        BuildException error = null;", "-        if (mode.getValue().equals(\"update\") && manifestFile.exists()) {", "+        if (manifestFile.exists()) {", "-                toWrite.merge(new Manifest(f));", "+                current = new Manifest(f);", "-                throw new BuildException(\"Existing manifest \" + manifestFile", "+                error = new BuildException(\"Existing manifest \" + manifestFile", "-                throw new BuildException(\"Failed to read \" + manifestFile,", "+                error = new BuildException(\"Failed to read \" + manifestFile,", "+            if (mode.getValue().equals(\"update\") && manifestFile.exists()) {", "+                if (current != null) {", "+                    toWrite.merge(current);", "+                }", "+                else if (error != null) {", "+                    throw error;", "+                }", "+            }", "+", "+        if (toWrite.equals(current)) {", "+            log(\"Manifest has not changed, do not recreate\", project.MSG_VERBOSE);", "+            return;", "+        }", "+"]}]}