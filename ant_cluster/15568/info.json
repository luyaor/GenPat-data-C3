{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4f7b550dd47f15bd10f0ee5eadd2e92", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a7dcf5cc80d038cc1e6514a5b6c2765", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private Reflector getReflector(Class c)", "signatureAfterChange": "     private Setter getSetter(Class c)", "diff": ["-    private Reflector getReflector(Class c) {", "-        if (reflectors.containsKey(c)) {", "-            return (Reflector)reflectors.get(c);", "+    private Setter getSetter(Class c) {", "+        if (setters.containsKey(c)) {", "+            return (Setter)setters.get(c);", "-        ClassIntrospector introspector", "-             = new ClassIntrospector(c, componentManager.getConverters());", "-        Reflector reflector = introspector.getReflector();", "-        reflectors.put(c, reflector);", "-        return reflector;", "+        Setter setter = null;", "+        if (DeferredTask.class.isAssignableFrom(c)) {", "+            setter = new DeferredSetter();", "+        } else {", "+            ClassIntrospector introspector", "+                 = new ClassIntrospector(c, componentManager.getConverters());", "+            setter = introspector.getReflector();", "+        }", "+", "+        setters.put(c, setter);", "+        return setter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4dfa45d38b8e61cb7b366576dce875f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "1764b5fda8fe5b4166269d73a00f975b4c7fb75d", "commitAfterChange": "1e599c6651b3baafbf807462fe32a975b416f1d1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "diff": ["-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-            return new AttributeSetter(m) {", "+            return new AttributeSetter(m, arg) {", "-        return new AttributeSetter(m) {", "+        return new AttributeSetter(m, arg) {"]}]}