{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41bfe351503339abe8c22c865044ffdf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd28c4ff5dc6f3d7b257849cb57f87dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReachableTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testBadTimeout() throws Exception", "signatureAfterChange": "      @Test     public void testBadTimeout() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testBadTimeout\",", "-                \"error on -ve timeout\",", "-                IsReachable.ERROR_BAD_TIMEOUT);", "+        try {", "+            buildRule.executeTarget(\"testBadTimeout\");", "+            fail(\"Build exception expected: error on -ve timeout\");", "+        } catch(BuildException ex) {", "+            assertEquals(IsReachable.ERROR_BAD_TIMEOUT, ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd91b4f92ffcef2b6930013a8d94b69f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReachableTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testBoth() throws Exception", "signatureAfterChange": "      @Test     public void testBoth() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testBoth\",", "-                \"error on two targets\",", "-                IsReachable.ERROR_BOTH_TARGETS);", "+        try {", "+           buildRule.executeTarget(\"testBoth\");", "+            fail(\"Build exception expected: error on two targets\");", "+        } catch(BuildException ex) {", "+            assertEquals(IsReachable.ERROR_BOTH_TARGETS, ex.getMessage());", "+        }"]}]}