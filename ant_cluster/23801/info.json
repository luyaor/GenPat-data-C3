{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36cc9336db068291ec69bb8765383f5e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ec7c50a7cc11bfe134cdd3a6515120", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "          public void restoreSystem()             throws BuildException", "signatureAfterChange": "          public void restoreSystem()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( \"Unbalanced nesting of SysProperties\" );", "+                throw new TaskException( \"Unbalanced nesting of SysProperties\" );", "-                throw new BuildException( \"Cannot modify system properties\", e );", "+                throw new TaskException( \"Cannot modify system properties\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035ebb52fd2a9c9e077a98d07c83e20f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void addDefinition( ClassLoader al, String name, String value )         throws BuildException", "signatureAfterChange": "      private void addDefinition( ClassLoader al, String name, String value )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg, cnfe );", "+            throw new TaskException( msg, cnfe );", "-            throw new BuildException( msg, ncdfe );", "+            throw new TaskException( msg, ncdfe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "039924fa6aaad98d115b7da0168a5e25", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws BuildException", "signatureAfterChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                    \" because no files were included.\", Project.MSG_WARN );", "+                     \" because no files were included.\", Project.MSG_WARN );", "-                throw new BuildException( \"Cannot create \" + archiveType + \" archive \" + zipFile +", "-                    \": no files were included.\" );", "+                throw new TaskException( \"Cannot create \" + archiveType + \" archive \" + zipFile +", "+                                         \": no files were included.\" );", "-                if( files[i].equals( zipFile ) )", "+                if( files[ i ].equals( zipFile ) )", "-                    throw new BuildException( \"A zip file cannot include itself\" );", "+                    throw new TaskException( \"A zip file cannot include itself\" );", "-                if( sfs.restrict( fileNames[i], scanners[i].getBasedir(), null,", "-                    mm ).length > 0 )", "+                if( sfs.restrict( fileNames[ i ], scanners[ i ].getBasedir(), null,", "+                                  mm ).length > 0 )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03a076b7a487b2ed17aac816501ff152", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+        for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-            EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "+            EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "-                Project.MSG_VERBOSE );", "+                 Project.MSG_VERBOSE );", "-                for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+                for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-                    EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "-                    tool.processDescriptor( files[index], saxParser );", "+                    EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "+                    tool.processDescriptor( files[ index ], saxParser );", "-                 + \"  Details: \"", "-                 + se.getMessage();", "-            throw new BuildException( msg, se );", "+                + \"  Details: \"", "+                + se.getMessage();", "+            throw new TaskException( msg, se );", "-                 + \"Details: \" + pce.getMessage();", "-            throw new BuildException( msg, pce );", "+                + \"Details: \" + pce.getMessage();", "+            throw new TaskException( msg, pce );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4acb22df926248237e13b0cd1da696", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void validateAttributes()         throws BuildException", "signatureAfterChange": "      private void validateAttributes()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );", "-            throw new BuildException( \"Invalid output directory: \" + outputDirectory );", "+            throw new TaskException( \"Invalid output directory: \" + outputDirectory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f0bb6aeba2d40fb870c56685fe3ed3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKOUT.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11125b1428d1931f1259f9feeeadf393", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws BuildException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "+            throw new TaskException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "-            fileUtils.getParentFile( src ) );", "+                                              fileUtils.getParentFile( src ) );", "-                 : new InputStreamReader( new FileInputStream( src ), encoding );", "+                : new InputStreamReader( new FileInputStream( src ), encoding );", "-                 : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "-            int fileLengthInBytes = ( int )( src.length() );", "+            int fileLengthInBytes = (int)( src.length() );", "-                tmpBuf.append( ( char )readChar );", "+                tmpBuf.append( (char)readChar );", "-            throw new BuildException( \"IOException in \" + src + \" - \" +", "-                ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "+            throw new TaskException( \"IOException in \" + src + \" - \" +", "+                                     ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c21717e62a1c8b7a90dfe41bc75289", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void waitForString( String s, Integer timeout )", "signatureAfterChange": "         public void waitForString( String s, Integer timeout )", "diff": ["-                        sb.append( ( char )is.read() );", "+                        sb.append( (char)is.read() );", "-                            throw new BuildException( \"Response Timed-Out\" );", "-                        sb.append( ( char )is.read() );", "+                            throw new TaskException( \"Response Timed-Out\" );", "+                        sb.append( (char)is.read() );", "-            catch( BuildException be )", "+            catch( TaskException be )", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12d705a27bff5c52a7ed6cd75635984c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void transformFile()         throws BuildException", "signatureAfterChange": "     protected void transformFile()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Error reading temporary file: \" + tmpFile, e );", "+            throw new TaskException( \"Error reading temporary file: \" + tmpFile, e );", "-            throw new BuildException( \"Error creating output file: \" + outFile, e );", "+            throw new TaskException( \"Error creating output file: \" + outFile, e );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "130c90d43ba106625535e5f8d4cb7d07", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJToolsServlet.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void doGet( HttpServletRequest req, HttpServletResponse res )         throws ServletException, IOException", "signatureAfterChange": "     public void doGet( HttpServletRequest req, HttpServletResponse res )         throws ServletException, IOException", "diff": ["-        catch( BuildException e )", "+        catch( TaskException e )", "-                if( !( e instanceof BuildException ) )", "+                if( !( e instanceof TaskException ) )", "-                         + \":\\n\" + trace, VAJUtil.MSG_ERR );", "+                              + \":\\n\" + trace, VAJUtil.MSG_ERR );", "-                if( !( e instanceof BuildException ) )", "+                if( !( e instanceof TaskException ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13428b6724cfa7acf22e579d0fcf68ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Pack.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-            throw new BuildException( \"zipfile attribute is required\" );", "+            throw new TaskException( \"zipfile attribute is required\" );", "-            throw new BuildException( \"src attribute is required\" );", "+            throw new TaskException( \"src attribute is required\" );", "-            throw new BuildException( \"Src attribute must not \" +", "-                \"represent a directory!\" );", "+            throw new TaskException( \"Src attribute must not \" +", "+                                     \"represent a directory!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1447fd27d76e4abff1cd79af7ddf5c3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static synchronized String getAntVersion()         throws BuildException", "signatureAfterChange": "      public static synchronized String getAntVersion()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Could not load the version information:\"", "+                throw new TaskException( \"Could not load the version information:\"", "-                throw new BuildException( \"Could not load the version information.\" );", "+                throw new TaskException( \"Could not load the version information.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1533135acd47da4192518e2a1ede9118", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/condition/Not.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean eval()         throws BuildException", "signatureAfterChange": "      public boolean eval()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must not nest more than one condition into <not>\" );", "+            throw new TaskException( \"You must not nest more than one condition into <not>\" );", "-            throw new BuildException( \"You must nest a condition into <not>\" );", "+            throw new TaskException( \"You must nest a condition into <not>\" );", "-        return !( ( Condition )getConditions().nextElement() ).eval();", "+        return !( (Condition)getConditions().nextElement() ).eval();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16c3b48b0aaa3cf350e27905e7fec0d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbJar.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+        for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-            EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "+            EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "-                Project.MSG_VERBOSE );", "+                 Project.MSG_VERBOSE );", "-                for( Iterator i = deploymentTools.iterator(); i.hasNext();  )", "+                for( Iterator i = deploymentTools.iterator(); i.hasNext(); )", "-                    EJBDeploymentTool tool = ( EJBDeploymentTool )i.next();", "-                    tool.processDescriptor( files[index], saxParser );", "+                    EJBDeploymentTool tool = (EJBDeploymentTool)i.next();", "+                    tool.processDescriptor( files[ index ], saxParser );", "-                 + \"  Details: \"", "-                 + se.getMessage();", "-            throw new BuildException( msg, se );", "+                + \"  Details: \"", "+                + se.getMessage();", "+            throw new TaskException( msg, se );", "-                 + \"Details: \" + pce.getMessage();", "-            throw new BuildException( msg, pce );", "+                + \"Details: \" + pce.getMessage();", "+            throw new TaskException( msg, pce );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab21d87096f18de3de97fa7187eefe6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"no stylesheet specified\" );", "+            throw new TaskException( \"no stylesheet specified\" );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b8872dc871ff5ee012167543786b475", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/Main.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static synchronized String getAntVersion()         throws BuildException", "signatureAfterChange": "      public static synchronized String getAntVersion()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Could not load the version information:\"", "+                throw new TaskException( \"Could not load the version information:\"", "-                throw new BuildException( \"Could not load the version information.\" );", "+                throw new TaskException( \"Could not load the version information.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be3fdd72f08cb723588a91f59007dc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private SAXParser getParser()         throws BuildException", "signatureAfterChange": "     private SAXParser getParser()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg, e );", "+            throw new TaskException( msg, e );", "-            throw new BuildException( msg, e );", "+            throw new TaskException( msg, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c31bba633914ae8bc7307635a32d0ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void addDefinition( ClassLoader al, String name, String value )         throws BuildException", "signatureAfterChange": "      private void addDefinition( ClassLoader al, String name, String value )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg, cnfe );", "+            throw new TaskException( msg, cnfe );", "-            throw new BuildException( msg, ncdfe );", "+            throw new TaskException( msg, ncdfe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ce2913ca2bd5eb6166a25e6fc8bfe5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-", "-        throws BuildException", "+        throws TaskException", "-", "-            throw new BuildException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "-            throw new BuildException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "-            FileSet targetFS = ( FileSet )enumTargetSets.nextElement();", "+            FileSet targetFS = (FileSet)enumTargetSets.nextElement();", "-                File dest = new File( targetFS.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFS.getDir( project ), targetFiles[ i ] );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-            FileList targetFL = ( FileList )enumTargetLists.nextElement();", "+            FileList targetFL = (FileList)enumTargetLists.nextElement();", "-                File dest = new File( targetFL.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFL.getDir( project ), targetFiles[ i ] );", "-                    log( targetFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                    log( targetFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-                FileSet sourceFS = ( FileSet )enumSourceSets.nextElement();", "+                FileSet sourceFS = (FileSet)enumSourceSets.nextElement();", "-                    File src = new File( sourceFS.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFS.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                FileList sourceFL = ( FileList )enumSourceLists.nextElement();", "+                FileList sourceFL = (FileList)enumSourceLists.nextElement();", "-                    File src = new File( sourceFL.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFL.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        log( sourceFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                        log( sourceFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                }while ( upToDate && ( ++i < sourceFiles.length ) );", "+                } while( upToDate && ( ++i < sourceFiles.length ) );", "-            for( Enumeration e = allTargets.elements(); e.hasMoreElements();  )", "+            for( Enumeration e = allTargets.elements(); e.hasMoreElements(); )", "-                File fileToRemove = ( File )e.nextElement();", "+                File fileToRemove = (File)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2793251ea18a7b20ec5ddd75688fdcbb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"no stylesheet specified\" );", "+            throw new TaskException( \"no stylesheet specified\" );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d28f154fb8e3d71583e4995eee00d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void waitForString( String s, Integer timeout )", "signatureAfterChange": "         public void waitForString( String s, Integer timeout )", "diff": ["-                        sb.append( ( char )is.read() );", "+                        sb.append( (char)is.read() );", "-                            throw new BuildException( \"Response Timed-Out\" );", "-                        sb.append( ( char )is.read() );", "+                            throw new TaskException( \"Response Timed-Out\" );", "+                        sb.append( (char)is.read() );", "-            catch( BuildException be )", "+            catch( TaskException be )", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "282c9e0559c7fde5d3fe03d3b4beed51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"weblogic home must be set\" );", "+            throw new TaskException( \"weblogic home must be set\" );", "-            throw new BuildException( \"weblogic home directory \" + weblogicSystemHome.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"weblogic home directory \" + weblogicSystemHome.getPath() +", "+                                     \" is not valid\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cd481c411102c2337315aa64bc6e120", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fd962b4744dc406d330b6b14aadb370", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"The dest attribute must be set.\" );", "+            throw new TaskException( \"The dest attribute must be set.\" );", "-            throw new BuildException( \"The ext attribute or a mapper must be set if\"", "-                 + \" src and dest dirs are the same.\" );", "+            throw new TaskException( \"The ext attribute or a mapper must be set if\"", "+                                     + \" src and dest dirs are the same.\" );", "-             + ( count != 1 ? \"s\" : \"\" ) + \" from \";", "+            + ( count != 1 ? \"s\" : \"\" ) + \" from \";", "-            convert( files[i], m.mapFileName( files[i] )[0] );", "+            convert( files[ i ], m.mapFileName( files[ i ] )[ 0 ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31bcecc1a33fc4dbc4ecf146f7997283", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/condition/Socket.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public boolean eval()         throws BuildException", "signatureAfterChange": "      public boolean eval()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No server specified in Socket task\" );", "+            throw new TaskException( \"No server specified in Socket task\" );", "-            throw new BuildException( \"No port specified in Socket task\" );", "+            throw new TaskException( \"No port specified in Socket task\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32fe7ce73660431cefa798138d79667c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/Main.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected Main( String[] args )         throws BuildException", "signatureAfterChange": "      protected Main( String[] args )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Build failed\" );", "+            throw new TaskException( \"Build failed\" );", "-            throw new BuildException( \"Build failed\" );", "+            throw new TaskException( \"Build failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344f1da6fb81b36adb57bde3dd30ac80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        else", "-            if( \"xml\".equals( format ) )", "+        else if( \"xml\".equals( format ) )", "-            throw new BuildException( \"Missing Sourcepath required argument\" );", "+            throw new TaskException( \"Missing Sourcepath required argument\" );", "-                throw new BuildException( \"JDepend failed\" );", "+                throw new TaskException( \"JDepend failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3452e61860fb35f04dad7094a202e4d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        else", "-            if( \"xml\".equals( format ) )", "+        else if( \"xml\".equals( format ) )", "-            throw new BuildException( \"Missing Sourcepath required argument\" );", "+            throw new TaskException( \"Missing Sourcepath required argument\" );", "-                throw new BuildException( \"JDepend failed\" );", "+                throw new TaskException( \"JDepend failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c82ed7f62a9a84851eaf2b5c1982c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKOUT.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ec8e23c59e0d7d43b66a879810c55b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-", "-        throws BuildException", "+        throws TaskException", "-", "-            throw new BuildException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <srcfileset> or <srcfilelist> element must be set\" );", "-            throw new BuildException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "+            throw new TaskException( \"At least one <targetfileset> or <targetfilelist> element must be set\" );", "-            FileSet targetFS = ( FileSet )enumTargetSets.nextElement();", "+            FileSet targetFS = (FileSet)enumTargetSets.nextElement();", "-                File dest = new File( targetFS.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFS.getDir( project ), targetFiles[ i ] );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-            FileList targetFL = ( FileList )enumTargetLists.nextElement();", "+            FileList targetFL = (FileList)enumTargetLists.nextElement();", "-                File dest = new File( targetFL.getDir( project ), targetFiles[i] );", "+                File dest = new File( targetFL.getDir( project ), targetFiles[ i ] );", "-                    log( targetFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                    log( targetFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                    log( \"Warning: \" + targetFiles[i] + \" modified in the future.\",", "-                        Project.MSG_WARN );", "+                    log( \"Warning: \" + targetFiles[ i ] + \" modified in the future.\",", "+                         Project.MSG_WARN );", "-                FileSet sourceFS = ( FileSet )enumSourceSets.nextElement();", "+                FileSet sourceFS = (FileSet)enumSourceSets.nextElement();", "-                    File src = new File( sourceFS.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFS.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                FileList sourceFL = ( FileList )enumSourceLists.nextElement();", "+                FileList sourceFL = (FileList)enumSourceLists.nextElement();", "-                    File src = new File( sourceFL.getDir( project ), sourceFiles[i] );", "+                    File src = new File( sourceFL.getDir( project ), sourceFiles[ i ] );", "-                        log( \"Warning: \" + sourceFiles[i] + \" modified in the future.\",", "-                            Project.MSG_WARN );", "+                        log( \"Warning: \" + sourceFiles[ i ] + \" modified in the future.\",", "+                             Project.MSG_WARN );", "-                        log( sourceFiles[i] + \" does not exist.\", Project.MSG_VERBOSE );", "+                        log( sourceFiles[ i ] + \" does not exist.\", Project.MSG_VERBOSE );", "-                        File dest = ( File )enumTargets.nextElement();", "+                        File dest = (File)enumTargets.nextElement();", "-                                sourceFiles[i], Project.MSG_VERBOSE );", "+                                 sourceFiles[ i ], Project.MSG_VERBOSE );", "-                }while ( upToDate && ( ++i < sourceFiles.length ) );", "+                } while( upToDate && ( ++i < sourceFiles.length ) );", "-            for( Enumeration e = allTargets.elements(); e.hasMoreElements();  )", "+            for( Enumeration e = allTargets.elements(); e.hasMoreElements(); )", "-                File fileToRemove = ( File )e.nextElement();", "+                File fileToRemove = (File)e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3809bec7e3e102799186655d4709a728", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void validateAttributes()         throws BuildException", "signatureAfterChange": "      private void validateAttributes()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Invalid target: \" + target );", "+            throw new TaskException( \"Invalid target: \" + target );", "-            throw new BuildException( \"Invalid output directory: \" + outputDirectory );", "+            throw new TaskException( \"Invalid output directory: \" + outputDirectory );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f3d49342d310391b5e55e8bcd309b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/GenerateKey.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public DistinguishedName createDname()         throws BuildException", "signatureAfterChange": "      public DistinguishedName createDname()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"DName sub-element can only be specified once.\" );", "+            throw new TaskException( \"DName sub-element can only be specified once.\" );", "-            throw new BuildException( \"It is not possible to specify dname both \" +", "-                \"as attribute and element.\" );", "+            throw new TaskException( \"It is not possible to specify dname both \" +", "+                                     \"as attribute and element.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3904d77a594767d8460310066b68d264", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Exit.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( \"No message\" );", "+                throw new TaskException( \"No message\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad307673ac2ada087ca2351244bf691", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Properties getProperties( File propertyFile )         throws BuildException", "signatureAfterChange": "      public Properties getProperties( File propertyFile )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( message );", "+            throw new TaskException( message );", "-            throw new BuildException( message );", "+            throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46429cedc1fe75d122849e83d9311bb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"patchfile argument is required\" );", "+            throw new TaskException( \"patchfile argument is required\" );", "-        Commandline toExecute = ( Commandline )cmd.clone();", "+        Commandline toExecute = (Commandline)cmd.clone();", "-            Project.MSG_WARN ),", "-            null );", "+                                                         Project.MSG_WARN ),", "+                                   null );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47dffd40a598c2e6810da950abc3d872", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/WaitFor.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must not nest more than one condition into <waitfor>\" );", "+            throw new TaskException( \"You must not nest more than one condition into <waitfor>\" );", "-            throw new BuildException( \"You must nest a condition into <waitfor>\" );", "+            throw new TaskException( \"You must nest a condition into <waitfor>\" );", "-        Condition c = ( Condition )getConditions().nextElement();", "+        Condition c = (Condition)getConditions().nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48373066292c67cb90235f70cca1d506", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private File getGeneratedFile()         throws BuildException", "signatureAfterChange": "      private File getGeneratedFile()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Unable to determine generated class\", e );", "+            throw new TaskException( \"Unable to determine generated class\", e );", "-            throw new BuildException( \"Unable to determine generated class\" );", "+            throw new TaskException( \"Unable to determine generated class\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "483bd627e9dfef1793787098831b5fc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, TaskException", "diff": ["-        throws IOException, BuildException", "+        throws IOException, TaskException", "-            throw new BuildException( \"the dir attribute must be set for send and get actions\" );", "+            throw new TaskException( \"the dir attribute must be set for send and get actions\" );", "-            switch ( action )", "+            switch( action )", "-            case SEND_FILES:", "-            {", "-                sendFile( ftp, dir, dsfiles[i] );", "-                break;", "-            }", "+                case SEND_FILES:", "+                    {", "+                        sendFile( ftp, dir, dsfiles[ i ] );", "+                        break;", "+                    }", "-            case GET_FILES:", "-            {", "-                getFile( ftp, dir, dsfiles[i] );", "-                break;", "-            }", "+                case GET_FILES:", "+                    {", "+                        getFile( ftp, dir, dsfiles[ i ] );", "+                        break;", "+                    }", "-            case DEL_FILES:", "-            {", "-                delFile( ftp, dsfiles[i] );", "-                break;", "-            }", "+                case DEL_FILES:", "+                    {", "+                        delFile( ftp, dsfiles[ i ] );", "+                        break;", "+                    }", "-            case LIST_FILES:", "-            {", "-                listFile( ftp, bw, dsfiles[i] );", "-                break;", "-            }", "+                case LIST_FILES:", "+                    {", "+                        listFile( ftp, bw, dsfiles[ i ] );", "+                        break;", "+                    }", "-            default:", "-            {", "-                throw new BuildException( \"unknown ftp action \" + action );", "-            }", "+                default:", "+                    {", "+                        throw new TaskException( \"unknown ftp action \" + action );", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ddf0317ec8b1597e7a07b006fdedef0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void _execute( ExecuteStreamHandler handler )         throws BuildException", "signatureAfterChange": "     protected void _execute( ExecuteStreamHandler handler )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Metamata task failed.\" );", "+                throw new TaskException( \"Metamata task failed.\" );", "-            throw new BuildException( \"Failed to launch Metamata task: \" + e );", "+            throw new TaskException( \"Failed to launch Metamata task: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f4ceb3c266d2d74b22624db4c97fb78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected ExecuteStreamHandler createHandler()         throws BuildException", "signatureAfterChange": "     protected ExecuteStreamHandler createHandler()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Cannot write to \" + out, fne );", "+                throw new TaskException( \"Cannot write to \" + out, fne );", "-                throw new BuildException( \"Cannot write to \" + out, ioe );", "+                throw new TaskException( \"Cannot write to \" + out, ioe );", "-                Project.MSG_INFO, Project.MSG_WARN );", "+                                         Project.MSG_INFO, Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50371623d2008cc2e664da76127f21d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void getVersionDateCommand( Commandline cmd )         throws BuildException", "signatureAfterChange": "     private void getVersionDateCommand( Commandline cmd )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51779a969895a6542551d195dd27e8ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "549836718bfb36fa5194109b9fd483cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public int executeJava()         throws BuildException", "signatureAfterChange": "     public int executeJava()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Classname must not be null.\" );", "+            throw new TaskException( \"Classname must not be null.\" );", "-            throw new BuildException( \"Cannot execute a jar in non-forked mode. Please set fork='true'. \" );", "+            throw new TaskException( \"Cannot execute a jar in non-forked mode. Please set fork='true'. \" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5613036962bd039a6071c0a175fe4631", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws BuildException", "signatureAfterChange": "     protected boolean isUpToDate( FileScanner[] scanners, File zipFile )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                    \" because no files were included.\", Project.MSG_WARN );", "+                     \" because no files were included.\", Project.MSG_WARN );", "-                throw new BuildException( \"Cannot create \" + archiveType + \" archive \" + zipFile +", "-                    \": no files were included.\" );", "+                throw new TaskException( \"Cannot create \" + archiveType + \" archive \" + zipFile +", "+                                         \": no files were included.\" );", "-                if( files[i].equals( zipFile ) )", "+                if( files[ i ].equals( zipFile ) )", "-                    throw new BuildException( \"A zip file cannot include itself\" );", "+                    throw new TaskException( \"A zip file cannot include itself\" );", "-                if( sfs.restrict( fileNames[i], scanners[i].getBasedir(), null,", "-                    mm ).length > 0 )", "+                if( sfs.restrict( fileNames[ i ], scanners[ i ].getBasedir(), null,", "+                                  mm ).length > 0 )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571a1e962fbbdd778411001188bbde10", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'metamatahome' must point to Metamata home directory.\" );", "+            throw new TaskException( \"'metamatahome' must point to Metamata home directory.\" );", "-            throw new BuildException( jar + \" does not exist. Check your metamata installation.\" );", "+            throw new TaskException( jar + \" does not exist. Check your metamata installation.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d99c7d10ac6b064be2083ab5a0d16aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected void checkConfiguration()", "signatureAfterChange": "      protected void checkConfiguration()", "diff": ["-            throw new BuildException( \"no filesets specified\" );", "+            throw new TaskException( \"no filesets specified\" );", "-             || destDir != null )", "+            || destDir != null )", "-                throw new BuildException( \"no mapper specified\" );", "+                throw new TaskException( \"no mapper specified\" );", "-                throw new BuildException( \"no dest attribute specified\" );", "+                throw new TaskException( \"no dest attribute specified\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc4abf9d7bd11b62a9f027e90063e8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, TaskException", "diff": ["-        throws IOException, BuildException", "+        throws IOException, TaskException", "-            throw new BuildException( \"the dir attribute must be set for send and get actions\" );", "+            throw new TaskException( \"the dir attribute must be set for send and get actions\" );", "-            switch ( action )", "+            switch( action )", "-            case SEND_FILES:", "-            {", "-                sendFile( ftp, dir, dsfiles[i] );", "-                break;", "-            }", "+                case SEND_FILES:", "+                    {", "+                        sendFile( ftp, dir, dsfiles[ i ] );", "+                        break;", "+                    }", "-            case GET_FILES:", "-            {", "-                getFile( ftp, dir, dsfiles[i] );", "-                break;", "-            }", "+                case GET_FILES:", "+                    {", "+                        getFile( ftp, dir, dsfiles[ i ] );", "+                        break;", "+                    }", "-            case DEL_FILES:", "-            {", "-                delFile( ftp, dsfiles[i] );", "-                break;", "-            }", "+                case DEL_FILES:", "+                    {", "+                        delFile( ftp, dsfiles[ i ] );", "+                        break;", "+                    }", "-            case LIST_FILES:", "-            {", "-                listFile( ftp, bw, dsfiles[i] );", "-                break;", "-            }", "+                case LIST_FILES:", "+                    {", "+                        listFile( ftp, bw, dsfiles[ i ] );", "+                        break;", "+                    }", "-            default:", "-            {", "-                throw new BuildException( \"unknown ftp action \" + action );", "-            }", "+                default:", "+                    {", "+                        throw new TaskException( \"unknown ftp action \" + action );", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efd8db021089b7c6f03fb14ad4bc06b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg);", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f5a96978a3d08fbfd10d50b848f348", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/TaskAdapter.java", "commitBeforeChange": "a57f963f8bac3bd2d5b7693c17b16edf68b9f6ca", "commitAfterChange": "956c3e08437f7084ddf560cead50305c5c104ddd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Error\", ex );", "+            throw new TaskException( \"Error\", ex );", "-            throw new BuildException( \"Error\", ex );", "+            throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "636dec4d0bf098a36d12b14091b8c90f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Patch.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"patchfile argument is required\" );", "+            throw new TaskException( \"patchfile argument is required\" );", "-        Commandline toExecute = ( Commandline )cmd.clone();", "+        Commandline toExecute = (Commandline)cmd.clone();", "-            Project.MSG_WARN ),", "-            null );", "+                                                         Project.MSG_WARN ),", "+                                   null );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cdf210588c30c8ae6446425bea1d59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/Reference.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Object getReferencedObject( Project project )         throws BuildException", "signatureAfterChange": "      public Object getReferencedObject( Project project )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No reference specified\" );", "+            throw new TaskException( \"No reference specified\" );", "-            throw new BuildException( \"Reference \" + refid + \" not found.\" );", "+            throw new TaskException( \"Reference \" + refid + \" not found.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "656100006f8f489958c55113a14d1900", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected ExecuteStreamHandler createHandler()         throws BuildException", "signatureAfterChange": "     protected ExecuteStreamHandler createHandler()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Cannot write to \" + out, fne );", "+                throw new TaskException( \"Cannot write to \" + out, fne );", "-                throw new BuildException( \"Cannot write to \" + out, ioe );", "+                throw new TaskException( \"Cannot write to \" + out, ioe );", "-                Project.MSG_INFO, Project.MSG_WARN );", "+                                         Project.MSG_INFO, Project.MSG_WARN );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e22de196ea00c63fbda6567664c0f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/dotnet/NetCommand.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void runCommand()         throws BuildException", "signatureAfterChange": "     public void runCommand()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                    throw new BuildException( _title + \" returned: \" + err );", "+                    throw new TaskException( _title + \" returned: \" + err );", "-            throw new BuildException( _title + \" failed: \" + e, e );", "+            throw new TaskException( _title + \" failed: \" + e, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6912e16a2183f30ce59369d0dd6da77f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"JProbe Coverage Merging failed (\" + exitValue + \")\" );", "+                throw new TaskException( \"JProbe Coverage Merging failed (\" + exitValue + \")\" );", "-            throw new BuildException( \"Failed to run JProbe Coverage Merge: \" + e );", "+            throw new TaskException( \"Failed to run JProbe Coverage Merge: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7037d6675f024c0ba2e8e0fec3779bb7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Pack.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-            throw new BuildException( \"zipfile attribute is required\" );", "+            throw new TaskException( \"zipfile attribute is required\" );", "-            throw new BuildException( \"src attribute is required\" );", "+            throw new TaskException( \"src attribute is required\" );", "-            throw new BuildException( \"Src attribute must not \" +", "-                \"represent a directory!\" );", "+            throw new TaskException( \"Src attribute must not \" +", "+                                     \"represent a directory!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "707b6c54efa61cef37e9d3c55e1e2c38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJRemoteUtil.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void sendRequest( String request )", "signatureAfterChange": "     private void sendRequest( String request )", "diff": ["-                ( HttpURLConnection )requestUrl.openConnection();", "+                (HttpURLConnection)requestUrl.openConnection();", "-                throw new BuildException( \"Couldn't execute \" + request );", "+                throw new TaskException( \"Couldn't execute \" + request );", "-            throw new BuildException( \"Couldn't execute \" + request );", "+            throw new TaskException( \"Couldn't execute \" + request );", "-            throw new BuildException( \"VAJ tool request failed\" );", "+            throw new TaskException( \"VAJ tool request failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736615258f6d79a95b6ef3092572dfbb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovReport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                cmdl.createArgument().setValue( params[i] );", "+                cmdl.createArgument().setValue( params[ i ] );", "-                throw new BuildException( \"JProbe Coverage Report failed (\" + exitValue + \")\" );", "+                throw new TaskException( \"JProbe Coverage Report failed (\" + exitValue + \")\" );", "-            throw new BuildException( \"Failed to execute JProbe Coverage Report.\", e );", "+            throw new TaskException( \"Failed to execute JProbe Coverage Report.\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75ced052ef8d4c269cbde648c4a579fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static void addRecipients( MimeMessage msg,                                        Message.RecipientType recipType,                                        String addrUserName,                                        String addrList                                         )         throws MessagingException, BuildException", "signatureAfterChange": "     private static void addRecipients( MimeMessage msg,                                        Message.RecipientType recipType,                                        String addrUserName,                                        String addrList                                        )         throws MessagingException, TaskException", "diff": ["-                                        )", "-        throws MessagingException, BuildException", "+                                       )", "+        throws MessagingException, TaskException", "-                throw new BuildException( \"Empty \" + addrUserName + \" recipients list was specified\" );", "+                throw new TaskException( \"Empty \" + addrUserName + \" recipients list was specified\" );", "-            throw new BuildException( \"Invalid \" + addrUserName + \" recipient list\" );", "+            throw new TaskException( \"Invalid \" + addrUserName + \" recipient list\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a2ee7caa30e9d341603b1c73d2bde0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private File getGeneratedFile()         throws BuildException", "signatureAfterChange": "      private File getGeneratedFile()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Unable to determine generated class\", e );", "+            throw new TaskException( \"Unable to determine generated class\", e );", "-            throw new BuildException( \"Unable to determine generated class\" );", "+            throw new TaskException( \"Unable to determine generated class\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7715937e805a91e0f1871fc91d9f6b33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected void checkConfiguration()", "signatureAfterChange": "      protected void checkConfiguration()", "diff": ["-            throw new BuildException( \"no filesets specified\" );", "+            throw new TaskException( \"no filesets specified\" );", "-             || destDir != null )", "+            || destDir != null )", "-                throw new BuildException( \"no mapper specified\" );", "+                throw new TaskException( \"no mapper specified\" );", "-                throw new BuildException( \"no dest attribute specified\" );", "+                throw new TaskException( \"no dest attribute specified\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824206fdfbed5679fcbb2be5f72acc78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/ConditionTask.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must not nest more than one condition into <condition>\" );", "+            throw new TaskException( \"You must not nest more than one condition into <condition>\" );", "-            throw new BuildException( \"You must nest a condition into <condition>\" );", "+            throw new TaskException( \"You must nest a condition into <condition>\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82ed36c63f8c3ed95dedfe81167234eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJToolsServlet.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void doGet( HttpServletRequest req, HttpServletResponse res )         throws ServletException, IOException", "signatureAfterChange": "     public void doGet( HttpServletRequest req, HttpServletResponse res )         throws ServletException, IOException", "diff": ["-        catch( BuildException e )", "+        catch( TaskException e )", "-                if( !( e instanceof BuildException ) )", "+                if( !( e instanceof TaskException ) )", "-                         + \":\\n\" + trace, VAJUtil.MSG_ERR );", "+                              + \":\\n\" + trace, VAJUtil.MSG_ERR );", "-                if( !( e instanceof BuildException ) )", "+                if( !( e instanceof TaskException ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f3fc232f6204a1c93fef9ab5be2bbf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJRemoteUtil.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void sendRequest( String request )", "signatureAfterChange": "     private void sendRequest( String request )", "diff": ["-                ( HttpURLConnection )requestUrl.openConnection();", "+                (HttpURLConnection)requestUrl.openConnection();", "-                throw new BuildException( \"Couldn't execute \" + request );", "+                throw new TaskException( \"Couldn't execute \" + request );", "-            throw new BuildException( \"Couldn't execute \" + request );", "+            throw new TaskException( \"Couldn't execute \" + request );", "-            throw new BuildException( \"VAJ tool request failed\" );", "+            throw new TaskException( \"VAJ tool request failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85cd587bb11caae8c37fd18e2027a423", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "          public void restoreSystem()             throws BuildException", "signatureAfterChange": "          public void restoreSystem()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( \"Unbalanced nesting of SysProperties\" );", "+                throw new TaskException( \"Unbalanced nesting of SysProperties\" );", "-                throw new BuildException( \"Cannot modify system properties\", e );", "+                throw new TaskException( \"Cannot modify system properties\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b579c715a6925c0e3f78ffa39fa6617", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovMerge.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"JProbe Coverage Merging failed (\" + exitValue + \")\" );", "+                throw new TaskException( \"JProbe Coverage Merging failed (\" + exitValue + \")\" );", "-            throw new BuildException( \"Failed to run JProbe Coverage Merge: \" + e );", "+            throw new TaskException( \"Failed to run JProbe Coverage Merge: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbd46d8e253ee483c1bde96660fda18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void transformFile()         throws BuildException", "signatureAfterChange": "     protected void transformFile()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Error reading temporary file: \" + tmpFile, e );", "+            throw new TaskException( \"Error reading temporary file: \" + tmpFile, e );", "-            throw new BuildException( \"Error creating output file: \" + outFile, e );", "+            throw new TaskException( \"Error creating output file: \" + outFile, e );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee798b932fec02bbe77d527d98e3af3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setFileLastModified( File file, long time )         throws BuildException", "signatureAfterChange": "     public void setFileLastModified( File file, long time )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        Long[] times = new Long[1];", "+        Long[] times = new Long[ 1 ];", "-            times[0] = new Long( System.currentTimeMillis() );", "+            times[ 0 ] = new Long( System.currentTimeMillis() );", "-            times[0] = new Long( time );", "+            times[ 0 ] = new Long( time );", "-            throw new BuildException( \"Exception setting the modification time \"", "-                 + \"of \" + file, nested );", "+            throw new TaskException( \"Exception setting the modification time \"", "+                                     + \"of \" + file, nested );", "-            throw new BuildException( \"Exception setting the modification time \"", "-                 + \"of \" + file, other );", "+            throw new TaskException( \"Exception setting the modification time \"", "+                                     + \"of \" + file, other );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc5a0ef8ba937afdaf49412dc76df76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws BuildException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "+            throw new TaskException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "-            fileUtils.getParentFile( src ) );", "+                                              fileUtils.getParentFile( src ) );", "-                 : new InputStreamReader( new FileInputStream( src ), encoding );", "+                : new InputStreamReader( new FileInputStream( src ), encoding );", "-                 : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "-            int fileLengthInBytes = ( int )( src.length() );", "+            int fileLengthInBytes = (int)( src.length() );", "-                tmpBuf.append( ( char )readChar );", "+                tmpBuf.append( (char)readChar );", "-            throw new BuildException( \"IOException in \" + src + \" - \" +", "-                ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "+            throw new TaskException( \"IOException in \" + src + \" - \" +", "+                                     ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9013669e0f24f1ca0e11e9832f86def5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"At least one fileset is required!\" );", "+            throw new TaskException( \"At least one fileset is required!\" );", "-            throw new BuildException( \"The VisualAge for Java Project name is required!\" );", "+            throw new TaskException( \"The VisualAge for Java Project name is required!\" );", "-        for( Enumeration e = filesets.elements(); e.hasMoreElements();  )", "+        for( Enumeration e = filesets.elements(); e.hasMoreElements(); )", "-            importFileset( ( FileSet )e.nextElement() );", "+            importFileset( (FileSet)e.nextElement() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "975f27756893be91c3eb59b0cd44d3c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void execute0( ExecuteStreamHandler handler )         throws BuildException", "signatureAfterChange": "     protected void execute0( ExecuteStreamHandler handler )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Metamata task failed.\" );", "+                throw new TaskException( \"Metamata task failed.\" );", "-            throw new BuildException( \"Failed to launch Metamata task: \" + e );", "+            throw new TaskException( \"Failed to launch Metamata task: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97cef25a49f4b6f2950cc593f8e3a383", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static void runCommand( Task task, String[] cmdline )         throws BuildException", "signatureAfterChange": "     public static void runCommand( Task task, String[] cmdline )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( cmdline[ 0 ] + \" failed with return code \" + retval );", "+                throw new TaskException( cmdline[ 0 ] + \" failed with return code \" + retval );", "-            throw new BuildException( \"Could not launch \" + cmdline[ 0 ] + \": \" + exc );", "+            throw new TaskException( \"Could not launch \" + cmdline[ 0 ] + \": \" + exc );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9899bc0731a1daa3584a6b79535396b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private static void addRecipients( MimeMessage msg,                                        Message.RecipientType recipType,                                        String addrUserName,                                        String addrList                                         )         throws MessagingException, BuildException", "signatureAfterChange": "     private static void addRecipients( MimeMessage msg,                                        Message.RecipientType recipType,                                        String addrUserName,                                        String addrList                                        )         throws MessagingException, TaskException", "diff": ["-                                        )", "-        throws MessagingException, BuildException", "+                                       )", "+        throws MessagingException, TaskException", "-                throw new BuildException( \"Empty \" + addrUserName + \" recipients list was specified\" );", "+                throw new TaskException( \"Empty \" + addrUserName + \" recipients list was specified\" );", "-            throw new BuildException( \"Invalid \" + addrUserName + \" recipient list\" );", "+            throw new TaskException( \"Invalid \" + addrUserName + \" recipient list\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98e0f8bf9f9eb08b520ecc75e7a710d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Input.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Failed to read input from Console.\", e );", "+                throw new TaskException( \"Failed to read input from Console.\", e );", "-                throw new BuildException( \"Invalid input please reenter.\" );", "+                throw new TaskException( \"Invalid input please reenter.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c72ab813e3d8fcc5f28b361ae0addd5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected Main( String[] args )         throws BuildException", "signatureAfterChange": "      protected Main( String[] args )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Build failed\" );", "+            throw new TaskException( \"Build failed\" );", "-            throw new BuildException( \"Build failed\" );", "+            throw new TaskException( \"Build failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e8fecd247ee88c138c95a2d4cda75bf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/dotnet/NetCommand.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void runCommand()         throws BuildException", "signatureAfterChange": "     public void runCommand()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                    throw new BuildException( _title + \" returned: \" + err );", "+                    throw new TaskException( _title + \" returned: \" + err );", "-            throw new BuildException( _title + \" failed: \" + e, e );", "+            throw new TaskException( _title + \" failed: \" + e, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f89d1f0e5fd39fb3e8f3d2ae6f556d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public int executeJava()         throws BuildException", "signatureAfterChange": "     public int executeJava()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Classname must not be null.\" );", "+            throw new TaskException( \"Classname must not be null.\" );", "-            throw new BuildException( \"Cannot execute a jar in non-forked mode. Please set fork='true'. \" );", "+            throw new TaskException( \"Cannot execute a jar in non-forked mode. Please set fork='true'. \" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27f6098b95acb72f3e2144deca11bd0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"At least one fileset is required!\" );", "+            throw new TaskException( \"At least one fileset is required!\" );", "-            throw new BuildException( \"The VisualAge for Java Project name is required!\" );", "+            throw new TaskException( \"The VisualAge for Java Project name is required!\" );", "-        for( Enumeration e = filesets.elements(); e.hasMoreElements();  )", "+        for( Enumeration e = filesets.elements(); e.hasMoreElements(); )", "-            importFileset( ( FileSet )e.nextElement() );", "+            importFileset( (FileSet)e.nextElement() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ae5f9d7878c8d90e8cbc1489d8a6fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6965ccf047eefa089f607042b32214f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Exit.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( message );", "+                throw new TaskException( message );", "-                throw new BuildException( \"No message\" );", "+                throw new TaskException( \"No message\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a696ddf286b122dcc795b31c3cb241b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private SAXParser getParser()         throws BuildException", "signatureAfterChange": "     private SAXParser getParser()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg, e );", "+            throw new TaskException( msg, e );", "-            throw new BuildException( msg, e );", "+            throw new TaskException( msg, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b022f5dfbb358ee917f4151299f0e9ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void scan()         throws BuildException", "signatureAfterChange": "     private void scan()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                File srcFile = new File( srcDir, files[i] );", "-                if( files[i].endsWith( \".java\" ) )", "+                File srcFile = new File( srcDir, files[ i ] );", "+                if( files[ i ].endsWith( \".java\" ) )", "-                    File classFile = new File( buildDir, files[i].substring( 0, files[i].indexOf( \".java\" ) ) + \".class\" );", "+                    File classFile = new File( buildDir, files[ i ].substring( 0, files[ i ].indexOf( \".java\" ) ) + \".class\" );", "-                            files[i], Project.MSG_WARN );", "+                             files[ i ], Project.MSG_WARN );", "-            throw new BuildException( \"Could not create target file:\" + e.getMessage() );", "+            throw new TaskException( \"Could not create target file:\" + e.getMessage() );", "-                        File srcFile = new File( srcDir, files[i] );", "-                        if( files[i].endsWith( \".class\" ) )", "+                        File srcFile = new File( srcDir, files[ i ] );", "+                        if( files[ i ].endsWith( \".class\" ) )", "-            throw new BuildException( \"Got an interesting exception:\" + t.getMessage() );", "+            throw new TaskException( \"Got an interesting exception:\" + t.getMessage() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b378dd27432b89a4776cb0bf046bcd3c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void scan()         throws BuildException", "signatureAfterChange": "     private void scan()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                File srcFile = new File( srcDir, files[i] );", "-                if( files[i].endsWith( \".java\" ) )", "+                File srcFile = new File( srcDir, files[ i ] );", "+                if( files[ i ].endsWith( \".java\" ) )", "-                    File classFile = new File( buildDir, files[i].substring( 0, files[i].indexOf( \".java\" ) ) + \".class\" );", "+                    File classFile = new File( buildDir, files[ i ].substring( 0, files[ i ].indexOf( \".java\" ) ) + \".class\" );", "-                            files[i], Project.MSG_WARN );", "+                             files[ i ], Project.MSG_WARN );", "-            throw new BuildException( \"Could not create target file:\" + e.getMessage() );", "+            throw new TaskException( \"Could not create target file:\" + e.getMessage() );", "-                        File srcFile = new File( srcDir, files[i] );", "-                        if( files[i].endsWith( \".class\" ) )", "+                        File srcFile = new File( srcDir, files[ i ] );", "+                        if( files[ i ].endsWith( \".class\" ) )", "-            throw new BuildException( \"Got an interesting exception:\" + t.getMessage() );", "+            throw new TaskException( \"Got an interesting exception:\" + t.getMessage() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3b9381fefe1956fd348a5767f12b3f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKIN.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cc4db594315307e9361a9f2a60b4bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setFileLastModified( File file, long time )         throws BuildException", "signatureAfterChange": "     public void setFileLastModified( File file, long time )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        Long[] times = new Long[1];", "+        Long[] times = new Long[ 1 ];", "-            times[0] = new Long( System.currentTimeMillis() );", "+            times[ 0 ] = new Long( System.currentTimeMillis() );", "-            times[0] = new Long( time );", "+            times[ 0 ] = new Long( time );", "-            throw new BuildException( \"Exception setting the modification time \"", "-                 + \"of \" + file, nested );", "+            throw new TaskException( \"Exception setting the modification time \"", "+                                     + \"of \" + file, nested );", "-            throw new BuildException( \"Exception setting the modification time \"", "-                 + \"of \" + file, other );", "+            throw new TaskException( \"Exception setting the modification time \"", "+                                     + \"of \" + file, other );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62fa345ce2b30bd0d4cfb9b5fac3d47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/condition/Not.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean eval()         throws BuildException", "signatureAfterChange": "      public boolean eval()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must not nest more than one condition into <not>\" );", "+            throw new TaskException( \"You must not nest more than one condition into <not>\" );", "-            throw new BuildException( \"You must nest a condition into <not>\" );", "+            throw new TaskException( \"You must nest a condition into <not>\" );", "-        return !( ( Condition )getConditions().nextElement() ).eval();", "+        return !( (Condition)getConditions().nextElement() ).eval();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b803d3934dc36274db59dd94347b6990", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void addFiles( FileScanner scanner, ZipOutputStream zOut,                              String prefix, String fullpath )         throws IOException", "signatureAfterChange": "     protected void addFiles( FileScanner scanner, ZipOutputStream zOut,                              String prefix, String fullpath )         throws IOException", "diff": ["-            throw new BuildException( \"Both prefix and fullpath attributes may not be set on the same fileset.\" );", "+            throw new TaskException( \"Both prefix and fullpath attributes may not be set on the same fileset.\" );", "-            throw new BuildException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "+            throw new TaskException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "-            if( \"\".equals( dirs[i] ) )", "+            if( \"\".equals( dirs[ i ] ) )", "-            String name = dirs[i].replace( File.separatorChar, '/' );", "+            String name = dirs[ i ].replace( File.separatorChar, '/' );", "-            throw new BuildException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "+            throw new TaskException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "-            File f = new File( thisBaseDir, files[i] );", "+            File f = new File( thisBaseDir, files[ i ] );", "-                String name = files[i].replace( File.separatorChar, '/' );", "+                String name = files[ i ].replace( File.separatorChar, '/' );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc940ed902af41ff076c00b1dd71d272", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/BUnzip2.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void extract()", "signatureAfterChange": "      protected void extract()", "diff": ["-                    throw new BuildException( \"Invalid bz2 file.\" );", "+                    throw new TaskException( \"Invalid bz2 file.\" );", "-                    throw new BuildException( \"Invalid bz2 file.\" );", "+                    throw new TaskException( \"Invalid bz2 file.\" );", "-                byte[] buffer = new byte[8 * 1024];", "+                byte[] buffer = new byte[ 8 * 1024 ];", "-                }while ( count != -1 );", "+                } while( count != -1 );", "-                throw new BuildException( msg, ioe );", "+                throw new TaskException( msg, ioe );", "-                    {}", "+                    {", "+                    }", "-                    {}", "+                    {", "+                    }", "-                    {}", "+                    {", "+                    }", "-                    {}", "+                    {", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdbd3620befde7f6728b207580b1167e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"You must specify value, location or refid with the name attribute\" );", "+                throw new TaskException( \"You must specify value, location or refid with the name attribute\" );", "-                throw new BuildException( \"You must specify file, resource or environment when not using the name attribute\" );", "+                throw new TaskException( \"You must specify file, resource or environment when not using the name attribute\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be0d53cb8da5f952dea366ba4d19f7d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/ConditionTask.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must not nest more than one condition into <condition>\" );", "+            throw new TaskException( \"You must not nest more than one condition into <condition>\" );", "-            throw new BuildException( \"You must nest a condition into <condition>\" );", "+            throw new TaskException( \"You must nest a condition into <condition>\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bef1ee0f07667a2fd1657734d593f0b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void doMail()         throws MessagingException, AddressException, BuildException", "signatureAfterChange": "     public void doMail()         throws MessagingException, AddressException, TaskException", "diff": ["-        throws MessagingException, AddressException, BuildException", "+        throws MessagingException, AddressException, TaskException", "-            int size = ( int )messageFile.length();", "-            byte data[] = new byte[size];", "+            int size = (int)messageFile.length();", "+            byte data[] = new byte[ size ];", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );", "-            FileSet fs = ( FileSet )filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.elementAt( i );", "-                    File file = new File( baseDir, dsfiles[j] );", "+                    File file = new File( baseDir, dsfiles[ j ] );", "-                        throw new BuildException( \"File \\\"\" + file.getAbsolutePath()", "-                             + \"\\\" does not exist or is not readable.\" );", "+                        throw new TaskException( \"File \\\"\" + file.getAbsolutePath()", "+                                                 + \"\\\" does not exist or is not readable.\" );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9d13c74138a3ea7db4997732dee255", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/WLStop.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"weblogic username and password must both be set\" );", "+            throw new TaskException( \"weblogic username and password must both be set\" );", "-            throw new BuildException( \"The url of the weblogic server must be provided.\" );", "+            throw new TaskException( \"The url of the weblogic server must be provided.\" );", "-        Java weblogicAdmin = ( Java )project.createTask( \"java\" );", "+        Java weblogicAdmin = (Java)project.createTask( \"java\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37ad289314a0dea977e1274d1736a46", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"JProbe Coverage failed (\" + exitValue + \")\" );", "+                throw new TaskException( \"JProbe Coverage failed (\" + exitValue + \")\" );", "-            throw new BuildException( \"Failed to execute JProbe Coverage.\", e );", "+            throw new TaskException( \"Failed to execute JProbe Coverage.\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c533b40e467491a2abbcf5f1b2e0a965", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/Reference.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Object getReferencedObject( Project project )         throws BuildException", "signatureAfterChange": "      public Object getReferencedObject( Project project )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No reference specified\" );", "+            throw new TaskException( \"No reference specified\" );", "-            throw new BuildException( \"Reference \" + refid + \" not found.\" );", "+            throw new TaskException( \"Reference \" + refid + \" not found.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c637e3d7f62bfc38179ec1becc62d3c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/WLStop.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"weblogic username and password must both be set\" );", "+            throw new TaskException( \"weblogic username and password must both be set\" );", "-            throw new BuildException( \"The url of the weblogic server must be provided.\" );", "+            throw new TaskException( \"The url of the weblogic server must be provided.\" );", "-        Java weblogicAdmin = ( Java )project.createTask( \"java\" );", "+        Java weblogicAdmin = (Java)project.createTask( \"java\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fc0de7d8d689f3982bc38b83f2d89a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void addFiles( FileScanner scanner, ZipOutputStream zOut,                              String prefix, String fullpath )         throws IOException", "signatureAfterChange": "     protected void addFiles( FileScanner scanner, ZipOutputStream zOut,                              String prefix, String fullpath )         throws IOException", "diff": ["-            throw new BuildException( \"Both prefix and fullpath attributes may not be set on the same fileset.\" );", "+            throw new TaskException( \"Both prefix and fullpath attributes may not be set on the same fileset.\" );", "-            throw new BuildException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "+            throw new TaskException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "-            if( \"\".equals( dirs[i] ) )", "+            if( \"\".equals( dirs[ i ] ) )", "-            String name = dirs[i].replace( File.separatorChar, '/' );", "+            String name = dirs[ i ].replace( File.separatorChar, '/' );", "-            throw new BuildException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "+            throw new TaskException( \"fullpath attribute may only be specified for filesets that specify a single file.\" );", "-            File f = new File( thisBaseDir, files[i] );", "+            File f = new File( thisBaseDir, files[ i ] );", "-                String name = files[i].replace( File.separatorChar, '/' );", "+                String name = files[ i ].replace( File.separatorChar, '/' );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7115323349ae2cc77fa277dae4a3a03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void execP4Command( String command, P4Handler handler )         throws BuildException", "signatureAfterChange": "     protected void execP4Command( String command, P4Handler handler )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                cmdl += cmdline[i] + \" \";", "+                cmdl += cmdline[ i ] + \" \";", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );", "-                {}", "+                {", "+                }", "-", "-            throw new BuildException( \"Problem exec'ing P4 command: \" + e.getMessage() );", "+            throw new TaskException( \"Problem exec'ing P4 command: \" + e.getMessage() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83ea624acbb664acc842cbf19c89d5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/WaitFor.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"You must not nest more than one condition into <waitfor>\" );", "+            throw new TaskException( \"You must not nest more than one condition into <waitfor>\" );", "-            throw new BuildException( \"You must nest a condition into <waitfor>\" );", "+            throw new TaskException( \"You must nest a condition into <waitfor>\" );", "-        Condition c = ( Condition )getConditions().nextElement();", "+        Condition c = (Condition)getConditions().nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf226a38106fad950c3033607f271489", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovReport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                cmdl.createArgument().setValue( params[i] );", "+                cmdl.createArgument().setValue( params[ i ] );", "-                throw new BuildException( \"JProbe Coverage Report failed (\" + exitValue + \")\" );", "+                throw new TaskException( \"JProbe Coverage Report failed (\" + exitValue + \")\" );", "-            throw new BuildException( \"Failed to execute JProbe Coverage Report.\", e );", "+            throw new TaskException( \"Failed to execute JProbe Coverage Report.\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1481942a4d2d1312102f2d3bafb5093", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/GenerateKey.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public DistinguishedName createDname()         throws BuildException", "signatureAfterChange": "      public DistinguishedName createDname()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"DName sub-element can only be specified once.\" );", "+            throw new TaskException( \"DName sub-element can only be specified once.\" );", "-            throw new BuildException( \"It is not possible to specify dname both \" +", "-                \"as attribute and element.\" );", "+            throw new TaskException( \"It is not possible to specify dname both \" +", "+                                     \"as attribute and element.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24a27a8a09d84d104181b76102016d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"The dest attribute must be set.\" );", "+            throw new TaskException( \"The dest attribute must be set.\" );", "-            throw new BuildException( \"The ext attribute or a mapper must be set if\"", "-                 + \" src and dest dirs are the same.\" );", "+            throw new TaskException( \"The ext attribute or a mapper must be set if\"", "+                                     + \" src and dest dirs are the same.\" );", "-             + ( count != 1 ? \"s\" : \"\" ) + \" from \";", "+            + ( count != 1 ? \"s\" : \"\" ) + \" from \";", "-            convert( files[i], m.mapFileName( files[i] )[0] );", "+            convert( files[ i ], m.mapFileName( files[ i ] )[ 0 ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2bb458b27e7ab393f70c8ba4372f90d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void execute0( ExecuteStreamHandler handler )         throws BuildException", "signatureAfterChange": "     protected void execute0( ExecuteStreamHandler handler )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Metamata task failed.\" );", "+                throw new TaskException( \"Metamata task failed.\" );", "-            throw new BuildException( \"Failed to launch Metamata task: \" + e );", "+            throw new TaskException( \"Failed to launch Metamata task: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d319047222472e6955c31bce9fa84ee4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Properties getProperties( File propertyFile )         throws BuildException", "signatureAfterChange": "      public Properties getProperties( File propertyFile )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( message );", "+            throw new TaskException( message );", "-            throw new BuildException( message );", "+            throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d44698176135536b552c51d8c34b0f6b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public int executeAsForked( CommandlineJava commandline, ExecuteWatchdog watchdog )         throws BuildException", "signatureAfterChange": "     public int executeAsForked( CommandlineJava commandline, ExecuteWatchdog watchdog )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"\\\"\" + f.getPath() + \"\\\" does not represent a valid directory. JDepend would fail.\" );", "+                throw new TaskException( \"\\\"\" + f.getPath() + \"\\\" does not represent a valid directory. JDepend would fail.\" );", "-            throw new BuildException( \"Process fork failed.\", e );", "+            throw new TaskException( \"Process fork failed.\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98a49235ea6a234b74fa2025bb52722", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"You must specify value, location or refid with the name attribute\" );", "+                throw new TaskException( \"You must specify value, location or refid with the name attribute\" );", "-                throw new BuildException( \"You must specify file, resource or environment when not using the name attribute\" );", "+                throw new TaskException( \"You must specify file, resource or environment when not using the name attribute\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b46ab3e80fbe601d57c2023f810618", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void getVersionDateCommand( Commandline cmd )         throws BuildException", "signatureAfterChange": "     private void getVersionDateCommand( Commandline cmd )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca7cb4dbf012f91fe698a92ffdbcb74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static void runCommand( Task task, String[] cmdline )         throws BuildException", "signatureAfterChange": "     public static void runCommand( Task task, String[] cmdline )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( cmdline[ 0 ] + \" failed with return code \" + retval );", "+                throw new TaskException( cmdline[ 0 ] + \" failed with return code \" + retval );", "-            throw new BuildException( \"Could not launch \" + cmdline[ 0 ] + \": \" + exc );", "+            throw new TaskException( \"Could not launch \" + cmdline[ 0 ] + \": \" + exc );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddcea3e8bf3d979e9ce6a6635ad7f07e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ccm/CCMCreateTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg);", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de92ea2a0f881c0b464498ee67f123ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/condition/Http.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public boolean eval()         throws BuildException", "signatureAfterChange": "      public boolean eval()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No url specified in HTTP task\" );", "+            throw new TaskException( \"No url specified in HTTP task\" );", "-                    HttpURLConnection http = ( HttpURLConnection )conn;", "+                    HttpURLConnection http = (HttpURLConnection)conn;", "-            throw new BuildException( \"Badly formed URL: \" + spec, e );", "+            throw new TaskException( \"Badly formed URL: \" + spec, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfde232b165a98def9d0156704c19edc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void _execute( ExecuteStreamHandler handler )         throws BuildException", "signatureAfterChange": "     protected void _execute( ExecuteStreamHandler handler )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Metamata task failed.\" );", "+                throw new TaskException( \"Metamata task failed.\" );", "-            throw new BuildException( \"Failed to launch Metamata task: \" + e );", "+            throw new TaskException( \"Failed to launch Metamata task: \" + e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1de7974afa4ee2a41c00e27cead2369", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Base.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void execP4Command( String command, P4Handler handler )         throws BuildException", "signatureAfterChange": "     protected void execP4Command( String command, P4Handler handler )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                cmdl += cmdline[i] + \" \";", "+                cmdl += cmdline[ i ] + \" \";", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );", "-                {}", "+                {", "+                }", "-", "-            throw new BuildException( \"Problem exec'ing P4 command: \" + e.getMessage() );", "+            throw new TaskException( \"Problem exec'ing P4 command: \" + e.getMessage() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e422c9237f9d8dd870708f96c7c6f621", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Input.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"Failed to read input from Console.\", e );", "+                throw new TaskException( \"Failed to read input from Console.\", e );", "-                throw new BuildException( \"Invalid input please reenter.\" );", "+                throw new TaskException( \"Invalid input please reenter.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9415f596de8e6f4813be3cedf105f02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"JProbe Coverage failed (\" + exitValue + \")\" );", "+                throw new TaskException( \"JProbe Coverage failed (\" + exitValue + \")\" );", "-            throw new BuildException( \"Failed to execute JProbe Coverage.\", e );", "+            throw new TaskException( \"Failed to execute JProbe Coverage.\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea82828ec348ca2e80f2da682ab51a63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKIN.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eca3bd573301adab55591ba1006fb1ba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e58c1709f9c95c75ef80d122ba55a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"weblogic home must be set\" );", "+            throw new TaskException( \"weblogic home must be set\" );", "-            throw new BuildException( \"weblogic home directory \" + weblogicSystemHome.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"weblogic home directory \" + weblogicSystemHome.getPath() +", "+                                     \" is not valid\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57119a6e824641cdefd99dd0f913bb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSHISTORY.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );", "-            throw new BuildException( msg );", "+            throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7db23ac11561ea244d575d310e21bb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/condition/Socket.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public boolean eval()         throws BuildException", "signatureAfterChange": "      public boolean eval()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No server specified in Socket task\" );", "+            throw new TaskException( \"No server specified in Socket task\" );", "-            throw new BuildException( \"No port specified in Socket task\" );", "+            throw new TaskException( \"No port specified in Socket task\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f02ad1f38339dfbc2b13c07eb2e256", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void doMail()         throws MessagingException, AddressException, BuildException", "signatureAfterChange": "     public void doMail()         throws MessagingException, AddressException, TaskException", "diff": ["-        throws MessagingException, AddressException, BuildException", "+        throws MessagingException, AddressException, TaskException", "-            int size = ( int )messageFile.length();", "-            byte data[] = new byte[size];", "+            int size = (int)messageFile.length();", "+            byte data[] = new byte[ size ];", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );", "-            FileSet fs = ( FileSet )filesets.elementAt( i );", "+            FileSet fs = (FileSet)filesets.elementAt( i );", "-                    File file = new File( baseDir, dsfiles[j] );", "+                    File file = new File( baseDir, dsfiles[ j ] );", "-                        throw new BuildException( \"File \\\"\" + file.getAbsolutePath()", "-                             + \"\\\" does not exist or is not readable.\" );", "+                        throw new TaskException( \"File \\\"\" + file.getAbsolutePath()", "+                                                 + \"\\\" does not exist or is not readable.\" );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9996cd475f2b6de42184259d5bd5692", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/TaskAdapter.java", "commitBeforeChange": "a57f963f8bac3bd2d5b7693c17b16edf68b9f6ca", "commitAfterChange": "956c3e08437f7084ddf560cead50305c5c104ddd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Error\", ex );", "+            throw new TaskException( \"Error\", ex );", "-            throw new BuildException( \"Error\", ex );", "+            throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b89e319f2489ad0eac6eda886e64ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/condition/Http.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public boolean eval()         throws BuildException", "signatureAfterChange": "      public boolean eval()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No url specified in HTTP task\" );", "+            throw new TaskException( \"No url specified in HTTP task\" );", "-                    HttpURLConnection http = ( HttpURLConnection )conn;", "+                    HttpURLConnection http = (HttpURLConnection)conn;", "-            throw new BuildException( \"Badly formed URL: \" + spec, e );", "+            throw new TaskException( \"Badly formed URL: \" + spec, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa7321ee2b6f9e73e25a573570f61823", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/AbstractMetamataTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'metamatahome' must point to Metamata home directory.\" );", "+            throw new TaskException( \"'metamatahome' must point to Metamata home directory.\" );", "-            throw new BuildException( jar + \" does not exist. Check your metamata installation.\" );", "+            throw new TaskException( jar + \" does not exist. Check your metamata installation.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb36cafb5b562198d490d47b4e6b34ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );", "-                throw new BuildException( msg );", "+                throw new TaskException( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc848f9ff6464b2f60af64ec1d5b2cb3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/BUnzip2.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void extract()", "signatureAfterChange": "      protected void extract()", "diff": ["-                    throw new BuildException( \"Invalid bz2 file.\" );", "+                    throw new TaskException( \"Invalid bz2 file.\" );", "-                    throw new BuildException( \"Invalid bz2 file.\" );", "+                    throw new TaskException( \"Invalid bz2 file.\" );", "-                byte[] buffer = new byte[8 * 1024];", "+                byte[] buffer = new byte[ 8 * 1024 ];", "-                }while ( count != -1 );", "+                } while( count != -1 );", "-                throw new BuildException( msg, ioe );", "+                throw new TaskException( msg, ioe );", "-                    {}", "+                    {", "+                    }", "-                    {}", "+                    {", "+                    }", "-                    {}", "+                    {", "+                    }", "-                    {}", "+                    {", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6980795063e82fa2dd64fa7e9444d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public int executeAsForked( CommandlineJava commandline, ExecuteWatchdog watchdog )         throws BuildException", "signatureAfterChange": "     public int executeAsForked( CommandlineJava commandline, ExecuteWatchdog watchdog )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"\\\"\" + f.getPath() + \"\\\" does not represent a valid directory. JDepend would fail.\" );", "+                throw new TaskException( \"\\\"\" + f.getPath() + \"\\\" does not represent a valid directory. JDepend would fail.\" );", "-            throw new BuildException( \"Process fork failed.\", e );", "+            throw new TaskException( \"Process fork failed.\", e );"]}]}