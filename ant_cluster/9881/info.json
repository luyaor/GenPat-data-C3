{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1b829d3a61e7c19452da4e847d0ddb7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20af3c609ebff76941d7deb184473b7f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UpToDateTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "      @Before     public void setUp()", "diff": ["+", "+    @Before", "-        configureProject(\"src/etc/testcases/taskdefs/uptodate.xml\");", "+        buildRule.configureProject(\"src/etc/testcases/taskdefs/uptodate.xml\");", "+        buildRule.executeTarget(\"setUp\");", "+        File srcDir = buildRule.getProject().resolveFile(\"source\");", "+        assumeTrue(\"Could not change modification timestamp of source directory\",", "+                srcDir.setLastModified(srcDir.lastModified()", "+                - (3 * FileUtils.getFileUtils().getFileTimestampGranularity())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea46557ef330b794889e6a828001883", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void setUp()", "signatureAfterChange": "       @Before     public void setUp()", "diff": ["+", "+    @Before", "-        configureProject(\"src/etc/testcases/taskdefs/input.xml\");", "+        buildRule.configureProject(\"src/etc/testcases/taskdefs/input.xml\");", "-                 getProject().resolveFile(\"input.properties\")", "+                 buildRule.getProject().resolveFile(\"input.properties\")", "-        getProject().setInputHandler(new PropertyFileInputHandler());", "+        buildRule.getProject().setInputHandler(new PropertyFileInputHandler());", "+        originalStdIn = System.in;"]}]}