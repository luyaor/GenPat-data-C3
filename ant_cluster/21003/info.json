{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7329d42aec78e146b4864e10b813c905", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17edfa9b159f2e23f2c0cebaa3a837d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/AbstractComponentTest.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final ServiceManager getServiceManager() throws Exception", "signatureAfterChange": "     protected final ServiceManager getServiceManager() throws Exception", "diff": ["+            // Contextualise the components", "+            final Context context = new DefaultContext( getParameters() );", "+            for( Iterator iterator = components.iterator(); iterator.hasNext(); )", "+            {", "+                Object obj = iterator.next();", "+                if( obj instanceof Contextualizable )", "+                {", "+                    final Contextualizable contextualizable = (Contextualizable)obj;", "+                    contextualizable.contextualize( context );", "+                }", "+            }", "+", "-                }", "-            }", "-", "-            // Parameterise the components", "-            final Parameters parameters = getParameters();", "-            for( Iterator iterator = components.iterator(); iterator.hasNext(); )", "-            {", "-                Object obj = iterator.next();", "-                if( obj instanceof Parameterizable )", "-                {", "-                    final Parameterizable parameterizable = (Parameterizable)obj;", "-                    parameterizable.parameterize( parameters );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2960580ac2dd58cd5ef3857b3bf3d25", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/AbstractComponentTest.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final ServiceManager getServiceManager() throws Exception", "signatureAfterChange": "     protected final ServiceManager getServiceManager() throws Exception", "diff": ["-            final DefaultClassLoaderManager classLoaderMgr = new DefaultClassLoaderManager();", "-            classLoaderMgr.setCommonClassLoader( getClass().getClassLoader() );", "-            m_serviceManager.put( ClassLoaderManager.ROLE, classLoaderMgr );", "-            components.add( classLoaderMgr );", "+            component = createComponent( ClassLoaderManager.ROLE, DefaultClassLoaderManager.class );", "+            m_serviceManager.put( ClassLoaderManager.ROLE, component );", "+            components.add( component );", "+            // Parameterise the components", "+            final Parameters parameters = getParameters();", "+            for( Iterator iterator = components.iterator(); iterator.hasNext(); )", "+            {", "+                Object obj = iterator.next();", "+                if( obj instanceof Parameterizable )", "+                {", "+                    final Parameterizable parameterizable = (Parameterizable)obj;", "+                    parameterizable.parameterize( parameters );", "+                }", "+            }", "+", "+            // Initialise the components", "+            for( Iterator iterator = components.iterator(); iterator.hasNext(); )", "+            {", "+                Object obj = iterator.next();", "+                if( obj instanceof Initializable )", "+                {", "+                    final Initializable initializable = (Initializable)obj;", "+                    initializable.initialize();", "+                }", "+            }", "+"]}]}