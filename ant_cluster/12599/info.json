{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b11fe695d26c9d767d6616f22480db7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a7cbe18264e287377c3d1cb3baca3af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void addBuildListeners(Project project)", "signatureAfterChange": "     protected void addBuildListeners(Project project)", "diff": ["-            try {", "-                BuildListener listener =", "-                    (BuildListener) Class.forName(className).newInstance();", "-                if (project != null) {", "-                    project.setProjectReference(listener);", "-                }", "-                project.addBuildListener(listener);", "-            } catch (Throwable exc) {", "-                throw new BuildException(\"Unable to instantiate listener \"", "-                    + className, exc);", "+            BuildListener listener =", "+                    (BuildListener) ClasspathUtils.newInstance(className,", "+                            Main.class.getClassLoader(), BuildListener.class);", "+            if (project != null) {", "+                project.setProjectReference(listener);", "+            project.addBuildListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e45412e3f1a0e3f85ae409a6faae1d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "abf343291206f3cab8b3436214cc0a88efefcb25", "commitAfterChange": "2bbb06868a89e9390959ec3dd4b3b8eca8a40b95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void send()", "signatureAfterChange": "   public void send()", "diff": ["+            if (SSL) {", "+                try {", "+                    java.security.Provider p=(java.security.Provider)Class.forName( \"com.sun.net.ssl.internal.ssl.Provider\").newInstance();", "+                    Security.addProvider(p);", "+                }", "+                catch (Exception e) {", "+                    throw new BuildException(\"could not instantiate ssl security provider, check that you have JSSE in your classpath\");", "+                }", "+                final String SSL_FACTORY = \"javax.net.ssl.SSLSocketFactory\";", "+                // SMTP provider", "+                props.put( \"mail.smtp.socketFactory.class\", SSL_FACTORY);", "+                props.put( \"mail.smtp.socketFactory.fallback\", \"false\");", "+            }", "-"]}]}