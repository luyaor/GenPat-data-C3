{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8790654e83f16791bf107daa45f3bddc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6388ba0bd87b9292a16c91eaf9888375", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ZipTest.java", "commitBeforeChange": "272a25274cfb99f47385de5a3ef4682e93c6fb88", "commitAfterChange": "85cd57c58e6ef426050ec21bc2e164e8e3c8fd4e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testZipgroupfileset() throws IOException", "signatureAfterChange": "      public void testZipgroupfileset() throws IOException", "diff": ["-        assert(zipFile.getEntry(\"ant.xml\") != null);", "-        assert(zipFile.getEntry(\"optional/jspc.xml\") != null);", "-        assert(zipFile.getEntry(\"zip/zipgroupfileset3.zip\") != null);", "+        assertTrue(zipFile.getEntry(\"ant.xml\") != null);", "+        assertTrue(zipFile.getEntry(\"optional/jspc.xml\") != null);", "+        assertTrue(zipFile.getEntry(\"zip/zipgroupfileset3.zip\") != null);", "-        assert(zipFile.getEntry(\"test6.mf\") == null);", "-        assert(zipFile.getEntry(\"test7.mf\") == null);", "+        assertTrue(zipFile.getEntry(\"test6.mf\") == null);", "+        assertTrue(zipFile.getEntry(\"test7.mf\") == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb3a9620eb2b2cb054c1d208f7351cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/SQLExecTest.java", "commitBeforeChange": "b01362cc8224cd25d58bc53b70dd6c99e144cec3", "commitAfterChange": "8d79b48a89063ba58b69cb3f73f3dea485b54d5f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testDriverCaching()", "signatureAfterChange": "     public void testDriverCaching()", "diff": ["-        assert(!SQLExec.getLoaderMap().containsKey(NULL_DRIVER));", "+        assertTrue(!SQLExec.getLoaderMap().containsKey(NULL_DRIVER));", "-            assert(e.getException().getMessage().indexOf(\"No suitable Driver\") != -1);", "+            assertTrue(e.getException().getMessage().indexOf(\"No suitable Driver\") != -1);", "-        assert(SQLExec.getLoaderMap().containsKey(NULL_DRIVER));", "+        assertTrue(SQLExec.getLoaderMap().containsKey(NULL_DRIVER));", "-        assert(sql.getLoaderMap().containsKey(NULL_DRIVER));", "+        assertTrue(sql.getLoaderMap().containsKey(NULL_DRIVER));", "-            assert(e.getException().getMessage().indexOf(\"No suitable Driver\") != -1);", "+            assertTrue(e.getException().getMessage().indexOf(\"No suitable Driver\") != -1);", "-        assert(sql.getLoaderMap().containsKey(NULL_DRIVER));", "+        assertTrue(sql.getLoaderMap().containsKey(NULL_DRIVER));"]}]}