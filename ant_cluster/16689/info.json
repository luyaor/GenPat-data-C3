{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5b33015eb7920244cd9deaf97c652e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ee5a26f56a3fcd5dd7e27dac963ca15", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "e9117208e20934276266169c6b434a102371883e", "commitAfterChange": "c30a74289ebfd6c0f714cb63bc952a6340b5fca6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["-        rootElement.setAttribute(\"tests\", \"\"+suite.runCount());", "-        rootElement.setAttribute(\"failures\", \"\"+suite.failureCount());", "-        rootElement.setAttribute(\"errors\", \"\"+suite.errorCount());", "-        rootElement.setAttribute(\"time\", ", "-                                 nf.format(suite.getRunTime()/1000.0)+\" sec\");", "+        rootElement.setAttribute(ATTR_TESTS, \"\"+suite.runCount());", "+        rootElement.setAttribute(ATTR_FAILURES, \"\"+suite.failureCount());", "+        rootElement.setAttribute(ATTR_ERRORS, \"\"+suite.errorCount());", "+        rootElement.setAttribute(ATTR_TIME,", "+                                 nf.format(suite.getRunTime()/1000.0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32dbd76237593919f291504446bece2c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/aut/vfs/test/AbstractWritableFileSystemTestCase.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testFileCreateMismatched() throws Exception", "signatureAfterChange": "     public void testFileCreateMismatched() throws Exception", "diff": ["-            assertTrue( false );", "+            fail();", "-            assertTrue( false );", "+            fail();", "-            assertTrue( false );", "+            fail();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52de7dc4357f15ed1a4d5b1877d4850f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "baf9ffa96f92a7f1cd91bd1c7e4bf4db5030c6d4", "commitAfterChange": "a914355da299130eb773b14adfd1cf51a19f9a52", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "diff": ["-                    byte[] buffer = new byte[8 * 1024];", "+                    byte[] buffer = new byte[BUFFER_SIZE];", "-                    byte[] buffer = new byte[8 * 1024];", "+                    byte[] buffer = new byte[BUFFER_SIZE];", "-            byte[] buffer = new byte[8 * 1024];", "+            byte[] buffer = new byte[BUFFER_SIZE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "686c81cfdd32ef43d6d6e743e45a21a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "0a1ffe3fcb9f845fa549e8beb277762d7633ab1c", "commitAfterChange": "fdf4bba1489d1a192a3675584e681638bd5af495", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["+", "-            Class c = Class.forName(\"sun.rmi.rmic.Main\");", "+            Class c = Class.forName(RMIC_CLASSNAME);", "-            throw new BuildException(\"Cannot use SUN rmic, as it is not \"", "-                                     + \"available.  A common solution is to \"", "-                                     + \"set the environment variable \"", "-                                     + \"JAVA_HOME or CLASSPATH.\",", "+            throw new BuildException(ERROR_NO_RMIC_ON_CLASSPATH,", "-                throw new BuildException(\"Error starting SUN rmic: \",", "+                throw new BuildException(ERROR_RMIC_FAILED,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c70107946bf737f4dac49672c20c9ae6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/WLRmic.java", "commitBeforeChange": "0a1ffe3fcb9f845fa549e8beb277762d7633ab1c", "commitAfterChange": "fdf4bba1489d1a192a3675584e681638bd5af495", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["-                c = Class.forName(\"weblogic.rmic\");", "+                c = Class.forName(WLRMIC_CLASSNAME);", "-                c = Class.forName(\"weblogic.rmic\", true, loader);", "+                c = Class.forName(WLRMIC_CLASSNAME, true, loader);", "-            throw new BuildException(\"Cannot use WebLogic rmic, as it is not \"", "-                                     + \"available.  A common solution is to \"", "-                                     + \"set the environment variable \"", "-                                     + \"CLASSPATH.\", getRmic().getLocation());", "+            throw new BuildException(ERROR_NO_WLRMIC_ON_CLASSPATH, getRmic().getLocation());", "-                throw new BuildException(\"Error starting WebLogic rmic: \", ex,", "+                throw new BuildException(ERROR_WLRMIC_FAILED, ex,"]}]}