{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d30191d4a2c267312f27066f25943f40", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562223124976f15872f473ab3d4801c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "1225a5a849faa66e73a1262180dd002332b162b0", "commitAfterChange": "90a6d8155086ee0d0a1911584a56eb7b33fb3d0f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private void doLink(String resource, String link) throws BuildException", "signatureAfterChange": "     private void doLink(String res, String lnk) throws BuildException", "diff": ["-", "-    private void doLink(String resource, String link) throws BuildException {", "-", "-        if (resource == null) {", "-            handleError(\"Must define the resource to symlink to!\");", "-            return;", "-        }", "-        if (link == null) {", "-            handleError(\"Must define the link name for symlink!\");", "-            return;", "-        }", "-        File linkfil = new File(link);", "-", "-        String[] cmd = new String[] {\"ln\", \"-s\", resource, link};", "-", "-        try {", "-            if (overwrite && linkfil.exists()) {", "+    private void doLink(String res, String lnk) throws BuildException {", "+        File linkfil = new File(lnk);", "+        if (overwrite && linkfil.exists()) {", "+            try {", "+            } catch (FileNotFoundException fnfe) {", "+                handleError(\"Symlink disappeared before it was deleted: \" + lnk);", "+            } catch (IOException ioe) {", "+                handleError(\"Unable to overwrite preexisting link: \" + lnk);", "-        } catch (FileNotFoundException fnfe) {", "-            handleError(\"Symlink disappeared before it was deleted: \" + link);", "-        } catch (IOException ioe) {", "-            handleError(\"Unable to overwrite preexisting link: \" + link);", "-        log(cmd[0] + \" \" + cmd[1] + \" \" + cmd[2] + \" \" + cmd[3]);", "+        String[] cmd = new String[] {\"ln\", \"-s\", res, lnk};", "+        log(Commandline.toString(cmd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4d0dc4d2ce4da9ab5368f3339d88c4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exec.java", "commitBeforeChange": "46534f2b3d9b703e570c263eaeabf4f874513abf", "commitAfterChange": "b139901cab374b10e2f73a58769fb4ef1c2837bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void run(String command) throws BuildException", "signatureAfterChange": "      protected void run(String command) throws BuildException", "diff": ["-            ", "-            // get process response", "-            BufferedReader din = new BufferedReader(new InputStreamReader(proc.getInputStream()));", "-            // if \"out\" attribute is present, redirect to it", "-            PrintWriter fos = null;", "-            if (out != null)  {", "-                fos = new PrintWriter(new FileWriter(out));", "+            PrintWriter fos=null;", "+            if( out!=null )  {", "+                fos=new PrintWriter( new FileWriter( out ) );", "+            pipeOutput(proc.getInputStream(), \"exec\", fos);", "+            pipeOutput(proc.getErrorStream(), \"error\", fos);", "+            if (null != fos)", "+        \tfos.close();", "-", "-            // pipe the process output", "-            String line;", "-            while((line = din.readLine()) != null) {", "-                if (fos == null) {", "-                    project.log(line, \"exec\", Project.MSG_INFO);", "-                } else {", "-                    fos.println(line);", "-                }", "-            }", "-", "-            // wait until the process is finished"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e954eb61a6368a76dda13e87c962c26a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "3267eeb3160fa391d6f568303aaab98a8d99002f", "commitAfterChange": "5184f14831e2987c93d2cbbf5da2318ca5c00241", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler)             throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "diff": ["-    public void parse(Project project, Object source, RootHandler handler)", "-            throws BuildException {", "+    public void parse(Project project, Object source, RootHandler handler) throws BuildException {", "-", "-            } else if (t == null) {", "-                t = exc;", "-", "-            throw new BuildException(exc.getMessage(), t, location);", "+            throw new BuildException(exc.getMessage(), t == null ? exc : t, location);", "-            } else if (t == null) {", "-                t = exc;", "-            throw new BuildException(exc.getMessage(), t);", "+            throw new BuildException(exc.getMessage(), t == null ? exc : t);", "-                                       + buildFileName + \" is invalid.\",", "-                                       exc);", "+                                       + buildFileName + \" is invalid.\", exc);", "-                                     + buildFileName + \": \" + exc.getMessage(),", "-                                     exc);", "+                                     + buildFileName + \": \" + exc.getMessage(), exc);"]}]}