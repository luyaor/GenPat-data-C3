{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa84495885381ca1b2998a90462cf575", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27f63574627c3b80d13ed8033d4dad8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarOutputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void closeEntry()         throws IOException", "signatureAfterChange": "     public void closeEntry()         throws IOException", "diff": ["-        if( this.assemLen > 0 )", "+        if( m_assemLen > 0 )", "-            for( int i = this.assemLen; i < this.assemBuf.length; ++i )", "+            for( int i = m_assemLen; i < m_assemBuf.length; ++i )", "-                this.assemBuf[ i ] = 0;", "+                m_assemBuf[ i ] = 0;", "-            this.buffer.writeRecord( this.assemBuf );", "+            m_buffer.writeRecord( m_assemBuf );", "-            this.currBytes += this.assemLen;", "-            this.assemLen = 0;", "+            m_currBytes += m_assemLen;", "+            m_assemLen = 0;", "-        if( this.currBytes < this.currSize )", "+        if( m_currBytes < m_currSize )", "-            throw new IOException( \"entry closed at '\" + this.currBytes", "-                                   + \"' before the '\" + this.currSize", "-                                   + \"' bytes specified in the header were written\" );", "+            final String message = \"entry closed at '\" + m_currBytes +", "+                \"' before the '\" + m_currSize +", "+                \"' bytes specified in the header were written\";", "+            throw new IOException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c36476b697b19ac26eaca59c7f1569c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "0bde74aa3647adabb6ab7ffdf25dcf5ac438b971", "commitAfterChange": "23bbf085727756cfbad92aaa345e10c7370d3486", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public void writeEntryHeader(byte[] outbuf)", "signatureAfterChange": "     public void writeEntryHeader(byte[] outbuf)", "diff": ["-        offset = TarUtils.getNameBytes(this.name, outbuf, offset, NAMELEN);", "-        offset = TarUtils.getOctalBytes(this.mode, outbuf, offset, MODELEN);", "-        offset = TarUtils.getOctalBytes(this.userId, outbuf, offset, UIDLEN);", "-        offset = TarUtils.getOctalBytes(this.groupId, outbuf, offset, GIDLEN);", "-        offset = TarUtils.getLongOctalBytes(this.size, outbuf, offset, SIZELEN);", "-        offset = TarUtils.getLongOctalBytes(this.modTime, outbuf, offset, MODTIMELEN);", "+        offset = TarUtils.getNameBytes(name, outbuf, offset, NAMELEN);", "+        offset = TarUtils.getOctalBytes(mode, outbuf, offset, MODELEN);", "+        offset = TarUtils.getOctalBytes(userId, outbuf, offset, UIDLEN);", "+        offset = TarUtils.getOctalBytes(groupId, outbuf, offset, GIDLEN);", "+        offset = TarUtils.getLongOctalBytes(size, outbuf, offset, SIZELEN);", "+        offset = TarUtils.getLongOctalBytes(modTime, outbuf, offset, MODTIMELEN);", "-        outbuf[offset++] = this.linkFlag;", "-        offset = TarUtils.getNameBytes(this.linkName, outbuf, offset, NAMELEN);", "-        offset = TarUtils.getNameBytes(this.magic, outbuf, offset, MAGICLEN);", "-        offset = TarUtils.getNameBytes(this.userName, outbuf, offset, UNAMELEN);", "-        offset = TarUtils.getNameBytes(this.groupName, outbuf, offset, GNAMELEN);", "-        offset = TarUtils.getOctalBytes(this.devMajor, outbuf, offset, DEVLEN);", "-        offset = TarUtils.getOctalBytes(this.devMinor, outbuf, offset, DEVLEN);", "+        outbuf[offset++] = linkFlag;", "+        offset = TarUtils.getNameBytes(linkName, outbuf, offset, NAMELEN);", "+        offset = TarUtils.getNameBytes(magic, outbuf, offset, MAGICLEN);", "+        offset = TarUtils.getNameBytes(userName, outbuf, offset, UNAMELEN);", "+        offset = TarUtils.getNameBytes(groupName, outbuf, offset, GNAMELEN);", "+        offset = TarUtils.getOctalBytes(devMajor, outbuf, offset, DEVLEN);", "+        offset = TarUtils.getOctalBytes(devMinor, outbuf, offset, DEVLEN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ead81a945c4ae201351b741c5ebb96b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void close()         throws IOException", "signatureAfterChange": "     public void close()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"TarBuffer.closeBuffer().\" );", "+            debug( \"TarBuffer.closeBuffer().\" );", "-        if( this.outStream != null )", "+        if( null != m_output )", "-            this.flushBlock();", "+            flushBlock();", "-            if( this.outStream != System.out", "-                && this.outStream != System.err )", "+            if( m_output != System.out && m_output != System.err )", "-                this.outStream.close();", "-", "-                this.outStream = null;", "+                m_output.close();", "+                m_output = null;", "-        else if( this.inStream != null )", "+        else if( m_input != null )", "-            if( this.inStream != System.in )", "+            if( m_input != System.in )", "-                this.inStream.close();", "-", "-                this.inStream = null;", "+                m_input.close();", "+                m_input = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c898bf22052c17a7cfa68e1f7617ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "0bde74aa3647adabb6ab7ffdf25dcf5ac438b971", "commitAfterChange": "23bbf085727756cfbad92aaa345e10c7370d3486", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void parseTarHeader(byte[] header)", "signatureAfterChange": "     public void parseTarHeader(byte[] header)", "diff": ["-        this.name = TarUtils.parseName(header, offset, NAMELEN);", "+        name = TarUtils.parseName(header, offset, NAMELEN);", "-        this.mode = (int) TarUtils.parseOctal(header, offset, MODELEN);", "+        mode = (int) TarUtils.parseOctal(header, offset, MODELEN);", "-        this.userId = (int) TarUtils.parseOctal(header, offset, UIDLEN);", "+        userId = (int) TarUtils.parseOctal(header, offset, UIDLEN);", "-        this.groupId = (int) TarUtils.parseOctal(header, offset, GIDLEN);", "+        groupId = (int) TarUtils.parseOctal(header, offset, GIDLEN);", "-        this.size = TarUtils.parseOctal(header, offset, SIZELEN);", "+        size = TarUtils.parseOctal(header, offset, SIZELEN);", "-        this.modTime = TarUtils.parseOctal(header, offset, MODTIMELEN);", "+        modTime = TarUtils.parseOctal(header, offset, MODTIMELEN);", "-        this.linkFlag = header[offset++];", "-        this.linkName = TarUtils.parseName(header, offset, NAMELEN);", "+        linkFlag = header[offset++];", "+        linkName = TarUtils.parseName(header, offset, NAMELEN);", "-        this.magic = TarUtils.parseName(header, offset, MAGICLEN);", "+        magic = TarUtils.parseName(header, offset, MAGICLEN);", "-        this.userName = TarUtils.parseName(header, offset, UNAMELEN);", "+        userName = TarUtils.parseName(header, offset, UNAMELEN);", "-        this.groupName = TarUtils.parseName(header, offset, GNAMELEN);", "+        groupName = TarUtils.parseName(header, offset, GNAMELEN);", "-        this.devMajor = (int) TarUtils.parseOctal(header, offset, DEVLEN);", "+        devMajor = (int) TarUtils.parseOctal(header, offset, DEVLEN);", "-        this.devMinor = (int) TarUtils.parseOctal(header, offset, DEVLEN);", "+        devMinor = (int) TarUtils.parseOctal(header, offset, DEVLEN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e72a4cbfb3a85cb21843bd1e5153e6f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "23bbf085727756cfbad92aaa345e10c7370d3486", "commitAfterChange": "75110026aa35fe98da6c696598361977c3c46c48", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void closeEntry() throws IOException", "signatureAfterChange": "     public void closeEntry() throws IOException", "diff": ["-        if (this.assemLen > 0) {", "-            for (int i = this.assemLen; i < this.assemBuf.length; ++i) {", "-                this.assemBuf[i] = 0;", "+        if (assemLen > 0) {", "+            for (int i = assemLen; i < assemBuf.length; ++i) {", "+                assemBuf[i] = 0;", "-            this.buffer.writeRecord(this.assemBuf);", "+            buffer.writeRecord(assemBuf);", "-            this.currBytes += this.assemLen;", "-            this.assemLen = 0;", "+            currBytes += assemLen;", "+            assemLen = 0;", "-        if (this.currBytes < this.currSize) {", "+        if (currBytes < currSize) {", "-                                  + this.currBytes", "-                                  + \"' before the '\" + this.currSize", "+                                  + currBytes", "+                                  + \"' before the '\" + currSize"]}]}