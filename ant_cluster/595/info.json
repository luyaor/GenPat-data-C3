{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f71c44818f33b3f254939c829c313f59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c746b29dd482886e8d17bf76f793234", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "db060df3c3ec41339c5fcbf8c177ec9f01299cae", "commitAfterChange": "ac067a950849bfb82b9f8efd45231946d1020a37", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean isFilesystemOnly()", "signatureAfterChange": "     public boolean isFilesystemOnly()", "diff": ["-        //first the easy way, if all children are filesystem-only, return true:", "-        boolean goEarly = true;", "-        for (Iterator i = rc.iterator(); goEarly && i.hasNext();) {", "-            goEarly &= ((ResourceCollection) i.next()).isFilesystemOnly();", "-        }", "-        if (goEarly) {", "-            return true;", "-        }", "-        /* now check each Resource in case the child only", "-           lets through files from any children IT may have: */", "-        for (Iterator i = coll.iterator(); i.hasNext();) {", "-            if (!(i.next() instanceof FileResource)) {", "+", "+        for (Iterator i = rc.iterator(); i.hasNext();) {", "+            if ((!((ResourceCollection) i.next()).isFilesystemOnly())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b3bf9d76a0863cd80d2744e63b0a33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "cf12b9b863b658fec3fa94eecd4c0e7df3b8e986", "commitAfterChange": "05988f712e1b2011194e635b8ffe5b57aebd8bf1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public synchronized boolean isFilesystemOnly()", "signatureAfterChange": "     public synchronized boolean isFilesystemOnly()", "diff": ["-        if (rc == null) {", "-            throw new BuildException(ONE_NESTED_MESSAGE);", "-        }", "-        //first the easy way, if child is filesystem-only, return true:", "-        if (rc.isFilesystemOnly()) {", "-            return true;", "-        }", "-        /* now check each Resource in case the child only", "-           lets through files from any children IT may have: */", "-        for (Iterator i = getCollection().iterator(); i.hasNext();) {", "-            if (!(i.next() instanceof FileResource)) {", "-                return false;", "-            }", "-        }", "-        return true;", "+        return w.isFilesystemOnly();"]}]}