{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c9d55996c24af10e670dc8a3b2dbbb1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd79cb999beb2b6413d12eb10b207366", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "bc718c9348493ae16f1e6f6299a9625b6ca0ccbd", "commitAfterChange": "9dd88b23e50a8bae889903f737ce2deccb06c73d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+", "+            if (!overwrite){", "+             // remove any files that shouldn't be overwritten.", "+             ArrayList filesToRemove = new ArrayList();", "+             for(Iterator i = filesList.iterator();i.hasNext();){", "+               File f = (File)i.next();", "+               File new_file = new File(destDir.getAbsolutePath() + File.separator + f.getName());", "+               if (new_file.exists()){", "+                 filesToRemove.add(f);", "+               }", "+             }", "+             filesList.removeAll(filesToRemove);", "+            }", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaedf049cbfa92e5ddac0b00a9dba894", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractJarSignerTask.java", "commitBeforeChange": "05e90275ec90ca52394b59743ce965a3c052be20", "commitAfterChange": "34933b03ece57874f553c460f419a77633ce86d9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private RedirectorElement createRedirector()", "signatureAfterChange": "     private RedirectorElement createRedirector()", "diff": ["+            // Try to avoid showing password prompts on log output, as they would be confusing.", "+            LineContainsRegExp filter = new LineContainsRegExp();", "+            RegularExpression rx = new RegularExpression();", "+            // XXX only handles English locale, not ja or zh_CN", "+            rx.setPattern(\"^(Enter Passphrase for keystore: |Enter key password for .+: )$\");", "+            filter.addConfiguredRegexp(rx);", "+            filter.setNegate(true);", "+            result.createErrorFilterChain().addLineContainsRegExp(filter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc9c923917737d8b6dbb9ccb8df3d736", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "aaed31a8a95dd02706b8760cf8d69081a767c85b", "commitAfterChange": "6483e387712948cd97e5840ce7eae72638bd1259", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            if (mapper != null) {", "+                FileNameMapper impl = mapper.getImplementation();", "+                List ret = new ArrayList();", "+                for (int i = 0; i < elems.length; ++i) {", "+                    String[] mapped = impl.mapFileName(elems[i]);", "+                    for (int m = 0; mapped != null && m < mapped.length; ++m) {", "+                        ret.add(mapped[m]);", "+                    }", "+                }", "+                elems = (String[]) ret.toArray(new String[] {});", "+            }", "+"]}]}