{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f62301b085582267336f589a349ae5d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8e140e299f93dfd59366e830666258", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testHeadRequest()", "signatureAfterChange": "      @Test     public void testHeadRequest()", "diff": ["+    @Test", "-       expectPropertySet(\"test-head-request\", \"test-head-request\");", "-       assertPropertyUnset(\"test-head-request-bad-url\");", "+        buildRule.executeTarget(\"test-head-request\");", "+        assertEquals(\"true\", buildRule.getProject().getProperty(\"test-head-request\"));", "+        assertNull(buildRule.getProject().getProperty(\"test-head-request-bad-url\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2338957f098eb8db2207b4f28ed22a81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testGetRequest()", "signatureAfterChange": "      @Test     public void testGetRequest()", "diff": ["+    @Test", "-       expectPropertySet(\"test-get-request\", \"test-get-request\");", "-       assertPropertyUnset(\"test-get-request-bad-url\");", "+        buildRule.executeTarget(\"test-get-request\");", "+        assertEquals(\"true\", buildRule.getProject().getProperty(\"test-get-request\"));", "+        assertNull(buildRule.getProject().getProperty(\"test-get-request-bad-url\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69be69ca4df6ac808162f80a5d3924f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ImportTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testSymlinkedImports() throws Exception", "signatureAfterChange": "      @Test     public void testSymlinkedImports() throws Exception", "diff": ["+    @Test", "-        if (!new File(ln).exists()) {", "-            // Running on Windows or something, so skip it.", "-            return;", "-        }", "+        Assume.assumeTrue(\"Current system does not support Symlinks\", new File(ln).exists());", "-            configureProject(", "+            buildRule.configureProject(", "-            assertPropertyEquals(", "-                \"ant.file.p2\",", "+            assertEquals(", "+                buildRule.getProject().getProperty(\"ant.file.p2\"),", "-            assertPropertyEquals(", "-                \"ant.file.p3\",", "+            assertEquals(", "+                buildRule.getProject().getProperty(\"ant.file.p3\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a97abbd73e61d37be56ca854097bfe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testNoMethod()", "signatureAfterChange": "      @Test     public void testNoMethod()", "diff": ["+    @Test", "-       expectPropertySet(\"basic-no-method\", \"basic-no-method\");", "-       assertPropertyUnset(\"basic-no-method-bad-url\");", "+        buildRule.executeTarget(\"basic-no-method\");", "+        assertEquals(\"true\", buildRule.getProject().getProperty(\"basic-no-method\"));", "+        assertNull(buildRule.getProject().getProperty(\"basic-no-method-bad-url\"));"]}]}