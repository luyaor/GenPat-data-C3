{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "426eb39848422d340ce005e21c0e9659", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d2087a643e55d24f2d519f18a697dc8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecuteOnTest.java", "commitBeforeChange": "3732eb195b3d24d6480a2d7edb2818b325a3e199", "commitAfterChange": "b0507d4451b72856ddca45183143a96493e8ef3e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testRedirect1()", "signatureAfterChange": "      public void testRedirect1() throws IOException", "diff": ["-    public void testRedirect1() {", "+    public void testRedirect1() throws IOException {", "-        String actualOut = null;", "-        try {", "-            actualOut = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.out\")));", "-        } catch (IOException eyeOhEx) {", "-        }", "+        String actualOut = getFileString(\"redirect.out\");", "+", "-        assertFalse(\"xout < 0\", xout < 0);", "-        assertFalse(\"yout < 0\", yout < 0);", "-        assertFalse(\"zout < 0\", zout < 0);", "-        assertFalse(\"xerr < 0\", xerr < 0);", "-        assertFalse(\"yerr < 0\", yerr < 0);", "-        assertFalse(\"zerr < 0\", zerr < 0);", "+        assertFalse(\"xout=\" + xout, xout < 0);", "+        assertFalse(\"yout=\" + yout, yout < 0);", "+        assertFalse(\"zout=\" + zout, zout < 0);", "+        assertFalse(\"xerr=\" + xerr, xerr < 0);", "+        assertFalse(\"yerr=\" + yerr, yerr < 0);", "+        assertFalse(\"zerr=\" + zerr, zerr < 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f24425e9a9c83fd682ee26d47b23b1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecuteOnTest.java", "commitBeforeChange": "3732eb195b3d24d6480a2d7edb2818b325a3e199", "commitAfterChange": "b0507d4451b72856ddca45183143a96493e8ef3e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testRedirect2()", "signatureAfterChange": "      public void testRedirect2() throws IOException", "diff": ["-    public void testRedirect2() {", "+    public void testRedirect2() throws IOException {", "-        String actualOut = null;", "-        String actualErr = null;", "-        try {", "-            actualOut = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.out\")));", "-            actualErr = FileUtils.newFileUtils().readFully(new FileReader(", "-                getProject().resolveFile(\"redirect.err\")));", "-        } catch (IOException eyeOhEx) {", "-        }", "+        String actualOut = getFileString(\"redirect.out\");", "+        String actualErr = getFileString(\"redirect.err\");", "+", "-        assertFalse(\"xout < 0\", xout < 0);", "-        assertFalse(\"yout < 0\", yout < 0);", "-        assertFalse(\"zout < 0\", zout < 0);", "-        assertFalse(\"xerr < 0\", xerr < 0);", "-        assertFalse(\"yerr < 0\", yerr < 0);", "-        assertFalse(\"zerr < 0\", zerr < 0);", "+        assertFalse(\"xout=\" + xout, xout < 0);", "+        assertFalse(\"yout=\" + yout, yout < 0);", "+        assertFalse(\"zout=\" + zout, zout < 0);", "+        assertFalse(\"xerr=\" + xerr, xerr < 0);", "+        assertFalse(\"yerr=\" + yerr, yerr < 0);", "+        assertFalse(\"zerr=\" + zerr, zerr < 0);"]}]}