{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "997f405815f4fb4dc483f8f9d316a487", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf529a208d19bf47807bd0d801e0b77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["+        boolean found = tryToLocateSignature(MIN_EOCD_SIZE + ZIP64_EOCDL_LENGTH,", "+                                             MAX_EOCD_SIZE + ZIP64_EOCDL_LENGTH,", "+                                             ZipOutputStream", "+                                             .ZIP64_EOCD_LOC_SIG);", "+        if (!found) {", "+            // not a ZIP64 archive", "+            positionAtCentralDirectory32();", "+        } else {", "+            positionAtCentralDirectory64();", "+        }", "+    }", "-        long off = archive.length() - MIN_EOCD_SIZE;", "-            Math.max(0L, archive.length() - MAX_EOCD_SIZE);", "-            final byte[] sig = ZipOutputStream.EOCD_SIG;", "-        if (!found) {", "-            throw new ZipException(\"archive is not a ZIP archive\");", "-        archive.seek(off + CFD_LOCATOR_OFFSET);", "-        byte[] cfdOffset = new byte[WORD];", "-        archive.readFully(cfdOffset);", "-        archive.seek(ZipLong.getValue(cfdOffset));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a037285541ceae7797355eef62f6134", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DOMElementWriter.java", "commitBeforeChange": "80eb41df70f59620db5127b116b1311dc33bd804", "commitAfterChange": "a7900921c30f730f0fda304913f867dee4dcebc5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void write(Element element, Writer out, int indent,                       String indentWith)         throws IOException", "signatureAfterChange": "     public void write(Element element, Writer out, int indent,                       String indentWith)         throws IOException", "diff": ["-        // Write indent characters", "-        for (int i = 0; i < indent; i++) {", "-            out.write(indentWith);", "-        }", "-", "-        // Write element", "-        out.write(\"<\");", "-        out.write(element.getTagName());", "-", "-        // Write attributes", "-        NamedNodeMap attrs = element.getAttributes();", "-        for (int i = 0; i < attrs.getLength(); i++) {", "-            Attr attr = (Attr) attrs.item(i);", "-            out.write(\" \");", "-            out.write(attr.getName());", "-            out.write(\"=\\\"\");", "-            out.write(encode(attr.getValue()));", "-            out.write(\"\\\"\");", "-        }", "-        out.write(\">\");", "+        openElement(element, out, indent, indentWith);", "+        closeElement(element, out, indent, indentWith, hasChildren);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84208e0b87490cf35290f6ce8776f8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "be45954b98d96eb6e208211ef8c323886b88b2ee", "commitAfterChange": "42d9dddc08121e4ca87b44e3703158f979175e2a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void printResults(ResultSet rs, PrintStream out) throws SQLException", "signatureAfterChange": "     protected void printResults(PrintStream out) throws SQLException", "diff": ["+     */", "+    protected void printResults(PrintStream out) throws SQLException {", "+        ResultSet rs = null;", "+        rs = statement.getResultSet();", "+        try {", "+            printResults(rs, out);", "+        } finally {", "+            if (rs != null) {", "+                rs.close();", "+            }"]}]}