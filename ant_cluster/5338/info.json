{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9295be27f02de91c8c64d359d33d785", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb72e6af68a4195de51786fd552050f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected String getReferencesParameter()", "signatureAfterChange": "     protected String getReferencesParameter()", "diff": ["-    protected String getReferencesParameter() {", "-        //bail on no references", "-        if (notEmpty(_references)) {", "-            return \"/reference:\" + _references;", "-        } else {", "-            return null;", "-        }", "-    }", "+     */", "+    protected String getReferencesParameter() {", "+        //bail on no references", "+        if (notEmpty(references)) {", "+            return \"/reference:\" + references;", "+        } else {", "+            return null;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ad898e7b26d4b0f75d8e2115bef909a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/CSharp.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected String getReferenceFilesParameter()", "signatureAfterChange": "     protected String getReferenceFilesParameter()", "diff": ["-    protected String getReferenceFilesParameter() {", "-        //bail on no references", "-        if (_references == null) {", "-            return null;", "-        }", "-        //iterate through the ref list & generate an entry for each", "-        //or just rely on the fact that the toString operator does this, but", "-        //noting that the separator is ';' on windows, ':' on unix", "-        String refpath = _references.toString();", "-", "-        //bail on no references listed", "-        if (refpath.length() == 0) {", "-            return null;", "-        }", "-", "-        StringBuffer s = new StringBuffer(\"/reference:\");", "-        s.append(refpath);", "-        return new String(s);", "-    }", "+     */", "+    protected String getReferenceFilesParameter() {", "+        //bail on no references", "+        if (references == null) {", "+            return null;", "+        }", "+        //iterate through the ref list & generate an entry for each", "+        //or just rely on the fact that the toString operator does this, but", "+        //noting that the separator is ';' on windows, ':' on unix", "+        String refpath = references.toString();", "+", "+        //bail on no references listed", "+        if (refpath.length() == 0) {", "+            return null;", "+        }", "+", "+        StringBuffer s = new StringBuffer(\"/reference:\");", "+        s.append(refpath);", "+        return new String(s);", "+    }"]}]}