{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fa1af9aea70cb8b6d9f783d737eda83", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4246a6f14bff636f0877465ba6a64ee6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/JakartaRegexpMatcher.java", "commitBeforeChange": "5a497d7dc79f7b6eda0770262f8d92d099c502c5", "commitAfterChange": "8ce1de2178a0422105fa437c327b49fb5637ff28", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected int getCompilerOptions( int options )", "signatureAfterChange": "      protected int getCompilerOptions( int options )", "diff": ["-        if( RegexpUtil.hasFlag( options, MATCH_CASE_INSENSITIVE ) )", "+        if( RegexpUtil.hasFlag( options, MATCH_CASE_INSENSITIVE ) ) {", "-        if( RegexpUtil.hasFlag( options, MATCH_MULTILINE ) )", "+        }", "+        if( RegexpUtil.hasFlag( options, MATCH_MULTILINE ) ) {", "-        if( RegexpUtil.hasFlag( options, MATCH_SINGLELINE ) )", "+        }", "+        if( RegexpUtil.hasFlag( options, MATCH_SINGLELINE ) ) {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a4a6be43dac2c9714920ec94909ef87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/Jdk14RegexpMatcher.java", "commitBeforeChange": "5a497d7dc79f7b6eda0770262f8d92d099c502c5", "commitAfterChange": "8ce1de2178a0422105fa437c327b49fb5637ff28", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected int getCompilerOptions( int options )", "signatureAfterChange": "      protected int getCompilerOptions( int options )", "diff": ["-        if( RegexpUtil.hasFlag( options, MATCH_CASE_INSENSITIVE ) )", "+        if( RegexpUtil.hasFlag( options, MATCH_CASE_INSENSITIVE ) ) {", "-        if( RegexpUtil.hasFlag( options, MATCH_MULTILINE ) )", "+        }", "+        if( RegexpUtil.hasFlag( options, MATCH_MULTILINE ) ) {", "-        if( RegexpUtil.hasFlag( options, MATCH_SINGLELINE ) )", "+        }", "+        if( RegexpUtil.hasFlag( options, MATCH_SINGLELINE ) ) {", "+        }"]}]}