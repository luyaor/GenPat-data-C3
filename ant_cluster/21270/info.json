{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "423f09b41c79de5666a1289b833531bc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d2d76c27b860f5fd2d987aee35fa47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "913929eccaca47e5a224c5ac8b5ef82754504239", "commitAfterChange": "bb2695af1464b52cacdd3d3672e428358c3142dd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private String escapeUnicode(char ch)", "signatureAfterChange": "     private String escapeUnicode(char ch)", "diff": ["-        StringBuffer buffy = new StringBuffer(\"\\\\u\");", "-        String hex = Integer.toHexString((int)ch);", "-        buffy.append(\"0000\".substring(4-hex.length()));", "-        buffy.append(hex);", "-        return buffy.toString();", "-    }", "+        return \"\\\\\" + UnicodeUtil.EscapeUnicode(ch);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72da53331f0e99c0fd544f62ac9043c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "7b8097afa8f7b95a8d6bd098884ae873e8ca25de", "commitAfterChange": "0a60a74c8c40cc87239e965e94380e1922d85293", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void configureProject(String filename) throws BuildException", "signatureAfterChange": "     protected void configureProject(String filename) throws BuildException", "diff": ["+        configureProject(filename, Project.MSG_DEBUG);", "+    }", "-        project.addBuildListener(new AntTestListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a79eac65d19203ec0b965a12d3efbdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/zip/ZipFileNameParser.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ParsedUri parseUri( String uriStr ) throws FileSystemException", "signatureAfterChange": "     public ParsedZipUri parseZipUri( final String uriStr )         throws FileSystemException", "diff": ["-    public ParsedUri parseUri( String uriStr ) throws FileSystemException", "+    public ParsedZipUri parseZipUri( final String uriStr )", "+        throws FileSystemException", "-        StringBuffer name = new StringBuffer();", "-        ParsedZipUri uri = new ParsedZipUri();", "+        final StringBuffer name = new StringBuffer();", "+        final ParsedZipUri uri = new ParsedZipUri();", "-        String scheme = extractScheme( uriStr, name );", "+        final String scheme = extractScheme( uriStr, name );", "-        String zipName = extractZipName( name );", "-        uri.setZipFile( zipName );", "+        final String zipName = extractZipName( name );", "+        uri.setZipFileName( zipName );", "-        // Adjust the separators", "-        fixSeparators( name );", "-", "-        // Normalise the file name", "+        // Decode and normalise the file name", "+        decode( name, 0, name.length() );", "-", "-        // Build root URI", "-        StringBuffer rootUri = new StringBuffer();", "-        rootUri.append( scheme );", "-        rootUri.append( \":\" );", "-        rootUri.append( zipName );", "-        rootUri.append( \"!\" );", "-        uri.setRootURI( rootUri.toString() );"]}]}