{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a32f00d7b6f71373a4b791f8f8a39dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0954b502c969d1af68f9196d26f928d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private void processResources(Resource stylesheet)", "signatureAfterChange": "     private void processResources(final Resource stylesheet)", "diff": ["-    private void processResources(Resource stylesheet) {", "-        for (Resource r : resources) {", "+    private void processResources(final Resource stylesheet) {", "+        for (final Resource r : resources) {", "-            FileProvider fp = r.as(FileProvider.class);", "+            final FileProvider fp = r.as(FileProvider.class);", "-                FileResource f = ResourceUtils.asFileResource(fp);", "+                final FileResource f = ResourceUtils.asFileResource(fp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f0f8e86d70479b97a6a442158840df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     public void setSourcefiles(String src)", "signatureAfterChange": "     public void setSourcefiles(final String src)", "diff": ["-    public void setSourcefiles(String src) {", "-        StringTokenizer tok = new StringTokenizer(src, \",\");", "+    public void setSourcefiles(final String src) {", "+        final StringTokenizer tok = new StringTokenizer(src, \",\");", "-            String f = tok.nextToken();", "-            SourceFile sf = new SourceFile();", "+            final String f = tok.nextToken();", "+            final SourceFile sf = new SourceFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aa717531929e45cf66757624e8fa2ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void setPackagenames(String packages)", "signatureAfterChange": "     public void setPackagenames(final String packages)", "diff": ["-    public void setPackagenames(String packages) {", "-        StringTokenizer tok = new StringTokenizer(packages, \",\");", "+    public void setPackagenames(final String packages) {", "+        final StringTokenizer tok = new StringTokenizer(packages, \",\");", "-            String p = tok.nextToken();", "-            PackageName pn = new PackageName();", "+            final String p = tok.nextToken();", "+            final PackageName pn = new PackageName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d323dd6ba1dba1b64003a2d6b780504", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "     private Method findMatchingMethod(Class<?> paramClass, List<Method> methods)", "signatureAfterChange": "     private Method findMatchingMethod(final Class<?> paramClass, final List<Method> methods)", "diff": ["-    private Method findMatchingMethod(Class<?> paramClass, List<Method> methods) {", "+    private Method findMatchingMethod(final Class<?> paramClass, final List<Method> methods) {", "-            Method method = methods.get(i);", "-            Class<?> methodClass = method.getParameterTypes()[0];", "+            final Method method = methods.get(i);", "+            final Class<?> methodClass = method.getParameterTypes()[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "176ee4e03da2bf2f90d82cbfb317a73e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/AbstractSshMessage.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected final int trackProgress(long filesize, long totalLength,                                       int percentTransmitted)", "signatureAfterChange": "     protected final int trackProgress(final long filesize, final long totalLength,                                       final int percentTransmitted)", "diff": ["-    protected final int trackProgress(long filesize, long totalLength,", "-                                      int percentTransmitted) {", "+    protected final int trackProgress(final long filesize, final long totalLength,", "+                                      final int percentTransmitted) {", "-        int percent = (int) Math.round(Math.floor((totalLength", "+        final int percent = (int) Math.round(Math.floor((totalLength"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191e1d264723ca3628e3e0f9d2b6310e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public static AntClassLoader newAntClassLoader(ClassLoader parent,                                                    Project project,                                                    Path path,                                                    boolean parentFirst)", "signatureAfterChange": "     public static AntClassLoader newAntClassLoader(final ClassLoader parent,                                                    final Project project,                                                    final Path path,                                                    final boolean parentFirst)", "diff": ["-    public static AntClassLoader newAntClassLoader(ClassLoader parent,", "-                                                   Project project,", "-                                                   Path path,", "-                                                   boolean parentFirst) {", "+    public static AntClassLoader newAntClassLoader(final ClassLoader parent,", "+                                                   final Project project,", "+                                                   final Path path,", "+                                                   final boolean parentFirst) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e81ec710497b545ae4b2f141ee3e0c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEncodingHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     static ByteBuffer growBuffer(ByteBuffer b, int newCapacity)", "signatureAfterChange": "     static ByteBuffer growBuffer(final ByteBuffer b, final int newCapacity)", "diff": ["-    static ByteBuffer growBuffer(ByteBuffer b, int newCapacity) {", "+    static ByteBuffer growBuffer(final ByteBuffer b, final int newCapacity) {", "-        int c2 = b.capacity() * 2;", "-        ByteBuffer on = ByteBuffer.allocate(c2 < newCapacity ? newCapacity : c2);", "+        final int c2 = b.capacity() * 2;", "+        final ByteBuffer on = ByteBuffer.allocate(c2 < newCapacity ? newCapacity : c2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "260de90b2ddfccfff1c0936c46497146", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Permissions.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         private Set<String> parseActions(String actions)", "signatureAfterChange": "         private Set<String> parseActions(final String actions)", "diff": ["-        private Set<String> parseActions(String actions) {", "-            Set<String> result = new HashSet<String>();", "-            StringTokenizer tk = new StringTokenizer(actions, \",\");", "+        private Set<String> parseActions(final String actions) {", "+            final Set<String> result = new HashSet<String>();", "+            final StringTokenizer tk = new StringTokenizer(actions, \",\");", "-                String item = tk.nextToken().trim();", "+                final String item = tk.nextToken().trim();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6e795d69032c6506c7c2fae0318817", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarFile(final File file, final TarOutputStream tOut, final String vPath,                            final TarFileSet tarFileSet)         throws IOException", "diff": ["-    protected void tarFile(File file, TarOutputStream tOut, String vPath,", "-                           TarFileSet tarFileSet)", "+    protected void tarFile(final File file, final TarOutputStream tOut, final String vPath,", "+                           final TarFileSet tarFileSet)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3538476c390f2144b9cbe22e474154f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "     private int getUnixMode(Resource r, ZipFile zf, int defaultMode)         throws IOException", "signatureAfterChange": "     private int getUnixMode(final Resource r, final ZipFile zf, final int defaultMode)         throws IOException", "diff": ["-    private int getUnixMode(Resource r, ZipFile zf, int defaultMode)", "+    private int getUnixMode(final Resource r, final ZipFile zf, final int defaultMode)", "-            ZipEntry ze = zf.getEntry(r.getName());", "+            final ZipEntry ze = zf.getEntry(r.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f12e8f33c12928727d9de50388e1c1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void complete() throws IOException", "signatureAfterChange": "     public void complete() throws IOException", "diff": ["-                    Thread[] thread = new Thread[threadGroup.activeCount()];", "+                    final Thread[] thread = new Thread[threadGroup.activeCount()];", "-                        } catch (NullPointerException enPeaEx) {", "+                        } catch (final NullPointerException enPeaEx) {", "-                } catch (InterruptedException eyeEx) {", "-                    Thread[] thread = new Thread[threadGroup.activeCount()];", "+                } catch (final InterruptedException eyeEx) {", "+                    final Thread[] thread = new Thread[threadGroup.activeCount()];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685f66741af7be06b7766e7596c54f84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/ftp/FtpFileSystem.java", "commitBeforeChange": "1e6724086273289f57d67935f25c6daf7a11a7d4", "commitAfterChange": "fa980642c8d6cedd6495a30f6fb97785fc0cee58", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public FtpFileSystem( FileName rootName,                           String hostname,                           String username,                           String password ) throws FileSystemException", "signatureAfterChange": "      public FtpFileSystem( final FileName rootName,                           final String hostname,                           final String username,                           final String password )         throws FileSystemException", "diff": ["-    public FtpFileSystem( FileName rootName,", "-                          String hostname,", "-                          String username,", "-                          String password ) throws FileSystemException", "+    public FtpFileSystem( final FileName rootName,", "+                          final String hostname,", "+                          final String username,", "+                          final String password )", "+        throws FileSystemException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "689cb69e1d53ea0b77beb20917bf03bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void scandir(File dir, TokenizedPath path, boolean fast)", "signatureAfterChange": "     private void scandir(final File dir, final TokenizedPath path, final boolean fast)", "diff": ["-    private void scandir(File dir, TokenizedPath path, boolean fast) {", "+    private void scandir(final File dir, final TokenizedPath path, final boolean fast) {", "-        String[] newfiles = dir.list();", "+        final String[] newfiles = dir.list();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5d4c9a1498f6ba4f6903fb5b6c32b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testNameResolution() throws Exception", "signatureAfterChange": "     public void testNameResolution() throws Exception", "diff": ["-        FileName baseName = m_baseFolder.getName();", "-        String parentPath = baseName.getParent().getPath();", "-        String path = baseName.getPath();", "-        String childPath = path + \"/some-child\";", "+        final FileName baseName = m_baseFolder.getName();", "+        final String parentPath = baseName.getParent().getPath();", "+        final String path = baseName.getPath();", "+        final String childPath = path + \"/some-child\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c7cb573bef5be4d1209faa2bbfb780", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     public void setExcludePackageNames(String packages)", "signatureAfterChange": "     public void setExcludePackageNames(final String packages)", "diff": ["-    public void setExcludePackageNames(String packages) {", "-        StringTokenizer tok = new StringTokenizer(packages, \",\");", "+    public void setExcludePackageNames(final String packages) {", "+        final StringTokenizer tok = new StringTokenizer(packages, \",\");", "-            String p = tok.nextToken();", "-            PackageName pn = new PackageName();", "+            final String p = tok.nextToken();", "+            final PackageName pn = new PackageName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c2fd82312d46a9b1e6594eedf0ef803", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public AntClassLoader(         ClassLoader parent, Project project, Path classpath, boolean parentFirst)", "signatureAfterChange": "     public AntClassLoader(         final ClassLoader parent, final Project project, final Path classpath, final boolean parentFirst)", "diff": ["-        ClassLoader parent, Project project, Path classpath, boolean parentFirst) {", "+        final ClassLoader parent, final Project project, final Path classpath, final boolean parentFirst) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00702c8531882aaff5bf87f09f4e5a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private static void createAndStoreFormatter(String line)         throws BuildException", "signatureAfterChange": "     private static void createAndStoreFormatter(final String line)         throws BuildException", "diff": ["-    private static void createAndStoreFormatter(String line)", "+    private static void createAndStoreFormatter(final String line)", "-        FormatterElement fe = new FormatterElement();", "-        int pos = line.indexOf(',');", "+        final FormatterElement fe = new FormatterElement();", "+        final int pos = line.indexOf(',');", "-                int fName = line.indexOf(IGNORED_FILE_NAME);", "+                final int fName = line.indexOf(IGNORED_FILE_NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a78c5f7592487aa32bcc369bccef4a41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison, File inFile) throws Exception", "signatureAfterChange": "     private void setLiaisonDynamicFileParameters(         final XSLTLiaison liaison, final File inFile) throws Exception", "diff": ["-        XSLTLiaison liaison, File inFile) throws Exception {", "+        final XSLTLiaison liaison, final File inFile) throws Exception {", "-            String fileName = FileUtils.getRelativePath(baseDir, inFile);", "-            File file = new File(fileName);", "+            final String fileName = FileUtils.getRelativePath(baseDir, inFile);", "+            final File file = new File(fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a826d01efd79455ccf3776e8752e1108", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private static OutputStream getOutputStream(Resource resource, boolean append, Project project)             throws IOException", "signatureAfterChange": "      private static OutputStream getOutputStream(final Resource resource, final boolean append, final Project project)             throws IOException", "diff": ["-    private static OutputStream getOutputStream(Resource resource, boolean append, Project project)", "+    private static OutputStream getOutputStream(final Resource resource, final boolean append, final Project project)", "-            Appendable a = resource.as(Appendable.class);", "+            final Appendable a = resource.as(Appendable.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa6fdc043dc9731dc44aec869818ed4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "     public void setLinkoffline(String src)", "signatureAfterChange": "     public void setLinkoffline(final String src)", "diff": ["-    public void setLinkoffline(String src) {", "-        LinkArgument le = createLink();", "+    public void setLinkoffline(final String src) {", "+        final LinkArgument le = createLink();", "-        String linkOfflineError = \"The linkoffline attribute must include\"", "+        final String linkOfflineError = \"The linkoffline attribute must include\"", "-        StringTokenizer tok = new StringTokenizer(src, \" \", false);", "+        final StringTokenizer tok = new StringTokenizer(src, \" \", false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c315f65024cf01bd7b28d5bb4624f72d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Resource[] selectOutOfDateSources(ProjectComponent logTo,                                                     Resource[] source,                                                     FileNameMapper mapper,                                                     ResourceFactory targets)", "signatureAfterChange": "     public static Resource[] selectOutOfDateSources(final ProjectComponent logTo,                                                     final Resource[] source,                                                     final FileNameMapper mapper,                                                     final ResourceFactory targets)", "diff": ["-    public static Resource[] selectOutOfDateSources(ProjectComponent logTo,", "-                                                    Resource[] source,", "-                                                    FileNameMapper mapper,", "-                                                    ResourceFactory targets) {", "+    public static Resource[] selectOutOfDateSources(final ProjectComponent logTo,", "+                                                    final Resource[] source,", "+                                                    final FileNameMapper mapper,", "+                                                    final ResourceFactory targets) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75eb86b6acf6f2b9c56ea917e9cd1da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/CommonsLoggingListener.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(final BuildEvent event)", "diff": ["-    public void messageLogged(BuildEvent event) {", "+    public void messageLogged(final BuildEvent event) {", "-            Log log = getLog(categoryString, categoryDetail);", "-            int priority = event.getPriority();", "-            String message = event.getMessage();", "+            final Log log = getLog(categoryString, categoryDetail);", "+            final int priority = event.getPriority();", "+            final String message = event.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9afab9ef322dd47bda72cd628a4b672", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resolver/ApacheCatalogResolver.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addPublicEntry(String publicid,                                String systemid,                                URL base)", "signatureAfterChange": "     public void addPublicEntry(final String publicid,                                final String systemid,                                final URL base)", "diff": ["-    public void addPublicEntry(String publicid,", "-                               String systemid,", "-                               URL base) {", "+    public void addPublicEntry(final String publicid,", "+                               final String systemid,", "+                               final URL base) {", "-        ResourceLocation dtd = new ResourceLocation();", "+        final ResourceLocation dtd = new ResourceLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb905e0f3126d674e96876e7aab2d655", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static void start(String[] args, Properties additionalUserProperties,                              ClassLoader coreLoader)", "signatureAfterChange": "     public static void start(final String[] args, final Properties additionalUserProperties,                              final ClassLoader coreLoader)", "diff": ["-    public static void start(String[] args, Properties additionalUserProperties,", "-                             ClassLoader coreLoader) {", "-        Main m = new Main();", "+    public static void start(final String[] args, final Properties additionalUserProperties,", "+                             final ClassLoader coreLoader) {", "+        final Main m = new Main();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd1e6e3a3ba179ddefe703dd77c4fb2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void endTest(Test test)", "signatureAfterChange": " \tpublic void endTest(final Test test)", "diff": ["-\tpublic void endTest(Test test) {", "-        String testDescription = createDescription(test);", "+\tpublic void endTest(final Test test) {", "+        final String testDescription = createDescription(test);", "-            String n = JUnitVersionHelper.getTestCaseName(test);", "+            final String n = JUnitVersionHelper.getTestCaseName(test);", "-        Long l = testStarts.get(createDescription(test));", "+        final Long l = testStarts.get(createDescription(test));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf372ae56b9d411c6dec80dba7e07171", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure)", "signatureAfterChange": "     public JUnitTestRunner(final JUnitTest test, final boolean haltOnError,                            final boolean filtertrace, final boolean haltOnFailure)", "diff": ["-    public JUnitTestRunner(JUnitTest test, boolean haltOnError,", "-                           boolean filtertrace, boolean haltOnFailure) {", "+    public JUnitTestRunner(final JUnitTest test, final boolean haltOnError,", "+                           final boolean filtertrace, final boolean haltOnFailure) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8e70d3252c30ccde152316bc3499d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void log(Task task, String message, Throwable throwable, int msgLevel)", "signatureAfterChange": "     public void log(final Task task, final String message, final Throwable throwable, final int msgLevel)", "diff": ["-    public void log(Task task, String message, Throwable throwable, int msgLevel) {", "+    public void log(final Task task, final String message, final Throwable throwable, final int msgLevel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0406125d8234e8444bafe15eebf0472", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/depend/bcel/DependencyVisitor.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void addClasses(String string)", "signatureAfterChange": "     private void addClasses(final String string)", "diff": ["-    private void addClasses(String string) {", "-        StringTokenizer tokens = new StringTokenizer(string, \";\");", "+    private void addClasses(final String string) {", "+        final StringTokenizer tokens = new StringTokenizer(string, \";\");", "-            String descriptor = tokens.nextToken();", "-            int pos = descriptor.indexOf('L');", "+            final String descriptor = tokens.nextToken();", "+            final int pos = descriptor.indexOf('L');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13850495459322a19403489a9a0d6ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "     private TokenizedPattern[] fillNonPatternSet(Map<String, TokenizedPath> map, String[] patterns)", "signatureAfterChange": "     private TokenizedPattern[] fillNonPatternSet(final Map<String, TokenizedPath> map, final String[] patterns)", "diff": ["-    private TokenizedPattern[] fillNonPatternSet(Map<String, TokenizedPath> map, String[] patterns) {", "-        ArrayList<TokenizedPattern> al = new ArrayList<TokenizedPattern>(patterns.length);", "+    private TokenizedPattern[] fillNonPatternSet(final Map<String, TokenizedPath> map, final String[] patterns) {", "+        final ArrayList<TokenizedPattern> al = new ArrayList<TokenizedPattern>(patterns.length);", "-                String s = isCaseSensitive()", "+                final String s = isCaseSensitive()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb9f432ddfde98f3c4d303157a0cfce6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setClassPath(Path classpath)", "signatureAfterChange": "     public void setClassPath(final Path classpath)", "diff": ["-    public void setClassPath(Path classpath) {", "+    public void setClassPath(final Path classpath) {", "-            Path actualClasspath = classpath.concatSystemClasspath(\"ignore\");", "-            String[] pathElements = actualClasspath.list();", "+            final Path actualClasspath = classpath.concatSystemClasspath(\"ignore\");", "+            final String[] pathElements = actualClasspath.list();", "-                } catch (BuildException e) {", "+                } catch (final BuildException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef54b061b66d19c42432d42564157c9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected boolean archiveIsUpToDate(String[] files, File dir)", "signatureAfterChange": "     protected boolean archiveIsUpToDate(final String[] files, final File dir)", "diff": ["-    protected boolean archiveIsUpToDate(String[] files, File dir) {", "-        SourceFileScanner sfs = new SourceFileScanner(this);", "-        MergingMapper mm = new MergingMapper();", "+    protected boolean archiveIsUpToDate(final String[] files, final File dir) {", "+        final SourceFileScanner sfs = new SourceFileScanner(this);", "+        final MergingMapper mm = new MergingMapper();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c81412cff856e3543e8a2b6452cb6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "           private boolean redirectionAllowed(URL aSource, URL aDest)", "signatureAfterChange": "           private boolean redirectionAllowed(final URL aSource, final URL aDest)", "diff": ["-        private boolean redirectionAllowed(URL aSource, URL aDest) {", "+        private boolean redirectionAllowed(final URL aSource, final URL aDest) {", "-                String message = \"Redirection detected from \"", "+                final String message = \"Redirection detected from \"", "-                String message = \"More than \" + REDIRECT_LIMIT", "+                final String message = \"More than \" + REDIRECT_LIMIT"]}]}