{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68387026c44ff197913ffc5219a10738", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e9eaca0b646d220c0d4befce3f4538", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "f1025dd3c6deebb466ac41a06a42d812cdf4e08d", "commitAfterChange": "c2f14ffad1518f0d1c23c084b7c216d06c5da363", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void setProject(Project project) throws ExecutionException", "signatureAfterChange": "     protected void setProject(Project project) throws ExecutionException", "diff": ["-        for (Iterator i = project.getReferencedProjectNames(); i.hasNext();) {", "-            String referenceName = (String) i.next();", "-            Project referencedProject", "-                 = project.getReferencedProject(referenceName);", "-            Frame referencedFrame = createFrame(referencedProject);", "-", "-            referencedFrames.put(referenceName, referencedFrame);", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88198ec957f5888435b6314970cdba03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "commitAfterChange": "d571dff958cd85b5083a2a829f84e35b4abe4434", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-            List aspects = componentManager.getAspects();", "-                for (Iterator i = aspects.iterator(); i.hasNext();) {", "-                    Aspect aspect = (Aspect) i.next();", "-                    Object replacement ", "-                        = aspect.postCreateComponent(component, model);", "-                    if (replacement != null) {", "-                        component = replacement;", "-                    }", "-                }", "-"]}]}