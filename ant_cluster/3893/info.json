{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e3cba160b2c41bb742bdc7110a0f599", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a010d0031366f5bd15766a0eb48878e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "4dd9da76b4600a1217e7c2ed7a8e6e3e91ac3e4d", "commitAfterChange": "5034769eb72b0bb68994787797f16b9dabc9836c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "signatureAfterChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "diff": ["-            cmd.createArg().setValue(\"-keystore\");", "-            cmd.createArg().setValue(keystore.toString());", "+            // is the keystore a file", "+            File keystoreFile = getProject().resolveFile(keystore);", "+            if (keystoreFile.exists()) {", "+                cmd.createArg().setValue(\"-keystore\");", "+                cmd.createArg().setValue(keystoreFile.getPath());", "+            } else {", "+                // must be a URL - just pass as is", "+                cmd.createArg().setValue(\"-keystore\");", "+                cmd.createArg().setValue(keystore);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d158a29eb5577ee69793f4397f0ce91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "275c9f734ce24f55e64a93bfce9897d74ad80aa3", "commitAfterChange": "d5f9462fd57f94e075006e626f2102e5c7ac6ba0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "signatureAfterChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "diff": ["-            if (compiler != null) {", "-                javaTask.createArg().setValue(\"-compiler\");", "-                javaTask.createArg().setValue(compiler);", "+            if (compiler == null) {", "+                // try to use the compiler specified by build.compiler. Right now we are just going", "+                // to allow Jikes", "+                String buildCompiler = getTask().getProject().getProperty(\"build.compiler\");", "+                if (buildCompiler.equals(\"jikes\")) {", "+                    javaTask.createArg().setValue(\"-compiler\");", "+                    javaTask.createArg().setValue(\"jikes\");", "+                }", "+            }", "+            else {", "+                if (!compiler.equals(DEFAULT_COMPILER)) {", "+                    javaTask.createArg().setValue(\"-compiler\");", "+                    javaTask.createArg().setValue(compiler);", "+                }"]}]}