{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1557f2b1475485fbbeaf6baa24c2b197", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd0c1bf0f474fc637f40a390faca5c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "1764b5fda8fe5b4166269d73a00f975b4c7fb75d", "commitAfterChange": "1e599c6651b3baafbf807462fe32a975b416f1d1", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "     public Object getReference(String key)", "signatureAfterChange": "     public Object getReference(String key)", "diff": ["-            Vector p = new Vector();", "-            PropertyHelper.getPropertyHelper(this).parsePropertyString(", "-                key, new Vector(), p);", "-            if (p.size() == 1) {", "-                log(\"Unresolvable reference \" + key", "-                    + \" might be a misuse of property expansion syntax.\",", "-                    MSG_WARN);", "+            try {", "+                if (PropertyHelper.getPropertyHelper(this).containsProperties(key)) {", "+                    log(\"Unresolvable reference \" + key", "+                            + \" might be a misuse of property expansion syntax.\", MSG_WARN);", "+                }", "+            } catch (Exception e) {", "+                //ignore"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8a9cee30d5cf1bd57a1d15269b1631", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "4cc50d387f2042c897b22a4ae6bff2f556071ffe", "commitAfterChange": "7e01ed9d2d7fa189892aa9d1a3ff24ad75dbf1d7", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "     public Object getReference(String key)", "signatureAfterChange": "     public Object getReference(String key)", "diff": ["-        return resolveIdReference(key, this);", "+        ret = resolveIdReference(key, this);", "+        if (ret == null && !key.equals(MagicNames.REFID_PROPERTY_HELPER)) {", "+            Vector p = new Vector();", "+            PropertyHelper.getPropertyHelper(this).parsePropertyString(", "+                key, new Vector(), p);", "+            if (p.size() == 1) {", "+                log(\"Unresolvable reference \" + key", "+                    + \" might be a misuse of property expansion syntax.\",", "+                    MSG_WARN);", "+            }", "+        }", "+        return ret;"]}]}