{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6da6b7e1f32415bf51050eaa17373380", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea5ff90986b3d2ebd7613395ca51841", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        attributes.log( \"Using jikes compiler\", Project.MSG_VERBOSE );", "+        getLogger().debug( \"Using jikes compiler\" );", "-        Path classpath = new Path( project );", "+        Path classpath = new Path( m_project );", "-        if( bootclasspath != null )", "+        if( m_bootclasspath != null )", "-            classpath.append( bootclasspath );", "+            classpath.append( m_bootclasspath );", "-        classpath.addExtdirs( extdirs );", "+        classpath.addExtdirs( m_extdirs );", "-        if( ( bootclasspath == null ) || ( bootclasspath.size() == 0 ) )", "+        if( ( m_bootclasspath == null ) || ( m_bootclasspath.size() == 0 ) )", "-            includeJavaRuntime = true;", "+            m_includeJavaRuntime = true;", "-            classpath.append( new Path( project, jikesPath ) );", "+            classpath.append( new Path( m_project, jikesPath ) );", "-        if( deprecation == true )", "+        if( m_deprecation == true )", "-        if( destDir != null )", "+        if( m_destDir != null )", "-            cmd.createArgument().setFile( destDir );", "+            cmd.createArgument().setFile( m_destDir );", "-        if( encoding != null )", "+        if( m_encoding != null )", "-            cmd.createArgument().setValue( encoding );", "+            cmd.createArgument().setValue( m_encoding );", "-        if( debug )", "+        if( m_debug )", "-        if( optimize )", "+        if( m_optimize )", "-        if( verbose )", "+        if( m_verbose )", "-        if( depend )", "+        if( m_depend )", "-        String emacsProperty = project.getProperty( \"build.compiler.emacs\" );", "+        String emacsProperty = m_project.getProperty( \"build.compiler.emacs\" );", "-        if( attributes.getNowarn() )", "+        if( m_attributes.getNowarn() )", "-        String pedanticProperty = project.getProperty( \"build.compiler.pedantic\" );", "+        String pedanticProperty = m_project.getProperty( \"build.compiler.pedantic\" );", "-        String fullDependProperty = project.getProperty( \"build.compiler.fulldepend\" );", "+        String fullDependProperty = m_project.getProperty( \"build.compiler.fulldepend\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee3ee49bf3cee8168e57ddf242ed02e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        attributes.log( \"Using jikes compiler\", Project.MSG_VERBOSE );", "+        getLogger().debug( \"Using jikes compiler\" );", "-        Path classpath = new Path( project );", "+        Path classpath = new Path( m_project );", "-        if( bootclasspath != null )", "+        if( m_bootclasspath != null )", "-            classpath.append( bootclasspath );", "+            classpath.append( m_bootclasspath );", "-        classpath.addExtdirs( extdirs );", "+        classpath.addExtdirs( m_extdirs );", "-        if( ( bootclasspath == null ) || ( bootclasspath.size() == 0 ) )", "+        if( ( m_bootclasspath == null ) || ( m_bootclasspath.size() == 0 ) )", "-            includeJavaRuntime = true;", "+            m_includeJavaRuntime = true;", "-            classpath.append( new Path( project, jikesPath ) );", "+            classpath.append( new Path( m_project, jikesPath ) );", "-        if( deprecation == true )", "+        if( m_deprecation == true )", "-        if( destDir != null )", "+        if( m_destDir != null )", "-            cmd.createArgument().setFile( destDir );", "+            cmd.createArgument().setFile( m_destDir );", "-        if( encoding != null )", "+        if( m_encoding != null )", "-            cmd.createArgument().setValue( encoding );", "+            cmd.createArgument().setValue( m_encoding );", "-        if( debug )", "+        if( m_debug )", "-        if( optimize )", "+        if( m_optimize )", "-        if( verbose )", "+        if( m_verbose )", "-        if( depend )", "+        if( m_depend )", "-        String emacsProperty = project.getProperty( \"build.compiler.emacs\" );", "+        String emacsProperty = m_project.getProperty( \"build.compiler.emacs\" );", "-        if( attributes.getNowarn() )", "+        if( m_attributes.getNowarn() )", "-        String pedanticProperty = project.getProperty( \"build.compiler.pedantic\" );", "+        String pedanticProperty = m_project.getProperty( \"build.compiler.pedantic\" );", "-        String fullDependProperty = project.getProperty( \"build.compiler.fulldepend\" );", "+        String fullDependProperty = m_project.getProperty( \"build.compiler.fulldepend\" );"]}]}