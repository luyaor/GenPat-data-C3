{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64b40c724397ea80d3b7744d89cc62dc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e7ed78e3bb7f7192f4b6b027bd349e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     private void process(File inFile, File outFile, Resource stylesheet) throws BuildException", "signatureAfterChange": "     private void process(final File inFile, final File outFile, final Resource stylesheet) throws BuildException", "diff": ["-    private void process(File inFile, File outFile, Resource stylesheet) throws BuildException {", "+    private void process(final File inFile, final File outFile, final Resource stylesheet) throws BuildException {", "-            long styleSheetLastModified = stylesheet.getLastModified();", "+            final long styleSheetLastModified = stylesheet.getLastModified();", "-        } catch (Exception ex) {", "+        } catch (final Exception ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "032549e73d67bcd6c65db25b02142485", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "     protected void configureLiaison(Resource stylesheet) throws BuildException", "signatureAfterChange": "     protected void configureLiaison(final Resource stylesheet) throws BuildException", "diff": ["-    protected void configureLiaison(Resource stylesheet) throws BuildException {", "+    protected void configureLiaison(final Resource stylesheet) throws BuildException {", "-                FileProvider fp =", "+                final FileProvider fp =", "-            for (Param p : params) {", "+            for (final Param p : params) {", "-                    Object evaluatedParam = evaluateParam(p);", "+                    final Object evaluatedParam = evaluateParam(p);", "-        } catch (Exception ex) {", "+        } catch (final Exception ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "053bbfc9145dc445db8013609f1faeab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void deleteSymbolicLink(File link, Task task)         throws IOException", "signatureAfterChange": "     public void deleteSymbolicLink(File link, final Task task)         throws IOException", "diff": ["-    public void deleteSymbolicLink(File link, Task task)", "+    public void deleteSymbolicLink(File link, final Task task)", "-        File target = link.getCanonicalFile();", "+        final File target = link.getCanonicalFile();", "-            File temp = FILE_UTILS.createTempFile(\"symlink\", \".tmp\",", "+            final File temp = FILE_UTILS.createTempFile(\"symlink\", \".tmp\",", "-                } catch (IOException e) {", "+                } catch (final IOException e) {", "-                    } catch (IOException e) {", "+                    } catch (final IOException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b6152e01ed2774c8b5c1a92c1fab32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     protected void definePackage(File container, String className) throws IOException", "signatureAfterChange": "     protected void definePackage(final File container, final String className) throws IOException", "diff": ["-    protected void definePackage(File container, String className) throws IOException {", "-        int classIndex = className.lastIndexOf('.');", "+    protected void definePackage(final File container, final String className) throws IOException {", "+        final int classIndex = className.lastIndexOf('.');", "-        String packageName = className.substring(0, classIndex);", "+        final String packageName = className.substring(0, classIndex);", "-        Manifest manifest = getJarManifest(container);", "+        final Manifest manifest = getJarManifest(container);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cadd5229b1fa6e3455692010885b43e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "a2c15cb080a27a1535b6770628ac0a19655d1885", "commitAfterChange": "0f1c5dd88eba7cb386d894c0bf8aa34c883b4051", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void massagePCLI( File in, File out )         throws FileNotFoundException, IOException", "signatureAfterChange": "     private void massagePCLI( final File in, final File out )         throws FileNotFoundException, IOException", "diff": ["-    private void massagePCLI( File in, File out )", "+    private void massagePCLI( final File in, final File out )", "-        BufferedReader inReader = new BufferedReader( new FileReader( in ) );", "-        BufferedWriter outWriter = new BufferedWriter( new FileWriter( out ) );", "+        final BufferedReader inReader = new BufferedReader( new FileReader( in ) );", "+        final BufferedWriter outWriter = new BufferedWriter( new FileWriter( out ) );", "-            String sNormal = s.replace( '\\\\', '/' );", "+            final String sNormal = s.replace( '\\\\', '/' );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107dd64b1cde53d1cd81510e5d8a1732", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure,                            ClassLoader loader)", "signatureAfterChange": "     public JUnitTestRunner(final JUnitTest test, final boolean haltOnError,                            final boolean filtertrace, final boolean haltOnFailure,                            final ClassLoader loader)", "diff": ["-    public JUnitTestRunner(JUnitTest test, boolean haltOnError,", "-                           boolean filtertrace, boolean haltOnFailure,", "-                           ClassLoader loader) {", "+    public JUnitTestRunner(final JUnitTest test, final boolean haltOnError,", "+                           final boolean filtertrace, final boolean haltOnFailure,", "+                           final ClassLoader loader) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11aa2b0b3da16445037b63e9e991695c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "     protected void fireMessageLogged(Project project, String message,             Throwable throwable, int priority)", "signatureAfterChange": "     protected void fireMessageLogged(final Project project, final String message,             final Throwable throwable, final int priority)", "diff": ["-    protected void fireMessageLogged(Project project, String message,", "-            Throwable throwable, int priority) {", "-        BuildEvent event = new BuildEvent(project);", "+    protected void fireMessageLogged(final Project project, final String message,", "+            final Throwable throwable, final int priority) {", "+        final BuildEvent event = new BuildEvent(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1297c6082f16092bbafbc87bfb0db6f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHBase.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected Session openSession() throws JSchException", "signatureAfterChange": "     protected Session openSession() throws JSchException", "diff": ["-        JSch jsch = new JSch();", "+        final JSch jsch = new JSch();", "-        \t\tpublic boolean isEnabled(int level){", "+        \t\tpublic boolean isEnabled(final int level){", "-        \t\tpublic void log(int level, String message){", "+        \t\tpublic void log(final int level, final String message){", "-        Session session = jsch.getSession(userInfo.getName(), host, port);", "+        final Session session = jsch.getSession(userInfo.getName(), host, port);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cf0c6603d7b6b908e8ad6ca4e4158b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resolver/ApacheCatalogResolver.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parseCatalog(String file)", "signatureAfterChange": "     public void parseCatalog(final String file)", "diff": ["-    public void parseCatalog(String file) {", "+    public void parseCatalog(final String file) {", "-        Catalog catalog = getCatalog();", "+        final Catalog catalog = getCatalog();", "-        ApacheCatalog apacheCatalog = (ApacheCatalog) catalog;", "+        final ApacheCatalog apacheCatalog = (ApacheCatalog) catalog;", "-        } catch (MalformedURLException ex) {", "+        } catch (final MalformedURLException ex) {", "-        } catch (IOException ex) {", "+        } catch (final IOException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16cd213305e56f350350a516c1a17ac5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "signatureAfterChange": "     protected final void addResources(final ResourceCollection rc,                                       final Resource[] resources,                                       final ZipOutputStream zOut)         throws IOException", "diff": ["-    protected final void addResources(ResourceCollection rc,", "-                                      Resource[] resources,", "-                                      ZipOutputStream zOut)", "+    protected final void addResources(final ResourceCollection rc,", "+                                      final Resource[] resources,", "+                                      final ZipOutputStream zOut)", "-            FileProvider fp = resource.as(FileProvider.class);", "+            final FileProvider fp = resource.as(FileProvider.class);", "-                    File f = (fp).getFile();", "+                    final File f = (fp).getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "172c29418e000a871f94d003e4be2b2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "     protected void zipDir(File dir, ZipOutputStream zOut, String vPath,                           int mode, ZipExtraField[] extra)         throws IOException", "signatureAfterChange": "     protected void zipDir(final File dir, final ZipOutputStream zOut, final String vPath,                           final int mode, final ZipExtraField[] extra)         throws IOException", "diff": ["-    protected void zipDir(File dir, ZipOutputStream zOut, String vPath,", "-                          int mode, ZipExtraField[] extra)", "+    protected void zipDir(final File dir, final ZipOutputStream zOut, final String vPath,", "+                          final int mode, final ZipExtraField[] extra)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17705023b0aecd7afb77dc2bff860cbc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private Directory createDirectory(FileSet set)", "signatureAfterChange": "      private Directory createDirectory(final FileSet set)", "diff": ["-    private Directory createDirectory(FileSet set) {", "-        DirectoryScanner scanner = set.getDirectoryScanner(getProject());", "+    private Directory createDirectory(final FileSet set) {", "+        final DirectoryScanner scanner = set.getDirectoryScanner(getProject());", "-        String[] files = scanner.getIncludedFiles();", "+        final String[] files = scanner.getIncludedFiles();", "-                String[] path = Directory.getPath(files[j]);", "+                final String[] path = Directory.getPath(files[j]);", "-                    File file = new File(currentParent, path[i]);", "+                    final File file = new File(currentParent, path[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17df7f5b794fab78da7973f6f4996078", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private URL[] getJarArray (         URL[] libJars, URL[] userJars, URL[] systemJars, File toolsJar)         throws MalformedURLException", "signatureAfterChange": "     private URL[] getJarArray (         final URL[] libJars, final URL[] userJars, final URL[] systemJars, final File toolsJar)         throws MalformedURLException", "diff": ["-        URL[] libJars, URL[] userJars, URL[] systemJars, File toolsJar)", "+        final URL[] libJars, final URL[] userJars, final URL[] systemJars, final File toolsJar)", "-        URL[] jars = new URL[numJars];", "+        final URL[] jars = new URL[numJars];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183cb61db47bed4a1cd9fe0a8f1f5b7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "         ForkedTestConfiguration(boolean filterTrace, boolean haltOnError,                                 boolean haltOnFailure, String errorProperty,                                 String failureProperty)", "signatureAfterChange": "         ForkedTestConfiguration(final boolean filterTrace, final boolean haltOnError,                                 final boolean haltOnFailure, final String errorProperty,                                 final String failureProperty)", "diff": ["-        ForkedTestConfiguration(boolean filterTrace, boolean haltOnError,", "-                                boolean haltOnFailure, String errorProperty,", "-                                String failureProperty) {", "+        ForkedTestConfiguration(final boolean filterTrace, final boolean haltOnError,", "+                                final boolean haltOnFailure, final String errorProperty,", "+                                final String failureProperty) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c821da5a07871b12c5636197ec30cf3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public static synchronized String getAntVersion() throws BuildException", "signatureAfterChange": "     public static synchronized String getAntVersion() throws BuildException", "diff": ["-                Properties props = new Properties();", "-                InputStream in =", "+                final Properties props = new Properties();", "+                final InputStream in =", "-                StringBuffer msg = new StringBuffer();", "+                final StringBuffer msg = new StringBuffer();", "-            } catch (IOException ioe) {", "+            } catch (final IOException ioe) {", "-            } catch (NullPointerException npe) {", "+            } catch (final NullPointerException npe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf0b0532878be0a5b1fd7928dd9ffbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "     protected Collection<List> executeOrQueue(Enumeration<JUnitTest> testList,                                         boolean runIndividual)", "signatureAfterChange": "     protected Collection<List> executeOrQueue(final Enumeration<JUnitTest> testList,                                         final boolean runIndividual)", "diff": ["-    protected Collection<List> executeOrQueue(Enumeration<JUnitTest> testList,", "-                                        boolean runIndividual) {", "-        Map<ForkedTestConfiguration, List> testConfigurations = new HashMap<ForkedTestConfiguration, List>();", "+    protected Collection<List> executeOrQueue(final Enumeration<JUnitTest> testList,", "+                                        final boolean runIndividual) {", "+        final Map<ForkedTestConfiguration, List> testConfigurations = new HashMap<ForkedTestConfiguration, List>();", "-            JUnitTest test = testList.nextElement();", "+            final JUnitTest test = testList.nextElement();", "-                    ForkedTestConfiguration c =", "+                    final ForkedTestConfiguration c ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c94181148a2acdba22340fb5dc02eb3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/AbstractSshMessage.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void logStats(long timeStarted,                              long timeEnded,                              long totalLength)", "signatureAfterChange": "     protected void logStats(final long timeStarted,                              final long timeEnded,                              final long totalLength)", "diff": ["-    protected void logStats(long timeStarted,", "-                             long timeEnded,", "-                             long totalLength) {", "-        double duration = (timeEnded - timeStarted) / ONE_SECOND;", "-        NumberFormat format = NumberFormat.getNumberInstance();", "+    protected void logStats(final long timeStarted,", "+                             final long timeEnded,", "+                             final long totalLength) {", "+        final double duration = (timeEnded - timeStarted) / ONE_SECOND;", "+        final NumberFormat format = NumberFormat.getNumberInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302cdcef5e2ed284ebb0e619d3eaff09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws IOException, JSchException", "signatureAfterChange": "     public void execute() throws IOException, JSchException", "diff": ["-        ChannelSftp channel = openSftpChannel();", "+        final ChannelSftp channel = openSftpChannel();", "-                SftpATTRS attrs = channel.stat(remoteFile);", "+                final SftpATTRS attrs = channel.stat(remoteFile);", "-            } catch (SftpException ee) {", "+            } catch (final SftpException ee) {", "-        } catch (SftpException e) {", "-            JSchException schException = new JSchException(\"Could not get '\"+ remoteFile", "+        } catch (final SftpException e) {", "+            final JSchException schException = new JSchException(\"Could not get '\"+ remoteFile"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32197e4bff7caaa45dc2b1fe5baa2d90", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "     protected File getOutput(FormatterElement fe, JUnitTest test)", "signatureAfterChange": "     protected File getOutput(final FormatterElement fe, final JUnitTest test)", "diff": ["-    protected File getOutput(FormatterElement fe, JUnitTest test) {", "+    protected File getOutput(final FormatterElement fe, final JUnitTest test) {", "-            String filename = base + fe.getExtension();", "-            File destFile = new File(test.getTodir(), filename);", "-            String absFilename = destFile.getAbsolutePath();", "+            final String filename = base + fe.getExtension();", "+            final File destFile = new File(test.getTodir(), filename);", "+            final String absFilename = destFile.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b86dbabfd6733ecc3bbf90260c5d63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static boolean contentEquals(Resource r1, Resource r2, boolean text) throws IOException", "signatureAfterChange": "     public static boolean contentEquals(final Resource r1, final Resource r2, final boolean text) throws IOException", "diff": ["-    public static boolean contentEquals(Resource r1, Resource r2, boolean text) throws IOException {", "+    public static boolean contentEquals(final Resource r1, final Resource r2, final boolean text) throws IOException {", "-            long s1 = r1.getSize();", "-            long s2 = r2.getSize();", "+            final long s1 = r1.getSize();", "+            final long s2 = r2.getSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "386641362d7291e8bc2333d086d44bfe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void doMultipleTransfer() throws IOException, JSchException", "signatureAfterChange": "      private void doMultipleTransfer() throws IOException, JSchException", "diff": ["-        ChannelSftp channel = openSftpChannel();", "+        final ChannelSftp channel = openSftpChannel();", "-                } catch (SftpException e) {", "+                } catch (final SftpException e) {", "-            } catch (SftpException e) {", "+            } catch (final SftpException e) {", "-                for (Iterator i = directoryList.iterator(); i.hasNext();) {", "+                for (final Iterator i = directoryList.iterator(); i.hasNext();) {", "-            } catch (SftpException e) {", "+            } catch (final SftpException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47916cffca4151c79b18d2bb648ca0ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void loadPropertyFiles()", "signatureAfterChange": "     private void loadPropertyFiles()", "diff": ["-        for (String filename : propertyFiles) {", "-            Properties props = new Properties();", "+        for (final String filename : propertyFiles) {", "+            final Properties props = new Properties();", "-            } catch (IOException e) {", "+            } catch (final IOException e) {", "-            Enumeration<?> propertyNames = props.propertyNames();", "+            final Enumeration<?> propertyNames = props.propertyNames();", "-                String name = (String) propertyNames.nextElement();", "+                final String name = (String) propertyNames.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bab087504219539588be6b5139f1130", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public ZipFile(File f, String encoding, boolean useUnicodeExtraFields)         throws IOException", "signatureAfterChange": "     public ZipFile(final File f, final String encoding, final boolean useUnicodeExtraFields)         throws IOException", "diff": ["-    public ZipFile(File f, String encoding, boolean useUnicodeExtraFields)", "+    public ZipFile(final File f, final String encoding, final boolean useUnicodeExtraFields)", "-            Map<ZipEntry, NameAndComment> entriesWithoutUTF8Flag =", "+            final Map<ZipEntry, NameAndComment> entriesWithoutUTF8Flag =", "-                } catch (IOException e2) {", "+                } catch (final IOException e2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a6f595cd7e0ed21e8d5a2ee45e7c53a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void writeToFile(String from, boolean append, File to)         throws IOException", "signatureAfterChange": "     private void writeToFile(final String from, final boolean append, final File to)         throws IOException", "diff": ["-    private void writeToFile(String from, boolean append, File to)", "+    private void writeToFile(final String from, final boolean append, final File to)", "-            StringReader in = new StringReader(from);", "-            char[] buffer = new char[BUFFER_SIZE];", "+            final StringReader in = new StringReader(from);", "+            final char[] buffer = new char[BUFFER_SIZE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf1649681f10bdd36cb770fa9f8699a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "     private void processGroupFilesets()", "signatureAfterChange": "     private void processGroupFilesets()", "diff": ["-            FileSet fs = groupfilesets.elementAt(i);", "-            FileScanner scanner = fs.getDirectoryScanner(getProject());", "-            String[] files = scanner.getIncludedFiles();", "-            File basedir = scanner.getBasedir();", "+            final FileSet fs = groupfilesets.elementAt(i);", "+            final FileScanner scanner = fs.getDirectoryScanner(getProject());", "+            final String[] files = scanner.getIncludedFiles();", "+            final File basedir = scanner.getBasedir();", "-                ZipFileSet zf = new ZipFileSet();", "+                final ZipFileSet zf = new ZipFileSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e33a41a94b54e78f6c81d41d0bfbb2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "     protected void actOnTestResult(int exitValue, boolean wasKilled,                                    JUnitTest test, String name)", "signatureAfterChange": "     protected void actOnTestResult(final int exitValue, final boolean wasKilled,                                    final JUnitTest test, final String name)", "diff": ["-    protected void actOnTestResult(int exitValue, boolean wasKilled,", "-                                   JUnitTest test, String name) {", "-        TestResultHolder t = new TestResultHolder();", "+    protected void actOnTestResult(final int exitValue, final boolean wasKilled,", "+                                   final JUnitTest test, final String name) {", "+        final TestResultHolder t = new TestResultHolder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80585062fb1b1332aff2dd24aac1548f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void createTransformer() throws Exception", "signatureAfterChange": "     private void createTransformer() throws Exception", "diff": ["-                    Class traceSupport =", "+                    final Class traceSupport =", "-                    XSLTTraceSupport ts =", "+                    final XSLTTraceSupport ts =", "-                } catch (Exception e) {", "-                    String msg = \"Failed to enable tracing because of \" + e;", "+                } catch (final Exception e) {", "+                    final String msg = \"Failed to enable tracing because of \" + e;", "-                String msg = \"Not enabling trace support for transformer\"", "+                final String msg = \"Not enabling trace support for transformer\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8272f1442bbf315011b4d7158a0ad6df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected static String[] getFileNames(FileSet fs)", "signatureAfterChange": "     protected static String[] getFileNames(final FileSet fs)", "diff": ["-    protected static String[] getFileNames(FileSet fs) {", "-        DirectoryScanner ds = fs.getDirectoryScanner(fs.getProject());", "-        String[] directories = ds.getIncludedDirectories();", "-        String[] filesPerSe = ds.getIncludedFiles();", "-        String[] files = new String [directories.length + filesPerSe.length];", "+    protected static String[] getFileNames(final FileSet fs) {", "+        final DirectoryScanner ds = fs.getDirectoryScanner(fs.getProject());", "+        final String[] directories = ds.getIncludedDirectories();", "+        final String[] filesPerSe = ds.getIncludedFiles();", "+        final String[] files = new String [directories.length + filesPerSe.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5e6714c731b4ba260036a3dbe4d34d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ScpFromMessageBySftp(boolean verbose,                                 Session session,                                 String aRemoteFile,                                 File aLocalFile,                                 boolean recursive)", "signatureAfterChange": "     public ScpFromMessageBySftp(final boolean verbose,                                 final Session session,                                 final String aRemoteFile,                                 final File aLocalFile,                                 final boolean recursive)", "diff": ["-    public ScpFromMessageBySftp(boolean verbose,", "-                                Session session,", "-                                String aRemoteFile,", "-                                File aLocalFile,", "-                                boolean recursive) {", "+    public ScpFromMessageBySftp(final boolean verbose,", "+                                final Session session,", "+                                final String aRemoteFile,", "+                                final File aLocalFile,", "+                                final boolean recursive) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c065b037c1a0fb919655805236ec64a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "     protected void fireMessageLogged(Target target, String message,             Throwable throwable, int priority)", "signatureAfterChange": "     protected void fireMessageLogged(final Target target, final String message,             final Throwable throwable, final int priority)", "diff": ["-    protected void fireMessageLogged(Target target, String message,", "-            Throwable throwable, int priority) {", "-        BuildEvent event = new BuildEvent(target);", "+    protected void fireMessageLogged(final Target target, final String message,", "+            final Throwable throwable, final int priority) {", "+        final BuildEvent event = new BuildEvent(target);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd90a10a870b5942e21741a90fa9e52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "     protected void zipFile(File file, ZipOutputStream zOut, String vPath,                            int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(final File file, final ZipOutputStream zOut, final String vPath,                            final int mode)         throws IOException", "diff": ["-    protected void zipFile(File file, ZipOutputStream zOut, String vPath,", "-                           int mode)", "+    protected void zipFile(final File file, final ZipOutputStream zOut, final String vPath,", "+                           final int mode)", "-        FileInputStream fIn = new FileInputStream(file);", "+        final FileInputStream fIn = new FileInputStream(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e41f25f73b265da81e550f6417580d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void sendDirectory(ChannelSftp channel,                                Directory current)         throws IOException, SftpException", "signatureAfterChange": "      private void sendDirectory(final ChannelSftp channel,                                final Directory current)         throws IOException, SftpException", "diff": ["-    private void sendDirectory(ChannelSftp channel,", "-                               Directory current)", "+    private void sendDirectory(final ChannelSftp channel,", "+                               final Directory current)", "-        for (Iterator fileIt = current.filesIterator(); fileIt.hasNext();) {", "+        for (final Iterator fileIt = current.filesIterator(); fileIt.hasNext();) {", "-        for (Iterator dirIt = current.directoryIterator(); dirIt.hasNext();) {", "-            Directory dir = (Directory) dirIt.next();", "+        for (final Iterator dirIt = current.directoryIterator(); dirIt.hasNext();) {", "+            final Directory dir = (Directory) dirIt.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "962533c42542963f1c42a37c658b0d82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure,                            boolean showOutput)", "signatureAfterChange": "     public JUnitTestRunner(final JUnitTest test, final boolean haltOnError,                            final boolean filtertrace, final boolean haltOnFailure,                            final boolean showOutput)", "diff": ["-    public JUnitTestRunner(JUnitTest test, boolean haltOnError,", "-                           boolean filtertrace, boolean haltOnFailure,", "-                           boolean showOutput) {", "+    public JUnitTestRunner(final JUnitTest test, final boolean haltOnError,", "+                           final boolean filtertrace, final boolean haltOnFailure,", "+                           final boolean showOutput) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac9a1005f323a14d89822c544acb6708", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private TransformerFactory getFactory() throws BuildException", "signatureAfterChange": "     private TransformerFactory getFactory() throws BuildException", "diff": ["-                } catch (ClassNotFoundException cnfe) {", "-                    String msg = \"Failed to load \" + factoryName", "+                } catch (final ClassNotFoundException cnfe) {", "+                    final String msg = \"Failed to load \" + factoryName", "-            } catch (Exception e) {", "+            } catch (final Exception e) {", "-            Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "+            final Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "-        } catch (Exception x) {", "+        } catch (final Exception x) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2dd62398936542ae81b08e86cb08419", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "     private void doGroups(Commandline toExecute)", "signatureAfterChange": "     private void doGroups(final Commandline toExecute)", "diff": ["-    private void doGroups(Commandline toExecute) {", "+    private void doGroups(final Commandline toExecute) {", "-            for (Enumeration<GroupArgument> e = groups.elements(); e.hasMoreElements();) {", "-                GroupArgument ga = e.nextElement();", "-                String title = ga.getTitle();", "-                String packages = ga.getPackages();", "+            for (final Enumeration<GroupArgument> e = groups.elements(); e.hasMoreElements();) {", "+                final GroupArgument ga = e.nextElement();", "+                final String title = ga.getTitle();", "+                final String packages = ga.getPackages();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b604d3d2731dd76ca3baa30154bd9f49", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/UriParser.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected static String extractScheme( String uri, StringBuffer buffer )", "signatureAfterChange": "     protected static String extractScheme( final String uri, final StringBuffer buffer )", "diff": ["-    protected static String extractScheme( String uri, StringBuffer buffer )", "+    protected static String extractScheme( final String uri, final StringBuffer buffer )", "-        int maxPos = uri.length();", "+        final int maxPos = uri.length();", "-            char ch = uri.charAt( pos );", "+            final char ch = uri.charAt( pos );", "-                String scheme = uri.substring( 0, pos );", "+                final String scheme = uri.substring( 0, pos );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec357c4be2b41d0fae7f19780c5d5c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "         public Object create()", "signatureAfterChange": "         public Object create()", "diff": ["-                ComponentHelper helper = ComponentHelper.getComponentHelper(project);", "+                final ComponentHelper helper = ComponentHelper.getComponentHelper(project);", "-            } catch (IllegalAccessException ex) {", "+            } catch (final IllegalAccessException ex) {", "-            } catch (InstantiationException ex) {", "+            } catch (final InstantiationException ex) {", "-            } catch (IllegalArgumentException ex) {", "+            } catch (final IllegalArgumentException ex) {", "-            } catch (InvocationTargetException ex) {", "+            } catch (final InvocationTargetException ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf82b35fa744798623047c2fdf8ae35c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaOroMatcher.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Vector getGroups(String input, int options)         throws BuildException", "signatureAfterChange": "     public Vector getGroups(final String input, final int options)         throws BuildException", "diff": ["-    public Vector getGroups(String input, int options)", "+    public Vector getGroups(final String input, final int options)", "-        Vector v = new Vector();", "-        MatchResult mr = matcher.getMatch();", "-        int cnt = mr.groups();", "+        final Vector v = new Vector();", "+        final MatchResult mr = matcher.getMatch();", "+        final int cnt = mr.groups();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f4159ae29292327f867c4780441e03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "a2c15cb080a27a1535b6770628ac0a19655d1885", "commitAfterChange": "0f1c5dd88eba7cb386d894c0bf8aa34c883b4051", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void massagePCLI( File in, File out )         throws FileNotFoundException, IOException", "signatureAfterChange": "     private void massagePCLI( final File in, final File out )         throws FileNotFoundException, IOException", "diff": ["-    private void massagePCLI( File in, File out )", "+    private void massagePCLI( final File in, final File out )", "-        BufferedReader inReader = new BufferedReader( new FileReader( in ) );", "-        BufferedWriter outWriter = new BufferedWriter( new FileWriter( out ) );", "+        final BufferedReader inReader = new BufferedReader( new FileReader( in ) );", "+        final BufferedWriter outWriter = new BufferedWriter( new FileWriter( out ) );", "-            String sNormal = s.replace( '\\\\', '/' );", "+            final String sNormal = s.replace( '\\\\', '/' );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75d0ff04d65174f44d197f3a349a4ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private static void copyUsingStreams(Resource source, Resource dest,                                          boolean append, Project project)         throws IOException", "signatureAfterChange": "      private static void copyUsingStreams(final Resource source, final Resource dest,                                          final boolean append, final Project project)         throws IOException", "diff": ["-    private static void copyUsingStreams(Resource source, Resource dest,", "-                                         boolean append, Project project)", "+    private static void copyUsingStreams(final Resource source, final Resource dest,", "+                                         final boolean append, final Project project)", "-            byte[] buffer = new byte[FileUtils.BUF_SIZE];", "+            final byte[] buffer = new byte[FileUtils.BUF_SIZE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca49a5f0fbc415302fc53fc67fa5ec07", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private static void copyUsingFileChannels(File sourceFile,                                               File destFile)         throws IOException", "signatureAfterChange": "      private static void copyUsingFileChannels(final File sourceFile,                                               final File destFile)         throws IOException", "diff": ["-    private static void copyUsingFileChannels(File sourceFile,", "-                                              File destFile)", "+    private static void copyUsingFileChannels(final File sourceFile,", "+                                              final File destFile)", "-        File parent = destFile.getParentFile();", "+        final File parent = destFile.getParentFile();", "-                    ", "+", "-                ", "+", "-            long count = srcChannel.size();", "+            final long count = srcChannel.size();", "-                long chunk = Math.min(MAX_IO_CHUNK_SIZE, count - position);", "+                final long chunk = Math.min(MAX_IO_CHUNK_SIZE, count - position);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac906196eeb77a4b2a83d4410cace89", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void doMultipleTransfer() throws IOException, JSchException", "signatureAfterChange": "      private void doMultipleTransfer() throws IOException, JSchException", "diff": ["-        Channel channel = openExecChannel(\"scp -r -d -t \" + remotePath);", "+        final Channel channel = openExecChannel(\"scp -r -d -t \" + remotePath);", "-            OutputStream out = channel.getOutputStream();", "-            InputStream in = channel.getInputStream();", "+            final OutputStream out = channel.getOutputStream();", "+            final InputStream in = channel.getInputStream();", "-            for (Iterator i = directoryList.iterator(); i.hasNext();) {", "-                Directory current = (Directory) i.next();", "+            for (final Iterator i = directoryList.iterator(); i.hasNext();) {", "+                final Directory current = (Directory) i.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce733e010375feccd04a60e269fc669", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private boolean isParentFirst(String resourceName)", "signatureAfterChange": "     private boolean isParentFirst(final String resourceName)", "diff": ["-    private boolean isParentFirst(String resourceName) {", "+    private boolean isParentFirst(final String resourceName) {", "-        for (Enumeration<String> e = systemPackages.elements(); e.hasMoreElements();) {", "-            String packageName = e.nextElement();", "+        for (final Enumeration<String> e = systemPackages.elements(); e.hasMoreElements();) {", "+            final String packageName = e.nextElement();", "-        for (Enumeration<String> e = loaderPackages.elements(); e.hasMoreElements();) {", "-            String packageName = e.nextElement();", "+        for (final Enumeration<String> e = loaderPackages.elements(); e.hasMoreElements();) {", "+            final String packageName = e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd19517f822d88d3faf01e12920a667e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      private void accountForIncludedDir(TokenizedPath name,                                        File file, boolean fast,                                        String[] children,                                        LinkedList<String> directoryNamesFollowed)", "signatureAfterChange": "      private void accountForIncludedDir(final TokenizedPath name,                                        final File file, final boolean fast,                                        final String[] children,                                        final LinkedList<String> directoryNamesFollowed)", "diff": ["-    private void accountForIncludedDir(TokenizedPath name,", "-                                       File file, boolean fast,", "-                                       String[] children,", "-                                       LinkedList<String> directoryNamesFollowed) {", "+    private void accountForIncludedDir(final TokenizedPath name,", "+                                       final File file, final boolean fast,", "+                                       final String[] children,", "+                                       final LinkedList<String> directoryNamesFollowed) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9c448d1b0a375914def0b8e6dba8fe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void slowScan()", "signatureAfterChange": "     protected void slowScan()", "diff": ["-                    } catch (InterruptedException e) {", "+                    } catch (final InterruptedException e) {", "-                boolean nullIncludes = (includes == null);", "+                final boolean nullIncludes = (includes == null);", "-                boolean nullExcludes = (excludes == null);", "+                final boolean nullExcludes = (excludes == null);", "-                String[] excl = new String[dirsExcluded.size()];", "+                final String[] excl = new String[dirsExcluded.size()];", "-                String[] notIncl = new String[dirsNotIncluded.size()];", "+                final String[] notIncl = new String[dirsNotIncluded.size()];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d169fdaebfc4662026a0537511f40a46", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "     protected void fireMessageLogged(Task task, String message,             Throwable throwable, int priority)", "signatureAfterChange": "     protected void fireMessageLogged(final Task task, final String message,             final Throwable throwable, final int priority)", "diff": ["-    protected void fireMessageLogged(Task task, String message,", "-            Throwable throwable, int priority) {", "-        BuildEvent event = new BuildEvent(task);", "+    protected void fireMessageLogged(final Task task, final String message,", "+            final Throwable throwable, final int priority) {", "+        final BuildEvent event = new BuildEvent(task);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b672f6ca6aa53d8481028f9b12546d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Deprecated \tpublic boolean doGet(int logLevel, DownloadProgress progress)             throws IOException", "signatureAfterChange": "     @Deprecated \tpublic boolean doGet(final int logLevel, final DownloadProgress progress)             throws IOException", "diff": ["-\tpublic boolean doGet(int logLevel, DownloadProgress progress)", "+\tpublic boolean doGet(final int logLevel, final DownloadProgress progress)", "-        for (Resource r : sources) {", "-            URLProvider up = r.as(URLProvider.class);", "-            URL source = up.getURL();", "+        for (final Resource r : sources) {", "+            final URLProvider up = r.as(URLProvider.class);", "+            final URL source = up.getURL();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d59df7af47088af597a39242a32fc771", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Xalan2TraceSupport.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void configureTrace(Transformer t,                                XSLTProcess.TraceConfiguration conf)", "signatureAfterChange": "     public void configureTrace(final Transformer t,                                final XSLTProcess.TraceConfiguration conf)", "diff": ["-    public void configureTrace(Transformer t,", "-                               XSLTProcess.TraceConfiguration conf) {", "+    public void configureTrace(final Transformer t,", "+                               final XSLTProcess.TraceConfiguration conf) {", "-            PrintWriter w = new PrintWriter(conf.getOutputStream(), false);", "-            PrintTraceListener tl = new PrintTraceListener(w);", "+            final PrintWriter w = new PrintWriter(conf.getOutputStream(), false);", "+            final PrintTraceListener tl = new PrintTraceListener(w);", "-            } catch (TooManyListenersException tml) {", "+            } catch (final TooManyListenersException tml) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e475766ed89039a0cf7992f6e785fac7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void scan(File fromDir, File toDir, String[] files,                         String[] dirs)", "signatureAfterChange": "     protected void scan(final File fromDir, final File toDir, final String[] files,                         final String[] dirs)", "diff": ["-    protected void scan(File fromDir, File toDir, String[] files,", "-                        String[] dirs) {", "-        FileNameMapper mapper = getMapper();", "+    protected void scan(final File fromDir, final File toDir, final String[] files,", "+                        final String[] dirs) {", "+        final FileNameMapper mapper = getMapper();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a763630fbfac8b28b2393377058883", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "     private void checkForkedPath(CommandlineJava cmd)", "signatureAfterChange": "     private void checkForkedPath(final CommandlineJava cmd)", "diff": ["-    private void checkForkedPath(CommandlineJava cmd) {", "+    private void checkForkedPath(final CommandlineJava cmd) {", "-            String projectResourceName =", "+            final String projectResourceName =", "-                for (Enumeration e = loader.getResources(projectResourceName);", "+                for (final Enumeration e = loader.getResources(projectResourceName);", "-                    URL current = (URL) e.nextElement();", "+                    final URL current = (URL) e.nextElement();", "-            } catch (Exception ex) {", "+            } catch (final Exception ex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec984d33841de03c5edb5f722df73b0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private void mergeExtraFields(ZipExtraField[] f, boolean local)         throws ZipException", "signatureAfterChange": "     private void mergeExtraFields(final ZipExtraField[] f, final boolean local)         throws ZipException", "diff": ["-    private void mergeExtraFields(ZipExtraField[] f, boolean local)", "+    private void mergeExtraFields(final ZipExtraField[] f, final boolean local)", "-            for (ZipExtraField element : f) {", "+            for (final ZipExtraField element : f) {", "-                        byte[] b = element.getLocalFileDataData();", "+                        final byte[] b = element.getLocalFileDataData();", "-                        byte[] b = element.getCentralDirectoryData();", "+                        final byte[] b = element.getCentralDirectoryData();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee86400c650bccb64aac908e1b94eec7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private void errorStreams()", "signatureAfterChange": "      private void errorStreams()", "diff": ["-            String logHead = new StringBuffer(\"Error \").append(", "+            final String logHead = new StringBuffer(\"Error \").append(", "-            long funnelTimeout = 0L;", "-            OutputStreamFunneler funneler = new OutputStreamFunneler(", "+            final long funnelTimeout = 0L;", "+            final OutputStreamFunneler funneler = new OutputStreamFunneler(", "-            } catch (IOException eyeOhEx) {", "+            } catch (final IOException eyeOhEx) {", "-            OutputStream keepAliveError = new KeepAliveOutputStream(errorBaos);", "+            final OutputStream keepAliveError = new KeepAliveOutputStream(errorBaos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5c9167c1156ebc7cfe4754cbbb6234e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "     private void addSourceFiles(Vector<SourceFile> sf)", "signatureAfterChange": "     private void addSourceFiles(final Vector<SourceFile> sf)", "diff": ["-    private void addSourceFiles(Vector<SourceFile> sf) {", "-        Iterator<ResourceCollection> e = nestedSourceFiles.iterator();", "+    private void addSourceFiles(final Vector<SourceFile> sf) {", "+        final Iterator<ResourceCollection> e = nestedSourceFiles.iterator();", "-                FileSet fs = (FileSet) rc;", "+                final FileSet fs = (FileSet) rc;", "-                    FileSet fs2 = (FileSet) fs.clone();", "+                    final FileSet fs2 = (FileSet) fs.clone();", "-            for (Resource r : rc) {", "+            for (final Resource r : rc) {"]}]}