{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "444d50b55b14b0a25b3c9857af2f5fd6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a3a745f7e0b49778b00bb97a586c5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Antidote.java", "commitBeforeChange": "a18fbb4649bfe9577aa4648d3ab2cfb7712453e8", "commitAfterChange": "c70641243c667093d23f689c7c28866fa661b1af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Antidote(AppContext context)", "signatureAfterChange": "     public Antidote(AppContext context)", "diff": ["-        _console = new Console(_context);", "-", "-", "+        // This is necessary because, frankly, the JSplitPane widget", "+        // sucks, and doesn't provide enought (working) control over the", "+        // initial size of it's subcomponents. setDividerLocation(double)", "+        // doesn't seem to work until after the widget is visible.", "+        splitter.setPreferredSize(new Dimension(500, 300));", "-        add(BorderLayout.CENTER, splitter);", "+        // Top bottom splitter. ", "+        JSplitPane splitter2 = new JSplitPane(JSplitPane.VERTICAL_SPLIT);", "+        splitter2.setOneTouchExpandable(true);", "-        add(BorderLayout.SOUTH, _console);", "+        splitter2.add(JSplitPane.TOP, splitter);", "+        splitter2.add(JSplitPane.BOTTOM, populateEditors(\"bottom\"));", "+        add(BorderLayout.CENTER, splitter2);", "+        splitter2.resetToPreferredSizes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae4fff7466953054593bb7be7a86dac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/CommandlineJavaTest.java", "commitBeforeChange": "56d0ca9a293eeb55c459118ccfd60e3fbca258a3", "commitAfterChange": "08c47d7e6286329be7f1ffabcbc3ddf460602c70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testSysproperties()", "signatureAfterChange": "      public void testSysproperties()", "diff": ["+", "+        project.setProperty(\"key2\", \"value2\");", "+        PropertySet ps = new PropertySet();", "+        ps.setProject(project);", "+        ps.appendName(\"key2\");", "+        c.addSyspropertyset(ps);", "+", "+            assertNotNull(System.getProperty(\"key2\"));", "+            assertEquals(\"value2\", System.getProperty(\"key2\"));", "+        assertNull(System.getProperty(\"key2\"));"]}]}