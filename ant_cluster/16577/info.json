{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cefa0c2fd814ce60432dd937beb475d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e7fcfa9b8656b9a141a78d9ed097eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ClasspathUtils.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Object newInstance(         String className,         ClassLoader userDefinedLoader)", "signatureAfterChange": "     public static Object newInstance(             String className,             ClassLoader userDefinedLoader)", "diff": ["+            String className,", "+            ClassLoader userDefinedLoader) {", "+        return newInstance(className, userDefinedLoader, Object.class);", "+    }", "-        ClassLoader userDefinedLoader) {", "-            Class clazz = userDefinedLoader.loadClass(className);", "-                \"Class \"", "-                    + className", "-                    + \" not found by the specific classLoader.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848082271ee4843fc38162bba5b2d880", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "af007ba13234afc51a113ee612e6abad4642cad1", "commitAfterChange": "81b65c0eaa7fff0b658e28269907a36c3a83fc6b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static CompilerAdapter resolveClassName(String className)         throws BuildException", "signatureAfterChange": "     private static CompilerAdapter resolveClassName(String className)         throws BuildException", "diff": ["-        try {", "-            Class c = Class.forName(className);", "-            Object o = c.newInstance();", "-            return (CompilerAdapter) o;", "-        } catch (ClassNotFoundException cnfe) {", "-            throw new BuildException(\"Compiler Adapter '\" + className", "-                    + \"' can\\'t be found.\", cnfe);", "-        } catch (ClassCastException cce) {", "-            throw new BuildException(className + \" isn\\'t the classname of \"", "-                    + \"a compiler adapter.\", cce);", "-        } catch (Throwable t) {", "-            // for all other possibilities", "-            throw new BuildException(\"Compiler Adapter \" + className", "-                    + \" caused an interesting exception.\", t);", "-        }", "+        return (CompilerAdapter) ClasspathUtils.newInstance(className,", "+                CompilerAdapterFactory.class.getClassLoader(),", "+                CompilerAdapter.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93b10dfd4fd064644f289c97242bd539", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "cfbc62561bfd4f8a6f734dc8b747e6792625a05f", "commitAfterChange": "4141a91af169f9d36ca98a2da86350ef31b26693", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void createStreams()", "signatureAfterChange": "     public void createStreams()", "diff": ["-                try {", "-                        = new FileOutputStream(out.getAbsolutePath(), append);", "+                        = new DelayedFileOutputStream(out, append);", "-                } catch (FileNotFoundException fne) {", "-                    throw new BuildException(\"Cannot write to \" + out, fne);", "-                } catch (IOException ioe) {", "-                    throw new BuildException(\"Cannot write to \" + out, ioe);", "-                }", "-            try {", "-                    = new FileOutputStream(error.getAbsolutePath(), append);", "+                    = new DelayedFileOutputStream(error, append);", "-            } catch (FileNotFoundException fne) {", "-                throw new BuildException(\"Cannot write to \" + error, fne);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Cannot write to \" + error, ioe);", "-            }"]}]}