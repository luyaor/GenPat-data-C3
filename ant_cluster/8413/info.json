{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5deb6d211749c3c7b0abd019601901a2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e612f77c92863e8095adfd83d1ab82", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/WLJspc.java", "commitBeforeChange": "a989b254f04d33e5bc2370b62121bd56830ac2f1", "commitAfterChange": "3fee832d2527f3b952683181980a446b44f5e5bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        Java helperTask = null;//(Java)getProject().createTask( \"java\" );", "-        helperTask.setFork( true );", "-        helperTask.setClassname( \"weblogic.jspc\" );", "-            arg = \"\";", "-            for( int x = 0; x < 12; x++ )", "-            {", "-                arg += \" \" + args[ x ];", "-            }", "-", "-            System.out.println( \"arg = \" + arg );", "-", "-            //helperTask.clearArgs();", "-            helperTask.addArg( new Argument( arg ) );", "-            helperTask.addClasspath( compileClasspath );", "-            helperTask.executeJava();", "+            ExecuteJava helperTask = new ExecuteJava();", "+            helperTask.setFork( true );", "+            helperTask.setClassName( \"weblogic.jspc\" );", "+            helperTask.getArguments().addArguments( args );", "+            helperTask.getClassPath().addPath( compileClasspath );", "+            helperTask.execute( getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd752e7540d264452950e9d076bb35e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "e30f1cdbcc2a30a4012e2cf2219f3c8140420d5b", "commitAfterChange": "c692a67a30db602f835f31f127862ed581779f5e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean dependsOn(String other)", "signatureAfterChange": "     public boolean dependsOn(String other)", "diff": ["-        if (getProject() != null) {", "-            List l = getProject().topoSort(getName(),", "-                                           getProject().getTargets());", "-            int myIdx = l.indexOf(this);", "-            int otherIdx = l.indexOf(getProject().getTargets().get(other));", "-            return myIdx >= otherIdx;", "-        }", "-        return false;", "+        Project p = getProject();", "+        Hashtable t = (p == null) ? null : p.getTargets();", "+        return (p != null && p.topoSort(getName(), t, false).contains(t.get(other)));"]}]}