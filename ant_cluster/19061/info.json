{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5cc618a2e3120f0ed06e02ea7242f14", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d79aa0dac17c1d59ba30640dc5644b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "d5ed2401cf27495042f365a3d6a41270c4cb937e", "commitAfterChange": "1d677212cc1f9d5b494e87939453a69e300a9056", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static CommandLauncher createShellLauncher()", "diff": ["+    private static CommandLauncher createShellLauncher()", "+    {", "+        CommandLauncher launcher = null;", "+                launcher = new MacCommandLauncher();", "+                launcher = new WinNTCommandLauncher();", "+                final String osname =", "+                    launcher = new WinNTCommandLauncher();", "+                    final String script = resolveCommand( \"bin/antRun.bat\" );", "+                    launcher = new ScriptCommandLauncher( script );", "+                final String perlScript = resolveCommand( \"bin/antRun.pl\" );", "+                final String[] script = new String[]{\"perl\", perlScript};", "+                launcher = new ScriptCommandLauncher( script );", "+                final String script = resolveCommand( \"bin/antRun\" );", "+                launcher = new ScriptCommandLauncher( script );", "+        catch( final TaskException te )", "+            te.printStackTrace();", "+        return launcher;", "+    }", "-", "-    private static String[] getProcEnvCommand()", "-    {", "-        if( Os.isFamily( \"os/2\" ) )", "-        {", "-            // OS/2 - use same mechanism as Windows 2000", "-            // Not sure", "-            String[] cmd = {\"cmd\", \"/c\", \"set\"};", "-            return cmd;", "-        }", "-        else if( Os.isFamily( \"windows\" ) )", "-        {", "-            String osname =", "-                System.getProperty( \"os.name\" ).toLowerCase( Locale.US );", "-            // Determine if we're running under 2000/NT or 98/95", "-            if( osname.indexOf( \"nt\" ) >= 0 || osname.indexOf( \"2000\" ) >= 0 )", "-            {", "-                // Windows 2000/NT", "-                String[] cmd = {\"cmd\", \"/c\", \"set\"};", "-                return cmd;", "-            }", "-            else", "-            {", "-                // Windows 98/95 - need to use an auxiliary script", "-                String[] cmd = {\"command.com\", \"/c\", \"set\"};", "-                return cmd;", "-            }", "-        }", "-        else if( Os.isFamily( \"unix\" ) )", "-        {", "-            // Generic UNIX", "-            // Alternatively one could use: /bin/sh -c env", "-            String[] cmd = {\"/usr/bin/env\"};", "-            return cmd;", "-        }", "-        else if( Os.isFamily( \"netware\" ) )", "-        {", "-            String[] cmd = {\"env\"};", "-            return cmd;", "-        }", "-        else", "-        {", "-            // MAC OS 9 and previous", "-            // TODO: I have no idea how to get it, someone must fix it", "-            String[] cmd = null;", "-            return cmd;", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d1aa30e95ea5e93949477e1ab7258e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "d5ed2401cf27495042f365a3d6a41270c4cb937e", "commitAfterChange": "1d677212cc1f9d5b494e87939453a69e300a9056", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 0, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static CommandLauncher createShellLauncher()", "diff": ["+    private static CommandLauncher createShellLauncher()", "+    {", "+        CommandLauncher launcher = null;", "+                launcher = new MacCommandLauncher();", "+                launcher = new WinNTCommandLauncher();", "+                final String osname =", "+                    launcher = new WinNTCommandLauncher();", "+                    final String script = resolveCommand( \"bin/antRun.bat\" );", "+                    launcher = new ScriptCommandLauncher( script );", "+                final String perlScript = resolveCommand( \"bin/antRun.pl\" );", "+                final String[] script = new String[]{\"perl\", perlScript};", "+                launcher = new ScriptCommandLauncher( script );", "+                final String script = resolveCommand( \"bin/antRun\" );", "+                launcher = new ScriptCommandLauncher( script );", "+        catch( final TaskException te )", "+            te.printStackTrace();", "+        return launcher;", "+    }", "-", "-    private static String[] getProcEnvCommand()", "-    {", "-        if( Os.isFamily( \"os/2\" ) )", "-        {", "-            // OS/2 - use same mechanism as Windows 2000", "-            // Not sure", "-            String[] cmd = {\"cmd\", \"/c\", \"set\"};", "-            return cmd;", "-        }", "-        else if( Os.isFamily( \"windows\" ) )", "-        {", "-            String osname =", "-                System.getProperty( \"os.name\" ).toLowerCase( Locale.US );", "-            // Determine if we're running under 2000/NT or 98/95", "-            if( osname.indexOf( \"nt\" ) >= 0 || osname.indexOf( \"2000\" ) >= 0 )", "-            {", "-                // Windows 2000/NT", "-                String[] cmd = {\"cmd\", \"/c\", \"set\"};", "-                return cmd;", "-            }", "-            else", "-            {", "-                // Windows 98/95 - need to use an auxiliary script", "-                String[] cmd = {\"command.com\", \"/c\", \"set\"};", "-                return cmd;", "-            }", "-        }", "-        else if( Os.isFamily( \"unix\" ) )", "-        {", "-            // Generic UNIX", "-            // Alternatively one could use: /bin/sh -c env", "-            String[] cmd = {\"/usr/bin/env\"};", "-            return cmd;", "-        }", "-        else if( Os.isFamily( \"netware\" ) )", "-        {", "-            String[] cmd = {\"env\"};", "-            return cmd;", "-        }", "-        else", "-        {", "-            // MAC OS 9 and previous", "-            // TODO: I have no idea how to get it, someone must fix it", "-            String[] cmd = null;", "-            return cmd;", "-        }", "-    }"]}]}