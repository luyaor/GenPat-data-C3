{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb7d5fe5b7c34586e92e6851cfc65eb2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b9461c23aa70512d25b64f470c5d004", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/TaskAdapter.java", "commitBeforeChange": "70b420621ba892d07049960e4cc4ac34c58549f6", "commitAfterChange": "55dcf2dee8cad363de7fd0a2d8317c857349c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        Method setProjectM = null;", "+        try {", "+            Class c = proxy.getClass();", "+            setProjectM = ", "+                c.getMethod( \"setProject\", new Class[] {Project.class});", "+            if(setProjectM != null) {", "+                setProjectM.invoke(proxy, new Object[] {project});", "+            }", "+        } catch( Exception ex ) {", "+            log(\"Error setting project in \" + proxy.getClass(), ", "+                Project.MSG_ERR);", "+            throw new BuildException( ex );", "+        }", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9eef76e6dca2a338e84313e814f385", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/TaskAdapter.java", "commitBeforeChange": "782372dee520ac0d90737d206d752e770912f5c2", "commitAfterChange": "74434ce5d074e3da0dd29528e6ea7c62be9e20e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        Method setProjectM = null;", "-            setProjectM = proxy.getClass().getMethod(", "+            Method setLocationM = proxy.getClass().getMethod(", "+                \"setLocation\", new Class[] {Location.class});", "+            if (setLocationM != null) {", "+                setLocationM.invoke(proxy, new Object[] {getLocation()});", "+            }", "+        } catch (NoSuchMethodException e) {", "+            // ignore this if the class being used as a task does not have", "+            // a set location method.", "+        } catch (Exception ex) {", "+            log(\"Error setting location in \" + proxy.getClass(),", "+                Project.MSG_ERR);", "+            throw new BuildException(ex);", "+        }", "+", "+        try {", "+            Method setProjectM = proxy.getClass().getMethod("]}]}