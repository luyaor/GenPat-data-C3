{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7635ccaed9514c3fb9ceea4809cc86ac", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "779c1e0d6b987f9044dbf27bfdb8fa9a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/GUnzip.java", "commitBeforeChange": "ea7cd6fbfe578780eb6dea64860f5de243a15d8c", "commitAfterChange": "7f4859f077ee1b0e9383099fcfb6169b847a64c7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"No source specified\");", "+            throw new BuildException(\"No source for gunzip specified\", location);", "-            throw new BuildException(\"source doesn't exist\");", "+            throw new BuildException(\"source doesn't exist\", location);", "-            throw new BuildException(\"Cannot expand a directory\");", "+            throw new BuildException(\"Cannot expand a directory\", location);", "+            FileOutputStream out = null;", "+            GZIPInputStream zIn = null;", "-                FileOutputStream out = new FileOutputStream(dest);", "-                GZIPInputStream zIn = new GZIPInputStream(new FileInputStream(source));", "+                out = new FileOutputStream(dest);", "+                zIn = new GZIPInputStream(new FileInputStream(source));", "-                zIn.close();", "-                out.close();", "-                throw new BuildException(msg, ioe);", "+                throw new BuildException(msg, ioe, location);", "+            } finally {", "+                if (out != null) {", "+                    try {", "+                        out.close();", "+                    } catch (IOException ioex) {}", "+                }", "+                if (zIn != null) {", "+                    try {", "+                        zIn.close();", "+                    } catch (IOException ioex) {}", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e1424a88bab3f6a301de809dbe7546f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/GUnzip.java", "commitBeforeChange": "cf64423184f84bbcea950e4b34536924cd1a22ff", "commitAfterChange": "c657b5ef73c02bd2d60b146fcf1d80cafa977e62", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      protected void extract()", "diff": ["-", "-    public void execute() throws BuildException {", "-        if (source == null) {", "-            throw new BuildException(\"No source for gunzip specified\", location);", "-        }", "-", "-        if (!source.exists()) {", "-            throw new BuildException(\"source doesn't exist\", location);", "-        }", "-", "-        if (source.isDirectory()) {", "-            throw new BuildException(\"Cannot expand a directory\", location);", "-        }", "-", "-        if (dest == null) {", "-            dest = new File(source.getParent());", "-        }", "-", "-        if (dest.isDirectory()) {", "-            String sourceName = source.getName();", "-            int len = sourceName.length();", "-            if (len > 3", "-                && \".gz\".equalsIgnoreCase(sourceName.substring(len-3))) {", "-                dest = new File(dest, sourceName.substring(0, len-3));", "-            } else {", "-                dest = new File(dest, sourceName);", "-            }", "-        }", "-", "+    protected void extract() {", "+            FileInputStream fis = null;", "-                zIn = new GZIPInputStream(new FileInputStream(source));", "+                fis = new FileInputStream(source);", "+                zIn = new GZIPInputStream(fis);", "+                if (fis != null) {", "+                    try {", "+                        fis.close();", "+                    } catch (IOException ioex) {}", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d913bedece5e7a4f2da7dedc5a1c5c93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/CVSPass.java", "commitBeforeChange": "7eb6ca9aa8b38b24196a2b43bb11429e8e651048", "commitAfterChange": "b0fcc6e32c4bcff86415474ff407210889213548", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-         throw new BuildException(\"cvsroot is required\");", "+            throw new BuildException(\"cvsroot is required\");", "-         throw new BuildException(\"password is required\");", "+            throw new BuildException(\"password is required\");", "+        BufferedReader reader = null;", "+        PrintWriter writer = null;", "-                BufferedReader reader =", "-                    new BufferedReader(new FileReader(passFile));", "+                reader = new BufferedReader(new FileReader(passFile));", "-                        buf.append(line+EOL);", "+                        buf.append(line).append(StringUtils.LINE_SEP);", "-", "-            reader.close();", "-            String pwdfile = buf.toString() + cvsRoot + \" A\" + mangle(password);", "+            String pwdfile = buf.toString() + cvsRoot + \" A\" ", "+                + mangle(password);", "-            PrintWriter writer = new PrintWriter(new FileWriter(passFile));", "+            writer = new PrintWriter(new FileWriter(passFile));", "-", "-            writer.close();", "+        } finally {", "+            if (reader != null) {", "+                try {", "+                    reader.close();", "+                } catch (IOException e) {}", "+            }", "+            if (writer != null) {", "+                writer.close();", "+            }", "-"]}]}