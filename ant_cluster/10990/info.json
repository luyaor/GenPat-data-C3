{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5aeec30409a3b7032c73fc6dc7a0090", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5141413b82ff5f9d031b42f3c2c0fe26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "f492cc5278c29092c6d1b90491f66839509329d1", "commitAfterChange": "ab0aa53ee1b8cf5058dc8b9ceff1af934f5a7aa7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public UnknownElement getNestedTask()", "signatureAfterChange": "     public UnknownElement getNestedTask()", "diff": ["-        return nestedTask;", "+        UnknownElement ret = new UnknownElement(\"sequential\");", "+        ret.setTaskName(\"sequential\");", "+        ret.setNamespace(\"\");", "+        ret.setQName(\"sequential\");", "+        new RuntimeConfigurable(ret, \"sequential\");", "+        for (int i = 0; i < nestedSequential.getNested().size(); ++i) {", "+            UnknownElement e =", "+                (UnknownElement) nestedSequential.getNested().get(i);", "+            ret.addChild(e);", "+            ret.getWrapper().addChild(e.getWrapper());", "+        }", "+        return ret;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f12d0bb68680ca371f7039e107c364ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/XMLCatalog.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private ResourceLocation findMatchingEntry(String publicId)", "signatureAfterChange": "     private ResourceLocation findMatchingEntry(String publicId)", "diff": ["-        Enumeration e = getElements().elements();", "-        ResourceLocation element = null;", "-        while (e.hasMoreElements()) {", "-            Object o = e.nextElement();", "-            if (o instanceof ResourceLocation) {", "-                element = (ResourceLocation) o;", "-                if (element.getPublicId().equals(publicId)) {", "-                    return element;", "-                }", "+        for (ResourceLocation element : getElements()) {", "+            if (element.getPublicId().equals(publicId)) {", "+                return element;"]}]}