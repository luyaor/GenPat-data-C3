{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3f81465d6062cc4b6d0517e9c4f0393", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ff1e3c519ff5da89c2760fbad908f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected void doDispose( final Task task, final Configuration taskData )         throws AntException", "signatureAfterChange": "      private void doDispose( final Task task, final Configuration taskData )         throws TaskException", "diff": ["-    protected void doDispose( final Task task, final Configuration taskData )", "-        throws AntException", "+    private void doDispose( final Task task, final Configuration taskData )", "+        throws TaskException", "-                throw new AntException( \"Error disposing task \" +  taskData.getName() + \" at \" +", "-                                        taskData.getLocation() + \"(Reason: \" +", "-                                        throwable.getMessage() + \")\", throwable );", "+                throw new TaskException( \"Error disposing task \" +  taskData.getName() + \" at \" +", "+                                         taskData.getLocation() + \"(Reason: \" +", "+                                         throwable.getMessage() + \")\", throwable );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a85011668d2170b9f912292b91acc0a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void doCompose( final Task task, final Configuration taskData )         throws AntException", "signatureAfterChange": "      private void doCompose( final Task task, final Configuration taskData )         throws TaskException", "diff": ["-    protected void doCompose( final Task task, final Configuration taskData )", "-        throws AntException", "+    private void doCompose( final Task task, final Configuration taskData )", "+        throws TaskException", "-                throw new AntException( \"Error composing task \" +  taskData.getName() + \" at \" +", "-                                        taskData.getLocation() + \"(Reason: \" +", "-                                        throwable.getMessage() + \")\", throwable );", "+                throw new TaskException( \"Error composing task \" +  taskData.getName() + \" at \" +", "+                                         taskData.getLocation() + \"(Reason: \" +", "+                                         throwable.getMessage() + \")\", throwable );"]}]}