{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e91d6ac63facc1c556e76b3f144ad4d2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b82edb9a21f76d6a981003f7f4f01fb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void testMagicPropertyOverridesEmptyString() throws Exception", "signatureAfterChange": "     @Test     public void testMagicPropertyOverridesEmptyString() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testMagicPropertyOverridesEmptyString\",", "-                \"magic property not working\",", "-                RmicAdapterFactory.ERROR_UNKNOWN_COMPILER);", "+        try {", "+            buildRule.executeTarget(\"testMagicPropertyOverridesEmptyString\");", "+            fail(\"Magic property not working\");", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(RmicAdapterFactory.ERROR_UNKNOWN_COMPILER, ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c953208d18257090a2cf574cda365ffc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/RmicAdvancedTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void testMagicProperty() throws Exception", "signatureAfterChange": "     @Test     public void testMagicProperty() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testMagicProperty\",", "-                \"magic property not working\",", "-                RmicAdapterFactory.ERROR_UNKNOWN_COMPILER);", "+        try {", "+            buildRule.executeTarget(\"testMagicProperty\");", "+            fail(\"Magic property not working\");", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(RmicAdapterFactory.ERROR_UNKNOWN_COMPILER, ex.getMessage());", "+        }"]}]}