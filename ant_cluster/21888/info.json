{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "423893219e568dd4b26a9a2bb9462c2b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dafbfb97a654362c9827308dc2f1701", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": "       public void testIstrueIncomplete1()", "signatureAfterChange": "      @Test     public void testIstrueIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"istrue-incomplete\",", "-                    \"Missing attribute\",", "-                    \"Nothing to test for truth\");", "+        try {", "+            buildRule.executeTarget(\"istrue-incomplete\");", "+            fail(\"BuildException should have been thrown - Missing attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"Nothing to test for truth\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec84595a64639aef520584519f5ec4f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "       public void testIsfalseIncomplete1()", "signatureAfterChange": "      @Test     public void testIsfalseIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"isfalse-incomplete\",", "-                    \"Missing attribute\",", "-                    \"Nothing to test for falsehood\");", "+        try {", "+            buildRule.executeTarget(\"isfalse-incomplete\");", "+            fail(\"BuildException should have been thrown - Missing attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"Nothing to test for falsehood\", ex.getMessage());", "+        }"]}]}