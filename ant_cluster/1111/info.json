{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "088d9b03fe8faa7dafc1636e3d0651dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81277a6ad1a7b154d8aa34cb6c561996", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void writeBlock()         throws IOException", "signatureAfterChange": "     private void writeBlock()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"WriteBlock: blkIdx = \" + this.currBlkIdx );", "+            final String message = \"WriteBlock: blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.outStream == null )", "+        if( null == m_output )", "-            throw new IOException( \"writing to an input buffer\" );", "+            final String message = \"writing to an input buffer\";", "+            throw new IOException( message );", "-        this.outStream.write( this.blockBuffer, 0, this.blockSize );", "-        this.outStream.flush();", "+        m_output.write( m_blockBuffer, 0, m_blockSize );", "+        m_output.flush();", "-        this.currRecIdx = 0;", "-        this.currBlkIdx++;", "+        m_currRecIdx = 0;", "+        m_currBlkIdx++;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8592e90633bab32c48ef780ecef5192f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private boolean readBlock()         throws IOException", "signatureAfterChange": "     private boolean readBlock()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"ReadBlock: blkIdx = \" + this.currBlkIdx );", "+            final String message = \"ReadBlock: blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.inStream == null )", "+        if( null == m_input )", "-            throw new IOException( \"reading from an output buffer\" );", "+            final String message = \"reading from an output buffer\";", "+            throw new IOException( message );", "-        this.currRecIdx = 0;", "+        m_currRecIdx = 0;", "-        int bytesNeeded = this.blockSize;", "+        int bytesNeeded = m_blockSize;", "-            long numBytes = this.inStream.read( this.blockBuffer, offset,", "-                                                bytesNeeded );", "+            final long numBytes = m_input.read( m_blockBuffer, offset, bytesNeeded );", "-            if( numBytes != this.blockSize )", "+            if( numBytes != m_blockSize )", "-                if( this.debug )", "+                if( m_debug )", "-                                        + numBytes + \" of \" + this.blockSize", "+                                        + numBytes + \" of \" + m_blockSize", "-        this.currBlkIdx++;", "+        m_currBlkIdx++;"]}]}