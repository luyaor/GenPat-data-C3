{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b5a9649e94d70a4c6dbdb08bb45794c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561432a72a004e5cba1d4d9a7dd17556", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/remote/TestRunner.java", "commitBeforeChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "commitAfterChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void runTests() throws Exception", "signatureAfterChange": "     private void runTests() throws Exception", "diff": ["-        Test[] suites = getSuites();", "+        Map suites = getSuites();", "-        int count = countTests(suites);", "+        int count = countTests(suites.values());", "-        fireEvent(new TestRunEvent(id, TestRunEvent.RUN_STARTED));", "-", "-        long startTime = System.currentTimeMillis();", "-        for (int i = 0; i < suites.length; i++) {", "-            String name = suites[i].getClass().getName();", "-            if (suites[i] instanceof TestCase) {", "-                suites[i] = new TestSuite(name);", "-            }", "-            log(\"running suite: \" + suites[i]);", "-            fireEvent(new TestRunEvent(id, TestRunEvent.SUITE_STARTED, name));", "-            suites[i].run(testResult);", "-            fireEvent(new TestRunEvent(id, TestRunEvent.SUITE_ENDED, name));", "+        TestRunEvent evt = new TestRunEvent(id, TestRunEvent.RUN_STARTED);", "+        if (debug){", "+            debugFormatter.onRunStarted(evt);", "+        fireEvent(evt);", "+", "+        TestSummary runSummary = new TestSummary();", "+        runSummary.start(testResult);", "+        for (Iterator it = suites.entrySet().iterator(); it.hasNext(); ) {", "+            Map.Entry entry = (Map.Entry)it.next();", "+            String name = (String)entry.getKey();", "+            Test test = (Test)entry.getValue();", "+            if (test instanceof TestCase) {", "+                test = new TestSuite(name);", "+            }", "+            runTest(test, name);", "+        }", "+        runSummary.stop(testResult);", "-        long elapsedTime = System.currentTimeMillis() - startTime;", "-        if (testResult == null || testResult.shouldStop()) {", "-            fireEvent(new TestRunEvent(id, TestRunEvent.RUN_STOPPED, System.getProperties()));", "-        } else {", "-            fireEvent(new TestRunEvent(id, TestRunEvent.RUN_ENDED, System.getProperties()));", "+        int type = (testResult == null || testResult.shouldStop()) ?", "+            TestRunEvent.RUN_STOPPED : TestRunEvent.RUN_ENDED;", "+        evt = new TestRunEvent(id, type, System.getProperties(), runSummary);", "+        if (debug){", "+            debugFormatter.onRunEnded(evt);", "-        log(\"Finished after \" + elapsedTime + \"ms\");", "+        fireEvent(evt);", "+        log(\"Finished after \" + runSummary.elapsedTime() + \"ms\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a1f121989fe5441808705d4621d5dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "028ba47c8246f510012ef061d879d05240b90c71", "commitAfterChange": "efd287b871106edf3efb9e1b96aeea16b85f0549", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task,                                               Path classpath)         throws BuildException", "signatureAfterChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task,                                               Path classpath)         throws BuildException", "diff": ["-            boolean isClassicCompilerSupported = true;", "-            //as new versions of java come out, add them to this test", "-            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "-                && !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)) {", "-                isClassicCompilerSupported = false;", "-            }", "-", "-                if (isClassicCompilerSupported) {", "-                    return new Javac12();", "-                } else {", "-                    task.log(\"This version of java does \"", "-                                             + \"not support the classic \"", "-                                             + \"compiler; upgrading to modern\",", "-                                             Project.MSG_WARN);", "-                    compilerType = \"modern\";", "-                }", "+                task.log(\"This version of java does \"", "+                                         + \"not support the classic \"", "+                                         + \"compiler; upgrading to modern\",", "+                                         Project.MSG_WARN);", "+                compilerType = \"modern\";", "-                    if (isClassicCompilerSupported) {", "-                        task.log(\"Modern compiler not found - looking for \"", "-                                 + \"classic compiler\", Project.MSG_WARN);", "-                        return new Javac12();", "-                    } else {", "-                        throw new BuildException(\"Unable to find a javac \"", "-                                                 + \"compiler;\\n\"", "-                                                 + MODERN_COMPILER", "-                                                 + \" is not on the \"", "-                                                 + \"classpath.\\n\"", "-                                                 + \"Perhaps JAVA_HOME does not\"", "-                                                 + \" point to the JDK.\\n\"", "-                                + \"It is currently set to \\\"\"", "-                                + JavaEnvUtils.getJavaHome()", "-                                + \"\\\"\");", "-                    }", "+                    throw new BuildException(\"Unable to find a javac \"", "+                                             + \"compiler;\\n\"", "+                                             + MODERN_COMPILER", "+                                             + \" is not on the \"", "+                                             + \"classpath.\\n\"", "+                                             + \"Perhaps JAVA_HOME does not\"", "+                                             + \" point to the JDK.\\n\"", "+                            + \"It is currently set to \\\"\"", "+                            + JavaEnvUtils.getJavaHome()", "+                            + \"\\\"\");"]}]}