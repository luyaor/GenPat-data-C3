{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a639a77a6e17d60935969757d31e1756", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4c2b69d26f701e26ef34404e13a94c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "commitAfterChange": "ff41336fc19f549bc995898f4543da6d7e9d9bf9", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected void loadEnvironment(String prefix)", "signatureAfterChange": "     protected void loadEnvironment(String prefix)", "diff": ["-        Vector osEnv = Execute.getProcEnvironment();", "-        for (Enumeration e = osEnv.elements(); e.hasMoreElements();) {", "-            String entry = (String) e.nextElement();", "-            int pos = entry.indexOf('=');", "-            if (pos == -1) {", "-                log(\"Ignoring: \" + entry, Project.MSG_WARN);", "-            } else {", "-                props.put(prefix + entry.substring(0, pos),", "-                          entry.substring(pos + 1));", "-            }", "+        Map osEnv = Execute.getEnvironmentVariables();", "+        for (Iterator e = osEnv.entrySet().iterator(); e.hasNext(); ) {", "+            Map.Entry entry = (Map.Entry) e.next();", "+            props.put(prefix + entry.getKey(), entry.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62b13926fbdf3c0871f6ad564913586", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exit.java", "commitBeforeChange": "1f6f45aebb95ddf56779db1609bf7bfcd4eddcb3", "commitAfterChange": "7665bc264e9923f65eb5cd80188cfec9cf338a41", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean testNestedCondition()", "signatureAfterChange": "     private boolean testNestedCondition()", "diff": ["-        if (ifCondition != null || unlessCondition != null) {", "+        boolean result = nestedConditionPresent();", "+", "+        if (result && ifCondition != null || unlessCondition != null) {", "-              + \"not permitted in conjunction with if/unless attributes\");", "+                + \"not permitted in conjunction with if/unless attributes\");", "-        int count = countConditions();", "-        if (count > 1) {", "-            throw new BuildException(\"Too many conditions:  \" + count);", "-        }", "-", "-        return (count == 0) ? true", "-            : (((Condition)(getConditions().nextElement())).eval());", "+        return result && nestedCondition.eval();"]}]}