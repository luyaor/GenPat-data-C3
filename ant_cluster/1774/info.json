{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5db4095edca80ca088e6c17dd27c4bca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a27b0c1309b4ff2f1af802e28dc6f56", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "77024a43a293e7911609d3c3192e773f082688ce", "commitAfterChange": "433387b88ebe29602937982ca3eac4f78d233180", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            File fsDir = fs.getDir();", "+            final File fsDir = fs.getDir();", "-                resourcesToDelete.add(fs);", "+                // the previous line has already scanned the", "+                // filesystem, in order to avoid a rescan when later", "+                // iterating, capture the results now and store them", "+                final String[] files = ds.getIncludedFiles();", "+                resourcesToDelete.add(new ResourceCollection() {", "+                        public boolean isFilesystemOnly() {", "+                            return true;", "+                        }", "+                        public int size() {", "+                            return files.length;", "+                        }", "+                        public Iterator iterator() {", "+                            return new FileResourceIterator(getProject(),", "+                                                            fsDir, files);", "+                        }", "+                    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c8345dfc35af65718b16e3947a39df2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHBase.java", "commitBeforeChange": "42b64be7164de91699c8327cd25e1c118d20068b", "commitAfterChange": "37b4989c05cbc9ae39ce3d41d86e49255e6027bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected Session openSession() throws JSchException", "signatureAfterChange": "     protected Session openSession() throws JSchException", "diff": ["+        final SSHBase base = this;", "+        if(verbose) {", "+        \tJSch.setLogger(new com.jcraft.jsch.Logger(){", "+        \t\tpublic boolean isEnabled(int level){", "+        \t\t\treturn true;", "+        \t\t}", "+        \t\tpublic void log(int level, String message){", "+        \t\t\tbase.log(message, Project.MSG_INFO);", "+        \t\t}", "+        \t});", "+        }"]}]}