{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "792d7e71bc55025b5227bb3baa993f59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1294a8fdb2cd55f753376f7b089c943", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "7cce31d892daee83fd1e49e322af3ef20605c221", "commitAfterChange": "1f71acf427e164e75bc4f90b1ddaecd51998709b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void write(byte b[], int off, int len) throws IOException", "signatureAfterChange": "     public void write(byte[] b, int off, int len) throws IOException", "diff": ["-    public void write(byte b[], int off, int len) throws IOException {", "+     */", "+    public void write(byte[] b, int off, int len) throws IOException {", "-            while (remaining > 0 && b[offset] != 0x0a && b[offset] != 0x0d) {", "+            while (remaining > 0 && b[offset] != LF && b[offset] != CR) {", "-            while (remaining > 0 && (b[offset] == 0x0a || b[offset] == 0x0d)) {", "+            while (remaining > 0 && (b[offset] == LF || b[offset] == CR)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7cf4abe295ee88af6455a1d926dd7eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LogOutputStream.java", "commitBeforeChange": "7cce31d892daee83fd1e49e322af3ef20605c221", "commitAfterChange": "1f71acf427e164e75bc4f90b1ddaecd51998709b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void write(byte b[], int off, int len) throws IOException", "signatureAfterChange": "     public void write(byte[] b, int off, int len) throws IOException", "diff": ["-    public void write(byte b[], int off, int len) throws IOException {", "+     */", "+    public void write(byte[] b, int off, int len) throws IOException {", "-            while (remaining > 0 && b[offset] != 0x0a && b[offset] != 0x0d) {", "+            while (remaining > 0 && b[offset] != LF && b[offset] != CR) {", "-            while (remaining > 0 && (b[offset] == 0x0a || b[offset] == 0x0d)) {", "+            while (remaining > 0 && (b[offset] == LF || b[offset] == CR)) {"]}]}