{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbc8b61863bedaf9a053f4ca7ac00356", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79807923eb849fa7268e88ffe488f4e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-    public String toString()", "-    {", "+    public String toString() {", "-        for( int i = 0; i < m_components.length; i++ )", "-        {", "-            if( i != 0 )", "-            {", "-                sb.append( '.' );", "+        for (int i = 0; i < components.length; i++) {", "+            if (i != 0) {", "+                sb.append('.');", "-            sb.append( m_components[ i ] );", "+            sb.append(components[ i ]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816d0376c7175076ba1002bb2cffe934", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DeweyDecimal( final int[] components )", "signatureAfterChange": "     public DeweyDecimal(final int[] components)", "diff": ["-    public DeweyDecimal( final int[] components )", "-    {", "-        m_components = new int[ components.length ];", "+    public DeweyDecimal(final int[] components) {", "+        this.components = new int[components.length];", "-        for( int i = 0; i < m_components.length; i++ )", "-        {", "-            m_components[ i ] = components[ i ];", "+        for (int i = 0; i < components.length; i++) {", "+            this.components[i] = components[i];"]}]}