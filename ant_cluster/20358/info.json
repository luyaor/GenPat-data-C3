{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9d7d4df8d192dcfad48b4b83162cfef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2672f2ef4297d4ff2bf70882d5953d86", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     @Override \tpublic void configure(XSLTProcess xsltTask)", "signatureAfterChange": " \tpublic void configure(final XSLTProcess xsltTask)", "diff": ["-    @Override", "-\tpublic void configure(XSLTProcess xsltTask) {", "+\tpublic void configure(final XSLTProcess xsltTask) {", "-        XSLTProcess.Factory factory = xsltTask.getFactory();", "+        final XSLTProcess.Factory factory = xsltTask.getFactory();", "-            for (Enumeration attrs = factory.getAttributes();", "+            for (final Enumeration attrs = factory.getAttributes();", "-                XSLTProcess.Factory.Attribute attr =", "+                final XSLTProcess.Factory.Attribute attr =", "-        XMLCatalog xmlCatalog = xsltTask.getXMLCatalog();", "+        final XMLCatalog xmlCatalog = xsltTask.getXMLCatalog();", "-        for (Enumeration props = xsltTask.getOutputProperties();", "+        for (final Enumeration props = xsltTask.getOutputProperties();", "-            XSLTProcess.OutputProperty prop", "+            final XSLTProcess.OutputProperty prop"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6341e004a6197c9ccc45cb2503d7c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/ant1compat/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "83061b17b0a39cc1bbf9642469a6ec58bc56dbef", "commitAfterChange": "a08711cd91e80ad69a52d6dc84deca1230e6ad01", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private Configuration buildAntTaskConfiguration()", "signatureAfterChange": "     protected DefaultConfiguration buildTaskModel()", "diff": ["-", "-    private Configuration buildAntTaskConfiguration()", "+    protected DefaultConfiguration buildTaskModel()", "-        antConfig.setAttribute( \"inherit-all\", String.valueOf( inheritAll ) );", "-", "-        // Ignore inheritRefs for now ( inheritAll == inheritRefs )", "-", "-        if ( target != null )", "-        {", "-            antConfig.setAttribute( \"target\", target );", "-        }", "-", "-        if (antFile == null) {", "+        if( antFile == null )", "+        {", "-        if ( dir == null )", "+        if( dir == null )", "-        File file = FileUtils.newFileUtils().resolveFile(dir, antFile);", "+        File file = FileUtils.newFileUtils().resolveFile( dir, antFile );", "-        // Add all of the properties.", "-        Iterator iter = properties.iterator();", "-        while( iter.hasNext() )", "-        {", "-            DefaultConfiguration param = new DefaultConfiguration( \"param\", \"\" );", "-            Property property = (Property)iter.next();", "-            param.setAttribute( \"name\", property.getName() );", "-            param.setAttribute( \"value\", property.getValue() );", "-            antConfig.addChild( param );", "-        }", "-    }"]}]}