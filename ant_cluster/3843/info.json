{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59e69fb21f6fd672e99bd7440038bf90", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e636efd93cffdf41e60686c395ae00", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "e56743fb3b214c9010f16be65d0bdc0de77fc246", "commitAfterChange": "0f55b6b9d6a98accff8e0352474df465207806f7", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "     public Enumeration getResources(String name) throws IOException", "signatureAfterChange": "     public Enumeration getResources(String name) throws IOException", "diff": ["-        return isParentFirst(name)", "-            ? CollectionUtils.append(parentEnum, mine)", "-            :  CollectionUtils.append(mine, parentEnum);", "+        boolean parentEnumFirst = isParentFirst(name);", "+        ", "+        if (isolated && !parentEnumFirst) {", "+            return mine;", "+        } else if (parentEnumFirst) {", "+            return CollectionUtils.append(parentEnum, mine);", "+        } else {", "+            return CollectionUtils.append(mine, parentEnum);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9168ed33042c406d3f70e86a6fc3268b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "64886360cf0d83287454a0b04a6613c3f47c0e7d", "commitAfterChange": "a840de1ce8f5d8b5cf31c5f91efb95f4d97467cc", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     protected Enumeration findResources(String name) throws IOException", "signatureAfterChange": "     protected Enumeration findResources(String name) throws IOException", "diff": ["-        } else if (ignoreBase) {", "-            return getRootLoader() == null", "-                ? mine", "-                : CollectionUtils.append(", "-                    mine, getRootLoader().getResources(name));", "-        } else {", "-            // Inverted.", "-            return CollectionUtils.append(mine, base);", "+        if (ignoreBase) {", "+            return getRootLoader() == null ? mine : CollectionUtils.append(mine, getRootLoader()", "+                    .getResources(name));", "+        }", "+        // parent last:", "+        return CollectionUtils.append(mine, base);"]}]}