{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "464a0f804bb1289263faa7fd5f87ff50", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755ff5d4d20e37f355b3d6110476cc26", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private void executeCommand(Session session, String cmd, StringBuffer sb)         throws BuildException", "signatureAfterChange": "      private void executeCommand(final Session session, final String cmd, final StringBuffer sb)         throws BuildException", "diff": ["-    private void executeCommand(Session session, String cmd, StringBuffer sb)", "+    private void executeCommand(final Session session, final String cmd, final StringBuffer sb)", "-        ByteArrayOutputStream out = new ByteArrayOutputStream();", "-        ByteArrayOutputStream errout = new ByteArrayOutputStream();", "-        OutputStream teeErr = suppressSystemErr ? errout : new TeeOutputStream(errout, KeepAliveOutputStream.wrapSystemErr());", "-        OutputStream tee = suppressSystemOut ? out : new TeeOutputStream(out, KeepAliveOutputStream.wrapSystemOut());", "+        final ByteArrayOutputStream out = new ByteArrayOutputStream();", "+        final ByteArrayOutputStream errout = new ByteArrayOutputStream();", "+        final OutputStream teeErr = suppressSystemErr ? errout : new TeeOutputStream(errout, KeepAliveOutputStream.wrapSystemErr());", "+        final OutputStream tee = suppressSystemOut ? out : new TeeOutputStream(out, KeepAliveOutputStream.wrapSystemOut());", "-        InputStream istream = null ;", "+        InputStream istream = null;", "-                istream = new FileInputStream(inputFile) ;", "-            } catch (IOException e) {", "+                istream = new FileInputStream(inputFile);", "+            } catch (final IOException e) {", "-            String inputData = getProject().getProperty(inputProperty) ;", "+            final String inputData = getProject().getProperty(inputProperty);", "-                istream = new ByteArrayInputStream(inputData.getBytes()) ;", "+                istream = new ByteArrayInputStream(inputData.getBytes());", "-                    public void run() {", "+                    @Override", "+\t\t\t\t\tpublic void run() {", "-                            } catch (Exception e) {", "+                            } catch (final Exception e) {", "-                int ec = channel.getExitStatus();", "+                final int ec = channel.getExitStatus();", "-                    String msg = \"Remote command failed with exit status \" + ec;", "+                    final String msg = \"Remote command failed with exit status \" + ec;", "-        } catch (BuildException e) {", "+        } catch (final BuildException e) {", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {", "-        } catch (Exception e) {", "+        } catch (final Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cb3beb361685157519893ecbbad3b31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            Properties props = new Properties();", "+            final Properties props = new Properties();", "-                    Provider p = (Provider) Class.forName(", "+                    final Provider p = (Provider) Class.forName(", "-                } catch (Exception e) {", "+                } catch (final Exception e) {", "-            MimeMessage msg = new MimeMessage(sesh);", "-            MimeMultipart attachments = new MimeMultipart();", "+            final MimeMessage msg = new MimeMessage(sesh);", "+            final MimeMultipart attachments = new MimeMultipart();", "-            StringDataSource sds = new StringDataSource();", "+            final StringDataSource sds = new StringDataSource();", "-                for (Iterator iter = headers.iterator(); iter.hasNext();) {", "-                    Header h = (Header) iter.next();", "+                for (final Iterator iter = headers.iterator(); iter.hasNext();) {", "+                    final Header h = (Header) iter.next();", "-            PrintStream out = new PrintStream(sds.getOutputStream());", "+            final PrintStream out = new PrintStream(sds.getOutputStream());", "-            MimeBodyPart textbody = new MimeBodyPart();", "+            final MimeBodyPart textbody = new MimeBodyPart();", "-            Enumeration e = files.elements();", "+            final Enumeration e = files.elements();", "-                File file = (File) e.nextElement();", "+                final File file = (File) e.nextElement();", "-                FileDataSource fileData = new FileDataSource(file);", "-                DataHandler fileDataHandler = new DataHandler(fileData);", "+                final FileDataSource fileData = new FileDataSource(file);", "+                final DataHandler fileDataHandler = new DataHandler(fileData);", "-                Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "+                final Transport transport = sesh.getTransport(SSL ? \"smtps\" : \"smtp\");", "-            } catch (SendFailedException sfe) {", "+            } catch (final SendFailedException sfe) {", "-        } catch (MessagingException e) {", "+        } catch (final MessagingException e) {", "-        } catch (IOException e) {", "+        } catch (final IOException e) {"]}]}