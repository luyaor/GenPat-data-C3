{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f984f70da1a6eec2fdaf504ffac89e1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "133bdc49d239cb4119ca23bce50f9536", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void write(final int b) throws IOException", "signatureAfterChange": "     public void write(int bv) throws IOException", "diff": ["-    public void write(final int b) throws IOException {", "-        if (this.out != null) {", "-            write0(b);", "+     */", "+    public void write(int bv) throws IOException {", "+        int b = (256 + bv) % 256;", "+        if (currentChar != -1) {", "+            if (currentChar == b) {", "+                runLength++;", "+                if (runLength > 254) {", "+                    writeRun();", "+                    currentChar = -1;", "+                    runLength = 0;", "+                }", "+            } else {", "+                writeRun();", "+                runLength = 1;", "+                currentChar = b;", "+            }", "-            throw new IOException(\"closed\");", "+            currentChar = b;", "+            runLength++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b876d3cce5259f4b6513ccfaf67a7cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/StringInputStream.java", "commitBeforeChange": "03b6e25418f4b94cbb94e191d23d8ab0ba7b8f6e", "commitAfterChange": "fc6a4383fa7cee5fe2534dc9edc9d8a4eb5c254f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public synchronized int read() throws IOException", "diff": ["-    public int read() throws IOException {", "-        return in.read();", "+    public synchronized int read() throws IOException {", "+        if (in == null) {", "+            throw new IOException(\"Stream Closed\");", "+        }", "+", "+        byte result;", "+        if (slack != null && begin < slack.length) {", "+            result = slack[begin];", "+            if (++begin == slack.length) {", "+                slack = null;", "+            }", "+        } else {", "+            byte[] buf = new byte[1];", "+            if (read(buf, 0, 1) <= 0) {", "+                return -1;", "+            }", "+            result = buf[0];", "+        }", "+        if (result < 0) {", "+            return 256 + result;", "+        } else {", "+            return result;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64cadbfc915a466257e1e16ceafbacd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarInputStream.java", "commitBeforeChange": "86b5885efa2b6a264d86087adc88b59653ac3919", "commitAfterChange": "efa9cca0e47e4576cebdb04eac431845a522b1f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void skip(int numToSkip) throws IOException", "signatureAfterChange": "     public long skip(long numToSkip) throws IOException", "diff": ["-    public void skip(int numToSkip) throws IOException {", "-", "+    public long skip(long numToSkip) throws IOException {", "-        // ", "+        //", "-", "-        for (int num = numToSkip; num > 0; ) {", "-            int numRead = this.read(skipBuf, 0, ", "-                                    (num > skipBuf.length ? skipBuf.length ", "-                                     : num));", "-", "+        long skip = numToSkip;", "+        while (skip > 0) {", "+            int realSkip = (int) (skip > skipBuf.length ? skipBuf.length : skip);", "+            int numRead = this.read(skipBuf, 0, realSkip);", "-            } ", "-", "-            num -= numRead;", "-        } ", "-    } ", "+            }", "+            skip -= numRead;", "+        }", "+        return (numToSkip - skip);", "+    }"]}]}