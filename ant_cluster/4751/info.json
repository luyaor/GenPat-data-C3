{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2f170fe49a0ddd809c378db60b7300f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6edf2cec43cdb347cb7210bde0dd9898", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "e09047d73c19c9608d7408f1ba4f2f23ee9d067c", "commitAfterChange": "a7870b167d35566a8ed101467825a406aa61fa13", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Path getCompileClasspath()", "signatureAfterChange": "     protected Path getCompileClasspath()", "diff": ["-            // XXX move this stuff to a separate class, code is identical to", "-            //     code in ../compiler/DefaultCompilerAdapter", "-", "-            if (System.getProperty(\"java.vendor\").toLowerCase().indexOf(\"microsoft\") >= 0) {", "-                // Pull in *.zip from packages directory", "-                FileSet msZipFiles = new FileSet();", "-                msZipFiles.setDir(new File(System.getProperty(\"java.home\") + File.separator + \"Packages\"));", "-                msZipFiles.setIncludes(\"*.ZIP\");", "-                classpath.addFileset(msZipFiles);", "-            } else if (Project.getJavaVersion() == Project.JAVA_1_1) {", "-                classpath.addExisting(new Path(null,", "-                                                System.getProperty(\"java.home\")", "-                                                + File.separator + \"lib\"", "-                                                + File.separator ", "-                                                + \"classes.zip\"));", "-            } else if(System.getProperty(\"java.vm.name\").equals(\"Kaffe\")) {", "-                FileSet kaffeJarFiles = new FileSet();", "-                kaffeJarFiles.setDir(new File(System.getProperty(\"java.home\") ", "-                                              + File.separator + \"share\"", "-                                              + File.separator + \"kaffe\"));", "-                ", "-                kaffeJarFiles.setIncludes(\"*.jar\");", "-                classpath.addFileset(kaffeJarFiles);", "-            } else {", "-                // JDK > 1.1 seems to set java.home to the JRE directory.", "-                classpath.addExisting(new Path(null,", "-                                                System.getProperty(\"java.home\")", "-                                                + File.separator + \"lib\"", "-                                                + File.separator + \"rt.jar\"));", "-                // Just keep the old version as well and let addExistingToPath", "-                // sort it out.", "-                classpath.addExisting(new Path(null,", "-                                                System.getProperty(\"java.home\")", "-                                                + File.separator +\"jre\"", "-                                                + File.separator + \"lib\"", "-                                                + File.separator + \"rt.jar\"));", "-", "-                // Added for MacOS X", "-                classpath.addExisting(new Path(null,", "-                                               System.getProperty(\"java.home\")", "-                                               + File.separator + \"..\"", "-                                               + File.separator + \"Classes\"", "-                                               + File.separator + \"classes.jar\"));", "-                classpath.addExisting(new Path(null,", "-                                               System.getProperty(\"java.home\")", "-                                               + File.separator + \"..\"", "-                                               + File.separator + \"Classes\"", "-                                               + File.separator + \"ui.jar\"));", "-            }", "+            classpath.addJavaRuntime();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb041a6feeeadfa0fd18d23692bd0a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "e09047d73c19c9608d7408f1ba4f2f23ee9d067c", "commitAfterChange": "a7870b167d35566a8ed101467825a406aa61fa13", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected Path getCompileClasspath()", "signatureAfterChange": "     protected Path getCompileClasspath()", "diff": ["-            // XXX move this stuff to a separate class, code is identical to", "-            //     code in ../rmic/DefaultRmicAdapter", "-", "-            if (System.getProperty(\"java.vendor\").toLowerCase().indexOf(\"microsoft\") >= 0) {", "-                // Pull in *.zip from packages directory", "-                FileSet msZipFiles = new FileSet();", "-                msZipFiles.setDir(new File(System.getProperty(\"java.home\") + File.separator + \"Packages\"));", "-                msZipFiles.setIncludes(\"*.ZIP\");", "-                classpath.addFileset(msZipFiles);", "-            }", "-            else if (Project.getJavaVersion() == Project.JAVA_1_1) {", "-                classpath.addExisting(new Path(null,", "-                                                System.getProperty(\"java.home\")", "-                                                + File.separator + \"lib\"", "-                                                + File.separator", "-                                                + \"classes.zip\"));", "-            } else {", "-                // JDK > 1.1 seems to set java.home to the JRE directory.", "-                classpath.addExisting(new Path(null,", "-                                                System.getProperty(\"java.home\")", "-                                                + File.separator + \"lib\"", "-                                                + File.separator + \"rt.jar\"));", "-                // Just keep the old version as well and let addExistingToPath", "-                // sort it out.", "-                classpath.addExisting(new Path(null,", "-                                                System.getProperty(\"java.home\")", "-                                                + File.separator +\"jre\"", "-                                                + File.separator + \"lib\"", "-                                                + File.separator + \"rt.jar\"));", "-", "-                // Added for MacOS X", "-                classpath.addExisting(new Path(null,", "-                                               System.getProperty(\"java.home\")", "-                                               + File.separator + \"..\"", "-                                               + File.separator + \"Classes\"", "-                                               + File.separator + \"classes.jar\"));", "-                classpath.addExisting(new Path(null,", "-                                               System.getProperty(\"java.home\")", "-                                               + File.separator + \"..\"", "-                                               + File.separator + \"Classes\"", "-                                               + File.separator + \"ui.jar\"));", "-            }", "+            classpath.addJavaRuntime();"]}]}