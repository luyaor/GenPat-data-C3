{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c16b9008857af14accb27ee1344d2dc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c0835f73649eeaf09386d0fd019c36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "3928b4fa9dfc1cf81de6fe95c7be3c8804a3c87e", "commitAfterChange": "b5e043025fb0aeef5e150d433cb0808b66441efd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private static void doReportTempDir(PrintStream out)", "signatureAfterChange": "     private static void doReportTempDir(PrintStream out)", "diff": ["+        long now=System.currentTimeMillis();", "+            long filetime=tempFile.lastModified();", "+            long drift=filetime-now;", "+            out.println(\"temp dir alignment with system clock is \"+drift+\" ms\");", "+            if(drift>10000) {", "+                out.println(\"Warning: big clock drift -maybe a network filesystem\");", "+            }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bc3d6d8c80e80ae24be55cbe0ee542", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "a22e945b3cd393fb0b49c73ecb37518d69cef7de", "commitAfterChange": "31e1bc0694eb6804e681cc7add03a960eb14a544", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified, boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified, boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "diff": ["-        if (preserveLastModified && dest instanceof Touchable) {", "-            setLastModified((Touchable) dest, source.getLastModified());", "+        if (preserveLastModified) {", "+            Touchable t = (Touchable) dest.as(Touchable.class);", "+            if (t != null) {", "+                setLastModified(t, source.getLastModified());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b55e4406dc0af44bff5aae60045335", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "b165169549c4f199906968196ce55274405767d9", "commitAfterChange": "434ef8d60826411a8c025af4724097bd33f28747", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["+        ", "+        // Fix for bug #5637 - if a junit.extensions.TestSetup is", "+        // used and throws an exception during setUp then startTest", "+        // would never have been called", "+        if (currentTest == null) {", "+            startTest(test);", "+            currentTest = (Element) testElements.get(test);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c130cb33af1b040aeeaaacff08fa99e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "dea3b5a66a03d45bf0eb0eb81a35cd184f2fc4bf", "commitAfterChange": "6a3d5030bb4a0e4e05944e6c906881bd047fa5c5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "signatureAfterChange": "     private void doOneJar(File jarSource, File jarTarget)         throws BuildException", "diff": ["+        long lastModified = jarSource.lastModified();", "+", "+        // restore the lastModified attribute", "+        if (preserveLastModified) {", "+            if (jarTarget != null) {", "+                jarTarget.setLastModified(lastModified);", "+            } else {", "+                jarSource.setLastModified(lastModified);", "+            }", "+        }"]}]}