{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb7033b095a82604c88ad388feb2a0eb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61feed8a12e8b1a5dc75fdcfc09c4e83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "b19ac2c39b9ba407994ec7ef2fce7972f274f22f", "commitAfterChange": "bf042df7ec488399fe7db09e73454320f27b8ef1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void transform() throws BuildException", "signatureAfterChange": "     public void transform() throws BuildException", "diff": ["-        String tempFileProperty = getClass().getName() + String.valueOf(counter++);", "-        File tmp = FILE_UTILS.resolveFile(project.getBaseDir(),", "-                project.getProperty(\"java.io.tmpdir\"));", "-        tempFileTask.setDestDir(tmp);", "-        tempFileTask.setProperty(tempFileProperty);", "-        tempFileTask.execute();", "-        File dummyFile = new File(project.getProperty(tempFileProperty));", "-        xsltTask.setOut(dummyFile);", "+        File outputFile = null;", "+        if (format.equals(FRAMES)) {", "+            String tempFileProperty = getClass().getName() + String.valueOf(counter++);", "+            File tmp = FILE_UTILS.resolveFile(project.getBaseDir(),", "+                    project.getProperty(\"java.io.tmpdir\"));", "+            tempFileTask.setDestDir(tmp);", "+            tempFileTask.setProperty(tempFileProperty);", "+            tempFileTask.execute();", "+            outputFile = new File(project.getProperty(tempFileProperty));", "+        } else {", "+            outputFile = new File(toDir, \"junit-noframes.html\");", "+        }", "+        xsltTask.setOut(outputFile);", "-        Delete delete = new Delete();", "-        delete.bindToOwner(task);", "-        delete.setFile(dummyFile);", "-        delete.execute();", "+        if (format.equals(FRAMES)) {", "+            Delete delete = new Delete();", "+            delete.bindToOwner(task);", "+            delete.setFile(outputFile);", "+            delete.execute();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8f1b1698cf5db9be51e5a3dbae4fe5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "f274a4b1ad577013835b77ba608c546847cd063c", "commitAfterChange": "e7734def8b0961af37c37eb1964a7e9ffdd052ca", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void transform() throws BuildException", "signatureAfterChange": "     public void transform() throws BuildException", "diff": ["+     */", "+        Project project = task.getProject();", "+", "+        TempFile tempFileTask = new TempFile();", "+        tempFileTask.bindToOwner(task);", "+        String tempFileProperty = getClass().getName() + String.valueOf(counter++);", "+        File tmp = FILE_UTILS.resolveFile(project.getBaseDir(),", "+                project.getProperty(\"java.io.tmpdir\"));", "+        tempFileTask.setDestDir(tmp);", "+        tempFileTask.setProperty(tempFileProperty);", "+        tempFileTask.execute();", "+", "+        XSLTProcess xsltTask = new XSLTProcess();", "+        xsltTask.bindToOwner(task);", "+", "+        xsltTask.addConfigured(getStylesheet());", "+        // acrobatic cast.", "+        xsltTask.setIn(((XMLResultAggregator) task).getDestinationFile());", "+        File dummyFile = new File(project.getProperty(tempFileProperty));", "+        xsltTask.setOut(dummyFile);", "+        for (Iterator i = params.iterator(); i.hasNext();) {", "+            XSLTProcess.Param param = (XSLTProcess.Param) i.next();", "+            XSLTProcess.Param newParam = xsltTask.createParam();", "+            newParam.setProject(task.getProject());", "+            newParam.setName(param.getName());", "+            newParam.setExpression(param.getExpression());", "+        }", "+        XSLTProcess.Param paramx = xsltTask.createParam();", "+        paramx.setProject(task.getProject());", "+        paramx.setName(\"output.dir\");", "+        paramx.setExpression(toDir.getAbsolutePath());", "-        XalanExecutor executor = XalanExecutor.newInstance(this);", "-            executor.execute();", "+            xsltTask.execute();", "-                + e.getMessage(), e);", "+                    + e.getMessage(), e);", "+        Delete delete = new Delete();", "+        delete.bindToOwner(task);", "+        delete.setFile(dummyFile);", "+        delete.execute();"]}]}