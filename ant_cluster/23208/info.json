{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e741a584a36d417efed04fefe4ccaa0a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "440a9532a3a31e447e251bb443336316", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "82a46c50a78bdae63bf0b778d32c66c4ad83897e", "commitAfterChange": "9d2aa2ba1d3c21b509be909d7db2ba0d79ea5a6d", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected List getDelegateInterfaces(Delegate d)", "signatureAfterChange": "     protected Set getDelegateInterfaces(Delegate d)", "diff": ["-    protected List getDelegateInterfaces(Delegate d) {", "-        Class[] c = d.getClass().getInterfaces();", "-        ArrayList result = new ArrayList();", "-        for (int i = 0; i < c.length; i++) {", "-            if (Delegate.class.isAssignableFrom(c[i]) && !Delegate.class.equals(c[i])) {", "-                result.add(c[i]);", "+    protected Set getDelegateInterfaces(Delegate d) {", "+        HashSet result = new HashSet();", "+        Class c = d.getClass();", "+        while (c != null) {", "+            Class[] ifs = c.getInterfaces();", "+            for (int i = 0; i < ifs.length; i++) {", "+                if (Delegate.class.isAssignableFrom(ifs[i])) {", "+                    result.add(ifs[i]);", "+                }", "+            c = c.getSuperclass();", "+        result.remove(Delegate.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfce2678d5ad7b5682658c20fb298f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     protected static Set getDelegateInterfaces(Delegate d)", "signatureAfterChange": "     protected static Set<Class<? extends Delegate>> getDelegateInterfaces(Delegate d)", "diff": ["-    protected static Set getDelegateInterfaces(Delegate d) {", "-        HashSet result = new HashSet();", "-        Class c = d.getClass();", "+    protected static Set<Class<? extends Delegate>> getDelegateInterfaces(Delegate d) {", "+        final HashSet<Class<? extends Delegate>> result = new HashSet<Class<? extends Delegate>>();", "+        Class<?> c = d.getClass();", "-            Class[] ifs = c.getInterfaces();", "+            Class<?>[] ifs = c.getInterfaces();", "-                    result.add(ifs[i]);", "+                    @SuppressWarnings(\"unchecked\")", "+                    final Class<? extends Delegate> delegateInterface = (Class<? extends Delegate>) ifs[i];", "+                    result.add(delegateInterface);"]}]}