{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f41fa4d0c0f899a48e741af091cd09a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c735e8c40278f43d605cc3025781a444", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testStyleIsSet() throws Exception", "signatureAfterChange": "      @Test     public void testStyleIsSet() throws Exception", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"testStyleIsSet\",", "-                \"no stylesheet specified\", \"specify the \" +", "-                \"stylesheet either as a filename in style \" +", "-                \"attribute or as a nested resource\");", "+", "+        try {", "+            buildRule.executeTarget(\"testStyleIsSet\");", "+            fail(\"Must throws a BuildException: no stylesheet specified\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"specify the stylesheet either as a filename in style attribute or as a nested resource\",", "+                    ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea3c492274f9b2fe6c9b40cdd0e9617b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void test3()", "signatureAfterChange": "      @Test     public void test3()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"test3\", \"invalid input\",", "-                                     \"Found invalid input test for \\'\"", "-                                     + getKey(\"All data is\"", "-                                              + \" going to be deleted from DB\"", "-                                              + \" continue?\")", "-                                     + \"\\'\");", "-    }", "+            buildRule.executeTarget(\"test3\");", "+            fail(\"BuildException expected: invalid input\");", "+        } catch (BuildException ex) {", "+             assertEquals(\"Found invalid input test for 'All data is going to be deleted from DB continue?'\",", "+                     ex.getMessage());"]}]}