{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a26f8cb9046513d4a3426b8698dad383", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11fff1c14c47a8529f865f7eca890ee9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java", "commitBeforeChange": "69cff8fa828c6ad507c770e5726aebe83668a722", "commitAfterChange": "b6410584b65289fce8b334f40163fa2b6203479d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected int executeExternalCompile( String[] args, int firstFileName )         throws TaskException", "signatureAfterChange": "     protected int executeExternalCompile( String[] args, int firstFileName )         throws TaskException", "diff": ["-            final ExecManager execManager = (ExecManager)m_attributes.getService( ExecManager.class );", "-            final Execute exe = new Execute( execManager );", "+            final Execute exe = new Execute();", "-            return exe.execute();", "+            return exe.execute( getTaskContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7441ed5a3e0b1ff1917b5b5defcdb152", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "5c465673396e517bfe637393d2ac2bdf98a0cb62", "commitAfterChange": "c5a01d909ced9e431f155f2225d8232d1301cbde", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean checkClass(String classname)", "signatureAfterChange": "     private boolean checkClass(String classname)", "diff": ["-            Class requiredClass = null;", "-                        requiredClass = loader.findClass(classname);", "+                        loader.findClass(classname);", "-                requiredClass = loader.loadClass(classname);", "+                loader.loadClass(classname);", "-                    requiredClass = Class.forName(classname, true, l);", "+                    Class.forName(classname, true, l);", "-                    requiredClass = Class.forName(classname);", "+                    Class.forName(classname);"]}]}