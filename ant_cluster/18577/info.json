{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe0d5ef87a944b3d4c245b18fb3e4060", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8793735f9b18bc8bc984185b62f4cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "809dcaf2876c3362c38151af140a9d6225baaeb8", "commitAfterChange": "44bbe5b1395e8cb74fc90cfb4f688c890c941024", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["+        //Attempt complete directory renames, if any, first.", "+        if (completeDirMap.size() > 0) {", "+            Enumeration e = completeDirMap.keys();", "+            while (e.hasMoreElements()) {", "+                File fromDir = (File) e.nextElement();", "+                File toDir = (File) completeDirMap.get(fromDir);", "+                try {", "+                    log(\"Attempting to rename dir: \" + fromDir +", "+                        \" to \" + toDir, verbosity);", "+                    renameFile(fromDir, toDir, filtering, forceOverwrite);", "+                } catch (IOException ioe) {", "+                    String msg = \"Failed to rename dir \" + fromDir", "+                        + \" to \" + toDir", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new BuildException(msg, ioe, location);", "+                }", "+            }", "+        }", "-                File d = new File(toFile);", "-                try {", "-                    log(\"Attempting to rename: \" + fromFile +", "-                        \" to \" + toFile, verbosity);", "-                    moved = renameFile(f, d, filtering, forceOverwrite);", "-                } catch (IOException ioe) {", "-                    String msg = \"Failed to rename \" + fromFile ", "-                        + \" to \" + toFile", "-                        + \" due to \" + ioe.getMessage();", "-                    throw new BuildException(msg, ioe, location);", "-                }", "+                if (f.exists()) { //Is this file still available to be moved?", "+                    File d = new File(toFile);", "-                if (!moved) {", "-                        log(\"Moving \" + fromFile + \" to \" + toFile, verbosity);", "-                    ", "-                        FilterSetCollection executionFilters = new FilterSetCollection();", "-                        if (filtering) {", "-                            executionFilters.addFilterSet(project.getGlobalFilterSet());", "-                        }", "-                        for (Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();) {", "-                            executionFilters.addFilterSet((FilterSet)filterEnum.nextElement());", "-                        }", "-                        getFileUtils().copyFile(f, d, executionFilters,", "-                                                forceOverwrite);", "-                        ", "-                        f = new File(fromFile);", "-                        if (!f.delete()) {", "-                            throw new BuildException(\"Unable to delete file \" ", "-                                                     + f.getAbsolutePath());", "-                        }", "+                        log(\"Attempting to rename: \" + fromFile +", "+                            \" to \" + toFile, verbosity);", "+                        moved = renameFile(f, d, filtering, forceOverwrite);", "-                        String msg = \"Failed to copy \" + fromFile + \" to \" ", "-                            + toFile", "+                        String msg = \"Failed to rename \" + fromFile", "+                            + \" to \" + toFile", "+                    }", "+", "+                    if (!moved) {", "+                        try {", "+                            log(\"Moving \" + fromFile + \" to \" + toFile, verbosity);", "+", "+                            FilterSetCollection executionFilters = new FilterSetCollection();", "+                            if (filtering) {", "+                                executionFilters.addFilterSet(project.getGlobalFilterSet());", "+                            }", "+                            for (Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();) {", "+                                executionFilters.addFilterSet((FilterSet)filterEnum.nextElement());", "+                            }", "+                            getFileUtils().copyFile(f, d, executionFilters,", "+                                                    forceOverwrite);", "+", "+                            f = new File(fromFile);", "+                            if (!f.delete()) {", "+                                throw new BuildException(\"Unable to delete file \"", "+                                                         + f.getAbsolutePath());", "+                            }", "+                        } catch (IOException ioe) {", "+                            String msg = \"Failed to copy \" + fromFile + \" to \"", "+                                + toFile", "+                                + \" due to \" + ioe.getMessage();", "+                            throw new BuildException(msg, ioe, location);", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12978080edfeee700c1d2528f71c8dc8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "aa8f01df3ca1287a3cab4e27edb8093384748c92", "commitAfterChange": "ffc9cedabb995d6a96b5c26031e8790f2815445a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-            log(\"Moving \" + fileCopyMap.size() + \" files to \" + ", "+            log(\"Moving \" + fileCopyMap.size() + \" files to \" +", "-                try {", "-                    log(\"Moving \" + fromFile + \" to \" + toFile, verbosity);", "-                    ", "-                    FilterSet executionFilterSet = new FilterSet();", "-                    if (filtering) {", "-                        executionFilterSet.addFilterSet(project.getGlobalFilterSet());", "-                    }", "-                    for (Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();) {", "-                        executionFilterSet.addFilterSet((FilterSet)filterEnum.nextElement());", "-                    }", "-                    getFileUtils().copyFile(fromFile, toFile, executionFilterSet,", "-                                            forceOverwrite);", "+                if( fromFile.equals( toFile ) ) {", "+                    log(\"Skipping self-move of \" + fromFile, verbosity);", "+                    continue;", "+                }", "-                    File f = new File(fromFile);", "-                    if (!f.delete()) {", "-                        throw new BuildException(\"Unable to delete file \" + f.getAbsolutePath());", "-                    }", "+                boolean moved = false;", "+                File f = new File(fromFile);", "+                File d = new File(toFile);", "+", "+                try {", "+                    log(\"Attempting to rename: \" + fromFile +", "+                        \" to \" + toFile, verbosity);", "+                    moved = renameFile(f, d, filtering, forceOverwrite);", "-                    String msg = \"Failed to copy \" + fromFile + \" to \" + toFile", "+                    String msg = \"Failed to rename \" + fromFile ", "+                        + \" to \" + toFile", "+                }", "+", "+                if (!moved) {", "+                    try {", "+                        log(\"Moving \" + fromFile + \" to \" + toFile, verbosity);", "+                    ", "+                        FilterSet executionFilterSet = new FilterSet();", "+                        if (filtering) {", "+                            executionFilterSet.addFilterSet(project.getGlobalFilterSet());", "+                        }", "+                        for (Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();) {", "+                            executionFilterSet.addFilterSet((FilterSet)filterEnum.nextElement());", "+                        }", "+                        getFileUtils().copyFile(f, d, executionFilterSet,", "+                                                forceOverwrite);", "+                        ", "+                        f = new File(fromFile);", "+                        if (!f.delete()) {", "+                            throw new BuildException(\"Unable to delete file \" ", "+                                                     + f.getAbsolutePath());", "+                        }", "+                    } catch (IOException ioe) {", "+                        String msg = \"Failed to copy \" + fromFile + \" to \" ", "+                            + toFile", "+                            + \" due to \" + ioe.getMessage();", "+                        throw new BuildException(msg, ioe, location);", "+                    }"]}]}