{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e1b40180d231b93b65303362dc6d3fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02354575fe8f9f96870b15a031350e68", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "677491b9276e57da76218487af18cfda70aa28af", "commitAfterChange": "a05d1f12196d34b23d4ab80c3598f6fb63410ac5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected static byte[] toDosTime(long t)", "signatureAfterChange": "     protected static byte[] toDosTime(long t)", "diff": ["-            return DOS_TIME_MIN.getBytes();", "+            return DOS_TIME_MIN;", "-        byte[] result = new byte[4];", "-        result[0] = (byte) ((value & 0xFF));", "-        result[1] = (byte) ((value & 0xFF00) >> 8);", "-        result[2] = (byte) ((value & 0xFF0000) >> 16);", "-        result[3] = (byte) ((value & 0xFF000000L) >> 24);", "-        return result;", "+        return ZipLong.getBytes(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "840f79039810e140092da42a52af9950", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipLong.java", "commitBeforeChange": "35cadddc9862a72009a774f7d5939b338b434e60", "commitAfterChange": "4c69b551ec82319466630d5d268e4b840cd0b909", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static byte[] getBytes(long value)", "signatureAfterChange": "     public static byte[] getBytes(long value)", "diff": ["-        byte[] result = new byte[4];", "-        result[0] = (byte) ((value & 0xFF));", "-        result[1] = (byte) ((value & 0xFF00) >> 8);", "-        result[2] = (byte) ((value & 0xFF0000) >> 16);", "-        result[3] = (byte) ((value & 0xFF000000L) >> 24);", "+        byte[] result = new byte[WORD];", "+        result[0] = (byte) ((value & BYTE_MASK));", "+        result[BYTE_1] = (byte) ((value & BYTE_1_MASK) >> BYTE_1_SHIFT);", "+        result[BYTE_2] = (byte) ((value & BYTE_2_MASK) >> BYTE_2_SHIFT);", "+        result[BYTE_3] = (byte) ((value & BYTE_3_MASK) >> BYTE_3_SHIFT);"]}]}