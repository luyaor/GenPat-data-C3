{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e254403b8d0cdff87d393660aa610a94", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b96de571b5b3c8d81223d449a38db6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/text/Native2Ascii.java", "commitBeforeChange": "1eaa635f8f7df4b83c490157ec5baa97d487e8b8", "commitAfterChange": "2afc643a3ea676cc68f2f010ea3a7560b7a0a3af", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        files = sfs.restrict( files, m_srcDir, m_destDir, mapper );", "+        files = sfs.restrict( files, m_srcDir, m_destDir, mapper, getContext() );", "-            final String name = mapper.mapFileName( files[ i ] )[ 0 ];", "+            final String name = mapper.mapFileName( files[ i ], getContext() )[ 0 ];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4255dfc99b0352091021c1c609f9db43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/metamata/MAudit.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected ArrayList getOptions()         throws TaskException", "signatureAfterChange": "      protected ArrayList getOptions()         throws TaskException", "diff": ["-        final String formattedClasspath = PathUtil.formatPath( classpath );", "+        final String formattedClasspath = PathUtil.formatPath( classpath, getContext() );", "-            options.add( PathUtil.formatPath( m_searchPath ) );", "+            options.add( PathUtil.formatPath( m_searchPath, getContext() ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "550d688b73b48119012dcaf962139ef8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/file/CopyTask.java", "commitBeforeChange": "1eaa635f8f7df4b83c490157ec5baa97d487e8b8", "commitAfterChange": "2afc643a3ea676cc68f2f010ea3a7560b7a0a3af", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private String[] buildFilenameList( final String[] names,                                         final FileNameMapper mapper,                                         final File fromDir,                                         final File toDir )         throws TaskException", "signatureAfterChange": "     private String[] buildFilenameList( final String[] names,                                         final FileNameMapper mapper,                                         final File fromDir,                                         final File toDir )         throws TaskException", "diff": ["-                if( null != mapper.mapFileName( name ) )", "+                if( null != mapper.mapFileName( name, getContext() ) )", "-            return scanner.restrict( names, fromDir, toDir, mapper );", "+            return scanner.restrict( names, fromDir, toDir, mapper, getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d758d2372a42352b868f6a905d77fd5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/text/Native2Ascii.java", "commitBeforeChange": "1eaa635f8f7df4b83c490157ec5baa97d487e8b8", "commitAfterChange": "2afc643a3ea676cc68f2f010ea3a7560b7a0a3af", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        files = sfs.restrict( files, m_srcDir, m_destDir, mapper );", "+        files = sfs.restrict( files, m_srcDir, m_destDir, mapper, getContext() );", "-            final String name = mapper.mapFileName( files[ i ] )[ 0 ];", "+            final String name = mapper.mapFileName( files[ i ], getContext() )[ 0 ];"]}]}