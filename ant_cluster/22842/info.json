{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a6d58593b0fddbe6344aeee2da8f996", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a88fef8ddc277012ad687a09325feb8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "0a679803f04b2e3e9d63c5f6b46677b0cf713d6b", "commitAfterChange": "a4e5c13b86391f9b7ad23e326fe3d2bb66a16cc7", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 93, "signatureBeforeChange": "     protected int transferFiles(final FTPClient ftp, FileSet fs)          throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles(final FTPClient ftp, FileSet fs)         throws IOException, BuildException", "diff": ["-         throws IOException, BuildException {", "+        throws IOException, BuildException {", "-            // warn that selectors are not supported", "-            if (fs.getSelectors(getProject()).length != 0) {", "-                getProject().log(\"selectors are not supported in remote filesets\",", "-                    Project.MSG_WARN);", "-            }", "-             && ((action == SEND_FILES) || (action == GET_FILES))) {", "+            && ((action == SEND_FILES) || (action == GET_FILES))) {", "-                 + \"and get actions\");", "+                                     + \"and get actions\");", "-                        public void execute() throws IOException {", "-                            rmDir(ftp, dsfile);", "-                        }", "-                    }, dsfile);", "+                            public void execute() throws IOException {", "+                                rmDir(ftp, dsfile);", "+                            }", "+                        }, dsfile);", "-                        public void execute() throws IOException {", "-                            switch (action) {", "+                            public void execute() throws IOException {", "+                                switch (action) {", "+                                }", "-                        }", "-                    }, dsfile);", "+                        }, dsfile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce8722eb66339cdfed60dcb8be0625a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "334ac128fea4c6e8e76c7c8af8061a47b5019bf4", "commitAfterChange": "ba37bf7991e099b567f8cd5a09178893ff55bb9c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "          protected void executeOn(Properties props) throws BuildException", "signatureAfterChange": "          protected void executeOn(Properties props) throws BuildException", "diff": ["-        protected void executeOn(Properties props) throws BuildException ", "+        protected void executeOn(Properties props) throws BuildException", "-            // Fork off process per the operation type requested", "+            checkParameters();", "-            if (m_type.equals(INTEGER_TYPE)) ", "-            {", "-                executeInteger((String)props.get(m_key));", "-            }", "-            else if (m_type.equals(DATE_TYPE)) ", "-            {", "-                executeDate((String)props.get(m_key));", "-            }", "-            else if (m_type.equals(STRING_TYPE)) ", "-            {", "-            }", "-            else ", "-            {", "-                throw new BuildException(\"Unknown operation type: \"+m_type+\"\");", "-            }", "-            ", "+                if (m_type == Type.INTEGER_TYPE)", "+                {", "+                    executeInteger((String)props.get(m_key));", "+                }", "+                else if (m_type == Type.DATE_TYPE)", "+                {", "+                    executeDate((String)props.get(m_key));", "+                }", "+                else if (m_type == Type.STRING_TYPE)", "+                {", "+                    executeString((String)props.get(m_key));", "+                }", "+                else", "+                {", "+                    throw new BuildException(\"Unknown operation type: \"+m_type+\"\");", "+                }", "+                npe.printStackTrace();"]}]}