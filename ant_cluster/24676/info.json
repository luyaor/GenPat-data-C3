{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e64b0df4f0e6ad4623fe1bec91142614", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159f814c73a53ffe2614721ff1536426", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "bd2c472af4fc8428f494cfd929dfd098100ceb41", "commitAfterChange": "64c4989ed4575a005c66a87a194791cf15ce27f4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser,                                   FileSet supportFileSet)", "signatureAfterChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "diff": ["-    public void processDescriptor(String descriptorFileName, SAXParser saxParser,", "-                                  FileSet supportFileSet) {", "+    public void processDescriptor(String descriptorFileName, SAXParser saxParser) {", "-            DescriptorHandler handler = getDescriptorHandler(srcDir);", "+            DescriptorHandler handler = getDescriptorHandler(config.srcDir);", "-            descriptorStream = new FileInputStream(new File(getDescriptorDir(), descriptorFileName));", "+            descriptorStream = new FileInputStream(new File(config.descriptorDir, descriptorFileName));", "-            if (supportFileSet != null) {", "+            if (config.supportFileSet != null) {", "-                File supportBaseDir = supportFileSet.getDir(project);", "-                ", "-                DirectoryScanner supportScanner = supportFileSet.getDirectoryScanner(project);", "+                File supportBaseDir = config.supportFileSet.getDir(project);", "+                DirectoryScanner supportScanner = config.supportFileSet.getDirectoryScanner(project);", "-            if (baseJarName != null) {", "-                baseName = baseJarName;", "+            if (config.baseJarName != null) {", "+                baseName = config.baseJarName;", "-                    endBaseName = descriptorFileName.indexOf(baseNameTerminator, ", "+                    endBaseName = descriptorFileName.indexOf(config.baseNameTerminator, ", "-                    endBaseName = descriptorFileName.indexOf(baseNameTerminator);", "+                    endBaseName = descriptorFileName.indexOf(config.baseNameTerminator);", "-                         new File(getDescriptorDir(), descriptorFileName));", "+                         new File(config.descriptorDir, descriptorFileName));", "-            if (flatDestDir && baseName.length() != 0) {", "+            if (config.flatDestDir && baseName.length() != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af8422fb531eef4f61f3d6f67615a0e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BatchTest.java", "commitBeforeChange": "e9117208e20934276266169c6b434a102371883e", "commitAfterChange": "c30a74289ebfd6c0f714cb63bc952a6340b5fca6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public final Object nextElement() throws NoSuchElementException", "signatureAfterChange": "     private JUnitTest createJUnitTest(String classname)", "diff": ["-", "-        public final Object nextElement() throws NoSuchElementException{", "-            if(hasMoreElements()){", "-                JUnitTest test = new JUnitTest(javaToClass(files[i]));", "-                test.setHaltonerror(haltOnError);", "-                test.setHaltonfailure(haltOnFail);", "-                test.setFork(fork);", "-                test.setIf(ifProperty);", "-                test.setUnless(unlessProperty);", "-                test.setTodir(destDir);", "-                Enumeration list = formatters.elements();", "-                while (list.hasMoreElements()) {", "-                    test.addFormatter((FormatterElement)list.nextElement());", "-                }", "-                i++;", "-                return test;", "-            }", "-            throw new NoSuchElementException();", "-        }", "+     */", "+    private JUnitTest createJUnitTest(String classname){", "+        JUnitTest test = new JUnitTest();", "+        test.setName(classname);", "+        test.setHaltonerror(this.haltOnError);", "+        test.setHaltonfailure(this.haltOnFail);", "+        test.setFork(this.fork);", "+        test.setIf(this.ifProperty);", "+        test.setUnless(this.unlessProperty);", "+        test.setTodir(this.destDir);", "+        Enumeration list = this.formatters.elements();", "+        while (list.hasMoreElements()) {", "+            test.addFormatter((FormatterElement)list.nextElement());", "+        }", "+        return test;", "+    }"]}]}