{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7137b36b32591e196a6f6c9b36305f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706410f6e28ff7682eecd7d9d305285d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Object convert( Class destination, final Object original )         throws Exception", "signatureAfterChange": "      public Object convert( Class destination, final Object original )         throws Exception", "diff": ["+        final Class originalClass = original.getClass();", "+", "+        if( destination.isAssignableFrom( originalClass ) )", "+        {", "+            return original;", "+        }", "+", "+        if( DEBUG )", "+        {", "+            m_logger.debug( \"Looking for converter from \" + originalClass.getName() +", "+                            \" to \" + destination.getName() );", "+        }", "+", "-            m_converterRegistry.getConverterInfoName( original.getClass().getName(), ", "-                                                      destination.getName() );", "+            m_infoRegistry.getConverterInfoName( originalClass.getName(), ", "+                                                 destination.getName() );", "-                                          original.getClass() + \" to \" + destination + ", "-                                          \" conversion\" );", "+                                          originalClass.getName() + \" to \" + ", "+                                          destination.getName() + \" conversion\" );", "-        final Locator locator = m_locatorRegistry.getLocator( name );", "+        final Locator locator = m_registry.getLocator( name );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9062c5899389a55ff71f97b23be8777f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/configuration/DefaultConfigurer.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void configure( final Object object,                             final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                             final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["+        if( DEBUG )", "+        {", "+            m_logger.debug( \"Configuring \" + object );", "+        }", "+", "+            if( DEBUG ) ", "+            {", "+                m_logger.debug( \"Configuring object via Configurable interface\" );", "+            }", "+", "-            final Iterator attributes = configuration.getAttributeNames();", "+            if( DEBUG ) ", "+            {", "+                m_logger.debug( \"Configuring object via Configurable reflection\" );", "+            }", "+            final Iterator attributes = configuration.getAttributeNames();", "+             ", "+                if( DEBUG ) ", "+                {", "+                    m_logger.debug( \"Configuring attribute name=\" + name +", "+                                    \" value=\" + value );", "+                }", "+                ", "+                ", "+                if( DEBUG ) ", "+                {", "+                    m_logger.debug( \"Configuring subelement name=\" + element.getName() );", "+                }", "+                ", "+                    if( DEBUG ) ", "+                    {", "+                        m_logger.debug( \"Configuring content \" + content );", "+                    }", "+                    "]}]}