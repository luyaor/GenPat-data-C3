{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e48ac5b5d7a45fc124f1e35a5dc6e38", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90d228acfa90f841543011d090a8b001", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "f91f776468c676f75f26ceedd0bfec27d8502da3", "commitAfterChange": "b30c144309f56e380bbc34897b8ab7ff29c40f17", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private ProjectListener createListener( final String listener )         throws Exception", "signatureAfterChange": "     private ProjectListener createListener( final String listener )         throws Exception", "diff": ["-            throw new Exception( \"Error creating the listener \" + listener +", "-                                 \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ) );", "+            final String message = ", "+                REZ.getString( \"bad-listener.error\", ", "+                               listener, ", "+                               ExceptionUtil.printStackTrace( t, 5, true ) );", "+            throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b20989cde152c2056a91e0b2740c73b0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "b3c44651dba0b0dd33a68baab7afdb4175d6fe93", "commitAfterChange": "f522a0a7baf7e79ed933ed7714e6c6c15c51ac0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void buildTopLevelProject( final DefaultProject project,                                         final Configuration configuration,                                        final HashMap projects )         throws Exception", "signatureAfterChange": "     private void buildTopLevelProject( final DefaultProject project,                                         final Configuration configuration,                                        final HashMap projects )         throws Exception", "diff": ["-                throw new Exception( \"Unknown top-level element \" + name +", "-                                     \" at \" + element.getLocation() +", "-                                     \". Expecting target\" );", "+                final String message = ", "+                    REZ.getString( \"ant.unknown-toplevel-element.error\", name, element.getLocation() );", "+                throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b22ad82c391dbb6f3b77804ad4db6565", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "fd0da1440ca6e87774f1aa42277c55f5d708ecea", "commitAfterChange": "523f5d39aad823b0144d6daa7ff43f6fa1fb5e55", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void configureElement( final Object object,                                    final Configuration configuration,                                    final Context context )         throws ConfigurationException", "signatureAfterChange": "      private void configureElement( final Object object,                                    final Configuration configuration,                                    final Context context )         throws ConfigurationException", "diff": ["-                throw new ConfigurationException( \"Unable to set attribute \" + javaName +", "-                                                  \" due to not finding any appropriate \" +", "-                                                  \"accessor method\" );", "+                final String message =", "+                    REZ.getString( \"no-element-method.error\", javaName );", "+                throw new ConfigurationException( message );"]}]}