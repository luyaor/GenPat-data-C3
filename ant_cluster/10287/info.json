{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78c238235689c923c48c3421c7bbfb9a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24f0e3862f003b5eb236dd4423e39578", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "12a8163d89f051f1950a8e2b136edbe08b6cc711", "commitAfterChange": "5db106732ce0f855fd2b03fd68104a708acf7996", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void moveGeneratedFile (File baseDir, File sourceBaseFile,                                     String classname,                                     RmicAdapter adapter)         throws BuildException", "signatureAfterChange": "     private void moveGeneratedFile (File baseDir, File sourceBaseFile,                                     String classname,                                     RmicAdapter adapter)         throws BuildException", "diff": ["-                project.copyFile(oldFile, newFile, filtering);", "+                if (filtering) {", "+                    fileUtils.copyFile(oldFile, newFile, ", "+                        new FilterSetCollection(getProject()", "+                                                .getGlobalFilterSet()));", "+                } else {", "+                    fileUtils.copyFile(oldFile, newFile);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "313a0f8d33e6dbe2487c068358d9433e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "a0c1be104d8f7ddca6eeb6687404db4b6d373483", "commitAfterChange": "a92061f3cbf0d7fceefa95cbd9946032b8fcdd2b", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": "     protected void configureLiaison(Resource stylesheet) throws BuildException", "signatureAfterChange": "     protected void configureLiaison(Resource stylesheet) throws BuildException", "diff": ["-                    throw new BuildException(liaison.getClass().toString()", "-                            + \" accepts the stylesheet only as a file\", getLocation());", "+                    handleError(liaison.getClass().toString()", "+                                + \" accepts the stylesheet only as a file\");", "+                    return;", "-            throw new BuildException(ex);", "+            handleTransformationError(ex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d7a1c3485523f2af1e0370686ef997c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "7587f42590ecc4016fc8c1e39b526f5c3d6e940d", "commitAfterChange": "6b9311408eb806b8a5d1b2a9f2f500df3a59e5b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void processExceptions(TaskRunnable[] runnables)", "signatureAfterChange": "      private void processExceptions(TaskRunnable[] runnables)", "diff": ["+                }", "+                if (t instanceof ExitStatusException", "+                    && firstExitStatus == null) {", "+                    ExitStatusException ex = (ExitStatusException) t;", "+                    firstExitStatus = ex.getStatus();", "+                    // potentially overwriting existing value but the", "+                    // location should match the exit status", "+                    firstLocation = ex.getLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb86a50d2dcbcdd9ca94942917d10f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "dd331380034e56665a87267b93bee68692388a00", "commitAfterChange": "54d0543e15fa3f621e3c3721e43bdcdd8830b0fc", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected Resource[][] grabResources(FileSet[] filesets)", "signatureAfterChange": "     protected Resource[][] grabResources(FileSet[] filesets)", "diff": ["+            boolean skipEmptyNames = true;", "+            if (filesets[i] instanceof ZipFileSet) {", "+                ZipFileSet zfs = (ZipFileSet) filesets[i];", "+                skipEmptyNames = zfs.getPrefix(getProject()).equals(\"\")", "+                    && zfs.getFullpath(getProject()).equals(\"\");", "+            }", "+                if (!\"\".equals(directories[0]) || !skipEmptyNames) {", "+                }", "+                if (!\"\".equals(files[0]) || !skipEmptyNames) {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "787841cde54e829bf45c9dbde4396a9c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/NetRexxC.java", "commitBeforeChange": "d24621d411a4747336fc76f8dcd2910b43b888ca", "commitAfterChange": "ddf5cd73c9f609b1fc5da325e186b68e6093e717", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private void doNetRexxCompile() throws BuildException", "signatureAfterChange": "     private void doNetRexxCompile() throws BuildException", "diff": ["+            PrintWriter w = null;", "-                COM.ibm.netrexx.process.NetRexxC.main(new Rexx(compileArgs), new PrintWriter(out));", "+                COM.ibm.netrexx.process.NetRexxC.main(new Rexx(compileArgs),", "+                                                      w = new PrintWriter(out));", "+            if (w.checkError()) {", "+                throw new IOException(\"Encountered an error\");", "+            }"]}]}