{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6de3f6254855956942a2f92dceefc75", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13430ec116991912d192405ac22cdd39", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "c9c2af1151e9f9b2749f88cd0f3f24f991b5c0b1", "commitAfterChange": "ac456bb17edacc8399a808bbd1f771bd11e130b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void addProperty (String name, String value, String id)", "signatureAfterChange": "     private void addProperty (String name, String value, String id)", "diff": ["-        } else {", "+            addedAttributes.put(name, value);", "+        } else if (getProject().getProperty(name) == null) {", "+            addedAttributes.put(name, value);", "+        } else {", "+            log(\"Override ignored for property \" + name, Project.MSG_VERBOSE);", "-        addedAttributes.put(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f5915d7285153e620c82b7e27bb5b71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/taskdefs/optional/JXPath.java", "commitBeforeChange": "b46b2e5859c3988c1d8c00a2a51957b92f26cee8", "commitAfterChange": "4b472fb764166b97cc0869e5e37df1abcbc83515", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          public boolean setProperty( String ns, String name, Object v, boolean inh,                                     boolean user, boolean isNew)", "signatureAfterChange": "          public boolean setProperty( String ns, String name, Object v, boolean inh,                                     boolean user, boolean isNew)", "diff": ["-            return false;", "+            if( ! name.startsWith(PREFIX) )", "+                return false;", "+            name=name.substring( PREFIX.length() );", "+", "+            jxpathCtx.setValue( name, v );", "+            return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee701e5793978a9711adbfc5e3db4d78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setDataValue(String name, Object value)          throws ExecutionException", "signatureAfterChange": "     protected void setDataValue(String name, Object value, boolean mutable)          throws ExecutionException", "diff": ["-    public void setDataValue(String name, Object value)", "+    protected void setDataValue(String name, Object value, boolean mutable)", "-            dataValues.put(name, value);", "+            if (dataValues.containsKey(name) && !mutable) {", "+                log(\"Ignoring oveeride for data value \" + name,", "+                    MessageLevel.MSG_VERBOSE);", "+            } else {", "+                dataValues.put(name, value);", "+            }", "-            frame.setDataValue(getNameInFrame(name), value);", "+            frame.setDataValue(getNameInFrame(name), value, mutable);"]}]}