{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d98a5fa43abd7a40f7859802e1a4c048", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e37902e058cb5cd9bbcb20e6b3bf42f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "764ef4fd852696fd3e620583affdd3b439af4d14", "commitAfterChange": "28b68ab7d0689dbc35dbdf26d2308786549b8985", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private AntClassLoader createLoader()", "signatureAfterChange": "     private AntClassLoader createLoader()", "diff": ["-        if (project.getProperty(REUSE_LOADER_REF) != null) {", "+        if (getProject().getProperty(REUSE_LOADER_REF) != null) {", "-            Object reusedLoader = project.getReference(loaderId);", "+            Object reusedLoader = getProject().getReference(loaderId);", "-            al = new AntClassLoader(project, classpath, !reverseLoader);", "+            al = new AntClassLoader(getProject(), classpath, !reverseLoader);", "-            al = new AntClassLoader(project, Path.systemClasspath,", "+            al = new AntClassLoader(getProject(), Path.systemClasspath,", "-            if (project.getReference(loaderId) == null) {", "-                project.addReference(loaderId, al);", "+            if (getProject().getReference(loaderId) == null) {", "+                getProject().addReference(loaderId, al);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66057385909d55f6f9440283561d6ba0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exec.java", "commitBeforeChange": "764ef4fd852696fd3e620583affdd3b439af4d14", "commitAfterChange": "28b68ab7d0689dbc35dbdf26d2308786549b8985", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected int run(String command) throws BuildException", "signatureAfterChange": "      protected int run(String command) throws BuildException", "diff": ["-          dir = project.getBaseDir();", "+          dir = getProject().getBaseDir();", "-            if (!dir.equals(project.resolveFile(\".\"))) {", "+            if (!dir.equals(getProject().resolveFile(\".\"))) {", "-                    String ant = project.getProperty(\"ant.home\");", "+                    String ant = getProject().getProperty(\"ant.home\");", "-                    String antRun = project.resolveFile(ant + \"/bin/antRun.bat\").toString();", "+                    String antRun = getProject().resolveFile(ant + \"/bin/antRun.bat\").toString();", "-            String ant = project.getProperty(\"ant.home\");", "+            String ant = getProject().getProperty(\"ant.home\");", "-            String antRun = project.resolveFile(ant + \"/bin/antRun\").toString();", "+            String antRun = getProject().resolveFile(ant + \"/bin/antRun\").toString();", "-                new StreamPumper(proc.getInputStream(), Project.MSG_INFO, this);", "+                new StreamPumper(proc.getInputStream(), Project.MSG_INFO);", "-                new StreamPumper(proc.getErrorStream(), Project.MSG_WARN, this);", "+                new StreamPumper(proc.getErrorStream(), Project.MSG_WARN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71f4899b87749203e3f9ff531dffec84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "1b5824a6f65d5ec5286668eb2e68fc2f698bef54", "commitAfterChange": "44ab3228838ef0339918046fe66af61df580163d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            printHead( out, project.getTaskDefinitions().keys(),", "-                       project.getDataTypeDefinitions().keys() );", "+            printHead( out, getProject().getTaskDefinitions().keys(),", "+                       getProject().getDataTypeDefinitions().keys() );", "-            Enumeration dataTypes = project.getDataTypeDefinitions().keys();", "+            Enumeration dataTypes = getProject().getDataTypeDefinitions().keys();", "-                                  (Class)project.getDataTypeDefinitions().get( typeName ) );", "+                                  (Class)getProject().getDataTypeDefinitions().get( typeName ) );", "-            Enumeration tasks = project.getTaskDefinitions().keys();", "+            Enumeration tasks = getProject().getTaskDefinitions().keys();", "-                                  (Class)project.getTaskDefinitions().get( taskName ) );", "+                                  (Class)getProject().getTaskDefinitions().get( taskName ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e581695c31d37f42ef3951f763d3da58", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "1b5824a6f65d5ec5286668eb2e68fc2f698bef54", "commitAfterChange": "44ab3228838ef0339918046fe66af61df580163d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            printHead( out, project.getTaskDefinitions().keys(),", "-                       project.getDataTypeDefinitions().keys() );", "+            printHead( out, getProject().getTaskDefinitions().keys(),", "+                       getProject().getDataTypeDefinitions().keys() );", "-            Enumeration dataTypes = project.getDataTypeDefinitions().keys();", "+            Enumeration dataTypes = getProject().getDataTypeDefinitions().keys();", "-                                  (Class)project.getDataTypeDefinitions().get( typeName ) );", "+                                  (Class)getProject().getDataTypeDefinitions().get( typeName ) );", "-            Enumeration tasks = project.getTaskDefinitions().keys();", "+            Enumeration tasks = getProject().getTaskDefinitions().keys();", "-                                  (Class)project.getTaskDefinitions().get( taskName ) );", "+                                  (Class)getProject().getTaskDefinitions().get( taskName ) );"]}]}