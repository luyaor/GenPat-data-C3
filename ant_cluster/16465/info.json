{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1349260ae060d8bbc2ec782671902a4a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6165659e94b881e7005a2ed9fa3da14a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "a8d43912400fdf1627f23abcfb1c27879c5e8153", "commitAfterChange": "df14132289636640ade9cc52ecf8bfdc4ba52433", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public Manifest(InputStream is) throws ManifestException, IOException", "signatureAfterChange": "     public Manifest(InputStream is) throws ManifestException, IOException", "diff": ["-        String line = reader.readLine();", "-        if (line == null) {", "-            return;", "-        }", "-        ", "+        String line = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c637db223abb76cca2376d558ec84694", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "1a02a5f570c6b91a6efc7233b47ad45feeee8b75", "commitAfterChange": "e0bed0aa143b567e005e51e811e5622e5103eacd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final TaskContext context,                                final PropertyConfigurer childConfigurer )         throws Exception", "signatureAfterChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final TaskContext context,                                final PropertyConfigurer childConfigurer )         throws Exception", "diff": ["-        Object child = childConfigurer.createValue( state );", "-        if( null == child )", "+        Object child = null;", "+        if( childConfigurer == state.getConfigurer().getTypedProperty() )", "-            if( childConfigurer == state.getConfigurer().getTypedProperty() )", "-            {", "-                // Typed property", "-                child = createTypedObject( name, type );", "-            }", "-            else", "-            {", "-                // Named property", "-                child = createNamedObject( type );", "-            }", "+            // Typed property", "+            child = createTypedObject( name, type );", "+        }", "+        else", "+        {", "+            // Named property", "+            child = createNamedObject( type );"]}]}