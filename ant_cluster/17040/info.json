{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "063739aa23b1d733bbf8cc628e05ace3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "286bbe07e647e4c20f579f07860ef218", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void setupBlock()", "signatureAfterChange": "      private void setupBlock() throws IOException", "diff": ["-    private void setupBlock() {", "-        int[] cftab = new int[257];", "-        char ch;", "-        cftab[0] = 0;", "-        for (int i = 1; i <= 256; i++) {", "-            cftab[i] = unzftab[i - 1];", "-        }", "-        for (int i = 1; i <= 256; i++) {", "-            cftab[i] += cftab[i - 1];", "-        }", "-        for (int i = 0; i <= last; i++) {", "-            ch = (char) ll8[i];", "-            tt[cftab[ch]] = i;", "-            cftab[ch]++;", "-        }", "-        cftab = null;", "-", "-        tPos = tt[origPtr];", "-", "-        count = 0;", "-        i2 = 0;", "-        ch2 = 256;   /* not a char and not EOF */", "-", "-        if (blockRandomised) {", "-            rNToGo = 0;", "-            rTPos = 0;", "-            setupRandPartA();", "-        } else {", "-            setupNoRandPartA();", "-        }", "-    }", "+    private void setupBlock() throws IOException {", "+        if (this.data == null) {", "+        final int[] cftab = this.data.cftab;", "+        final int[] tt    = this.data.initTT(this.last + 1);", "+        final byte[] ll8  = this.data.ll8;", "+        cftab[0] = 0;", "+        System.arraycopy(this.data.unzftab, 0, cftab, 1, 256);", "+", "+        for (int i = 1, c = cftab[0]; i <= 256; i++) {", "+            c += cftab[i];", "+            cftab[i] = c;", "+        }", "+", "+        for (int i = 0, last = this.last; i <= last; i++) {", "+            tt[cftab[ll8[i] & 0xff]++] = i;", "+        }", "+", "+        if ((this.origPtr < 0) || (this.origPtr >= tt.length)) {", "+            throw new IOException(\"stream corrupted\");", "+        }", "+", "+        this.su_tPos = tt[this.origPtr];", "+        this.su_count = 0;", "+        this.su_i2 = 0;", "+        this.su_ch2 = 256;   /* not a char and not EOF */", "+", "+        if (this.blockRandomised) {", "+            this.su_rNToGo = 0;", "+            this.su_rTPos = 0;", "+            setupRandPartA();", "+        } else {", "+            setupNoRandPartA();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d442d0f1099792e8b6eed9bcd984f480", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "228fb9839c21a0a853598e114faca72c8e9340e7", "commitAfterChange": "9922008d657c72235c402343fd88847b044014ad", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 39, "signatureBeforeChange": "      private void randomiseBlock()", "signatureAfterChange": "      private void randomiseBlock()", "diff": ["-    private void randomiseBlock() {", "-        int i;", "-        int rNToGo = 0;", "-        int rTPos  = 0;", "-        for (i = 0; i < 256; i++) {", "-            inUse[i] = false;", "-        }", "-", "-        for (i = 0; i <= last; i++) {", "-            if (rNToGo == 0) {", "-                rNToGo = (char) rNums[rTPos];", "-                rTPos++;", "-                if (rTPos == 512) {", "-                    rTPos = 0;", "-                }", "-            }", "-            rNToGo--;", "-            block[i + 1] ^= ((rNToGo == 1) ? 1 : 0);", "-            // handle 16 bit signed numbers", "-            block[i + 1] &= 0xFF;", "-", "-            inUse[block[i + 1]] = true;", "+", "+    private void randomiseBlock() {", "+        final boolean[] inUse = this.data.inUse;", "+        final byte[] block = this.data.block;", "+        final int lastShadow = this.last;", "+", "+        for (int i = 256; --i >= 0;)", "+            inUse[i] = false;", "+", "+        int rNToGo = 0;", "+        int rTPos = 0;", "+        for (int i = 0, j = 1; i <= lastShadow; i = j, j++) {", "+            if (rNToGo == 0) {", "+                rNToGo = (char) BZip2Constants.rNums[rTPos];", "+                if (++rTPos == 512) {", "+                    rTPos = 0;", "+                }", "+            }", "+", "+            rNToGo--;", "+            block[j] ^= ((rNToGo == 1) ? 1 : 0);", "+", "+            // handle 16 bit signed numbers", "+            inUse[block[j] & 0xff] = true;", "+        }", "+", "+        this.blockRandomised = true;"]}]}