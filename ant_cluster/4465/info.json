{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc07b3d8534fbe6bc85bcaa287f409f9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ff6e7fbe49adc2253af54b16b88511", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "93d7ec1e6f5228de8a11f9453e2451b5febd8595", "commitAfterChange": "96501a8feaa68ecaf8e5587b3e2152c91d4afed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-            String myos = System.getProperty(\"os.name\");", "-                cmdl.addArguments(s);", "-                exe.setCommandline(cmdl.getCommandline());", "+                String[] command = getCommandline(s);", "+                log(\"Executing \" + Commandline.toString(command), Project.MSG_VERBOSE);", "+                exe.setCommandline(command);", "-                String[] cmd = new String[cmdl.size()+1];", "-                System.arraycopy(cmdl.getCommandline(), 0, cmd, 0, cmdl.size());", "-                    cmd[cmdl.size()] = s[i];", "-                    exe.setCommandline(cmd);", "+                    String[] command = getCommandline(s[i]);", "+                    log(\"Executing \" + Commandline.toString(command), Project.MSG_VERBOSE);", "+                    exe.setCommandline(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ffc6cef436328bf53060e6434b02d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "a87868236d04e7b91ecc42c3162b1ea897f0c849", "commitAfterChange": "bfad69862eaa347901bb7895a2bcc81fe274f67d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["-            if (!ih.supportsNestedElement(child.getTag()) ", "-                && parent instanceof TaskContainer) {", "-                realChild = makeTask(child, childWrapper);", "-", "-                if (realChild == null) {", "-                    ih.throwNotSupported(getProject(), parent, child.getTag());", "-                }", "-", "-                // XXX DataTypes will be wrapped or treated like normal components", "-                if (realChild instanceof Task) {", "-                    Task task = (Task) realChild;", "-                    ((TaskContainer) parent).addTask(task);", "-                    task.setLocation(child.getLocation());", "-                    // UnknownElement always has an associated target", "-                    task.setOwningTarget(this.getOwningTarget());", "-                    task.init();", "-                } else {", "-                    // should not happen", "-                    ih.throwNotSupported(getProject(), parent, child.getTag());", "-                }", "-            } else {", "+            if (ih.supportsNestedElement(child.getTag())) { ", "-            }", "+                childWrapper.setProxy(realChild);", "+                if (realChild instanceof Task) {", "+                    Task childTask = (Task) realChild;", "+                    childTask.setRuntimeConfigurableWrapper(childWrapper);", "+                    childTask.setTaskName(child.getTag());", "+                    childTask.setTaskType(child.getTag());", "+                }", "+                child.handleChildren(realChild, childWrapper);", "-            childWrapper.setProxy(realChild);", "-            if (parent instanceof TaskContainer ", "-                && realChild instanceof Task) {", "-                ((Task) realChild).setRuntimeConfigurableWrapper(childWrapper);", "-            }", "-", "-            child.handleChildren(realChild, childWrapper);", "+            } else if (!(parent instanceof TaskContainer)) {", "+                ih.throwNotSupported(getProject(), parent, child.getTag());", "+            } else {", "+                // a task container - anything could happen - just add the ", "+                // child to the container", "+                TaskContainer container = (TaskContainer) parent;", "+                container.addTask(child);", "+            }                "]}]}