{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c5130b0c1f165a1d194fc209b833bc1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e193c1d5e69792f433bb3b29496a7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sound/SoundTask.java", "commitBeforeChange": "ba37bf7991e099b567f8cd5a09178893ff55bb9c", "commitAfterChange": "784d54ca4803b0c8fcb6cd4753cc56f0822a1643", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute()", "diff": ["-    public void execute() throws BuildException {", "-        if ( success == null && fail == null) {", "-            throw new BuildException(\"No nested elements provided.\");", "-        }", "+    public void execute() {", "-        if (success != null) {", "-            soundPlayer.addBuildSuccesfulSound(success.getSource(), success.getLoops(), success.getDuration());", "+", "+        if ( success == null ) {", "+            log(\"No nested success element found.\", Project.MSG_WARN);", "+        } else {", "+            soundPlayer.addBuildSuccessfulSound(success.getSource(),", "+              success.getLoops(), success.getDuration());", "-        ", "-        if (fail != null) {", "-            soundPlayer.addBuildFailedSound(fail.getSource(), fail.getLoops(), fail.getDuration());", "+", "+        if (fail == null) {", "+            log(\"No nested failure element found.\", Project.MSG_WARN);", "+        } else {", "+            soundPlayer.addBuildFailedSound(fail.getSource(),", "+              fail.getLoops(), fail.getDuration());", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd6f813707687a3ce935b838443a900", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "a570213ccfdb56f94be50262454306671d59a179", "commitAfterChange": "b482bf23bd33f97ec56d7b41cbbb203f151465fc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (classname == null && file == null && dir == null && resource == null) {", "-            throw new BuildException(\"At least one of (classname|file|dir|resource) is required\", location);", "+        if (classname == null && file == null && resource == null) {", "+            throw new BuildException(\"At least one of (classname|file|resource) is required\", location);", "+        }", "+", "+        if (type != null){", "+            if (!type.equalsIgnoreCase(\"file\") && !type.equalsIgnoreCase(\"dir\")){", "+                throw new BuildException(\"Type must be one of either dir or file\");", "+            }", "-            log(\"Unable to find file \" + file + \" to set property \" + property, Project.MSG_VERBOSE);", "-            return;", "-        }", "-        ", "-        if ((dir != null) && !checkDir(dir)) {", "-            log(\"Unable to find dir \" + dir + \" to set property \" + property, Project.MSG_VERBOSE);", "+            log(\"Unable to find \" + file + \" to set property \" + property, Project.MSG_VERBOSE);"]}]}