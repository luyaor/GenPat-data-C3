{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db3d5d10d00b3f06499e8eb0d61bc051", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de7cc7577a28a864eda5364d24fbe84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void deployTypeLib( final Deployer deployer, final Project project )         throws TaskException", "signatureAfterChange": "      private void deployTypeLib( final Deployer deployer, final Project project )         throws TaskException", "diff": ["-                throw new TaskException( \"Error deploying type library \" +", "-                                         typeLib + \" at \" + file, de );", "+                final String message = REZ.getString( \"no-deploy.error\", typeLib, file );", "+                throw new TaskException( message, de );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90d228acfa90f841543011d090a8b001", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "f91f776468c676f75f26ceedd0bfec27d8502da3", "commitAfterChange": "b30c144309f56e380bbc34897b8ab7ff29c40f17", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private ProjectListener createListener( final String listener )         throws Exception", "signatureAfterChange": "     private ProjectListener createListener( final String listener )         throws Exception", "diff": ["-            throw new Exception( \"Error creating the listener \" + listener +", "-                                 \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ) );", "+            final String message = ", "+                REZ.getString( \"bad-listener.error\", ", "+                               listener, ", "+                               ExceptionUtil.printStackTrace( t, 5, true ) );", "+            throw new Exception( message );"]}]}