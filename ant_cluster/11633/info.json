{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65fb633b4b312e458043072f5b100d6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7edfb87e05fe371f3cb4bd30c1efc1cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/zip/ZipEntryTest.java", "commitBeforeChange": "182295c83cf40539841fc9287e91f38971f90a77", "commitAfterChange": "3255fa8ff4d68ae67f32a9df7a54c163fdddb9a0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testUnixMode()", "signatureAfterChange": "      public void testUnixMode()", "diff": ["+        ze.setUnixMode(0444);", "+        assertEquals(3, ze.getPlatform());", "+        assertEquals(0444, ", "+                     (ze.getExternalAttributes() >> 16) & 0xFFFF);", "+        assertEquals(1, ze.getExternalAttributes()  & 0xFFFF);", "+", "+        assertEquals(0, ze.getPlatform());", "+        ze.setUnixMode(0777);", "+        assertEquals(3, ze.getPlatform());", "+        assertEquals(0777, ", "+                     (ze.getExternalAttributes() >> 16) & 0xFFFF);", "+        assertEquals(0x10, ze.getExternalAttributes()  & 0xFFFF);", "+", "-        assertEquals(0x10, ze.getExternalAttributes()  & 0xFFFF);", "+        assertEquals(0x11, ze.getExternalAttributes()  & 0xFFFF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f170e22c0d9fef9040984e125aba5076", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "4bdc90bd5ea371107ce5f4fbe0939557e1f5aaa9", "commitAfterChange": "2270580b7724fb28e357cd2ea4da561778bc8fa8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void runStatements(Reader reader, PrintStream out)         throws SQLException, IOException", "signatureAfterChange": "     protected void runStatements(Reader reader, PrintStream out)          throws SQLException, IOException", "diff": ["-    protected void runStatements(Reader reader, PrintStream out)", "+    protected void runStatements(Reader reader, PrintStream out) ", "-        String sql = \"\";", "+        StringBuffer sql = new StringBuffer();", "-", "+ ", "-", "+ ", "-            line = line.trim();", "-            line = getProject().replaceProperties(line);", "-            if (line.startsWith(\"//\")) {", "-                continue;", "+            if (!keepformat) {", "+                line = line.trim();", "-            if (line.startsWith(\"--\")) {", "-                continue;", "-            }", "-            StringTokenizer st = new StringTokenizer(line);", "-            if (st.hasMoreTokens()) {", "-                String token = st.nextToken();", "-                if (\"REM\".equalsIgnoreCase(token)) {", "+            line = project.replaceProperties(line);", "+            if (!keepformat) {", "+                if (line.startsWith(\"//\")) {", "+                if (line.startsWith(\"--\")) {", "+                    continue;", "+                }", "+                StringTokenizer st = new StringTokenizer(line);", "+                if (st.hasMoreTokens()) {", "+                    String token = st.nextToken();", "+                    if (\"REM\".equalsIgnoreCase(token)) {", "+                        continue;", "+                    }", "+                }", "-", "-            sql += \" \" + line;", "-            sql = sql.trim();", "-", "+            ", "+            if (!keepformat) {", "+                sql.append(\" \" + line);", "+            } else {", "+                sql.append(\"\\n\" + line);", "+            }", "+            ", "-            if (line.indexOf(\"--\") >= 0) {", "-                sql += \"\\n\";", "+            if (!keepformat) {", "+                if (line.indexOf(\"--\") >= 0) {", "+                    sql.append(\"\\n\");", "+                }", "-", "-            if ((delimiterType.equals(DelimiterType.NORMAL)", "-                 && sql.endsWith(delimiter))", "+            if ((delimiterType.equals(DelimiterType.NORMAL) ", "+                 && sql.toString().endsWith(delimiter)) ", "-                (delimiterType.equals(DelimiterType.ROW)", "+                (delimiterType.equals(DelimiterType.ROW) ", "-                execSQL(sql.substring(0, sql.length() - delimiter.length()),", "+                execSQL(sql.substring(0, sql.length() - delimiter.length()), ", "-                sql = \"\";", "+                sql.replace(0, sql.length(), \"\");", "-", "-            execSQL(sql, out);", "+            execSQL(sql.toString(), out);"]}]}