{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c9e3c838227697d692d138eb35eb3e0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd0d3a1ff7f942a61146f04173e4dc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java", "commitBeforeChange": "edad691d59acabb7c361ab72665ea4afdf77fb01", "commitAfterChange": "76cfa5be6880fe04efad01f9b9acbeb2e41825cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        buf.append(contains);", "+        buf.append('\"').append(contains).append('\"');", "-        if (casesensitive) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "-        }", "+        buf.append(casesensitive ? \"true\" : \"false\");", "-        if (ignorewhitespace) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "-        }", "+        buf.append(ignorewhitespace ? \"true\" : \"false\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e717c2f00a71a90008a217f9850bf1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java", "commitBeforeChange": "02e939c261d79e9d1c2df779bfe1b787b63dd55c", "commitAfterChange": "d814a03e98431c1ae142e398f02be2a3b7205b3c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["+        if (pattern != null) {", "-        buf.append(\" negate: \");", "-        if (negated) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "-        buf.append(\" casesensitive: \");", "-        if (casesensitive) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "+        if (regex != null) {", "+            buf.append(regex).append(\" [as regular expression]\");", "+        buf.append(\" negate: \").append(negated);", "+        buf.append(\" casesensitive: \").append(casesensitive);"]}]}