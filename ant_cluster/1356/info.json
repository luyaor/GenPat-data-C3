{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c466fdc74bd31b4f42e05228766f644e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc84d3fe1d4dccdffeff3502e03b110", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/runtime/DefaultAntEngine.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupComponent( final Component component )         throws Exception", "signatureAfterChange": "     protected void setupComponent( final Component component )         throws Exception", "diff": ["-        if( component instanceof Composer )", "+        if( component instanceof Composable )", "-            ((Composer)component).compose( m_componentManager );", "+            ((Composable)component).compose( m_componentManager );", "-            ((Initializable)component).init();", "+            ((Initializable)component).initialize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834c31d041b7ff203302272c2f2fd09b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "8a8ebf595eb8a868cf9d5ac8d5ce9845d72fd419", "commitAfterChange": "ef6cad6a16581080ea8ea0e191dab031cd46bfa2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      private void failForBigNumbers(TarEntry entry)", "signatureAfterChange": "      private void failForBigNumbers(TarEntry entry)", "diff": ["-        failForBigNumber(\"group id\", entry.getGroupId(), TarConstants.MAXID);", "+        failForBigNumberWithPosixMessage(\"group id\", entry.getLongGroupId(), TarConstants.MAXID);", "-        failForBigNumber(\"user id\", entry.getUserId(), TarConstants.MAXID);", "+        failForBigNumber(\"user id\", entry.getLongUserId(), TarConstants.MAXID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8dda66009e9642eea54f9eb7b1cbf9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DeweyDecimal( final String string )         throws NumberFormatException", "signatureAfterChange": "     public DeweyDecimal(final String string)         throws NumberFormatException", "diff": ["-    public DeweyDecimal( final String string )", "-        throws NumberFormatException", "-    {", "-        final StringTokenizer tokenizer = new StringTokenizer( string, \".\", true );", "+    public DeweyDecimal(final String string)", "+        throws NumberFormatException {", "+        final StringTokenizer tokenizer = new StringTokenizer(string, \".\", true);", "-        m_components = new int[ ( size + 1 ) / 2 ];", "+        components = new int[ (size + 1) / 2 ];", "-        for( int i = 0; i < m_components.length; i++ )", "-        {", "+        for (int i = 0; i < components.length; i++) {", "-            if( component.equals( \"\" ) )", "-            {", "-                throw new NumberFormatException( \"Empty component in string\" );", "+            if (component.equals(\"\")) {", "+                throw new NumberFormatException(\"Empty component in string\");", "-            m_components[ i ] = Integer.parseInt( component );", "+            components[ i ] = Integer.parseInt(component);", "-            if( tokenizer.hasMoreTokens() )", "-            {", "+            if (tokenizer.hasMoreTokens()) {", "-                if( !tokenizer.hasMoreTokens() )", "-                {", "-                    throw new NumberFormatException( \"DeweyDecimal ended in a '.'\" );", "+                if (!tokenizer.hasMoreTokens()) {", "+                    throw new NumberFormatException(\"DeweyDecimal ended in a '.'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bee4490a97d486cf2bef3e90d47382f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/Ilasm.java", "commitBeforeChange": "0a895bf986aa2493542963ec55628f6d23a0997e", "commitAfterChange": "d328f5e4ea1bbde4a82116fa46c4a7425f12ff7d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected String getOutputFileParameter()", "signatureAfterChange": "     protected String getOutputFileParameter()", "diff": ["-        if (_outputFile == null || _outputFile.length() == 0) {", "+        if (outputFile == null || outputFile.length() == 0) {", "-        File f = _outputFile;", "+        File f = outputFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee060797b963ef381e293657a334187e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java", "commitBeforeChange": "bd92e4de44f659770bc30e39f352dcc8446a1e9a", "commitAfterChange": "248269dea49bf84d7f1a87d23906854c519b9f70", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "diff": ["-        cmd.addArgument( PathUtil.formatPath( classpath, getTaskContext() ) );", "+        cmd.addArgument( FileListUtil.formatPath( classpath, getTaskContext() ) );", "-        cmd.addArgument( PathUtil.formatPath( src, getTaskContext() ) );", "+        cmd.addArgument( FileListUtil.formatPath( src, getTaskContext() ) );", "-            cmd.addArgument( PathUtil.formatPath( m_extdirs, getTaskContext() ) );", "+            cmd.addArgument( FileListUtil.formatPath( m_extdirs, getTaskContext() ) );"]}]}