{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97c4286a51ccca1e077552ca74b48dc1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "856d8b7c97335a7b1b99df18c0d0b619", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/JavaxScriptRunner.java", "commitBeforeChange": "ddf5cd73c9f609b1fc5da325e186b68e6093e717", "commitAfterChange": "349919492632ec52361aace968eeabfedfa3806c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object evaluateScript(String execName) throws BuildException", "signatureAfterChange": "     public Object evaluateScript(String execName) throws BuildException", "diff": ["-            throw be;", "+", "+            // this may be a BuildException wrapping a ScriptException", "+            // deeply wrapping yet another BuildException - for", "+            // example because of self.fail() - see", "+            // https://issues.apache.org/bugzilla/show_bug.cgi?id=47509", "+            throw unwrap(be);", "-            Throwable te = (Throwable) ReflectUtil.invoke(be, \"getCause\");", "+            Throwable te = be.getCause();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c7f5775689a6047e7ac467b76f539e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarBuffer.java", "commitBeforeChange": "7fcf3ddeae23e61292c14fda580bb4d229d5b895", "commitAfterChange": "322d8cef7fdb987bef0e0699cd3ed9db0ef82806", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean readBlock() throws IOException", "signatureAfterChange": "     private boolean readBlock() throws IOException", "diff": ["+                // However, just leaving the unread portion of the buffer dirty does ", "+                // cause problems in some cases.  This problem is described in", "+                // http://issues.apache.org/bugzilla/show_bug.cgi?id=29877", "+                //", "+                // The solution is to fill the unused portion of the buffer with zeros.", "+", "+                Arrays.fill(blockBuffer, offset, offset + bytesNeeded, (byte) 0);", "+"]}]}