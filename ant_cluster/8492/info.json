{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f5859f94f656ccf1c53a55aaa53e51f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b519400ba62c2d967006808103a538", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "      private void scandir(File dir, TokenizedPath path, boolean fast,                          String[] newfiles, LinkedList<String> directoryNamesFollowed)", "signatureAfterChange": "      private void scandir(final File dir, final TokenizedPath path, final boolean fast,                          String[] newfiles, final LinkedList<String> directoryNamesFollowed)", "diff": ["-    private void scandir(File dir, TokenizedPath path, boolean fast,", "-                         String[] newfiles, LinkedList<String> directoryNamesFollowed) {", "+    private void scandir(final File dir, final TokenizedPath path, final boolean fast,", "+                         String[] newfiles, final LinkedList<String> directoryNamesFollowed) {", "-            ArrayList<String> noLinks = new ArrayList<String>();", "+            final ArrayList<String> noLinks = new ArrayList<String>();", "-                        String name = vpath + newfiles[i];", "-                        File file = new File(dir, newfiles[i]);", "+                        final String name = vpath + newfiles[i];", "+                        final File file = new File(dir, newfiles[i]);", "-                } catch (IOException ioe) {", "-                    String msg = \"IOException caught while checking \"", "+                } catch (final IOException ioe) {", "+                    final String msg = \"IOException caught while checking \"", "-            String name = vpath + newfiles[i];", "-            TokenizedPath newPath = new TokenizedPath(path, newfiles[i]);", "-            File file = new File(dir, newfiles[i]);", "-            String[] children = file.list();", "+            final String name = vpath + newfiles[i];", "+            final TokenizedPath newPath = new TokenizedPath(path, newfiles[i]);", "+            final File file = new File(dir, newfiles[i]);", "+            final String[] children = file.list();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e808ccd6b602efe16fa84f70d58b050", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private static void copyWithFilterSets(Resource source, Resource dest,                                            FilterSetCollection filters,                                            Vector filterChains,                                            boolean filterChainsAvailable,                                            boolean append, String inputEncoding,                                            String outputEncoding,                                            Project project)         throws IOException", "signatureAfterChange": "      private static void copyWithFilterSets(final Resource source, final Resource dest,                                            final FilterSetCollection filters,                                            final Vector filterChains,                                            final boolean filterChainsAvailable,                                            final boolean append, final String inputEncoding,                                            final String outputEncoding,                                            final Project project)         throws IOException", "diff": ["-    private static void copyWithFilterSets(Resource source, Resource dest,", "-                                           FilterSetCollection filters,", "-                                           Vector filterChains,", "-                                           boolean filterChainsAvailable,", "-                                           boolean append, String inputEncoding,", "-                                           String outputEncoding,", "-                                           Project project)", "+    private static void copyWithFilterSets(final Resource source, final Resource dest,", "+                                           final FilterSetCollection filters,", "+                                           final Vector filterChains,", "+                                           final boolean filterChainsAvailable,", "+                                           final boolean append, final String inputEncoding,", "+                                           final String outputEncoding,", "+                                           final Project project)", "-            OutputStream os = getOutputStream(dest, append, project);", "+            final OutputStream os = getOutputStream(dest, append, project);", "-                ChainReaderHelper crh = new ChainReaderHelper();", "+                final ChainReaderHelper crh = new ChainReaderHelper();", "-                Reader rdr = crh.getAssembledReader();", "+                final Reader rdr = crh.getAssembledReader();", "-            LineTokenizer lineTokenizer = new LineTokenizer();", "+            final LineTokenizer lineTokenizer = new LineTokenizer();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7febc170f19bee6ab7fef4cd06f40aef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private static void copyWithFilterChainsOrTranscoding(Resource source,                                                           Resource dest,                                                           Vector filterChains,                                                           boolean filterChainsAvailable,                                                           boolean append,                                                           String inputEncoding,                                                           String outputEncoding,                                                           Project project)         throws IOException", "signatureAfterChange": "      private static void copyWithFilterChainsOrTranscoding(final Resource source,                                                           final Resource dest,                                                           final Vector filterChains,                                                           final boolean filterChainsAvailable,                                                           final boolean append,                                                           final String inputEncoding,                                                           final String outputEncoding,                                                           final Project project)         throws IOException", "diff": ["-    private static void copyWithFilterChainsOrTranscoding(Resource source,", "-                                                          Resource dest,", "-                                                          Vector filterChains,", "-                                                          boolean filterChainsAvailable,", "-                                                          boolean append,", "-                                                          String inputEncoding,", "-                                                          String outputEncoding,", "-                                                          Project project)", "+    private static void copyWithFilterChainsOrTranscoding(final Resource source,", "+                                                          final Resource dest,", "+                                                          final Vector filterChains,", "+                                                          final boolean filterChainsAvailable,", "+                                                          final boolean append,", "+                                                          final String inputEncoding,", "+                                                          final String outputEncoding,", "+                                                          final Project project)", "-            OutputStream os = getOutputStream(dest, append, project);", "+            final OutputStream os = getOutputStream(dest, append, project);", "-                ChainReaderHelper crh = new ChainReaderHelper();", "+                final ChainReaderHelper crh = new ChainReaderHelper();", "-                Reader rdr = crh.getAssembledReader();", "+                final Reader rdr = crh.getAssembledReader();", "-            char[] buffer = new char[FileUtils.BUF_SIZE];", "+            final char[] buffer = new char[FileUtils.BUF_SIZE];", "-                int nRead = in.read(buffer, 0, buffer.length);", "+                final int nRead = in.read(buffer, 0, buffer.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa954e2cdca08ccae2967982bae3a197", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": "     private void doJava14(Commandline toExecute)", "signatureAfterChange": "     private void doJava14(final Commandline toExecute)", "diff": ["-    private void doJava14(Commandline toExecute) {", "-        for (Enumeration<Object> e = tags.elements(); e.hasMoreElements();) {", "-            Object element = e.nextElement();", "+    private void doJava14(final Commandline toExecute) {", "+        for (final Enumeration<Object> e = tags.elements(); e.hasMoreElements();) {", "+            final Object element = e.nextElement();", "-                TagArgument ta = (TagArgument) element;", "-                File tagDir = ta.getDir(getProject());", "+                final TagArgument ta = (TagArgument) element;", "+                final File tagDir = ta.getDir(getProject());", "-                    DirectoryScanner tagDefScanner =", "+                    final DirectoryScanner tagDefScanner =", "-                    String[] files = tagDefScanner.getIncludedFiles();", "+                    final String[] files = tagDefScanner.getIncludedFiles();", "-                        File tagDefFile = new File(tagDir, files[i]);", "+                        final File tagDefFile = new File(tagDir, files[i]);", "-                            BufferedReader in", "+                            final BufferedReader in", "-                        } catch (IOException ioe) {", "+                        } catch (final IOException ioe) {", "-                ExtensionInfo tagletInfo = (ExtensionInfo) element;", "+                final ExtensionInfo tagletInfo = (ExtensionInfo) element;", "-                    Path tagletPath = tagletInfo.getPath()", "+                    final Path tagletPath = tagletInfo.getPath()", "-        String sourceArg = source != null ? source", "+        final String sourceArg = source != null ? source"]}]}