{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3b7330d4b3234c9b4b918c65c738a58", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b9a6e8c95d654921424129546da28e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "228fb9839c21a0a853598e114faca72c8e9340e7", "commitAfterChange": "9922008d657c72235c402343fd88847b044014ad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void finish() throws IOException", "signatureAfterChange": "       public void finish() throws IOException", "diff": ["-    ", "-    protected void finish() throws IOException {", "-        if (closed) {", "-            return;", "-        }", "-        if (runLength > 0) {", "-            writeRun();", "+    public void finish() throws IOException {", "+        if (out != null) {", "+            try {", "+                if (this.runLength > 0) {", "+                    writeRun();", "+                }", "+                this.currentChar = -1;", "+                endBlock();", "+                endCompression();", "+            } finally {", "+                this.out = null;", "+                this.data = null;", "+            }", "-        currentChar = -1;", "-        endBlock();", "-        endCompression();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a9016255a64f8f06532ac96e7f6289e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void complete()", "signatureAfterChange": "      private void complete() throws IOException", "diff": ["+    private void complete() throws IOException {", "+        this.storedCombinedCRC = bsGetInt();", "+        this.currentState = EOF;", "+        this.data = null;", "-", "-    private void complete() {", "-        storedCombinedCRC = bsGetInt32();", "-        if (storedCombinedCRC != computedCombinedCRC) {", "-            crcError();", "-        }", "-", "-        bsFinishedWithStream();", "-        streamEnd = true;", "-    }", "+        if (this.storedCombinedCRC != this.computedCombinedCRC) {", "+            reportCRCError();"]}]}