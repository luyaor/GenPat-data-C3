{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96c7c973be21aa033c126f8339d3a2ad", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3396604bb82d1860f3675fbca807269", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void resolveAllProperties( Properties props )         throws BuildException", "signatureAfterChange": "      private void resolveAllProperties( Properties props )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Enumeration e = props.keys(); e.hasMoreElements();  )", "+        for( Enumeration e = props.keys(); e.hasMoreElements(); )", "-            String name = ( String )e.nextElement();", "+            String name = (String)e.nextElement();", "-                        String fragment = ( String )i.nextElement();", "+                        String fragment = (String)i.nextElement();", "-                            String propertyName = ( String )j.nextElement();", "+                            String propertyName = (String)j.nextElement();", "-                                throw new BuildException( \"Property \" + name + \" was circularly defined.\" );", "+                                throw new TaskException( \"Property \" + name + \" was circularly defined.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e775fecf96538d6ceddcec29e9efbcee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void resolveAllProperties( Properties props )         throws BuildException", "signatureAfterChange": "      private void resolveAllProperties( Properties props )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        for( Enumeration e = props.keys(); e.hasMoreElements();  )", "+        for( Enumeration e = props.keys(); e.hasMoreElements(); )", "-            String name = ( String )e.nextElement();", "+            String name = (String)e.nextElement();", "-                        String fragment = ( String )i.nextElement();", "+                        String fragment = (String)i.nextElement();", "-                            String propertyName = ( String )j.nextElement();", "+                            String propertyName = (String)j.nextElement();", "-                                throw new BuildException( \"Property \" + name + \" was circularly defined.\" );", "+                                throw new TaskException( \"Property \" + name + \" was circularly defined.\" );"]}]}