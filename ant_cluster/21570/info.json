{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af026af3abee0d0a75ca20654a669891", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e1edfd9e4957b192cd900575b1897f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/start/org/apache/ant/start/Main.java", "commitBeforeChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "commitAfterChange": "e16a4c7b1db880e29d37406177e983142302af57", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args) throws Exception", "diff": ["-    public static void main(String[] args) {", "+    public static void main(String[] args) throws Exception {", "-        main.start(DEFAULT_FRONTEND, args);", "+        int frontendIndex = -1;", "+        String frontend = DEFAULT_FRONTEND;", "+", "+        for (int i = 0; i < args.length; ++i) {", "+            if (args[i].equals(\"-frontend\")) {", "+                frontendIndex = i;", "+                break;", "+            }", "+        }", "+", "+        if (frontendIndex != -1) {", "+            try {", "+                frontend = args[frontendIndex + 1];", "+            } catch (IndexOutOfBoundsException e) {", "+                throw new InitException(\"You must specify a value for the \"", "+                     + \"-frontend argument\");", "+            }", "+", "+            String[] newArgs = new String[args.length - 2];", "+", "+            System.arraycopy(args, 0, newArgs, 0, frontendIndex);", "+            if (args.length > (frontendIndex + 2)) {", "+                System.arraycopy(args, frontendIndex + 2, newArgs,", "+                    frontendIndex, args.length - frontendIndex - 2);", "+            }", "+            args = newArgs;", "+        }", "+", "+        String defaultClass = frontend.equals(DEFAULT_FRONTEND)", "+             ? DEFAULT_COMMANDLINE_CLASS : null;", "+", "+        main.start(frontend, defaultClass, args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f3892a0e4dbf16f42c31711619883b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "d3122c568192c3da62eb74174d96674a679999a8", "commitAfterChange": "655ad8f525f6d55fe32cbecdd3ef437b0f5d5fa5", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "         private File createCommandFile(String[] cmd) throws IOException", "signatureAfterChange": "         private File createCommandFile(String[] cmd, String[] env)             throws IOException", "diff": ["-        private File createCommandFile(String[] cmd) throws IOException {", "+        private File createCommandFile(String[] cmd, String[] env)", "+            throws IOException {", "-                StringBuffer dclCmd = new StringBuffer(\"$\");", "-                for (int i = 0; i < cmd.length; i++) {", "-                    dclCmd.append(' ').append(cmd[i]);", "+", "+                // add the environment as logicals to the DCL script", "+                if (env != null) {", "+                    int eqIndex;", "+                    for (int i = 1; i < env.length ; i++) {", "+                        eqIndex = env[i].indexOf('=');", "+                        if (eqIndex != -1) {", "+                            out.print(\"$ DEFINE/NOLOG \");", "+                            out.print(env[i].substring(0, eqIndex));", "+                            out.print(\" \\\"\");", "+                            out.print(env[i].substring(eqIndex + 1));", "+                            out.println('\\\"');", "+                        }", "+                    }", "-                out.println(dclCmd.toString());", "+", "+                out.print(\"$ \" + cmd[0]);", "+                for (int i = 1; i < cmd.length ; i++) {", "+                    out.println(\" -\");", "+                    out.print(cmd[i]);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f88e09b8b2ed5976fa3b95eface7321b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "fca57f83a2f6e6194cf2e223068f7f3bb714a676", "commitAfterChange": "8a21be498479cb838b88fc0f77547e82ed1c5334", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void buildWeblogicJar(File sourceJar, File destJar)", "signatureAfterChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "diff": ["-    private void buildWeblogicJar(File sourceJar, File destJar) {", "+    private void buildWeblogicJar(File sourceJar, File destJar, String publicId) {", "+        ", "+        String ejbcClassName = ejbcClass;", "-            javaTask.setClassname(\"weblogic.ejbc\");", "+            if (ejbcClassName == null) {", "+                // try to determine it from publicId", "+                if (PUBLICID_EJB11.equals(publicId)) {", "+                    ejbcClassName = COMPILER_EJB11;", "+                }", "+                else if (PUBLICID_EJB20.equals(publicId)) {", "+                    ejbcClassName = COMPILER_EJB20;", "+                }", "+                else {", "+                    log(\"Unrecognized publicId \" + publicId + \" - using EJB 1.1 compiler\", Project.MSG_WARN);", "+                    ejbcClassName = COMPILER_EJB11;", "+                }", "+            }", "+                 ", "+            javaTask.setClassname(ejbcClassName);", "-            log(\"Calling weblogic.ejbc for \" + sourceJar.toString(),", "+            log(\"Calling \" + ejbcClassName + \" for \" + sourceJar.toString(),", "-            String msg = \"Exception while calling ejbc. Details: \" + e.toString();", "+            String msg = \"Exception while calling \" + ejbcClassName + \". Details: \" + e.toString();"]}]}