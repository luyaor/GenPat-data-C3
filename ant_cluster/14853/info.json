{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f23263809fd5fcc3be73632a76dffaef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f13f69b10c6e690c2e8d972718440b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/launcher/AntLoader.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addURL( final URL url )", "signatureAfterChange": "     protected final static File findInstallDir()          throws Exception", "diff": ["+    protected final static File findInstallDir() ", "+        throws Exception", "+        final String classpath = System.getProperty( \"java.class.path\" );", "+        final String pathSeparator = System.getProperty( \"path.separator\" );", "+        final StringTokenizer tokenizer = new StringTokenizer( classpath, pathSeparator );", "+        ", "+        while( tokenizer.hasMoreTokens() )", "+        {", "+            final String element = tokenizer.nextToken();", "-     */", "-    public void addURL( final URL url )", "-    {", "-        super.addURL( url );", "+            if( element.endsWith( \"ant.jar\" ) )", "+            {", "+                File file = (new File( element )).getAbsoluteFile();", "+                file = file.getParentFile();", "+                ", "+                if( null != file )", "+                {", "+                    file = file.getParentFile();", "+                }", "+", "+                return file;                ", "+            }", "+        }", "+        ", "+        throw new Exception( \"Unable to locate ant.jar in classpath\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "972012608ae55fda9dfda525bd96578e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void addPath(String path, boolean getJars, List<URL> libPathURLs)             throws MalformedURLException", "signatureAfterChange": "     private void addPath(final String path, final boolean getJars, final List<URL> libPathURLs)             throws MalformedURLException", "diff": ["-    private void addPath(String path, boolean getJars, List<URL> libPathURLs)", "+    private void addPath(final String path, final boolean getJars, final List<URL> libPathURLs)", "-        StringTokenizer tokenizer = new StringTokenizer(path, File.pathSeparator);", "+        final StringTokenizer tokenizer = new StringTokenizer(path, File.pathSeparator);", "-            String elementName = tokenizer.nextToken();", "-            File element = new File(elementName);", "+            final String elementName = tokenizer.nextToken();", "+            final File element = new File(elementName);", "-                URL[] dirURLs = Locator.getLocationURLs(element);", "+                final URL[] dirURLs = Locator.getLocationURLs(element);", "-            URL url = Locator.fileToURL(element);", "-            if (launchDiag) { System.out.println(\"adding library URL: \" + url) ;}", "+            final URL url = Locator.fileToURL(element);", "+            if (launchDiag) {", "+            \tSystem.out.println(\"adding library URL: \" + url);", "+            }"]}]}