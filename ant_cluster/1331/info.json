{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05e6409c4e490f572bea516ef1e133e8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69eb0ce1cfff728f1dd04ab8b703b721", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "34bf2cc2188dc53e0a35c136f2abc49319637986", "commitAfterChange": "41c3e23d1dff90edcce9dad05bcc50bbedb22ee0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["-        throws BuildException {", "-", "+        throws BuildException", "+    {", "-                realChild = makeTask(child, childWrapper, false);", "-                ((TaskContainer) parent).addTask((Task) realChild);", "+                //ProjectComponentHelper helper=ProjectComponentHelper.getProjectComponentHelper();", "+                //realChild = helper.createProjectComponent( child, getProject(), null,", "+                   //                                           child.getTag());", "+                realChild=makeTask(child, childWrapper, false);", "+", "+                if (realChild == null ) {", "+                    throw getNotFoundException(\"task\", child.getTag());", "+                }", "+", "+                // XXX DataTypes will be wrapped or treated like normal components", "+                if( realChild instanceof Task ) {", "+                    Task task=(Task)realChild;", "+                    ((TaskContainer) parent).addTask(task);", "+                    task.setLocation(child.getLocation());", "+                    // UnknownElement always has an associated target", "+                    task.setOwningTarget(this.getOwningTarget());", "+                    task.init();", "+                } else {", "+                    // What ? Add data type ? createElement ?", "+                }", "+", "+//            if (parent instanceof TaskContainer) {", "+//                ((Task) realChild).maybeConfigure();", "+//            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5bca162b3da6c77b4c6d18fd8ff0674", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "34bf2cc2188dc53e0a35c136f2abc49319637986", "commitAfterChange": "41c3e23d1dff90edcce9dad05bcc50bbedb22ee0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void maybeConfigure() throws BuildException", "signatureAfterChange": "     public void maybeConfigure() throws BuildException", "diff": ["+        //ProjectComponentHelper helper=ProjectComponentHelper.getProjectComponentHelper();", "+        //realThing = helper.createProjectComponent( this, getProject(), null,", "+        //                                           this.getTag());", "+", "-            ((Task) realThing).setRuntimeConfigurableWrapper(getWrapper());", "+            Task task=(Task)realThing;", "+", "+            task.setRuntimeConfigurableWrapper(getWrapper());", "+            task.setLocation(this.getLocation());", "+            // UnknownElement always has an associated target", "+            task.setOwningTarget(this.getOwningTarget());", "+            task.init();", "+", "+            // For Script to work. Ugly", "+            // The reference is replaced by RuntimeConfigurable", "+            this.getOwningTarget().replaceChild(this, (Task)realThing);"]}]}