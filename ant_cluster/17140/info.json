{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c05eae7f8340ee7a5d4b806c76007b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fea1c46bb8b48db5ef89c86e8cca737", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cbce4bf09d398a8f7cb9011b3f859f09274aa82", "commitAfterChange": "c2dba687256b368d6ca095487a17d432dcab22e4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-                                   AntXmlContext context)", "-            throws SAXParseException", "-        {", "-            RuntimeConfigurable parentWrapper=context.currentWrapper();", "-            RuntimeConfigurable wrapper=null;", "-            Object parent=null;", "+                                   AntXMLContext context)", "+            throws SAXParseException {", "+            RuntimeConfigurable parentWrapper = context.currentWrapper();", "+            RuntimeConfigurable wrapper = null;", "+            Object parent = null;", "-            if (parentWrapper!=null ) {", "-                parent=parentWrapper.getProxy();", "+            if (parentWrapper != null) {", "+                parent = parentWrapper.getProxy();", "-            if (parent != null ) {", "+            if (parent != null) {", "-                qname=qname.toLowerCase( Locale.US );", "+                qname = qname.toLowerCase(Locale.US);", "-            UnknownElement task= new UnknownElement(qname);", "+            UnknownElement task = new UnknownElement(qname);", "-            Location location=new Location(context.locator.getSystemId(),", "-                    context.locator.getLineNumber(),", "-                    context.locator.getColumnNumber());", "+            Location location = new Location(context.getLocator().getSystemId(),", "+                    context.getLocator().getLineNumber(),", "+                    context.getLocator().getColumnNumber());", "-            task.setOwningTarget(context.currentTarget);", "+            task.setOwningTarget(context.getCurrentTarget());", "-            if (parent != null ) {", "+            if (parent != null) {", "-                ((UnknownElement)parent).addChild( task );", "+                ((UnknownElement) parent).addChild(task);", "-                context.currentTarget.addTask( task );", "+                context.getCurrentTarget().addTask(task);", "-            wrapper=new RuntimeConfigurable( task, task.getTaskName());", "+            wrapper = new RuntimeConfigurable(task, task.getTaskName());", "-                wrapper.setAttribute( attrs.getQName(i),", "+                wrapper.setAttribute(attrs.getQName(i),", "-            context.pushWrapper( wrapper );", "+            context.pushWrapper(wrapper);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2783434fadec3c730192227aa0f38419", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cbce4bf09d398a8f7cb9011b3f859f09274aa82", "commitAfterChange": "c2dba687256b368d6ca095487a17d432dcab22e4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-                                   AntXmlContext context)", "-            throws SAXParseException", "-        {", "+                                   AntXMLContext context)", "+            throws SAXParseException {", "-            Project project=context.getProject();", "+            Project project = context.getProject();", "-            context.currentTarget=target;", "-            context.targetVector.addElement( target );", "+            context.addTarget(target);", "-                    if (\"\".equals( name ) )", "-                        throw new BuildException(\"name attribute must not be empty\");", "+                    if (\"\".equals(name)) {", "+                        throw new BuildException(\"name attribute must \"", "+                            + \"not be empty\");", "+                    }", "-                    throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\", context.locator);", "+                    throw new SAXParseException(\"Unexpected attribute \\\"\"", "+                        + key + \"\\\"\", context.getLocator());", "-                throw new SAXParseException(\"target element appears without a name attribute\",", "-                                            context.locator);", "+                throw new SAXParseException(\"target element appears without \"", "+                    + \"a name attribute\", context.getLocator());", "-            if(currentTargets.containsKey(name)) {", "+            if (currentTargets.containsKey(name)) {", "-                if (context.currentProjectName != null ) {", "-                    String newName=context.currentProjectName + \".\" + name;", "-                    project.log(\"Already defined in main or a previous import, define \"", "-                                + name + \" as \" + newName,", "+                if (context.getCurrentProjectName() != null) {", "+                    String newName = context.getCurrentProjectName()", "+                        + \".\" + name;", "+                    project.log(\"Already defined in main or a previous import, \"", "+                        + \"define \" + name + \" as \" + newName,", "-                    name=newName;", "+                    name = newName;", "-                    project.log(\"Already defined in main or a previous import, ignore \"", "-                                + name,", "-                                Project.MSG_VERBOSE);", "-                    name=null;", "+                    project.log(\"Already defined in main or a previous import, \"", "+                        + \"ignore \" + name, Project.MSG_VERBOSE);", "+                    name = null;", "-            if (name != null ) {", "+            if (name != null) {"]}]}