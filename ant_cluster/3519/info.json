{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f7d3386499be87b26db5800de834bf9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a742fb1638056c51606928a3cbd4e898", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SubAnt.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private Ant createAntTask(File directory)", "signatureAfterChange": "     private Ant createAntTask(File directory)", "diff": ["-        Ant ant = (Ant) getProject().createTask(\"ant\");", "-        ant.setOwningTarget(getOwningTarget());", "-        ant.setTaskName(getTaskName());", "-        ant.init();", "-        if (target != null && target.length() > 0) {", "-            ant.setTarget(target);", "+        Ant antTask = (Ant) getProject().createTask(\"ant\");", "+        antTask.setOwningTarget(getOwningTarget());", "+        antTask.setTaskName(getTaskName());", "+        antTask.init();", "+        if (subTarget != null && subTarget.length() > 0) {", "+            antTask.setTarget(subTarget);", "-            ant.setOutput(output);", "+            antTask.setOutput(output);", "-            ant.setDir(directory);", "+            antTask.setDir(directory);", "-        ant.setInheritAll(inheritAll);", "+        antTask.setInheritAll(inheritAll);", "-            copyProperty(ant.createProperty(), (Property) i.nextElement());", "+            copyProperty(antTask.createProperty(), (Property) i.nextElement());", "-            ant.addPropertyset((PropertySet) i.nextElement());", "+            antTask.addPropertyset((PropertySet) i.nextElement());", "-        ant.setInheritRefs(inheritRefs);", "+        antTask.setInheritRefs(inheritRefs);", "-            ant.addReference((Ant.Reference) i.nextElement());", "+            antTask.addReference((Ant.Reference) i.nextElement());", "-        return ant;", "+        return antTask;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7dd3699f8c9e4f8bec7ad144540d685", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void process(File baseDir, String xmlFile, File destDir,                          File stylesheet)         throws BuildException", "signatureAfterChange": "     private void process(File baseDir, String xmlFile, File destDir,                          File stylesheet)         throws BuildException", "diff": ["-        File   outFile = null;", "-        File   inFile = null;", "+        File   outF = null;", "+        File   inF = null;", "-            inFile = new File(baseDir, xmlFile);", "+            inF = new File(baseDir, xmlFile);", "-            if (inFile.isDirectory()) {", "-                log(\"Skipping \" + inFile + \" it is a directory.\",", "+            if (inF.isDirectory()) {", "+                log(\"Skipping \" + inF + \" it is a directory.\",", "-            outFile = new File(destDir, outFileName[0]);", "+            outF = new File(destDir, outFileName[0]);", "-                || inFile.lastModified() > outFile.lastModified()", "-                || styleSheetLastModified > outFile.lastModified()) {", "-                ensureDirectoryFor(outFile);", "-                log(\"Processing \" + inFile + \" to \" + outFile);", "+                || inF.lastModified() > outF.lastModified()", "+                || styleSheetLastModified > outF.lastModified()) {", "+                ensureDirectoryFor(outF);", "+                log(\"Processing \" + inF + \" to \" + outF);", "-                liaison.transform(inFile, outFile);", "+                liaison.transform(inF, outF);", "-            if (outFile != null) {", "-                outFile.delete();", "+            if (outF != null) {", "+                outF.delete();"]}]}