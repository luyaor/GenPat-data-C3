{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a439b6cf1dc948d3fc14dc01f03c434", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adbc073fe82282c843277f4a08b5f83e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java", "commitBeforeChange": "a511fb22e7f6ac3b905cd1d4aa17a6445e715e42", "commitAfterChange": "d3f2f2b687e3152ac513450330439f97ed8a2570", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "      protected void logOperationDescription(         Folder starteamrootFolder, java.io.File targetrootFolder)", "signatureAfterChange": "      protected void logOperationDescription(         Folder starteamrootFolder, java.io.File targetrootFolder)", "diff": ["-            log(\"  Items will be checked out unlocked (even if presently locked).\");", "+            log(\"  Items will be checked out unlocked \"", "+                 +\"(even if presently locked).\");", "+        log(\"  Items will be checked out \" +", "+            (this.convertEOL ", "+             ? \"using the local machine's EOL convention\"", "+             : \"without changing the EOL convention used on the server\"));", "-            (this.createDirs ? \" wherever they exist in the repository, even if empty.\" ", "-                             : \" only where needed to check out files.\"));", "+            (this.createDirs ", "+             ? \" wherever they exist in the repository, even if empty.\" ", "+             : \" only where needed to check out files.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5fda7a3f3fc31f4e7c5a0b4e3017e1b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "9fec95e95eb235218cb626468dd20a70aaca2ae8", "commitAfterChange": "9f59925bbd5dc77ba3ac65f277f7e5810a3ec517", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private static void doReportAntProperties(PrintStream out)", "signatureAfterChange": "     private static void doReportAntProperties(PrintStream out)", "diff": ["+        out.println(\"Is this the Apache Harmony VM? \"", "+                    + (JavaEnvUtils.isApacheHarmony() ? \"yes\" : \"no\"));"]}]}