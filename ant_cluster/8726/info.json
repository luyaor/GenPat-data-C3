{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "225d1b7a0e43ca55628d54e2c1844dc2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a63398b78b203ac020055f506a58646", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/Zip64ExtendedInformationExtraField.java", "commitBeforeChange": "66dbdd5d8c83369baa51f85a03715ceac9e8fa7b", "commitAfterChange": "3fb018053018728cd4a6d4d873607092012fd54e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void reparseCentralDirectoryData(boolean hasUncompressedSize,                                             boolean hasCompressedSize,                                             boolean hasRelativeHeaderOffset,                                             boolean hasDiskStart)         throws ZipException", "signatureAfterChange": "     public void reparseCentralDirectoryData(boolean hasUncompressedSize,                                             boolean hasCompressedSize,                                             boolean hasRelativeHeaderOffset,                                             boolean hasDiskStart)         throws ZipException", "diff": ["-            if (rawCentralDirectoryData.length != expectedLength) {", "+            if (rawCentralDirectoryData.length < expectedLength) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78cf97d47ce83d615fa9c7f69bea4109", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/BindTargets.java", "commitBeforeChange": "ae983386477fb292a55fa50e3716caca66e1fae4", "commitAfterChange": "a2b3e159f5f91f2f3a03d429c05cb5ee218b4f89", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                    new String[] { (String) itTarget.next(), extensionPoint,", "+                    new String[] { extensionPoint, (String) itTarget.next(),"]}]}