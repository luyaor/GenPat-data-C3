{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38c823d720e9363b9884beb3d10d1e6a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8dded8fd1b6b8f79be61d52ed09c3f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private void sendMTFValues()         throws IOException", "signatureAfterChange": "      private void sendMTFValues()         throws IOException", "diff": ["-        alphaSize = nInUse + 2;", "+        alphaSize = m_nInUse + 2;", "-        if( nMTF <= 0 )", "+        if( m_nMTF <= 0 )", "-        if( nMTF < 200 )", "+        if( m_nMTF < 200 )", "-        else if( nMTF < 600 )", "+        else if( m_nMTF < 600 )", "-        else if( nMTF < 1200 )", "+        else if( m_nMTF < 1200 )", "-        else if( nMTF < 2400 )", "+        else if( m_nMTF < 2400 )", "-            remF = nMTF;", "+            remF = m_nMTF;", "-                    aFreq += mtfFreq[ ge ];", "+                    aFreq += m_mtfFreq[ ge ];", "-                    aFreq -= mtfFreq[ ge ];", "+                    aFreq -= m_mtfFreq[ ge ];", "-                if( gs >= nMTF )", "+                if( gs >= m_nMTF )", "-                if( ge >= nMTF )", "+                if( ge >= m_nMTF )", "-                    ge = nMTF - 1;", "+                    ge = m_nMTF - 1;", "-                        short icv = szptr[ i ];", "+                        short icv = m_szptr[ i ];", "-                        short icv = szptr[ i ];", "+                        short icv = m_szptr[ i ];", "-                selector[ nSelectors ] = (char)bt;", "+                m_selector[ nSelectors ] = (char)bt;", "-                    rfreq[ bt ][ szptr[ i ] ]++;", "+                    rfreq[ bt ][ m_szptr[ i ] ]++;", "-                ll_i = selector[ i ];", "+                ll_i = m_selector[ i ];", "-                selectorMtf[ i ] = (char)j;", "+                m_selectorMtf[ i ] = (char)j;", "-            nBytes = bytesOut;", "+            nBytes = m_bytesOut;", "-        nBytes = bytesOut;", "+        nBytes = m_bytesOut;", "-            for( j = 0; j < selectorMtf[ i ]; j++ )", "+            for( j = 0; j < m_selectorMtf[ i ]; j++ )", "-        nBytes = bytesOut;", "+        nBytes = m_bytesOut;", "-        nBytes = bytesOut;", "+        nBytes = m_bytesOut;", "-            if( gs >= nMTF )", "+            if( gs >= m_nMTF )", "-            if( ge >= nMTF )", "+            if( ge >= m_nMTF )", "-                ge = nMTF - 1;", "+                ge = m_nMTF - 1;", "-                bsW( len[ selector[ selCtr ] ][ szptr[ i ] ],", "-                     code[ selector[ selCtr ] ][ szptr[ i ] ] );", "+                bsW( len[ m_selector[ selCtr ] ][ m_szptr[ i ] ],", "+                     code[ m_selector[ selCtr ] ][ m_szptr[ i ] ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9ecfcb32bd2672c6854535384c7275", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void generateMTFValues()", "signatureAfterChange": "      private void generateMTFValues()", "diff": ["-        EOB = nInUse + 1;", "+        EOB = m_nInUse + 1;", "-            mtfFreq[ i ] = 0;", "+            m_mtfFreq[ i ] = 0;", "-        for( i = 0; i < nInUse; i++ )", "+        for( i = 0; i < m_nInUse; i++ )", "-        for( i = 0; i <= last; i++ )", "+        for( i = 0; i <= m_last; i++ )", "-            ll_i = unseqToSeq[ block[ zptr[ i ] ] ];", "+            ll_i = m_unseqToSeq[ m_block[ m_zptr[ i ] ] ];", "-                                szptr[ wr ] = (short)RUNA;", "+                                m_szptr[ wr ] = (short)RUNA;", "-                                mtfFreq[ RUNA ]++;", "+                                m_mtfFreq[ RUNA ]++;", "-                                szptr[ wr ] = (short)RUNB;", "+                                m_szptr[ wr ] = (short)RUNB;", "-                                mtfFreq[ RUNB ]++;", "+                                m_mtfFreq[ RUNB ]++;", "-                szptr[ wr ] = (short)( j + 1 );", "+                m_szptr[ wr ] = (short)( j + 1 );", "-                mtfFreq[ j + 1 ]++;", "+                m_mtfFreq[ j + 1 ]++;", "-                        szptr[ wr ] = (short)RUNA;", "+                        m_szptr[ wr ] = (short)RUNA;", "-                        mtfFreq[ RUNA ]++;", "+                        m_mtfFreq[ RUNA ]++;", "-                        szptr[ wr ] = (short)RUNB;", "+                        m_szptr[ wr ] = (short)RUNB;", "-                        mtfFreq[ RUNB ]++;", "+                        m_mtfFreq[ RUNB ]++;", "-        szptr[ wr ] = (short)EOB;", "+        m_szptr[ wr ] = (short)EOB;", "-        mtfFreq[ EOB ]++;", "+        m_mtfFreq[ EOB ]++;", "-        nMTF = wr;", "+        m_nMTF = wr;"]}]}