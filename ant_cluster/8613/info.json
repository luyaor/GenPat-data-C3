{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b94dda8eb1724b15956e6bba7b291f29", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6205e67070ced5331627afdb39b04245", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkHomeDir() throws Exception", "signatureAfterChange": "     private void checkHomeDir() throws Exception", "diff": ["-        final String home = m_embeddorParameters.getParameter( \"myrmidon.home\" );", "-        final File homeDir = ( new File( home ) ).getAbsoluteFile();", "-        if( !homeDir.isDirectory() )", "+        if( m_homeDir == null )", "-            final String message = REZ.getString( \"home-not-dir.error\", homeDir );", "-            throw new Exception( message );", "+            m_homeDir = new File( \".\" ).getAbsoluteFile();", "+        checkDirectory( m_homeDir, \"home-dir.name\" );", "+        m_embeddorParameters.setParameter( \"myrmidon.home\", m_homeDir.getAbsolutePath() );", "-            final String message = REZ.getString( \"homedir.notice\", homeDir );", "+            final String message = REZ.getString( \"homedir.notice\", m_homeDir );", "+", "+        String path = m_embeddorParameters.getParameter( \"myrmidon.lib.path\", \"lib\" );", "+        File dir = resolveDirectory( m_homeDir, path, \"task-lib-dir.name\" );", "+        m_embeddorParameters.setParameter( \"myrmidon.lib.path\", dir.getAbsolutePath() );", "+", "+        path = m_embeddorParameters.getParameter( \"myrmidon.ext.path\", \"ext\" );", "+        dir = resolveDirectory( m_homeDir, path, \"ext-dir.name\" );", "+        m_embeddorParameters.setParameter( \"myrmidon.ext.path\", dir.getAbsolutePath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edca4da6e71682a312b9a5544c946479", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "51e2cc543512d445e415bc5b7c2a42f98ddf8446", "commitAfterChange": "8e955e3a2e84e093d19f8053f610c479a3f27478", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void addFiles(Vector v, ZipOutputStream zOut, String prefix)         throws IOException", "signatureAfterChange": "     protected void addFiles(Vector filesets, ZipOutputStream zOut)         throws IOException", "diff": ["-     */", "-    protected void addFiles(Vector v, ZipOutputStream zOut, String prefix)", "-        throws IOException {", "-        for (int i=0; i<v.size(); i++) {", "-            FileSet fs = (FileSet) v.elementAt(i);", "-            DirectoryScanner ds = fs.getDirectoryScanner(project);", "-            addFiles(ds, zOut, prefix);", "-        }", "-    }", "+    protected void addFiles(Vector filesets, ZipOutputStream zOut)", "+        // Add each fileset in the Vector.", "+        for (int i = 0; i<filesets.size(); i++) {", "+            PrefixedFileSet fs = (PrefixedFileSet) filesets.elementAt(i);", "+            String fullpath = fs.getFullpath();", "+            // Need to manually add either fullpath's parent directory, or ", "+            // the prefix directory, to the archive. ", "+            } else if (fullpath.length() > 0) {", "+                addParentDirs(null, fullpath, zOut, \"\");", "+\t\t\t}", "+            // Add the fileset.", "+            addFiles(ds, zOut, prefix, fullpath);"]}]}