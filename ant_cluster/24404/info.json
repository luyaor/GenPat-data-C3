{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6256ee8b8967a28a502ee8e1edcf1872", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bfe841e0a13260006bc78a1e166853d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void configureInline( final ConfigurationState state,                                   final Configuration element,                                   final Context context )         throws CascadingException", "signatureAfterChange": "     private void configureInline( final ConfigurationState state,                                   final Configuration element,                                   final Context context )         throws CascadingException", "diff": ["-        final PropertyConfigurer childConfigurer =", "-            state.getConfigurer().getProperty( name );", "+        final PropertyConfigurer childConfigurer", "+            = getConfigurerFromName( state.getConfigurer(), name, true );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f280c5bf00f2fa694fff0f071155c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0e11c9965dbe23b0eec2b28babdec1b709398a37", "commitAfterChange": "2276012218ca9834464d9c52dffce0145fcbaa7f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "         void setObject(Project p, Object parent, Object value)                 throws InvocationTargetException, IllegalAccessException, BuildException", "signatureAfterChange": "         void setObject(Project p, Object parent, Object value)                 throws InvocationTargetException, IllegalAccessException, BuildException", "diff": ["-                        throw new BuildException(\"Attempt to set primitive \"", "-                                + method.getName().substring(4) + \" to null on \" + parent);", "+                        throw new BuildException(", "+                            \"Attempt to set primitive \"", "+                            + getPropertyName(method.getName(), \"set\")", "+                            + \" to null on \" + parent);", "-                    method.invoke(parent, new Object[] { value });", "+                    method.invoke(parent, new Object[] {value});"]}]}