{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da58b52b067e3e060975183c141404a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1063c58d5d5fb7ecf3fa24e8015973c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "b374c9f8a0a98f6127e1c226da0c68ad159e37e9", "commitAfterChange": "4dbe4dd92b5ec3dad9b357bffba330ad79d3895b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static boolean isOutOfDate(Resource src, Resource target,                                       long granularity)", "signatureAfterChange": "     public static boolean isOutOfDate(Resource src, Resource target, long granularity)", "diff": ["-    public static boolean isOutOfDate(Resource src, Resource target,", "-                                      long granularity) {", "+    public static boolean isOutOfDate(Resource src, Resource target, long granularity) {", "-        // Check if source exists - use sourceLastModified for file resources", "-        // as it is quicker than checking exists() again, however string resources", "-        // have a last modified time of 0", "-        boolean sourceExists = (src instanceof FileResource)", "-            ? sourceLastModified != 0L : src.isExists();", "-", "-        if (targetLastModified == 0L) {", "-            return true;", "-        }", "-        return (sourceLastModified - granularity) > targetLastModified;", "+        return src.isExists()", "+                && (sourceLastModified == Resource.UNKNOWN_DATETIME", "+                        || targetLastModified == Resource.UNKNOWN_DATETIME", "+                                || (sourceLastModified - granularity) > targetLastModified);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f38b5d2192a4d1222c03f4e7753938f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "6650efb105e0cdd4941ffc2c98f2aa8ee6e1dfea", "commitAfterChange": "e42bd46a51dd6347c0961e311bd3717c24d4ea8c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void initValidator()", "signatureAfterChange": "     private void initValidator()", "diff": ["-                throw new BuildException(INIT_FAILED_MSG + readerClassName", "+                throw new BuildException(INIT_FAILED_MSG ", "+                                         + reader.getClass().getName()", "-                boolean ok = setFeature(\"http://xml.org/sax/features/validation\", true, true);", "-                if (!ok) {", "-                    throw new BuildException(INIT_FAILED_MSG", "-                                             + readerClassName", "-                                             + \" doesn't provide validation\");", "-                }", "+                setFeature(\"http://xml.org/sax/features/validation\", true);", "-                setFeature(feature.getName(),", "-                           feature.getValue(),", "-                           true);", "+                setFeature(feature.getName(), feature.getValue());"]}]}