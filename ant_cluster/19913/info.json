{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4e1da2bd8c042366448cb62b214a792", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "117c6549e09a820b20fc0cbe1e3e0e36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DifferentSelector.java", "commitBeforeChange": "bbb51e6d345ffd68a030aa85896a99b60de985f5", "commitAfterChange": "cbab0d07f986f641ed6a0c15858c93650f0d78db", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected boolean selectionTest(File srcfile, File destfile)", "signatureAfterChange": "     protected boolean selectionTest(File srcfile, File destfile)", "diff": ["-        //same date if dest timestamp is within granularity of the srcfile", "-        boolean sameDate;", "-        sameDate = destfile.lastModified() >= srcfile.lastModified() - granularity", "-            && destfile.lastModified() <= srcfile.lastModified() + granularity;", "+        if (!ignoreFileTimes) {", "+            //same date if dest timestamp is within granularity of the srcfile", "+            boolean sameDate;", "+            sameDate = destfile.lastModified() >= srcfile.lastModified() - granularity", "+                && destfile.lastModified() <= srcfile.lastModified() + granularity;", "-        //and when ignoreFileTimes is set we claim the files are now equal", "-        if(sameDate && !ignoreFileTimes) {", "-            return true;", "+            // different dates => different files", "+            if(!sameDate) {", "+                return true;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7123cfbcc6d0bdc7848c5db6815766", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/DefaultLogger.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["-        if (event.getPriority() <= messageOutputLevel ", "-            && event.getModelElement() instanceof BuildElement) {", "-            // Print out the name of the task if we're in one", "-            BuildElement buildElement", "-                 = (BuildElement)event.getModelElement();", "-            String name = buildElement.getType();", "+        if (event.getPriority() <= messageOutputLevel) {", "+            ", "+            if (event.getModelElement() instanceof BuildElement) {", "+                // Print out the name of the task if we're in one", "+                BuildElement buildElement", "+                     = (BuildElement)event.getModelElement();", "+                String name = buildElement.getType();", "-            if (!emacsMode) {", "-                String msg = \"[\" + name + \"] \";", "-                int indentSize = LEFT_COLUMN_SIZE - msg.length();", "-                for (int i = 0; i < indentSize; i++) {", "-                    logTo.print(\" \");", "+                if (!emacsMode) {", "+                    String msg = \"[\" + name + \"] \";", "+                    int indentSize = LEFT_COLUMN_SIZE - msg.length();", "+                    for (int i = 0; i < indentSize; i++) {", "+                        logTo.print(\" \");", "+                    }", "+                    logTo.print(msg);", "-                logTo.print(msg);"]}]}