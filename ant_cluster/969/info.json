{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9ce4d40732ab80aedc117556b2622cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2095868d046a6a8f18da3329e1522adf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "+    @Override", "+\tpublic void execute() throws BuildException {", "-        int numberOfInputs = (inputFile != null ? 1 : 0)", "+        final int numberOfInputs = (inputFile != null ? 1 : 0)", "-        StringBuffer output = new StringBuffer();", "+        final StringBuffer output = new StringBuffer();", "-                    BufferedReader br = new BufferedReader(", "+                    final BufferedReader br = new BufferedReader(", "-                } catch (IOException e) {", "+                } catch (final IOException e) {", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4e6b9d9265cb2a1fee30335f77aa6f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/PresentSelector.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     @Override \tpublic boolean isSelected(final File basedir, final String filename, final File file)", "diff": ["-    public boolean isSelected(File basedir, String filename, File file) {", "+    @Override", "+\tpublic boolean isSelected(final File basedir, final String filename, final File file) {", "-        String[] destfiles = map.mapFileName(filename);", "+        final String[] destfiles = map.mapFileName(filename);", "-        String destname = destfiles[0];", "-        File destfile = FileUtils.getFileUtils().resolveFile(targetdir, destname);", "+        final String destname = destfiles[0];", "+        final File destfile = FileUtils.getFileUtils().resolveFile(targetdir, destname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5d389bd482e9c5cab737b5ab9e1229", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      private AttributeSetter getEnumSetter(         final Class<?> reflectedArg, final Method m, Class<?> arg)", "signatureAfterChange": "      private AttributeSetter getEnumSetter(         final Class<?> reflectedArg, final Method m, final Class<?> arg)", "diff": ["-        final Class<?> reflectedArg, final Method m, Class<?> arg) {", "+        final Class<?> reflectedArg, final Method m, final Class<?> arg) {", "-                public void set(Project p, Object parent, String value)", "+                @Override", "+\t\t\t\tpublic void set(final Project p, final Object parent, final String value)", "+\t\t\t\t\t\tfinal", "-                    } catch (IllegalArgumentException e) {", "+                    } catch (final IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9954799dd4dea956726c45c9c59c0343", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "     protected Map<Resource, String[]> buildMap(Resource[] fromResources, final File toDir,                            FileNameMapper mapper)", "signatureAfterChange": "     protected Map<Resource, String[]> buildMap(final Resource[] fromResources, final File toDir,                            final FileNameMapper mapper)", "diff": ["-    protected Map<Resource, String[]> buildMap(Resource[] fromResources, final File toDir,", "-                           FileNameMapper mapper) {", "-        HashMap<Resource, String[]> map = new HashMap<Resource, String[]>();", "+    protected Map<Resource, String[]> buildMap(final Resource[] fromResources, final File toDir,", "+                           final FileNameMapper mapper) {", "+        final HashMap<Resource, String[]> map = new HashMap<Resource, String[]>();", "-            Vector<Resource> v = new Vector<Resource>();", "+            final Vector<Resource> v = new Vector<Resource>();", "-                           public Resource getResource(String name) {", "+                           @Override", "+\t\t\t\t\t\tpublic Resource getResource(final String name) {", "-            String[] mappedFiles = mapper.mapFileName(toCopy[i].getName());", "+            final String[] mappedFiles = mapper.mapFileName(toCopy[i].getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abfa3e54eb70bdb9e5411729ac9ae519", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void setExtra(byte[] extra) throws RuntimeException", "signatureAfterChange": "     @Override     public void setExtra(byte[] extra) throws RuntimeException", "diff": ["+    @Override", "-        } catch (Exception e) {", "+        } catch (ZipException e) {"]}]}