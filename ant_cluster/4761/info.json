{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69889832163a18af231572ead0777f59", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60974ff39136e24330d78671be9632a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/types/AntFilterReader.java", "commitBeforeChange": "0012fd272339fc0306a14bfe8b06bd632b8c501b", "commitAfterChange": "de1a987f23e027a486e6b07ddc8ab2edecd7dd3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public final void setClassName(final String className)", "signatureAfterChange": "      public final void setClassName(final String className)", "diff": ["+", "-        try {", "-            final Class c = Class.forName(className);", "-            if (FilterReader.class.isAssignableFrom(c)) {", "-                this.className = className;", "-            } else {", "-                throw new BuildException(className +", "-                    \" does not extend java.io.FilterReader\");", "-            }", "-        } catch (final ClassNotFoundException cnfe) {", "-            throw new BuildException(cnfe);", "-        }", "+        this.className = className;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4793a45cc43071c3775fb222b6da70c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/DefaultFileName.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public FileName resolveName( String name, NameScope scope ) throws FileSystemException", "signatureAfterChange": "     public FileName resolveName( final String name,                                  final NameScope scope )         throws FileSystemException", "diff": ["-    public FileName resolveName( String name, NameScope scope ) throws FileSystemException", "+    public FileName resolveName( final String name,", "+                                 final NameScope scope )", "+        throws FileSystemException", "-        if( scope == NameScope.CHILD )", "-        {", "-            String childPath = m_parser.getChildPath( m_absPath, name );", "-            return new DefaultFileName( m_parser, m_rootPrefix, childPath );", "-        }", "-        else if( scope == NameScope.FILE_SYSTEM )", "-        {", "-            String absPath = m_parser.resolvePath( m_absPath, name );", "-            return new DefaultFileName( m_parser, m_rootPrefix, absPath );", "-        }", "-        else", "-        {", "-            throw new IllegalArgumentException();", "-        }", "+        final String absPath = m_parser.resolvePath( m_absPath, name, scope );", "+        return new DefaultFileName( m_parser, m_rootPrefix, absPath );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e182a5e287bcfdb1bd9caff1c3ac6346", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "c8ae289ddd72e9f5858612fba38393a3c8698c27", "commitAfterChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext taskContext )         throws TaskException", "signatureAfterChange": "     protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext taskContext )         throws ConfigurationException", "diff": ["-        throws TaskException", "+        throws ConfigurationException", "-        try", "-        {", "-            m_configurer.configure( task, taskModel, taskContext );", "-        }", "-        catch( final Throwable throwable )", "-        {", "-            final String message =", "-                REZ.getString( \"config.error\",", "-                               taskModel.getName(),", "-                               taskModel.getLocation() );", "-            throw new TaskException( message, throwable );", "-        }", "+        m_configurer.configure( task, taskModel, taskContext );"]}]}