{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef1b8232518f755a0d91d2461810250d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7453ae9ef89d7c6b6271f9facfcc00fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "6885f5ccadd471cc33c19bdcca4271aa3086d3ca", "commitAfterChange": "8dfa7abd4d64b0cbef6166a28440f39f46d6efd1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic Factory verifyAdaptability(String role, final Factory f)", "signatureAfterChange": " \tpublic void verifyAdaptability(String role, Class clz)", "diff": ["-\tpublic Factory verifyAdaptability(String role, final Factory f) {", "-\t    final Class clz = f.getOriginalClass();", "+\tpublic void verifyAdaptability(String role, Class clz) {", "-\t\treturn f;", "+\t\treturn;", "-\t\t    adapterVerifier.invoke(null, new Object[]{clz, project});", "-\t\t    return new Factory(){", "-\t\t\t    public Object create(Project p) {", "-\t\t\t\tRoleAdapter ra = createAdapter(p);", "-\t\t\t\tra.setProxy(f.create(p));", "-\t\t\t\treturn ra;", "-\t\t\t    }", "-", "-\t\t\t    public Class getOriginalClass() {", "-\t\t\t\treturn clz;", "-\t\t\t    }", "-\t\t\t};", "+\t\t    adapterVerifier.invoke(null, ", "+\t\t\t\t\t   new Object[]{clz, project});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfee41f8b6fab10621d12a5186e5b4f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "2bcc3b328adcc97c10be2efba1077ccf28b92caa", "commitAfterChange": "4ad59f0fc5eb69936f4322c1394993d33299959b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void verifyAdaptability(String role, Class clz)", "signatureAfterChange": " \tpublic Factory verifyAdaptability(String role, final Factory f)", "diff": ["-\tpublic void verifyAdaptability(String role, Class clz) {", "+\tpublic Factory verifyAdaptability(String role, final Factory f) {", "+\t    final Class clz = f.getOriginalClass();", "-\t\treturn;", "+\t\treturn f;", "-\t\t    adapterVerifier.invoke(null, ", "-\t\t\t\t\t   new Object[]{clz, project});", "+\t\t    adapterVerifier.invoke(null, new Object[]{clz, project});", "+\t\t    return new Factory(){", "+\t\t\t    public Object create(Project p) {", "+\t\t\t\tRoleAdapter ra = createAdapter(p);", "+\t\t\t\tra.setProxy(f.create(p));", "+\t\t\t\treturn ra;", "+\t\t\t    }", "+", "+\t\t\t    public Class getOriginalClass() {", "+\t\t\t\treturn clz;", "+\t\t\t    }", "+\t\t\t};"]}]}