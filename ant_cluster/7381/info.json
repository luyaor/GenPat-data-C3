{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be54ad5e851747b58d3b430294f9ad05", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d4b0a1b4199e98f347f074bad73af1d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void testCreateWithEmptyFileset()", "signatureAfterChange": "      @Test     public void testCreateWithEmptyFileset()", "diff": ["+    @Test", "-        executeTarget(\"testCreateWithEmptyFilesetSetUp\");", "-        executeTarget(\"testCreateWithEmptyFileset\");", "-        executeTarget(\"testCreateWithEmptyFileset\");", "+        buildRule.executeTarget(\"testCreateWithEmptyFilesetSetUp\");", "+        buildRule.executeTarget(\"testCreateWithEmptyFileset\");", "+        buildRule.executeTarget(\"testCreateWithEmptyFileset\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb76faa5f31c28c88f109faf969b35b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": "          private void performConfigTest(String target, int[] expectedCounts)", "signatureAfterChange": "          private void performConfigTest(String target, int[] expectedCounts)", "diff": ["-                \"custom config: server time zone ID = \" + getProject().getProperty(\"ftp.server.timezone\"),", "+                \"custom config: server time zone ID = \" + buildRule.getProject().getProperty(\"ftp.server.timezone\"),", "-        getProject().addBuildListener(counter);", "-        getProject().executeTarget(target);", "+        buildRule.getProject().addBuildListener(counter);", "+        buildRule.getProject().executeTarget(target);"]}]}