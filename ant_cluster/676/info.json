{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dde7c1ea2119bdf7aa66ca0b6b03855e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a580d19565e31e73e076fbd900b373f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void importLibrary(String libraryId) throws ExecutionException", "signatureAfterChange": "     public void importLibrary(String libraryId) throws ExecutionException", "diff": ["+     */", "+    public void importLibrary(String libraryId) throws ExecutionException {", "+        AntLibrary library = (AntLibrary)antLibraries.get(libraryId);", "+        if (library == null) {", "+            throw new ExecutionException(\"Unable to import library \" + libraryId", "+                 + \" as it has not been loaded\");", "+        }", "+        for (Iterator i = library.getDefinitionNames(); i.hasNext(); ) {", "+            String defName = (String)i.next();", "+            importLibraryDef(library, defName, null);", "+        }", "+        addLibraryConverters(library);", "+    }", "-     */", "-    protected void importLibrary(String libraryId) throws ExecutionException {", "-        AntLibrary library = (AntLibrary)antLibraries.get(libraryId);", "-        if (library == null) {", "-            throw new ExecutionException(\"Unable to import library \" + libraryId", "-                 + \" as it has not been loaded\");", "-        }", "-        for (Iterator i = library.getDefinitionNames(); i.hasNext(); ) {", "-            String defName = (String)i.next();", "-            importLibraryDef(library, defName, null);", "-        }", "-        addLibraryConverters(library);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee08060db197b0da19a541214ace1de1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private void importLibrary(String libraryId) throws ConfigException", "signatureAfterChange": "     protected void importLibrary(String libraryId) throws ExecutionException", "diff": ["+    protected void importLibrary(String libraryId) throws ExecutionException {", "+        AntLibrary library = (AntLibrary)antLibraries.get(libraryId);", "+        if (library == null) {", "+            throw new ExecutionException(\"Unable to import library \" + libraryId", "+                 + \" as it has not been loaded\");", "+        Map libDefs = library.getDefinitions();", "+        for (Iterator i = libDefs.keySet().iterator(); i.hasNext(); ) {", "+            String defName = (String)i.next();", "+            AntLibDefinition libdef", "+                 = (AntLibDefinition)libDefs.get(defName);", "+            definitions.put(defName, new ImportInfo(library, libdef));", "+        addLibraryConverters(library);", "-     */", "-    private void importLibrary(String libraryId) throws ConfigException {", "-        AntLibrary library = (AntLibrary)antLibraries.get(libraryId);", "-        Map libDefs = library.getDefinitions();", "-        for (Iterator i = libDefs.keySet().iterator(); i.hasNext(); ) {", "-            String defName = (String)i.next();", "-            AntLibDefinition libdef", "-                 = (AntLibDefinition)libDefs.get(defName);", "-            definitions.put(defName, new ImportInfo(library, libdef));", "-        }", "-        addLibraryConverters(library);", "-    }"]}]}