{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2d44d4713366495c9459efecc338621", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9da994b0973193099e3ed53d94343239", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "d977d4b58f8e6e323060aeb695e45749822187d4", "commitAfterChange": "b417973d391382a96e26e6c50751b9b24f85b239", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-    public void buildStarted(BuildEvent event) {}", "-    public void buildFinished(BuildEvent event) {}", "+     */", "+    public void buildFinished(BuildEvent event) {", "+        Throwable error = event.getException();", "+", "+        if (error == null) {", "+            out.println(\"\\nBUILD SUCCESSFUL\");", "+        }", "+        else {", "+            out.println(\"\\nBUILD FAILED\\n\");", "+", "+            if (error instanceof BuildException) {", "+                out.println(error.toString());", "+", "+                Throwable nested = ((BuildException)error).getException();", "+                if (nested != null) {", "+                    nested.printStackTrace(out);", "+                }", "+            }", "+            else {", "+                error.printStackTrace(out);", "+            }", "+        }", "+", "+        out.println(\"\\nTotal time: \" + formatTime(System.currentTimeMillis() - startTime));", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb9b91b4b43630c87273e5256955c21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "119e49b11a7c7b72fd5a0d6f1a5b7ab2dd1a9234", "commitAfterChange": "6f0139454bc6621c0b5f74a5974292432260ea06", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static void printTargets(Project project)", "signatureAfterChange": "     private static void printTargets(Project project)", "diff": ["+", "+        String defaultTarget = project.getDefaultTarget();", "+        if (defaultTarget != null && !\"\".equals(defaultTarget)) { // shouldn't need to check but...", "+            Vector defaultName = new Vector();", "+            Vector defaultDesc = new Vector();", "+            defaultName.addElement(defaultTarget);", "+", "+            int indexOfDefDesc = topNames.indexOf(defaultTarget);", "+            if (indexOfDefDesc >= 0) {", "+                defaultDesc.addElement(topDescriptions.elementAt(indexOfDefDesc));", "+            } else {", "+                defaultDesc.addElement(\"\");", "+            }", "+", "+            printTargets(defaultName, defaultDesc, \"Default target:\", maxLength);", "+", "+        }", "+"]}]}