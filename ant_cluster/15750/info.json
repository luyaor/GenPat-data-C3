{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd852a399886a2dc98de7ace9a8e6d48", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "568f58917ee8867cfd0ec11465cd7c4c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "04fc7457032906cee2e0dea7a27d5e8a770b86be", "commitAfterChange": "52159303cee4ea21cd77f26d5cff741e8bcd386f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["+        // this is a quick hack to make things work in a", "+        // Gump/Kaffe/Jikes combo.  I promise I'll explain it later -", "+        // and add a real solution as well ;-) Stefan", "+        if (\"true\".equals(System.getProperty(\"build.clonevm\"))", "+            && Path.systemBootClasspath.size() > 0) {", "+            cmd.createArgument().setValue(\"-bootclasspath\");", "+            cmd.createArgument().setPath(Path.systemBootClasspath);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc74ebe0919d21509e54462682cec9a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "11017189e24397c01a5f9ffb9da1c3d8b838d7aa", "commitAfterChange": "90cc26a37ac49a3685a2f12ba34021b252529511", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void testIsExcludedDirectoryScanned()", "signatureAfterChange": "      public void testIsExcludedDirectoryScanned()", "diff": ["+        String shareclassloader = getProject().getProperty(\"tests.and.ant.share.classloader\");", "+        // when the test is started by the build.xml of ant", "+        // if the property tests.and.ant.share.classloader is not set in the build.xml", "+        // a sysproperty with name tests.and.ant.share.classloader and value", "+        // ${tests.and.ant.share.classloader} will be set", "+        // we are trying to catch this here.", "+        if (shareclassloader == null", "+                || (shareclassloader != null && shareclassloader.indexOf(\"${\") == 0)) {", "+            System.out.println(\"cannot execute testIsExcludedDirectoryScanned when tests are forked, \" +", "+                    \"package private method called\");", "+            return;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c152b970be24563beb16faa82ed38d59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "aca10a1d12baef5b24d64906202659ffbdcf7e0f", "commitAfterChange": "6440b64b5a526e07d4457be2153642524cecc959", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     protected void scanDir(File baseDir, String files[],                            FileNameMapper mapper)", "signatureAfterChange": "     protected void scanDir(File baseDir, String files[],                            FileNameMapper mapper)", "diff": ["-        SourceFileScanner sfs = new SourceFileScanner(this);", "-        String[] newFiles = sfs.restrict(files, baseDir, baseDir, mapper);", "+", "+        String[] newFiles = files;", "+        if (idl) {", "+            log(\"will leave uptodate test to rmic implementation in idl mode.\",", "+                Project.MSG_VERBOSE);", "+        } else if (iiop ", "+                   && iiopopts != null && iiopopts.indexOf(\"-always\") > -1) {", "+            log(\"no uptodate test as -always option has been specified\",", "+                Project.MSG_VERBOSE);", "+        } else {", "+            SourceFileScanner sfs = new SourceFileScanner(this);", "+            newFiles = sfs.restrict(files, baseDir, baseDir, mapper);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7615d0edcf22697821f83764d53b19e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Main.java", "commitBeforeChange": "75b3eb1e70c3ccb912e47445a8cf50d3bdb1dd09", "commitAfterChange": "3ddbc0b6c9ac6420db40ac98fd25c9960a28880b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["+", "+        String vmVersion = System.getProperty(\"java.vm.vendor\");", "+        if(vmVersion.indexOf(\"Blackdown\") > 0 &&", "+           vmVersion.indexOf(\"RC\") > 0) {", "+            System.err.println(\"Warning: Antidote will not work with VM version Blackdown-1.3.0-RC1.\");", "+            System.err.println(\"Your version: \" + vmVersion);", "+        }", "+"]}]}