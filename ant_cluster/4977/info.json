{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ee807dbcf2ee6793567b72c7a499429", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3052b24f6659ade4a0cb1a38173abfcb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Mkdir mkdir = ( Mkdir )project.createTask( \"mkdir\" );", "+            Mkdir mkdir = (Mkdir)project.createTask( \"mkdir\" );", "-            Path beforeInstrumentationClasspath = ( ( Path )baseClasspath.clone() );", "+            Path beforeInstrumentationClasspath = ( (Path)baseClasspath.clone() );", "-            Path afterInstrumentationClasspath = ( ( Path )baseClasspath.clone() );", "+            Path afterInstrumentationClasspath = ( (Path)baseClasspath.clone() );", "-            Path repositoryClasspath = ( ( Path )baseClasspath.clone() );", "+            Path repositoryClasspath = ( (Path)baseClasspath.clone() );", "-            Path iContractClasspath = ( ( Path )baseClasspath.clone() );", "+            Path iContractClasspath = ( (Path)baseClasspath.clone() );", "-            Java iContract = ( Java )project.createTask( \"java\" );", "+            Java iContract = (Java)project.createTask( \"java\" );", "-//System.out.println( \"JAVA -classpath \" + iContractClasspath + \" com.reliablesystems.iContract.Tool \" + args.toString() );", "+            //System.out.println( \"JAVA -classpath \" + iContractClasspath + \" com.reliablesystems.iContract.Tool \" + args.toString() );", "-                throw new BuildException( \"iContract instrumentation failed. Code=\" + result );", "+                throw new TaskException( \"iContract instrumentation failed. Code=\" + result );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd3b0d675d687c89f617eaf8364d008", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Mkdir mkdir = ( Mkdir )project.createTask( \"mkdir\" );", "+            Mkdir mkdir = (Mkdir)project.createTask( \"mkdir\" );", "-            Path beforeInstrumentationClasspath = ( ( Path )baseClasspath.clone() );", "+            Path beforeInstrumentationClasspath = ( (Path)baseClasspath.clone() );", "-            Path afterInstrumentationClasspath = ( ( Path )baseClasspath.clone() );", "+            Path afterInstrumentationClasspath = ( (Path)baseClasspath.clone() );", "-            Path repositoryClasspath = ( ( Path )baseClasspath.clone() );", "+            Path repositoryClasspath = ( (Path)baseClasspath.clone() );", "-            Path iContractClasspath = ( ( Path )baseClasspath.clone() );", "+            Path iContractClasspath = ( (Path)baseClasspath.clone() );", "-            Java iContract = ( Java )project.createTask( \"java\" );", "+            Java iContract = (Java)project.createTask( \"java\" );", "-//System.out.println( \"JAVA -classpath \" + iContractClasspath + \" com.reliablesystems.iContract.Tool \" + args.toString() );", "+            //System.out.println( \"JAVA -classpath \" + iContractClasspath + \" com.reliablesystems.iContract.Tool \" + args.toString() );", "-                throw new BuildException( \"iContract instrumentation failed. Code=\" + result );", "+                throw new TaskException( \"iContract instrumentation failed. Code=\" + result );"]}]}