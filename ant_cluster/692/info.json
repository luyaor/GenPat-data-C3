{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fec420efc3a4bf35a828b15ca75e8c99", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02741dde8f6fb4193dc150f0eba4cc44", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public CBZip2OutputStream( OutputStream inStream, int inBlockSize )         throws IOException", "signatureAfterChange": "      public CBZip2OutputStream( final OutputStream output, final int blockSize )         throws IOException", "diff": ["-    public CBZip2OutputStream( OutputStream inStream, int inBlockSize )", "+    public CBZip2OutputStream( final OutputStream output, final int blockSize )", "-        block = null;", "-        quadrant = null;", "-        zptr = null;", "-        ftab = null;", "+        bsSetStream( output );", "+        m_workFactor = 50;", "-        bsSetStream( inStream );", "-", "-        workFactor = 50;", "-        if( inBlockSize > 9 )", "+        int outBlockSize = blockSize;", "+        if( outBlockSize > 9 )", "-            inBlockSize = 9;", "+            outBlockSize = 9;", "-        if( inBlockSize < 1 )", "+        if( outBlockSize < 1 )", "-            inBlockSize = 1;", "+            outBlockSize = 1;", "-        blockSize100k = inBlockSize;", "+        m_blockSize100k = outBlockSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce1d8b31964201f51c5cabd000cb626", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "89683e39ec2d4635aa87fd3370941c109d9d7507", "commitAfterChange": "ed1dc6c2376542ff311a33f0d2269c5c19d00a29", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private String calcDate(String fromDate, int numDays) throws ParseException", "signatureAfterChange": "     private String calcDate(String startDate, int daysToAdd) throws ParseException", "diff": ["-    private String calcDate(String fromDate, int numDays) throws ParseException {", "-        String toDate = null;", "-        Date currdate = new Date();", "-        Calendar calend = new GregorianCalendar();", "-        currdate = m_DateFormat.parse(fromDate);", "-        calend.setTime(currdate);", "-        calend.add(Calendar.DATE, numDays);", "-        toDate = m_DateFormat.format(calend.getTime());", "-        return toDate;", "+    private String calcDate(String startDate, int daysToAdd) throws ParseException {", "+        Date currentDate = new Date();", "+        Calendar calendar = new GregorianCalendar();", "+        currentDate = dateFormat.parse(startDate);", "+        calendar.setTime(currentDate);", "+        calendar.add(Calendar.DATE, daysToAdd);", "+        return dateFormat.format(calendar.getTime());"]}]}