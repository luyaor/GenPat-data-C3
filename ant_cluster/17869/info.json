{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a8e7bb55dfec10dc42c1d1c1872db22", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "badf3dc2814e29b8015cf5c9abc9b991", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "dd4f44627a1edd3c29886c19e51b02ada66fd4ac", "commitAfterChange": "f7940f8b485f7251cf7abeac93793d44dd18b42e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private void recvDecodingTables()", "signatureAfterChange": "      private void recvDecodingTables()", "diff": ["-        for (i = 0; i < 16; i++) {", "-            if (bsR(1) == 1) {", "+        for (i = 0; i < 16; i++)", "+            if (bsR(1) == 1)", "-            } else {", "+            else", "-            }", "-        }", "-        for (i = 0; i < 256; i++) {", "+        for (i = 0; i < 256; i++)", "-        }", "-        for (i = 0; i < 16; i++) {", "-            if (inUse16[i]) {", "-                for (j = 0; j < 16; j++) {", "-                    if (bsR(1) == 1) {", "+        for (i = 0; i < 16; i++)", "+            if (inUse16[i])", "+                for (j = 0; j < 16; j++)", "+                    if (bsR(1) == 1)", "-                    }", "-                }", "-            }", "-        }", "-            while (bsR(1) == 1) {", "+            while (bsR(1) == 1)", "-            }", "-            for (v = 0; v < nGroups; v++) {", "+            for (v = 0; v < nGroups; v++)", "-            }", "-                    if (bsR(1) == 0) {", "+                    if (bsR(1) == 0)", "-                    } else {", "+                    else", "-                    }", "-                if (len[t][i] > maxLen) {", "+                if (len[t][i] > maxLen)", "-                }", "-                if (len[t][i] < minLen) {", "+                if (len[t][i] < minLen)", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbcc461209ac0937cda8fa48290f9e6f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "dd4f44627a1edd3c29886c19e51b02ada66fd4ac", "commitAfterChange": "f7940f8b485f7251cf7abeac93793d44dd18b42e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private void hbCreateDecodeTables(int[] limit, int[] base,                                       int[] perm, char[] length,                                       int minLen, int maxLen, int alphaSize)", "signatureAfterChange": "      private void hbCreateDecodeTables(int[] limit, int[] base,                                       int[] perm, char[] length,                                       int minLen, int maxLen, int alphaSize)", "diff": ["-        for(i = minLen; i <= maxLen; i++) {", "-            for(j = 0; j < alphaSize; j++) {", "+        for(i = minLen; i <= maxLen; i++)", "+            for(j = 0; j < alphaSize; j++)", "-                }", "-            }", "-        };", "+                };", "-        for(i = 0; i < MAX_CODE_LEN; i++) {", "+        for(i = 0; i < MAX_CODE_LEN; i++)", "-        }", "-        for(i = 0; i < alphaSize; i++) {", "+        for(i = 0; i < alphaSize; i++)", "-        }", "-        for (i = 0; i < MAX_CODE_LEN; i++) {", "+        for (i = 0; i < MAX_CODE_LEN; i++)", "-        }", "-        for (i = minLen + 1; i <= maxLen; i++) {", "+        for (i = minLen + 1; i <= maxLen; i++)", "-        }"]}]}