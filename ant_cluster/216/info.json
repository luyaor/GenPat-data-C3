{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d569dc1d8073eca5d8d98c329c58bce", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b16ba9027a326e4e8ff5aedb1059cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java", "commitBeforeChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "commitAfterChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      Project buildFromFile(File file) throws AntException", "signatureAfterChange": "     public Project buildFromFile(File file) throws AntException", "diff": ["-    Project buildFromFile(File file) throws AntException {", "+     */", "+    public Project buildFromFile(File file) throws AntException {", "+            bhb.setProjectFileLocation(file);", "-            return bhb.getProject();", "+            Project project = bhb.getProject();", "+            project.setFrontEnd(frontEnd);", "+            return project;", "-            throw new AntException(pce.getMessage());", "+            throw new AntException(pce);", "-            System.out.println(se);", "-            System.out.println(se.getMessage());", "-            throw new AntException(se.getMessage());", "+            Exception e = se.getException();", "+            if (e != null && e instanceof AntException) {", "+                // it's one of our own thrown from inside the parser to stop it", "+                throw (AntException)e;", "+            }", "+            throw new AntException(se);", "-            throw new AntException(ioe.getMessage());", "+            throw new AntException(ioe);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71f362cffd95146d094df9f757f6788", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected void transform(Node root, String xslname, String htmlname) throws TransformerException", "signatureAfterChange": "     protected void transform(Node root, String xslname, String htmlname) throws SAXException", "diff": ["-    protected void transform(Node root, String xslname, String htmlname) throws TransformerException {", "+    protected void transform(Node root, String xslname, String htmlname) throws SAXException {", "-            StreamSource xsl_source = getXSLStreamSource(xslname);", "-            Transformer transformer = tfactory.newTransformer(xsl_source);", "+            XSLTInputSource xsl_source = getXSLStreamSource(xslname);", "+            XSLTProcessor processor = XSLTProcessorFactory.getProcessor();", "-            transformer.transform( new DOMSource(root), new StreamResult(htmlfile));", "+            processor.process( new XSLTInputSource(root), xsl_source, new XSLTResultTarget(htmlfile.getAbsolutePath()) );", "-            task.log(\"Transform time: \" + dt + \"ms\");", "+            task.log(\"Transform time for \" + xslname + \": \" + dt + \"ms\");", "-            throw new TransformerException(e.getMessage());", "+            throw new SAXException(e.getMessage());"]}]}