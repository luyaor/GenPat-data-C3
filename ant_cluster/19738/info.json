{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffd6dc07c9ccce63e15aad0128c02e3b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "296b8810c527d1d07cb1c28f324690d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-        ArrayList filesets = new ArrayList();", "-        ArrayList rest = new ArrayList();", "+        ArrayList<ResourceCollection> filesets = new ArrayList<ResourceCollection>();", "+        ArrayList<ResourceCollection> rest = new ArrayList<ResourceCollection>();", "-        ResourceCollection[] rc = (ResourceCollection[])", "+        ResourceCollection[] rc ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6559f4326c6d6f1b04eda942421d6060", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void merge(Section section, boolean mergeClassPaths)             throws ManifestException", "signatureAfterChange": "         public void merge(Section section, boolean mergeClassPaths)             throws ManifestException", "diff": ["-            Enumeration e = section.getAttributeKeys();", "+            Enumeration<String> e = section.getAttributeKeys();", "-                String attributeName = (String) e.nextElement();", "+                String attributeName = e.nextElement();", "-                    Enumeration cpe = attribute.getValues();", "+                    Enumeration<String> cpe = attribute.getValues();", "-                        String value = (String) cpe.nextElement();", "+                        String value = cpe.nextElement();", "-                        for (Enumeration attribEnum = currentCp.getValues();", "+                        for (Enumeration<String> attribEnum = currentCp.getValues();", "-                            String value = (String) attribEnum.nextElement();", "+                            String value = attribEnum.nextElement();", "-            Enumeration warnEnum = section.warnings.elements();", "+            Enumeration<String> warnEnum = section.warnings.elements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb2860b990bc3fa73b5d29e47965a72", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": "     private void parsePackages(Vector pn, Path sp)", "signatureAfterChange": "     private void parsePackages(Vector<String> pn, Path sp)", "diff": ["-    private void parsePackages(Vector pn, Path sp) {", "-        HashSet addedPackages = new HashSet();", "-        Vector dirSets = (Vector) packageSets.clone();", "+    private void parsePackages(Vector<String> pn, Path sp) {", "+        HashSet<String> addedPackages = new HashSet<String>();", "+        @SuppressWarnings(\"unchecked\")", "+        Vector<DirSet> dirSets = (Vector<DirSet>) packageSets.clone();", "-                Enumeration e = packageNames.elements();", "+                Enumeration<PackageName> e = packageNames.elements();", "-                    PackageName p = (PackageName) e.nextElement();", "+                    PackageName p = e.nextElement();", "-            Enumeration e = excludePackageNames.elements();", "+            Enumeration<PackageName> e = excludePackageNames.elements();", "-                PackageName p = (PackageName) e.nextElement();", "+                PackageName p = e.nextElement();", "-        Enumeration e = dirSets.elements();", "+        Enumeration<DirSet> e = dirSets.elements();", "-            DirSet ds = (DirSet) e.nextElement();", "+            DirSet ds = e.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e8a67f6e26609ac07322b2c4f01a41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "f6bdb170fa1a248b66aa89e98782031f4e7170e2", "commitAfterChange": "f13816683ddabdf2378167245d20a334053a3ca2", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "     protected Collection executeOrQueue(Enumeration testList,                                         boolean runIndividual)", "signatureAfterChange": "     protected Collection<List> executeOrQueue(Enumeration<JUnitTest> testList,                                         boolean runIndividual)", "diff": ["-    protected Collection executeOrQueue(Enumeration testList,", "+    protected Collection<List> executeOrQueue(Enumeration<JUnitTest> testList,", "-        Map testConfigurations = new HashMap();", "+        Map<ForkedTestConfiguration, List> testConfigurations = new HashMap<ForkedTestConfiguration, List>();", "-            JUnitTest test = (JUnitTest) testList.nextElement();", "+            JUnitTest test = testList.nextElement();", "-                    List l = (List) testConfigurations.get(c);", "+                    List<JUnitTest> l = testConfigurations.get(c);", "-                        l = new ArrayList();", "+                        l = new ArrayList<JUnitTest>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99bac28114ba6da19391a64d93ca9ab5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "     public void resolveExtensionOfAttributes(Project project)             throws BuildException", "signatureAfterChange": "     public void resolveExtensionOfAttributes(Project project)             throws BuildException", "diff": ["-            Hashtable projectTargets = project.getTargets();", "+            Hashtable<String, Target> projectTargets = project.getTargets();", "-                extPoint = (Target) projectTargets.get(extPointName);", "+                extPoint = projectTargets.get(extPointName);", "-                extPoint = (Target) projectTargets.get(prefixAndSep + extPointName);", "+                extPoint = projectTargets.get(prefixAndSep + extPointName);", "-                    extPoint = (Target) projectTargets.get(extPointName);", "+                    extPoint = projectTargets.get(extPointName);", "-                    Target t = (Target) projectTargets.get(targetName);", "+                    Target t = projectTargets.get(targetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca8239bf156f60dea1643d85f76c372", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private static void printTargets(Project project, Vector names,                                      Vector descriptions, Vector dependencies,                                      String heading,                                      int maxlen)", "signatureAfterChange": "     private static void printTargets(Project project, Vector<String> names,                                      Vector<String> descriptions, Vector<Enumeration<String>> dependencies,                                      String heading,                                      int maxlen)", "diff": ["-    private static void printTargets(Project project, Vector names,", "-                                     Vector descriptions, Vector dependencies,", "+    private static void printTargets(Project project, Vector<String> names,", "+                                     Vector<String> descriptions, Vector<Enumeration<String>> dependencies,", "-        StringBuffer msg = new StringBuffer();", "+        StringBuilder msg = new StringBuilder();", "-                    spaces.substring(0, maxlen - ((String) names.elementAt(i)).length() + 2));", "+                    spaces.substring(0, maxlen - names.elementAt(i).length() + 2));", "-                Enumeration deps = (Enumeration) dependencies.elementAt(i);", "+                Enumeration<String> deps = dependencies.elementAt(i);", "-                    msg.append(lSep);                ", "+                    msg.append(lSep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f834480f29ddb307350020fedad8a547", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["-            Set includePatterns = new HashSet();", "-            Set excludePatterns = new HashSet();", "+            Set<String> includePatterns = new HashSet<String>();", "+            Set<String> excludePatterns = new HashSet<String>();", "-                PatternSet p = (PatternSet) patternsets.elementAt(v);", "+                PatternSet p = patternsets.elementAt(v);", "-            for (Iterator iter = includePatterns.iterator();", "+            for (Iterator<String> iter = includePatterns.iterator();", "-                String pattern = (String) iter.next();", "+                String pattern = iter.next();", "-            for (Iterator iter = excludePatterns.iterator();", "+            for (Iterator<String> iter = excludePatterns.iterator();", "-                String pattern = (String) iter.next();", "+                String pattern = iter.next();"]}]}