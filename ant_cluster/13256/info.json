{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2ae633d3dca71d5a55d7e8269ddc83c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126b0478650bbb95092700f61eeb9eba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void run()", "signatureAfterChange": "      public void run()", "diff": ["-        long start = System.currentTimeMillis();", "-", "-        if (retCode != 0) { // had an exception in the constructor", "-            return;", "+        res = new TestResult();", "+        res.addListener(this);", "+        for (int i=0; i < formatters.size(); i++) {", "+            res.addListener((TestListener)formatters.elementAt(i));", "+        long start = System.currentTimeMillis();", "+", "-        suite.run(res);", "-        junitTest.setRunTime(System.currentTimeMillis()-start);", "-        junitTest.setCounts(res.runCount(), res.failureCount(),", "-                            res.errorCount());", "+        if (exception != null) { // had an exception in the constructor", "+            for (int i=0; i < formatters.size(); i++) {", "+                ((TestListener)formatters.elementAt(i)).addError(null, ", "+                                                                 exception);", "+            }", "+            junitTest.setCounts(1, 0, 1);", "+            junitTest.setRunTime(0);", "+        } else {", "+            suite.run(res);", "+            junitTest.setCounts(res.runCount(), res.failureCount(), ", "+                                res.errorCount());", "+            junitTest.setRunTime(System.currentTimeMillis() - start);", "+        }", "-        if (res.errorCount() != 0) {", "-            retCode = 2;", "+        if (retCode != SUCCESS || res.errorCount() != 0) {", "+            retCode = ERRORS;", "-            retCode = 1;", "+            retCode = FAILURES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee28d419542f689988472853a6bb185d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "4d082edbbdb380b7d718db1bf4322dcdc3f49281", "commitAfterChange": "f40249fb493adae86ba37ff25192164188f6eb32", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public void printElementDecl(PrintWriter out, Project p,                                      String name, Class element)", "signatureAfterChange": "         public void printElementDecl(PrintWriter out, Project p,                                      String name, Class element)", "diff": ["+                } else if (type.getSuperclass() != null && type.getSuperclass().getName().equals(\"java.lang.Enum\")) {", "+                    try {", "+                        Object[] values = (Object[]) type.getMethod(\"values\", null).invoke(null, null);", "+                        if (values.length == 0) {", "+                            sb.append(\"CDATA \");", "+                        } else {", "+                            sb.append('(');", "+                            for (int i = 0; i < values.length; i++) {", "+                                if (i != 0) {", "+                                    sb.append(\" | \");", "+                                }", "+                                sb.append(type.getMethod(\"name\", null).invoke(values[i], null));", "+                            }", "+                            sb.append(\") \");", "+                        }", "+                    } catch (Exception x) {", "+                        sb.append(\"CDATA \");", "+                    }"]}]}