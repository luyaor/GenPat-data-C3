{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a9635ee9a061a0a7ba2ce316ddae0be", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15dd1c8e089812206c4d71ba4cbe0b09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "32f323668f263fad0bc38a43c6d4e6a1f4579c8a", "commitAfterChange": "a920aa9f305e0f998c908798c99b6d108f5d4a58", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkAttributes()", "signatureAfterChange": "     private void checkAttributes()", "diff": ["-        if (source == null) {", "-            throw new BuildException(\"src attribute is required\", getLocation());", "+        if (sources.size() == 0) {", "+            throw new BuildException(\"at least one source is required\",", "+                                     getLocation());", "+        }", "+        for (Iterator iter = sources.iterator(); iter.hasNext(); ) {", "+            Object up = ((Resource) iter.next()).as(URLProvider.class);", "+            if (up == null) {", "+                throw new BuildException(\"Only URLProvider resources are\"", "+                                         + \" supported\", getLocation());", "+            }", "-        if (dest == null) {", "+        if (destination == null) {", "-        if (dest.exists() && dest.isDirectory()) {", "-            throw new BuildException(\"The specified destination is a directory\",", "-                    getLocation());", "+        if (destination.exists() && sources.size() > 1", "+            && !destination.isDirectory()) {", "+            throw new BuildException(\"The specified destination is not a\"", "+                                     + \" directory\",", "+                                     getLocation());", "-        if (dest.exists() && !dest.canWrite()) {", "-            throw new BuildException(\"Can't write to \" + dest.getAbsolutePath(),", "-                    getLocation());", "+        if (destination.exists() && !destination.canWrite()) {", "+            throw new BuildException(\"Can't write to \"", "+                                     + destination.getAbsolutePath(),", "+                                     getLocation());", "+        }", "+", "+        if (sources.size() > 1 && !destination.exists()) {", "+            destination.mkdirs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf68e9e5fd08ecfcce62f7882cd96482", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "f701a45a76f305a53e96ffebf49b7000005303c8", "commitAfterChange": "4732c52135bf174383b10ed11b0ba86a33e12044", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["-        if (dir == null) {", "-            throw new BuildException(\"No directory specified for \"", "-                                     + getDataTypeName() + \".\");", "+        DirectoryScanner ds = null;", "+        synchronized (this) {", "+            if (directoryScanner != null && p == getProject()) {", "+                ds = directoryScanner;", "+            } else {", "+                if (dir == null) {", "+                    throw new BuildException(\"No directory specified for \"", "+                                             + getDataTypeName() + \".\");", "+                }", "+                if (!dir.exists()) {", "+                    throw new BuildException(dir.getAbsolutePath()", "+                                             + \" not found.\");", "+                }", "+                if (!dir.isDirectory()) {", "+                    throw new BuildException(dir.getAbsolutePath()", "+                                             + \" is not a directory.\");", "+                }", "+                ds = new DirectoryScanner();", "+                setupDirectoryScanner(ds, p);", "+                ds.setFollowSymlinks(followSymlinks);", "+                directoryScanner = (p == getProject()) ? ds : directoryScanner;", "+            }", "-        if (!dir.exists()) {", "-            throw new BuildException(dir.getAbsolutePath() + \" not found.\");", "-        }", "-        if (!dir.isDirectory()) {", "-            throw new BuildException(dir.getAbsolutePath()", "-                                     + \" is not a directory.\");", "-        }", "-        DirectoryScanner ds = new DirectoryScanner();", "-        setupDirectoryScanner(ds, p);", "-        ds.setFollowSymlinks(followSymlinks);"]}]}