{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ad8ec5e4063232352694710d0282ed2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dc8a5e822cde48bab117ef6f8e0b356", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "536bfb63e3ad71036b032550ca8241e07e1f5d45", "commitAfterChange": "b5397fd0e4b2a0e360dc14a9cb1ebec8f4ce7aa5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public void startElement(String name, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "     public static ClassLoader getContextClassLoader()         throws BuildException", "diff": ["-         */", "-        public void startElement(String name, AttributeList attrs) throws SAXParseException {", "-            if (project.getDataTypeDefinitions().get(name) != null) {", "-                new DataTypeHandler(this, target).init(name, attrs);", "-            } else {", "-                new TaskHandler(this, target, null, target).init(name, attrs);", "-            }", "+    public static ClassLoader getContextClassLoader()", "+        throws BuildException", "+    {", "+        // Are we running on a JDK 1.2 or later system?", "+        Method method = null;", "+        try {", "+            method = Thread.class.getMethod(\"getContextClassLoader\", null);", "+        } catch (NoSuchMethodException e) {", "+            // we are running on JDK 1.1", "+            return null; ", "+        // Get the thread context class loader (if there is one)", "+        ClassLoader classLoader = null;", "+        try {", "+            classLoader = (ClassLoader)", "+                method.invoke(Thread.currentThread(), null);", "+        } catch (IllegalAccessException e) {", "+            throw new BuildException", "+                (\"Unexpected IllegalAccessException\", e);", "+        } catch (InvocationTargetException e) {", "+            throw new BuildException", "+                (\"Unexpected InvocationTargetException\", e);", "+        // Return the selected class loader", "+        return (classLoader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99cfe3076de1681de65e6005b64365d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "commitAfterChange": "598017b1cdec8da5d9ac7002f6625561aca80ac7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static ClassLoader getContextClassLoader()         throws BuildException", "signatureAfterChange": "     public static ClassLoader getContextClassLoader()         throws BuildException", "diff": ["-        // Are we running on a JDK 1.2 or later system?", "-        Method method = null;", "-        try {", "-            method = Thread.class.getMethod(\"getContextClassLoader\", null);", "-        } catch (NoSuchMethodException e) {", "-            // we are running on JDK 1.1", "-            return null; ", "+        if (!LoaderUtils.isContextLoaderAvailable()) {", "+            return null;", "-", "-        // Get the thread context class loader (if there is one)", "-        ClassLoader classLoader = null;", "-        try {", "-            classLoader = (ClassLoader)", "-                method.invoke(Thread.currentThread(), null);", "-        } catch (IllegalAccessException e) {", "-            throw new BuildException", "-                (\"Unexpected IllegalAccessException\", e);", "-        } catch (InvocationTargetException e) {", "-            throw new BuildException", "-                (\"Unexpected InvocationTargetException\", e);", "-        }", "-", "-        // Return the selected class loader", "-        return (classLoader);", "+        ", "+        return LoaderUtils.getContextClassLoader();"]}]}