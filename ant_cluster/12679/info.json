{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a76fdfbf4dca92e5ef5e442e27c23717", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ac6548c79ff90e713f8777342efd35", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/BZip2Test.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testRealTest() throws IOException", "signatureAfterChange": "      public void testRealTest() throws IOException", "diff": ["-        assertTrue(\"File content mismatch\",", "-            FILE_UTILS.contentEquals(project.resolveFile(\"expected/asf-logo-huge.tar.bz2\"),", "-                                    project.resolveFile(\"asf-logo-huge.tar.bz2\")));", "+", "+        // doesn't work: Depending on the compression engine used,", "+        // compressed bytes may differ. False errors would be", "+        // reported.", "+        // assertTrue(\"File content mismatch\",", "+        // FILE_UTILS.contentEquals(project.resolveFile(\"expected/asf-logo-huge.tar.bz2\"),", "+        // project.resolveFile(\"asf-logo-huge.tar.bz2\")));", "+", "+        // We have to compare the decompressed content instead:", "+", "+        File originalFile =", "+            project.resolveFile(\"expected/asf-logo-huge.tar.bz2\");", "+        File actualFile   = project.resolveFile(\"asf-logo-huge.tar.bz2\");", "+", "+        InputStream originalIn =", "+            new BufferedInputStream(new FileInputStream(originalFile));", "+        assertEquals((byte) 'B', originalIn.read());", "+        assertEquals((byte) 'Z', originalIn.read());", "+", "+        InputStream actualIn =", "+            new BufferedInputStream(new FileInputStream(actualFile));", "+        assertEquals((byte) 'B', actualIn.read());", "+        assertEquals((byte) 'Z', actualIn.read());", "+", "+        originalIn = new CBZip2InputStream(originalIn);", "+        actualIn   = new CBZip2InputStream(actualIn);", "+", "+        while (true) {", "+            int expected = originalIn.read();", "+            int actual   = actualIn.read();", "+            if (expected >= 0) {", "+                if (expected != actual) {", "+                    fail(\"File content mismatch\");", "+                }", "+            } else {", "+                if (actual >= 0) {", "+                    fail(\"File content mismatch\");", "+                }", "+                break;", "+            }", "+        }", "+", "+        originalIn.close();", "+        actualIn.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfcbd0abf9cb295e4517e264c24d2438", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XalanLiaison.java", "commitBeforeChange": "85344c438efab87f56ca5f4b179752852ec0aa86", "commitAfterChange": "f66cab0ea7689df54fe51f64018cd3ef8b05cd3d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void transform(String infile, String outfile) throws Exception", "signatureAfterChange": "      public void transform(File infile, File outfile) throws Exception", "diff": ["-", "-    public void transform(String infile, String outfile) throws Exception {", "-        processor.process(new XSLTInputSource(normalize(infile)), xslSheet,", "-                        new XSLTResultTarget(outfile));", "+    public void transform(File infile, File outfile) throws Exception {", "+        FileInputStream fis = null;", "+        FileOutputStream fos = null;", "+        FileInputStream xslStream = null;", "+        try {", "+            xslStream = new FileInputStream(stylesheet);", "+            fis = new FileInputStream(infile);", "+            fos = new FileOutputStream(outfile);", "+            // systemid such as file:/// + getAbsolutePath() are considered", "+            // invalid here...", "+            XSLTInputSource xslSheet = new XSLTInputSource(xslStream);", "+            xslSheet.setSystemId(stylesheet.getAbsolutePath());", "+            XSLTInputSource src = new XSLTInputSource(fis);", "+            src.setSystemId(infile.getAbsolutePath());", "+            XSLTResultTarget res = new XSLTResultTarget(fos);", "+            processor.process(src, xslSheet, res);", "+        } finally {", "+            // make sure to close all handles, otherwise the garbage", "+            // collector will close them...whenever possible and", "+            // Windows may complain about not being able to delete files.", "+            try {", "+                if (xslStream != null){", "+                    xslStream.close();", "+                }", "+            } catch (IOException ignored){}", "+            try {", "+                if (fis != null){", "+                    fis.close();", "+                }", "+            } catch (IOException ignored){}", "+            try {", "+                if (fos != null){", "+                    fos.close();", "+                }", "+            } catch (IOException ignored){}"]}]}