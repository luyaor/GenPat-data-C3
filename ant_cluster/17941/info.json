{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac3d062f7eaf066b40227822226a3a52", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6a615b7ef2e9c7d5f2c70e1b58cc3d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "168f6c9ebd656db0959169c6da8454cd4e49fed3", "commitAfterChange": "2cd414161ecc3657680800ac891ded64f3af50dc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "signatureAfterChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "diff": ["-        ", "+", "+        if (noEJBC) {", "+            try {", "+                getTask().getProject().copyFile(sourceJar, destJar);", "+                if (!keepgenerated) {", "+                    sourceJar.delete();", "+                }", "+                return;", "+            }", "+            catch (IOException e) {", "+                throw new BuildException(\"Unable to write EJB jar\", e);", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939d5bfb76e51159c218fbc1c25ea4e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "ad6b39a6207abd8443094050224f58dc1afda3b9", "commitAfterChange": "94dd480d07ac2028fc94d46a253abcd2ddb189a8", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public File createTempFileName(String prefix, String suffix,             File parentDir, boolean deleteOnExit)", "signatureAfterChange": "     public File createTempFile(String prefix, String suffix, File parentDir,             boolean deleteOnExit, boolean createFile)", "diff": ["+            boolean deleteOnExit, boolean createFile) {", "+        String parent = (parentDir == null) ? System", "+                .getProperty(\"java.io.tmpdir\") : parentDir.getPath();", "+", "+        if (createFile) {", "+            try {", "+                result = File.createTempFile(prefix, suffix, new File(parent));", "+            } catch (IOException e) {", "+                throw new BuildException(\"Could not create tempfile in \"", "+                        + parent, e);", "+            }", "+        } else {", "+            DecimalFormat fmt = new DecimalFormat(\"#####\");", "+            synchronized (rand) {", "+                do {", "+                    result = new File(parent, prefix", "+                            + fmt.format(Math.abs(rand.nextInt())) + suffix);", "+                } while (result.exists());", "+            }", "+", "-    public File createTempFileName(String prefix, String suffix,", "-        File result = null;", "-        String parent = (parentDir == null) ? System", "-                .getProperty(\"java.io.tmpdir\") : parentDir.getPath();", "-", "-        DecimalFormat fmt = new DecimalFormat(\"#####\");", "-        synchronized (rand) {", "-            do {", "-                result = new File(parent, prefix", "-                        + fmt.format(Math.abs(rand.nextInt())) + suffix);", "-            } while (result.exists());", "-        }", "-        if (deleteOnExit) {", "-            result.deleteOnExit();", "-        }", "-        return result;"]}]}