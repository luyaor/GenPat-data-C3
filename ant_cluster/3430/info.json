{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d68a5c2f1095084d339775f1fc75d6e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21a9c832a33061754cf593cf8739c1f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "2cd5cfabd458ab9d92e045a32d6831f72a4e2940", "commitAfterChange": "b7443f2b77a8daeba5f4b36a14ef34d1fb7fe931", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        long savedMillis = millis;", "+", "-                new BuildException(\"Specify at least one source - a file or a fileset.\");", "+                new BuildException(\"Specify at least one source - a file or \"", "+                                   + \"a fileset.\");", "-        if (dateTime != null) {", "-            DateFormat df = DateFormat.getDateTimeInstance(DateFormat.SHORT,", "-                                                           DateFormat.SHORT,", "-                                                           Locale.US);", "-            try {", "-                setMillis(df.parse(dateTime).getTime());", "-                if (millis < 0) {", "-                    throw new BuildException(\"Date of \" + dateTime", "-                                             + \" results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\");", "+        try {", "+            if (dateTime != null) {", "+                DateFormat df = ", "+                    DateFormat.getDateTimeInstance(DateFormat.SHORT,", "+                                                   DateFormat.SHORT,", "+                                                   Locale.US);", "+                try {", "+                    setMillis(df.parse(dateTime).getTime());", "+                    if (millis < 0) {", "+                        throw new BuildException(\"Date of \" + dateTime", "+                                                 + \" results in negative \"", "+                                                 + \"milliseconds value \"", "+                                                 + \"relative to epoch \"", "+                                                 + \"(January 1, 1970, \"", "+                                                 + \"00:00:00 GMT).\");", "+                    }", "+                } catch (ParseException pe) {", "+                    throw new BuildException(pe.getMessage(), pe, location);", "-            } catch (ParseException pe) {", "-                throw new BuildException(pe.getMessage(), pe, location);", "-        }", "-        touch();", "+            touch();", "+        } finally {", "+            millis = savedMillis;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c3d853f7f909a1faf2f905a48176cfa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "af90534b7bdb9ebae1b379b7f8e8971bca89ad13", "commitAfterChange": "ab8b8ef56641361215a1e445917ac8a4345a556d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+                /*", "+                 * The initial version used DateFormat.SHORT for the", "+                 * time format, which ignores seconds.  If we want", "+                 * seconds as well, we need DateFormat.MEDIUM, which", "+                 * in turn would break all old build files.", "+                 *", "+                 * First try to parse with DateFormat.SHORT and if", "+                 * that fails with MEDIUM - throw an exception if both", "+                 * fail.", "+                 */", "-                    if (millis < 0) {", "-                        throw new BuildException(\"Date of \" + dateTime", "-                                                 + \" results in negative \"", "-                                                 + \"milliseconds value \"", "-                                                 + \"relative to epoch \"", "-                                                 + \"(January 1, 1970, \"", "-                                                 + \"00:00:00 GMT).\");", "-                    }", "-                    throw new BuildException(pe.getMessage(), pe, getLocation());", "+                    df = ", "+                        DateFormat.getDateTimeInstance(DateFormat.SHORT,", "+                                                       DateFormat.MEDIUM,", "+                                                       Locale.US);", "+                    try {", "+                        setMillis(df.parse(dateTime).getTime());", "+                    } catch (ParseException pe2) {", "+                        throw new BuildException(pe2.getMessage(), pe, ", "+                                                 getLocation());", "+                    }", "+                }", "+", "+                if (millis < 0) {", "+                    throw new BuildException(\"Date of \" + dateTime", "+                                             + \" results in negative \"", "+                                             + \"milliseconds value \"", "+                                             + \"relative to epoch \"", "+                                             + \"(January 1, 1970, \"", "+                                             + \"00:00:00 GMT).\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9382802161b59696f4abfff85b9fe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "cf2fcaff65289fb09eedaf4f3003aedb57a6aee1", "commitAfterChange": "1ddaea8055b242a63505cf20bc65708000ca5009", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute()", "diff": ["-    public void execute() throws BuildException {", "-        long savedMillis = millis;", "-", "-        if (file == null && filesets.size() == 0 && filelists.size() == 0) {", "-            throw", "-                new BuildException(\"Specify at least one source - a file, filelist or \"", "-                                   + \"a fileset.\");", "-", "-", "-        try {", "-            if (dateTime != null) {", "-                /*", "-                 * The initial version used DateFormat.SHORT for the", "-                 * time format, which ignores seconds.  If we want", "-                 * seconds as well, we need DateFormat.MEDIUM, which", "-                 * in turn would break all old build files.", "-                 *", "-                 * First try to parse with DateFormat.SHORT and if", "-                 * that fails with MEDIUM - throw an exception if both", "-                 * fail.", "-                 */", "-                DateFormat df =", "-                    DateFormat.getDateTimeInstance(DateFormat.SHORT,", "-                                                   DateFormat.SHORT,", "-                                                   Locale.US);", "-                try {", "-                    setMillis(df.parse(dateTime).getTime());", "-                } catch (ParseException pe) {", "-                    df =", "-                        DateFormat.getDateTimeInstance(DateFormat.SHORT,", "-                                                       DateFormat.MEDIUM,", "-                                                       Locale.US);", "-                        setMillis(df.parse(dateTime).getTime());", "-                    } catch (ParseException pe2) {", "-                        throw new BuildException(pe2.getMessage(), pe,", "-                                                 getLocation());", "-", "-                if (millis < 0) {", "-                    throw new BuildException(\"Date of \" + dateTime", "-                                             + \" results in negative \"", "-                                             + \"milliseconds value \"", "-                                             + \"relative to epoch \"", "-                                             + \"(January 1, 1970, \"", "-                                             + \"00:00:00 GMT).\");", "-                }", "-", "-            touch();", "-        } finally {", "-            millis = savedMillis;", "+    public void execute() {", "+        checkConfiguration();", "+        touch();", "+    }"]}]}