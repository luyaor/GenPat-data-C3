{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8d63a934d9a07149958459c8732e0e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388c19c5c8c667a245e46c8a3f2ee2e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "commitAfterChange": "f3939727d9e11188d266beed7e9dfa8e2fd0bc9a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public String fromURI(String uri)", "signatureAfterChange": "     public String fromURI(String uri)", "diff": ["-        if (!uri.startsWith(\"file:\")) {", "-            throw new IllegalArgumentException(\"Can only handle file: URIs\");", "-        }", "-        if (uri.startsWith(\"file://\")) {", "-            uri = uri.substring(7);", "-        } else {", "-            uri = uri.substring(5);", "-        }", "+        String path = Locator.fromURI(uri);", "-        uri = uri.replace('/', File.separatorChar);", "-        if (Os.isFamily(\"dos\") && uri.startsWith(\"\\\\\") && uri.length() > 2", "-            && Character.isLetter(uri.charAt(1)) && uri.charAt(2) == ':') {", "-            uri = uri.substring(1);", "-        }", "-", "-        StringBuffer sb = new StringBuffer();", "-        CharacterIterator iter = new StringCharacterIterator(uri);", "-        for (char c = iter.first(); c != CharacterIterator.DONE;", "-             c = iter.next()) {", "-            if (c == '%') {", "-                char c1 = iter.next();", "-                if (c1 != CharacterIterator.DONE) {", "-                    int i1 = Character.digit(c1, 16);", "-                    char c2 = iter.next();", "-                    if (c2 != CharacterIterator.DONE) {", "-                        int i2 = Character.digit(c2, 16);", "-                        sb.append((char) ((i1 << 4) + i2));", "-                    }", "-                }", "-            } else {", "-                sb.append(c);", "-            }", "-        }", "-", "-        String path = sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909cdb6c6fad821d1665e695890e69a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "b04c338caa73cc14ad6e8b258280426c3522de38", "commitAfterChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public static boolean isAbsolutePath(String filename)", "signatureAfterChange": "     public static boolean isAbsolutePath(String filename)", "diff": ["-        if (filename.startsWith(File.separator)) {", "-            // common for all os", "-            return true;", "+        int len = filename.length();", "+        if (len == 0) {", "+            return false;", "-        if (onDos && filename.length() >= 2", "-            && Character.isLetter(filename.charAt(0))", "-            && filename.charAt(1) == ':') {", "-            // Actually on windows the : must be followed by a \\ for", "-            // the path to be absolute, else the path is relative", "-            // to the current working directory on that drive.", "-            // (Every drive may have another current working directory)", "-            return true;", "+        char sep = File.separatorChar;", "+        filename = filename.replace('/', sep).replace('\\\\', sep);", "+        char c = filename.charAt(0);", "+        if (!(onDos || onNetWare)) {", "+            return (c == sep);", "-        return (onNetWare && filename.indexOf(\":\") > -1);", "+        if (c == sep) {", "+            if (!(onDos && len > 4 && filename.charAt(1) == sep)) {", "+                return false;", "+            }", "+            int nextsep = filename.indexOf(sep, 2);", "+            return nextsep > 2 && nextsep + 1 < len;", "+        }", "+        int colon = filename.indexOf(':');", "+        return (Character.isLetter(c) && colon == 1", "+            && filename.length() > 2 && filename.charAt(2) == sep)", "+            || (onNetWare && colon > 0);"]}]}