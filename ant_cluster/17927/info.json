{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d91c30b07538561f17b61631778a388", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d69d39d268600e93c5c457b47269c57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "affdc94099335f21a0e62be2256c9eaf16ad1e85", "commitAfterChange": "233ae85c5f835679681ece8d58a279b6bcf50550", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["-            // Print out the name of the task if we're in one", "-            if (event.getTask() != null) {", "+            if (event.getTask() != null && !emacsMode) {", "+                // Print out the name of the task if we're in one", "-", "-                if (!emacsMode) {", "-                    String label = \"[\" + name + \"] \";", "-                    int size = LEFT_COLUMN_SIZE - label.length();", "-                    for (int i = 0; i < size; i++) {", "-                        message.append(\" \");", "-                    }", "-                    message.append(label);", "+                String label = \"[\" + name + \"] \";", "+                int size = LEFT_COLUMN_SIZE - label.length();", "+                StringBuffer tmp = new StringBuffer(size);", "+                for (int i = 0; i < size; i++) {", "+                    tmp.append(\" \");", "+                tmp.append(label);", "+                label = tmp.toString();", "+", "+                StringTokenizer tok = new StringTokenizer(event.getMessage(),", "+                                                          \"\\r\\n\", false);", "+                boolean first = true;", "+                while (tok.hasMoreTokens()) {", "+                    if (!first) {", "+                        message.append(StringUtils.LINE_SEP);", "+                    }", "+                    first = false;", "+                    message.append(label);", "+                    message.append(tok.nextToken());", "+                }", "+", "+            } else {", "+                message.append(event.getMessage());", "-            message.append(event.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec13cae74c1a3ad19e97ab6ed8554b4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "6c2201f3094a0733e3e2caa7998cf260b61a3eb3", "commitAfterChange": "0f723fa82a38431c93baa7b8f102a79200b7f620", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean generateChecksums() throws BuildException", "signatureAfterChange": "     private boolean generateChecksums() throws BuildException", "diff": ["-                            fis = new FileInputStream(existingFile);", "-                            InputStreamReader isr = new InputStreamReader(fis);", "-                            BufferedReader br = new BufferedReader(isr);", "-                            String suppliedChecksum = br.readLine();", "-                            fis.close();", "-                            fis = null;", "-                            br.close();", "-                            isr.close();", "-                            checksumMatches = checksumMatches", "-                                && checksum.equals(suppliedChecksum);", "+                            try {", "+                                String suppliedChecksum = ", "+                                    readChecksum(existingFile);", "+                                checksumMatches = checksumMatches", "+                                    && checksum.equals(suppliedChecksum);", "+                            } catch (BuildException be) {", "+                                // file is on wrong format, swallow", "+                                checksumMatches = false;", "+                            }", "-                        fos.write(checksum.getBytes());", "+                        fos.write(format.format(new Object[] {", "+                                                    checksum,", "+                                                    src.getName(),", "+                                                }).getBytes());", "+                        fos.write(StringUtils.LINE_SEP.getBytes());"]}]}