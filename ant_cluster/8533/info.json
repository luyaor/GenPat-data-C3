{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "288a23b7fb04b6b91ae6a7c15a143a10", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215ac9357bdfc12099f20c140f65c2ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void startAnt(String[] args, Properties additionalUserProperties,                          ClassLoader coreLoader)", "signatureAfterChange": "     @Override \tpublic void startAnt(final String[] args, final Properties additionalUserProperties,                          final ClassLoader coreLoader)", "diff": ["-    public void startAnt(String[] args, Properties additionalUserProperties,", "-                         ClassLoader coreLoader) {", "+    @Override", "+\tpublic void startAnt(final String[] args, final Properties additionalUserProperties,", "+                         final ClassLoader coreLoader) {", "-        } catch (Throwable exc) {", "+        } catch (final Throwable exc) {", "-            for (Enumeration<?> e = additionalUserProperties.keys();", "+            for (final Enumeration<?> e = additionalUserProperties.keys();", "-                String key = (String) e.nextElement();", "-                String property = additionalUserProperties.getProperty(key);", "+                final String key = (String) e.nextElement();", "+                final String property = additionalUserProperties.getProperty(key);", "-            } catch (ExitStatusException ese) {", "+            } catch (final ExitStatusException ese) {", "-        } catch (BuildException be) {", "+        } catch (final BuildException be) {", "-        } catch (Throwable exc) {", "+        } catch (final Throwable exc) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b9826abb3e59f30f0a8c9566f3b322", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHSession.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override \tpublic void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-            for (Iterator i = localTunnels.iterator(); i.hasNext();) {", "-                LocalTunnel tunnel = (LocalTunnel) i.next();", "+            for (final Iterator i = localTunnels.iterator(); i.hasNext();) {", "+                final LocalTunnel tunnel = (LocalTunnel) i.next();", "-            for (Iterator i = remoteTunnels.iterator(); i.hasNext();) {", "-                RemoteTunnel tunnel = (RemoteTunnel) i.next();", "+            for (final Iterator i = remoteTunnels.iterator(); i.hasNext();) {", "+                final RemoteTunnel tunnel = (RemoteTunnel) i.next();", "-            for (Iterator i = nestedSequential.getNested().iterator();", "+            for (final Iterator i = nestedSequential.getNested().iterator();", "-                Task nestedTask = (Task) i.next();", "+                final Task nestedTask = (Task) i.next();", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {", "-        } catch (BuildException e) {", "+        } catch (final BuildException e) {", "-        } catch (Exception e) {", "+        } catch (final Exception e) {"]}]}