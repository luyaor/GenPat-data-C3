{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ea7640263de49efac4edfef279e510f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab8d41d4d3b727c6b33afb8276ab3eee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/NoBannerLogger.java", "commitBeforeChange": "a05aca8a79e03c1a54200d38dce8120b4d13ca4c", "commitAfterChange": "a7e2a93ee49eb3d1cdd090d3909aa115959d55b5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["-        if (null != targetName) {", "-            out.println(StringUtils.LINE_SEP + targetName + \":\");", "-            targetName = null;", "+        synchronized (this) {", "+            if (null != targetName) {", "+                out.println(StringUtils.LINE_SEP + targetName + \":\");", "+                targetName = null;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7f4c3951b39b35680ba4bdda26b5a42", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "21d2edf017bd8e7ec5f8648a9bee15e850173369", "commitAfterChange": "6ca846600896d24b4f9962fd85d579e8df8f8283", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-    public void maybeConfigure(Project p, boolean configureChildren)", "+    public synchronized void maybeConfigure(Project p, boolean configureChildren)", "-            if (child.wrappedObject instanceof Task) {", "-                Task childTask = (Task) child.wrappedObject;", "-                childTask.setRuntimeConfigurableWrapper(child);", "-            }", "-", "-            if ((child.creator != null) && configureChildren) {", "-                child.maybeConfigure(p);", "-                child.creator.store();", "-                continue;", "-            }", "-            /*", "-             * backwards compatibility - element names of nested", "-             * elements have been all lower-case in Ant, except for", "-             * tasks in TaskContainers.", "-             *", "-             * For TaskContainers, we simply skip configuration here.", "-             */", "-            String tag = child.getElementTag().toLowerCase(Locale.US);", "-            if (configureChildren && ih.supportsNestedElement(tag)) {", "-                child.maybeConfigure(p);", "-                ProjectHelper.storeChild(p, target, child.wrappedObject, tag);", "+            synchronized (child) {", "+                if (child.wrappedObject instanceof Task) {", "+                    Task childTask = (Task) child.wrappedObject;", "+                    childTask.setRuntimeConfigurableWrapper(child);", "+                }", "+                if ((child.creator != null) && configureChildren) {", "+                    child.maybeConfigure(p);", "+                    child.creator.store();", "+                    continue;", "+                }", "+                /*", "+                 * backwards compatibility - element names of nested", "+                 * elements have been all lower-case in Ant, except for", "+                 * tasks in TaskContainers.", "+                 *", "+                 * For TaskContainers, we simply skip configuration here.", "+                 */", "+                String tag = child.getElementTag().toLowerCase(Locale.US);", "+                if (configureChildren && ih.supportsNestedElement(tag)) {", "+                    child.maybeConfigure(p);", "+                    ProjectHelper.storeChild(p, target, child.wrappedObject, tag);", "+                }"]}]}