{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c5ab164af5a748067c397417c084724", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faa50f85faaa7b420544db4f45eb27d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToURLConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new URL( (String)original ); }", "+        try { return new URL( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", mue );", "+            final String message = REZ.getString( \"convert.bad-url.error\", object );", "+            throw new ConverterException( message, mue );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a421e2f4c5d1dd1544c0c9ee5ba103", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Object convert( Class destination, final Object original )         throws Exception", "signatureAfterChange": "     public Object convert( Class destination, final Object original, final Context context )         throws Exception", "diff": ["-", "-    public Object convert( Class destination, final Object original )", "+     */", "+    public Object convert( Class destination, final Object original, final Context context )", "+        //TODO: Start searching inheritance hierarchy for converter", "+        //TODO: Start caching converters instead of repeatedly instantiating em.", "-        return converter.convert( destination, original );", "+        return converter.convert( destination, original, context );"]}]}