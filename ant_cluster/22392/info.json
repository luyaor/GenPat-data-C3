{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e3cc893ba9a02e9b03b9a2a3e48f7d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82249a529edee8ee369e16b930400a71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractContainerTask.java", "commitBeforeChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "commitAfterChange": "43cbdfc52cca75f3089c7494d99b91cb9d562fc0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public void contextualize( TaskContext context )         throws TaskException", "diff": ["-    public void compose( final ComponentManager componentManager )", "-        throws ComponentException", "+     */", "+    public void contextualize( TaskContext context )", "+        throws TaskException", "-        m_configurer = (Configurer)componentManager.lookup( Configurer.ROLE );", "-        m_converter = (MasterConverter)componentManager.lookup( MasterConverter.ROLE );", "-        m_executor = (Executor)componentManager.lookup( Executor.ROLE );", "+        super.contextualize( context );", "+        m_configurer = (Configurer)getService( Configurer.class );", "+        m_converter = (MasterConverter)getService( MasterConverter.class );", "+        m_executor = (Executor)getService( Executor.class );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dd8bd56db47f810c1250c8ba42afe38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void writeCentralDirectoryEnd() throws IOException", "signatureAfterChange": "     protected void writeCentralDirectoryEnd() throws IOException", "diff": ["-        out.write(EOCD_SIG.getBytes());", "+        writeOut(EOCD_SIG.getBytes());", "-        out.write(ZERO);", "-        out.write(ZERO);", "+        writeOut(ZERO);", "+        writeOut(ZERO);", "-        out.write(num);", "-        out.write(num);", "+        writeOut(num);", "+        writeOut(num);", "-        out.write(cdLength.getBytes());", "-        out.write(cdOffset.getBytes());", "+        writeOut(cdLength.getBytes());", "+        writeOut(cdOffset.getBytes());", "-        out.write((new ZipShort(data.length)).getBytes());", "-        out.write(data);", "+        writeOut((new ZipShort(data.length)).getBytes());", "+        writeOut(data);"]}]}