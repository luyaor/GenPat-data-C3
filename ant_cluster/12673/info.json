{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c55bbd73876841702d3944ff76b86e18", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf85c97a32ae6c4e3855df0e9b423101", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "b6e535486e4b58d1ae642fa6e7ea1e3e45bc24e2", "commitAfterChange": "8a676908c40081a254a7af5955d7e2065ecffbd1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private boolean checkFile(String file)", "signatureAfterChange": "      private boolean checkFile(File f, String text)", "diff": ["-    private boolean checkFile(String file) {", "-        File filename = new File(file);", "+    private boolean checkFile(File f, String text) {", "-                if( filename.isDirectory()) {", "-                    log(\"Found directory: \" + file, Project.MSG_VERBOSE);", "+                if( f.isDirectory()) {", "+                    log(\"Found directory: \" + text, Project.MSG_VERBOSE);", "-                return filename.isDirectory();", "+                return f.isDirectory();", "-                if( filename.isFile()) {", "-                    log(\"Found file: \" + file, Project.MSG_VERBOSE);", "+                if( f.isFile()) {", "+                    log(\"Found file: \" + text, Project.MSG_VERBOSE);", "-                return filename.isFile();", "+                return f.isFile();", "-        if (filename.exists()) {", "-            log(\"Found: \" + file, Project.MSG_VERBOSE);", "+        if (f.exists()) {", "+            log(\"Found: \" + text, Project.MSG_VERBOSE);", "-        return filename.exists();", "+        return f.exists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3f521f7859b8d23f2cad866b0f40f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/util/FileUtils.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public File resolveFile(File file, String filename)          throws GeneralAntException", "signatureAfterChange": "     public File resolveFile(File file, String filename)          throws ExecutionException", "diff": ["-         throws GeneralAntException {", "-        filename = filename.replace('/', File.separatorChar)", "+         throws ExecutionException {", "+        String platformFilename = filename.replace('/', File.separatorChar)", "-        if (filename.startsWith(File.separator) ||", "-            (filename.length() >= 2 &&", "-            Character.isLetter(filename.charAt(0)) &&", "-            filename.charAt(1) == ':')", "-            ) {", "-            return normalize(filename);", "+        if (platformFilename.startsWith(File.separator) ||", "+            (platformFilename.length() >= 2 &&", "+            Character.isLetter(platformFilename.charAt(0)) &&", "+            platformFilename.charAt(1) == ':')) {", "+            return normalize(platformFilename);", "-            return new File(filename);", "+            return new File(platformFilename);", "-        StringTokenizer tok = new StringTokenizer(filename, File.separator);", "+        StringTokenizer tok ", "+            = new StringTokenizer(platformFilename, File.separator);", "-                    throw new GeneralAntException(msg);", "+                    throw new ExecutionException(msg);"]}]}