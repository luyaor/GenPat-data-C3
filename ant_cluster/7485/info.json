{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1dda8ff202c4c2d7fc55621a33a0e6c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fed3e56bce9d9c54fdf135d1074afce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "+    @Override", "+\tpublic void execute() throws BuildException {", "-        Vector savedFileSets = (Vector) filesets.clone();", "+        @SuppressWarnings(\"unchecked\")", "+\t\tfinal Vector<TarFileSet> savedFileSets = (Vector<TarFileSet>) filesets.clone();", "-                TarFileSet mainFileSet = new TarFileSet(fileset);", "+                final TarFileSet mainFileSet = new TarFileSet(fileset);", "-            for (Enumeration e = filesets.elements(); e.hasMoreElements();) {", "-                upToDate &= check((TarFileSet) e.nextElement());", "+            for(final TarFileSet tfs : filesets) {", "+            \tupToDate &= check(tfs);", "-            for (Enumeration e = resourceCollections.elements();", "-                 e.hasMoreElements();) {", "-                upToDate &= check((ResourceCollection) e.nextElement());", "+            for(final ResourceCollection rcol : resourceCollections) {", "+            \tupToDate &= check(rcol);", "-            File parent = tarFile.getParentFile();", "+            final File parent = tarFile.getParentFile();", "-                for (Enumeration e = filesets.elements();", "-                     e.hasMoreElements();) {", "-                    tar((TarFileSet) e.nextElement(), tOut);", "+                for(final TarFileSet tfs : filesets) {", "+                \ttar(tfs, tOut);", "-                for (Enumeration e = resourceCollections.elements();", "-                     e.hasMoreElements();) {", "-                    tar((ResourceCollection) e.nextElement(), tOut);", "+                for(final ResourceCollection rcol : resourceCollections) {", "+                \ttar(rcol, tOut);", "-            } catch (IOException ioe) {", "-                String msg = \"Problem creating TAR: \" + ioe.getMessage();", "+            } catch (final IOException ioe) {", "+                final String msg = \"Problem creating TAR: \" + ioe.getMessage();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee74a7a8c537abbeeeecb72d064dab5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void addPropertyNames(Set names, Hashtable properties)", "signatureAfterChange": "     private void addPropertyNames(Set<String> names, Map<String, Object> props)", "diff": ["-    private void addPropertyNames(Set names, Hashtable properties) {", "+    private void addPropertyNames(Set<String> names, Map<String, Object> props) {", "-            getRef().addPropertyNames(names, properties);", "+            getRef().addPropertyNames(names, props);", "-        for (Enumeration e = ptyRefs.elements(); e.hasMoreElements();) {", "-            PropertyRef r = (PropertyRef) e.nextElement();", "+        for (PropertyRef r : ptyRefs) {", "-                if (properties.get(r.name) != null) {", "+                if (props.get(r.name) != null) {", "-                for (Enumeration p = properties.keys(); p.hasMoreElements();) {", "-                    String name = (String) p.nextElement();", "+                for (String name : props.keySet()) {", "-                for (Enumeration p = properties.keys(); p.hasMoreElements();) {", "-                    String name = (String) p.nextElement();", "+                for (String name : props.keySet()) {", "-                    names.addAll(properties.keySet());", "+                    names.addAll(props.keySet());", "-                    names.addAll(System.getProperties().keySet());", "+                    names.addAll(getAllSystemProperties().keySet());"]}]}