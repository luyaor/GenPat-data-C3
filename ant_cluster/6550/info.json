{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0051173383f36b31e81f57a85a9a917", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eff3abf028d6984cd0c659a1f1625b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/SummaryFormatter.java", "commitBeforeChange": "4bd65dfb59acfb5d60a90f79fa73a7e561bb8239", "commitAfterChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void finished(long elapsedtime)", "signatureAfterChange": "      public void onRunEnded(TestRunEvent evt)", "diff": ["-    protected void finished(long elapsedtime) {", "-        String msg = RES.getString(\"summary.finished.msg\",", "-                new Integer(getRunCount()),", "-                new Integer(getFailureCount()),", "-                new Integer(getErrorCount()),", "-                new Long(elapsedtime / 1000));", "-        close();", "+    public void onRunEnded(TestRunEvent evt) {", "+        TestSummary summary = evt.getSummary();", "+        String msg = RES.getString(\"run.summary.msg\",", "+                new Integer(summary.runCount()),", "+                new Integer(summary.failureCount()),", "+                new Integer(summary.errorCount()),", "+                new Long(summary.elapsedTime()/1000));", "+        getWriter().println(msg);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f891d15bfeb891e986f9b795f0de0828", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void testRecreate(String firstTarget, String secondTarget)", "signatureAfterChange": "      private void testRecreate(String firstTarget, String secondTarget)", "diff": ["-        executeTarget(firstTarget);", "-        long sleeptime = 3000", "-            + FILE_UTILS.getFileTimestampGranularity();", "-        try {", "-            Thread.sleep(sleeptime);", "-        } catch (InterruptedException e) {", "-        } // end of try-catch", "+        //Move the modified date on all input back a couple of seconds rather then delay the test to achieve a similar effect", "+        FileUtilities.rollbackTimetamps(buildRule.getProject().getBaseDir(), 5);", "+", "+        buildRule.executeTarget(firstTarget);", "+", "+        //Move the modified date back a couple of seconds rather then delay the test to achieve a similar effect", "+        FileUtilities.rollbackTimetamps(buildRule.getOutputDir(), 5);", "+", "-        executeTarget(secondTarget);", "+        buildRule.executeTarget(secondTarget);"]}]}