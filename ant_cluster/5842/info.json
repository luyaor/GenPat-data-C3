{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4941a38562020f122f312216484841dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42da70fafbc3b762d07b0dddd5de2b01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testFilenameAsParamNoSetting() throws Exception", "signatureAfterChange": "      @Test     public void testFilenameAsParamNoSetting() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testFilenameAsParamNoSetting\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='-not-set-'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='-not-set-'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='-not-set-'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='-not-set-'\");", "+        buildRule.executeTarget(\"testFilenameAsParamNoSetting\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='-not-set-'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='-not-set-'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='-not-set-'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='-not-set-'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79dbe8ba9448fdd0dd257377cd149fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testFilenameAsParam() throws Exception", "signatureAfterChange": "      @Test     public void testFilenameAsParam() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testFilenameAsParam\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='two.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='three.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='-not-set-'\");", "+        buildRule.executeTarget(\"testFilenameAsParam\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='two.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='three.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='-not-set-'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6bac6f37deed7b913cf922f0070615", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testFilenameAndFiledirAsParam() throws Exception", "signatureAfterChange": "      @Test     public void testFilenameAndFiledirAsParam() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testFilenameAndFiledirAsParam\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filedir ='.'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='dir'\");", "+        buildRule.executeTarget(\"testFilenameAndFiledirAsParam\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filedir ='.'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='dir'\");"]}]}