{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5dd2185a462cfb92d07b7ab29c87d352", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df01bc261cfea9aa49ab836fe5b74ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "8d0f8b396723de1644ead635375bcff948de5958", "commitAfterChange": "73e22b9d37f72c3cf1e6a277813bdfbef2cc7a80", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "signatureAfterChange": "     protected void writeLocalFileHeader(ZipEntry ze) throws IOException", "diff": ["+        //store method in local variable to prevent multiple method calls", "+        final int zipMethod = ze.getMethod();", "+        ", "-        if (ze.getMethod() == DEFLATED && raf == null) {", "+        if (zipMethod == DEFLATED && raf == null) {", "-        writeOut(ZipShort.getBytes(ze.getMethod()));", "+        writeOut(ZipShort.getBytes(zipMethod));", "-        if (ze.getMethod() == DEFLATED || raf != null) {", "+        if (zipMethod == DEFLATED || raf != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ecc3e7105be391e5373eb6e2b848d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "8dc6be273ce30411faf2b7554dd6c82151f86c3c", "commitAfterChange": "dc060b5ab03eb8ad0b2cf933d56c645e1063188f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void messageLogged(BuildEvent event)", "signatureAfterChange": "      public void messageLogged(BuildEvent event)", "diff": ["+        int priority = event.getPriority();", "-        if (event.getPriority() <= msgOutputLevel) {", "+        if (priority <= msgOutputLevel) {", "-            if (event.getPriority() != Project.MSG_ERR) {", "-                out.println(msg);", "+            if (priority != Project.MSG_ERR) {", "+                printMessage(msg, out, priority);", "-                err.println(msg);", "+                printMessage(msg, err, priority);"]}]}