{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1e07e593bcd2962119ef0cb81ae9007", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb245a60a0dae43449c7219c2039c7d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "edb91a00f3f188521e66c6eb4bdceff72a527ae9", "commitAfterChange": "ff164b0006a8d9f5511dfc39be765d561121eea7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["-                        while ((line = in.readLine()) != null) {", "+                        TokenFilter.LineTokenizer lineTokenizer = new TokenFilter.LineTokenizer();", "+                        lineTokenizer.setIncludeDelims(true);", "+                        line = lineTokenizer.getToken(in);", "+                        while ((line) != null) {", "-                            out.newLine();", "+                            line = lineTokenizer.getToken(in);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45bdd17db9bd43899ed178a4f5aef3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "c4b1f65a6e716c0abeca09ac36399edc00d77d24", "commitAfterChange": "edb0dd9582a26bb899aa970735f93049c61d7ce7", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                        if (output instanceof FileProvider) {", "-                            os = new FileOutputStream(((FileProvider) output).getFile(), append);", "+                        FileProvider fp =", "+                            (FileProvider) output.as(FileProvider.class);", "+                        if (fp != null) {", "+                            os = new FileOutputStream(fp.getFile(), append);", "+                            // TODO use Appendable"]}]}