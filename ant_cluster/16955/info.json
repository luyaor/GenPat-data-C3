{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ab7b7c9fd6eea7bc7da3c3240db2f68", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d043fa8689979d598a229d244d9ac28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "32495c7f821164c4197b1b9ec14c28a330bbf898", "commitAfterChange": "08efe2fdd47d08fb19b76efcd91cd835001bdd19", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        // if processor wasn't specified, default it to xslp or xalan,", "+        // depending on which is in the classpath", "+        if (liaison == null) {", "+           try {", "+               setProcessor(\"xslp\");", "+           } catch (Exception e1) {", "+               try {", "+                   setProcessor(\"xalan\");", "+               } catch (Exception e2) {", "+                   throw new BuildException(e2);", "+               }", "+           }", "+        }", "+", "+\tproject.log(\"Using \"+liaison.getClass().toString(),project.MSG_VERBOSE);", "+", "-\t\tproject.log(\"Loading stylesheet \" + xslFile, project.MSG_INFO);", "-                liaison.setStylesheet( new File(baseDir,xslFile.toString()).toString() );", "+                String file = new File(baseDir,xslFile.toString()).toString();", "+\t\tproject.log(\"Loading stylesheet \" + file, project.MSG_INFO);", "+                liaison.setStylesheet( file );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7348f46816624b238b205dcadb9ecc4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ExtendSelector.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void verifySettings()", "signatureAfterChange": "     public void verifySettings()", "diff": ["+        // Creation is done here rather than in isSelected() because some", "+        // containers may do a validation pass before running isSelected(),", "+        // but we need to check for the existence of the created class.", "+        if (dynselector == null) {", "+            selectorCreate();", "+        }", "-            setError(\"Internal Error: The dynamic selector is not set\");", "+            setError(\"Internal Error: The custom selector was not created\");", "+        }", "+        else if (!(dynselector instanceof ExtendFileSelector) &&", "+                (paramVec.size() > 0)) {", "+            setError(\"Cannot set parameters on custom selector that does not \"", "+                    + \"implement ExtendFileSelector\");"]}]}