{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bca860988b42e12c5f57dbea0bb96858", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "440a9532a3a31e447e251bb443336316", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "82a46c50a78bdae63bf0b778d32c66c4ad83897e", "commitAfterChange": "9d2aa2ba1d3c21b509be909d7db2ba0d79ea5a6d", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected List getDelegateInterfaces(Delegate d)", "signatureAfterChange": "     protected Set getDelegateInterfaces(Delegate d)", "diff": ["-    protected List getDelegateInterfaces(Delegate d) {", "-        Class[] c = d.getClass().getInterfaces();", "-        ArrayList result = new ArrayList();", "-        for (int i = 0; i < c.length; i++) {", "-            if (Delegate.class.isAssignableFrom(c[i]) && !Delegate.class.equals(c[i])) {", "-                result.add(c[i]);", "+    protected Set getDelegateInterfaces(Delegate d) {", "+        HashSet result = new HashSet();", "+        Class c = d.getClass();", "+        while (c != null) {", "+            Class[] ifs = c.getInterfaces();", "+            for (int i = 0; i < ifs.length; i++) {", "+                if (Delegate.class.isAssignableFrom(ifs[i])) {", "+                    result.add(ifs[i]);", "+                }", "+            c = c.getSuperclass();", "+        result.remove(Delegate.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55065dc4a886caf9207dd683961adae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLResultAggregator.java", "commitBeforeChange": "0dbe0a8b0c5ce8ec9fbe5e3fb122cf73674308f3", "commitAfterChange": "07680bb2e3534cad36a726dba2f4cb06fd9ec683", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Element createDocument()", "signatureAfterChange": "     protected Element createDocument()", "diff": ["+            File file = files[i];", "-                log(\"Parsing file: '\" + files[i] + \"'\", Project.MSG_VERBOSE);", "-                //XXX there seems to be a bug in xerces 1.3.0 that doesn't like file object", "-                // will investigate later. It does not use the given directory but", "-                // the vm dir instead ? Works fine with crimson.", "-                Document testsuiteDoc", "-                    = builder.parse(\"file:///\" + files[i].getAbsolutePath());", "-                Element elem = testsuiteDoc.getDocumentElement();", "-                // make sure that this is REALLY a testsuite.", "-                if (TESTSUITE.equals(elem.getNodeName())) {", "-                    addTestSuite(rootElement, elem);", "-                    generatedId++;", "+                log(\"Parsing file: '\" + file + \"'\", Project.MSG_VERBOSE);", "+                if(file.length()>0) {", "+                    Document testsuiteDoc", "+                            = builder.parse(\"file:///\" + file.getAbsolutePath());", "+                    Element elem = testsuiteDoc.getDocumentElement();", "+                    // make sure that this is REALLY a testsuite.", "+                    if (TESTSUITE.equals(elem.getNodeName())) {", "+                        addTestSuite(rootElement, elem);", "+                        generatedId++;", "+                    } else {", "+                        //wrong root element name", "+                        // issue a warning.", "+                        log(\"the file \" + file", "+                                + WARNING_INVALID_ROOT_ELEMENT,", "+                                Project.MSG_WARN);", "+                    }", "-                    // issue a warning.", "-                    log(\"the file \" + files[i]", "-                        + \" is not a valid testsuite XML document\",", "-                        Project.MSG_WARN);", "+                    log(\"the file \" + file", "+                            + WARNING_EMPTY_FILE,", "+                            Project.MSG_WARN);", "-                log(\"The file \" + files[i] + \" is not a valid XML document. \"", "-                    + \"It is possibly corrupted.\", Project.MSG_WARN);", "+                log(\"The file \" + file + WARNING_IS_POSSIBLY_CORRUPTED, Project.MSG_WARN);", "-                log(\"Error while accessing file \" + files[i] + \": \"", "+                log(\"Error while accessing file \" + file + \": \""]}]}