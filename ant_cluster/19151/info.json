{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b7f92cfec9c974fff38148f13dfbf68", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6e241f7f064551dd1a4dab6f278d5b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MoveTest.java", "commitBeforeChange": "47e566b00b3b80d0ce85a4dc1f8f3371844b6fe9", "commitAfterChange": "d7d337b63d1472e49717cbab816714aa77c8f98a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testDirectoryRemoval() throws IOException", "signatureAfterChange": "     public void testDirectoryRemoval() throws IOException", "diff": ["-        assertTrue(!getProject().resolveFile(\"E/B/1\").exists());", "-        assertTrue(getProject().resolveFile(\"E/C/2\").exists());", "-        assertTrue(getProject().resolveFile(\"E/D/3\").exists());", "-        assertTrue(getProject().resolveFile(\"A/B/1\").exists());", "-        assertTrue(!getProject().resolveFile(\"A/C/2\").exists());", "-        assertTrue(!getProject().resolveFile(\"A/D/3\").exists());", "-        assertTrue(!getProject().resolveFile(\"A/C\").exists());", "-        assertTrue(!getProject().resolveFile(\"A/D\").exists());", "+        assertTrue(!new File(getOutputDir(),\"E/B/1\").exists());", "+        assertTrue(new File(getOutputDir(),\"E/C/2\").exists());", "+        assertTrue(new File(getOutputDir(),\"E/D/3\").exists());", "+        assertTrue(new File(getOutputDir(),\"A/B/1\").exists());", "+        assertTrue(!new File(getOutputDir(),\"A/C/2\").exists());", "+        assertTrue(!new File(getOutputDir(),\"A/D/3\").exists());", "+        assertTrue(!new File(getOutputDir(),\"A/C\").exists());", "+        assertTrue(!new File(getOutputDir(),\"A/D\").exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bacddf91f87a419c8be81177d9ddb387", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "b56846282e0f1e7ca72e4d157ebd4cff9cfe9b43", "commitAfterChange": "0d9a9e084149338164a2e73a28d7eea7e62722fe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testSymbolicLinkUtilsMethods() throws Exception", "signatureAfterChange": "      public void testSymbolicLinkUtilsMethods() throws Exception", "diff": ["-            java.io.File f = getProject().resolveFile(\"test-working/file1\");", "+            java.io.File f = new File(getOutputDir(), \"file1\");", "-            f = getProject().resolveFile(\"test-working/dir1\");", "+            f = new File(getOutputDir(), \"dir1\");", "-            f = getProject().resolveFile(\"test-working/file2\");", "+            f = new File(getOutputDir(), \"file2\");", "-            f = getProject().resolveFile(\"test-working/dir2\");", "+            f = new File(getOutputDir(), \"dir2\");", "-            f = getProject().resolveFile(\"test-working/file.there\");", "+            f = new File(getOutputDir(), \"file.there\");", "-            f = getProject().resolveFile(\"test-working/dir.there\");", "+            f = new File(getOutputDir(), \"dir.there\");", "-            f = getProject().resolveFile(\"test-working/file.notthere\");", "+            f = new File(getOutputDir(), \"file.notthere\");", "-            f = getProject().resolveFile(\"test-working/dir.notthere\");", "+            f = new File(getOutputDir(), \"dir.notthere\");"]}]}