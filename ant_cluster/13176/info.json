{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1f6ecffbe76556ce3cfbbf2719a7faf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1db324891bd06679ecab9b7e4758ca1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "e2e106d90bed6e7141aa85adb34eed2c8fabef7a", "commitAfterChange": "ecabb608919ac02deaa8150bb06fccd9f0e62d4f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void setupDirectoryScanner( final FileScanner ds )         throws TaskException", "signatureAfterChange": "      public boolean useDefaultExcludes()", "diff": ["-    public void setupDirectoryScanner( final FileScanner ds )", "-        throws TaskException", "-        if( null == ds )", "-        {", "-            final String message = \"ds cannot be null\";", "-            throw new IllegalArgumentException( message );", "-        }", "-        ds.setBasedir( m_dir );", "-        final int size = m_additionalPatterns.size();", "-        for( int i = 0; i < size; i++ )", "-        {", "-            final Object o = m_additionalPatterns.get( i );", "-            m_defaultPatterns.append( (PatternSet)o );", "-        }", "-", "-        final String message = \"FileSet: Setup file scanner in dir \" +", "-            m_dir + \" with \" + m_defaultPatterns;", "-        getLogger().debug( message );", "-", "-        ds.setIncludes( m_defaultPatterns.getIncludePatterns( getContext() ) );", "-        ds.setExcludes( m_defaultPatterns.getExcludePatterns( getContext() ) );", "-        if( m_useDefaultExcludes )", "-        {", "-            ds.addDefaultExcludes();", "-        }", "-        ds.setCaseSensitive( m_isCaseSensitive );", "+    public boolean useDefaultExcludes()", "+    {", "+        return m_useDefaultExcludes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38733adeef5aca3ca14045a5b57ab12", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "87118181a63b355cfc23c9333b3b9281b40a2aa2", "commitAfterChange": "8d139ecb2196ec4be450d8c824fccc3b8c15b9ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static void configure( Object target, Attributes attrs, Project project )         throws BuildException", "signatureAfterChange": "     public Vector getImportStack()", "diff": ["+     */", "+    public Vector getImportStack() {", "+        return importStack;", "+    }", "-     */", "-    public static void configure( Object target, Attributes attrs, Project project )", "-        throws BuildException", "-    {", "-        if (target instanceof TaskAdapter) {", "-            target = ((TaskAdapter) target).getProxy();", "-        }", "-", "-        IntrospectionHelper ih =", "-            IntrospectionHelper.getHelper(target.getClass());", "-", "-        // Why ???", "-        project.addBuildListener(ih);", "-", "-        for (int i = 0; i < attrs.getLength(); i++) {", "-            // reflect these into the target", "-            String attValue=attrs.getValue(i);", "-", "-            // XXX ADD SPECIAL CASE FOR ${property} - don't convert to string", "-            // and support ARRAYS.", "-            // reflect these into the target", "-            //String value = replaceProperties(attValue);", "-            String value = replaceProperties(project, attValue,", "-                                           project.getProperties());", "-            try {", "-                ih.setAttribute(project, target,", "-                                attrs.getQName(i).toLowerCase(Locale.US), value);", "-", "-            } catch (BuildException be) {", "-                // id attribute must be set externally", "-                if (!attrs.getQName(i).equals(\"id\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6edf21c4bd30e59eeb50462663091df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "e2e106d90bed6e7141aa85adb34eed2c8fabef7a", "commitAfterChange": "ecabb608919ac02deaa8150bb06fccd9f0e62d4f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void setupDirectoryScanner( final FileScanner ds )         throws TaskException", "signatureAfterChange": "      public boolean useDefaultExcludes()", "diff": ["-    public void setupDirectoryScanner( final FileScanner ds )", "-        throws TaskException", "-        if( null == ds )", "-        {", "-            final String message = \"ds cannot be null\";", "-            throw new IllegalArgumentException( message );", "-        }", "-        ds.setBasedir( m_dir );", "-        final int size = m_additionalPatterns.size();", "-        for( int i = 0; i < size; i++ )", "-        {", "-            final Object o = m_additionalPatterns.get( i );", "-            m_defaultPatterns.append( (PatternSet)o );", "-        }", "-", "-        final String message = \"FileSet: Setup file scanner in dir \" +", "-            m_dir + \" with \" + m_defaultPatterns;", "-        getLogger().debug( message );", "-", "-        ds.setIncludes( m_defaultPatterns.getIncludePatterns( getContext() ) );", "-        ds.setExcludes( m_defaultPatterns.getExcludePatterns( getContext() ) );", "-        if( m_useDefaultExcludes )", "-        {", "-            ds.addDefaultExcludes();", "-        }", "-        ds.setCaseSensitive( m_isCaseSensitive );", "+    public boolean useDefaultExcludes()", "+    {", "+        return m_useDefaultExcludes;"]}]}