{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1c5bc7d15de8ab2a3ec9ab304e76ca0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f8556bebd2d13ea9579b837b0996c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTskDeployer.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentNotFoundException, ComponentNotAccessibleException", "signatureAfterChange": "     public void compose( final ComponentManager componentManager )         throws ComponentManagerException", "diff": ["-        throws ComponentNotFoundException, ComponentNotAccessibleException", "+        throws ComponentManagerException", "-        final ConverterEngine converterEngine = taskletEngine.getConverterEngine();", "+        m_taskletRegistry = taskletEngine.getRegistry();", "+", "+        final ConverterEngine converterEngine = (ConverterEngine)componentManager.", "+            lookup( \"org.apache.ant.convert.ConverterEngine\" );", "-        m_taskletRegistry = taskletEngine.getRegistry();", "+        final DataTypeEngine dataTypeEngine = (DataTypeEngine)componentManager.", "+            lookup( \"org.apache.ant.datatypes.DataTypeEngine\" );", "-        m_dataTypeRegistry = taskletEngine.getDataTypeEngine().getRegistry();", "-    }", "+        m_dataTypeRegistry = dataTypeEngine.getRegistry();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af337bbdcc20f1fdb826da3b63d16c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarOutputStream.java", "commitBeforeChange": "ca86f16776d3ac0f57df0c8a2cde930ea1042b25", "commitAfterChange": "73d3298e62a626fe485cdff4909502598f44f765", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void putNextEntry(TarEntry entry) throws IOException", "signatureAfterChange": "     public void putNextEntry(TarEntry entry) throws IOException", "diff": ["-        final byte[] nameBytes = encoding.encode(entryName).array();", "+        final ByteBuffer encodedName = encoding.encode(entryName);", "+        final int nameLen = encodedName.limit() - encodedName.position();", "-        if (nameBytes.length >= TarConstants.NAMELEN) {", "+        if (nameLen >= TarConstants.NAMELEN) {", "-                longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL", "+                longLinkEntry.setSize(nameLen + 1); // +1 for NUL", "-                write(nameBytes);", "+                write(encodedName.array(), encodedName.arrayOffset(), nameLen);"]}]}