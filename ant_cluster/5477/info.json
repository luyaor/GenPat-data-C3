{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b1a7d8d6107edf3a6db5ca6304b95e0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e9434446b8c506648716564688ff55", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "     @Test     public void testSelectionBehaviour()", "diff": ["+    @Test", "-        try {", "-            makeBed();", "-            s = (FilenameSelector)getInstance();", "+            s = new FilenameSelector();", "-            results = selectionString(s);", "+            results = selectorRule.selectionString(s);", "-            s = (FilenameSelector)getInstance();", "+            s = new FilenameSelector();", "-            results = selectionString(s);", "+            results = selectorRule.selectionString(s);", "-            s = (FilenameSelector)getInstance();", "+            s = new FilenameSelector();", "-            results = selectionString(s);", "+            results = selectorRule.selectionString(s);", "-            s = (FilenameSelector)getInstance();", "+            s = new FilenameSelector();", "-            results = selectionString(s);", "+            results = selectorRule.selectionString(s);", "-            s = (FilenameSelector)getInstance();", "+            s = new FilenameSelector();", "-            results = selectionString(s);", "+            results = selectorRule.selectionString(s);", "-        }", "-        finally {", "-            cleanupBed();", "-        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80778ed4702ffda388a1701d9ed6c60", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/DepthSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "     @Test     public void testSelectionBehaviour()", "diff": ["+    @Test", "-        try {", "-            makeBed();", "+        s = new DepthSelector();", "+        s.setMin(20);", "+        s.setMax(25);", "+        results = selectorRule.selectionString(s);", "+        assertEquals(\"FFFFFFFFFFFF\", results);", "-            s = (DepthSelector)getInstance();", "-            s.setMin(20);", "-            s.setMax(25);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFFFF\", results);", "+        s = new DepthSelector();", "+        s.setMin(0);", "+        results = selectorRule.selectionString(s);", "+        assertEquals(\"TTTTTTTTTTTT\", results);", "-            s = (DepthSelector)getInstance();", "-            s.setMin(0);", "-            results = selectionString(s);", "-            assertEquals(\"TTTTTTTTTTTT\", results);", "+        s = new DepthSelector();", "+        s.setMin(1);", "+        results = selectorRule.selectionString(s);", "+        assertEquals(\"FFFFFTTTTTTT\", results);", "-            s = (DepthSelector)getInstance();", "-            s.setMin(1);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFTTTTTTT\", results);", "+        s = new DepthSelector();", "+        s.setMax(0);", "+        results = selectorRule.selectionString(s);", "+        assertEquals(\"TTTTTFFFFFFF\", results);", "-            s = (DepthSelector)getInstance();", "-            s.setMax(0);", "-            results = selectionString(s);", "-            assertEquals(\"TTTTTFFFFFFF\", results);", "+        s = new DepthSelector();", "+        s.setMin(1);", "+        s.setMax(1);", "+        results = selectorRule.selectionString(s);", "+        assertEquals(\"FFFFFTTTFFFT\", results);", "-            s = (DepthSelector)getInstance();", "-            s.setMin(1);", "-            s.setMax(1);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFTTTFFFT\", results);", "-", "-        }", "-        finally {", "-            cleanupBed();", "-        }"]}]}