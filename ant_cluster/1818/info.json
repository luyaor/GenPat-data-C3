{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12630176125df4d4434ce76c068c9351", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a43db2f0b57bd7e0ee3bc6a2c86ef1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "84d14bfb72b481348097d71c76c1e47253a8660c", "commitAfterChange": "1038e813e3eccdf970c5a2a82d8b0286370f4270", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-        if (attributeNames != null) {", "-            for (int i = 0; i < attributeNames.size(); i++) {", "-                String name = (String) attributeNames.get(i);", "-                String value = (String) attributeMap.get(name);", "+        if (attributeMap != null) {", "+            for (Iterator iter = attributeMap.entrySet().iterator(); iter.hasNext();) {", "+                Map.Entry entry = (Map.Entry) iter.next();", "+                String name = (String) entry.getKey();", "+                String value = (String) entry.getValue();", "-                    } else  if (getElementTag() == null) {", "+                    } else if (getElementTag() == null) {", "-                            getElementTag() +  \" doesn't support the \\\"\"", "+                            getElementTag() + \" doesn't support the \\\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff094430257642040ab660c9bb89857", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "23a58df47dca238cc3a25e99845e14584c68d686", "commitAfterChange": "7517bc70580950fd744751a673d7c9b77ca06d94", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public Hashtable getProperties()", "signatureAfterChange": "     public Hashtable getProperties()", "diff": ["-        return new Hashtable(properties);", "+        System.out.println(\"GetProperties called\");", "+        Hashtable ret = new Hashtable(properties);", "+        Map locals = threadLocalProperties.getProps();", "+        for (Iterator i = locals.entrySet().iterator(); i.hasNext();) {", "+            Map.Entry e = (Map.Entry) i.next();", "+            List l = (List) e.getValue();", "+            if (l != null && l.size() > 0) {", "+                LocalProperty p = (LocalProperty) l.get(l.size() - 1);", "+                if (p.getValue() == null) {", "+                    if (ret.get(e.getKey()) != null) {", "+                        ret.remove(e.getKey());", "+                    }", "+                } else {", "+                    ret.put(e.getKey(), p.getValue());", "+                }", "+            }", "+        }", "+        return ret;", "+"]}]}