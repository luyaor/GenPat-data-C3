{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f7d648b595ab90fcdb7055720ee0fe0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da7766abb667a1af57d068614d1d26f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "a15d6eedc866ee94cf4f47222fafee48abbecfcb", "commitAfterChange": "e9f55d77d1044dd0c21dd976b57b6787528202bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static void processNestedProperties(Project project,                                                 Object target,                                                 Element targetElement)         throws BuildException", "signatureAfterChange": "      private static void processNestedProperties(Project project,                                                 Object target,                                                 Element targetElement)         throws BuildException", "diff": ["+", "+            if (node.getNodeType() == Node.TEXT_NODE) {", "+                String text = ((Text)node).getData();", "+                try {", "+                    Method addProp = targetClass.getMethod(", "+                        \"addText\", new Class[]{\"\".getClass()});", "+                    Object child = addProp.invoke(target, new Object[] {text});", "+                } catch (NoSuchMethodException nsme) {", "+                    if (text.trim().length() > 0)", "+                        throw new BuildException(targetClass + ", "+                            \" does not support nested text elements\");", "+                } catch (InvocationTargetException ite) {", "+                    throw new BuildException(ite.getMessage());", "+                } catch (IllegalAccessException iae) {", "+                    throw new BuildException(iae.getMessage());", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b45d53b1db5e6752d4d2670a955a4ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "b3dffa5f955c1cd32b73ac3b100e648e1106de6c", "commitAfterChange": "b6ec4af9dd33b9a37fe18f1c2a043e67bdf0d67b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          public void characters(char[] buf, int start, int end) throws SAXParseException", "signatureAfterChange": "          public void characters(char[] buf, int start, int end) throws SAXParseException", "diff": ["+            IntrospectionHelper ih = ", "+                IntrospectionHelper.getHelper(task.getClass());", "+", "-                Method addProp = task.getClass().getMethod(\"addText\", new Class[]{String.class});", "-                Object child = addProp.invoke(task, new Object[] {text});", "-            } catch(NoSuchMethodException exc) {", "-                throw new SAXParseException(task.getClass() + \" does not support nested text elements\", locator);", "-            } catch(InvocationTargetException exc) {", "-                throw new SAXParseException(\"Error invoking \\\"addText\\\" method\", locator, exc);", "-            } catch(IllegalAccessException exc) {", "-                throw new SAXParseException(\"Unable to access \\\"addText\\\" method\", locator, exc);", "+                ih.addText(task, text);", "+            } catch (BuildException exc) {", "+                throw new SAXParseException(exc.getMessage(), locator, exc);"]}]}