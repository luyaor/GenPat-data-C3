{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9af0469f1174dc62b68f36d96d20820", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd9faea1e1e358b466dec5db6249fb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "commitAfterChange": "7e05b3d981ceab1b87536eed26f67d82470f1a0c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "signatureAfterChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "diff": ["+        ", "+        try {", "+            result = File.createTempFile(prefix, suffix, new File(parent));", "+        } catch (IOException e) {", "+            throw new BuildException(\"Could not create tempfile in \" + parent, e);", "+        }", "+        ", "+        if (deleteOnExit) {", "+            result.deleteOnExit();", "+        }", "+        return result;", "+    }", "-                result = new File(parent, prefix + fmt.format(Math.abs(rand.nextInt())) + suffix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "759dd9d321c9656b80c2c60e625cd803", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "commitAfterChange": "7e05b3d981ceab1b87536eed26f67d82470f1a0c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public File createTempFile(String prefix, String suffix, File parentDir,                                boolean deleteOnExit)", "signatureAfterChange": "     public File createTempFileName(String prefix, String suffix,             File parentDir, boolean deleteOnExit)", "diff": ["+     */", "+    public File createTempFileName(String prefix, String suffix,", "+            File parentDir, boolean deleteOnExit) {", "+        File result = null;", "+        String parent = (parentDir == null) ? System", "+                .getProperty(\"java.io.tmpdir\") : parentDir.getPath();", "-                result = new File(parent, prefix + fmt.format(Math.abs(rand.nextInt())) + suffix);", "+                result = new File(parent, prefix", "+                        + fmt.format(Math.abs(rand.nextInt())) + suffix);"]}]}