{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc7f5291cc406b46ee4aef6493488f24", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ec6d3349f891adf815f6dc373a77ccb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "c1a5419faf39033ffc2db1dcf8000f6a796f2dad", "commitAfterChange": "4ca5683c2a54ff4a141ed562a0f3b431b153b2c2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName)", "signatureAfterChange": "     public boolean getIncludejavaruntime()", "diff": ["+     */", "+    public boolean getIncludejavaruntime() {", "+        return includeJavaRuntime;", "-     */", "-    protected int executeExternalCompile(String[] args, int firstFileName) {", "-        String[] commandArray = null;", "-        File tmpFile = null;", "-", "-        try {", "-            /*", "-             * Many system have been reported to get into trouble with ", "-             * long command lines - no, not only Windows ;-).", "-             *", "-             * POSIX seems to define a lower limit of 4k, so use a temporary ", "-             * file if the total length of the command line exceeds this limit.", "-             */", "-            if (Commandline.toString(args).length() > 4096) {", "-                PrintWriter out = null;", "-                try {", "-                    tmpFile = new File(\"jikes\"+(new Random(System.currentTimeMillis())).nextLong());", "-                    out = new PrintWriter(new FileWriter(tmpFile));", "-                    for (int i = firstFileName; i < args.length; i++) {", "-                        out.println(args[i]);", "-                    }", "-                    out.flush();", "-                    commandArray = new String[firstFileName+1];", "-                    System.arraycopy(args, 0, commandArray, 0, firstFileName);", "-                    commandArray[firstFileName] = \"@\" + tmpFile.getAbsolutePath();", "-                } catch (IOException e) {", "-                    throw new BuildException(\"Error creating temporary file\", e, location);", "-                } finally {", "-                    if (out != null) {", "-                        try {out.close();} catch (Throwable t) {}", "-                    }", "-                }", "-            } else {", "-                commandArray = args;", "-            }", "-            ", "-            try {", "-                Execute exe = new Execute(new LogStreamHandler(this, ", "-                                                               Project.MSG_INFO,", "-                                                               Project.MSG_WARN));", "-                exe.setAntRun(project);", "-                exe.setWorkingDirectory(project.getBaseDir());", "-                exe.setCommandline(commandArray);", "-                exe.execute();", "-                return exe.getExitValue();", "-            } catch (IOException e) {", "-                throw new BuildException(\"Error running Jikes compiler\", e, location);", "-            }", "-        } finally {", "-            if (tmpFile != null) {", "-                tmpFile.delete();", "-            }", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c8ae82ecbb2e51ca972decced5f204", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "9177c5d9810a2393097bef20d8aee90b9563940e", "commitAfterChange": "6e7154321d3e95449b4a9ab838d0872384e641a0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName)", "diff": ["+        return executeExternalCompile(args, firstFileName, false);", "+    }", "-                        out.println(args[i]);"]}]}