{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d379946b81124e290c5e836fc0968bc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2326b36150bced14a2c8783d4101a07d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/ExtendedTaskdefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testRun2() throws Exception", "signatureAfterChange": "      @Test     public void testRun2() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testRun2\",", "-                \"exception thrown by the subclass\",", "-                \"executing the Foo task\");", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testRun2\");", "+    \t\tfail(\"BuildException should have been thrown\");", "+    \t} catch(BuildException ex) {", "+    \t\tassertContains(\"exception thrown by the subclass\", \"executing the Foo task\", ex.getMessage());", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e571589372ea293c56ede3cc84669f57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/ExtendedTaskdefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testRun() throws Exception", "signatureAfterChange": "      @Test     public void testRun() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testRun\",", "-                \"exception thrown by the subclass\",", "-                \"executing the Foo task\");", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testRun\");", "+    \t\tfail(\"BuildException should have been thrown\");", "+    \t} catch(BuildException ex) {", "+    \t\tassertContains(\"exception thrown by the subclass\", \"executing the Foo task\", ex.getMessage());", "+    \t}"]}]}