{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fed9f3c8355ac745e641db572f740ebb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92734dd4b0b8bb005ce2255fa0e428da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java", "commitBeforeChange": "21ac4b4b7fe3afff06da8b04554c724baf925a7c", "commitAfterChange": "a99eb8f35c6f8ca403e5b32b62f7101833a7f750", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void runItem(Server s, com.starbase.starteam.Project p, View v, Type t, Folder f, Item item)", "signatureAfterChange": " \tprotected void runItem(Server s, com.starbase.starteam.Project p, View v, Type t, Folder f, Item item)", "diff": ["-\t\t// Take the StarTeam folder name furthest down in the hierarchy.", "-\t\tdirName = dirName.substring(dirName.lastIndexOf(\"/\", dirName.length() - 2) + 1, dirName.length() - 1);", "-", "+                // Take the StarTeam folder name furthest down in the hierarchy.", "+                int endDirIndex = dirName.length();", "+                // If it ends with separator then strip it off", "+                if (dirName.endsWith(\"/\"))", "+                {", "+                    // This should be the SunOS and Linux case", "+                    endDirIndex--;", "+                }", "+\t\tdirName = dirName.substring(dirName.lastIndexOf(\"/\", dirName.length() - 2) + 1, endDirIndex);", "+                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9d9d62262b2b3518d3547bd09d4a604", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "b8d38ba0777a7b548d8ea40201da37ec594c0520", "commitAfterChange": "f688c57ce10a8ab655aae2c0ccb178f72288bcd9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "diff": ["+\tFile entryDir = null;", "+\tString innerfiles[] = null;", "+", "+\t\t// See if there are any inner classes for this class and add them in if there are", "+\t\tInnerClassFilenameFilter flt = new InnerClassFilenameFilter(entryFile.getName());", "+\t\tentryDir = entryFile.getParentFile();", "+\t\tinnerfiles = entryDir.list(flt);", "+\t\tfor (int i=0, n=innerfiles.length; i < n; i++) {", "+\t", "+\t\t\t//get and clean up innerclass name", "+\t\t\tentryName = entryName.substring(0, entryName.lastIndexOf(entryFile.getName())-1) + File.separatorChar + innerfiles[i];", "+", "+\t\t\t// link the file", "+\t\t\tentryFile = new File(srcDir, entryName);", "+", "+\t\t\tgetTask().log(\"adding innerclass file '\" + entryName + \"'\", ", "+\t\t\t\t    Project.MSG_VERBOSE);", "+", "+\t\t\taddFileToJar(jarStream,", "+                                     new FileInputStream(entryFile),", "+                                     entryName);", "+", "+\t\t}"]}]}