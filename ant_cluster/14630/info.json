{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fbb0f9d05a0b5f4f13c0b5133c38f67", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e28d39bdf0ea57c27bfc057261dbe8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/Path.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean isEmpty()         throws TaskException", "signatureAfterChange": "     public void addPath( final String[] path )", "diff": ["+     */", "+    public void addPath( final String[] path )", "+    {", "+        final FileList pathElement = new ArrayFileList( path );", "+        m_elements.add( pathElement );", "-     */", "-    public boolean isEmpty()", "-        throws TaskException", "-    {", "-        return ( list().length == 0 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da979f0b9b04a8c3c6e57a39fa6d860", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void forwardEvent(BuildEvent event)", "signatureAfterChange": "     public void fireMessageLogged(ModelElement element,                                   String message, int priority)", "diff": ["-     */", "-    public void forwardEvent(BuildEvent event) {", "-        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "-            BuildListener listener = (BuildListener)i.next();", "-", "-            listener.processBuildEvent(event);", "-        }", "-    }", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.messageLogged(event);", "+        }"]}]}