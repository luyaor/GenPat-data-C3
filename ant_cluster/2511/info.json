{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8000105072fa3c1ce9c72603c9b318a5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b874808091c03aed7ae288d225f3754", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public byte[] readRecord()         throws IOException", "signatureAfterChange": "     public byte[] readRecord()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"ReadRecord: recIdx = \" + this.currRecIdx", "-                                + \" blkIdx = \" + this.currBlkIdx );", "+            final String message = \"ReadRecord: recIdx = \" + m_currRecIdx +", "+                \" blkIdx = \" + m_currBlkIdx;", "+            debug( message );", "-        if( this.inStream == null )", "+        if( null == m_input )", "-            throw new IOException( \"reading from an output buffer\" );", "+            final String message = \"reading from an output buffer\";", "+            throw new IOException( message );", "-        if( this.currRecIdx >= this.recsPerBlock )", "+        if( m_currRecIdx >= m_recsPerBlock )", "-            if( !this.readBlock() )", "+            if( !readBlock() )", "-        byte[] result = new byte[ this.recordSize ];", "+        final byte[] result = new byte[ m_recordSize ];", "+        System.arraycopy( m_blockBuffer,", "+                          ( m_currRecIdx * m_recordSize ),", "+                          result,", "+                          0,", "+                          m_recordSize );", "-        System.arraycopy( this.blockBuffer,", "-                          ( this.currRecIdx * this.recordSize ), result, 0,", "-                          this.recordSize );", "-", "-        this.currRecIdx++;", "+        m_currRecIdx++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c435aa8f3744343c9db0c4591b737f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java", "commitBeforeChange": "2e52ff7fe8a6513567c6e466efe42896b147b081", "commitAfterChange": "1c2652d8b645425873edad54c4175bb5cb79ee2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void execute()         throws TaskException", "signatureAfterChange": "     public final void execute()         throws TaskException", "diff": ["-        if( null == m_cvsRoot )", "-        {", "-            throw new TaskException( \"cvsroot is required\" );", "-        }", "-        if( null == m_password )", "-        {", "-            throw new TaskException( \"password is required\" );", "-        }", "+        validate();", "-        getContext().debug( \"cvsRoot: \" + m_cvsRoot );", "-        getContext().debug( \"password: \" + m_password );", "-        getContext().debug( \"passFile: \" + m_passwordFile );", "+        final String key = \"cvsRoot: \";", "+        notify( \"root\", m_cvsRoot );", "+        notify( \"password\", m_password );", "+        notify( \"passFile\", m_passwordFile );", "-            getContext().debug( \"Writing -> \" + pwdfile );", "+            notify( \"write\", pwdfile );", "-        catch( IOException e )", "+        catch( final IOException ioe )", "-            throw new TaskException( \"Error\", e );", "+            throw new TaskException( ioe.toString(), ioe );", "+        }", "+    }"]}]}