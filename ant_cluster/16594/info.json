{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7249fa7035a5922a537250b882d56d7e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96db11c5688a4f7f55f703e6eb44c9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        DirectoryScanner scanner;", "-        String[] list;", "-        String[] dirs;", "+        validate();", "-        if( m_xslFile == null )", "-        {", "-            throw new TaskException( \"no stylesheet specified\" );", "-        }", "+        final FileSet fileSet = getFileSet();", "+        fileSet.setDir( m_basedir );", "+        final DirectoryScanner scanner = ScannerUtil.getDirectoryScanner( fileSet );", "-        if( m_baseDir == null )", "-        {", "-            m_baseDir = getBaseDirectory();", "-        }", "-", "-        m_liaison = getLiaison();", "-", "-        // check if liaison wants to log errors using us as logger", "-        setupLogger( m_liaison );", "-", "-        getLogger().debug( \"Using \" + m_liaison.getClass().toString() );", "-        File stylesheet = resolveFile( m_xslFile );", "+        prepareProcessor();", "-        if( m_inFile != null && m_outFile != null )", "+        if( m_in != null && m_out != null )", "-            process( m_inFile, m_outFile, stylesheet );", "+            processSingleFile( m_in, m_out );", "-        /*", "-         * if we get here, in and out have not been specified, we are", "-         * in batch processing mode.", "-         */", "-        //-- make sure Source directory exists...", "-        if( m_destDir == null )", "-        {", "-            String msg = \"destdir attributes must be set!\";", "-            throw new TaskException( msg );", "-        }", "-        scanner = getDirectoryScanner( m_baseDir );", "-        getLogger().info( \"Transforming into \" + m_destDir );", "+        final String message = \"Transforming into \" + m_destdir;", "+        getLogger().info( message );", "-        list = scanner.getIncludedFiles();", "-        for( int i = 0; i < list.length; ++i )", "-        {", "-            process( m_baseDir, list[ i ], m_destDir, stylesheet );", "-        }", "+        processFiles( scanner );", "-        dirs = scanner.getIncludedDirectories();", "-        for( int j = 0; j < dirs.length; ++j )", "+        processDirs( scanner );", "+    }", "-            list = new File( m_baseDir, dirs[ j ] ).list();", "-            for( int i = 0; i < list.length; ++i )", "-                process( m_baseDir, list[ i ], m_destDir, stylesheet );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caa51e43293a4e4edf719944fa7c5a07", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1400dc3c1b536c70697f83be990b0725121cba90", "commitAfterChange": "b5fcf10604f56a8061d10f332570342b34cc7a9d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (filesets.size() == 0) {", "+            if (filesets.size() == 0 && resourceCollections.size() == 0) {", "-                                         + \"attribute or some nested filesets.\",", "+                                         + \"attribute or some nested resource\"", "+                                         + \" collections.\",", "-                TarFileSet fs = (TarFileSet) e.nextElement();", "-                String[] files = fs.getFiles(getProject());", "-", "-                if (!archiveIsUpToDate(files, fs.getDir(getProject()))) {", "-                    upToDate = false;", "-                }", "-", "-                for (int i = 0; i < files.length; ++i) {", "-                    if (tarFile.equals(new File(fs.getDir(getProject()),", "-                                                files[i]))) {", "-                        throw new BuildException(\"A tar file cannot include \"", "-                                                 + \"itself\", getLocation());", "-                    }", "-                }", "+                upToDate &= check((TarFileSet) e.nextElement());", "+            }", "+            for (Enumeration e = resourceCollections.elements();", "+                 e.hasMoreElements();) {", "+                upToDate &= check((ResourceCollection) e.nextElement());", "-                    TarFileSet fs = (TarFileSet) e.nextElement();", "-                    String[] files = fs.getFiles(getProject());", "-                    if (files.length > 1 && fs.getFullpath().length() > 0) {", "-                        throw new BuildException(\"fullpath attribute may only \"", "-                                                 + \"be specified for \"", "-                                                 + \"filesets that specify a \"", "-                                                 + \"single file.\");", "-                    }", "-                    for (int i = 0; i < files.length; i++) {", "-                        File f = new File(fs.getDir(getProject()), files[i]);", "-                        String name = files[i].replace(File.separatorChar, '/');", "-                        tarFile(f, tOut, name, fs);", "-                    }", "+                    tar((TarFileSet) e.nextElement(), tOut);", "+                }", "+                for (Enumeration e = resourceCollections.elements();", "+                     e.hasMoreElements();) {", "+                    tar((ResourceCollection) e.nextElement(), tOut);"]}]}