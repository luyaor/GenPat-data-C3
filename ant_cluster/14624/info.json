{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3967df9226648fc8f53c5cab620d0486", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d48c63c903ab7b7cdc99961a2095aa2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/edit/DependentTargetChooser.java", "commitBeforeChange": "2ff201801b557593afe6cf9dcd4d4c4f4da65b39", "commitAfterChange": "cfa93603e73e635d31be01cdb31dc9959a5ea35c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean checkDepends(String name, ACSTargetElement aTarget)", "signatureAfterChange": "         public void preselectTargets(String[] targetNames)", "diff": ["-    private boolean checkDepends(String name, ACSTargetElement aTarget) {", "-        String[] depend = aTarget.getDepends();", "-        for( int i= 0; i < depend.length; i++) {", "-            if (name.equalsIgnoreCase(depend[i])) return true;", "-        return false;", "+         */", "+        public void preselectTargets(String[] targetNames) {", "+            int i = 0, j = 0;", "+            int iDim = getRowCount();", "+            int jDim = targetNames.length;", "+            for (i = 0; i < iDim; i++) {", "+                String name = getTarget(i).getName();", "+                for( j= 0; j < jDim; j++) {", "+                    if (name.equalsIgnoreCase(targetNames[j])) _selected[i] = true;", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d839e11921b0005a4ce1a3733fa4a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "f4f7024234069cab8a6853720a326d12065a2d8e", "commitAfterChange": "c28fbe7d76ca748c52b9b935c815ddfe92f7c1cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "-        // Process all the directoried marked for styling", "-        dirs = scanner.getIncludedDirectories();", "-        for (int j = 0;j < dirs.length;++j){", "-            list=new File(baseDir,dirs[j]).list();", "-            for (int i = 0;i < list.length;++i) {", "-                process( baseDir, list[i], destDir, stylesheet );", "+        if (performDirectoryScan) {", "+            // Process all the directories marked for styling", "+            dirs = scanner.getIncludedDirectories();", "+            for (int j = 0;j < dirs.length;++j){", "+                list=new File(baseDir,dirs[j]).list();", "+                for (int i = 0;i < list.length;++i) {", "+                    process( baseDir, list[i], destDir, stylesheet );", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c1297d6bc3d4ac24e69c47eb8e5d95", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Deltree.java", "commitBeforeChange": "e3dd337f59b2ee14ac818fdb89e2229e1b3922f5", "commitAfterChange": "617c63c012e9ef8420dfa1de8d2ecdcabb67e74a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          private void removeDir(File dir) throws IOException", "signatureAfterChange": "          private void removeDir(File dir) throws IOException", "diff": ["-        ", "-        if (dir.getCanonicalPath().equals(dir.getAbsolutePath())) {", "-            String[] list = dir.list();", "-            for (int i = 0; i < list.length; i++) {", "-                String s = list[i];", "-                File f = new File(dir, s);", "-                if (f.isDirectory()) {", "-                    removeDir(f);", "-                } else {", "-                    f.delete();", "-                }", "-            }", "-        }", "+\t", "+\t//        if (dir.getCanonicalPath().equals(dir.getAbsolutePath())) {", "+\t// (costin) It will not work if /home/costin is symlink to /da0/home/costin ( taz", "+\t// for example )", "+\tString[] list = dir.list();", "+\tfor (int i = 0; i < list.length; i++) {", "+\t    String s = list[i];", "+\t    File f = new File(dir, s);", "+\t    if (f.isDirectory()) {", "+\t\tremoveDir(f);", "+\t    } else {", "+\t\tf.delete();", "+\t    }", "+\t}", "+\t    //        }"]}]}