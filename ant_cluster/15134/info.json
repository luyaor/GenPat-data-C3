{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddada70a97fec22eaa6eb3815956b004", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701807c8a55f7c9e3b90bd179953c57d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XalanExecutor.java", "commitBeforeChange": "bec4aaee40fa710108d2e449fbd1c9115ef5c910", "commitAfterChange": "4ee134e627d8f0a8d0102cfe0a6cc40fc018b6e0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static XalanExecutor newInstance(AggregateTransformer caller) throws BuildException", "signatureAfterChange": "     static XalanExecutor newInstance(AggregateTransformer caller) throws BuildException", "diff": ["+            StringWriter swr = new StringWriter();", "+            xalan2missing.printStackTrace(new PrintWriter(swr));", "+            caller.task.log(\"Didn't find Xalan2.\", Project.MSG_DEBUG);", "+            caller.task.log(swr.toString(), Project.MSG_DEBUG);", "-                throw new BuildException(\"Could not find xalan2 nor xalan1 in the classpath. Check http://xml.apache.org/xalan-j/\");", "+                swr = new StringWriter();", "+                xalan1missing.printStackTrace(new PrintWriter(swr));", "+                caller.task.log(\"Didn't find Xalan1.\", Project.MSG_DEBUG);", "+                caller.task.log(swr.toString(), Project.MSG_DEBUG);", "+                throw new BuildException(\"Could not find xalan2 nor xalan1 in the classpath. Check http://xml.apache.org/xalan-j\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776cbc8c926cda0a676da7be20f69c88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Cvs.java", "commitBeforeChange": "2720eb209524a8fe87d6122726d9fb1048ce204b", "commitAfterChange": "f7fdd6f367071bd1c9ea39ccbdc71554f40cc8f2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public void execute() throws BuildException", "signatureAfterChange": "       public void execute() throws BuildException", "diff": ["+        Environment env = new Environment();", "+", "+        if(port>0){", "+            Environment.Variable var = new Environment.Variable();", "+            var.setKey(\"CVS_CLIENT_PORT\");", "+            var.setValue(String.valueOf(port));", "+            env.addVariable(var);", "+        }", "+", "+        if(passFile!=null){", "+            Environment.Variable var = new Environment.Variable();", "+            var.setKey(\"CVS_PASSFILE\");", "+            var.setValue(String.valueOf(passFile));", "+            env.addVariable(var);", "+        }", "+", "+        exe.setEnvironment(env.getVariables());"]}]}