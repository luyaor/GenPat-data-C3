{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a43858623b44dd9fcc69f744ba35c00", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f369ee16ba3ed26670c6107b221c89a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testNonExistentEntry()", "signatureAfterChange": "      public void testNonExistentEntry()", "diff": ["-        DTDLocation dtd = new DTDLocation();", "+        ResourceLocation dtd = new ResourceLocation();", "-            assertNull(\"Nonexistent Catalog entry should not be returned\", result);", "+            String expected = toURLString(new File(project.getBaseDir().toURL() +", "+                                                   \"/i/dont/exist.dtd\"));", "+            String resultStr = new URL(((SAXSource)result).getInputSource().getSystemId()).getFile();", "+            assertTrue(\"Nonexistent Catalog entry return input\",", "+                       expected.endsWith(resultStr));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b308ed9980a87a590c69132cbdbe0cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testClasspath()", "signatureAfterChange": "      public void testClasspath()", "diff": ["-        DTDLocation dtd = new DTDLocation();", "+        ResourceLocation dtd = new ResourceLocation();", "-        DTDLocation entity = new DTDLocation();", "+        ResourceLocation entity = new ResourceLocation();", "-            assertEquals(toURLString(dtdFile),", "-                         result.getSystemId());", "+            String resultStr = new URL(result.getSystemId()).getFile();", "+            assertTrue(toURLString(dtdFile).endsWith(resultStr));", "-            assertEquals(toURLString(xmlFile),", "-                         result.getSystemId());", "+            String resultStr = new URL(result.getSystemId()).getFile();", "+            assertTrue(toURLString(xmlFile).endsWith(resultStr));"]}]}