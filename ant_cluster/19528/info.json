{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d63c1c181af3f4b63b6a5fe770a09f8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1931987459f4db1f3a198c917f5ea1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/CVSPass.java", "commitBeforeChange": "08535a06a25538edd320122b847d546ef085203d", "commitAfterChange": "2b6f0a872003b2f6dcc4ffd4f83fae9fd9cfb362", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public CVSPass()", "signatureAfterChange": "      public CVSPass()", "diff": ["-        // Create lookup for password mangling", "-        c[32]='r'; c[33]='x'; c[34]='5'; c[35]='O'; c[37]='m';", "-        c[38]='H'; c[39]='l'; c[40]='F'; c[42]='L'; c[43]='C';", "-        c[44]='t'; c[45]='J'; c[46]='D'; c[47]='W'; c[48]='o';", "-        c[49]='4'; c[50]='K'; c[51]='w'; c[52]='1'; c[53]='\"';", "-        c[54]='R'; c[55]='Q'; c[56]='_'; c[57]='A'; c[58]='p';", "-        c[59]='V'; c[60]='v'; c[61]='n'; c[62]='z'; c[63]='i';", "-        c[64]=')'; c[65]='9'; c[66]='S'; c[67]='+'; c[68]='.';", "-        c[69]='f'; c[70]='('; c[71]='Y'; c[72]='&'; c[73]='g';", "-        c[74]='-'; c[75]='2'; c[76]='*'; c[81]='7'; c[82]='6';", "-        c[83]='B'; c[86]=';'; c[87]='/'; c[89]='G'; c[90]='s';", "-        c[91]='N'; c[92]='X'; c[93]='k'; c[94]='j'; c[95]='%';", "-        c[97]='y'; c[98]='u'; c[99]='h'; c[100]='e'; c[101]='d';", "-        c[102]='E'; c[103]='I'; c[104]='c'; c[105]='?'; c[108]='\\'';", "-        c[109]='%'; c[110]='='; c[111]='0'; c[112]=':'; c[113]='q';", "-        c[115]='Z'; c[116]=','; c[117]='b'; c[118]='<'; c[119]='3';", "-        c[120]='!'; c[121]='a'; c[122]='>'; c[123]='M'; c[124]='T';", "-        c[125]='P'; c[126]='U';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7a45a287ca7b32702156d5b70039e4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/DependSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void testSelectionBehaviour()", "signatureAfterChange": "      @Test     public void testSelectionNoMapper()", "diff": ["-     */", "-    public void testSelectionBehaviour() {", "-        DependSelector s;", "-        String results;", "-        File subdir;", "-        Mapper m;", "-        Mapper.MapperType glob = new Mapper.MapperType();", "-        glob.setValue(\"glob\");", "-        try {", "-            makeBed();", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFFFF\", results);", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            m = s.createMapper();", "-            m.setType(identity);", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFFFF\", results);", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            m = s.createMapper();", "-            m.setType(merge);", "-            m.setTo(\"asf-logo.gif.gz\");", "-            results = selectionString(s);", "-            assertEquals(\"TFFFFTTTFFF\", results.substring(0,11));", "-            s = (DependSelector)getInstance();", "-            s.setTargetdir(beddir);", "-            m = s.createMapper();", "-            m.setType(merge);", "-            m.setTo(\"asf-logo.gif.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"TTFTTTTTTTTT\", results);", "-            // Test for path relative to project base directory", "-            s = (DependSelector)getInstance();", "-            subdir = new File(\"selectortest/tar/bz2\");", "-            s.setTargetdir(subdir);", "-            m = s.createMapper();", "-            m.setType(glob);", "-            m.setFrom(\"*.bz2\");", "-            m.setTo(\"*.tar.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"FFTFFFFFFTTF\", results);", "-            s = (DependSelector)getInstance();", "-            subdir = new File(beddir,\"tar/bz2\");", "-            s.setTargetdir(subdir);", "-            m = s.createMapper();", "-            m.setType(glob);", "-            m.setFrom(\"*.bz2\");", "-            m.setTo(\"*.tar.bz2\");", "-            results = selectionString(s);", "-            assertEquals(\"FFFFFFFFFTTF\", results);", "-            try {", "-                makeMirror();", "-                s = (DependSelector)getInstance();", "-                File testdir = new File(getOutputDir(), \"selectortest2\");", "-                s.setTargetdir(testdir);", "-                results = selectionString(s);", "-                assertEquals(\"FFFTTFFFFFFF\", results);", "-                s = (DependSelector)getInstance();", "-                testdir = new File(getOutputDir(), \"selectortest2/tar/bz2\");", "-                s.setTargetdir(testdir);", "-                m = s.createMapper();", "-                m.setType(glob);", "-                m.setFrom(\"*.bz2\");", "-                m.setTo(\"*.tar.bz2\");", "-                results = mirrorSelectionString(s);", "-                assertEquals(\"FFFFFFFFFTTF\", results);", "-                results = selectionString(s);", "-                assertEquals(\"FFFFFFFFFTTF\", results);", "-            }", "-            finally {", "-                cleanupMirror();", "-            }", "-        }", "-        finally {", "-            cleanupBed();", "-        }", "+", "+    @Test", "+    public void testSelectionNoMapper() {", "+        DependSelector s = new DependSelector();", "+        s.setTargetdir(new File(selectorRule.getOutputDir(), \"selectortest2\"));", "+        String results = selectorRule.selectionString(s);", "+        assertEquals(\"FFFTTFFFFFFF\", results);", "+    }"]}]}