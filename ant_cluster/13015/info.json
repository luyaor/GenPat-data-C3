{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4b3f58de462486717d8c4d31571ee7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11125b1428d1931f1259f9feeeadf393", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws BuildException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "+            throw new TaskException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "-            fileUtils.getParentFile( src ) );", "+                                              fileUtils.getParentFile( src ) );", "-                 : new InputStreamReader( new FileInputStream( src ), encoding );", "+                : new InputStreamReader( new FileInputStream( src ), encoding );", "-                 : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "-            int fileLengthInBytes = ( int )( src.length() );", "+            int fileLengthInBytes = (int)( src.length() );", "-                tmpBuf.append( ( char )readChar );", "+                tmpBuf.append( (char)readChar );", "-            throw new BuildException( \"IOException in \" + src + \" - \" +", "-                ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "+            throw new TaskException( \"IOException in \" + src + \" - \" +", "+                                     ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc5a0ef8ba937afdaf49412dc76df76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws BuildException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "+            throw new TaskException( \"Replace: source file \" + src.getPath() + \" doesn't exist\" );", "-            fileUtils.getParentFile( src ) );", "+                                              fileUtils.getParentFile( src ) );", "-                 : new InputStreamReader( new FileInputStream( src ), encoding );", "+                : new InputStreamReader( new FileInputStream( src ), encoding );", "-                 : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "-            int fileLengthInBytes = ( int )( src.length() );", "+            int fileLengthInBytes = (int)( src.length() );", "-                tmpBuf.append( ( char )readChar );", "+                tmpBuf.append( (char)readChar );", "-            throw new BuildException( \"IOException in \" + src + \" - \" +", "-                ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "+            throw new TaskException( \"IOException in \" + src + \" - \" +", "+                                     ioe.getClass().getName() + \":\" + ioe.getMessage(), ioe );", "-                {}", "+                {", "+                }", "-                {}", "+                {", "+                }"]}]}