{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "276ccef9fd2699f8b7636e65ab596ad5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df66c706d45ee4ce097015a107ecd3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "111d76453a147727fb73d6b2b438c82f11218c92", "commitAfterChange": "5c5b959ca73e40af4f23b845579bbb7fa5e73bb3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "diff": ["-        if (!filtering) {", "-            // ensure that parent dir of dest file exists!", "-            // not using getParentFile method to stay 1.1 compat", "-            String parentPath = destFile.getParent();", "-            if (parentPath != null) {", "-                File parent = new File(parentPath);", "-                if (!parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-            }", "-", "-            if (destFile.exists()) {", "-                if (!destFile.delete()) {", "-                    throw new BuildException(\"Unable to remove existing file \"", "-                                             + destFile);", "-                }", "-            }", "-            renamed = sourceFile.renameTo(destFile);", "-        } else {", "+        if (filterSets != null && filterSets.size() > 0) {", "+        } else {", "+            if (!filtering) {", "+                // ensure that parent dir of dest file exists!", "+                // not using getParentFile method to stay 1.1 compat", "+                String parentPath = destFile.getParent();", "+                if (parentPath != null) {", "+                    File parent = new File(parentPath);", "+                    if (!parent.exists()) {", "+                        parent.mkdirs();", "+                    }", "+                }", "+", "+                if (destFile.exists()) {", "+                    if (!destFile.delete()) {", "+                        throw new BuildException(\"Unable to remove existing file \"", "+                                                 + destFile);", "+                    }", "+                }", "+                renamed = sourceFile.renameTo(destFile);", "+            } else {", "+                renamed = false;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "683e5ed69f4aef805ed2a26871ec8dd1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "55ed11a225d2a2c7d2cc28a6b07d425a79d3b91a", "commitAfterChange": "c2e92b31856632faa104d9d1a93c7e1480aa8b92", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void readFiles(Project p)", "signatureAfterChange": "     private void readFiles(Project p)", "diff": ["-        if (incl != null) {", "-            readPatterns(incl, includeList, p);", "-            incl = null;", "+        if (includesFileList.size() > 0) {", "+            Enumeration e = includesFileList.elements();", "+            while (e.hasMoreElements()) {", "+            \tNameEntry ne = (NameEntry)e.nextElement();", "+            \tString fileName = ne.evalName(p);", "+            \tif (fileName != null) {", "+                    File inclFile = p.resolveFile(fileName);", "+                    if (!inclFile.exists())", "+                        throw new BuildException(\"Includesfile \"", "+                                                 + inclFile.getAbsolutePath()", "+                                                 + \" not found.\");", "+                    readPatterns(inclFile, includeList, p);", "+            \t}", "+            }", "+            includesFileList.clear();", "-        if (excl != null) {", "-            readPatterns(excl, excludeList, p);", "-            excl = null;", "-        }", "-    }", "+        if (excludesFileList.size() > 0) {", "+            Enumeration e = includesFileList.elements();", "+            while (e.hasMoreElements()) {", "+            \tNameEntry ne = (NameEntry)e.nextElement();", "+            \tString fileName = ne.evalName(p);", "+            \tif (fileName != null) {", "+                    File exclFile = p.resolveFile(fileName);", "+                    if (!exclFile.exists())", "+                        throw new BuildException(\"Excludesfile \"", "+                                                 + exclFile.getAbsolutePath()", "+                                                 + \" not found.\");", "+                    readPatterns(exclFile, excludeList, p);", "+            \t}", "+            }", "+            excludesFileList.clear();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b15d002f9fc32ee571555c22bb010a20", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "adb161cdc40c45f6f563cdd7816973bc91a75178", "commitAfterChange": "39a4da86733bb32057e0bacac1c73895717f6181", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "diff": ["-        boolean renamed = false;", "-        if ((getFilterSets().size() + getFilterChains().size() == 0)", "-                && !(filtering || destFile.isDirectory())) {", "-            // ensure that parent dir of dest file exists!", "-            File parent = destFile.getParentFile();", "-            if (parent != null && !parent.exists()) {", "-                parent.mkdirs();", "-            }", "-            if (destFile.isFile() && !getFileUtils().fileNameEquals(sourceFile, destFile)", "-                    && !destFile.delete()) {", "-                throw new BuildException(\"Unable to remove existing \" + \"file \" + destFile);", "-            }", "-            renamed = sourceFile.renameTo(destFile);", "+        if (destFile.isDirectory() || filtering || getFilterSets().size() > 0", "+                || getFilterChains().size() > 0) {", "+            return false;", "-        return renamed;", "+        // ensure that parent dir of dest file exists!", "+        File parent = destFile.getParentFile();", "+        if (parent != null && !parent.exists()) {", "+            parent.mkdirs();", "+        } else if (destFile.isFile() && !getFileUtils().fileNameEquals(sourceFile, destFile)", "+                && !destFile.delete()) {", "+            throw new BuildException(\"Unable to remove existing file \" + destFile);", "+        }", "+        return sourceFile.renameTo(destFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85d3e340d53d3d4f53241404e6fad80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "030ac58e280b9267ca8ea709bd846443059a0205", "commitAfterChange": "e074b294911e39877ee9a480e44979f16b9a4882", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     protected void createParents(FTPClient ftp, String filename)          throws IOException, BuildException", "signatureAfterChange": "     protected void createParents(FTPClient ftp, String filename)          throws IOException, BuildException", "diff": ["+", "+        String cwd = ftp.printWorkingDirectory();", "+        ", "-        for (int i = parents.size() - 1; i >= 0; i--) {", "+        // find first non cached dir", "+        int i = parents.size() - 1;", "+        while (i >= 0) {", "-                log(\"creating remote directory \" + resolveFile(dir.getPath()),", "-                    Project.MSG_VERBOSE);", "-                if(!ftp.makeDirectory(resolveFile(dir.getPath()))) {", "-                    handleMkDirFailure(ftp);", "+                break;", "+            }", "+            i--;", "+        }", "+                ", "+        if (i >= 0) {", "+            String parent = dir.getParent();", "+            if (parent != null) {", "+                if (!ftp.changeWorkingDirectory(parent)) {", "+                    throw new BuildException(\"could not change to \" ", "+                        + \"directory: \" + ftp.getReplyString());", "+                }", "+            }", "+            ", "+            while (i >= 0) {", "+                dir = (File) parents.elementAt(i--);", "+                // check if dir exists by trying to change into it.", "+                if (!ftp.changeWorkingDirectory(dir.getName())) {", "+                    // could not change to it - try to create it", "+                    log(\"creating remote directory \" ", "+                        + resolveFile(dir.getPath()), Project.MSG_VERBOSE);", "+                    if(!ftp.makeDirectory(dir.getName())) {", "+                        handleMkDirFailure(ftp);", "+                    }", "+                    if (!ftp.changeWorkingDirectory(dir.getName())) {", "+                        throw new BuildException(\"could not change to \" ", "+                            + \"directory: \" + ftp.getReplyString());", "+                    }", "+            ftp.changeWorkingDirectory(cwd);            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc9c1bd4f5442a862b4191d086911b2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "dd59f330e28468c67b69a1d4e352f4e5bafcb27f", "commitAfterChange": "a5a1cf23953be08f91c28840a830e295eb7b171c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile,                                  boolean filtering, boolean overwrite)         throws IOException, BuildException", "diff": ["-        boolean renamed = true;", "-        if ((getFilterSets() != null && getFilterSets().size() > 0)", "-            || (getFilterChains() != null && getFilterChains().size() > 0)) {", "-            renamed = false;", "-        } else {", "-            if (!filtering) {", "-                // ensure that parent dir of dest file exists!", "-                File parent = destFile.getParentFile();", "-                if (parent != null && !parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-", "-                if (destFile.exists()) {", "-                    if (sourceFile.isDirectory()) {", "-                     throw new BuildException(", "-                        new StringBuffer(\"Cannot replace \").append(", "-                        ((destFile.isFile()) ? \"file \" : \"directory \")).append(", "-                        destFile).append(\" with directory \").append(", "-                        sourceFile).toString());", "-                    } else if (destFile.isFile() && !destFile.delete()) {", "-                        throw new BuildException(\"Unable to remove existing \"", "-                                                 + \"file \" + destFile);", "-                    }", "-                }", "-                renamed = sourceFile.renameTo(destFile);", "-            } else {", "-                renamed = false;", "+        boolean renamed = false;", "+        if ((getFilterSets().size() + getFilterChains().size() == 0)", "+            && !(filtering || destFile.isDirectory())) {", "+            // ensure that parent dir of dest file exists!", "+            File parent = destFile.getParentFile();", "+            if (parent != null && !parent.exists()) {", "+                parent.mkdirs();", "+            if (destFile.isFile() && !destFile.delete()) {", "+                throw new BuildException(\"Unable to remove existing \"", "+                                         + \"file \" + destFile);", "+            }", "+            renamed = sourceFile.renameTo(destFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bb3191b391363a3f4b5c83c8fa6cca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "8741512d8c2e4cad30f0c6e6134d9a793f00d4b7", "commitAfterChange": "9ae5d99ebe852fbb42a386b4c4969bb974e4d107", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified, boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified, boolean append,                             String inputEncoding, String outputEncoding,                             Project project)         throws IOException", "diff": ["+        } else if (source.as(FileProvider.class) != null", "+                   && dest.as(FileProvider.class) != null) {", "+            File sourceFile =", "+                ((FileProvider) source.as(FileProvider.class)).getFile();", "+            File destFile =", "+                ((FileProvider) dest.as(FileProvider.class)).getFile();", "+", "+            File parent = destFile.getParentFile();", "+            if (parent != null && !parent.isDirectory()", "+                && !destFile.getParentFile().mkdirs()) {", "+                throw new IOException(\"failed to create the parent directory\"", "+                                      + \" for \" + destFile);", "+            }", "+", "+            FileInputStream in = null;", "+            FileOutputStream out = null;", "+            FileChannel srcChannel = null;", "+            FileChannel destChannel = null;", "+", "+            try {", "+                in = new FileInputStream(sourceFile);", "+                out = new FileOutputStream(destFile);", "+                    ", "+                srcChannel = in.getChannel();", "+                destChannel = out.getChannel();", "+                ", "+                long position = 0;", "+                long count = srcChannel.size();", "+                while (position < count) {", "+                    position +=", "+                        srcChannel.transferTo(position, FileUtils.BUF_SIZE,", "+                                              destChannel);", "+                }", "+            } finally {", "+                FileUtils.close(srcChannel);", "+                FileUtils.close(destChannel);", "+                FileUtils.close(out);", "+                FileUtils.close(in);", "+            }"]}]}