{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b495a2d2b4ed4ec860018a44c79bf184", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d0e85ed18ec1ad4f37727f42e9e312", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testCustomMapper() throws Exception", "signatureAfterChange": "      @Test     public void testCustomMapper() throws Exception", "diff": ["+    @Test", "-        assertTrue(!new File(getOutputDir().getAbsoluteFile(),  \"out.xml\").exists());", "+        assertTrue(!new File(buildRule.getOutputDir().getAbsoluteFile(),  \"out.xml\").exists());", "-                           getOutputDir().getAbsoluteFile() + \"/out.xml\",", "+                           buildRule.getOutputDir().getAbsoluteFile() + \"/out.xml\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b07785efb5eab811971689d704ae6ad4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testTypedMapper() throws Exception", "signatureAfterChange": "      @Test     public void testTypedMapper() throws Exception", "diff": ["+    @Test", "-        assertTrue(!new File(getOutputDir().getAbsoluteFile(),  \"out.xml\").exists());", "+        assertTrue(!new File(buildRule.getOutputDir().getAbsoluteFile(),  \"out.xml\").exists());", "-                           getOutputDir().getAbsoluteFile() + \"/out.xml\",", "+                           buildRule.getOutputDir().getAbsoluteFile() + \"/out.xml\","]}]}