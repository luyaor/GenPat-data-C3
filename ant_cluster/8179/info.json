{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a82df8553fe96181eceb600432f2ab84", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e0f6c4a0dc91da221c31c8ce9799d79", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void scan() throws IllegalStateException", "signatureAfterChange": "     public synchronized void scan() throws IllegalStateException", "diff": ["-        included = new Vector();", "+        included = new Vector<String>();", "-            Class analyzerClass = Class.forName(analyzerClassName);", "-            analyzer = (DependencyAnalyzer) analyzerClass.newInstance();", "+            Class<? extends DependencyAnalyzer> analyzerClass = Class.forName(analyzerClassName)", "+                    .asSubclass(DependencyAnalyzer.class);", "+            analyzer = analyzerClass.newInstance();", "-        for (Enumeration e = additionalBaseDirs.elements(); e.hasMoreElements();) {", "-            File additionalBaseDir = (File) e.nextElement();", "+        for (Enumeration<File> e = additionalBaseDirs.elements(); e.hasMoreElements();) {", "+            File additionalBaseDir = e.nextElement();", "-        for (Enumeration e = rootClasses.elements(); e.hasMoreElements();) {", "-            String rootClass = (String) e.nextElement();", "+        for (Enumeration<String> e = rootClasses.elements(); e.hasMoreElements();) {", "+            String rootClass = e.nextElement();", "-        Enumeration e = analyzer.getClassDependencies();", "+        Enumeration<String> e = analyzer.getClassDependencies();", "-        Hashtable parentSet = new Hashtable();", "+        Hashtable<String, String> parentSet = new Hashtable<String, String>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1eca1a4a71b37c93ebe91da27ffe98f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "261050f72e9a86e4249c9ee91495ec796f3c382b", "commitAfterChange": "e5f3393251f3b7b8b8df1e5300559828bc73d8f0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized void setAttribute(String name, String value)", "signatureAfterChange": "     public synchronized void setAttribute(String name, Object value)", "diff": ["+     */", "+    public synchronized void setAttribute(String name, Object value) {", "-            this.polyType = value;", "+            this.polyType = value == null ? null : value.toString();", "-                attributeMap = new LinkedHashMap();", "+                attributeMap = new LinkedHashMap<String, Object>();", "-                LinkedHashMap newAttributeMap = new LinkedHashMap();", "+                LinkedHashMap<String, Object> newAttributeMap = new LinkedHashMap<String, Object>();", "-                this.id = value;", "+                this.id = value == null ? null : value.toString();"]}]}