{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1dfd08c05a14311971525443636cfbe", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a2631faaebc304799dc3de78a4843ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testReplaceString() throws IOException", "signatureAfterChange": "      @Test     public void testReplaceString() throws IOException", "diff": ["+    @Test", "-        expectFileContains(", "-            \"replacestring\", getProject().getProperty(\"output\") + \"/replacestring\",", "-            \"this is the moon\");", "+    \tbuildRule.executeTarget(\"replacestring\");", "+    \tassertContains(\"this is the moon\",", "+                getFileString(buildRule.getProject().getProperty(\"output\") + \"/replacestring\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d0fa7b531103053d02f4c81d8dd37a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/TokenFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void testCustomTokenFilter() throws IOException", "signatureAfterChange": "      @Test     public void testCustomTokenFilter() throws IOException", "diff": ["+    @Test", "-        expectFileContains(\"customtokenfilter\", getProject().getProperty(\"output\") + \"/custom\",", "-                           \"Hello World\");", "+        buildRule.executeTarget(\"customtokenfilter\");", "+    \tassertContains(\"Hello World\", getFileString(buildRule.getProject().getProperty(\"output\") + \"/custom\"));"]}]}