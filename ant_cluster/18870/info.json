{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dc3ac60419912425f7ef812b927b037", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0626e53f5f24bc7acba051a29bdb1d9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "0883e720939bf28a9aaf1dd987b7568f0994ca06", "commitAfterChange": "23c05b409b6feb1ad41be6e158492f2d26af8247", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure,                            boolean showOutput, ClassLoader loader)", "signatureAfterChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean filtertrace, boolean haltOnFailure,                            boolean showOutput, ClassLoader loader)", "diff": ["-            } catch (Exception e) {", "+            } catch (NoSuchMethodException e) {", "-                // error here since it might be perfectly normal. We don't", "-                // know exactly what is the cause, but we're doing exactly", "-                // the same as JUnit TestRunner do. We swallow the exceptions.", "+                // error here since it might be perfectly normal."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b0c550a545154852b9048663e5bf7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "4461e98f844764730b62743e3ab9be0eed6a2cc3", "commitAfterChange": "d3ee9a755540d52a8a7911830abfb1221f5c12c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setFile(String filename)", "signatureAfterChange": "      public void setFile(String filename)", "diff": ["-        this.file = file;", "+        this.file = filename;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931610f02a7cf2873477ff86d6b68738", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "62f2142b3431002933bf1281d244c164ed962890", "commitAfterChange": "6cbeee38fa5502baa5d75036ad2c0418cf808d56", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void setType(Type value)", "signatureAfterChange": "         public void setType(Type value)", "diff": ["-            this.m_type = Type.toType(value.getValue());", "+            this.type = Type.toType(value.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb789edfe4b8d0cc44e0f36be4ac05e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/RecorderEntry.java", "commitBeforeChange": "3193a54aacba612c7df0c0b1d9d2466e113e8556", "commitAfterChange": "c3714c50a1537a384a4cea4ab9b2e404887c82f7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setEmacsMode(boolean emacsMode)", "signatureAfterChange": "      public void setEmacsMode(boolean emacsMode)", "diff": ["-        throw new java.lang.UnsupportedOperationException(\"Method setEmacsMode() not yet implemented.\");", "+        throw new java.lang.RuntimeException(\"Method setEmacsMode() not yet implemented.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e24b8f2e262aef7fe7ec4a6b50427e81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "47a3b5144e994be76379c2fef3acd1c9ab15e059", "commitAfterChange": "43844a7e6b54e2dd27216b30f6d7b44bb601d29c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private BufferInfo getBufferInfo()", "signatureAfterChange": "     private BufferInfo getBufferInfo()", "diff": ["-            bufferInfo.buffer = new ByteArrayOutputStream(INTIAL_SIZE);", "+            bufferInfo.buffer = new ByteArrayOutputStream(INITIAL_SIZE);"]}]}