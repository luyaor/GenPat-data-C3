{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d951253df13acedd37bd17773eed6eef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4c2b69d26f701e26ef34404e13a94c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "a28f64f5cf1b63d9342683d77d79a5cdf9e67f85", "commitAfterChange": "ff41336fc19f549bc995898f4543da6d7e9d9bf9", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected void loadEnvironment(String prefix)", "signatureAfterChange": "     protected void loadEnvironment(String prefix)", "diff": ["-        Vector osEnv = Execute.getProcEnvironment();", "-        for (Enumeration e = osEnv.elements(); e.hasMoreElements();) {", "-            String entry = (String) e.nextElement();", "-            int pos = entry.indexOf('=');", "-            if (pos == -1) {", "-                log(\"Ignoring: \" + entry, Project.MSG_WARN);", "-            } else {", "-                props.put(prefix + entry.substring(0, pos),", "-                          entry.substring(pos + 1));", "-            }", "+        Map osEnv = Execute.getEnvironmentVariables();", "+        for (Iterator e = osEnv.entrySet().iterator(); e.hasNext(); ) {", "+            Map.Entry entry = (Map.Entry) e.next();", "+            props.put(prefix + entry.getKey(), entry.getValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93be46144a762b1d551b723e1b75700e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "be12707c63314ce0314959ff551e37fe59b83943", "commitAfterChange": "4f3e4e1690289144b15872597586ed34ae92efb5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      protected void loadEnvironment( String prefix )", "signatureAfterChange": "      protected void loadEnvironment( String prefix )", "diff": ["-        try {", "-            Vector osEnv = Execute.getProcEnvironment();", "-            for (Enumeration e = osEnv.elements(); e.hasMoreElements(); ) {", "-                String entry = (String)e.nextElement();", "-                int pos = entry.indexOf('=');", "-                if (pos == -1) {", "-                    log(\"Ignoring: \" + entry, Project.MSG_WARN);", "-                } else {", "-                    props.put(prefix + entry.substring(0, pos), ", "-                              entry.substring(pos + 1));", "-                }", "+        Vector osEnv = Execute.getProcEnvironment();", "+        for (Enumeration e = osEnv.elements(); e.hasMoreElements(); ) {", "+            String entry = (String)e.nextElement();", "+            int pos = entry.indexOf('=');", "+            if (pos == -1) {", "+                log(\"Ignoring: \" + entry, Project.MSG_WARN);", "+            } else {", "+                props.put(prefix + entry.substring(0, pos), ", "+                entry.substring(pos + 1));", "-            addProperties(props);", "-        } catch (Exception ex) {", "-            throw new BuildException(ex, location);", "+        addProperties(props);"]}]}