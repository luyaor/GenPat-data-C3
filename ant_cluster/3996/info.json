{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99229d5b69f1dd7c94a62c900661a174", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93dd89b67450683a4e46e6785df1a42e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      protected void runStatements(Reader reader, PrintStream out) throws SQLException, IOException", "signatureAfterChange": "      protected void runStatements(Reader reader, PrintStream out) throws SQLException, IOException", "diff": ["-                if (line.length() > 2 &&", "-                    line.substring(0,3).equalsIgnoreCase(\"REM\")) continue;", "+                StringTokenizer st = new StringTokenizer(line);", "+                if (st.hasMoreTokens()) {", "+                    String token = st.nextToken();", "+                    if (\"REM\".equalsIgnoreCase(token)) {", "+                        continue;", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a97a1711a533f403d440c238a3296943", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Antlib.java", "commitBeforeChange": "632c01d0422cc1bcea7a7c672a63621ce5de5fa3", "commitAfterChange": "89ddfa3d6c328407d120b33bad3705b3f54f4d7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "signatureAfterChange": "     public static Antlib createAntlib(Project project, URL antlibUrl,                                       String uri)", "diff": ["+        URLResource antlibResource = new URLResource(antlibUrl);", "-                if (!parser.canParseAntlibDescriptor(antlibUrl)) {", "-                    project.log(\"ProjectHelper class \" + p.getClass().getName()", "-                                + \" can't parse Antlib descriptors, falling back\"", "-                                + \" to ProjectHelper2.\");", "+                if (!parser.canParseAntlibDescriptor(antlibResource)) {", "-                parser = new ProjectHelper2();", "+                ProjectHelperRepository helperRepository =", "+                    ProjectHelperRepository.getInstance();", "+                parser = helperRepository.getProjectHelperForAntlib(antlibResource);", "-                parser.parseAntlibDescriptor(project, antlibUrl);", "+                parser.parseAntlibDescriptor(project, antlibResource);"]}]}