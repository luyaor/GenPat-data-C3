{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "039ecb03d250bab9d3c5c1f02d689a0e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02fd6897b4076f73b953842d34e0191a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean doGet(URL source, File dest, int logLevel,                          DownloadProgress progress)         throws IOException", "signatureAfterChange": "     public boolean doGet(final URL source, final File dest, final int logLevel,                          DownloadProgress progress)         throws IOException", "diff": ["-    public boolean doGet(URL source, File dest, int logLevel,", "+    public boolean doGet(final URL source, final File dest, final int logLevel,", "-                Date t = new Date(timestamp);", "+                final Date t = new Date(timestamp);", "-        GetThread getThread = new GetThread(source, dest,", "+        final GetThread getThread = new GetThread(source, dest,", "-        } catch (InterruptedException ie) {", "+        } catch (final InterruptedException ie) {", "-            String msg = \"The GET operation took longer than \" + maxTime", "+            final String msg = \"The GET operation took longer than \" + maxTime"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "133abf127630452ab54b46b6a416c059", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public static int compareContent(Resource r1, Resource r2, boolean text) throws IOException", "signatureAfterChange": "     public static int compareContent(final Resource r1, final Resource r2, final boolean text) throws IOException", "diff": ["-    public static int compareContent(Resource r1, Resource r2, boolean text) throws IOException {", "+    public static int compareContent(final Resource r1, final Resource r2, final boolean text) throws IOException {", "-        boolean e1 = r1.isExists();", "-        boolean e2 = r2.isExists();", "+        final boolean e1 = r1.isExists();", "+        final boolean e2 = r2.isExists();", "-        boolean d1 = r1.isDirectory();", "-        boolean d2 = r2.isDirectory();", "+        final boolean d1 = r1.isDirectory();", "+        final boolean d2 = r2.isDirectory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3869b989b2cb7b005cd41a8360c5a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "      private int postProcess(File file, String fixData) throws IOException", "signatureAfterChange": "      private int postProcess(final File file, final String fixData) throws IOException", "diff": ["-    private int postProcess(File file, String fixData) throws IOException {", "-        String enc = docEncoding != null ? docEncoding", "+    private int postProcess(final File file, final String fixData) throws IOException {", "+        final String enc = docEncoding != null ? docEncoding", "-        InputStream fin = new FileInputStream(file);", "+        final InputStream fin = new FileInputStream(file);", "-            String patchedFileContents = patchContent(fileContents, fixData);", "+            final String patchedFileContents = patchContent(fileContents, fixData);", "-                FileOutputStream fos = new FileOutputStream(file);", "+                final FileOutputStream fos = new FileOutputStream(file);", "-                    OutputStreamWriter w = new OutputStreamWriter(fos, enc);", "+                    final OutputStreamWriter w = new OutputStreamWriter(fos, enc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db5a3b61946d0b9490a36827dece386", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Scp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void upload(List fileSet, String toSshUri)         throws IOException, JSchException", "signatureAfterChange": "      private void upload(final List fileSet, final String toSshUri)         throws IOException, JSchException", "diff": ["-    private void upload(List fileSet, String toSshUri)", "+    private void upload(final List fileSet, final String toSshUri)", "-        String file = parseUri(toSshUri);", "+        final String file = parseUri(toSshUri);", "-            List list = new ArrayList(fileSet.size());", "-            for (Iterator i = fileSet.iterator(); i.hasNext();) {", "-                FileSet set = (FileSet) i.next();", "-                Directory d = createDirectory(set);", "+            final List list = new ArrayList(fileSet.size());", "+            for (final Iterator i = fileSet.iterator(); i.hasNext();) {", "+                final FileSet set = (FileSet) i.next();", "+                final Directory d = createDirectory(set);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa431ece38af9f8a1b8319512e1dc75", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "     protected void zipDir(Resource dir, ZipOutputStream zOut, String vPath,                           int mode, ZipExtraField[] extra)         throws IOException", "signatureAfterChange": "     protected void zipDir(final Resource dir, final ZipOutputStream zOut, final String vPath,                           final int mode, final ZipExtraField[] extra)         throws IOException", "diff": ["-    protected void zipDir(Resource dir, ZipOutputStream zOut, String vPath,", "-                          int mode, ZipExtraField[] extra)", "+    protected void zipDir(final Resource dir, final ZipOutputStream zOut, final String vPath,", "+                          final int mode, final ZipExtraField[] extra)", "-            ZipEntry ze = new ZipEntry (vPath);", "+            final ZipEntry ze = new ZipEntry (vPath);", "-            int millisToAdd = roundUp ? ROUNDUP_MILLIS : 0;", "+            final int millisToAdd = roundUp ? ROUNDUP_MILLIS : 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ad1c071bb747fb2a23c968ecfe0475e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     protected void definePackage(File container, String packageName, Manifest manifest)", "signatureAfterChange": "     protected void definePackage(final File container, final String packageName, final Manifest manifest)", "diff": ["-    protected void definePackage(File container, String packageName, Manifest manifest) {", "-        String sectionName = packageName.replace('.', '/') + \"/\";", "+    protected void definePackage(final File container, final String packageName, final Manifest manifest) {", "+        final String sectionName = packageName.replace('.', '/') + \"/\";", "-        Attributes sectionAttributes = manifest.getAttributes(sectionName);", "+        final Attributes sectionAttributes = manifest.getAttributes(sectionName);", "-        Attributes mainAttributes = manifest.getMainAttributes();", "+        final Attributes mainAttributes = manifest.getMainAttributes();", "-            } catch (MalformedURLException e) {", "+            } catch (final MalformedURLException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672bf02b8f5be58246fa5f86a31db1fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/AptCompilerAdapter.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     static void setAptCommandlineSwitches(Apt apt, Commandline cmd)", "signatureAfterChange": "     static void setAptCommandlineSwitches(final Apt apt, final Commandline cmd)", "diff": ["-    static void setAptCommandlineSwitches(Apt apt, Commandline cmd) {", "+    static void setAptCommandlineSwitches(final Apt apt, final Commandline cmd) {", "-        String factory = apt.getFactory();", "+        final String factory = apt.getFactory();", "-        Path factoryPath = apt.getFactoryPath();", "+        final Path factoryPath = apt.getFactoryPath();", "-        File preprocessDir = apt.getPreprocessDir();", "+        final File preprocessDir = apt.getPreprocessDir();", "-        Vector options = apt.getOptions();", "-        Enumeration elements = options.elements();", "+        final Vector options = apt.getOptions();", "+        final Enumeration elements = options.elements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ca595336d5bf3c4ace06a7b034651b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHSession.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setRemotetunnels(String tunnels)", "signatureAfterChange": "     public void setRemotetunnels(final String tunnels)", "diff": ["-    public void setRemotetunnels(String tunnels) {", "-        String[] specs = tunnels.split(\", \");", "+    public void setRemotetunnels(final String tunnels) {", "+        final String[] specs = tunnels.split(\", \");", "-                String[] spec = specs[i].split(\":\", 3);", "-                int rport = Integer.parseInt(spec[0]);", "-                String lhost = spec[1];", "-                int lport = Integer.parseInt(spec[2]);", "-                RemoteTunnel tunnel = createRemoteTunnel();", "+                final String[] spec = specs[i].split(\":\", 3);", "+                final int rport = Integer.parseInt(spec[0]);", "+                final String lhost = spec[1];", "+                final int lport = Integer.parseInt(spec[2]);", "+                final RemoteTunnel tunnel = createRemoteTunnel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71e1a14dec07c3fdd188ba9860f238cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "          GetThread(URL source, File dest,                   boolean h, long t, DownloadProgress p, int l, String userAgent)", "signatureAfterChange": "          GetThread(final URL source, final File dest,                   final boolean h, final long t, final DownloadProgress p, final int l, final String userAgent)", "diff": ["-        GetThread(URL source, File dest,", "-                  boolean h, long t, DownloadProgress p, int l, String userAgent) {", "+        GetThread(final URL source, final File dest,", "+                  final boolean h, final long t, final DownloadProgress p, final int l, final String userAgent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95384d816d747849f282cc47d05dbf80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private void logError(TransformerException e, String type)", "signatureAfterChange": "      private void logError(final TransformerException e, final String type)", "diff": ["-    private void logError(TransformerException e, String type) {", "+    private void logError(final TransformerException e, final String type) {", "-        StringBuffer msg = new StringBuffer();", "-        SourceLocator locator = e.getLocator();", "+        final StringBuffer msg = new StringBuffer();", "+        final SourceLocator locator = e.getLocator();", "-            String systemid = locator.getSystemId();", "+            final String systemid = locator.getSystemId();", "-            int line = locator.getLineNumber();", "+            final int line = locator.getLineNumber();", "-                int column = locator.getColumnNumber();", "+                final int column = locator.getColumnNumber();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ae2821759c80a3215407ed1b2c94f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "     private void addDirectoryResource(Resource r, String name, String prefix,                                       File base, ZipOutputStream zOut,                                       int defaultDirMode, int thisDirMode)         throws IOException", "signatureAfterChange": "     private void addDirectoryResource(final Resource r, String name, final String prefix,                                       final File base, final ZipOutputStream zOut,                                       final int defaultDirMode, final int thisDirMode)         throws IOException", "diff": ["-    private void addDirectoryResource(Resource r, String name, String prefix,", "-                                      File base, ZipOutputStream zOut,", "-                                      int defaultDirMode, int thisDirMode)", "+    private void addDirectoryResource(final Resource r, String name, final String prefix,", "+                                      final File base, final ZipOutputStream zOut,", "+                                      final int defaultDirMode, final int thisDirMode)", "-        int nextToLastSlash = name.lastIndexOf(\"/\", name.length() - 2);", "+        final int nextToLastSlash = name.lastIndexOf(\"/\", name.length() - 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba29df13c73ae136c342959951943f5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "signatureAfterChange": "     private TestResultHolder executeInVM(final JUnitTest arg) throws BuildException", "diff": ["-    private TestResultHolder executeInVM(JUnitTest arg) throws BuildException {", "+    private TestResultHolder executeInVM(final JUnitTest arg) throws BuildException {", "-        JUnitTest test = (JUnitTest) arg.clone();", "+        final JUnitTest test = (JUnitTest) arg.clone();", "-        CommandlineJava.SysProperties sysProperties =", "+        final CommandlineJava.SysProperties sysProperties =", "-                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "+                final JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "-                FormatterElement fe = feArray[i];", "+                final FormatterElement fe = feArray[i];", "-                    File outFile = getOutput(fe, test);", "+                    final File outFile = getOutput(fe, test);", "-            TestResultHolder result = new TestResultHolder();", "+            final TestResultHolder result = new TestResultHolder();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bebd4a5186f7c757f99e58eaff1b33d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "     protected Resource[][] grabResources(FileSet[] filesets)", "signatureAfterChange": "     protected Resource[][] grabResources(final FileSet[] filesets)", "diff": ["-    protected Resource[][] grabResources(FileSet[] filesets) {", "-        Resource[][] result = new Resource[filesets.length][];", "+    protected Resource[][] grabResources(final FileSet[] filesets) {", "+        final Resource[][] result = new Resource[filesets.length][];", "-                ZipFileSet zfs = (ZipFileSet) filesets[i];", "+                final ZipFileSet zfs = (ZipFileSet) filesets[i];", "-            DirectoryScanner rs =", "+            final DirectoryScanner rs =", "-            Vector<Resource> resources = new Vector<Resource>();", "+            final Vector<Resource> resources = new Vector<Resource>();", "-                String[] directories = rs.getIncludedDirectories();", "+                final String[] directories = rs.getIncludedDirectories();", "-            String[] files = rs.getIncludedFiles();", "+            final String[] files = rs.getIncludedFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8caf88a5d14447fa2a26614fb97e553", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void setSizesAndOffsetFromZip64Extra(ZipEntry ze,                                                  OffsetEntry offset,                                                  int diskStart)         throws IOException", "signatureAfterChange": "     private void setSizesAndOffsetFromZip64Extra(final ZipEntry ze,                                                  final OffsetEntry offset,                                                  final int diskStart)         throws IOException", "diff": ["-    private void setSizesAndOffsetFromZip64Extra(ZipEntry ze,", "-                                                 OffsetEntry offset,", "-                                                 int diskStart)", "+    private void setSizesAndOffsetFromZip64Extra(final ZipEntry ze,", "+                                                 final OffsetEntry offset,", "+                                                 final int diskStart)", "-        Zip64ExtendedInformationExtraField z64 =", "+        final Zip64ExtendedInformationExtraField z64 =", "-            boolean hasUncompressedSize = ze.getSize() == ZIP64_MAGIC;", "-            boolean hasCompressedSize = ze.getCompressedSize() == ZIP64_MAGIC;", "-            boolean hasRelativeHeaderOffset =", "+            final boolean hasUncompressedSize = ze.getSize() == ZIP64_MAGIC;", "+            final boolean hasCompressedSize = ze.getCompressedSize() == ZIP64_MAGIC;", "+            final boolean hasRelativeHeaderOffset ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb3f355076f7ab45ba4e015317453c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void sendFileToRemote(ChannelSftp channel,                                   File localFile,                                   String remotePath)         throws IOException, SftpException", "signatureAfterChange": "      private void sendFileToRemote(final ChannelSftp channel,                                   final File localFile,                                   String remotePath)         throws IOException, SftpException", "diff": ["-    private void sendFileToRemote(ChannelSftp channel,", "-                                  File localFile,", "+    private void sendFileToRemote(final ChannelSftp channel,", "+                                  final File localFile,", "-        long filesize = localFile.length();", "+        final long filesize = localFile.length();", "-        long startTime = System.currentTimeMillis();", "-        long totalLength = filesize;", "+        final long startTime = System.currentTimeMillis();", "+        final long totalLength = filesize;", "-        boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;", "+        final boolean trackProgress = getVerbose() && filesize > HUNDRED_KILOBYTES;", "-                long endTime = System.currentTimeMillis();", "+                final long endTime = System.currentTimeMillis();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f61c3d1917115e7f4f6bb3242e490232", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Resource[] selectOutOfDateSources(ProjectComponent logTo,                                                     Resource[] source,                                                     FileNameMapper mapper,                                                     ResourceFactory targets,                                                     long granularity)", "signatureAfterChange": "     public static Resource[] selectOutOfDateSources(final ProjectComponent logTo,                                                     final Resource[] source,                                                     final FileNameMapper mapper,                                                     final ResourceFactory targets,                                                     final long granularity)", "diff": ["-    public static Resource[] selectOutOfDateSources(ProjectComponent logTo,", "-                                                    Resource[] source,", "-                                                    FileNameMapper mapper,", "-                                                    ResourceFactory targets,", "-                                                    long granularity) {", "-        Union u = new Union();", "+    public static Resource[] selectOutOfDateSources(final ProjectComponent logTo,", "+                                                    final Resource[] source,", "+                                                    final FileNameMapper mapper,", "+                                                    final ResourceFactory targets,", "+                                                    final long granularity) {", "+        final Union u = new Union();", "-        ResourceCollection rc", "+        final ResourceCollection rc"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd16ce139f1930cccbf78e8c0e998906", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "     private AntTypeDefinition findRestrictedDefinition(         ComponentHelper helper, String componentName, List<Method> methods)", "signatureAfterChange": "     private AntTypeDefinition findRestrictedDefinition(         final ComponentHelper helper, final String componentName, final List<Method> methods)", "diff": ["-        ComponentHelper helper, String componentName, List<Method> methods) {", "+        final ComponentHelper helper, final String componentName, final List<Method> methods) {", "-        List<AntTypeDefinition> definitions = helper.getRestrictedDefinitions(componentName);", "+        final List<AntTypeDefinition> definitions = helper.getRestrictedDefinitions(componentName);", "-                AntTypeDefinition d = definitions.get(i);", "-                Class<?> exposedClass = d.getExposedClass(helper.getProject());", "+                final AntTypeDefinition d = definitions.get(i);", "+                final Class<?> exposedClass = d.getExposedClass(helper.getProject());", "-                Method method  = findMatchingMethod(exposedClass, methods);", "+                final Method method  = findMatchingMethod(exposedClass, methods);"]}]}