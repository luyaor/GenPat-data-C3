{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "928d00bcfb4b850a8076ed9497f8de9d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70ccf795a15d8352d6c277d69c21032e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/JavaEnvUtilsTest.java", "commitBeforeChange": "33832587a4070693dd77d6e08fcf4e7d0d9a2b99", "commitAfterChange": "126daf8b31f6c01d1c6891581195db9956142970", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testGetExecutableWindows()", "signatureAfterChange": "      public void testGetExecutableWindows()", "diff": ["-", "-                if (JavaEnvUtils.getJavaVersion() == JavaEnvUtils.JAVA_1_0 ||", "-                    JavaEnvUtils.getJavaVersion() == JavaEnvUtils.JAVA_1_1) {", "-                    assertTrue(j+\" is normalized and in the JRE dir\",", "-                               j.startsWith(javaHome));", "-                } else {", "-                    assertTrue(j+\" is normalized and not in the JRE dir\",", "-                               !j.startsWith(javaHome));", "-                }", "+                assertTrue(j+\" is normalized and not in the JRE dir\",", "+                           !j.startsWith(javaHome));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece44e33826b86c8217e90819bd9f513", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "7e562b5843d700d5363a676d34e5d9afe1801a11", "commitAfterChange": "bbd6a3bd9ee40032440b606ccf590641f804fc35", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private String macroSubs(String s, Map macroMapping)", "signatureAfterChange": "      private String macroSubs(String s, Map macroMapping)", "diff": ["-                        state = STATE_EXPECT_EXCAPE;", "+                        state = STATE_NORMAL;", "+                        ret.append('@');", "-                case STATE_EXPECT_EXCAPE:", "-                    state = STATE_NORMAL;", "-                    if (ch == '{') {", "-                        ret.append(\"@\");", "-                    } else {", "-                        ret.append(\"@@\");", "-                    }", "-                    ret.append(ch);", "-                    break;", "-                break;", "-            case STATE_EXPECT_EXCAPE:", "-                ret.append(\"@@\");"]}]}