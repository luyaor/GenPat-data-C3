{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d2ce5150e30da3efc8e1682705b5379", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39bef6f3d66065b7d59c0767e4f9d502", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "4dab12fb9ccbaa24cc22c9804302bc7a4373b78e", "commitAfterChange": "fe829a9d0fa679df3ae2cc4803e5236ed2ed5c7b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private TransformerFactory getFactory() throws BuildException", "signatureAfterChange": "     private TransformerFactory getFactory() throws BuildException", "diff": ["-        if (Boolean.TRUE.equals(DISABLE_SECURE_PROCESSING.get())) {", "-            try {", "-                Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "-                _isNotSecureProcessing.setAccessible(true);", "-                _isNotSecureProcessing.set(tfactory, Boolean.TRUE);", "-            } catch (Exception x) {", "+        try { // #51668, #52382", "+            Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "+            _isNotSecureProcessing.setAccessible(true);", "+            _isNotSecureProcessing.set(tfactory, Boolean.TRUE);", "+        } catch (Exception x) {", "+            if (project != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "622d40d4c0bbaa3808eeb64e5e84748f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "cd69b894b2a5a02c6cc32c8caa4d7e949074eb9e", "commitAfterChange": "735f3fca3e3ce3a6b44109a44836d8ab64215e75", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private TransformerFactory getFactory() throws BuildException", "signatureAfterChange": "     private TransformerFactory getFactory() throws BuildException", "diff": ["+", "+        if (Boolean.TRUE.equals(DISABLE_SECURE_PROCESSING.get())) {", "+            try {", "+                Field _isNotSecureProcessing = tfactory.getClass().getDeclaredField(\"_isNotSecureProcessing\");", "+                _isNotSecureProcessing.setAccessible(true);", "+                _isNotSecureProcessing.set(tfactory, Boolean.TRUE);", "+            } catch (Exception x) {", "+                project.log(x.toString(), Project.MSG_DEBUG);", "+            }", "+        }", "+"]}]}