{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62779d322a75e67cfaad2a01e6a38d58", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a63c4395b17f2b9b9b8180551e9b0841", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "b0078a54717eaf1f896ce3094adeed0540f6bd8e", "commitAfterChange": "7527ef19625d2d77806b9ce8262b49e667bb7101", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(", "-                \"name, file or resource attribute of \"", "-                + getTaskName() + \" is undefined\", getLocation());", "-        }", "+            //we arent fully defined yet. this is an error unless", "+            //we are in an antlib, in which case the resource name is determined", "+            //automatically.", "+            //NB: URIs in the ant core package will be \"\" at this point.", "+            if (getURI()!=null && getURI().startsWith(MagicNames.ANTLIB_PREFIX)) {", "+                //convert the URI to a resource", "+                String uri1 = getURI();", "+                setResource(makeResourceFromURI(uri1));", "+            } else {", "+                    throw new BuildException(", "+                        \"name, file or resource attribute of \"", "+                        + getTaskName() + \" is undefined\", getLocation());", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90733509ab5c55ff261325c4db9b1a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "e11e04dc6e6d6dcabe531346f60b597a8a58c453", "commitAfterChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected boolean isUpToDate(FTPClient ftp, File localFile, String remoteFile)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean isUpToDate(FTPClient ftp, File localFile, String remoteFile)         throws IOException, BuildException", "diff": ["-        ", "+", "-        if (!FTPReply.isPositiveCompletion(ftp.getReplyCode()))", "-        {", "-            throw new BuildException(", "-                                     \"could not date test remote file: \" +", "-                                     ftp.getReplyString());", "-        }", "-            return false;", "+            // If we are sending files, then assume out of date.", "+            // If we are getting files, then throw an error", "+", "+            if( action == SEND_FILES ) {", "+                log(\"Could not date test remote file: \" + remoteFile", "+                    + \"assuming out of date.\", Project.MSG_VERBOSE);", "+                return false;", "+            } else {", "+                throw new BuildException(\"could not date test remote file: \" +", "+                                         ftp.getReplyString());", "+            }"]}]}