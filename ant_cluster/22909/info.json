{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1688576f0ca9a65fadacba7f30b568a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018bf27e308133ac40bf171bf62bf232", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/ZipResource.java", "commitBeforeChange": "4af209f564ee4c3b8408f089a8f23723a99a6704", "commitAfterChange": "a96627738decba56e1c94e54fa23ecbd7bfdb9a2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private synchronized void checkEntry() throws BuildException", "signatureAfterChange": "     protected void fetchEntry()", "diff": ["-", "-    private synchronized void checkEntry() throws BuildException {", "-        if (haveEntry) {", "-            return;", "-        }", "-        String name = getName();", "-        if (name == null) {", "-            throw new BuildException(\"zip entry name not set\");", "-        }", "-        File f = getZipfile();", "-        if (f == null) {", "-            throw new BuildException(\"zipfile attribute not set\");", "-        }", "-        if (!f.exists()) {", "-            throw new BuildException(f.getAbsolutePath() + \" does not exist.\");", "-        }", "-        if (f.isDirectory()) {", "-            throw new BuildException(f + \" denotes a directory.\");", "-        }", "+    protected void fetchEntry() {", "-            z = new ZipFile(f, getEncoding());", "-            setEntry(z.getEntry(name));", "+            z = new ZipFile(getZipfile(), getEncoding());", "+            setEntry(z.getEntry(getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93b10dfd4fd064644f289c97242bd539", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "cfbc62561bfd4f8a6f734dc8b747e6792625a05f", "commitAfterChange": "4141a91af169f9d36ca98a2da86350ef31b26693", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void createStreams()", "signatureAfterChange": "     public void createStreams()", "diff": ["-                try {", "-                        = new FileOutputStream(out.getAbsolutePath(), append);", "+                        = new DelayedFileOutputStream(out, append);", "-                } catch (FileNotFoundException fne) {", "-                    throw new BuildException(\"Cannot write to \" + out, fne);", "-                } catch (IOException ioe) {", "-                    throw new BuildException(\"Cannot write to \" + out, ioe);", "-                }", "-            try {", "-                    = new FileOutputStream(error.getAbsolutePath(), append);", "+                    = new DelayedFileOutputStream(error, append);", "-            } catch (FileNotFoundException fne) {", "-                throw new BuildException(\"Cannot write to \" + error, fne);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Cannot write to \" + error, ioe);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e4f68a6e93080f19d43224e7495744", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/dotnet/src/main/org/apache/tools/ant/taskdefs/optional/dotnet/AbstractBuildTask.java", "commitBeforeChange": "49d7dffbd158195b4815679366e563cc0a76a384", "commitAfterChange": "ed70f738d46319e6440ef4d53745ca97a46a4589", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        if (buildFile != null && buildSnippet != null) {", "+            throw new BuildException(\"You must not specify the build file\"", "+                                     + \" attribute and a nested build at the\"", "+                                     + \" same time\");", "+        }", "+", "-        args = getBuildfileArguments(buildFile);", "+", "+        File generatedFile = null;", "+        if (buildSnippet != null) {", "+            try {", "+                generatedFile = getBuildFile();", "+            } catch (IOException e) {", "+                throw new BuildException(e);", "+            }", "+            args = getBuildfileArguments(generatedFile);", "+        } else {", "+            args = getBuildfileArguments(buildFile);", "+        }        ", "+", "-        exec.execute();", "+", "+        try {", "+            exec.execute();", "+        } finally {", "+            if (generatedFile != null) {", "+                generatedFile.delete();", "+            }", "+        }", "+    }"]}]}