{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88fd5458d9664e8d4c833dedb25b8027", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c5fff23bcb60e83d87382a79458820f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java", "commitBeforeChange": "e7fb9570418c8f963123c259470373667ac8a84e", "commitAfterChange": "f5b5a8b53cad568d5a5ab97ed35c91f698fb1c8e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-", "-", "-", "-", "-", "-", "+            }", "+            e = headers.elements();", "+            while (e.hasMoreElements()) {", "+                Header h = (Header) e.nextElement();", "+                mailMessage.setHeader(h.getName(), h.getValue());", "-                File file = (File) e.nextElement();", "-", "-                attach(file, out);", "+                attach((File) e.nextElement(), out);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d10f7adf3697066c635541ee4b202e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "14069410f14b1007c9bdb1823ca4d50ca143ab08", "commitAfterChange": "96203d2041141190bc138dbac714b468d021c74d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void setSystem() throws BuildException", "signatureAfterChange": "          public void setSystem() throws BuildException", "diff": ["-                Properties p = new Properties(sys = System.getProperties());", "-        ", "+                sys = System.getProperties();", "+                Properties p = new Properties();", "+                for (Enumeration e = sys.keys(); e.hasMoreElements(); ) {", "+                    Object o = e.nextElement();", "+                    p.put(o, sys.get(o));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b38f2763949cd9b9f116a75383f663", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/depend/DependScanner.java", "commitBeforeChange": "9d15809c91e3a318ed798a929438ec1d8148b29c", "commitAfterChange": "1c24c78ca5605e5ffd84b67673207b4769e4fc41", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void scan() throws IllegalStateException", "signatureAfterChange": "     public synchronized void scan() throws IllegalStateException", "diff": ["-                + analyzerClassName, e);", "+                                     + analyzerClassName, e);", "+        for (Enumeration e = additionalBaseDirs.elements(); e.hasMoreElements();) {", "+            File additionalBaseDir = (File) e.nextElement();", "+            analyzer.addClassPath(new Path(null, additionalBaseDir.getPath()));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b79bea6c22bcd23d2fd62b135d2cbea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/PlainMailer.java", "commitBeforeChange": "8d0a7dc50ac5f28978517eb289457e26b4b40c44", "commitAfterChange": "27b9f24bf23dcd72f13756dd74984dd2432c39c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["+            e = replyToList.elements();", "+            while (e.hasMoreElements()) {", "+                mailMessage.replyto(e.nextElement().toString());", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8996eea43e9c3158bb951670e73d3cf6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/EventToActionMapper.java", "commitBeforeChange": "37b3d25cc8c65444ab2cbb5c0ff153dccf56c789", "commitAfterChange": "2d4bfedfb63f054542debd85410e53916fa502f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void applyEvent(EventObject event)", "signatureAfterChange": "     public void applyEvent(EventObject event)", "diff": ["+", "+        vals = (List) _checkedTrueOn.get(event.getClass());", "+        changeChecked(vals, true);", "+", "+        vals = (List) _checkedFalseOn.get(event.getClass());", "+        changeChecked(vals, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9385caa8dbfee79af1b4b278e7f1ad87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/AntAnalyzer.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void determineDependencies(Vector files, Vector classes)", "signatureAfterChange": "     protected void determineDependencies(Vector files, Vector classes)", "diff": ["-        int maxCount = isClosureRequired() ? MAX_LOOPS : 2;", "+        int maxCount = isClosureRequired() ? MAX_LOOPS : 1;", "+        Hashtable analyzedDeps = null;", "-            Hashtable analyzedDeps = new Hashtable();", "+            analyzedDeps = new Hashtable();", "-                            String entryName ", "+                            String entryName", "-                            ZipEntry entry = new ZipEntry(entryName);                                ", "-                            inStream ", "-                                = zipFile.getInputStream(entry);                                 ", "+                            ZipEntry entry = new ZipEntry(entryName);", "+                            inStream", "+                                = zipFile.getInputStream(entry);", "+        // pick up the last round of dependencies that were determined", "+        Enumeration depsEnum = analyzedDeps.elements();", "+        while (depsEnum.hasMoreElements()) {", "+            String className = (String) depsEnum.nextElement();", "+            dependencies.put(className, className);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94577a3227d5ca4d1cb04a4a94c320da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tstamp.java", "commitBeforeChange": "ea39aec3104fb601050257534c54eba3f4d765b5", "commitAfterChange": "aa9e0c2342b992df94941da524d8b8f13a1df840", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+            ", "+            Enumeration i = customFormats.elements();", "+            while(i.hasMoreElements())", "+            {", "+                CustomFormat cts = (CustomFormat)i.nextElement();", "+                cts.execute(project,d);", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de779e59c04ea40571c1ba20cd1f33e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ManifestTask.java", "commitBeforeChange": "781433259a76bc117f5a824e95b5be1de64eac7f", "commitAfterChange": "4462d806089e69c25b2a09fa31060915d3fef1da", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addConfiguredSection(Manifest.Section section)          throws ManifestException", "signatureAfterChange": "     public void addConfiguredSection(Manifest.Section section)          throws ManifestException", "diff": ["+        Enumeration attributeKeys = section.getAttributeKeys();", "+        while (attributeKeys.hasMoreElements()) {", "+            Attribute attribute = section.getAttribute((String)attributeKeys.nextElement());", "+            checkAttribute(attribute);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f21590429c081ecf8ffe55b92e25796", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "3d0a16ece7d56d550d94048a2e7e1986c064e3a7", "commitAfterChange": "c09b4ad628172a350f73fe99bdc56f33e4008d59", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Properties getProperties()", "signatureAfterChange": "     public Properties getProperties()", "diff": ["+        //quick & dirty, to make nested mapped p-sets work:", "+        for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "+            PropertySet set = (PropertySet) e.nextElement();", "+            props.putAll(set.getProperties());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b75b4f680a116d54ad40a03eb2a4899a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "cbef49e344857a1cf7c35737b67d3c732f901710", "commitAfterChange": "b839a3ed0f3a0ad050579c33f2ede3e8b8542fea", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void buildFinished(BuildEvent event)", "signatureAfterChange": "      public void buildFinished(BuildEvent event)", "diff": ["+        for (Enumeration e = zipFiles.elements(); e.hasMoreElements(); ) {", "+            ZipFile zipFile = (ZipFile)e.nextElement();", "+            try {", "+                zipFile.close();", "+            }", "+            catch (IOException ioe) {", "+                // ignore", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7a0a5e08ddb11895e980c52de7d560c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "23a58df47dca238cc3a25e99845e14584c68d686", "commitAfterChange": "7517bc70580950fd744751a673d7c9b77ca06d94", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void overrideProperties() throws BuildException", "signatureAfterChange": "     private void overrideProperties() throws BuildException", "diff": ["+        // Do local properties second", "+        if (inheritAll) {", "+            // Only copy them if they have not been set", "+            PropertyHelper newHelper =", "+                PropertyHelper.getPropertyHelper(newProject);", "+            PropertyHelper oldHelper =", "+                PropertyHelper.getPropertyHelper(getProject());", "+            newHelper.setNotOverrideLocalProperties(", "+                oldHelper.getLocalProperties().copy());", "+        }"]}]}