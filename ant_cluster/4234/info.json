{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff6bf3ee5ee1aff660a5f3e2569145a6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4558c506864be33b49980c8da7ec8a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "1e88913f66326889d03eb449cd5cb850d9ae1e63", "commitAfterChange": "ba558a362e0ebfcbe75451184f60115c7cc8ba7e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void maybeConfigure() throws BuildException", "signatureAfterChange": "     public void maybeConfigure() throws BuildException", "diff": ["-        realTask = makeTask(this, wrapper);", "+        realThing = makeObject(this, wrapper);", "-        wrapper.setProxy(realTask);", "-        realTask.setRuntimeConfigurableWrapper(wrapper);", "+        wrapper.setProxy(realThing);", "+        if (realThing instanceof Task) {", "+            ((Task) realThing).setRuntimeConfigurableWrapper(wrapper);", "+        }", "-        handleChildren(realTask, wrapper);", "+        handleChildren(realThing, wrapper);", "-        realTask.maybeConfigure();", "-        target.replaceTask(this, realTask);", "+        wrapper.maybeConfigure(project);", "+        if (realThing instanceof Task) {", "+            target.replaceChild(this, realThing);", "+        } else {", "+            target.replaceChild(this, wrapper);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1406571eb641f554dde17001dea9226", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "3ce64dd501a7e5dfd84967399cc4c68c643de810", "commitAfterChange": "b941f2ef443cbbaec2b995b3c34958067c4979c3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public void add(ResourceCollection c)", "signatureAfterChange": "     public synchronized void add(ResourceCollection c)", "diff": ["-     */", "-    public void add(ResourceCollection c) {", "-        rc = rc == null ? new Resources() : rc;", "-        rc.add(c);", "-    }", "+     */", "+    public synchronized void add(ResourceCollection c) {", "+        if (rc == null) {", "+            rc = c;", "+            return;", "+        }", "+        if (!(rc instanceof Resources)) {", "+            Resources newRc = new Resources();", "+            newRc.setProject(getProject());", "+            newRc.add(rc);", "+            rc = newRc;", "+\t}", "+        ((Resources) rc).add(c);", "+    }"]}]}