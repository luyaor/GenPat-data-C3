{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c1f890be1dbb02728d75fa6205b4fd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5225dc33b1e6f5c0680dcfa7162d3778", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/Environment.java", "commitBeforeChange": "50ed19a8ede1bafce47dd7fc00f7af6aab7ed4f0", "commitAfterChange": "8e89e1b214d2d228a66c7766a04e37e57b5270b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static synchronized Properties retrieveEnvironmentVariables()         throws IOException, ExecException", "signatureAfterChange": "     private static synchronized Properties retrieveEnvironmentVariables()         throws IOException, ExecException", "diff": ["-        String var = null;", "+        final StringBuffer var = new StringBuffer();", "-        while( ( line = in.readLine() ) != null )", "+        while( null != ( line = in.readLine() ) )", "-            if( line.indexOf( '=' ) == -1 )", "+            if( -1 == line.indexOf( '=' ) )", "-                if( var == null )", "-                {", "-                    var = StringUtil.LINE_SEPARATOR + line;", "-                }", "-                else", "-                {", "-                    var += StringUtil.LINE_SEPARATOR + line;", "-                }", "+                var.append( StringUtil.LINE_SEPARATOR );", "-                if( var != null )", "+                if( 0 != var.length() )", "-                    addProperty( properties, var );", "+                    addProperty( properties, var.toString() );", "+                    var.setLength( 0 );", "-                var = line;", "+            var.append( line );", "-        if( null != var )", "+        if( 0 != var.length() )", "-            addProperty( properties, var );", "+            addProperty( properties, var.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0fe11cf18d3d48b892fdc31ebc34465", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "fdde39136d793c06df81c914db2dc9273d1e6c4c", "commitAfterChange": "4ee2e5c268b44ad68c49168457f64b76e4d64a32", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static synchronized Vector getProcEnvironment()", "signatureAfterChange": "     public static synchronized Vector getProcEnvironment()", "diff": ["-            String line;", "+            String var = null;", "+            String line, lineSep = System.getProperty(\"line.separator\");", "-                procEnvironment.addElement(line);", "+                if (line.indexOf('=') == -1) {", "+                    // Chunk part of previous env var (UNIX env vars can", "+                    // contain embedded new lines).", "+                    if (var == null) {", "+                        var = lineSep + line;", "+                    }", "+                    else {", "+                        var += lineSep + line;", "+                    }", "+                }", "+                else {", "+                    // New env var...append the previous one if we have it.", "+                    if (var != null) {", "+                        procEnvironment.addElement(var);", "+                    }", "+                    var = line;", "+                }", "+            // Since we \"look ahead\" before adding, there's one last env var.", "+            procEnvironment.addElement(var);"]}]}