{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94f5c8d2eab3cd96acae5fc15f7fa506", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f0323688857380c9cdd6a49927d391", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/compilers/JasperC.java", "commitBeforeChange": "bd92e4de44f659770bc30e39f352dcc8446a1e9a", "commitAfterChange": "248269dea49bf84d7f1a87d23906854c519b9f70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        Commandline cmd = setupJasperCommand();", "-        try", "+        final ExecuteJava exe = new ExecuteJava();", "+        exe.setClassName( \"org.apache.jasper.JspC\" );", "+        if( getJspc().getClasspath() != null )", "-            // Create an instance of the compiler, redirecting output to", "-            // the project log", "-            //FIXME", "-            JavaTask java = null;//(Java)( getJspc().getProject() ).createTask( \"java\" );", "-            if( getJspc().getClasspath() != null )", "-            {", "-                java.addClasspath( getJspc().getClasspath() );", "-            }", "-            java.setClassname( \"org.apache.jasper.JspC\" );", "-            String args[] = cmd.getArguments();", "-            for( int i = 0; i < args.length; i++ )", "-            {", "-                java.addArg( new Argument( args[ i ] ) );", "-            }", "-            java.execute();", "-            return true;", "+            exe.getClassPath().add( getJspc().getClasspath() );", "-        catch( Exception ex )", "-        {", "-            if( ex instanceof TaskException )", "-            {", "-                throw (TaskException)ex;", "-            }", "-            else", "-            {", "-                throw new TaskException( \"Error running jsp compiler: \",", "-                                         ex );", "-            }", "-        }", "+", "+        setupJasperCommand( exe.getArguments() );", "+", "+        // Create an instance of the compiler, redirecting output to", "+        // the project log", "+        exe.execute( getTaskContext() );", "+        return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e874c95a33f29348cb45ce144fa6187", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/KaffeRmic.java", "commitBeforeChange": "eca527f22bfff2af0e9b57e1c10e6f25424fe653", "commitAfterChange": "6cfcccdb388eea1af2b53c208e382b3c0d5c9be4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public boolean execute() throws BuildException", "signatureAfterChange": "       public boolean execute() throws BuildException", "diff": ["+        cmd.setExecutable(c.getName());", "+            getRmic().log(Commandline.describeCommand(cmd));", "-        getRmic().log(\"Using: \" + c.getName());", "-        getRmic().log(Commandline.describeCommand(cmd));", "-", "-        try {", "-            Constructor cons = c.getConstructor(new Class[] {String[].class});", "-            Object rmic = cons.newInstance(new Object[] {cmd.getArguments()});", "-            Method doRmic = c.getMethod(\"run\", (Class[]) null);", "-            Boolean ok = (Boolean) doRmic.invoke(rmic, (Object[]) null);", "-", "-            return ok.booleanValue();", "-        } catch (BuildException ex) {", "-            //rethrow", "-            throw ex;", "-        } catch (Exception ex) {", "-            //wrap", "-           throw new BuildException(\"Error starting Kaffe rmic: \",", "-                                    ex, getRmic().getLocation());", "-        }", "+        ExecuteJava ej = new ExecuteJava();", "+        ej.setJavaCommand(cmd);", "+        return ej.fork(getRmic()) == 0;"]}]}