{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e4b662ab2b760de35a6eb405081d18c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203e103a240380394c0dc255df2a1f90", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "e028c281003e4139ab97bdef658acdc260b4c820", "commitAfterChange": "b912cb97f49f54d02ab97e8d98cfe10c9abc80b3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void initTypes()", "signatureAfterChange": "     private void initTypes()", "diff": ["-        ClassLoader classLoader = null;", "-        classLoader = getClassLoader(classLoader);", "-        String dataDefs = MagicNames.TYPEDEFS_PROPERTIES_RESOURCE;", "-", "-        InputStream in = null;", "-        try {", "-            Properties props = new Properties();", "-            in = this.getClass().getResourceAsStream(dataDefs);", "-            if (in == null) {", "-                throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);", "-            }", "-            props.load(in);", "-", "-            Enumeration e = props.propertyNames();", "-            while (e.hasMoreElements()) {", "-                String name = (String) e.nextElement();", "-                String className = props.getProperty(name);", "-                AntTypeDefinition def = new AntTypeDefinition();", "-                def.setName(name);", "-                def.setClassName(className);", "-                def.setClassLoader(classLoader);", "-                antTypeTable.put(name, def);", "-            }", "-        } catch (IOException ex) {", "-            throw new BuildException(ERROR_NO_TYPE_LIST_LOAD);", "-        } finally {", "-            if (in != null) {", "-                try {", "-                    in.close();", "-                } catch (Exception ignore) {", "-                    // ignore", "-                }", "-            }", "+        ClassLoader classLoader = getClassLoader(null);", "+        Properties props = getDefaultDefinitions(true);", "+        Enumeration e = props.propertyNames();", "+        while (e.hasMoreElements()) {", "+            String name = (String) e.nextElement();", "+            String className = props.getProperty(name);", "+            AntTypeDefinition def = new AntTypeDefinition();", "+            def.setName(name);", "+            def.setClassName(className);", "+            def.setClassLoader(classLoader);", "+            antTypeTable.put(name, def);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f13dd058f7c27c3e8f5bc48bd9e2ad01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "e028c281003e4139ab97bdef658acdc260b4c820", "commitAfterChange": "b912cb97f49f54d02ab97e8d98cfe10c9abc80b3", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void initTasks()", "signatureAfterChange": "     private void initTasks()", "diff": ["-        ClassLoader classLoader = null;", "-        classLoader = getClassLoader(classLoader);", "-        String dataDefs = MagicNames.TASKDEF_PROPERTIES_RESOURCE;", "-", "-        InputStream in = null;", "-        try {", "-            Properties props = new Properties();", "-            in = this.getClass().getResourceAsStream(dataDefs);", "-            if (in == null) {", "-                throw new BuildException(ERROR_NO_TASK_LIST_LOAD);", "-            }", "-            props.load(in);", "-", "-            Enumeration e = props.propertyNames();", "-            while (e.hasMoreElements()) {", "-                String name = (String) e.nextElement();", "-                String className = props.getProperty(name);", "-                AntTypeDefinition def = new AntTypeDefinition();", "-                def.setName(name);", "-                def.setClassName(className);", "-                def.setClassLoader(classLoader);", "-                def.setAdaptToClass(Task.class);", "-                def.setAdapterClass(TaskAdapter.class);", "-                antTypeTable.put(name, def);", "-            }", "-        } catch (IOException ex) {", "-            throw new BuildException(ERROR_NO_TASK_LIST_LOAD);", "-        } finally {", "-            FileUtils.close(in);", "+        ClassLoader classLoader = getClassLoader(null);", "+        Properties props = getDefaultDefinitions(false);", "+        Enumeration e = props.propertyNames();", "+        while (e.hasMoreElements()) {", "+            String name = (String) e.nextElement();", "+            String className = props.getProperty(name);", "+            AntTypeDefinition def = new AntTypeDefinition();", "+            def.setName(name);", "+            def.setClassName(className);", "+            def.setClassLoader(classLoader);", "+            def.setAdaptToClass(Task.class);", "+            def.setAdapterClass(TaskAdapter.class);", "+            antTypeTable.put(name, def);"]}]}