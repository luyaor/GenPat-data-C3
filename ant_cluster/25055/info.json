{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb9c6ae6c25319df5ca896c2497e01fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5502b60cf7360ceaf9ffa75f2d0a21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "c9b993c41d442ba16b68f0a6e54c770044ff7a01", "commitAfterChange": "33c937a716a5c4684fa45fa7da0800e3a85d068b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected ExecuteStreamHandler createStreamHandler()", "signatureAfterChange": "     protected void setupStreamHandler( final Execute exe )", "diff": ["-    protected ExecuteStreamHandler createStreamHandler()", "+    protected void setupStreamHandler( final Execute exe )", "-        // write the report directtly to an XML stream", "-        // return new MMetricsStreamHandler(this, xmlStream);", "-        return new LogStreamHandler( this, Project.MSG_INFO, Project.MSG_INFO );", "+        exe.setOutput( new LogOutputStream( this, Project.MSG_INFO ) );", "+        exe.setError( new LogOutputStream( this, Project.MSG_INFO ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "547dad9b0c0c376024badf8d9af3a87f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "c9b993c41d442ba16b68f0a6e54c770044ff7a01", "commitAfterChange": "33c937a716a5c4684fa45fa7da0800e3a85d068b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected ExecuteStreamHandler createStreamHandler()", "signatureAfterChange": "     protected void setupStreamHandler( final Execute exe )", "diff": ["-    protected ExecuteStreamHandler createStreamHandler()", "+    protected void setupStreamHandler( final Execute exe )", "-        // write the report directtly to an XML stream", "-        // return new MMetricsStreamHandler(this, xmlStream);", "-        return new LogStreamHandler( this, Project.MSG_INFO, Project.MSG_INFO );", "+        exe.setOutput( new LogOutputStream( this, Project.MSG_INFO ) );", "+        exe.setError( new LogOutputStream( this, Project.MSG_INFO ) );"]}]}