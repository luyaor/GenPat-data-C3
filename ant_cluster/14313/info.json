{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "671d2c333c725b0143dced1c7dbc7ab4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "300aeaa9d3c79d9c36901f7edec9ed18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "47fda4e266b13c57fe161e39c87f21096de69e7c", "commitAfterChange": "8f488f0872a795638f9ebbc51517f85d801c1b67", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "signatureAfterChange": "     private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "diff": ["-        if (nc == null && parent instanceof DynamicElementNS) {", "-            DynamicElementNS dc = (DynamicElementNS) parent;", "+        if (nc == null &&", "+            (parent instanceof DynamicElementNS", "+             || parent instanceof DynamicElement)", "+            ) {", "-            final Object nestedElement = dc.createDynamicElement(", "-                    child == null ? \"\" : child.getNamespace(), name, qName);", "-            if (nestedElement != null) {", "-                nc = new NestedCreator(null) {", "-                    Object create(Project project, Object parent, Object ignore) {", "-                        return nestedElement;", "-                    }", "-                };", "-            }", "-        }", "-        if (nc == null && parent instanceof DynamicElement) {", "-            DynamicElement dc = (DynamicElement) parent;", "-            final Object nestedElement = dc.createDynamicElement(name.toLowerCase(Locale.US));", "+            final Object nestedElement =", "+                createDynamicElement(parent,", "+                                     child == null ? \"\" : child.getNamespace(),", "+                                     name, qName);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e745a3dfa33c240a8dfb9e8d543bf58c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "149ce34431423cd116e5d7175ff281c30565aa6a", "commitAfterChange": "5460755b447223e93e926e11a08e4df4f0e0ddb5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,         String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,         String elementName) throws BuildException", "diff": ["-        NestedCreator nc = (NestedCreator) nestedCreators.get(elementName);", "-        if (nc == null && addTypeMethods.size() > 0) {", "-            Object nestedElement = createAddTypeElement(", "-                project, parent, elementName);", "-            if (nestedElement != null) {", "-                if (project != null) {", "-                    project.setProjectReference(nestedElement);", "-                }", "-                return nestedElement;", "-            }", "-        }", "-        if (nc == null && parent instanceof DynamicConfigurator) {", "-            DynamicConfigurator dc = (DynamicConfigurator) parent;", "-            Object nestedElement = dc.createDynamicElement(elementName);", "-            if (nestedElement != null) {", "-                if (project != null) {", "-                    project.setProjectReference(nestedElement);", "-                }", "-                return nestedElement;", "-            }", "-        }", "-        if (nc == null) {", "-            throwNotSupported(project, parent, elementName);", "-        }", "+        NestedCreator nc = getNestedCreator(project, parent, elementName);", "-            Object nestedElement = nc.create(parent);", "+            Object nestedElement = nc.create(project, parent, null);", "+    }"]}]}