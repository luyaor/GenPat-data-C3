{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4aa2f5303f6f5efe23b10951d29f6061", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b00c3ec0f61adbb00dad46f7ddb25b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/xdocs/src/org/apache/tools/ant/xdoclet/AntTagsHandler.java", "commitBeforeChange": "6252354506953777f5b921b8746a54e7d317475a", "commitAfterChange": "5578d94e01cf5b036fa71ca974c9dfb43d6f1438", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private MethodDoc[] getElementMethods(ClassDoc cur_class) throws XDocletException", "signatureAfterChange": "     private MethodDoc[] getElementMethods(ClassDoc cur_class) throws XDocletException", "diff": ["+            // ensure if there are no parameters, there is a return type,", "+            // otherwise ensure there's only one parameter.", "+            Parameter[] params = methods[i].parameters();", "+            if (params.length == 0) {", "+                if (methods[i].returnType().asClassDoc() == null) {", "+                    continue;", "+                }", "+            }", "+            else if (params.length != 1) {", "+                continue;", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e37c3b9ea64e28e2190079a733d9571", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "49838c297a517c9532c729e2af1e9e461bdd9af1", "commitAfterChange": "059ad359164e376960bc91ee4bce1e47abb3ef45", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void run(CommandlineJava command) throws BuildException", "signatureAfterChange": "     private void run(CommandlineJava command) throws BuildException", "diff": ["-                exe.setOutput(new PrintStream(new FileOutputStream(out)));", "+                outStream = new PrintStream(new FileOutputStream(out));", "+                exe.execute(project);", "+            finally {", "+                if (outStream != null) {", "+                    outStream.close();", "+                }", "+            }", "-        ", "-        exe.execute(project);", "+        else {", "+            exe.execute(project);", "+        }"]}]}