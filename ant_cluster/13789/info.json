{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e05eb5261a2d4dceb1e4567b735b888d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eab59fd5ced216e3d0020e383f7832a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     private void printUnknownDefinition(PrintWriter out, String componentName, String dirListing)", "signatureAfterChange": "     private void printUnknownDefinition(PrintWriter out, String componentName, String dirListing)", "diff": ["-            List matches = antTypeTable.findMatches(uri);", "+            final List<AntTypeDefinition> matches = findTypeMatches(uri);", "-                for (Iterator it = matches.iterator(); it.hasNext();) {", "-                    AntTypeDefinition def = (AntTypeDefinition) it.next();", "+                for (AntTypeDefinition def : matches) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9d7723763f528e560967714045321f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-                    for (Iterator attrs = ((MacroInstance) target).getMacroDef().getAttributes().iterator(); attrs.hasNext();) {", "-                        MacroDef.Attribute attr = (MacroDef.Attribute) attrs.next();", "+                    for (Attribute attr : ((MacroInstance) target).getMacroDef().getAttributes()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b1318b5d10b0405c7d7cd5e280bcdf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized boolean isFilesystemOnly()", "signatureAfterChange": "     public synchronized boolean isFilesystemOnly()", "diff": ["-        for (Iterator i = rc.iterator(); goEarly && i.hasNext();) {", "-            goEarly = ((ResourceCollection) i.next()).isFilesystemOnly();", "+        for (Iterator<ResourceCollection> i = rc.iterator(); goEarly && i.hasNext();) {", "+            goEarly = i.next().isFilesystemOnly();", "-        for (Iterator i = cacheCollection().iterator(); i.hasNext();) {", "-            Resource r = (Resource) i.next();", "+        for (Resource r : cacheCollection()) {"]}]}