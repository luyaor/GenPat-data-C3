{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cda582121ea95f102f8bdcabf4955a7e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f786eba58484db8a78b2b7cfbb88c87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "640b7f41f039dd3ef8e41c5af7d86c201918d09a", "commitAfterChange": "35845f7053e12288a95bf9720532d772ea2fa60b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void runExecute(Execute exe) throws IOException", "signatureAfterChange": "     protected final void runExecute(Execute exe) throws IOException", "diff": ["-        returnCode = exe.execute();", "+        if (!spawn) {", "+            returnCode = exe.execute();", "-        //test for and handle a forced process death", "-        if (exe.killedProcess()) {", "-            log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "-        }", "-        maybeSetResultPropertyValue(returnCode);", "-        if (Execute.isFailure(returnCode)) {", "-            if (failOnError) {", "-                throw new BuildException(getTaskType() + \" returned: \"", "-                    + returnCode, getLocation());", "-            } else {", "-                log(\"Result: \" + returnCode, Project.MSG_ERR);", "+            //test for and handle a forced process death", "+            if (exe.killedProcess()) {", "+                log(\"Timeout: killed the sub-process\", Project.MSG_WARN);", "+            maybeSetResultPropertyValue(returnCode);", "+            if (Execute.isFailure(returnCode)) {", "+                if (failOnError) {", "+                    throw new BuildException(getTaskType() + \" returned: \"", "+                        + returnCode, getLocation());", "+                } else {", "+                    log(\"Result: \" + returnCode, Project.MSG_ERR);", "+                }", "+            }", "+            redirector.complete();", "+        } else {", "+            exe.spawn();", "-        redirector.complete();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c085e553746bb4f9391dddc4c4b4d5aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/ExecTask.java", "commitBeforeChange": "e9c239163f7e4e2f121dd86b51c075976181b3c9", "commitAfterChange": "5b93763d5174da45c49c795fb52205f946585139", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected final void runExecute( Execute exe )         throws IOException, TaskException", "signatureAfterChange": "     protected final void runExecute( final Execute exe )         throws IOException, TaskException", "diff": ["-    protected final void runExecute( Execute exe )", "+    protected final void runExecute( final Execute exe )", "-        int err = -1;// assume the worst", "+        final int err = exe.execute();", "-        err = exe.execute();", "-            log( \"Timeout: killed the sub-process\", Project.MSG_WARN );", "+            getLogger().warn( \"Timeout: killed the sub-process\" );", "-        if( err != 0 )", "+        if( 0 != err )", "-            if( failOnError )", "-            {", "-                throw new TaskException( getName() + \" returned: \" + err );", "-            }", "-            else", "-            {", "-                log( \"Result: \" + err, Project.MSG_ERR );", "-            }", "+            throw new TaskException( getName() + \" returned: \" + err );", "-        if( baos != null )", "+", "+        if( null != m_byteArrayOutput )", "-            BufferedReader in =", "-                new BufferedReader( new StringReader( baos.toString() ) );", "-            String line = null;", "-            StringBuffer val = new StringBuffer();", "-            while( ( line = in.readLine() ) != null )", "-            {", "-                if( val.length() != 0 )", "-                {", "-                    val.append( lSep );", "-                }", "-                val.append( line );", "-            }", "-            setProperty( outputprop, val.toString() );", "+            writeResultToProperty();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafdba5412d42598623990edce9ed168", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/ExecTask.java", "commitBeforeChange": "e9c239163f7e4e2f121dd86b51c075976181b3c9", "commitAfterChange": "5b93763d5174da45c49c795fb52205f946585139", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected final void runExecute( Execute exe )         throws IOException, TaskException", "signatureAfterChange": "     protected final void runExecute( final Execute exe )         throws IOException, TaskException", "diff": ["-    protected final void runExecute( Execute exe )", "+    protected final void runExecute( final Execute exe )", "-        int err = -1;// assume the worst", "+        final int err = exe.execute();", "-        err = exe.execute();", "-            log( \"Timeout: killed the sub-process\", Project.MSG_WARN );", "+            getLogger().warn( \"Timeout: killed the sub-process\" );", "-        if( err != 0 )", "+        if( 0 != err )", "-            if( failOnError )", "-            {", "-                throw new TaskException( getName() + \" returned: \" + err );", "-            }", "-            else", "-            {", "-                log( \"Result: \" + err, Project.MSG_ERR );", "-            }", "+            throw new TaskException( getName() + \" returned: \" + err );", "-        if( baos != null )", "+", "+        if( null != m_byteArrayOutput )", "-            BufferedReader in =", "-                new BufferedReader( new StringReader( baos.toString() ) );", "-            String line = null;", "-            StringBuffer val = new StringBuffer();", "-            while( ( line = in.readLine() ) != null )", "-            {", "-                if( val.length() != 0 )", "-                {", "-                    val.append( lSep );", "-                }", "-                val.append( line );", "-            }", "-            setProperty( outputprop, val.toString() );", "+            writeResultToProperty();", "+    }"]}]}