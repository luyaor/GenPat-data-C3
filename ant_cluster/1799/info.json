{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72a51509f9bcbc18fc61fc69e03915cb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12dc26329c1914e756cab0a6ae296a61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "6f56a472615800182acf303da5c6358dbe59ed90", "commitAfterChange": "82642e35ebe6e92921f240333be4241122adf2ce", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         protected Map scan(Resource[] resources, File toDir)", "signatureAfterChange": "         protected Map scan(Resource[] resources, File toDir)", "diff": ["-            Map m = super.scan(resources, toDir);", "-", "-            Iterator iter = m.keySet().iterator();", "-            while (iter.hasNext()) {", "-                nonOrphans.add(((Resource) iter.next()).getName());", "+            for (int i = 0; i < resources.length; i++) {", "+                nonOrphans.add(resources[i].getName());", "-            return m;", "+            return super.scan(resources, toDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc93f4e06f5cf5baeeb7a6b2b366744", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "e713682ea69123ef5ca4935776b817a2b81645cf", "commitAfterChange": "695ce2ed1c7ffb7ce113fcdc05d12cd70abad525", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "     protected void fireTaskFinished(Task task, Throwable exception)", "signatureAfterChange": "     protected void fireTaskFinished(Task task, Throwable exception)", "diff": ["-        Iterator iter = listeners.iterator();", "-        while (iter.hasNext()) {", "-            BuildListener listener = (BuildListener) iter.next();", "-            listener.taskFinished(event);", "+        BuildListener[] currListeners = listeners;", "+        for (int i=0; i<currListeners.length; i++) {", "+        \tcurrListeners[i].targetFinished(event);", "+"]}]}