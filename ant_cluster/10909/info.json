{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53172484b26ab66aa02d6b8e39dc72cc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8658dd891ce9bcd254ececdfeaea41ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "f2a501a5cc401b98c0f1665b3e525c6384be61ae", "commitAfterChange": "bd0662b8fa0d69a8129ea1089518b146e77c6abd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public File normalize(String path)", "signatureAfterChange": "     public File normalize(String path)", "diff": ["-        if (!path.startsWith(File.separator) &&", "-            ! (path.length() >= 2 &&", "-               Character.isLetter(path.charAt(0)) &&", "-               path.charAt(1) == ':')", "-            ) {", "-            String msg = path + \" is not an absolute path\";", "-            throw new BuildException(msg);", "+        int colon = path.indexOf(\":\");", "+", "+        if (!onNetWare) {", "+            if (!path.startsWith(File.separator) &&", "+                ! (path.length() >= 2 &&", "+                   Character.isLetter(path.charAt(0)) &&", "+                   colon == 1)", "+                ) {", "+                String msg = path + \" is not an absolute path\";", "+                throw new BuildException(msg);", "+            }", "+        } else {", "+            if (!path.startsWith(File.separator) &&", "+                (colon == -1)", "+                ) {", "+                String msg = path + \" is not an absolute path\";", "+                throw new BuildException(msg);", "+            }", "-        if (path.length() >= 2 &&", "-            Character.isLetter(path.charAt(0)) &&", "-            path.charAt(1) == ':') {", "+        if ((!onNetWare && ", "+             path.length() >= 2 &&", "+             Character.isLetter(path.charAt(0)) &&", "+             path.charAt(1) == ':') ||", "+            (onNetWare && colon > -1)", "+            ) {", "-            StringBuffer sb = new StringBuffer();", "-            sb.append(Character.toUpperCase(ca[0])).append(':');", "+            StringBuffer sbRoot = new StringBuffer();", "+            for (int i = 0; i < colon; i++) {", "+                sbRoot.append(Character.toUpperCase(ca[i]));", "+            }", "+            sbRoot.append(':');", "+            if (colon + 1 < path.length()) {", "+                sbRoot.append(File.separatorChar);", "+            }", "+            root = sbRoot.toString();", "-            for (int i = 2; i < ca.length; i++) {", "+            // Eliminate consecutive slashes after the drive spec", "+            StringBuffer sbPath = new StringBuffer();", "+            for (int i = colon+1; i < ca.length; i++) {", "-                    sb.append(ca[i]);", "+                    sbPath.append(ca[i]);", "-", "-            path = sb.toString().replace('\\\\', File.separatorChar);", "-            if (path.length() == 2) {", "-                root = path;", "-                path = \"\";", "-            } else {", "-                root = path.substring(0, 3);", "-                path = path.substring(3);", "-            }", "+            path = sbPath.toString().replace('\\\\', File.separatorChar);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "909cdb6c6fad821d1665e695890e69a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "b04c338caa73cc14ad6e8b258280426c3522de38", "commitAfterChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public static boolean isAbsolutePath(String filename)", "signatureAfterChange": "     public static boolean isAbsolutePath(String filename)", "diff": ["-        if (filename.startsWith(File.separator)) {", "-            // common for all os", "-            return true;", "+        int len = filename.length();", "+        if (len == 0) {", "+            return false;", "-        if (onDos && filename.length() >= 2", "-            && Character.isLetter(filename.charAt(0))", "-            && filename.charAt(1) == ':') {", "-            // Actually on windows the : must be followed by a \\ for", "-            // the path to be absolute, else the path is relative", "-            // to the current working directory on that drive.", "-            // (Every drive may have another current working directory)", "-            return true;", "+        char sep = File.separatorChar;", "+        filename = filename.replace('/', sep).replace('\\\\', sep);", "+        char c = filename.charAt(0);", "+        if (!(onDos || onNetWare)) {", "+            return (c == sep);", "-        return (onNetWare && filename.indexOf(\":\") > -1);", "+        if (c == sep) {", "+            if (!(onDos && len > 4 && filename.charAt(1) == sep)) {", "+                return false;", "+            }", "+            int nextsep = filename.indexOf(sep, 2);", "+            return nextsep > 2 && nextsep + 1 < len;", "+        }", "+        int colon = filename.indexOf(':');", "+        return (Character.isLetter(c) && colon == 1", "+            && filename.length() > 2 && filename.charAt(2) == sep)", "+            || (onNetWare && colon > 0);"]}]}