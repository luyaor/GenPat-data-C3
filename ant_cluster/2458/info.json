{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddd4c8b40ac08abce9de8d1f88ee4e4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2de0b688f7f299d9b1313506172ca2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarUtils.java", "commitBeforeChange": "b43f4224d8fe9d1e7d628e88df394a7dfed46d1b", "commitAfterChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public static int getCheckSumOctalBytes(long value, byte[] buf, int offset, int length)", "signatureAfterChange": "     public static int formatCheckSumOctalBytes(final long value, byte[] buf, final int offset, final int length)", "diff": ["-    public static int getCheckSumOctalBytes(long value, byte[] buf, int offset, int length) {", "-        getOctalBytes(value, buf, offset, length);", "+    public static int formatCheckSumOctalBytes(final long value, byte[] buf, final int offset, final int length) {", "-        buf[offset + length - 1] = (byte) ' ';", "-        buf[offset + length - 2] = 0;", "+        int idx=length-2; // for NUL and space", "+        formatUnsignedOctalString(value, buf, offset, idx);", "+", "+        buf[offset + idx++]   = 0; // Trailing null", "+        buf[offset + idx]     = (byte) ' '; // Trailing space"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8ffdc85713f37ccb12513de8013b0a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "c341e8606d84afbac9fbe08b9814bbb0bf826e3b", "commitAfterChange": "a6e42833f664835fa3f5352d379e3ec520d54eab", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "     protected void zipDir(File dir, ZipOutputStream zOut, String vPath,                           int mode, ZipExtraField[] extra)         throws IOException", "signatureAfterChange": "     protected void zipDir(Resource dir, ZipOutputStream zOut, String vPath,                           int mode, ZipExtraField[] extra)         throws IOException", "diff": ["+     */", "+    protected void zipDir(Resource dir, ZipOutputStream zOut, String vPath,", "-            if (dir != null && dir.exists()) {", "-                // ZIPs store time with a granularity of 2 seconds, round up", "-                ze.setTime(dir.lastModified() + (roundUp ? ROUNDUP_MILLIS : 0));", "+", "+            // ZIPs store time with a granularity of 2 seconds, round up", "+            int millisToAdd = roundUp ? ROUNDUP_MILLIS : 0;", "+", "+            if (dir != null && dir.isExists()) {", "+                ze.setTime(dir.getLastModified() + millisToAdd);", "-                // ZIPs store time with a granularity of 2 seconds, round up", "-                ze.setTime(System.currentTimeMillis()", "-                           + (roundUp ? ROUNDUP_MILLIS : 0));", "+                ze.setTime(System.currentTimeMillis() + millisToAdd);"]}]}