{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cd1680570f89510a758be843f9ccbf7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfac248054b2096fc6c4ee36cf9de4ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void argBuildFile(String url) throws FrontendException", "signatureAfterChange": "     private void argBuild(String buildSource)", "diff": ["-    private void argBuildFile(String url) throws FrontendException {", "-        try {", "-            if (url.indexOf(\":\") == -1) {", "-                // We convert any hash characters to their URL escape.", "-                buildFileURL = InitUtils.getFileURL(new File(url));", "-            } else {", "-                buildFileURL = new URL(url);", "-            }", "-        } catch (MalformedURLException e) {", "-            throw new FrontendException(\"Build file is not valid\", e);", "-        }", "+    private void argBuild(String buildSource) {", "+        this.buildSource = buildSource;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e182a5e287bcfdb1bd9caff1c3ac6346", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "c8ae289ddd72e9f5858612fba38393a3c8698c27", "commitAfterChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext taskContext )         throws TaskException", "signatureAfterChange": "     protected final void doConfigure( final Task task,                                       final Configuration taskModel,                                       final TaskContext taskContext )         throws ConfigurationException", "diff": ["-        throws TaskException", "+        throws ConfigurationException", "-        try", "-        {", "-            m_configurer.configure( task, taskModel, taskContext );", "-        }", "-        catch( final Throwable throwable )", "-        {", "-            final String message =", "-                REZ.getString( \"config.error\",", "-                               taskModel.getName(),", "-                               taskModel.getLocation() );", "-            throw new TaskException( message, throwable );", "-        }", "+        m_configurer.configure( task, taskModel, taskContext );"]}]}