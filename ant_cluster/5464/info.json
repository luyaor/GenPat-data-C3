{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d6c70db96a8106f04a707a094a09cea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40df10de3c42d5bacdf5a024a19719e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSDocumentType.java", "commitBeforeChange": "53ddc59eccb9ca398bcc74db1fc1577bde5b7d45", "commitAfterChange": "4c0c12c0f70aab990d7aefae3ab82d92d24c7cef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void init()", "signatureAfterChange": "     public void init()", "diff": ["-            // Create the default xml file", "-            InputSource xmldoc = new InputSource(", "-                new ByteArrayInputStream(XMLDOC.getBytes()));", "+            String coreDoc = XMLDOC_1 + DTD_1 + XMLDOC_2;", "+            String optionalDoc = XMLDOC_1 + DTD_2 + XMLDOC_2;", "-            // Parse the document", "-            p.parse(xmldoc);", "+            // Parse the core task DTD", "+            elementMap = coreElementMap;", "+            InputSource xmldocCore = new InputSource(", "+                new ByteArrayInputStream(coreDoc.getBytes()));", "+            p.parse(xmldocCore);", "+            ", "+            // Parse the core task DTD", "+            elementMap = optionalElementMap;", "+            InputSource xmldocOptional = new InputSource(", "+                new ByteArrayInputStream(optionalDoc.getBytes()));", "+            p.parse(xmldocOptional);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bec7638a2e17f4bf5edd05f598fb9bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/extensions/DefaultExtensionManager.java", "commitBeforeChange": "3715ce688fac323bd2b6407f2446f577931ca18a", "commitAfterChange": "a1e045b36e763acef3fc6c4911d85ada8bef9814", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void initialize()         throws Exception", "signatureAfterChange": "      public void initialize()         throws Exception", "diff": ["+", "+        final Extension extension = createToolsExtension();", "+        final File jar = getToolsJar();", "+        final Extension[] available = new Extension[]{extension};", "+        final Extension[] required = new Extension[ 0 ];", "+        final OptionalPackage toolsPackage = new OptionalPackage( jar, available, required );", "+        cacheOptionalPackage( toolsPackage );"]}]}