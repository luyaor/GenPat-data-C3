{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77fb03a16bf2d10ff80ad7fb7d8e714d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebbba64a9a1a2428c91da7d87061ff93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "9668d399a7d0f7d3fe9fc7e9e97f29f6875dd387", "commitAfterChange": "aa90e61cd6f106951cdb233ec6178af0b92cf79c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "           private static void closeQuietly(Object o)", "signatureAfterChange": "     public static void close(Writer device)", "diff": ["-    ", "-    private static void closeQuietly(Object o) {", "-        if (null == o) {", "-            return;", "-        }", "-        try {", "-            if(ReflectUtil.respondsTo(o, \"close\")) {", "-                ReflectUtil.invoke(o, \"close\");", "-            }", "-        } catch(Exception e) {", "-            //ignore", "-        }    ", "-    }", "+        if(null != device){", "+            try {", "+                device.close();", "+            } catch (IOException e) {", "+                //ignore", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee94c47695caeee7453be84668c41fe7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java", "commitBeforeChange": "37fe632d837d518878c90f674153a6b7cd5adcfd", "commitAfterChange": "7fe322a2163dc184ea0223ca656de6c244985c87", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void runBuild(Project model, Map properties, List targets)          throws ExecutionException", "signatureAfterChange": "     public void runBuild(Object key, List targets) throws ExecutionException", "diff": ["-     */", "-    public void runBuild(Project model, Map properties, List targets)", "-         throws ExecutionException {", "-        Frame newFrame = frame.createFrame(model);", "-        newFrame.setInitialProperties(properties);", "-        newFrame.runBuild(targets);", "-    }", "+     */", "+    public void runBuild(Object key, List targets) throws ExecutionException {", "+        getSubbuildFrame(key).runBuild(targets);", "+        subBuilds.remove(key);", "+    }"]}]}