{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16c576cad1ffef2ee3559af23aeff8cd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe0ac8fd4f80bf58d5191418dc304f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "5eba0f2b035efcaa637d4f8c430e9ce07209fdc1", "commitAfterChange": "a4d5d0df1c8360e002472f85d9c95807a7557e20", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void send()", "signatureAfterChange": "   public void send()", "diff": ["-                    java.security.Provider p=(java.security.Provider)Class.forName( \"com.sun.net.ssl.internal.ssl.Provider\").newInstance();", "+                    Provider p", "+                        = (Provider) Class.forName(\"com.sun.net.ssl.internal.ssl.Provider\").newInstance();", "-                }", "-                catch (Exception e) {", "-                    throw new BuildException(\"could not instantiate ssl security provider, check that you have JSSE in your classpath\");", "+                } catch (Exception e) {", "+                    throw new BuildException(\"could not instantiate ssl \"", "+                        + \"security provider, check that you have JSSE in \"", "+                        + \"your classpath\");", "-                props.put( \"mail.smtp.socketFactory.class\", SSL_FACTORY);", "-                props.put( \"mail.smtp.socketFactory.fallback\", \"false\");", "+                props.put(\"mail.smtp.socketFactory.class\", SSL_FACTORY);", "+                props.put(\"mail.smtp.socketFactory.fallback\", \"false\");", "-            if (user==null && password == null) {", "+            if (user == null && password == null) {", "-            }", "-            else {", "+            } else {", "-                auth = new SimpleAuthenticator(user,password);", "-                sesh = Session.getInstance(props,auth);", "+                auth = new SimpleAuthenticator(user, password);", "+                sesh = Session.getInstance(props, auth);", "-            if(charset!=null) {", "-              // Assign/reassign message charset from MimeType", "+            if (charset != null) {", "+                // Assign/reassign message charset from MimeType", "-            }", "-            // Next: looking if charset having explict definition", "-            else {", "-              charset = message.getCharset();", "-              if(charset==null) {", "-                // Using default", "-                charset=defaultCharset;", "-                message.setCharset(charset);", "-              }", "+            } else {", "+                // Next: looking if charset having explict definition", "+                charset = message.getCharset();", "+                if (charset == null) {", "+                    // Using default", "+                    charset = DEFAULT_CHARSET;", "+                    message.setCharset(charset);", "+                }", "-            if (subject != null)", "-                msg.setSubject(subject,charset);", "+            if (subject != null) {", "+                msg.setSubject(subject, charset);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d43433083d8edc21aff7b8a40c036b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "e22d7c50937ee1d155f91bfd635673bd41017e76", "commitAfterChange": "95fa304e14c4cc49d84e089ea13107a35b68f8d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (dest == null && outFile == null) {", "+        if (dest == null) {", "-                \"Dest and/or the OutFile attribute \" +", "-                \"must be specified\");", "+                \"Dest attribute must be specified\");", "-        if (dest != null && dest.exists() && !dest.isDirectory()) {", "+        if (dest.exists() && !dest.isDirectory()) {", "-        }", "-", "-        if (verbose && outFile == null) {", "-            throw new BuildException(", "-                \"Verbose can be set only when OutFile is \" +", "-                \"specified\");", "-        try {", "-            if (outFile != null) {", "-                if (outFile.isDirectory()) {", "-                    throw new BuildException(\"Outfile \" + outFile", "-                        + \" must not be a directory.\");", "-                }", "-                if (!outFile.exists()) {", "-                    File parent = new File(outFile.getParent());", "-                    if (!parent.exists()) {", "-                        if (!parent.mkdirs()) {", "-                            throw new BuildException(\"Unable to create \"", "-                                + outFile);", "-                        }", "-                    }", "-                }", "-                fw = new FileWriter(outFile);", "-                bw = new BufferedWriter(fw);", "-                pw = new PrintWriter(bw, true);", "-            }", "-        } catch (IOException ioe) {", "-            throw new BuildException(ioe.getMessage(), location);", "-        }", "-                // get all the files in the descriptor directory", "-                DirectoryScanner ds = super.getDirectoryScanner(source);", "-", "-                String[] files = ds.getIncludedFiles();", "-                for (int i = 0; i < files.length; ++i) {", "-                    File file = new File(source, files[i]);", "-                    expandFile(fileUtils, file, dest);", "-                }", "-            }", "-            else {", "+                throw new BuildException(\"Src must not be a directory.\" +", "+                    \" Use nested filesets instead.\", location);", "+            } else {", "-        if (pw != null) {", "-            pw.close();", "-        }", "-        if (bw != null) {", "-            try {", "-                bw.close();", "-            } catch (IOException ioe1) {}", "-        }", "-        if (fw != null) {", "-            try {", "-                fw.close();", "-            } catch (IOException ioe1) {", "-                //Oh, well!  We did our best", "-            }", "-        }"]}]}