{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca37f33ef6d96d2d024920cd37e234cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7735f8b512ce0933e48758c867cb40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "8755079deed1216c03280efa6e3d4a52f7fdf368", "commitAfterChange": "49ac8075b87fecb96138ec2fd569af101aa80743", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+        String savedCommand = getCommand();", "+        Commandline cloned = null;", "-            this.cmd.createArgument(true).setLine(c);", "-            this.addConfiguredCommandline( this.cmd, true );", "+            cloned = (Commandline) cmd.clone();", "+            cloned.createArgument(true).setLine(c);", "+            this.addConfiguredCommandline(cloned, true);", "-        for( int i = 0; i < vecCommandlines.size(); i++ ) {", "-            this.runCommand( (Commandline)vecCommandlines.elementAt( i ) );", "+        try {", "+            for( int i = 0; i < vecCommandlines.size(); i++ ) {", "+                this.runCommand( (Commandline)vecCommandlines.elementAt( i ) );", "+            }", "+        } finally {", "+            if (cloned != null) {", "+                removeCommandline(cloned);", "+            }", "+            setCommand(savedCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ff6e7fbe49adc2253af54b16b88511", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "93d7ec1e6f5228de8a11f9453e2451b5febd8595", "commitAfterChange": "96501a8feaa68ecaf8e5587b3e2152c91d4afed7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-            String myos = System.getProperty(\"os.name\");", "-                cmdl.addArguments(s);", "-                exe.setCommandline(cmdl.getCommandline());", "+                String[] command = getCommandline(s);", "+                log(\"Executing \" + Commandline.toString(command), Project.MSG_VERBOSE);", "+                exe.setCommandline(command);", "-                String[] cmd = new String[cmdl.size()+1];", "-                System.arraycopy(cmdl.getCommandline(), 0, cmd, 0, cmdl.size());", "-                    cmd[cmdl.size()] = s[i];", "-                    exe.setCommandline(cmd);", "+                    String[] command = getCommandline(s[i]);", "+                    log(\"Executing \" + Commandline.toString(command), Project.MSG_VERBOSE);", "+                    exe.setCommandline(command);"]}]}