{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9805720ba2ae0ce77c87d3aa8329d45b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09311677bc55e5377527eb2fec56c84c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void write(PrintWriter writer) throws IOException", "signatureAfterChange": "     public void write(PrintWriter writer) throws IOException", "diff": ["-        String signatureVersion = mainSection.getAttributeValue(ATTRIBUTE_SIGNATURE_VERSION);", "+        String signatureVersion ", "+            = mainSection.getAttributeValue(ATTRIBUTE_SIGNATURE_VERSION);", "-            writer.println(ATTRIBUTE_SIGNATURE_VERSION + \": \" + signatureVersion);", "+            writer.println(ATTRIBUTE_SIGNATURE_VERSION + \": \" ", "+                + signatureVersion);", "+        ", "+        // add it back", "-                mainSection.addConfiguredAttribute(new Attribute(ATTRIBUTE_SIGNATURE_VERSION, signatureVersion));", "-            }", "-            catch (ManifestException e) {", "+                Attribute svAttr = new Attribute(ATTRIBUTE_SIGNATURE_VERSION, ", "+                    signatureVersion);", "+                mainSection.addConfiguredAttribute(svAttr);", "+            } catch (ManifestException e) {", "-        for (Enumeration e = sections.elements(); e.hasMoreElements();) {", "-            Section section = (Section)e.nextElement();", "+        Enumeration e = sectionIndex.elements();", "+        while (e.hasMoreElements()) {", "+            String sectionName = (String)e.nextElement();", "+            Section section = getSection(sectionName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a9b21ada0c5da2f023eb515520c8265", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "         public void write(PrintWriter writer) throws IOException", "signatureAfterChange": "         public void write(PrintWriter writer) throws IOException", "diff": ["-            for (Enumeration e = attributes.elements(); e.hasMoreElements();) {", "-                Object object = e.nextElement();", "-                if (object instanceof Attribute) {", "-                    Attribute attribute = (Attribute)object;", "-                    attribute.write(writer);", "-                }", "-                else {", "-                    Vector attrList = (Vector)object;", "-                    for (Enumeration e2 = attrList.elements(); e2.hasMoreElements();) {", "-                        Attribute attribute = (Attribute)e2.nextElement();", "-                        attribute.write(writer);", "-                    }", "-                }", "+            Enumeration e = getAttributeKeys();", "+            while (e.hasMoreElements()) {", "+                String key = (String)e.nextElement();", "+                Attribute attribute = getAttribute(key);", "+                attribute.write(writer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef154651761073707caf6650ff9e972c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void write(PrintWriter writer) throws IOException", "signatureAfterChange": "         public void write(PrintWriter writer) throws IOException", "diff": ["+            for (Enumeration e = getValues(); e.hasMoreElements();) {", "+                writeValue(writer, (String)e.nextElement());", "+            }", "+        }", "-                while (section.getBytes().length > MAX_LINE_LENGTH && breakIndex > 0) {", "-                    throw new IOException(\"Unable to write manifest line \" + name + \": \" + value);"]}]}