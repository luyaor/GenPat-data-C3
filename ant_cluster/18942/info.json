{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b755ddda772a64ab7e6b3d01b2bc4dee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd1433570acf5fbe217c8a0825e6557", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "1a702111eaa72f11467bcfb976ceb2910c1c913a", "commitAfterChange": "3396e7c32132e8bff2d50196131cf641ed8d1fb2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                                             + \"must be set!\", location);", "+                                             + \"must be set!\", getLocation());", "-                throw new BuildException(\"Source file does not exist!\", location);", "+                throw new BuildException(\"Source file does not exist!\", getLocation());", "-                DirectoryScanner ds = fs.getDirectoryScanner(project);", "-                File srcDir = fs.getDir(project);", "+                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "+                File srcDir = fs.getDir(getProject());", "-                throw new BuildException(e, location);", "+                throw new BuildException(e, getLocation());", "-                throw new BuildException(e, location);", "+                throw new BuildException(e, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96d916f674bc22b64e291ec68369ff4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class<?> arg,                                                   final String attrName)", "diff": ["-                                                  Class arg,", "+                                                  Class<?> arg,", "-        final Class reflectedArg = PRIMITIVE_TYPE_MAP.containsKey(arg)", "-            ? (Class) PRIMITIVE_TYPE_MAP.get(arg) : arg;", "+        final Class<?> reflectedArg = PRIMITIVE_TYPE_MAP.containsKey(arg)", "+            ? PRIMITIVE_TYPE_MAP.get(arg) : arg;", "-        Constructor c;", "+        Constructor<?> c;", "-            c = reflectedArg.getConstructor(new Class[] {Project.class, String.class});", "+            c = reflectedArg.getConstructor(Project.class, String.class);", "-                c = reflectedArg.getConstructor(new Class[] {String.class});", "+                c = reflectedArg.getConstructor(String.class);", "-        final Constructor finalConstructor = c;", "+        final Constructor<?> finalConstructor = c;"]}]}