{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c6012862fe166d21890f932ec57e0c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2314871bb1fface1f73ebc0c66b2ae99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MacroDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testImplicitExplicit()", "signatureAfterChange": "     @Test     public void testImplicitExplicit()", "diff": ["+    @Test", "-        expectSpecificBuildException(", "-            \"implicit.explicit\",", "-            \"Only one element allowed when using implicit elements\",", "-            \"Only one element allowed when using implicit elements\");", "+        try {", "+            buildRule.executeTarget(\"implicit.explicit\");", "+            fail(\"BuildException expected: Only one element allowed when using implicit elements\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"Only one element allowed when using implicit elements\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "655bfec71e8ec4a45f2ad13d9420141b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testConditionIncomplete()", "signatureAfterChange": "      @Test     public void testConditionIncomplete()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"condition-incomplete\",", "-                                     \"property attribute has been omitted\",", "-                                     \"The property attribute is required.\");", "+        try {", "+            buildRule.executeTarget(\"condition-incomplete\");", "+            fail(\"BuildException should have been thrown - property attribute has been omitted\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"The property attribute is required.\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a41a78d84f420dbcb8470f80cbc3563", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": "       public void testContainsIncomplete1()", "signatureAfterChange": "      @Test     public void testContainsIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"contains-incomplete1\",", "-                    \"Missing contains attribute\",", "-                    \"both string and substring are required in contains\");", "+        try {", "+            buildRule.executeTarget(\"contains-incomplete1\");", "+            fail(\"BuildException should have been thrown - Missing contains attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"both string and substring are required in contains\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd1a46d5f6a3e598bacc9352befe8df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MacroDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void testImplicitNotOptional()", "signatureAfterChange": "     @Test     public void testImplicitNotOptional()", "diff": ["+    @Test", "-        expectSpecificBuildException(", "-            \"implicit.notoptional\",", "-            \"Missing nested elements for implicit element implicit\",", "-            \"Missing nested elements for implicit element implicit\");", "+        try {", "+            buildRule.executeTarget(\"implicit.notoptional\");", "+            fail(\"BuildException expected: Missing nested elements for implicit element implicit\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"Missing nested elements for implicit element implicit\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec84595a64639aef520584519f5ec4f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 42, "signatureBeforeChange": "       public void testIsfalseIncomplete1()", "signatureAfterChange": "      @Test     public void testIsfalseIncomplete1()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"isfalse-incomplete\",", "-                    \"Missing attribute\",", "-                    \"Nothing to test for falsehood\");", "+        try {", "+            buildRule.executeTarget(\"isfalse-incomplete\");", "+            fail(\"BuildException should have been thrown - Missing attribute\");", "+        }  catch(BuildException ex) {", "+            assertEquals(\"Nothing to test for falsehood\", ex.getMessage());", "+        }"]}]}