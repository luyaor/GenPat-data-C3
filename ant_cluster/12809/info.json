{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "857f6281aa11a1438b7c993fb976efe6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86707769c2b7c47ec68fc818c65d004b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "087abe77e3929bc11311ae6f61999ce2bb798a24", "commitAfterChange": "73fde2c99d5e2a2a15ebe36d5a0b1f1eb439b427", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute( Project project, String target, TaskContext context )         throws TaskException", "signatureAfterChange": "     public void executeProject( final Project project, final String target )         throws TaskException", "diff": ["+    public void executeProject( final Project project, final String target )", "+        final ProjectEntry entry = getProjectEntry( project );", "+        executeTarget( \"<init>\", project.getImplicitTarget(), entry.getFrame() );", "+        execute( project, target, entry );", "-     */", "-    public void execute( Project project, String target, TaskContext context )", "-        execute( project, target, context, new ArrayList() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaffcc5859aec4c143c96d6faca670dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "e2cc34fa963ffa74a7e6dc7fa60d8ba32042b83c", "commitAfterChange": "7b867a10d26f96911855430e79c668df0e053cef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected final Project build( final File file, final Configuration configuration )         throws Exception", "signatureAfterChange": "     public Project build( final String source )         throws Exception", "diff": ["+    public Project build( final String source )", "+        final File file = new File( source );", "+        return build( file, new HashMap() );", "+    }", "-    protected final Project build( final File file, final Configuration configuration )", "-        if( !configuration.getName().equals(\"project\") )", "-        //build using all top-level attributes", "-        buildTopLevelProject( project, configuration );", "-"]}]}