{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "789f7846c290a131381ef9c1de1ba408", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e003463c6d58625afc4dc28b6f9629", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "0ceef36b9097f2061ce321b85b654eba2bd82e52", "commitAfterChange": "6d9e7cb56e1c3e3ffeedabf92486c9ff25054c9c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "diff": ["-        if (attributes.getSource() != null && !assumeJava13()) {", "-            cmd.createArgument().setValue(\"-source\");", "-            String source = attributes.getSource();", "-            cmd.createArgument().setValue(adjustSourceValue(source));", "-        } else if (!assumeJava13() && !assumeJava14()", "-                   && attributes.getTarget() != null) {", "-            String t = attributes.getTarget();", "-            String s = adjustSourceValue(t);", "-            if (mustSetSourceForTarget(t)) {", "-                setImplicitSourceSwitch(cmd, t, s);", "+        if (!assumeJava13()) { // -source added with JDK 1.4", "+            final String t = attributes.getTarget();", "+            if (attributes.getSource() != null) {", "+                cmd.createArgument().setValue(\"-source\");", "+                cmd.createArgument()", "+                    .setValue(adjustSourceValue(attributes.getSource()));", "+", "+            } else if (t != null && mustSetSourceForTarget(t)) {", "+                setImplicitSourceSwitch(cmd, t, adjustSourceValue(t));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1707db43b37cf1d4e39744693d350d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected  void executeFork() throws BuildException", "signatureAfterChange": "     protected  void executeForkV4() throws BuildException", "diff": ["-        try {", "-            log(\"mode : fork\");", "-            org.apache.tools.ant.taskdefs.ExecTask execTask = null;                ", "+    /** launch the generate client using system api */", "+    protected  void executeForkV4() throws BuildException {", "+        try {", "+", "+            log(\"mode : fork \"+BorlandDeploymentTool.BAS,Project.MSG_DEBUG);", "+", "+            org.apache.tools.ant.taskdefs.ExecTask execTask = null;", "-                       ", "+", "-                execTask.createArg().setValue(\"-trace\");                ", "-            } // end of if ()", "+                execTask.createArg().setValue(\"-trace\");", "+            }", "-            //", "-            log(\"Calling java2iiop\", Project.MSG_VERBOSE);", "-            execTask.execute();        ", "+            log(\"Calling iastool\", Project.MSG_VERBOSE);", "+            execTask.execute();", "-            String msg = \"Exception while calling generateclient Details: \" ", "+            String msg = \"Exception while calling generateclient Details: \""]}]}