{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "608f7b14844ed83236caef9ad37f7562", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbc20070baf17927a0cb1f90167010c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/Jikes.java", "commitBeforeChange": "1266e53bd199e68ea11ce1bcf38b58d8fc1ea0a1", "commitAfterChange": "3ef74849efee36e856e6a1a37199a13ee15499a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute() throws BuildException", "signatureAfterChange": "     public boolean execute() throws BuildException", "diff": ["+        addPropertyParams(cmd);", "+", "+        if (attributes.getSource() != null) {", "+            cmd.createArgument().setValue(\"-source\");", "+            String source = attributes.getSource();", "+            if (source.equals(\"1.1\") || source.equals(\"1.2\")) {", "+                // support for -source 1.1 and -source 1.2 has been", "+                // added with JDK 1.4.2, Jikes doesn't like it", "+                attributes.log(\"Jikes doesn't support '-source \" + source", "+                        + \"', will use '-source 1.3' instead\");", "+                cmd.createArgument().setValue(\"1.3\");", "+            } else {", "+                cmd.createArgument().setValue(source);", "+            }", "+        }", "+        addCurrentCompilerArgs(cmd);", "+", "+        int firstFileName = cmd.size();", "+", "+        Path boot = getBootClassPath();", "+        if (boot.size() > 0) {", "+            cmd.createArgument().setValue(\"-bootclasspath\");", "+            cmd.createArgument().setPath(boot);", "+        }", "+        logAndAddFilesToCompile(cmd);", "+", "+        return executeExternalCompile(cmd.getCommandline(), firstFileName) == 0;", "+    }", "-", "-        if (attributes.getSource() != null) {", "-            cmd.createArgument().setValue(\"-source\");", "-            String source = attributes.getSource();", "-            if (source.equals(\"1.1\") || source.equals(\"1.2\")) {", "-                // support for -source 1.1 and -source 1.2 has been", "-                // added with JDK 1.4.2, Jikes doesn't like it", "-                attributes.log(\"Jikes doesn't support '-source \" + source", "-                        + \"', will use '-source 1.3' instead\");", "-                cmd.createArgument().setValue(\"1.3\");", "-            } else {", "-                cmd.createArgument().setValue(source);", "-            }", "-        }", "-        addCurrentCompilerArgs(cmd);", "-", "-        int firstFileName = cmd.size();", "-", "-        Path boot = getBootClassPath();", "-        if (boot.size() > 0) {", "-            cmd.createArgument().setValue(\"-bootclasspath\");", "-            cmd.createArgument().setPath(boot);", "-        }", "-        logAndAddFilesToCompile(cmd);", "-", "-        return executeExternalCompile(cmd.getCommandline(), firstFileName) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd169fa5f78f099785508345bc5fbf84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "3fce5ce0142330b06cb5ad940808d4d0b42c56e2", "commitAfterChange": "242af536519aef1a43fdce2fdb383762fb5b6ccc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "-", "-        Commandline toExecute = new Commandline();", "-", "-        toExecute.setExecutable(\"cvs\");", "-        if (cvsRoot != null) {", "-            toExecute.createArgument().setValue(\"-d\");", "-            toExecute.createArgument().setValue(cvsRoot);", "-        }", "-        if (noexec) {", "-            toExecute.createArgument().setValue(\"-n\");", "-        }", "-        if (quiet) {", "-            toExecute.createArgument().setValue(\"-q\");", "-        }", "-", "-        toExecute.createArgument().setLine(command);", "-", "-        //", "-        // get the other arguments.", "-        //", "-        toExecute.addArguments(cmd.getCommandline());", "-", "-        if (cvsPackage != null) {", "-            toExecute.createArgument().setLine(cvsPackage);", "-        }", "-", "-        if(port>0){", "-        if(passFile!=null){", "-        if(cvsRsh!=null){", "-            log(\"Executing: \" + executeToString(exe), Project.MSG_DEBUG);", "-", "-                throw new BuildException(\"cvs exited with error code \"+ retCode);", "-            throw new BuildException(e, location);", "-", "+", "+    public void execute() throws BuildException {", "+", "+", "+        if( this.getCommand() == null", "+            && vecCommandlines.size() == 0 ) {", "+            // re-implement legacy behaviour:", "+            this.setCommand( AbstractCvsTask.default_command );", "+        }", "+", "+        String c = this.getCommand();", "+        if( c != null ) {", "+            this.addConfiguredCommandline( this.cmd, true );", "+            this.cmd.createArgument().setLine(c);", "+        }", "+", "+        for( int i = 0; i < vecCommandlines.size(); i++ ) {", "+            this.runCommand( (Commandline)vecCommandlines.elementAt( i ) );"]}]}