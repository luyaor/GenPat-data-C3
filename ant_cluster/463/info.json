{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ea0ff1053edcc48ea331020082b49b4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dcfe7e1d7131fdade3ae3fe631193db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testJarWithManifestInNonAsciiDir()", "signatureAfterChange": "          @Test     public void testJarWithManifestInNonAsciiDir()", "diff": ["+    ", "+    @Test", "-        String mainjarstring = getProject().getProperty(\"main.jar.nonascii\");", "-        String extjarstring = getProject().getProperty(\"ext.jar.nonascii\");", "-        Path myPath = new Path(getProject());", "+        String mainjarstring = buildRule.getProject().getProperty(\"main.jar.nonascii\");", "+        String extjarstring = buildRule.getProject().getProperty(\"ext.jar.nonascii\");", "+        Path myPath = new Path(buildRule.getProject());", "-        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");", "-        loader = getProject().createClassLoader(myPath);", "+        buildRule.getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");", "+        loader = buildRule.getProject().createClassLoader(myPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf92458f5ca4b9f240b1ae83390651c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testJarWithManifestInDirWithSpace()", "signatureAfterChange": "     @Test     public void testJarWithManifestInDirWithSpace()", "diff": ["+    @Test", "-        String mainjarstring = getProject().getProperty(\"main.jar\");", "-        String extjarstring = getProject().getProperty(\"ext.jar\");", "-        Path myPath = new Path(getProject());", "+        String mainjarstring = buildRule.getProject().getProperty(\"main.jar\");", "+        String extjarstring = buildRule.getProject().getProperty(\"ext.jar\");", "+        Path myPath = new Path(buildRule.getProject());", "-        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");", "-        loader = getProject().createClassLoader(myPath);", "+        buildRule.getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");", "+        loader = buildRule.getProject().createClassLoader(myPath);"]}]}