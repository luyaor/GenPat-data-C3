{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0997150905db7870e4d7c066ce1ea779", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8caf88a5d14447fa2a26614fb97e553", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void setSizesAndOffsetFromZip64Extra(ZipEntry ze,                                                  OffsetEntry offset,                                                  int diskStart)         throws IOException", "signatureAfterChange": "     private void setSizesAndOffsetFromZip64Extra(final ZipEntry ze,                                                  final OffsetEntry offset,                                                  final int diskStart)         throws IOException", "diff": ["-    private void setSizesAndOffsetFromZip64Extra(ZipEntry ze,", "-                                                 OffsetEntry offset,", "-                                                 int diskStart)", "+    private void setSizesAndOffsetFromZip64Extra(final ZipEntry ze,", "+                                                 final OffsetEntry offset,", "+                                                 final int diskStart)", "-        Zip64ExtendedInformationExtraField z64 =", "+        final Zip64ExtendedInformationExtraField z64 =", "-            boolean hasUncompressedSize = ze.getSize() == ZIP64_MAGIC;", "-            boolean hasCompressedSize = ze.getCompressedSize() == ZIP64_MAGIC;", "-            boolean hasRelativeHeaderOffset =", "+            final boolean hasUncompressedSize = ze.getSize() == ZIP64_MAGIC;", "+            final boolean hasCompressedSize = ze.getCompressedSize() == ZIP64_MAGIC;", "+            final boolean hasRelativeHeaderOffset ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d51b60f2ee8104e4eab0c25b5e4c0610", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void deployFromDirectory( final Deployer deployer,                                       final File directory,                                       final FilenameFilter filter )         throws DeploymentException", "signatureAfterChange": "     private void deployFromDirectories( final Deployer deployer,                                         final File[] directories,                                         final FilenameFilter filter )         throws DeploymentException", "diff": ["-    private void deployFromDirectory( final Deployer deployer,", "-                                      final File directory,", "-                                      final FilenameFilter filter )", "+    private void deployFromDirectories( final Deployer deployer,", "+                                        final File[] directories,", "+                                        final FilenameFilter filter )", "-        final File[] files = directory.listFiles( filter );", "-", "-        if( null != files )", "+        for( int i = 0; i < directories.length; i++ )", "-            deployFiles( deployer, files );", "+            File directory = directories[i ];", "+            final File[] files = directory.listFiles( filter );", "+", "+            if( null != files )", "+            {", "+                deployFiles( deployer, files );", "+            }"]}]}