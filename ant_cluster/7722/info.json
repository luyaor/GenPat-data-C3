{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab44f113e717921d3c2a2dddabe89ebc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165f801b0ebb5dde8f36638cd54b329a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "95ce6ff3dc9a2e1f32c7456fecb190e4f164a726", "commitAfterChange": "758a6bcb93484d657bdd50c688c023a59d153476", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private InputStream getResourceStream(File file, String resourceName)", "signatureAfterChange": "     private InputStream getResourceStream(File file, String resourceName)", "diff": ["-            if (!file.exists()) {", "-                return null;", "-            }", "-", "-            if (file.isDirectory()) {", "+            ZipFile zipFile = (ZipFile) zipFiles.get(file);", "+            if (zipFile == null && file.isDirectory()) {", "-                // is the zip file in the cache", "-                ZipFile zipFile = (ZipFile) zipFiles.get(file);", "-                    zipFile = new ZipFile(file);", "-                    zipFiles.put(file, zipFile);", "+                    if (file.exists()) {", "+", "+                        zipFile = new ZipFile(file);", "+                        zipFiles.put(file, zipFile);", "+                    } else {", "+                        return null;", "+                    }", "-            log(\"Ignoring Exception \" + e.getClass().getName()", "-                + \": \" + e.getMessage() + \" reading resource \" + resourceName", "-                + \" from \" + file, Project.MSG_VERBOSE);", "+            log(\"Ignoring Exception \" + e.getClass().getName() + \": \"", "+                    + e.getMessage() + \" reading resource \" + resourceName", "+                    + \" from \" + file, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643899bed3824f119da7fbe3addbd440", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "792092f443a4ffa8039ff1fa4963446574310177", "commitAfterChange": "6cb11c4a231c055d9ed5f710f842ee190282c65c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "diff": ["+        ZipFile zf = null;", "-                inputStream = url.openStream();", "-                uri = url.toString(); // ?? OK ??", "+                uri = url.toString();", "+                int pling = -1;", "+                if (uri.startsWith(\"jar:file\")", "+                    && (pling = uri.indexOf(\"!\")) > -1) {", "+                    zf = new ZipFile(org.apache.tools.ant.launch.Locator", "+                                     .fromJarURI(uri), \"UTF-8\");", "+                    inputStream =", "+                        zf.getInputStream(zf.getEntry(uri.substring(pling + 1)));", "+                } else {", "+                    inputStream = url.openStream();", "+                }", "-            project.log(\"parsing buildfile \" + buildFileName + \" with URI = \" + uri,", "-                    Project.MSG_VERBOSE);", "+            project.log(\"parsing buildfile \" + buildFileName + \" with URI = \"", "+                        + uri + (zf != null ? \" from a zip file\" : \"\"),", "+                        Project.MSG_VERBOSE);", "+            ZipFile.closeQuietly(zf);"]}]}