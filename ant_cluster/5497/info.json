{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d85ebd011eb64abdfcaab3781bc02ad4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a815a8b6de55a765a9054211357192f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "37e1a669340af86ea163020ac3cec13cbd881b29", "commitAfterChange": "ce8272e144b8168b864015d2dd304410ebb236fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void transform() throws BuildException", "signatureAfterChange": "      public void transform() throws BuildException", "diff": ["-                        ", "-            if (NOFRAMES.equals(format)) {", "-                //createCascadingStyleSheet();", "-                createSinglePageSummary(root);", "-            } else {", "-                createFrameStructure();", "-                createCascadingStyleSheet();", "-                createPackageList(root);", "-                createClassList(root);", "-                createPackageOverview(root);", "-                createAllTestSuiteDetails(root);", "-                createAllPackageDetails(root);", "-            }", "+            XalanExecutor executor = XalanExecutor.newInstance(this);", "+            executor.execute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55d266f0108860cb9c7f64560c95f9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "37e1a669340af86ea163020ac3cec13cbd881b29", "commitAfterChange": "ce8272e144b8168b864015d2dd304410ebb236fc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void checkOptions() throws BuildException", "signatureAfterChange": "     protected void checkOptions() throws BuildException", "diff": ["-        if ( !FRAMES.equals(format) && !NOFRAMES.equals(format)) {", "-            throw new BuildException(\"Invalid format. Must be 'frames' or 'noframes' but was: '\" + format + \"'\");", "-        }", "-        // create the directories if needed", "-        if (!toDir.exists()) {", "-            if (!toDir.mkdirs()){", "-                throw new BuildException(\"Could not create directory \" + toDir);", "-            }", "+    }", "-    }"]}]}