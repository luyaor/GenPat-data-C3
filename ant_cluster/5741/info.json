{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03a52fd3322980b81272a033356c9e6e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c5e5762c6c5b3ecc4965018232ab1b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "4ac80ba4231ae3d99445fa0b1790ae9393d23cb5", "commitAfterChange": "f12aca5b440d96fc6b79546be69c47cb22f962a7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void cleanup()", "signatureAfterChange": "     private void cleanup()", "diff": ["-        Hashtable entries = (Hashtable) recorderEntries.get(getProject());", "-        if (null != entries) {", "-            entries.clear();", "-            recorderEntries.remove(entries);", "+        Hashtable entries = (Hashtable) recorderEntries.clone();", "+        Iterator itEntries = entries.entrySet().iterator();", "+        while (itEntries.hasNext()) {", "+            Map.Entry entry = (Map.Entry) itEntries.next();", "+            RecorderEntry re = (RecorderEntry) entry.getValue();", "+            if (re.getProject() == getProject()) {", "+                recorderEntries.remove(entry.getKey());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b92c3236e59a89154f39a7e02d18912", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "aeee70243a354c5951ec655556f8a1530e7713eb", "commitAfterChange": "ca5799fd8c1780abcc25f63745faf95bd2cdb06a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "signatureAfterChange": "     protected Object makeObject(UnknownElement ue, RuntimeConfigurable w)", "diff": ["-        Object o = makeTask(ue, w);", "+        ComponentHelper helper = ComponentHelper.getComponentHelper(", "+            getProject());", "+        String name = ue.getComponentName();", "+        Object o = helper.createComponent(ue, ue.getNamespace(), name);", "-            o = getProject().createDataType(ue.getTag());", "+            throw getNotFoundException(\"task or type\", name);", "-        if (o == null) {", "-            throw getNotFoundException(\"task or type\", ue.getTag());", "+        if (o instanceof Task) {", "+            Task task = (Task) o;", "+            task.setOwningTarget(getOwningTarget());", "+            task.init();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0b0d7b7a7ee62ca4b986b690d77e84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "7f44f839eb6961e0ce01e6813d36f674804df1fb", "commitAfterChange": "29866fce1d825832107184311f0a764b10efea07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 15, "signatureBeforeChange": "         private Xest(ResourceCollection rc, ResourceComparator c)", "signatureAfterChange": "      private Resource getXest(ResourceCollection rc, ResourceComparator c)", "diff": ["-    private static class Xest extends Sort {", "-        private Xest(ResourceCollection rc, ResourceComparator c) {", "-            super.add(c);", "-            super.add(rc);", "-        }", "+", "+    private Resource getXest(ResourceCollection rc, ResourceComparator c) {", "+        Iterator i = rc.iterator();", "+        if (!i.hasNext()) {", "+            return null;", "+", "+        }", "+        Resource xest = (Resource) i.next();", "+        while (i.hasNext()) {", "+            Resource next = (Resource) i.next();", "+            if (c.compare(xest, next) < 0) {", "+                xest = next;", "+            }", "+        }", "+        return xest;", "+    }"]}]}