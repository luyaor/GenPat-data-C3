{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a790c0e881c30e0f8c1fc045e40d9e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a1fe0802ce31a0ef36573839262412d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java", "commitBeforeChange": "a87db6897cde9e966d34343211266a421998e507", "commitAfterChange": "b689612fa923ba74b5c89dc891aeff801799e555", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void handleDataType( final Configuration datatype, final URL url )         throws DeploymentException, ConfigurationException", "signatureAfterChange": "      private void handleDataType( final Configuration datatype,                                   final URL url,                                   final DefaultComponentFactory factory )         throws DeploymentException, ConfigurationException", "diff": ["-    private void handleDataType( final Configuration datatype, final URL url )", "+    private void handleDataType( final Configuration datatype, ", "+                                 final URL url, ", "+                                 final DefaultComponentFactory factory )", "-        final String classname = datatype.getAttribute( \"classname\" );", "+        final String className = datatype.getAttribute( \"classname\" );", "-        final DefaultLocator info = new DefaultLocator( classname, url );", "+        final DefaultLocator info = new DefaultLocator( className, url );", "-        getLogger().debug( \"Registered datatype \" + name + \" as \" + classname );", "+        factory.addNameClassMapping( name, className );", "+        try { m_typeManager.registerType( Task.ROLE, name, factory ); }", "+        catch( final Exception e )", "+        {", "+            throw new DeploymentException( \"Error registering \" + name + \" due to \" + e, e );", "+        }", "+", "+        getLogger().debug( \"Registered datatype \" + name + \" as \" + className );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2aaeda219c596a522dca8325b9b9103", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultTskDeployer.java", "commitBeforeChange": "a87db6897cde9e966d34343211266a421998e507", "commitAfterChange": "b689612fa923ba74b5c89dc891aeff801799e555", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void handleTask( final Configuration task, final URL url )         throws DeploymentException, ConfigurationException", "signatureAfterChange": "      private void handleTask( final Configuration task,                               final URL url,                               final DefaultComponentFactory factory )         throws DeploymentException, ConfigurationException", "diff": ["-    private void handleTask( final Configuration task, final URL url )", "+    private void handleTask( final Configuration task, ", "+                             final URL url, ", "+                             final DefaultComponentFactory factory )", "-        final String classname = task.getAttribute( \"classname\" );", "+        final String className = task.getAttribute( \"classname\" );", "-        final DefaultLocator info = new DefaultLocator( classname, url );", "+        final DefaultLocator info = new DefaultLocator( className, url );", "-        getLogger().debug( \"Registered task \" + name + \" as \" + classname );", "+        factory.addNameClassMapping( name, className );", "+        ", "+        try { m_typeManager.registerType( Task.ROLE, name, factory ); }", "+        catch( final Exception e )", "+        {", "+            throw new DeploymentException( \"Error registering \" + name + \" due to \" + e, e );", "+        }", "+        ", "+        getLogger().debug( \"Registered task \" + name + \" as \" + className );"]}]}