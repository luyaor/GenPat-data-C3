{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac94d80a56bab5ff20679b22d33e8cae", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36530e58ab882909edeb05ae9e1f765c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/ExecTask.java", "commitBeforeChange": "e9c239163f7e4e2f121dd86b51c075976181b3c9", "commitAfterChange": "5b93763d5174da45c49c795fb52205f946585139", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setFailIfExecutionFails( boolean flag )", "signatureAfterChange": "      private void writeResultToProperty() throws IOException, TaskException", "diff": ["-     */", "-    public void setFailIfExecutionFails( boolean flag )", "-    {", "-        failIfExecFails = flag;", "-    }", "+", "+    private void writeResultToProperty() throws IOException, TaskException", "+    {", "+        final BufferedReader input =", "+            new BufferedReader( new StringReader( m_byteArrayOutput.toString() ) );", "+        String line = null;", "+        StringBuffer val = new StringBuffer();", "+        while( ( line = input.readLine() ) != null )", "+        {", "+            if( val.length() != 0 )", "+            {", "+                val.append( LINE_SEP );", "+            }", "+            val.append( line );", "+        }", "+        setProperty( m_outputProperty, val.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d8a24e7a4c823173442a2124263f0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/ExecTask.java", "commitBeforeChange": "e9c239163f7e4e2f121dd86b51c075976181b3c9", "commitAfterChange": "5b93763d5174da45c49c795fb52205f946585139", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setFailIfExecutionFails( boolean flag )", "signatureAfterChange": "      private void writeResultToProperty() throws IOException, TaskException", "diff": ["-     */", "-    public void setFailIfExecutionFails( boolean flag )", "-    {", "-        failIfExecFails = flag;", "-    }", "+", "+    private void writeResultToProperty() throws IOException, TaskException", "+    {", "+        final BufferedReader input =", "+            new BufferedReader( new StringReader( m_byteArrayOutput.toString() ) );", "+        String line = null;", "+        StringBuffer val = new StringBuffer();", "+        while( ( line = input.readLine() ) != null )", "+        {", "+            if( val.length() != 0 )", "+            {", "+                val.append( LINE_SEP );", "+            }", "+            val.append( line );", "+        }", "+        setProperty( m_outputProperty, val.toString() );"]}]}