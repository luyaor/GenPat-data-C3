{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5274c1c4fd69b870a8008e174d10b03a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a5c67a7a01d8e91c47d6fe14495d04", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void testLogfilePlacement()", "signatureAfterChange": "      @Test     public void testLogfilePlacement()", "diff": ["+    @Test", "-            getProject().resolveFile(\"test1.log\"),", "-            getProject().resolveFile(\"test2.log\"),", "-            getProject().resolveFile(\"ant/test3.log\"),", "-            getProject().resolveFile(\"ant/test4.log\")", "+            buildRule.getProject().resolveFile(\"test1.log\"),", "+            buildRule.getProject().resolveFile(\"test2.log\"),", "+            buildRule.getProject().resolveFile(\"ant/test3.log\"),", "+            buildRule.getProject().resolveFile(\"ant/test4.log\")", "-        executeTarget(\"testLogfilePlacement\");", "+        buildRule.executeTarget(\"testLogfilePlacement\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "288e84d47a8831d222e108248e634bef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/FilterSetTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public void testNestedFilterSets()", "signatureAfterChange": "          @Test     public void testNestedFilterSets()", "diff": ["+    @Test", "-        executeTarget(\"test-nested-filtersets\");", "+        buildRule.executeTarget(\"test-nested-filtersets\");", "-        FilterSet fs = (FilterSet) getProject().getReference(\"1\");", "+        FilterSet fs = (FilterSet) buildRule.getProject().getReference(\"1\");", "-        fs = (FilterSet) getProject().getReference(\"2\");", "+        fs = (FilterSet) buildRule.getProject().getReference(\"2\");", "-        fs = (FilterSet) getProject().getReference(\"3\");", "+        fs = (FilterSet) buildRule.getProject().getReference(\"3\");", "-        fs = (FilterSet) getProject().getReference(\"5\");", "+        fs = (FilterSet) buildRule.getProject().getReference(\"5\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42da70fafbc3b762d07b0dddd5de2b01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testFilenameAsParamNoSetting() throws Exception", "signatureAfterChange": "      @Test     public void testFilenameAsParamNoSetting() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testFilenameAsParamNoSetting\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='-not-set-'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='-not-set-'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='-not-set-'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='-not-set-'\");", "+        buildRule.executeTarget(\"testFilenameAsParamNoSetting\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='-not-set-'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='-not-set-'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='-not-set-'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='-not-set-'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79dbe8ba9448fdd0dd257377cd149fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testFilenameAsParam() throws Exception", "signatureAfterChange": "      @Test     public void testFilenameAsParam() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testFilenameAsParam\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='two.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='three.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='-not-set-'\");", "+        buildRule.executeTarget(\"testFilenameAsParam\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/two.txt\",      \"filename='two.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/three.txt\",    \"filename='three.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='-not-set-'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6bac6f37deed7b913cf922f0070615", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testFilenameAndFiledirAsParam() throws Exception", "signatureAfterChange": "      @Test     public void testFilenameAndFiledirAsParam() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testFilenameAndFiledirAsParam\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filedir ='.'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "-        assertFileContains(getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='dir'\");", "+        buildRule.executeTarget(\"testFilenameAndFiledirAsParam\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filename='one.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/one.txt\",      \"filedir ='.'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filename='four.xml'\");", "+        assertFileContains(buildRule.getOutputDir().getAbsoluteFile() + \"/dir/four.txt\", \"filedir ='dir'\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85504a78de87d23ba2be386f53bee9bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/AntClassLoaderTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testGetPackage() throws Exception", "signatureAfterChange": "      @Test     public void testGetPackage() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"prepareGetPackageTest\");", "-        Path myPath = new Path(getProject());", "-        myPath.setLocation(new File(getProject().getProperty(\"test.jar\")));", "-        getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");", "-        loader = getProject().createClassLoader(myPath);", "+        buildRule.executeTarget(\"prepareGetPackageTest\");", "+        Path myPath = new Path(buildRule.getProject());", "+        myPath.setLocation(new File(buildRule.getProject().getProperty(\"test.jar\")));", "+        buildRule.getProject().setUserProperty(\"build.sysclasspath\",\"ignore\");", "+        loader = buildRule.getProject().createClassLoader(myPath);"]}]}