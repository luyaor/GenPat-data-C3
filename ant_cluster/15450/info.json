{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92e305b5295ebf255f89f930bb5a2067", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17864bf2f2a7e6850258b034761138da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ExpandProperties.java", "commitBeforeChange": "439545ad279327179a54ef755850acbf0a33e648", "commitAfterChange": "b8c35567eee957064ae29052eae63ee1b4f9c7aa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public int read() throws IOException", "diff": ["-                buffer = new ParseProperties(project, PropertyHelper.getPropertyHelper(project)", "-                        .getExpanders(), getProperty).parseProperties(data).toString()", "-                        .toCharArray();", "+                Object expanded = new ParseProperties(project, PropertyHelper", "+                                                      .getPropertyHelper(project)", "+                                                      .getExpanders(),", "+                                                      getProperty)", "+                    .parseProperties(data);", "+                buffer = expanded == null ? new char[0]", "+                    : expanded.toString().toCharArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6715125ed650fc08a603142793a162", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java", "commitBeforeChange": "c5257beb082a74197e95fdd9cb6a7fb6d6d97534", "commitAfterChange": "e1ef86cb256ac33de7283fc7a368ffa0b0b76892", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static String getTestCaseName(Test t)", "signatureAfterChange": "     public static String getTestCaseName(Test t)", "diff": ["-                Method getNameMethod = ", "-                    t.getClass().getMethod(\"getName\", new Class [0]);", "-                if (getNameMethod.getReturnType() == String.class) {", "+                Method getNameMethod = null;", "+                try {", "+                    getNameMethod = ", "+                        t.getClass().getMethod(\"getName\", new Class [0]);", "+                } catch (NoSuchMethodException e) {", "+                    getNameMethod = t.getClass().getMethod(\"name\", ", "+                                                           new Class [0]);", "+                }", "+                if (getNameMethod != null &&", "+                    getNameMethod.getReturnType() == String.class) {"]}]}