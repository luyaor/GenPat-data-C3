{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "976f1eeb882152c2d90c252b2beed369", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "048661a5490164607ed20bb34fd3b2df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DifferentSelector.java", "commitBeforeChange": "236873d6eb74a5ceaa0aae78f748946557595cf3", "commitAfterChange": "f7a5fe1058ed168c2655047494dacfde6c6931f0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean selectionTest(File srcfile, File destfile)", "signatureAfterChange": "     protected boolean selectionTest(File srcfile, File destfile)", "diff": ["-", "-        //here do a bulk comparison", "-        try {", "-            return !fileUtils.contentEquals(srcfile, destfile);", "-        } catch (IOException e) {", "-            throw new BuildException(\"while comparing \" + srcfile + \" and \"", "-                    + destfile, e);", "+        if (!ignoreContents) {", "+            //here do a bulk comparison", "+            try {", "+                return !fileUtils.contentEquals(srcfile, destfile);", "+            } catch (IOException e) {", "+                throw new BuildException(\"while comparing \" + srcfile + \" and \"", "+                        + destfile, e);", "+            }", "+        } else {", "+            return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b5d4032cf7b2b67d3aa149d5def4ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/StarTeamCheckout.java", "commitBeforeChange": "225893c4b96e202aae6654f8ab2354b307ad35ef", "commitAfterChange": "6409f0ec87cfcc04196be80e0c72aec39a76ec04", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile(com.starbase.starteam.File eachFile,                               java.io.File targetFolder )     throws IOException", "signatureAfterChange": "     private void processFile(com.starbase.starteam.File eachFile,                               java.io.File targetFolder )     throws IOException", "diff": ["+            if (!targetFolder.exists()) {", "+                if (targetFolder.mkdirs()) {", "+                    log(\"Creating folder: \" + targetFolder);", "+                } else {", "+                    throw new BuildException(", "+                        \"Failed to create local folder \" + targetFolder);", "+                }", "+            }", "+                if (!targetFolder.exists()) {", "+                    if (targetFolder.mkdirs()) {", "+                        log(\"Creating folder: \" + targetFolder);", "+                    } else {", "+                        throw new BuildException(", "+                            \"Failed to create local folder \" + targetFolder);", "+                    }", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15ac341b448c8a59d0212d0642e51325", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "e49a5fb5644508cc28576955cebb347071848b94", "commitAfterChange": "c73084faf5d4b9c3a7b6d692908200303dc21d02", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          private void executeWLS6()", "signatureAfterChange": "          private void executeWLS6(File securityPolicyFile)", "diff": ["-    ", "-    private void executeWLS6() {", "-        ", "-        if (!beaHome.isDirectory()) {", "-            throw new BuildException(\"BEA home \" + beaHome.getPath() + ", "-                                     \" is not valid\");", "-        }", "-        ", "+    ", "+    private void executeWLS6(File securityPolicyFile) {", "+        ", "+        if (!beaHome.isDirectory()) {", "+            throw new BuildException(\"BEA home \" + beaHome.getPath() + ", "+                                     \" is not valid\");", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16a7b0d3f0f62632c33aa3f88a0aed43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "d67398ecca6c48d849fb8ce9cd1e2d1dd2b16d6c", "commitAfterChange": "17f083129774fe6e3bdda92133fd1d0adda7a48d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                    final String attrName)", "diff": ["-                                                  Class arg) {", "+                                                  Class arg, ", "+                                                  final String attrName) {", "+                        if (value.length() == 0) {", "+                            throw new BuildException(\"The value \\\"\\\" is not a \" ", "+                                + \"legal value for attribute \\\"\" ", "+                                + attrName + \"\\\"\");", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a8814b32696a10b9b6d7fcf0f48568", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java", "commitBeforeChange": "0562cd0400efbcbd9aa20cc1e74bc3622f6bea10", "commitAfterChange": "c798cf3db806306f570561a5b2935dbc9aaf2fbb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-           if (rexec != null) {", "-               try {", "-                   rexec.disconnect();", "-               } catch (IOException e) {", "-                   throw new BuildException(\"Error disconnecting from \"", "-                                            + server);", "-               }", "-           }", "-       }", "+            if (rexec != null && rexec.isConnected()) {", "+                try {", "+                    rexec.disconnect();", "+                } catch (IOException e) {", "+                    throw new BuildException(\"Error disconnecting from \"", "+                                             + server);", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e76aa9f935084e46ea2d9a76ba65cdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/ProjectListenerSupport.java", "commitBeforeChange": "8b39211862c5a0b88ce5764bbc1682a89fd02895", "commitAfterChange": "8b4b896303cebb9f6f054254131e248da36b454b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void log( String message )", "signatureAfterChange": "     public void log( String message, Throwable throwable )", "diff": ["-     */", "-    public void log( String message )", "-    {", "-        for( int i = 0; i < m_listeners.length; i++ )", "-        {", "-            m_listeners[ i ].log( message );", "-        }", "-    }", "+        m_message = message;", "+        m_throwable = throwable;", "+", "+        try", "+            for( int i = 0; i < m_listeners.length; i++ )", "+            {", "+                m_listeners[ i ].log( this );", "+            }", "+        finally", "+        {", "+            m_message = null;", "+            m_throwable = null;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2037c48939019db92ceca2eac502ab48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "0a9a3cc1f80e139aa4ca8bba7080bdbf728ed311", "commitAfterChange": "f40450a1ea9d49a2fe1a3c01da37f89fc7bfed7f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "signatureAfterChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "diff": ["-            try {", "-                PrintStream out = null;", "-", "-                    out = new PrintStream(", "-                        new FileOutputStream(name));", "+                    entry.openFile(false);", "-                    out = new PrintStream(", "-                        new FileOutputStream(name, append.booleanValue()));", "+                    entry.openFile(append.booleanValue());", "-                entry.setErrorPrintStream(out);", "-                entry.setOutputPrintStream(out);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Problems creating a recorder entry\",", "-                    ioe);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21514db92db2048b2fe56a410f899316", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/URLResource.java", "commitBeforeChange": "792092f443a4ffa8039ff1fa4963446574310177", "commitAfterChange": "6cb11c4a231c055d9ed5f710f842ee190282c65c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private synchronized void close()", "signatureAfterChange": "     private synchronized void close()", "diff": ["-        if (conn != null) {", "-            try {", "-                if (conn instanceof JarURLConnection) {", "-                    JarURLConnection juc = (JarURLConnection) conn;", "-                    JarFile jf = juc.getJarFile();", "-                    jf.close();", "-                    jf = null;", "-                } else if (conn instanceof HttpURLConnection) {", "-                    ((HttpURLConnection) conn).disconnect();", "-                }", "-            } catch (IOException exc) {", "-                //ignore", "-            } finally {", "-                conn = null;", "-            }", "+        try {", "+            FileUtils.close(conn);", "+        } finally {", "+            conn = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2621cce2f7412235534f5233db4553bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "411673fe347509dae65643d633589e1bb36ad80d", "commitAfterChange": "0833007731e08c468319eebcda0ef776a7fefdc1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void spinThreads() throws BuildException", "signatureAfterChange": "     private void spinThreads() throws BuildException", "diff": ["-            // When we leave this block we can be sure all data is really ", "-            // stored in main memory before the new threads start, the new ", "+            // When we leave this block we can be sure all data is really", "+            // stored in main memory before the new threads start, the new", "-        ", "+", "-                    if (running[i] == null || running[i].finished) {", "+                    if (running[i] == null || running[i].isFinished()) {", "-                    if (running[i] != null && !running[i].finished) {", "+                    if (running[i] != null && !running[i].isFinished()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1e7ec0020105c0e75ed453685b8cb3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "589af888eb8b6ea9c139272fac2bd69382e10ea0", "commitAfterChange": "7d1ecbc1bb5db282ffbf95b6589eb49900ad163d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-                // reflect these into the target", "-                Object attrValue = PropertyHelper.getPropertyHelper(p).parseProperties(value);", "+                // reflect these into the target, defer for", "+                // MacroInstance where properties are expanded for the", "+                // nested sequential", "+                Object attrValue = null;", "+                if (target instanceof MacroInstance) {", "+                    attrValue = value;", "+                } else {", "+                    attrValue = PropertyHelper.getPropertyHelper(p).parseProperties(value);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ffee70a1a6359dee1744a932efece0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "e87e1b281a0902ad03f06fb013416dcd62596e8d", "commitAfterChange": "083e0367290dd26bcef25ac727b783189a427bc5", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": "     protected void actOnTestResult(TestResultHolder result, JUnitTest test,                                    String name)", "signatureAfterChange": "     protected void actOnTestResult(TestResultHolder result, JUnitTest test,                                    String name)", "diff": ["-                log(name + \" FAILED\"", "-                    + (result.timedOut ? \" (timeout)\" : \"\")", "-                    + (result.crashed ? \" (crashed)\" : \"\"), Project.MSG_ERR);", "+                if (logFailedTests) {", "+                    log(name + \" FAILED\"", "+                        + (result.timedOut ? \" (timeout)\" : \"\")", "+                        + (result.crashed ? \" (crashed)\" : \"\"),", "+                        Project.MSG_ERR);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3149ea1c3e90f8f5ee370644c7e051a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "18e948f21127276214a791a4c553daad93f60916", "commitAfterChange": "508bb0dae114778e531d55d849b70e503c7c7edb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "diff": ["+", "+        // identical logic lives in ResourceUtils.copyResource():", "+        if (destFile.isFile() && !destFile.canWrite()) {", "+            if (!getForce()) {", "+                throw new IOException(\"can't replace read-only destination \"", "+                                      + \"file \" + destFile);", "+            } else if (!getFileUtils().tryHardToDelete(destFile)) {", "+                throw new IOException(\"failed to delete read-only \"", "+                                      + \"destination file \" + destFile);", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e421dc224a2190e0c49c3d270342bd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsRegexpSelector.java", "commitBeforeChange": "fc24b8bbecb508d4edddb2ecf8897b7479c8a63f", "commitAfterChange": "d5836ac061734031a67a6c3bb5fb2fe1e73e566f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isSelected(Resource r)", "signatureAfterChange": "     public boolean isSelected(Resource r)", "diff": ["-            if (in != null) {", "-                try {", "-                    in.close();", "-                } catch (Exception e) {", "-                    throw new BuildException(\"Could not close \"", "-                                             + r.toLongString());", "-                }", "+            try {", "+                in.close();", "+            } catch (Exception e) {", "+                throw new BuildException(\"Could not close \"", "+                                         + r.toLongString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4018755b0e824ad90f6aac087fc4bdf6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a252eb85435070911a166bc108952067a9a2d061", "commitAfterChange": "e2a75898e88825b87310be19070b68f967ae000c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     private void scandir(File dir, String vpath, boolean fast)", "diff": ["+", "+        if (newfiles == null) {", "+            /*", "+             * two reasons are mentioned in the API docs for File.list", "+             * (1) dir is not a directory. This is impossible as", "+             *     we wouldn't get here in this case.", "+             * (2) an IO error occurred (why doesn't it throw an exception ", "+             *     then???)", "+             */", "+            throw new BuildException(\"IO error scanning directory\"", "+                                     + dir.getAbsolutePath());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c6587426c0b75b2c4b2f6b985532cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "dc783273b09bd69dee29f8afd61706e328b9e666", "commitAfterChange": "bf736586fa0347cd87d9bcb450dfe16c7263c1e4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        if (macroDef.getTextName() != null) {", "-            localProperties.put(macroDef.getTextName(), text);", "+        if (macroDef.getText() != null) {", "+            if (text == null) {", "+                if (!macroDef.getText().getOptional()) {", "+                    throw new BuildException(", "+                        \"required text missing\");", "+                }", "+                text = \"\";", "+            }", "+            if (macroDef.getText().getTrim()) {", "+                text = text.trim();", "+            }", "+            localProperties.put(macroDef.getText().getName(), text);", "+        } else {", "+            if (text != null && !text.trim().equals(\"\")) {", "+                throw new BuildException(", "+                    \"The \\\"\" + getTaskName() + \"\\\" macro does not support\"", "+                    + \" nested text data.\");", "+            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44764a93e2634c87c7a531daef691ba3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0efc2f817257f69d7cdc67c016b1caac68465f1d", "commitAfterChange": "939a6bbf2fb97ec29ecf79c86013846656d8751c", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "     private Method findMatchingMethod(Class paramClass, List methods)", "signatureAfterChange": "     private Method findMatchingMethod(Class paramClass, List methods)", "diff": ["-                } else {", "-                    if (!methodClass.isAssignableFrom(matchedClass)) {", "-                        throw new BuildException(\"ambiguous: types \"", "-                            + matchedClass.getName() + \" and \"", "-                            + methodClass.getName() + \" match \"", "-                            + paramClass.getName());", "-                    }", "+                } else if (!methodClass.isAssignableFrom(matchedClass)) {", "+                    throw new BuildException(\"ambiguous: types \" + matchedClass.getName() + \" and \"", "+                            + methodClass.getName() + \" match \" + paramClass.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c3d1613b6f655be001ca0441dd699e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "3375d671acfa1fceb3325dc54fda5484b9e19208", "commitAfterChange": "2ead66e52c56fbc1a59789187ddba634ebe4ae2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void add(FileNameMapper fileNameMapper)", "signatureAfterChange": "     public void add(FileNameMapper fileNameMapper)", "diff": ["+        if (isReference()) {", "+            throw noChildrenAllowed();", "+        }", "-            container = new ContainerMapper();", "+            if (type == null && classname == null) {", "+                container = new CompositeMapper();", "+            } else {", "+                FileNameMapper m = getImplementation();", "+                if (m instanceof ContainerMapper) {", "+                    container = (ContainerMapper)m;", "+                } else {", "+                    throw new BuildException(String.valueOf(m)", "+                        + \" mapper implementation does not support nested mappers!\");", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52a93e91cd36d82a37f1d23cec46a6ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "16a5d1b56ceb8dca9875b074ebb36c626ce06763", "commitAfterChange": "931a037496b3bc1c55734fd221a3ef773dc8cabb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean validateAndExecute() throws BuildException", "signatureAfterChange": "     private boolean validateAndExecute() throws BuildException", "diff": ["+        if (file != null && totalproperty != null) {", "+            throw new BuildException(", "+                \"File and Totalproperty cannot co-exist.\");", "+        }", "+", "-            addToIncludeFileMap(file);", "-", "+                    if (totalproperty != null) {", "+                        // Use '/' to calculate digest based on file name.", "+                        // This is required in order to get the same result", "+                        // on different platforms.", "+                        String relativePath = srcFiles[j].replace(File.separatorChar, '/');", "+                        relativeFilePaths.put(src, relativePath);", "+                    }", "+", "+            addToIncludeFileMap(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "555cd46ebafb56d169089bd0d3d475dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ReplaceTokens.java", "commitBeforeChange": "d67398ecca6c48d849fb8ce9cd1e2d1dd2b16d6c", "commitAfterChange": "17f083129774fe6e3bdda92133fd1d0adda7a48d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private final void initialize()", "signatureAfterChange": "     private final void initialize()", "diff": ["+                        String value = params[i].getValue();", "+                            if (value.length() == 0) {", "+                                throw new BuildException(\"Begin token cannot \" ", "+                                    + \"be empty\");", "+                            }", "+                            if (value.length() == 0) {", "+                                throw new BuildException(\"End token cannot \" ", "+                                    + \"be empty\");", "+                            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5837fff910d932e310638106b3d30c5a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "8d48bc67994f396712c0b6552ebd857d4f52f521", "commitAfterChange": "601cdf67ba76a5571e5c8e9256563d8e080f1c08", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public ZipFile(File f, String encoding) throws IOException", "signatureAfterChange": "     public ZipFile(File f, String encoding) throws IOException", "diff": ["+        boolean success = false;", "-        } catch (IOException e) {", "-            try {", "-                archive.close();", "-            } catch (IOException e2) {", "-                // swallow, throw the original exception instead", "+            success = true;", "+        } finally {", "+            if (!success) {", "+                try {", "+                    archive.close();", "+                } catch (IOException e2) {", "+                    // swallow, throw the original exception instead", "+                }", "-            throw e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7a94029a13b363cc5bfa3083fdcebd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1511487597b2dfa9391f80564f09d13a12418911", "commitAfterChange": "34e72a6607d510aed224c0db5b5b7a492e7e06d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public ZipEntry(java.util.zip.ZipEntry entry) throws ZipException", "signatureAfterChange": "     public ZipEntry(java.util.zip.ZipEntry entry) throws ZipException", "diff": ["-        /*", "-         * REVISIT: call super(entry) instead of this stuff in Ant2,", "-         *          \"copy constructor\" has not been available in JDK 1.1", "-         */", "-        super(entry.getName());", "-", "-        setComment(entry.getComment());", "-        setMethod(entry.getMethod());", "-        setTime(entry.getTime());", "-", "-        long size = entry.getSize();", "-        if (size > 0) {", "-            setSize(size);", "-        }", "-        long cSize = entry.getCompressedSize();", "-        if (cSize > 0) {", "-            setComprSize(cSize);", "-        }", "-        long crc = entry.getCrc();", "-        if (crc > 0) {", "-            setCrc(crc);", "-        }", "-", "+        super(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca3c6e0450c9a65154b3065461930fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "049e8cfaa940fe506746426fedf1d1f4b91b0071", "commitAfterChange": "f5921264e53af4c642939f5dc1e617363edd7865", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "       private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["-                try {", "-                    outWriter.write(eolstr);", "-                } catch (IOException e) {", "-                    throw new BuildException(e);", "-                } // end of try-catch", "+                if (!(\"\".equals(line.getEol())) || fixlast) {", "+                    try {", "+                        outWriter.write(eolstr);", "+                    } catch (IOException e) {", "+                        throw new BuildException(e);", "+                    } // end of try-catch", "+                } //end if non-blank original eol or fixlast"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1d4c63ddab3682aaf141a850642efe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/TreeBasedTask.java", "commitBeforeChange": "ced321c00be004a78c335295701169edf0dcb55f", "commitAfterChange": "0389ea10a4687f078052de61ff19b5c43171ad44", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            if (null != this.rootLocalFolder && !this.forced) {", "-                log(\"Warning: rootLocalFolder specified, but forcing off.\",", "-                        Project.MSG_WARN);", "-            }", "-            // Open the view", "-            View view =", "-                    StarTeamFinder.openView(getUserName() + \":\"", "-                    + getPassword()", "-                    + \"@\" + getURL());", "+            testPreconditions();", "-            if (null == view) {", "-                throw new BuildException(\"Cannot find view\" + getURL() +", "-                        \" in repository()\");", "-            }", "-", "-            View snapshot = createSnapshotView(view);", "+            View snapshot = openView();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc546451e1b999f5aa136a4e1d02256", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/AntXMLContext.java", "commitBeforeChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "commitAfterChange": "e1cd13c79b97bbf750fe5859769f90a99aa9f9bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setBuildFile(File buildFile)", "signatureAfterChange": "     public void setBuildFile(File buildFile)", "diff": ["-        this.buildFileParent = new File(buildFile.getParent());", "-        implicitTarget.setLocation(new Location(buildFile.getAbsolutePath()));", "-        try {", "-            setBuildFile(FileUtils.getFileUtils().getFileURL(buildFile));", "-        } catch (MalformedURLException ex) {", "-            throw new BuildException(ex);", "+        if (buildFile != null) {", "+            this.buildFileParent = new File(buildFile.getParent());", "+            implicitTarget.setLocation(new Location(buildFile.getAbsolutePath()));", "+            try {", "+                setBuildFile(FileUtils.getFileUtils().getFileURL(buildFile));", "+            } catch (MalformedURLException ex) {", "+                throw new BuildException(ex);", "+            }", "+        } else {", "+            this.buildFileParent = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "631ef31c5382295a7f8738b28ac48b3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/IsSigned.java", "commitBeforeChange": "d824eac4d98e22a968974dea8f175894a989c3de", "commitAfterChange": "e2cef5a7a31b6061ef94bdc7ada296f6e8d23794", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean isSigned(File zipFile, String name)         throws IOException", "signatureAfterChange": "     public static boolean isSigned(File zipFile, String name)         throws IOException", "diff": ["-            } ", "+            }", "-            if (name.length() > 8) {", "-                longSig =", "-                        jarFile.getEntry(SIG_START", "-                                        + name.substring(0, 8).toUpperCase()", "-                                        + SIG_END) != null;", "+            if (name.length() > SHORT_SIG_LIMIT) {", "+                longSig = jarFile.getEntry(", "+                    SIG_START", "+                    + name.substring(0, SHORT_SIG_LIMIT).toUpperCase()", "+                    + SIG_END) != null;", "-            ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69574386730c8104afd15399e7a419e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprivate Button getBuildButton()", "signatureAfterChange": "     private Button getBuildButton()", "diff": ["-\t */", "-\tprivate Button getBuildButton() {", "-\t\tif (iBuildButton == null) {", "-\t\t\ttry {", "-\t\t\t\tiBuildButton = new Button();", "-\t\t\t\tiBuildButton.setName(\"BuildButton\");", "-\t\t\t\tiBuildButton.setLabel(\"Build\");", "-\t\t\t} catch (Throwable iExc) {", "-\t\t\t\thandleException(iExc);", "-\t\t\t}", "-\t\t}", "-\t\treturn iBuildButton;", "-\t}", "+     */", "+    private Button getBuildButton() {", "+        if (iBuildButton == null) {", "+            try {", "+                iBuildButton = new Button();", "+                iBuildButton.setName(\"BuildButton\");", "+                iBuildButton.setLabel(\"Execute\");", "+            } catch (Throwable iExc) {", "+                handleException(iExc);", "+            }", "+        }", "+        return iBuildButton;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b0c4cf62bc4237fb581d35103a678c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/RmicAdapterFactory.java", "commitBeforeChange": "9d16acee8e2a3efe496ca84770b0af5f66f81c28", "commitAfterChange": "e79b77b82bf060be1189b42e7ade80735101570e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static RmicAdapter getRmic(String rmicType, Task task)          throws BuildException", "signatureAfterChange": "     public static RmicAdapter getRmic(String rmicType, Task task)          throws BuildException", "diff": ["-        if (rmicType == null) {", "-            /* ", "-             * When not specified rmicType, search SUN's rmic and", "-             * Kaffe's rmic.", "-             */", "-            try {", "-                Class.forName(\"sun.rmi.rmic.Main\");", "-                rmicType = \"sun\";", "-            } catch (ClassNotFoundException cnfe) {", "-                try {", "-                    Class.forName(\"kaffe.rmi.rmic.RMIC\");", "-                    Class.forName(\"kaffe.tools.compiler.Compiler\");", "-                    rmicType = \"kaffe\";", "-                } catch (ClassNotFoundException cnfk) {", "-                    throw new BuildException(\"Couldn\\'t guess rmic \"", "-                                             + \"implementation\");", "-                }", "-            }", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87122ef9256e491636475459ad3c5d6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "6de0aa04319c4fb4fd6947f033da16f8efbe95e6", "commitAfterChange": "550607147fe6a0c89a1b6e6c85f5e69b334d31d7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Main(String[] args) throws BuildException", "signatureAfterChange": "     protected Main(String[] args) throws BuildException", "diff": ["+            } else if (arg.equals(\"-inputhandler\")) {", "+                if (inputHandlerClassname != null) {", "+                    System.out.println(\"Only one input handler class may \" +", "+                                       \"be specified.\");", "+                    return;", "+                }", "+                try {", "+                    inputHandlerClassname = args[++i];", "+                } catch (ArrayIndexOutOfBoundsException aioobe) {", "+                    System.out.println(\"You must specify a classname when \" +", "+                                       \"using the -inputhandler argument\");", "+                    return;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899ef8892b2120f3e5cdd35cb4729ba0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/modules/TargetMonitor.java", "commitBeforeChange": "1b37338ca6dfe3aef5ce610d8a7b78dade8804f7", "commitAfterChange": "db81fa173d5cc93f65b6b645239d2e2c4fdc755f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public boolean eventPosted(EventObject event)", "signatureAfterChange": "         public boolean eventPosted(EventObject event)", "diff": ["+                String name = null;", "-                        if(buf.length() > 0) {", "-                            buf.append(\", \");", "+                        name = ((ACSTargetElement)selected[i]).getName();", "+                        if( buf.toString().indexOf( name ) < 0 ) {", "+                            if(buf.length() > 0) {", "+                                buf.append(\", \");", "+                            }", "+                            buf.append( name );", "-                        buf.append(((ACSTargetElement)selected[i]).getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc1ff5bb2bd8007194ac1c4559da737", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "e2a62c3179e855f7e102af8701aff81d6ba3c7e8", "commitAfterChange": "8b1e44f10b9e1812c160b24c52eae7d411d070f2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void addCommandsToList(final ListIterator listIterator)", "signatureAfterChange": "     private void addCommandsToList(final ListIterator listIterator)", "diff": ["+", "+        if (isCloneVm()) {", "+            SysProperties clonedSysProperties = new SysProperties();", "+            PropertySet ps = new PropertySet();", "+            PropertySet.BuiltinPropertySetName sys =", "+                new PropertySet.BuiltinPropertySetName();", "+            sys.setValue(\"system\");", "+            ps.appendBuiltin(sys);", "+            clonedSysProperties.addSyspropertyset(ps);", "+            clonedSysProperties.addDefinitionsToList(listIterator);", "+        }", "+        ", "+        } else if (cloneBootclasspath()) {", "+            listIterator.add(\"-Xbootclasspath:\" + ", "+                             Path.systemBootClasspath.toString());", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f41d716a77ba0d67ca7a718f8d670b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "e79bd24e1ace7034b743df1046eb355c8cdd3162", "commitAfterChange": "962c579f1d04d9d2264bb4757f3c01ac4e7d5f83", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void messageLogged(BuildEvent event)", "signatureAfterChange": "      public void messageLogged(BuildEvent event)", "diff": ["-                String msg = \"[\" + name + \"] \";", "-                for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) {", "-                    out.print(\" \");", "+                if (!emacsMode) {", "+                    String msg = \"[\" + name + \"] \";", "+                    for (int i = 0; i < (LEFT_COLUMN_SIZE - msg.length()); i++) {", "+                        out.print(\" \");", "+                    }", "+                    out.print(msg);", "-                out.print(msg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "926903d53ed0440cd4380413852462ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "76f5174e7c5e445a20eb0c1cbcb22f81e2c72503", "commitAfterChange": "c6d10f6ffcfc9ba5ebf41d7ea079047833f97642", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["-        if (failed) return;", "-        wri.println(\" took \" ", "-                    + nf.format((System.currentTimeMillis()-lastTestStart)", "-                                / 1000.0)", "-                    + \" sec\");", "+        synchronized (wri) {", "+            wri.print(\"Testcase: \" ", "+                      + JUnitVersionHelper.getTestCaseName((TestCase) test));", "+            if (Boolean.TRUE.equals(failed.get(test))) {", "+                return;", "+            }", "+            Long l = (Long) testStarts.get(test);", "+            wri.println(\" took \" ", "+                        + nf.format((System.currentTimeMillis()-l.longValue())", "+                                    / 1000.0)", "+                        + \" sec\");", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d358eeb2117cc7b0a05c03d584167c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic RoleAdapter createAdapter()", "signatureAfterChange": "         public RoleAdapter createAdapter(Project p)", "diff": ["-\t */", "-\tpublic RoleAdapter createAdapter() {", "-\t    if (adapterVerifier == null) return null;", "-\t    ", "-\t    try {", "-\t\treturn (RoleAdapter) ", "-\t\t    adapterVerifier.getDeclaringClass().newInstance();", "-\t    }", "-\t    catch(BuildException be) {", "-\t\tthrow be;", "-\t    }", "-\t    catch(Exception e) {", "-\t\tthrow new BuildException(e);", "-\t    }", "-\t}", "+         */", "+        public RoleAdapter createAdapter(Project p) {", "+            if (adapterFactory == null) return null;", "+", "+            try {", "+                return (RoleAdapter) adapterFactory.create(p);", "+            }", "+            catch(BuildException be) {", "+                throw be;", "+            }", "+            catch(Exception e) {", "+                throw new BuildException(e);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b348b96985857be21ec5a92a63f4d5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Resource.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public int compareTo(Object other)", "signatureAfterChange": "     public int compareTo(Object other)", "diff": ["+        if (isReference()) {", "+            return ((Comparable) getCheckedRef()).compareTo(other);", "+        }", "-            throw new IllegalArgumentException(\"Can only be compared with \"", "-                                               + \"Resources\");", "+            throw new IllegalArgumentException(", "+                \"Can only be compared with Resources\");", "-        return getName().compareTo(r.getName());", "+        String name = getName();", "+        String oname = r.getName();", "+        if (name == null && oname == null) {", "+            return 0;", "+        }", "+        if (name == null) {", "+            return -1;", "+        }", "+        return oname == null ? 1 : name.compareTo(oname);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b75823d4c101e882a36c9d6a99d8607", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copyfile.java", "commitBeforeChange": "ab202c98abdb86255e80d286acee3b8c6960cab2", "commitAfterChange": "ae16bb711b331f6c8a20ee1298cf171de43266f7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\tif (srcFile.lastModified() > destFile.lastModified()) {", "-\t    try {", "-\t\tcopyFile(srcFile, destFile);", "-\t    } catch (IOException ioe) {", "-\t\tString msg = \"Error copying file: \" + srcFile.getAbsolutePath()", "-\t\t    + \" due to \" + ioe.getMessage();", "-\t\tthrow new BuildException(msg);", "-\t    }", "-\t}", "+        if (srcFile.lastModified() > destFile.lastModified()) {", "+            try {", "+                project.copyFile(srcFile, destFile);", "+            } catch (IOException ioe) {", "+                String msg = \"Error copying file: \" + srcFile.getAbsolutePath()", "+                    + \" due to \" + ioe.getMessage();", "+                throw new BuildException(msg);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bff60acc4b35fa5bb3b2fb976a13794", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "88557a131bd0b0700462a61a7f3bd108dc15cf31", "commitAfterChange": "d91fdceaa60b70502667049c3156197ab14908f0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        int err = -1;", "+        File savedDir = dir;", "-        if ((err = executeJava()) != 0) { ", "-            if (failOnError) {", "-                throw new BuildException(\"Java returned: \"+err, location);", "-            } else {", "-                log(\"Java Result: \" + err, Project.MSG_ERR);", "+        int err = -1;", "+        try {", "+            if ((err = executeJava()) != 0) { ", "+                if (failOnError) {", "+                    throw new BuildException(\"Java returned: \"+err, location);", "+                } else {", "+                    log(\"Java Result: \" + err, Project.MSG_ERR);", "+                }", "+        } finally {", "+            dir = savedDir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9feaaecdac268ab0ce9e849cd480778e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "676859791fc692d8689bb1dcf09e7f3b64ebab65", "commitAfterChange": "73a8298528b981531cc4ff7081f1b60c9c315793", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static String[] getProcEnvCommand()", "diff": ["+            // Determine if we are running under OS X", "+            try {", "+                float version = Float.parseFloat(System.getProperty(\"os.version\"));", "+                if (version >= 10.0) {", "+                    // OS X - just line UNIX", "+                    String[] cmd = {\"/usr/bin/env\"};", "+                    return cmd;", "+                }", "+            } catch (NumberFormatException e) {", "+                // fall through to OS 9", "+            }", "+            // OS 9 and previous"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0de3eccef36e43805c84ccef8785ad9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "b74c410de4f223348f9184eb88d72bbf6c215189", "commitAfterChange": "e90f94aaef42c34a1fede4ecbe1227d5a7bddb1f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void killAll(TaskRunnable[] running)", "signatureAfterChange": "     private void killAll(TaskRunnable[] running)", "diff": ["-        do", "-        {", "+        do {", "-            for (int i = 0; i < running.length; i++)", "-            {", "-                if (running[i] != null && ! running[i].isFinished())", "-                {", "+            for (int i = 0; i < running.length; i++) {", "+                if (running[i] != null && !running[i].isFinished()) {", "-            if (oneAlive)", "-            {", "+            if (oneAlive) {", "-        } while (oneAlive && tries < 100);        ", "+        } while (oneAlive && tries < NUMBER_TRIES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5f0dc175742125d2283c741a7509dcd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "903118a6a04c13b6c4b890c298dad93f4060165a", "commitAfterChange": "bc2e7b5dbf59deb16e28d9b70cedb2f794841e63", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "     public void addReference(String name, Object value)", "signatureAfterChange": "     public void addReference(String name, Object value)", "diff": ["-", "-            String valueAsString = \"\";", "-            try {", "-                valueAsString = value.toString();", "-            } catch (Throwable t) {", "-                log(\"Caught exception (\" + t.getClass().getName() + \")\"", "-                    + \" while expanding \" + name + \": \" + t.getMessage(),", "-                    MSG_WARN);", "-            }", "-            log(\"Adding reference: \" + name + \" -> \" + valueAsString,", "-                MSG_DEBUG);", "+            log(\"Adding reference: \" + name, MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb246f8f9297610cda9fa842b927911", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "f8a1512d8de5cd0420ae752e1fa9b21ce4dfb667", "commitAfterChange": "42b64be7164de91699c8327cd25e1c118d20068b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void writeFile() throws BuildException", "signatureAfterChange": "      private void writeFile() throws BuildException", "diff": ["-                os.write(baos.toByteArray());", "-            } catch (IOException x) {", "-                propertyfile.delete(); // possibly corrupt", "-                throw new BuildException(x, getLocation());", "-            } finally {", "-                os.close();", "+                try {", "+                    os.write(baos.toByteArray());", "+                } finally {", "+                    os.close();", "+                }", "+            } catch (IOException x) { // possibly corrupt", "+                FileUtils.getFileUtils().tryHardToDelete(propertyfile);", "+                throw x;", "-        } catch (IOException x) {", "+        } catch (IOException x) { // opening, writing, or closing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c30368298f2e3e8c9f984fac291e71ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/provider/ftp/FtpFileSystem.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public FtpFileSystem( final FileName rootName,                           final String hostname,                           final String username,                           final String password )         throws FileSystemException", "signatureAfterChange": "      public FtpFileSystem( final FileSystemProviderContext context,                           final FileName rootName,                           final String hostname,                           final String username,                           final String password )         throws FileSystemException", "diff": ["-    public FtpFileSystem( final FileName rootName,", "+    public FtpFileSystem( final FileSystemProviderContext context,", "+                          final FileName rootName,", "-        super( rootName );", "+        super( context, rootName );", "-        catch( Exception exc )", "+        catch( final Exception exc )", "-            try", "-            {", "-                // Clean up", "-                if( m_client.isConnected() )", "-                {", "-                    m_client.disconnect();", "-                }", "-            }", "-            catch( IOException e )", "-            {", "-                // Ignore", "-            }", "-", "+            closeConnection();", "+    }", "-        // TODO - close connection"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38ee93d03d828a786cd0c17c3785ade", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/ResourceContains.java", "commitBeforeChange": "a6bd85b4dafa9b486b2566def28add711ecca1ff", "commitAfterChange": "16be80c8a5f23b134443559833bc4067cef20fba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     public boolean eval() throws BuildException", "signatureAfterChange": "\r     public boolean eval() throws BuildException", "diff": ["-            if (casesensitive) {\r", "-                if (contents.indexOf(substring) > -1) {\r", "-                    return true;\r", "-                }\r", "-            } else {\r", "-                if (contents.toLowerCase().indexOf(substring) > -1) {\r", "-                    return true;\r", "-                }\r", "+            String sub = substring;\r", "+            if (!casesensitive) {\r", "+                contents = contents.toLowerCase();\r", "+                sub = sub.toLowerCase();\r", "-            return false;\r", "+            return contents.indexOf(sub) >= 0;\r", "-            throw new BuildException(\"There was a problem accessing resource : \"+resource);\r", "+            throw new BuildException(\"There was a problem accessing resource : \" + resource);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57542c21a5b724232daeb1a715a8593", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "1fa24dc235453d37357a5ffb190f5a3c15a49295", "commitAfterChange": "bba4624fac50881dcc5e81de48fffe05f92e2116", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "     protected void compile()", "signatureAfterChange": "     protected void compile()", "diff": ["-                // Success - check", "-                for (Iterator i = updateDirList.iterator(); i.hasNext();) {", "-                    File file = (File) i.next();", "-                    file.setLastModified(System.currentTimeMillis());", "+                // Success", "+                try {", "+                    generateMissingPackageInfoClasses();", "+                } catch (IOException x) {", "+                    // Should this be made a nonfatal warning?", "+                    throw new BuildException(x, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64dbfabe42ff21af5ceb3f8b77fda57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/AbstractMyrmidonTest.java", "commitBeforeChange": "274da3301287be067b66a5778b27bfa98ef0a662", "commitAfterChange": "b91e4a3c1d8310dea42c2c353ab016d9c5425109", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected static final Resources getResourcesForTested( final Class clazz )", "signatureAfterChange": "     protected static final Resources getResourcesForTested( final Class clazz )", "diff": ["+     */", "-        final Package pkg = clazz.getPackage();", "-", "-        String baseName;", "-        if( null == pkg )", "-        {", "-            final String name = clazz.getName();", "-            if( -1 == name.lastIndexOf( \".\" ) )", "-            {", "-                baseName = \"\";", "-            }", "-            else", "-            {", "-                baseName = name.substring( 0, name.lastIndexOf( \".\" ) );", "-            }", "-        }", "-        else", "-        {", "-            baseName = pkg.getName();", "-        }", "-", "+        String baseName = getPackageName( clazz );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daffb26b1e7babdc5df5a5edc40fcdfe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/URLResource.java", "commitBeforeChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "commitAfterChange": "e1cd13c79b97bbf750fe5859769f90a99aa9f9bf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized URL getURL()", "signatureAfterChange": "     public synchronized URL getURL()", "diff": ["+        }", "+        if (url == null) {", "+            if (baseURL != null) {", "+                if (relPath == null) {", "+                    throw new BuildException(\"must provide relativePath\"", "+                                             + \" attribute when using baseURL.\");", "+                }", "+                try {", "+                    url = new URL(baseURL, relPath);", "+                } catch (MalformedURLException e) {", "+                    throw new BuildException(e);", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e71848c181724fb1d64ce42f0fbfa467", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/splash/SplashScreen.java", "commitBeforeChange": "c8232ed82c53175729e226f4bc2dd464136a1e1b", "commitAfterChange": "a1003b0b8e5e18840b648d7da746efe92b093f74", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void messageLogged(BuildEvent event)", "signatureAfterChange": "      public void messageLogged(BuildEvent event)", "diff": ["+        if (hasProgressPattern()) {", "+            String message = event.getMessage();", "+            Matcher matcher = progressRegExpPattern.matcher(message);", "+            if (matcher != null && matcher.matches()) {", "+                String gr = matcher.group(1);", "+                try {", "+                    int i = Math.min(new Integer(gr).intValue() * 2, MAX);", "+                    pb.setValue(i);", "+                } catch (NumberFormatException e) {", "+                    //TODO: how to reach logger?!?", "+                    //log(\"Number parsing error in progressRegExp\", Project.MSG_VERBOSE);", "+", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f323bb55dac0e06b401f7892d40bd095", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfigHandler.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void startElement(String uri, String localName, String qualifiedName,                              Attributes attributes)          throws SAXParseException", "signatureAfterChange": "     public void startElement(String uri, String localName, String qualifiedName,                              Attributes attributes)          throws SAXParseException", "diff": ["-        // everything else is a task", "+        // configs support two task collections as elements", "-        config.addTask(buildElementHandler.getBuildElement());", "-//        try {", "-//        } catch (ConfigException e) {", "-//            throw new SAXParseException(\"Unable to process config\",", "-//                getLocator(), e);", "-//        }", "+        BuildElement element = buildElementHandler.getBuildElement();", "+        if (element.getType().equals(GLOBAL_TASKS_ELEMENT)) {", "+            config.addGlobalTasks(element);", "+        } else if (element.getType().equals(PERFRAME_TASKS_ELEMENT)) {", "+            config.addFrameTasks(element);", "+        } else {", "+            throw new SAXParseException(\"<antconfig> does not support the <\"", "+                + element.getType() + \"> element\", getLocator());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6191aeafe7cfbbaa7c3e9df2ca9e0df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "b5ad58c4d736b7f0a97aaa78b258dcceb9c21c89", "commitAfterChange": "7435b27b914764c3845b4821363ffeb4ddfe89cd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected boolean isRebuildRequired(File genericJarFile, File weblogicJarFile)", "signatureAfterChange": "     protected boolean isRebuildRequired(File genericJarFile, File weblogicJarFile)", "diff": ["-                                //File other then class changed   rebuild", "-                                log(\"Non class file \" + genericEntry.getName() + \" has changed\",Project.MSG_VERBOSE);", "-                                rebuild = true;", "+                                // is it the manifest. If so ignore it", "+                                if (!genericEntry.getName().equals(\"META-INF/MANIFEST.MF\")) {", "+                                    //File other then class changed   rebuild", "+                                    log(\"Non class file \" + genericEntry.getName() + \" has changed\",Project.MSG_VERBOSE);", "+                                    rebuild = true;", "+                                }"]}]}