{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9360353246806236af7d75535c7dd321", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f60b115537c1454d97fac21c209c3d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "5ba6ab78ce7fee35ec646630afaeb01220aae89a", "commitAfterChange": "a812b0a411cf480013ea88e0a272d82143be4702", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (file == null && resource == null && env == null) {", "-                throw new BuildException(\"You must specify file, resource or \"", "+            if (url == null && file == null && resource == null && env == null) {", "+                throw new BuildException(\"You must specify url, file, resource or \"", "-        if (file == null && resource == null && prefix != null) {", "+        if (url == null && file == null && resource == null && prefix != null) {", "-                                     + \"a file or resource\", getLocation());", "+                                     + \"a url, file or resource\", getLocation());", "+        }", "+", "+        if (url != null) {", "+            loadUrl(url);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e717c2f00a71a90008a217f9850bf1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/FilenameSelector.java", "commitBeforeChange": "02e939c261d79e9d1c2df779bfe1b787b63dd55c", "commitAfterChange": "d814a03e98431c1ae142e398f02be2a3b7205b3c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["+        if (pattern != null) {", "-        buf.append(\" negate: \");", "-        if (negated) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "-        buf.append(\" casesensitive: \");", "-        if (casesensitive) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "+        if (regex != null) {", "+            buf.append(regex).append(\" [as regular expression]\");", "+        buf.append(\" negate: \").append(negated);", "+        buf.append(\" casesensitive: \").append(casesensitive);"]}]}