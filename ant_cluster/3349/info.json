{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "849fec2549c3ef829fe41593fdbb7081", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33f5c4eb11fc68ef705a33d5f101870a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "21e315ab61074290eb92b7550037baefd1ab75dc", "commitAfterChange": "7d77f6e9fbd9ef55d8ee92aa2578c513ac3b4e53", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void doMultipleTransfer() throws IOException, JSchException", "signatureAfterChange": "      private void doMultipleTransfer() throws IOException, JSchException", "diff": ["+            } catch (SftpException e) {", "+                JSchException schException = new JSchException(\"Could not CD to '\" + remotePath + \"' - \" + e.toString());", "+                schException.initCause(e);", "+                throw schException;", "+            }", "+            try {", "+                    if(getVerbose()) {", "+                        log(\"Sending directory \" + current);", "+                    }", "-                throw new JSchException(e.toString());", "+                JSchException schException = new JSchException(e.toString());", "+                schException.initCause(e);", "+                throw schException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5317337a232e0c313fa066f67117ca5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "de190c4094ef4f0bb42d710d95b74bcef765aadc", "commitAfterChange": "e1018ac5bacf39393c79c27d80b07e1825189867", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void process(String[] args, InitConfig initConfig)", "signatureAfterChange": "     private void process(String[] args, InitConfig initConfig)", "diff": ["+        ExecutionManager executionManager = null;", "+        Project project = null;", "+            createLogger();", "-            Project project = parseProject();", "+            project = parseProject();", "-            ExecutionManager executionManager", "-                 = new ExecutionManager(initConfig, config);", "+            executionManager = new ExecutionManager(initConfig, config);", "+        } catch (Throwable e) {", "+            if (logger != null) {", "+                BuildEvent finishedEvent", "+                     = new BuildEvent(this, BuildEvent.BUILD_FINISHED, e);", "+                logger.buildFinished(finishedEvent);", "+            } else {", "+                e.printStackTrace();", "+            }", "+            System.exit(1);", "+        }", "+", "+        try {"]}]}