{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a2d9f1ff0ef0e14fa8ac9c190e25d21", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16943535b5305fbc361ece8176db683a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private Class loadClass( String classname )         throws Exception", "signatureAfterChange": "      private String getSystemId( final File file )         throws IOException", "diff": ["+", "+    private String getSystemId( final File file )", "+        throws IOException", "+    {", "+        return file.getCanonicalFile().toURL().toExternalForm();", "+    }", "-     */", "-    private Class loadClass( String classname )", "-        throws Exception", "-    {", "-        if( m_classpath == null )", "-        {", "-            return Class.forName( classname );", "-        }", "-        else", "-        {", "-            final URL[] urls = PathUtil.toURLs( m_classpath );", "-            final ClassLoader classLoader = new URLClassLoader( urls );", "-            return classLoader.loadClass( classname );", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "648c9f1ec05c15da29a2b0efba163487", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/java/ExecuteJava.java", "commitBeforeChange": "62562693ac733d0697b5a522972f36ea5570225c", "commitAfterChange": "a816a71d9e2587a83890f499dd2cabb7c6e02889", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void executeNonForked( final TaskContext context )         throws TaskException", "signatureAfterChange": "     public void executeNonForked( final TaskContext context )         throws TaskException", "diff": ["-            final URL[] urls = PathUtil.toURLs( m_classPath, context );", "-            if( urls.length == 0 )", "-            {", "-                target = Class.forName( m_className );", "-            }", "-            else", "-            {", "-                final URLClassLoader classLoader = new URLClassLoader( urls );", "-                target = classLoader.loadClass( m_className );", "-            }", "+            final ClassLoader classLoader = PathUtil.createClassLoader( m_classPath, context );", "+            target = classLoader.loadClass( m_className );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "699d5f3416190d8f33eb258e92425c77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAvailableCondition.java", "commitBeforeChange": "62562693ac733d0697b5a522972f36ea5570225c", "commitAfterChange": "a816a71d9e2587a83890f499dd2cabb7c6e02889", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected ClassLoader buildClassLoader( final TaskContext context ) throws TaskException", "signatureAfterChange": "     protected ClassLoader buildClassLoader( final TaskContext context ) throws TaskException", "diff": ["-        final URL[] urls = PathUtil.toURLs( m_classpath, context );", "-        final ClassLoader classLoader;", "-        if( urls.length > 0 )", "-        {", "-            classLoader = new URLClassLoader( urls );", "-        }", "-        else", "-        {", "-            // TODO - using system classloader is kinda useless now, because", "-            // the system classpath contains almost nothing.  Should be using", "-            // the 'common' classloader instead", "-            classLoader = ClassLoader.getSystemClassLoader();", "-        }", "-        return classLoader;", "+        return PathUtil.createClassLoader( m_classpath, context );"]}]}