{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15108f22bf1621bb9f01f060c61f1a52", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e626765e2ed7ab31672a2ab71e39eb8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "f630bc5d678fe8a20c064f12bbd3eb9ed6ac4353", "commitAfterChange": "e19934b1604f6e5803cdf5467a15cd31a6615c3b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void determineDependencies() throws IOException", "signatureAfterChange": "     private void determineDependencies() throws IOException", "diff": ["-                    dependencyList.addElement(depEnum.nextElement());", "+                    Object o = depEnum.nextElement();", "+                    dependencyList.addElement(o);", "+                    log(\"Class \" + info.className + \" depends on \" + o,", "+                        Project.MSG_DEBUG);", "+                log(dependentClass + \" affects \" + info.className,", "+                    Project.MSG_DEBUG);", "+                    log(\"Determining classpath dependencies for \" + className,", "+                        Project.MSG_DEBUG);", "+                        log(\"Looking for \" + dependency, Project.MSG_DEBUG);", "+                                log(\"URL is \" + classURL, Project.MSG_DEBUG);", "+                            } else {", "+                                log(\"Ignoring base classlib dependency \"", "+                                    + dependency, Project.MSG_DEBUG);", "+                            log(\"Adding a classpath dependency on \" + jarFile,", "+                                Project.MSG_DEBUG);", "+        } else {", "+            log(\"No classpath to check\", Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec4b9090c8204df3155f9892f97956f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "537a07b019e2de8769ae71acad23e90e725050f8", "commitAfterChange": "0e650797a55ba63d32831b2b77e809554e31bcd2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void createFolders(File file) throws IOException, ParseException", "signatureAfterChange": "     private void createFolders(File file) throws IOException, ParseException", "diff": ["-        MessageFormat mf = new MessageFormat(\"{0}({1})\");", "+        MessageFormat mf = new MessageFormat(\"{0}-arc({1})\");", "-            if(line.startsWith(\"\\\"\")) {", "+            log(\"Considering \\\"\"+line+\"\\\"\", Project.MSG_VERBOSE);", "+            if(line.startsWith(\"\\\"\\\\\") || line.startsWith(\"\\\"/\")) {", "-                File dir = new File(f.substring(0,f.lastIndexOf(File.separator)));", "-                if(!dir.exists())", "-                    dir.mkdirs();", "+                int index = f.lastIndexOf(File.separator);", "+                if (index > -1) {", "+                    File dir = new File(f.substring(0, index));", "+                    if(!dir.exists()) {", "+                        log(\"Creating \"+dir.getAbsolutePath(), Project.MSG_VERBOSE);", "+                        if(dir.mkdirs()) {", "+                            log(\"Created \"+dir.getAbsolutePath(), Project.MSG_INFO);", "+                        } else {", "+                            log(\"Failed to create \"+dir.getAbsolutePath(), Project.MSG_INFO);", "+                        }", "+                    } else {", "+                        log(dir.getAbsolutePath() + \" exists. Skipping\", Project.MSG_VERBOSE);", "+                    }", "+                } else {", "+                    log(\"File separator problem with \" + line, ", "+                        Project.MSG_WARN);", "+                }", "+            } else {", "+                log(\"Skipped \\\"\"+line+\"\\\"\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e602ef71c3e6c3e7d709a46d9609c17b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SubAnt.java", "commitBeforeChange": "662e9e67415804f9e80ac35d9828de85446f795a", "commitAfterChange": "03c4f14818416c23b879313b17208fc122542ec8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+\t    String subdirPath = null;", "+\t\t    if (verbose) {", "+\t\t\tsubdirPath = file.getPath();", "+\t\t\tlog(\"Entering directory: \" + subdirPath + \"\\n\", Project.MSG_INFO);", "+\t\t    }", "+\t\tif (verbose && subdirPath != null) {", "+\t\t    log(\"Leaving directory: \" + subdirPath + \"\\n\", Project.MSG_INFO);", "+\t\t}", "+\t\t    if (verbose && subdirPath != null) {", "+\t\t\tlog(\"Leaving directory: \" + subdirPath + \"\\n\", Project.MSG_INFO);", "+\t\t    }", "+\t\t    if (verbose && subdirPath != null) {", "+\t\t\tlog(\"Leaving directory: \" + subdirPath + \"\\n\", Project.MSG_INFO);", "+\t\t    }", "+\t\tif (verbose && subdirPath != null) {", "+\t\t    log(\"Leaving directory: \" + subdirPath + \"\\n\", Project.MSG_INFO);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f3eb276315e1ffc3985e8b5e70e37c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "9a8fc62287b5a8e2b0ca98ecd00974e4078fd527", "commitAfterChange": "2c44cef133b46cc3f6d3ea428f361d9f81fe8982", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["+        ", "+        // check against packaging spec", "+        // http://java.sun.com/j2se/1.3/docs/guide/versioning/spec/VersioningSpecification.html#PackageVersioning", "+        Section mainSection = (configuredManifest==null) ? null : configuredManifest.getMainSection();", "+        if (mainSection==null) {", "+            log(\"No Implementation-Title set. (\" + getLocation() + \")\");", "+            log(\"No Implementation-Version set. (\" + getLocation() + \")\");", "+            log(\"No Implementation-Vendor set. (\" + getLocation() + \")\");", "+        } else {", "+            if (mainSection.getAttribute(\"Implementation-Title\") == null) {", "+                log(\"No Implementation-Title set. (\" + getLocation() + \")\");", "+            }", "+            if (mainSection.getAttribute(\"Implementation-Version\") == null) {", "+                log(\"No Implementation-Version set. (\" + getLocation() + \")\");", "+            }", "+            if (mainSection.getAttribute(\"Implementation-Vendor\") == null) {", "+                log(\"No Implementation-Vendor set. (\" + getLocation() + \")\");", "+            }", "+        }"]}]}