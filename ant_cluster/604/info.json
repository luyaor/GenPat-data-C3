{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47404a9b92c81e16a04b136d5f3402ea", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15635b429bafb5e48fa0450653aacd8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ManifestClassPath.java", "commitBeforeChange": "98d1226139081f426245761397cd0fa3741391a2", "commitAfterChange": "f58d3967f08c8cc033ce0af114bb1ed87ca08664", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        if (_name == null) {", "+        if (name == null) {", "-        if (_dir == null) {", "+        if (dir == null) {", "-        if (getProject().getProperty(_name) != null) {", "-          throw new BuildException(\"Property '\" + _name + \"' already set!\");", "+        if (getProject().getProperty(name) != null) {", "+          throw new BuildException(\"Property '\" + name + \"' already set!\");", "-        if (_path == null) {", "+        if (path == null) {", "-        _dir = fileUtils.normalize(_dir.getAbsolutePath());", "+        dir = fileUtils.normalize(dir.getAbsolutePath());", "-        File currDir = _dir;", "-        String[] dirs = new String[_maxParentLevels + 1];", "-        for (int i = 0; i < _maxParentLevels + 1; ++i) {", "+        File currDir = dir;", "+        String[] dirs = new String[maxParentLevels + 1];", "+        for (int i = 0; i < maxParentLevels + 1; ++i) {", "-                _maxParentLevels = i + 1;", "+                maxParentLevels = i + 1;", "-        String[] elements = _path.list();", "+        String[] elements = path.list();", "-            for (int j = 0; j <= _maxParentLevels; ++j) {", "+            for (int j = 0; j <= maxParentLevels; ++j) {", "-                throw new BuildException(\"No suitable relative path from \" +", "-                                         _dir + \" to \" + fullPath);", "+                throw new BuildException(", "+                    \"No suitable relative path from \"", "+                    + dir + \" to \" + fullPath);", "-        getProject().setNewProperty(_name, buffer.toString().trim());", "+        getProject().setNewProperty(name, buffer.toString().trim());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5754261a0e0bf29fb837b3388fc3c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "b1b76c9c72c63ad046f952916e61b6aa8c1fea94", "commitAfterChange": "1be216b5d5ba9365d09b12c64ad31cd3cc7d5cdd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            Transport.send(msg);", "+            try {", "+                Transport.send(msg);", "+            } catch (SendFailedException sfe) {", "+                if (!shouldIgnoreInvalidRecipients()) {", "+                    throw new BuildException(GENERIC_ERROR, sfe);", "+                } else if (sfe.getValidSentAddresses() == null", "+                           || sfe.getValidSentAddresses().length == 0) {", "+                    throw new BuildException(\"Couldn't reach any recipient\",", "+                                             sfe);", "+                } else {", "+                    Address[] invalid = sfe.getInvalidAddresses();", "+                    if (invalid == null) {", "+                        invalid = new Address[0];", "+                    }", "+                    for (int i = 0; i < invalid.length; i++) {", "+                        didntReach(invalid[i], \"invalid\", sfe);", "+                    }", "+                    Address[] validUnsent = sfe.getValidUnsentAddresses();", "+                    if (validUnsent == null) {", "+                        validUnsent = new Address[0];", "+                    }", "+                    for (int i = 0; i < validUnsent.length; i++) {", "+                        didntReach(validUnsent[i], \"valid\", sfe);", "+                    }", "+                }", "+            }", "-            throw new BuildException(\"Problem while sending mime mail:\", e);", "+            throw new BuildException(GENERIC_ERROR, e);", "-            throw new BuildException(\"Problem while sending mime mail:\", e);", "+            throw new BuildException(GENERIC_ERROR, e);"]}]}