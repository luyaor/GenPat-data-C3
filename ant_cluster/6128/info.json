{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46d069d5cb14142857a0922cae9781fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5d389bd482e9c5cab737b5ab9e1229", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "      private AttributeSetter getEnumSetter(         final Class<?> reflectedArg, final Method m, Class<?> arg)", "signatureAfterChange": "      private AttributeSetter getEnumSetter(         final Class<?> reflectedArg, final Method m, final Class<?> arg)", "diff": ["-        final Class<?> reflectedArg, final Method m, Class<?> arg) {", "+        final Class<?> reflectedArg, final Method m, final Class<?> arg) {", "-                public void set(Project p, Object parent, String value)", "+                @Override", "+\t\t\t\tpublic void set(final Project p, final Object parent, final String value)", "+\t\t\t\t\t\tfinal", "-                    } catch (IllegalArgumentException e) {", "+                    } catch (final IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc72640d9c56241adea59ff0ef7eb0f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "3d0a8d3ae3d72020600766c65f272ed0a9609833", "commitAfterChange": "f4ee8dcc26246fb21e1548605a4cfa2182c104b7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "signatureAfterChange": "     private AttributeSetter createAttributeSetter(final Method m,                                                   Class arg,                                                   final String attrName)", "diff": ["+        // Object.class - it gets handled differently by AttributeSetter", "+        if (java.lang.Object.class == reflectedArg) {", "+            return new AttributeSetter(m, arg) {", "+                public void set(Project p, Object parent, String value)", "+                        throws InvocationTargetException,", "+                    IllegalAccessException {", "+                    throw new BuildException(", "+                        \"Internal ant problem - this should not get called\");", "+                }", "+            };", "+        }"]}]}