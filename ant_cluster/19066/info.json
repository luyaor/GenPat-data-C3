{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60ee4a9135dccc9f54e224c7374e212b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6c7830cab12f348326ec7f198b2af9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "676c2c7cbc53cf43d91f5cb64da1cb84495b0e4f", "commitAfterChange": "ce6c8d711c59101ecf7c4bbef534d5d66daec1f7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void setupDirectoryScanner( FileScanner ds, Project p )         throws TaskException", "signatureAfterChange": "      public void setupDirectoryScanner( final FileScanner ds )         throws TaskException", "diff": ["+    public void setupDirectoryScanner( final FileScanner ds )", "+        if( null == ds )", "-", "-    public void setupDirectoryScanner( FileScanner ds, Project p )", "-        throws TaskException", "-    {", "-        if( ds == null )", "-        {", "-            throw new IllegalArgumentException( \"ds cannot be null\" );", "+            final String message = \"ds cannot be null\";", "+            throw new IllegalArgumentException( message );", "-        ds.setBasedir( dir );", "+        ds.setBasedir( m_dir );", "-        for( int i = 0; i < additionalPatterns.size(); i++ )", "+        final int size = m_additionalPatterns.size();", "+        for( int i = 0; i < size; i++ )", "-            Object o = additionalPatterns.get( i );", "-            defaultPatterns.append( (PatternSet)o, p );", "+            final Object o = m_additionalPatterns.get( i );", "+            m_defaultPatterns.append( (PatternSet)o );", "-        getLogger().debug( \"FileSet: Setup file scanner in dir \" + dir + \" with \" + defaultPatterns );", "+        final String message = \"FileSet: Setup file scanner in dir \" +", "+            m_dir + \" with \" + m_defaultPatterns;", "+        getLogger().debug( message );", "-        ds.setIncludes( defaultPatterns.getIncludePatterns( p ) );", "-        ds.setExcludes( defaultPatterns.getExcludePatterns( p ) );", "-        if( useDefaultExcludes )", "+        ds.setIncludes( m_defaultPatterns.getIncludePatterns( null ) );", "+        ds.setExcludes( m_defaultPatterns.getExcludePatterns( null ) );", "+        if( m_useDefaultExcludes )", "+        {", "-        ds.setCaseSensitive( isCaseSensitive );", "+        }", "+        ds.setCaseSensitive( m_isCaseSensitive );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a753c7a497115edb11c0ce6a7a0da66", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/FileSet.java", "commitBeforeChange": "676c2c7cbc53cf43d91f5cb64da1cb84495b0e4f", "commitAfterChange": "ce6c8d711c59101ecf7c4bbef534d5d66daec1f7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void setupDirectoryScanner( FileScanner ds, Project p )         throws TaskException", "signatureAfterChange": "      public void setupDirectoryScanner( final FileScanner ds )         throws TaskException", "diff": ["+    public void setupDirectoryScanner( final FileScanner ds )", "+        if( null == ds )", "-", "-    public void setupDirectoryScanner( FileScanner ds, Project p )", "-        throws TaskException", "-    {", "-        if( ds == null )", "-        {", "-            throw new IllegalArgumentException( \"ds cannot be null\" );", "+            final String message = \"ds cannot be null\";", "+            throw new IllegalArgumentException( message );", "-        ds.setBasedir( dir );", "+        ds.setBasedir( m_dir );", "-        for( int i = 0; i < additionalPatterns.size(); i++ )", "+        final int size = m_additionalPatterns.size();", "+        for( int i = 0; i < size; i++ )", "-            Object o = additionalPatterns.get( i );", "-            defaultPatterns.append( (PatternSet)o, p );", "+            final Object o = m_additionalPatterns.get( i );", "+            m_defaultPatterns.append( (PatternSet)o );", "-        getLogger().debug( \"FileSet: Setup file scanner in dir \" + dir + \" with \" + defaultPatterns );", "+        final String message = \"FileSet: Setup file scanner in dir \" +", "+            m_dir + \" with \" + m_defaultPatterns;", "+        getLogger().debug( message );", "-        ds.setIncludes( defaultPatterns.getIncludePatterns( p ) );", "-        ds.setExcludes( defaultPatterns.getExcludePatterns( p ) );", "-        if( useDefaultExcludes )", "+        ds.setIncludes( m_defaultPatterns.getIncludePatterns( null ) );", "+        ds.setExcludes( m_defaultPatterns.getExcludePatterns( null ) );", "+        if( m_useDefaultExcludes )", "+        {", "-        ds.setCaseSensitive( isCaseSensitive );", "+        }", "+        ds.setCaseSensitive( m_isCaseSensitive );"]}]}