{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5c31ac7e6ee088b7ef5e82a50b2b29f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e7878de6c7f392c96dcca840a278f2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testCircularReferenceCheck()", "signatureAfterChange": "      @Test     public void testCircularReferenceCheck() throws IOException, SAXException", "diff": ["-    public void testCircularReferenceCheck() {", "+    @Test", "+    public void testCircularReferenceCheck() throws IOException, SAXException {", "-            InputSource result = catalog1.resolveEntity(\"PUBLIC ID ONE\",", "+            catalog1.resolveEntity(\"PUBLIC ID ONE\",", "-                         be.getMessage());", "-        } catch (Exception e) {", "-            fail(\"resolveEntity() failed!\" + e.toString());", "+                    be.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d9a6104b800ed3cc2a23230e633d953", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/MapperTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testCopyTaskWithTwoFilesets()", "signatureAfterChange": "      @Test     public void testCopyTaskWithTwoFilesets()", "diff": ["+    @Test", "-        TaskdefForCopyTest t = new TaskdefForCopyTest(\"test1\");", "-        try {", "-            t.setUp();", "-            t.test1();", "-        } finally {", "-            t.tearDown();", "-        }", "+        buildRule.configureProject(\"src/etc/testcases/types/mapper.xml\");", "+        buildRule.executeTarget(\"test1\");"]}]}