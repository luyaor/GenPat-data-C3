{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26d6dae46b0d22189a443aba9a22f682", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b010d7ea0d73334be0172312bddc3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Property.java", "commitBeforeChange": "5c3c1ca862e3d3dcb31eba03cb9c472b7daa5ef8", "commitAfterChange": "7a87980dc39534a2517471c590aa5b5619892aaa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-", "-", "-            final Object object = resolve( value );", "-", "-            if( name.equals( \"name\" ) )", "-            {", "-                final String convertedValue = (String)convert( String.class, object );", "-                setName( convertedValue );", "-            }", "-            else if( name.equals( \"value\" ) )", "-            {", "-                try { setValue( object ); }", "-                catch( final TaskException te )", "-                {", "-                    throw new ConfigurationException( \"Error setting value: \" + value, te );", "-                }", "-            }", "-            else if( name.equals( \"local-scope\" ) )", "-            {", "-                final Boolean localScope = (Boolean)convert( Boolean.class, object );", "-                setLocalScope( Boolean.TRUE == localScope );", "-            }", "-            else", "-            {", "-                throw new ConfigurationException( \"Unknown attribute \" + name );", "-            }", "+            configure( this, name, value );", "-", "-            final Configuration child = children[ i ];", "-", "-                final DataType value = (DataType)m_factory.create( child.getName() );", "-                configure( value, child );", "+                final DataType value = (DataType)m_factory.create( children[ i ].getName() );", "+                configure( value, children[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec147b2ad2be8be9be57d2da93a3737", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "c99b33079f5cd10abf44645de85729fe35b82cda", "commitAfterChange": "161579a6d082eac88d197ee70491745c54d48b92", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static String getClassLocation( Class clazz)", "signatureAfterChange": "      private static String getClassLocation( Class clazz)", "diff": ["-        try {", "-            java.net.URL url = clazz.getProtectionDomain().getCodeSource().getLocation();", "-            String location = url.toString();", "-            if (location.startsWith(\"jar\")) {", "-                url = ((java.net.JarURLConnection) url.openConnection()).getJarFileURL();", "-                location = url.toString();", "-            }", "-", "-            if (location.startsWith(\"file\")) {", "-                java.io.File file = new java.io.File(url.getFile());", "-                return file.getAbsolutePath();", "-            } else {", "-                return url.toString();", "-            }", "-        } catch (Throwable t) {", "-        }", "-        return null;", "+        File f = LoaderUtils.getClassSource(clazz);", "+        return f == null ? null : f.getAbsolutePath();"]}]}