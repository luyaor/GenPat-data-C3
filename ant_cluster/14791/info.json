{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c9026efe9ce14a46905a76d3141c7ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e8fdf965ff325c54481e4110f6a47a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "bf37341e1a0cefb4e43784eb86211a28539f50c4", "commitAfterChange": "8ca6f54b9ad33f769e4ec781c9416c58515bc3e6", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public String toURI(String path)", "signatureAfterChange": "     public String toURI(String path)", "diff": ["+        boolean isDir = (new File(path)).isDirectory();", "+", "+        ", "+        if (isDir && !path.endsWith(\"/\")) {", "+            sb.append('/');", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "340f524b62798e55d0d0d6d8c3719ea6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/launcher/Main.java", "commitBeforeChange": "3509786a75f3a1ebb211822f4b1dfdaf7dde57fd", "commitAfterChange": "d678e492b98fc7a29ed46b3f9d8ffade75c3bb4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private final static URL[] buildURLList( final File dir )         throws Exception", "signatureAfterChange": "      private final static URL[] buildURLList( final File dir )         throws Exception", "diff": ["+                //ignore non-files or unreadable files", "+                continue;", "+            }", "+", "+            final String name = file.getName();", "+            if( !name.endsWith( \".jar\" ) && !name.endsWith( \".zip\" ) )", "+            {", "+                //Ifnore files in lib dir that are not jars or zips"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f2320751fad8f345e589044583585a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "6ffa10f973a6f54e68480cacb3eccfa2b714d682", "commitAfterChange": "5826ef1968958b0862e266b27a0af5416aaf761b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+            boolean systemFirst = false;", "+            String bscp = project.getProperty(\"build.sysclasspath\");", "+            if (bscp != null && bscp.equals(\"only\")) {", "+                systemFirst = true;", "+            }", "-                al = new AntClassLoader(project, classpath, false);", "+                al = new AntClassLoader(project, classpath, systemFirst);", "-                al = new AntClassLoader(project, Path.systemClasspath, false);", "+                al = new AntClassLoader(project, Path.systemClasspath, systemFirst);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a75c37ca7ae21314a9899a2e15bac1f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "5b42e946eda9500fe6680fa1cdda0c43d6914ea7", "commitAfterChange": "13bdae7c19c9af4d586622a10c4edf8a31fe8580", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["+            Throwable ex = event.getException();", "+            if (Project.MSG_DEBUG <= msgOutputLevel && ex != null) {", "+                    message.append(StringUtils.getStackTrace(ex));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adb30039945c9fcf8c0c32122bfff8f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/DefaultCompilerAdapter.java", "commitBeforeChange": "4d54e45862128d60a74aa584f17f2277dcedb1d9", "commitAfterChange": "aa09ea1b1f63515952d2b1d9f384d820868e21bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches( Commandline cmd,                                                          boolean useDebugLevel )         throws TaskException", "diff": ["-        cmd.addArgument( PathUtil.formatPath( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath, getTaskContext() ) );", "-        cmd.addArgument( PathUtil.formatPath( src ) );", "+        cmd.addArgument( PathUtil.formatPath( src, getTaskContext() ) );", "-        if( m_bootclasspath != null )", "+        final String[] bootclasspath = m_bootclasspath.listFiles( getTaskContext() );", "+        if( bootclasspath.length > 0 )", "-            cmd.addArgument( PathUtil.formatPath( m_bootclasspath ) );", "+            cmd.addArgument( PathUtil.formatPath( bootclasspath ) );", "-            cmd.addArgument( PathUtil.formatPath( m_extdirs ) );", "+            cmd.addArgument( PathUtil.formatPath( m_extdirs, getTaskContext() ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2923970c993405f3c1dae4111390fbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "4848c4503153606ff29c6a0548ec094eec904091", "commitAfterChange": "6e72d89be84e4a3b021e1d59f14a97d2f4959adc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     static String fromURIJava13(String uri)", "signatureAfterChange": "     public static String fromURIJava13(String uri)", "diff": ["-    static String fromURIJava13(String uri) {", "+    public static String fromURIJava13(String uri) {", "+            //consider adding the current directory. This is not done when", "+            //the path is a UNC name", "-            int posi = cwd.indexOf(\":\");", "-            if ((posi > 0) && path.startsWith(File.separator)) {", "-               path = cwd.substring(0, posi + 1) + path;", "+            int posi = cwd.indexOf(':');", "+            boolean pathStartsWithFileSeparator = path.startsWith(File.separator);", "+            boolean pathStartsWithUNC = path.startsWith(\"\" + File.separator + File.separator);", "+            if ((posi > 0) && pathStartsWithFileSeparator && !pathStartsWithUNC) {", "+                path = cwd.substring(0, posi + 1) + path;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a17c72688a29e28a52cd6fbc76c971", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "c2875d3bd870af53b42f47be6bb26035973381c5", "commitAfterChange": "a9f17b8762844ce8dde2b9563286a431d223fbcb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void store(OutputStream out, String header) throws IOException", "signatureAfterChange": "      public void store(OutputStream out, String header) throws IOException", "diff": ["-        for (Iterator i = logicalLines.iterator(); i.hasNext();) {", "+        boolean maySkipComment = header != null;", "+        for (Iterator i = logicalLines.iterator(); i.hasNext();", "+             maySkipComment = false) {", "+            if (maySkipComment && line instanceof Comment && ", "+                header.equals(line.toString().substring(1))) {", "+                continue;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e335c3b6c64d990a63c8b64a0385009f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "5c2af90369a64d60eaaca8c1a47176fc42747256", "commitAfterChange": "fdc903238f666ea1f4f60385d40463c8ca3494d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["+     */", "-                               String entryName,", "-                               Date entryDate, boolean isDirectory)", "+                               String entryName, Date entryDate,", "+                               boolean isDirectory, FileNameMapper mapper)", "-        File f = fileUtils.resolveFile(dir, entryName);", "+        String[] mappedNames = mapper.mapFileName(entryName);", "+        if (mappedNames == null || mappedNames.length == 0) {", "+            mappedNames = new String[] { entryName };", "+        }", "+        File f = fileUtils.resolveFile(dir, mappedNames[0]);"]}]}