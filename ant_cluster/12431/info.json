{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e576b2471164c23f995f61d3ed80c1cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "245600b2c762756f6fbd766e82158d02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/script/ScriptDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testException()", "signatureAfterChange": "      @Test     public void testException()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"exception\",", "-            \"Should have thrown an exception in the script\",", "-            \"TypeError\");", "+        try {", "+            buildRule.executeTarget(\"exception\");", "+            fail(\"Should have thrown an exception in the script\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"TypeError\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e6e1a4e8c7aeb1b7c64204690050f11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/script/ScriptDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testNoName()", "signatureAfterChange": "      @Test     public void testNoName()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"noname\",", "-            \"Absence of name attribute not detected\",", "-            \"scriptdef requires a name attribute\");", "+        try {", "+            buildRule.executeTarget(\"noname\");", "+            fail(\"Absence of name attribute not detected\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"scriptdef requires a name attribute\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f580d01b0a2d666241c50f6068361364", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/SchemaValidateTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testNoDuplicateSchema() throws Exception", "signatureAfterChange": "      @Test     public void testNoDuplicateSchema() throws Exception", "diff": ["+", "+    @Test", "-        expectBuildExceptionContaining(\"testNoDuplicateSchema\",", "-                \"duplicate schemas with different values\",", "-                SchemaValidate.ERROR_DUPLICATE_SCHEMA);", "+        try {", "+            buildRule.executeTarget(\"testNoDuplicateSchema\");", "+            fail(\"duplicate schemas with different values\");", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(SchemaValidate.ERROR_DUPLICATE_SCHEMA,", "+                    ex.getMessage());", "+        }"]}]}