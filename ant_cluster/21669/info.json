{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf8016530b3234efbe0d4bbd63ff7825", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1829a5e513b7089260d47c97dc71ca47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/WaitFor.java", "commitBeforeChange": "4afd11bb119c92ef5536603607b7c9a0061ec42c", "commitAfterChange": "a4bf9960619bf043094a34944f34e2f7e928994b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "-        long savedMaxWaitMillis = maxWaitMillis;", "-        long savedCheckEveryMillis = checkEveryMillis;", "-            try {", "-                maxWaitMillis *= maxWaitMultiplier;", "-                checkEveryMillis *= checkEveryMultiplier;", "-                long start = System.currentTimeMillis();", "-                long end = start + maxWaitMillis;", "+            long maxWaitMillis = calculateMaxWaitMillis();", "+            long checkEveryMillis = calculateCheckEveryMillis();", "+            long start = System.currentTimeMillis();", "+            long end = start + maxWaitMillis;", "-                while (System.currentTimeMillis() < end) {", "-                    if (c.eval()) {", "-                        processSuccess();", "-                        return;", "-                    }", "-                    Thread.sleep(checkEveryMillis);", "+            while (System.currentTimeMillis() < end) {", "+                if (c.eval()) {", "+                    processSuccess();", "+                    return;", "-            } catch (InterruptedException e) {", "-                log(\"Task \" + getTaskName()", "-                        + \" interrupted, treating as timed out.\");", "+                Thread.sleep(checkEveryMillis);", "-            processTimeout();", "-        } finally {", "-            maxWaitMillis = savedMaxWaitMillis;", "-            checkEveryMillis = savedCheckEveryMillis;", "+        } catch (InterruptedException e) {", "+            log(\"Task \" + getTaskName()", "+                    + \" interrupted, treating as timed out.\");", "+        processTimeout();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c88428a58108d2a6dd4aba722d8229", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/WaitFor.java", "commitBeforeChange": "9cd9731a6282f485db20727f539edf735533c19a", "commitAfterChange": "f1e7b4baf59161757ad5d81e6d7938b827ba36b0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            maxWaitMillis *= maxWaitMultiplier;", "-            checkEveryMillis *= checkEveryMultiplier;", "-            long start = System.currentTimeMillis();", "-            long end = start + maxWaitMillis;", "+            try {", "+                maxWaitMillis *= maxWaitMultiplier;", "+                checkEveryMillis *= checkEveryMultiplier;", "+                long start = System.currentTimeMillis();", "+                long end = start + maxWaitMillis;", "-            while (System.currentTimeMillis() < end) {", "-                if (c.eval()) {", "-                    processSuccess();", "-                    return;", "-                }", "-                try {", "+                while (System.currentTimeMillis() < end) {", "+                    if (c.eval()) {", "+                        processSuccess();", "+                        return;", "+                    }", "-                } catch (InterruptedException e) {", "-                    // ignore", "+            } catch (InterruptedException e) {", "+                log(\"Task \" + getTaskName()", "+                        + \" interrupted, treating as timed out.\");"]}]}