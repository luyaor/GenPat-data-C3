{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15b90a94266f6d808113fa726aeac998", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f12778c2b99e105d2438d7fd53ef6d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries)          throws ExecutionException", "signatureAfterChange": "     private void configLibrary(InitConfig initConfig, Map librarySpecs,                                String libraryId,                                CircularDependencyChecker configuring,                                Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-                               Map libraries)", "+                               Map libraries, Map libPathsMap)", "-                        configuring, libraries);", "+                        configuring, libraries, libPathsMap);", "-            URL[] parserURLs = initConfig.getParserURLs();", "+                URL[] parserURLs = initConfig.getParserURLs();", "+", "+            List libPaths = (List)libPathsMap.get(libraryId);", "+            if (libPaths != null) {", "+                for (Iterator j = libPaths.iterator(); j.hasNext(); ) {", "+                    URL pathURL = (URL)j.next();", "+                    addLibPath(antLibrary, pathURL);", "+                }", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bede16559aee025728b7cd5249da5914", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "05f8f8bd0222ad18fdc6cbeaa798ac06ff40be04", "commitAfterChange": "77024a43a293e7911609d3c3192e773f082688ce", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void merge(Section section) throws ManifestException", "signatureAfterChange": "         public void merge(Section section, boolean mergeClassPaths)             throws ManifestException", "diff": ["+         */", "+        public void merge(Section section, boolean mergeClassPaths)", "+            throws ManifestException {", "-                // the merge file *always* wins, even for Class-Path", "+                if (mergeClassPaths) {", "+                    Attribute currentCp = getAttribute(ATTRIBUTE_CLASSPATH);", "+                    if (currentCp != null) {", "+                        for (Enumeration attribEnum = currentCp.getValues();", "+                             attribEnum.hasMoreElements(); ) {", "+                            String value = (String) attribEnum.nextElement();", "+                            classpathAttribute.addValue(value);", "+                        }", "+                    }", "+                }"]}]}