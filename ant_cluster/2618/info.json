{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e013c3c6053679e175f446eab0b8ef3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f8a5af0f532c3de8c44a96f6e970b36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "584538b2d51bc33323178552ca508b0ee109fc33", "commitAfterChange": "165b7dfa13d2cc15ed344294540b2ff3d68bca98", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private ByteArrayOutputStream getBuffer()", "signatureAfterChange": "     private BufferInfo getBufferInfo()", "diff": ["-    private ByteArrayOutputStream getBuffer() {", "+    private BufferInfo getBufferInfo() {", "-        ByteArrayOutputStream buffer = (ByteArrayOutputStream)buffers.get(current);", "-        if (buffer == null) {", "-            buffer = new ByteArrayOutputStream();", "-            buffers.put(current, buffer);", "+        BufferInfo bufferInfo = (BufferInfo)buffers.get(current);", "+        if (bufferInfo == null) {", "+            bufferInfo = new BufferInfo();", "+            bufferInfo.buffer = new ByteArrayOutputStream();", "+            bufferInfo.skip = false;", "+            buffers.put(current, bufferInfo);", "-        return buffer;", "+        return bufferInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77ec2c485de74fff417d3a279e5d8a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/spi/Service.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public InputStream getAsStream() throws IOException", "signatureAfterChange": "     public InputStream getAsStream() throws IOException", "diff": ["-        ByteArrayOutputStream arrayOut;", "-        Writer writer;", "-        Iterator providerIterator;", "-        Provider provider;", "-", "-        arrayOut = new ByteArrayOutputStream();", "-        writer = new OutputStreamWriter(arrayOut, \"UTF-8\");", "-        providerIterator = providerList.iterator();", "-        while (providerIterator.hasNext()) {", "-            provider = (Provider) providerIterator.next();", "+        ByteArrayOutputStream arrayOut = new ByteArrayOutputStream();", "+        Writer writer = new OutputStreamWriter(arrayOut, \"UTF-8\");", "+        for (Provider provider : providerList) {"]}]}