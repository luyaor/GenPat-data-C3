{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34cdfd354bb3a366576f64d7bb0cb086", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f30305f291b34311a4f65f1433528f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected Map getAllProperties()", "signatureAfterChange": "     protected Iterator getRefNames()", "diff": ["-     */", "-    protected Map getAllProperties() {", "-        Map allProperties = new HashMap(dataValues);", "-        Iterator i = referencedFrames.keySet().iterator();", "-", "-        while (i.hasNext()) {", "-            String refName = (String) i.next();", "-            Frame refFrame = getReferencedFrame(refName);", "-            Map refProperties = refFrame.getAllProperties();", "-            Iterator j = refProperties.keySet().iterator();", "-", "-            while (j.hasNext()) {", "-                String name = (String) j.next();", "-                Object value = refProperties.get(name);", "-", "-                allProperties.put(refName + Project.REF_DELIMITER + name,", "-                    value);", "-            }", "-        }", "-", "-        return allProperties;", "-    }", "+     */", "+    protected Iterator getRefNames() {", "+        return referencedFrames.keySet().iterator();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a69e740bc641661f04bfd168859a1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/AbstractAntTask.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Parameters buildParameters()         throws TaskException", "signatureAfterChange": "     private Map buildParameters()         throws TaskException", "diff": ["-    private Parameters buildParameters()", "+    private Map buildParameters()", "-        final Parameters parameters = new Parameters();", "+        final Map parameters = new HashMap();", "-            final Map properties = getContext().getProperties();", "-            final Iterator keys = properties.keySet().iterator();", "-            while( keys.hasNext() )", "-            {", "-                final String key = (String)keys.next();", "-                final Object value = properties.get( key );", "-                setProperty( parameters, key, value );", "-            }", "+            parameters.putAll( getContext().getProperties() );", "-            final String value = param.getValue().toString();", "-            setProperty( parameters, name, value );", "+            final Object value = param.getValue();", "+            parameters.put( name, value );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a34de1e47890ee658e404b51cb5f1865", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/Project.java", "commitBeforeChange": "f1025dd3c6deebb466ac41a06a42d812cdf4e08d", "commitAfterChange": "c2f14ffad1518f0d1c23c084b7c216d06c5da363", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void validate(String globalName) throws ModelException", "signatureAfterChange": "     public void validate() throws ModelException", "diff": ["-     */", "-    protected void validate(String globalName) throws ModelException {", "-        Set keys = referencedProjects.keySet();", "-        for (Iterator i = keys.iterator(); i.hasNext();) {", "-            String refName = (String) i.next();", "-            Project referencedProject", "-                 = (Project) referencedProjects.get(refName);", "-            String refGlobalName = refName;", "-            if (globalName != null) {", "-                refGlobalName = globalName + REF_DELIMITER + refName;", "-            }", "-            referencedProject.validate(refGlobalName);", "-        }", "-", "-        // we now check whether all of dependencies for our targets", "+        // check whether all of dependencies for our targets", "+", "-            fillinDependencyOrder(globalName, target, dependencyOrder,", "+            fillinDependencyOrder(target, dependencyOrder,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b38bb1d060167a89ca0196d8f90997a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Map getAllProperties()", "signatureAfterChange": "     protected Map getAllProperties()", "diff": ["-     */", "-    public Map getAllProperties() {", "-        Map allProperties = new HashMap(dataValues);", "-        Iterator i = referencedFrames.keySet().iterator(); ", "-        while (i.hasNext()) {", "-            String refName = (String)i.next();", "-            ExecutionFrame refFrame = getReferencedFrame(refName);", "-            Map refProperties = refFrame.getAllProperties();", "-            Iterator j = refProperties.keySet().iterator();", "-            while (j.hasNext()) {", "-                String name = (String)j.next();", "-                Object value = refProperties.get(name);", "-                allProperties.put(refName + Project.REF_DELIMITER + name,", "-                    value);", "-            }", "-        }", "-        ", "-        return allProperties;", "-    }", "+     */", "+    protected Map getAllProperties() {", "+        Map allProperties = new HashMap(dataValues);", "+        Iterator i = referencedFrames.keySet().iterator();", "+        while (i.hasNext()) {", "+            String refName = (String)i.next();", "+            ExecutionFrame refFrame = getReferencedFrame(refName);", "+            Map refProperties = refFrame.getAllProperties();", "+            Iterator j = refProperties.keySet().iterator();", "+            while (j.hasNext()) {", "+                String name = (String)j.next();", "+                Object value = refProperties.get(name);", "+                allProperties.put(refName + Project.REF_DELIMITER + name,", "+                    value);", "+            }", "+        }", "+", "+        return allProperties;"]}]}