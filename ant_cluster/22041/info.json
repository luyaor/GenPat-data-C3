{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57d8a5479f5d5fcf23f9a74028534c6f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9872fc3c9433378424b85cc685c919", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "e562f879e82fea2c7960533aaa097c769429968c", "commitAfterChange": "4db83aaa5baa9b47810796035a0e9cafeab911d7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void addToIncludeFileMap(File file) throws BuildException", "signatureAfterChange": "     private void addToIncludeFileMap(File file) throws BuildException", "diff": ["-        if (file != null) {", "-            if (file.exists()) {", "-                if (property == null) {", "-                    File checksumFile = getChecksumFile(file);", "-                    if (forceOverwrite || isCondition", "-                        || (file.lastModified() > checksumFile.lastModified())) {", "-                        includeFileMap.put(file, checksumFile);", "-                    } else {", "-                        log(file + \" omitted as \" + checksumFile + \" is up to date.\",", "-                            Project.MSG_VERBOSE);", "-                        if (totalproperty != null) {", "-                            // Read the checksum from disk.", "-                            String checksum = readChecksum(checksumFile);", "-                            byte[] digest = decodeHex(checksum.toCharArray());", "-                            allDigests.put(file, digest);", "-                        }", "-                    }", "+        if (file.exists()) {", "+            if (property == null) {", "+                File checksumFile = getChecksumFile(file);", "+                if (forceOverwrite || isCondition", "+                    || (file.lastModified() > checksumFile.lastModified())) {", "+                    includeFileMap.put(file, checksumFile);", "-                    includeFileMap.put(file, property);", "+                    log(file + \" omitted as \" + checksumFile + \" is up to date.\",", "+                        Project.MSG_VERBOSE);", "+                    if (totalproperty != null) {", "+                        // Read the checksum from disk.", "+                        String checksum = readChecksum(checksumFile);", "+                        byte[] digest = decodeHex(checksum.toCharArray());", "+                        allDigests.put(file, digest);", "+                    }", "-                String message = \"Could not find file \"", "-                    + file.getAbsolutePath()", "-                    + \" to generate checksum for.\";", "-                log(message);", "-                throw new BuildException(message, getLocation());", "+                includeFileMap.put(file, property);", "+        } else {", "+            String message = \"Could not find file \"", "+                + file.getAbsolutePath()", "+                + \" to generate checksum for.\";", "+            log(message);", "+            throw new BuildException(message, getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c506cda450f8efdc9563e91199779786", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/IsSigned.java", "commitBeforeChange": "81d29e52f1d4715920d593792f56adf5e71faf03", "commitAfterChange": "0adae3872fabb89ded584e82546ed9b6f357e18c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean eval()", "signatureAfterChange": "     public boolean eval()", "diff": ["-    public boolean eval() {", "-        if (file == null) {", "-            throw new BuildException(\"The file attribute must be set.\");", "-        }", "-        if (file != null && !file.exists()) {", "-            log(\"The file \\\"\" + file.getAbsolutePath()", "-                    + \"\\\" does not exist.\", Project.MSG_VERBOSE);", "-            return false;", "-        }", "-", "-            jarFile = new ZipFile(file);", "-                    String name = ((ZipEntry) entries.nextElement()).getName();", "-                    if (name.startsWith(SIG_START) && name.endsWith(SIG_END)) {", "-                        log(\"File \\\"\" + file.getAbsolutePath()", "-                            + \"\\\" is signed.\", Project.MSG_VERBOSE);", "-                                    + name.toUpperCase()", "-                                    + SIG_END) != null;", "-                boolean longSig  = jarFile.getEntry(SIG_START", "-                                    + name.substring(0, 8).toUpperCase()", "-                                    + SIG_END) != null;", "-                if (shortSig || longSig) {", "-                    log(\"File \\\"\" + file.getAbsolutePath()", "-                        + \"\\\" is signed.\", Project.MSG_VERBOSE);", "-                    return true;", "-                } else {", "-                    return false;", "-        } catch (IOException e) {", "-            log(\"Got IOException reading file \\\"\" + file.getAbsolutePath()", "-                + \"\\\"\" + e, Project.MSG_VERBOSE);", "-            return false;", "+     */", "+    public boolean eval() {", "+        if (file == null) {", "+            throw new BuildException(\"The file attribute must be set.\");", "+        }", "+        if (file != null && !file.exists()) {", "+            log(\"The file \\\"\" + file.getAbsolutePath()", "+                + \"\\\" does not exist.\", Project.MSG_VERBOSE);", "+            return false;", "+        }", "+", "+        boolean r = false;", "+        try {", "+            r = isSigned(file, name);", "+        } catch (IOException e) {", "+            log(\"Got IOException reading file \\\"\" + file.getAbsolutePath()", "+                + \"\\\"\" + e, Project.MSG_WARN);", "+        }", "+", "+        if (r) {", "+            log(\"File \\\"\" + file.getAbsolutePath() + \"\\\" is signed.\",", "+                Project.MSG_VERBOSE);", "+        }", "+        return r;", "+    }"]}]}