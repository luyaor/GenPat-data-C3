{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30951c2dfc088862a9b76de3851c120e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ffd2302da10bd785b9764e9a1a41b3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestListenerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testTestCountFired()", "signatureAfterChange": "      @Test     public void testTestCountFired()", "diff": ["+    @Test", "-        getProject().setProperty(\"enableEvents\", \"true\");", "-        executeTarget(PASS_TEST_TARGET);", "-\tassertTrue(\"expecting test count message\",", "-\t\t   hasEventMessage(JUnitTask.TESTLISTENER_PREFIX + ", "-\t\t\t\t   \"tests to run: \"));", "+        buildRule.getProject().setProperty(\"enableEvents\", \"true\");", "+        buildRule.executeTarget(PASS_TEST_TARGET);", "+\t    assertContains(\"expecting test count message\", JUnitTask.TESTLISTENER_PREFIX + ", "+\t\t\t\t   \"tests to run: \", buildRule.getFullLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c8a21b6a6a84556f3b7218700f1f99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestListenerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testStartTestFired()", "signatureAfterChange": "          @Test     public void testStartTestFired()", "diff": ["+    @Test", "-        getProject().setProperty(\"enableEvents\", \"true\");", "-        executeTarget(PASS_TEST_TARGET);", "-\tassertTrue(\"expecting test started message\",", "-\t\t   hasEventMessage(JUnitTask.TESTLISTENER_PREFIX + ", "-\t\t\t\t   \"startTest(\" + PASS_TEST + \")\"));", "+        buildRule.getProject().setProperty(\"enableEvents\", \"true\");", "+        buildRule.executeTarget(PASS_TEST_TARGET);", "+        assertContains(\"expecting test started message\", JUnitTask.TESTLISTENER_PREFIX + ", "+\t\t\t\t   \"startTest(\" + PASS_TEST + \")\", buildRule.getFullLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac00d1c2cd655590b582afd7795f15e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestListenerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "          public void testEndTestFired()", "signatureAfterChange": "          @Test     public void testEndTestFired()", "diff": ["+    @Test", "-        getProject().setProperty(\"enableEvents\", \"true\");", "-        executeTarget(PASS_TEST_TARGET);", "-\tassertTrue(\"expecting test ended message\",", "-\t\t   hasEventMessage(JUnitTask.TESTLISTENER_PREFIX + ", "-\t\t\t\t   \"endTest(\" + PASS_TEST + \")\"));", "+        buildRule.getProject().setProperty(\"enableEvents\", \"true\");", "+        buildRule.executeTarget(PASS_TEST_TARGET);", "+        assertContains(\"expecting test ended message\", JUnitTask.TESTLISTENER_PREFIX + ", "+\t\t\t\t   \"endTest(\" + PASS_TEST + \")\", buildRule.getFullLog());"]}]}