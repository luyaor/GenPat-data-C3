{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be57c19ce1f38051443aa663fc3d0a7d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2de0b688f7f299d9b1313506172ca2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarUtils.java", "commitBeforeChange": "b43f4224d8fe9d1e7d628e88df394a7dfed46d1b", "commitAfterChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public static int getCheckSumOctalBytes(long value, byte[] buf, int offset, int length)", "signatureAfterChange": "     public static int formatCheckSumOctalBytes(final long value, byte[] buf, final int offset, final int length)", "diff": ["-    public static int getCheckSumOctalBytes(long value, byte[] buf, int offset, int length) {", "-        getOctalBytes(value, buf, offset, length);", "+    public static int formatCheckSumOctalBytes(final long value, byte[] buf, final int offset, final int length) {", "-        buf[offset + length - 1] = (byte) ' ';", "-        buf[offset + length - 2] = 0;", "+        int idx=length-2; // for NUL and space", "+        formatUnsignedOctalString(value, buf, offset, idx);", "+", "+        buf[offset + idx++]   = 0; // Trailing null", "+        buf[offset + idx]     = (byte) ' '; // Trailing space"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f745f40346552b01611ed090de66e8a3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarUtils.java", "commitBeforeChange": "b43f4224d8fe9d1e7d628e88df394a7dfed46d1b", "commitAfterChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public static int getLongOctalBytes(long value, byte[] buf, int offset, int length)", "signatureAfterChange": "     public static int formatLongOctalBytes(final long value, byte[] buf, final int offset, final int length)", "diff": ["+     */", "+    public static int formatLongOctalBytes(final long value, byte[] buf, final int offset, final int length) {", "+", "+        int idx=length-1; // For space", "+", "+        formatUnsignedOctalString(value, buf, offset, idx);", "+        buf[offset + idx] = (byte) ' '; // Trailing space", "+", "+        return offset + length;", "+    }", "-     */", "-    public static int getLongOctalBytes(long value, byte[] buf, int offset, int length) {", "-        byte[] temp = new byte[length + 1];", "-        getOctalBytes(value, temp, 0, length + 1);", "-        System.arraycopy(temp, 0, buf, offset, length);", "-", "-        return offset + length;"]}]}