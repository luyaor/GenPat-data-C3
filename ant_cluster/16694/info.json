{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "203ee9883c58af9df175d263a90ff33c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce972451f4c48ba501a79a5f2e4c1283", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void buildTarget( final DefaultProject project, final Configuration target )         throws AntException", "signatureAfterChange": "     protected void buildTarget( final DefaultProject project, final Configuration target )         throws Exception", "diff": ["-        throws AntException", "+        throws Exception", "-            throw new AntException( \"Discovered un-named target at \" +", "+            throw new Exception( \"Discovered un-named target at \" +", "-            throw new AntException( \"Discovered invalid target that has both a if and \" +", "+            throw new Exception( \"Discovered invalid target that has both a if and \" +", "-                    throw new AntException( \"Discovered empty dependency in target \" +", "-                                            target.getName() + \" at \" + target.getLocation() );", "+                    throw new Exception( \"Discovered empty dependency in target \" +", "+                                         target.getName() + \" at \" + target.getLocation() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d68138ace0cfaf56814a757c5a6283dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/BindTargets.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      @Override \tpublic void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "+    @Override", "+\tpublic void execute() throws BuildException {", "-        ProjectHelper helper = (ProjectHelper) getProject().getReference(", "+        final ProjectHelper helper = (ProjectHelper) getProject().getReference(", "-        for (Iterator<String> itTarget = targets.iterator(); itTarget.hasNext();) {", "+        for (final Iterator<String> itTarget = targets.iterator(); itTarget.hasNext();) {", "-                    new String[] { extensionPoint, itTarget.next(),", "-                                            onMissingExtensionPoint.name() });", "+                    new String[] {extensionPoint, itTarget.next(),", "+                                            onMissingExtensionPoint.name()});"]}]}