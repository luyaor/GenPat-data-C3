{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcdcc1541a7e1c714cf5d7c7c22a59f8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8ba10ef1df4790415193c7c06ac51c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/condition/IsPingable.java", "commitBeforeChange": "8bb8dce32cd2a9b6751e23dfb43e5f0b9d60a3e5", "commitAfterChange": "f1414a37f28a85a5b7fab5e4019b723c5a3546d2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean eval() throws BuildException", "signatureAfterChange": "     public boolean eval() throws BuildException", "diff": ["-        if (host == null || host.length() == 0) {", "+        if (empty(host) && empty(url)) {", "+        String target = host;", "+        if (!empty(url)) {", "+            if (!empty(host)) {", "+                throw new BuildException(ERROR_BOTH_TARGETS);", "+            }", "+            try {", "+                //get the host of a url", "+                URL realURL = new URL(url);", "+                target = realURL.getHost();", "+            } catch (MalformedURLException e) {", "+                throw new BuildException(\"Bad URL \" + url, e);", "+            }", "+        }", "-            InetAddress address = InetAddress.getByName(host);", "-            return address.isReachable(timeout * 1000);", "+            log(\"Probing host \" + target, Project.MSG_VERBOSE);", "+            InetAddress address = InetAddress.getByName(target);", "+            log(\"Host address =\" + address.getHostAddress(),", "+                    Project.MSG_VERBOSE);", "+            final boolean reachable = address.isReachable(timeout * 1000);", "+            log(\"host is \" + (reachable ? \"\" : \"not\") + \" reachable\",", "+                    Project.MSG_VERBOSE);", "+            return reachable;", "-            log(ERROR_UNKNOWN_HOST + host, Project.MSG_VERBOSE);", "+            log(ERROR_UNKNOWN_HOST + target);", "-            log(ERROR_ON_NETWORK + host + \": \" + e.toString(),", "-                    Project.MSG_VERBOSE);", "+            log(ERROR_ON_NETWORK + target + \": \" + e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2728718d5a058dcacb29ce1fad305e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ConditionTask.java", "commitBeforeChange": "910c937723c4710cb1309c939dbcd4b8c3e8b6ce", "commitAfterChange": "bdfee6de49421e9d026d6f0f1b48db07ec31621d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"You must not nest more than one \"", "-                + \"condition into <\"", "-                + getTaskName() + \">\");", "+            throw new BuildException(\"You must not nest more than one condition into <\"", "+                    + getTaskName() + \">\");", "-            throw new BuildException(\"You must nest a condition into <\"", "-                + getTaskName() + \">\");", "+            throw new BuildException(\"You must nest a condition into <\" + getTaskName() + \">\");", "-            log(\"Condition true; setting \" + property + \" to \" + value,", "-                Project.MSG_DEBUG);", "-            getProject().setNewProperty(property, value);", "+            log(\"Condition true; setting \" + property + \" to \" + value, Project.MSG_DEBUG);", "+            PropertyHelper.getPropertyHelper(getProject()).setNewProperty(property, value);", "-            log(\"Condition false; setting \" + property + \" to \" + alternative,", "-                Project.MSG_DEBUG);", "-            getProject().setNewProperty(property, alternative);", "+            log(\"Condition false; setting \" + property + \" to \" + alternative, Project.MSG_DEBUG);", "+            PropertyHelper.getPropertyHelper(getProject()).setNewProperty(property, alternative);", "-            log(\"Condition false; not setting \" + property,", "-                Project.MSG_DEBUG);", "+            log(\"Condition false; not setting \" + property, Project.MSG_DEBUG);"]}]}