{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5d5fb30022123e7ce1147b2886dce5c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b79f2b3f88081eea72c1282b700f38c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/ExecuteWatchdog.java", "commitBeforeChange": "bc26bb7cdcb37a5b579734985586e9cb1c7bc899", "commitAfterChange": "007e5e2034ecd772345540300195ae11d2bb590d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void run()", "signatureAfterChange": "     public synchronized void run()", "diff": ["-            final long until = System.currentTimeMillis() + timeout;", "+            final long until = System.currentTimeMillis() + m_timeout;", "-            while( watch && until > ( now = System.currentTimeMillis() ) )", "+            while( m_watch && until > ( now = System.currentTimeMillis() ) )", "-                process.exitValue();", "+                m_process.exitValue();", "-                if( watch )", "+                if( m_watch )", "-                    killedProcess = true;", "-                    process.destroy();", "+                    m_killedProcess = true;", "+                    m_process.destroy();", "-            caught = e;", "+            m_caught = e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9fac5e7ffe9caa54bac48968176a4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/ExecuteWatchdog.java", "commitBeforeChange": "bc26bb7cdcb37a5b579734985586e9cb1c7bc899", "commitAfterChange": "007e5e2034ecd772345540300195ae11d2bb590d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized void run()", "signatureAfterChange": "     public synchronized void run()", "diff": ["-            final long until = System.currentTimeMillis() + timeout;", "+            final long until = System.currentTimeMillis() + m_timeout;", "-            while( watch && until > ( now = System.currentTimeMillis() ) )", "+            while( m_watch && until > ( now = System.currentTimeMillis() ) )", "-                process.exitValue();", "+                m_process.exitValue();", "-                if( watch )", "+                if( m_watch )", "-                    killedProcess = true;", "-                    process.destroy();", "+                    m_killedProcess = true;", "+                    m_process.destroy();", "-            caught = e;", "+            m_caught = e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5561d387307b1c07b086e2663326b8f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "95bdf91904694fb33573b24512fa2b3ee5d02789", "commitAfterChange": "4a63f3b33824d1af6537636e50dc9f0bf73221aa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void checkOptions()         throws TaskException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        if( toDir == null )", "+        if( m_toDir == null )", "-            toDir = FileUtil.resolveFile( task.getBaseDirectory(), \".\" );", "+            m_toDir = FileUtil.resolveFile( m_task.getBaseDirectory(), \".\" );", "-        else if( !toDir.isAbsolute() )", "+        else if( !m_toDir.isAbsolute() )", "-            toDir = FileUtil.resolveFile( task.getBaseDirectory(), toDir.getPath() );", "+            m_toDir = FileUtil.resolveFile( m_task.getBaseDirectory(), m_toDir.getPath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78b6e1d6a43f4f8a54a3f4df8f96ca31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/SourceFileScanner.java", "commitBeforeChange": "bb1068db8673784e303f691472174946a004c811", "commitAfterChange": "cbeb4704a086bebb4de6c524d16bdc2d087953fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String[] restrict( String[] files, File srcDir, File destDir,                               FileNameMapper mapper )         throws TaskException", "signatureAfterChange": "     public String[] restrict( String[] files, File srcDir, File destDir,                               FileNameMapper mapper )         throws TaskException", "diff": ["-                task.log( files[ i ] + \" skipped - don\\'t know how to handle it\",", "+                m_task.log( files[ i ] + \" skipped - don\\'t know how to handle it\",", "-            File src = fileUtils.resolveFile( srcDir, files[ i ] );", "+            File src = FileUtil.resolveFile( srcDir, files[ i ] );", "-                task.log( \"Warning: \" + files[ i ] + \" modified in the future.\",", "+                m_task.log( \"Warning: \" + files[ i ] + \" modified in the future.\",", "-                File dest = fileUtils.resolveFile( destDir, targets[ j ] );", "+                File dest = FileUtil.resolveFile( destDir, targets[ j ] );", "-                    task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" doesn\\'t exist.\",", "+                    m_task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" doesn\\'t exist.\",", "-                    task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" is outdated.\",", "+                    m_task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" is outdated.\",", "-                task.log( files[ i ] + \" omitted as \" + targetList.toString()", "+                m_task.log( files[ i ] + \" omitted as \" + targetList.toString()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809857cb31bab5004e5273c692e17a5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "95bdf91904694fb33573b24512fa2b3ee5d02789", "commitAfterChange": "4a63f3b33824d1af6537636e50dc9f0bf73221aa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void checkOptions()         throws TaskException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        if( toDir == null )", "+        if( m_toDir == null )", "-            toDir = FileUtil.resolveFile( task.getBaseDirectory(), \".\" );", "+            m_toDir = FileUtil.resolveFile( m_task.getBaseDirectory(), \".\" );", "-        else if( !toDir.isAbsolute() )", "+        else if( !m_toDir.isAbsolute() )", "-            toDir = FileUtil.resolveFile( task.getBaseDirectory(), toDir.getPath() );", "+            m_toDir = FileUtil.resolveFile( m_task.getBaseDirectory(), m_toDir.getPath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdd6040e10188c62ecb5eef63df14d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/util/SourceFileScanner.java", "commitBeforeChange": "bb1068db8673784e303f691472174946a004c811", "commitAfterChange": "cbeb4704a086bebb4de6c524d16bdc2d087953fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String[] restrict( String[] files, File srcDir, File destDir,                               FileNameMapper mapper )         throws TaskException", "signatureAfterChange": "     public String[] restrict( String[] files, File srcDir, File destDir,                               FileNameMapper mapper )         throws TaskException", "diff": ["-                task.log( files[ i ] + \" skipped - don\\'t know how to handle it\",", "+                m_task.log( files[ i ] + \" skipped - don\\'t know how to handle it\",", "-            File src = fileUtils.resolveFile( srcDir, files[ i ] );", "+            File src = FileUtil.resolveFile( srcDir, files[ i ] );", "-                task.log( \"Warning: \" + files[ i ] + \" modified in the future.\",", "+                m_task.log( \"Warning: \" + files[ i ] + \" modified in the future.\",", "-                File dest = fileUtils.resolveFile( destDir, targets[ j ] );", "+                File dest = FileUtil.resolveFile( destDir, targets[ j ] );", "-                    task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" doesn\\'t exist.\",", "+                    m_task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" doesn\\'t exist.\",", "-                    task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" is outdated.\",", "+                    m_task.log( files[ i ] + \" added as \" + dest.getAbsolutePath() + \" is outdated.\",", "-                task.log( files[ i ] + \" omitted as \" + targetList.toString()", "+                m_task.log( files[ i ] + \" omitted as \" + targetList.toString()"]}]}