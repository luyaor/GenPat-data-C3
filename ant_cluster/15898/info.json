{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c53720c2427f173d83134f750cd6ad3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a05c3d8c5b4b041ca454af83abe8ffe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "d5103ff56cf6470a214f082e89364f783d0504e8", "commitAfterChange": "b10fa1121fe1819c79ab5c2dd8bbdd990db7fe17", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                        OutputStream os;", "+                        OutputStream os = null;", "-                            // TODO use Appendable", "-                            os = output.getOutputStream();", "-                                log(\"Ignoring append=true for non-file resource \" + output, Project.MSG_WARN);", "+                                Appendable a =", "+                                    (Appendable) output.as(Appendable.class);", "+                                if (a != null) {", "+                                    os = a.getAppendOutputStream();", "+                                }", "+                            }", "+                            if (os == null) {", "+                                os = output.getOutputStream();", "+                                if (append) {", "+                                    log(\"Ignoring append=true for non-appendable\"", "+                                        + \" resource \" + output,", "+                                        Project.MSG_WARN);", "+                                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75814fb72f1b05ec82dee256b28e5c87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/XmlLogger.java", "commitBeforeChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "commitAfterChange": "62e7dc5ae23d71d2d924dd8393e2ceb8a40bc9a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-       String outFilename = event.getProject().getProperty(\"XmlLogger.file\");", "+        String outFilename = event.getProject().getProperty(\"XmlLogger.file\");", "+        }", "+        String xslUri=event.getProject().getProperty(\"ant.XmlLogger.stylesheet.uri\");", "+        if(xslUri==null) {", "+            xslUri=\"log.xsl\";", "-            out.write(\"<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"log.xsl\\\"?>\\n\\n\");", "+            if(xslUri.length()>0) {", "+                out.write(\"<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"\"+xslUri+\"\\\"?>\\n\\n\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9870984b08af4882046988b374541d73", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/unix/SymlinkTest.java", "commitBeforeChange": "8efca5a58020f66fafe94ec85550c80516e60837", "commitAfterChange": "c012d33f03aa6d0fa3d52fdac1e4b42851e927ee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testRecreate()", "signatureAfterChange": "      public void testRecreate()", "diff": ["-        testfail = true;", "+            ", "+            String doubleRecreate = p.getProperty(\"test.recreate.dirlink2.recreated.twice\");", "+", "+            if (doubleRecreate != null) {", "+                fail(doubleRecreate);", "+            }", "+", "+            assertNotNull(\"Failed to alter dirlink3\",", "+                          p.getProperty(\"test.recreate.dirlink3.was.altered\"));", "+", "-        testfail = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9feaaecdac268ab0ce9e849cd480778e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "676859791fc692d8689bb1dcf09e7f3b64ebab65", "commitAfterChange": "73a8298528b981531cc4ff7081f1b60c9c315793", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static String[] getProcEnvCommand()", "diff": ["+            // Determine if we are running under OS X", "+            try {", "+                float version = Float.parseFloat(System.getProperty(\"os.version\"));", "+                if (version >= 10.0) {", "+                    // OS X - just line UNIX", "+                    String[] cmd = {\"/usr/bin/env\"};", "+                    return cmd;", "+                }", "+            } catch (NumberFormatException e) {", "+                // fall through to OS 9", "+            }", "+            // OS 9 and previous"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf3eda6a03f63d241d4d890675d2f249", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WebsphereDeploymentTool.java", "commitBeforeChange": "36c3629dbf1b72591a042b01262ab87e1b236d46", "commitAfterChange": "f38a0348eec2633033f424fe666e9483d5a6d519", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public void validateConfigured() throws BuildException", "signatureAfterChange": "     public void validateConfigured() throws BuildException", "diff": ["+        if (ejbdeploy) {", "+            String home = getTask().getProject().getProperty(\"websphere.home\");", "+            if (home == null) {", "+                throw new BuildException(\"The 'websphere.home' property must be set when 'ejbdeploy=true'\");", "+            }", "+            websphereHome = getTask().getProject().resolveFile(home);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbee2da1d02fb5260db0b5e64021638e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/ActionManager.java", "commitBeforeChange": "113069f80d96fff735116abb27b70951799106fc", "commitAfterChange": "9996345251656eb38c5326fa7e5f394bc5f43882", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Command getActionCommand(String actionID, AppContext context)", "signatureAfterChange": "     public Command getActionCommand(String actionID,                                     AppContext context,                                     EventObject event)", "diff": ["-    public Command getActionCommand(String actionID, AppContext context) {", "+    public Command getActionCommand(String actionID,", "+                                    AppContext context,", "+                                    EventObject event) {", "-                    Constructor ctor =", "+                    Constructor ctor = ", "-                    // XXX log me.", "-                    ex.printStackTrace();", "+                    try {", "+                        Constructor ctor = clazz.getConstructor(", "+                            COMMAND_CTOR_PARAMS_WITH_EVENT);", "+                        retval = (Command) ctor.newInstance(", "+                            new Object[] { context, event });", "+                    }", "+                    catch (Exception ex2) {", "+                        // XXX log me.", "+                        ex.printStackTrace();", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5da0e8975d2580241529cc35356dac4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files) throws BuildException", "diff": ["+            String defaultManifest = \"/org/apache/tools/ant/defaultManifest.mf\";", "+            InputStream in = this.getClass().getResourceAsStream(defaultManifest);", "+            if ( in == null ) {", "+                throw new BuildException ( \"Could not find: \" + defaultManifest );", "+            }", "+            ", "+            Manifest manifest = new Manifest(in);", "-            jarStream = new JarOutputStream(new FileOutputStream(jarfile));", "+            jarStream = new JarOutputStream(new FileOutputStream(jarfile), manifest);"]}]}