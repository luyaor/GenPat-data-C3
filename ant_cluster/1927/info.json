{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9128f74c36363929ffd01e8aaa63ece8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0791e1823811fc715773b0f67760ed94", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/Property.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-                try { setName( (String)m_converter.convert( String.class, object ) ); }", "+                try ", "+                {", "+                    final String convertedValue = ", "+                        (String)m_converter.convert( String.class, object, getContext() );", "+                    setName( convertedValue );", "+                }", "-                        (Boolean)m_converter.convert( Boolean.class, object );", "+                        (Boolean)m_converter.convert( Boolean.class, object, getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "269adb9a1c209d587e368bbb8b1de1fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ScriptRunner.java", "commitBeforeChange": "c977aacfc4fa74e97980255432216d87bf617018", "commitAfterChange": "efef302a3da9a9e063da729c92f6f2b997884a9a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void executeScript(String execName) throws BuildException", "signatureAfterChange": "     public void executeScript(String execName) throws BuildException", "diff": ["-                manager.declareBean(key, value, value.getClass());", "+                if (value != null) {", "+                    manager.declareBean(key, value, value.getClass());", "+                } else {", "+                    // BSF uses a hashtable to store values", "+                    // so cannot declareBean with a null value", "+                    // So need to remove any bean of this name as", "+                    // that bean should not be visible", "+                    manager.undeclareBean(key);", "+                }"]}]}