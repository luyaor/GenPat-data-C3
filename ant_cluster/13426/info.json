{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8badf194414dd5f8b770b5c1964c2681", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb168bf323c466abf444abefc20ffec9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "d2d785c408ae380f80e33800ce63959f221576f9", "commitAfterChange": "47ba7d22e2e132bef06c232ee6b5ac4ec8fcbebd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public FileNameMapper getImplementation() throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation() throws BuildException", "diff": ["-        if (type == null) {", "-            throw new BuildException(\"type attribute is required\");", "+        if (type == null && classname == null) {", "+            throw new BuildException(\"one of the attributes type or classname is required\");", "+        }", "+", "+        if (type != null && classname != null) {", "+            throw new BuildException(\"must not specify both type and classname attribute\");", "-            Class c = Class.forName(type.getImplementation());", "+            if (type != null) {", "+                classname = type.getImplementation();", "+            }", "+", "+            Class c = null;", "+            if (classpath == null) {", "+                c = Class.forName(classname);", "+            } else {", "+                AntClassLoader al = new AntClassLoader(p, classpath);", "+                c = al.loadClass(classname);", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9cc8f4c7ffd6f37569672ccbac93447", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/rmic/WLRmic.java", "commitBeforeChange": "0067aa3103344571126200fc6c2c966889959a6b", "commitAfterChange": "01acc18c4e2d73d13a23c4f602219d5bfe2a04ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute() throws BuildException", "signatureAfterChange": "      public boolean execute() throws BuildException", "diff": ["+        AntClassLoader loader = null;", "-            Class c = Class.forName(\"weblogic.rmic\");", "+            Class c = null;", "+            if (getRmic().getClasspath() == null) {", "+                c = Class.forName(\"weblogic.rmic\");", "+            } else {", "+                loader = new AntClassLoader(getRmic().getProject(), ", "+                                            getRmic().getClasspath());", "+                c = loader.loadClass(\"weblogic.rmic\");", "+                AntClassLoader.initializeClass(c);", "+            }", "+        } finally {", "+            if (loader != null) {", "+                loader.cleanup();", "+            }"]}]}