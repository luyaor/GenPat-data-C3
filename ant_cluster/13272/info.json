{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69edd63e14e56666b00ce9823e070752", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1d8da26ca50df49fcd3f60f0feb980", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Files.java", "commitBeforeChange": "cbe9978c14108b0ce3235e6c695b21efd9c2937e", "commitAfterChange": "a738000acab66d8d7ce5cf563f6dd96d9c7024fb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public synchronized Object clone()", "signatureAfterChange": "     public synchronized Object clone()", "diff": ["-        try {", "-            Files f = (Files) super.clone();", "-            f.defaultPatterns = (PatternSet) defaultPatterns.clone();", "-            f.additionalPatterns = new Vector(additionalPatterns.size());", "-            for (Iterator iter = additionalPatterns.iterator(); iter.hasNext();) {", "-                PatternSet ps = (PatternSet) iter.next();", "-                f.additionalPatterns.add(ps.clone());", "-            }", "-            f.selectors = new Vector(selectors);", "-            return f;", "-        } catch (CloneNotSupportedException e) {", "-            throw new BuildException(e);", "+        Files f = (Files) super.clone();", "+        f.defaultPatterns = (PatternSet) defaultPatterns.clone();", "+        f.additionalPatterns = new Vector(additionalPatterns.size());", "+        for (Iterator iter = additionalPatterns.iterator(); iter.hasNext();) {", "+            PatternSet ps = (PatternSet) iter.next();", "+            f.additionalPatterns.add(ps.clone());", "+        return f;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9537386598f148eca6a21ae0da868a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "3af30bdfcadad52de3f739223d6937d3f5b0a9bd", "commitAfterChange": "469dcdf7a4a239027eb73268dcb5a540d32b78d4", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     public Object clone()", "diff": ["-        try {", "-            AbstractFileSet fs = (AbstractFileSet) super.clone();", "-            fs.setProject(getProject());", "-            return fs;", "-        } catch (CloneNotSupportedException e) {", "-            throw new BuildException(e);", "+        if (isReference()) {", "+            return (getRef(getProject())).clone();", "+        } else {", "+            try {", "+                AbstractFileSet fs = (AbstractFileSet) super.clone();", "+                fs.defaultPatterns = (PatternSet) defaultPatterns.clone();", "+                fs.additionalPatterns = new Vector(additionalPatterns.size());", "+                Enumeration e = additionalPatterns.elements();", "+                while (e.hasMoreElements()) {", "+                    fs.additionalPatterns", "+                        .addElement(((PatternSet) e.nextElement()).clone());", "+                }", "+                fs.selectors = (Vector) fs.selectors.clone();", "+                return fs;", "+            } catch (CloneNotSupportedException e) {", "+                throw new BuildException(e);", "+            }"]}]}