{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "197183d0170d8938e352b2bdcf85ef65", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e0fdfc7d84e0cee050ef0b367d89ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "23a03fcf16119310506d2e18d585cfdffb550650", "commitAfterChange": "1844a85f5feebe940057df6b041ab2fe095cc43d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setItems(String itemString)", "signatureAfterChange": "     public void setItems(String itemString)", "diff": ["-        if ( itemString.equals(\"*\") ) {", "-            allItems = true;", "+        project.log(\"The items attribute is deprecated. \"+", "+                    \"Please use the includes attribute.\",", "+                    Project.MSG_WARN);", "+        if (itemString == null || itemString.equals(\"*\")) {", "+            includes = new String[1];", "+            includes[0] = \"**\";", "-            StringTokenizer tok = new StringTokenizer(itemString, \",\", false);", "+            Vector tmpIncludes = new Vector();", "+            StringTokenizer tok = new StringTokenizer(itemString, \", \");", "-                items.addElement(tok.nextToken().trim());", "+                String pattern = tok.nextToken().trim();", "+                if (pattern.length() > 0) {", "+                    tmpIncludes.addElement(pattern+\"/**\");", "+                }", "+            }", "+            this.includes = new String[tmpIncludes.size()];", "+            for (int i = 0; i < tmpIncludes.size(); i++) {", "+                this.includes[i] = (String)tmpIncludes.elementAt(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7cde41d0dbb924519b385faa6ea9f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "23a03fcf16119310506d2e18d585cfdffb550650", "commitAfterChange": "1844a85f5feebe940057df6b041ab2fe095cc43d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setIgnore(String ignoreString)", "signatureAfterChange": "     public void setIgnore(String ignoreString)", "diff": ["-        ignoreString = ignoreString;", "-        if (ignoreString != null && ignoreString.length() > 0) {", "-            StringTokenizer tok =", "-            new StringTokenizer(ignoreString, \", \", false);", "+        project.log(\"The ignore attribute is deprecated. \"+", "+                    \"Please use the excludes attribute.\",", "+                    Project.MSG_WARN);", "+        if (ignoreString == null) {", "+            this.excludes = null;", "+        } else {", "+            Vector tmpExcludes = new Vector();", "+            StringTokenizer tok = new StringTokenizer(ignoreString, \", \");", "-                ignoreList.addElement ( tok.nextToken().trim() );", "+                String pattern = tok.nextToken().trim();", "+                if (pattern.length() > 0) {", "+                    tmpExcludes.addElement(\"**/\"+pattern+\"/**\");", "+                }", "+            }", "+            this.excludes = new String[tmpExcludes.size()];", "+            for (int i = 0; i < tmpExcludes.size(); i++) {", "+                this.excludes[i] = (String)tmpExcludes.elementAt(i);"]}]}