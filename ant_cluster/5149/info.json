{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b7b6b47ad0abde7a3e6dd23b7c30bc9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c32b406d41fb2246f8e5ff6980fb3e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/FixCrLfTest.java", "commitBeforeChange": "775e413520be803bba2a22b304cea64a2336115f", "commitAfterChange": "0fb6ce69c29faf80158c280c98e57e08327dd576", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testNoOverwrite() throws IOException", "signatureAfterChange": "      public void testNoOverwrite() throws IOException", "diff": ["-        executeTarget(\"test1\");", "-        File result =", "-            new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/fixcrlf/result/Junk1.java\");", "-        long modTime = result.lastModified();", "-", "-        /*", "-         * Sleep for some time to make sure a newer file would get a", "-         * more recent timestamp according to the file system's", "-         * granularity (should be > 2s to account for Windows FAT).", "-         */", "-        try {", "-            Thread.sleep(5000);", "-        } catch (InterruptedException ie) {", "-            fail(ie.getMessage());", "-        } // end of try-catch", "-", "-        /*", "-         * make sure we get a new Project instance or the target won't get run", "-         * a second time.", "-         */", "-        configureProject(\"src/etc/testcases/taskdefs/fixcrlf/build.xml\");", "-", "-        executeTarget(\"test1\");", "-        result =", "-            new File(System.getProperty(\"root\"), \"src/etc/testcases/taskdefs/fixcrlf/result/Junk1.java\");", "-        assertEquals(modTime, result.lastModified());", "+        executeTarget(\"testNoOverwrite\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f63e8c86709f75122ab70ce66b54a70", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void executeTask(Task task) throws ExecutionException", "signatureAfterChange": "     public void executeTask(Task task) throws ExecutionException", "diff": ["-        AntContext context = task.getAntContext();", "-", "-        if (!(context instanceof ExecutionContext)) {", "-            throw new ExecutionException(\"The Task was not configured with an\"", "-                 + \" appropriate context\");", "-        }", "-        ExecutionContext execContext = (ExecutionContext) context;", "-", "-        frame.getEventSupport().fireTaskStarted(task);", "-", "-        Throwable failureCause = null;", "-", "-        try {", "-            ClassLoader currentLoader", "-                 = LoaderUtils.setContextLoader(execContext.getClassLoader());", "-", "-            task.execute();", "-            LoaderUtils.setContextLoader(currentLoader);", "-        } catch (ExecutionException e) {", "-            failureCause = e;", "-            throw e;", "-        } catch (Throwable e) {", "-            ExecutionException ee =", "-                new ExecutionException(e);", "-", "-            failureCause = ee;", "-            throw ee;", "-        } finally {", "-            frame.getEventSupport().fireTaskFinished(task, failureCause);", "-        }", "+        frame.executeTask(task);"]}]}