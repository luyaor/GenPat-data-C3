{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab32400bc405c86af3252ac59c5ce7f7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ddb2961e3e23842fb1abff26b0179c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "07119705a3be7e0bcf6145d4de1dfd58b42b3734", "commitAfterChange": "abf343291206f3cab8b3436214cc0a88efefcb25", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,         String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,         String elementName) throws BuildException", "diff": ["+        if (nc == null && addTypeMethods.size() > 0) {", "+            Object nestedElement = createAddTypeElement(", "+                project, parent, elementName);", "+            if (nestedElement != null) {", "+                if (project != null) {", "+                    project.setProjectReference(nestedElement);", "+                }", "+                return nestedElement;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ab366ab8787a2a0431c28cd7d09692", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "7aaf095c51dcb4b22dd8a7aec2a63676a73ad8e0", "commitAfterChange": "6d54725ac9d2fc606d5b4d8ec6574b648399f68d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "diff": ["+        if (nc == null && parent instanceof DynamicConfigurator) {", "+            DynamicConfigurator dc = (DynamicConfigurator) parent;", "+            Object nestedElement = dc.createDynamicElement(elementName);", "+            if (nestedElement != null) {", "+                if (nestedElement instanceof ProjectComponent) {", "+                    ((ProjectComponent) nestedElement).setProject(project);", "+                }", "+                return nestedElement;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf73e13b7c1613003d5619272a8ed63", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "f3e9ec622f89b35e9ccfb3fcfa30ab010381bc0f", "commitAfterChange": "c4fc48f69dc1a3abe436e42c103e6b53eb92d918", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "diff": ["-                if (nestedElement instanceof ProjectComponent) {", "-                    ((ProjectComponent) nestedElement).setProject(project);", "-                }", "+                Project.setProjectOnObject(project, nestedElement);", "-            if (nestedElement instanceof ProjectComponent) {", "-                ((ProjectComponent) nestedElement).setProject(project);", "-            }", "+            Project.setProjectOnObject(project, nestedElement);"]}]}