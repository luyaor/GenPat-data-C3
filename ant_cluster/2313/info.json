{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf034619e1cbaceea9c3e62b95c3fe11", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7100760a6911359b5903a3e450da29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/About.java", "commitBeforeChange": "94ed3da9587cf6c7e3162b763454921cd2c90659", "commitAfterChange": "268ddaabdb95f09b0b99244a9066c8557a6cbb0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic About(AppContext context)", "signatureAfterChange": " \tpublic About(AppContext context)", "diff": ["-\t\tString contributors = null;", "-\t\t// XXX eventually this should be tokenized on commas and", "-\t\t// presented nicely in box.", "-\t\tcontributors = props.getProperty(\"CONTRIBUTORS\", \"??\");", "-", "-        StringBuffer buf = new StringBuffer();", "-        StringTokenizer tok = new StringTokenizer(contributors, \",\");", "-        while(tok.hasMoreTokens()) {", "-            String name = tok.nextToken();", "-            buf.append(name);", "-            buf.append(\"<br>\\n\");", "-        }", "-\t\t\tnew Object[] { version, date, buf.toString() });", "+\t\t\tnew Object[] { version, date });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dae5eca83b4501b15a54ef528a168515", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Input.java", "commitBeforeChange": "c78d3f894ef997a88406bbad2d848f3e8d7c3649", "commitAfterChange": "1318b84a90132e21390aa464d8a86aacc6c50a60", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute () throws BuildException", "signatureAfterChange": "     public void execute () throws BuildException", "diff": ["-        Vector exit = null;", "-        if (exitargs != null) {", "-            exit = new Vector();", "-            StringTokenizer stok = new StringTokenizer(exitargs, \",\", false);", "-            while (stok.hasMoreTokens()) {", "-                exit.addElement(stok.nextToken());", "-            }", "-        }", "-        if (exit != null && exit.contains(input)) {", "-            throw  new BuildException(exitmessage);", "-        }"]}]}