{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dbc189f056bd0647fec65c28f510429", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01597d4066adbf00d5f30bf800e7644e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "584538b2d51bc33323178552ca508b0ee109fc33", "commitAfterChange": "165b7dfa13d2cc15ed344294540b2ff3d68bca98", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void write(int cc) throws IOException", "signatureAfterChange": "     public void write(int cc) throws IOException", "diff": ["+", "+        BufferInfo bufferInfo = getBufferInfo();", "-            if (!skip) {", "-                processBuffer();", "+            if (!bufferInfo.skip) {", "+                processBuffer(bufferInfo.buffer);", "-            ByteArrayOutputStream buffer = getBuffer();", "-            buffer.write(cc);", "-            if (buffer.size() > MAX_SIZE) {", "-                processBuffer();", "+            bufferInfo.buffer.write(cc);", "+            if (bufferInfo.buffer.size() > MAX_SIZE) {", "+                processBuffer(bufferInfo.buffer);", "-       // XXX: This isn't threadsafe. Consider two threads logging", "-       // Hello\\r\\n", "-       // and", "-       // There\\r\\n", "-       // at the same time, with the two '\\r's both being sent before", "-       // either '\\n', and the '\\n's coming in the opposite order (thread-wise)", "-       // to the '\\r's - one buffer will be processed twice, and the other won't", "-       // be processed at all.", "-       skip = (c == '\\r');", "+        bufferInfo.skip = (c == '\\r');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f8a5af0f532c3de8c44a96f6e970b36", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "584538b2d51bc33323178552ca508b0ee109fc33", "commitAfterChange": "165b7dfa13d2cc15ed344294540b2ff3d68bca98", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private ByteArrayOutputStream getBuffer()", "signatureAfterChange": "     private BufferInfo getBufferInfo()", "diff": ["-    private ByteArrayOutputStream getBuffer() {", "+    private BufferInfo getBufferInfo() {", "-        ByteArrayOutputStream buffer = (ByteArrayOutputStream)buffers.get(current);", "-        if (buffer == null) {", "-            buffer = new ByteArrayOutputStream();", "-            buffers.put(current, buffer);", "+        BufferInfo bufferInfo = (BufferInfo)buffers.get(current);", "+        if (bufferInfo == null) {", "+            bufferInfo = new BufferInfo();", "+            bufferInfo.buffer = new ByteArrayOutputStream();", "+            bufferInfo.skip = false;", "+            buffers.put(current, bufferInfo);", "-        return buffer;", "+        return bufferInfo;"]}]}