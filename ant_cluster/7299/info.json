{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fca99e5dd2e726e47c20a525934dca4e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88198ec957f5888435b6314970cdba03", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "commitAfterChange": "d571dff958cd85b5083a2a829f84e35b4abe4434", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "signatureAfterChange": "     protected void executeTasks(Iterator taskIterator)          throws ExecutionException", "diff": ["-            List aspects = componentManager.getAspects();", "-                for (Iterator i = aspects.iterator(); i.hasNext();) {", "-                    Aspect aspect = (Aspect) i.next();", "-                    Object replacement ", "-                        = aspect.postCreateComponent(component, model);", "-                    if (replacement != null) {", "-                        component = replacement;", "-                    }", "-                }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aeedd014048bf48b22c87932a333a6d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Sort.java", "commitBeforeChange": "a4c55d35b99bdf699a35eefb78a1833c348c0a46", "commitAfterChange": "4baba959d28fc3516e8aa944bce79ca9608095a3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "diff": ["-            if (comp.v != null && comp.v.size() > 0) {", "-                for (Iterator i = comp.v.iterator(); i.hasNext();) {", "-                    Object o = i.next();", "-                    if (o instanceof DataType) {", "-                        stk.push(o);", "-                        invokeCircularReferenceCheck((DataType) o, stk, p);", "-                    }", "-                }", "-            }", "+            DataType.invokeCircularReferenceCheck(comp, stk, p);"]}]}