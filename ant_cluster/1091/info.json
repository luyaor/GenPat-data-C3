{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "844478442347b7c622a5b139df9e0f82", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c7edcb390ef2e0b758aa1632b05c0b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException, ComponentException", "signatureAfterChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException, ServiceException", "diff": ["-        throws TaskException, ComponentException", "+        throws TaskException, ServiceException", "-        final DefaultComponentManager componentManager =", "-            new DefaultComponentManager( m_componentManager );", "+        final DefaultServiceManager serviceManager =", "+            new DefaultServiceManager( m_serviceManager );", "-        componentManager.put( TypeManager.ROLE, typeManager );", "+        serviceManager.put( TypeManager.ROLE, typeManager );", "-        final Deployer deployer;", "-        deployer = m_deployer.createChildDeployer( componentManager );", "-        componentManager.put( Deployer.ROLE, deployer );", "+        final Deployer deployer = m_deployer.createChildDeployer( serviceManager );", "+        serviceManager.put( Deployer.ROLE, deployer );", "-        componentManager.put( Workspace.ROLE, this );", "-        componentManager.put( Project.ROLE, project );", "+        serviceManager.put( Workspace.ROLE, this );", "+        serviceManager.put( Project.ROLE, project );", "-            componentManager.put( Project.ROLE + \"/\" + name, other );", "+            serviceManager.put( Project.ROLE + \"/\" + name, other );", "-        final MultiSourceServiceManager serviceManager = new MultiSourceServiceManager();", "-        serviceManager.add( (ServiceManager)componentManager.lookup( ServiceManager.ROLE ) );", "-        serviceManager.add( new ComponentManagerAdaptor( componentManager ) );", "+        final MultiSourceServiceManager msServiceManager = new MultiSourceServiceManager();", "+        msServiceManager.add( (AntServiceManager)serviceManager.lookup( AntServiceManager.ROLE ) );", "+        msServiceManager.add( new ServiceManagerAdaptor( serviceManager ) );", "-            new DefaultTaskContext( m_baseContext, serviceManager );", "+            new DefaultTaskContext( m_baseContext, msServiceManager );", "-        componentManager.put( ExecutionFrame.ROLE, frame );", "+        serviceManager.put( ExecutionFrame.ROLE, frame );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb9c8de77549ab1f10a404f340bc4a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "     public void service( final ServiceManager serviceManager )         throws ServiceException", "diff": ["-    public void compose( final ComponentManager componentManager )", "-        throws ComponentException", "+    public void service( final ServiceManager serviceManager )", "+        throws ServiceException", "-        m_converterRegistry = (ConverterRegistry)componentManager.lookup( ConverterRegistry.ROLE );", "-        m_typeManager = (TypeManager)componentManager.lookup( TypeManager.ROLE );", "-        m_roleManager = (RoleManager)componentManager.lookup( RoleManager.ROLE );", "-        m_classLoaderManager = (ClassLoaderManager)componentManager.lookup( ClassLoaderManager.ROLE );", "-        m_ServiceManager = (ServiceManager)componentManager.lookup( ServiceManager.ROLE );", "+        m_converterRegistry = (ConverterRegistry)serviceManager.lookup( ConverterRegistry.ROLE );", "+        m_typeManager = (TypeManager)serviceManager.lookup( TypeManager.ROLE );", "+        m_roleManager = (RoleManager)serviceManager.lookup( RoleManager.ROLE );", "+        m_classLoaderManager = (ClassLoaderManager)serviceManager.lookup( ClassLoaderManager.ROLE );", "+        m_serviceManager = (AntServiceManager)serviceManager.lookup( AntServiceManager.ROLE );"]}]}