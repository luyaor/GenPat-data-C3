{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e88670e4753094d199a37af8b2254de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054a22ba5be5719cec67a849f3dc252b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarBuffer.java", "commitBeforeChange": "3494ca7bb3adf2962b4d05abfc666b65adf18e09", "commitAfterChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void flushBlock()         throws IOException", "signatureAfterChange": "     private void flushBlock()         throws IOException", "diff": ["-        if( this.debug )", "+        if( m_debug )", "-            System.err.println( \"TarBuffer.flushBlock() called.\" );", "+            final String message = \"TarBuffer.flushBlock() called.\";", "+            debug( message );", "-        if( this.outStream == null )", "+        if( m_output == null )", "-            throw new IOException( \"writing to an input buffer\" );", "+            final String message = \"writing to an input buffer\";", "+            throw new IOException( message );", "-        if( this.currRecIdx > 0 )", "+        if( m_currRecIdx > 0 )", "-            this.writeBlock();", "+            writeBlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d495dbaa4f6543044dd324a09fac7a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void bsFinishedWithStream() throws IOException", "signatureAfterChange": "      private void bsFinishedWithStream() throws IOException", "diff": ["+", "-        while (this.bsLive > 0) {", "-            int ch = this.bsBuff >> 24;", "-            this.out.write(ch); // write 8-bit", "-            this.bsBuff <<= 8;", "-            this.bsLive -= 8;", "+        while (bsLive > 0) {", "+            int ch = (bsBuff >> 24);", "+            try {", "+                bsStream.write(ch); // write 8-bit", "+            } catch (IOException e) {", "+                throw  e;", "+            }", "+            bsBuff <<= 8;", "+            bsLive -= 8;", "+            bytesOut++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e44cf39eeead1ca6a5f42b3b361fefe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/tar/TarOutputStream.java", "commitBeforeChange": "0b93bdd7cdfe6a7a48f02cf125014e5d538d5381", "commitAfterChange": "1447e596aa13ca3441f24a8e163f4a255c5a7e23", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void putNextEntry( TarEntry entry )         throws IOException", "signatureAfterChange": "     public void putNextEntry( final TarEntry entry )         throws IOException", "diff": ["-    public void putNextEntry( TarEntry entry )", "+    public void putNextEntry( final TarEntry entry )", "-        if( entry.getName().length() >= TarConstants.NAMELEN )", "+        if( entry.getName().length() >= TarEntry.NAMELEN )", "-            if( longFileMode == LONGFILE_GNU )", "+            if( m_longFileMode == LONGFILE_GNU )", "-                TarEntry longLinkEntry = new TarEntry( TarConstants.GNU_LONGLINK,", "-                                                       TarConstants.LF_GNUTYPE_LONGNAME );", "+                final TarEntry longLinkEntry =", "+                    new TarEntry( TarConstants.GNU_LONGLINK,", "+                                  TarConstants.LF_GNUTYPE_LONGNAME );", "-            else if( longFileMode != LONGFILE_TRUNCATE )", "+            else if( m_longFileMode != LONGFILE_TRUNCATE )", "-                throw new RuntimeException( \"file name '\" + entry.getName()", "-                                            + \"' is too long ( > \"", "-                                            + TarConstants.NAMELEN + \" bytes)\" );", "+                final String message = \"file name '\" + entry.getName() +", "+                    \"' is too long ( > \" + TarEntry.NAMELEN + \" bytes)\";", "+                throw new IOException( message );", "-        entry.writeEntryHeader( this.recordBuf );", "-        this.buffer.writeRecord( this.recordBuf );", "+        entry.writeEntryHeader( m_recordBuf );", "+        m_buffer.writeRecord( m_recordBuf );", "-        this.currBytes = 0;", "+        m_currBytes = 0;", "-            this.currSize = 0;", "+            m_currSize = 0;", "-            this.currSize = (int)entry.getSize();", "+            m_currSize = (int)entry.getSize();"]}]}