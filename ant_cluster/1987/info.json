{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5202f0ef52f884ad8087e4426b1a12b3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b8a4b0f6422619c10c87d5705b1d828", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/PropertyTest.java", "commitBeforeChange": "00e6624c1927ca0775d4d2cf2b3c8a227814c971", "commitAfterChange": "d74422c5bdb8c7a701452a41335f152e7dbff784", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void test5()", "signatureAfterChange": "      public void test5()", "diff": ["+        String baseDir = getProject().getProperty(\"basedir\");", "+        try {", "+            String uri = FileUtils.newFileUtils().toURI(", "+                baseDir + \"/property3.properties\");", "+            getProject().setNewProperty(", "+                \"test5.url\", uri);", "+        } catch (Exception ex) {", "+            throw new BuildException(ex);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9949174b02263d001d7aad0aaf9d4863", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["-            wri.print(\"Testcase: \"", "+            try {", "+            wri.write(\"Testcase: \"", "-            wri.println(\" took \" + nf.format(seconds) + \" sec\");", "+            wri.write(\" took \" + nf.format(seconds) + \" sec\");", "+            wri.newLine();", "+            } catch (IOException ex) {", "+                throw new BuildException(ex);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdf7fc42d5df36065c04f017abf31b81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "d24621d411a4747336fc76f8dcd2910b43b888ca", "commitAfterChange": "ddf5cd73c9f609b1fc5da325e186b68e6093e717", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "signatureAfterChange": "     public int executeInVM(CommandlineJava commandline) throws BuildException", "diff": ["+        PrintWriter pw = null;", "-            jdepend.setWriter(new PrintWriter(fw));", "+            pw = new PrintWriter(fw);", "+            jdepend.setWriter(pw);", "+            if (pw.checkError()) {", "+                throw new IOException(\"Encountered an error writing JDepend\"", "+                                      + \" output\");", "+            }", "+        } catch (IOException ex) {", "+            throw new BuildException(ex);", "+            FileUtils.close(pw);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf84fe438c8364c1b714f9c4a36553b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["-            wri.println(type);", "-            wri.println(t.getMessage());", "+            try {", "+            wri.write(type);", "+            wri.newLine();", "+            wri.write(t.getMessage());", "+            wri.newLine();", "-            wri.print(strace);", "-            wri.println(\"\");", "+            wri.write(strace);", "+            wri.newLine();", "+            } catch (IOException ex) {", "+                throw new BuildException(ex);", "+            }"]}]}