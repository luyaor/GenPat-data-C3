{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "287a7bd179b87fc5b79890fcebbf6112", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97150bd54a3118b5a5ec081df362ba6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "commitAfterChange": "af0505dd8ad69538cef3c64f9674c27c1d1775fb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  public void read(BufferedReader reader) throws IOException", "signatureAfterChange": "                  public String read(BufferedReader reader) throws IOException", "diff": ["-        public void read(BufferedReader reader) throws IOException {", "+        public String read(BufferedReader reader) throws IOException {", "-                    return;", "+                    return null;", "-                    if (name == null && attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                        throw new IOException(\"The \" + ATTR_NAME + \" header may not occur in the main section \");", "+                    if (attribute.getName().equalsIgnoreCase(ATTR_NAME)) {", "+                        return attribute.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4b39b8815f313cbf2f75d4a07dffc28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected TaskletContext getContextFor( final String name )", "signatureAfterChange": "      public ConverterRegistry getConverterRegistry()", "diff": ["+", "+    public ConverterRegistry getConverterRegistry()", "+    {", "+        return m_converterRegistry;", "-", "-    protected TaskletContext getContextFor( final String name )", "-    {", "-        //If we are single threaded we really don't need to have a new object", "-        //for context ... if we are not single threaded then we need to create new ", "-        //context. Alternatively we could remove getName from TaskletContext        ", "-", "-        //final DefaultTaskletContext context = new DefaultTaskletContext( m_context );", "-        m_context.setProperty( TaskletContext.NAME, name );", "-        return m_context;", "-    }"]}]}