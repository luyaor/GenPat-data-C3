{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f3bf50124d73991ba13c81481bb364c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2153386ea45d767628bcf77b1def3e88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b5824a6f65d5ec5286668eb2e68fc2f698bef54", "commitAfterChange": "44ab3228838ef0339918046fe66af61df580163d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            String[] files = fs.getFiles( project );", "+            String[] files = fs.getFiles( getProject() );", "-                if( tarFile.equals( new File( fs.getDir( project ), files[ i ] ) ) )", "+                if( tarFile.equals( new File( fs.getDir( getProject() ), files[ i ] ) ) )", "-                String[] files = fs.getFiles( project );", "+                String[] files = fs.getFiles( getProject() );", "-                    File f = new File( fs.getDir( project ), files[ i ] );", "+                    File f = new File( fs.getDir( getProject() ), files[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2351755ce78f517c9f7a756567f8e669", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Console.java", "commitBeforeChange": "aa078695e8f5e69cb5562c6e353c0e8aa87cf2dd", "commitAfterChange": "8ff35a2d7d2250207f320ddfb977de3cf9d3f2c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public boolean eventPosted(EventObject event)", "signatureAfterChange": "         public boolean eventPosted(EventObject event)", "diff": ["+            Style style = null;", "+                  style = _styles.getHeadingStyle();", "+                  style = _styles.getSubheadingStyle();", "-                  if(buildEvent.getEvent().getPriority() <= level.getValue()) {", "+                  int priority = buildEvent.getEvent().getPriority();", "+                  if(priority <= level.getValue()) {", "+                      style = _styles.getStyle(LogLevelEnum.fromInt(priority));", "-", "-                    doc.insertString(doc.getLength(), text, null);", "+                    doc.insertString(doc.getLength(), text, style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2665080e53c223cf2bed5915bdd176a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "764ef4fd852696fd3e620583affdd3b439af4d14", "commitAfterChange": "28b68ab7d0689dbc35dbdf26d2308786549b8985", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                String[] files = fs.getFiles(project);", "+                String[] files = fs.getFiles(getProject());", "-                    if (tarFile.equals(new File(fs.getDir(project),", "+                    if (tarFile.equals(new File(fs.getDir(getProject()),", "-                    String[] files = fs.getFiles(project);", "+                    String[] files = fs.getFiles(getProject());", "-                        File f = new File(fs.getDir(project), files[i]);", "+                        File f = new File(fs.getDir(getProject()), files[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31b1848dcda9c546a5341811e3e570c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "764ef4fd852696fd3e620583affdd3b439af4d14", "commitAfterChange": "28b68ab7d0689dbc35dbdf26d2308786549b8985", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()          throws BuildException", "signatureAfterChange": "     public void execute()          throws BuildException", "diff": ["-                        fileSet.getDirectoryScanner(project);", "+                        fileSet.getDirectoryScanner(getProject());", "-                    fileSetBase = fileSet.getDir(project);", "+                    fileSetBase = fileSet.getDir(getProject());", "-                    fileSetBase = fileList.getDir(project);", "+                    fileSetBase = fileList.getDir(getProject());", "-                    srcFiles = fileList.getFiles(project);", "+                    srcFiles = fileList.getFiles(getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "412930bb772f497f106c863e1ccfebc5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "commitAfterChange": "cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void addClassFiles(Vector classFileList, File dir, File root)", "signatureAfterChange": "     private void addClassFiles(Vector classFileList, File dir, File root)", "diff": ["+        File sourceFileKnownToExist = null; // speed optimization", "-            if (file.isDirectory()) {", "-                addClassFiles(classFileList, file, root);", "-            } else if (file.getName().endsWith(\".class\")) {", "+            if (filesInDir[i].endsWith(\".class\")) {", "-                info.sourceFile = findSourceFile(relativeName);", "+                info.sourceFile = sourceFileKnownToExist = findSourceFile(relativeName, sourceFileKnownToExist);", "+            } else {", "+                addClassFiles(classFileList, file, root);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c19dfd31f522869d2d72c1b2537f502", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionManager.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ExecutionManager(InitConfig initConfig, AntConfig config)          throws ExecutionException", "signatureAfterChange": "     public ExecutionManager(InitConfig initConfig, AntConfig config)          throws ExecutionException", "diff": ["+    }", "-            libManager.configLibraries(initConfig, librarySpecs, antLibraries);", "-                for (Iterator i = config.getLibraryLocations(); i.hasNext(); ) {", "-                    // try file first", "-                    String libLocation = (String)i.next();", "-                    libManager.loadLib(librarySpecs, libLocation);", "-                }", "-            libManager.configLibraries(initConfig, librarySpecs, antLibraries);", "-            addConfigLibPaths();", "-", "-            mainFrame = new Frame(antLibraries, initConfig, config);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf685d985deaa1ddaa725ced68d8af8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbcHelper.java", "commitBeforeChange": "c3a1e41dbbd2af198c4cecaeb3f9b777fa668caf", "commitAfterChange": "45c25ba3706117e30db4c78139493daef272be37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void regenerateSupportClasses(File descriptorFile) throws Exception", "signatureAfterChange": "     private void regenerateSupportClasses(File descriptorFile) throws Exception", "diff": ["-        String[] args = {\"-noexit\",", "-                         \"-keepgenerated\",", "-                         \"-d\", generatedFilesDirectory.getPath(),", "-                         descriptorFile.getPath()};", "+        ", "+        String[] args = getCommandLine(false,descriptorFile);", "-            String[] newArgs = {\"-keepgenerated\",", "-                         \"-d\", generatedFilesDirectory.getPath(),", "-                         descriptorFile.getPath()};", "+            String[] newArgs = getCommandLine(true, descriptorFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec829eae3575e4afcbd792f8f2665fb6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b5824a6f65d5ec5286668eb2e68fc2f698bef54", "commitAfterChange": "44ab3228838ef0339918046fe66af61df580163d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            String[] files = fs.getFiles( project );", "+            String[] files = fs.getFiles( getProject() );", "-                if( tarFile.equals( new File( fs.getDir( project ), files[ i ] ) ) )", "+                if( tarFile.equals( new File( fs.getDir( getProject() ), files[ i ] ) ) )", "-                String[] files = fs.getFiles( project );", "+                String[] files = fs.getFiles( getProject() );", "-                    File f = new File( fs.getDir( project ), files[ i ] );", "+                    File f = new File( fs.getDir( getProject() ), files[ i ] );"]}]}