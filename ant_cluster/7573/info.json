{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4cf7eb1a6fc22a5ac79313381f29a14", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "345da88a5915d9f443f9e09f6060294b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void doFileOperations()", "signatureAfterChange": "     protected void doFileOperations()", "diff": ["-                \" file\" + ( fileCopyMap.size() == 1 ? \"\" : \"s\" ) +", "-                \" to \" + destDir.getAbsolutePath() );", "+                 \" file\" + ( fileCopyMap.size() == 1 ? \"\" : \"s\" ) +", "+                 \" to \" + destDir.getAbsolutePath() );", "-                String fromFile = ( String )e.nextElement();", "-                String toFile = ( String )fileCopyMap.get( fromFile );", "+                String fromFile = (String)e.nextElement();", "+                String toFile = (String)fileCopyMap.get( fromFile );", "-                    for( Enumeration filterEnum = filterSets.elements(); filterEnum.hasMoreElements();  )", "+                    for( Enumeration filterEnum = filterSets.elements(); filterEnum.hasMoreElements(); )", "-                        executionFilters.addFilterSet( ( FilterSet )filterEnum.nextElement() );", "+                        executionFilters.addFilterSet( (FilterSet)filterEnum.nextElement() );", "-                        forceOverwrite, preserveLastModified );", "+                                        forceOverwrite, preserveLastModified );", "-                         + \" due to \" + ioe.getMessage();", "-                    throw new BuildException( msg, ioe, location );", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new BuildException( msg, ioe );", "-                File d = new File( ( String )e.nextElement() );", "+                File d = new File( (String)e.nextElement() );", "-                    \" empty director\" +", "-                    ( count == 1 ? \"y\" : \"ies\" ) +", "-                    \" to \" + destDir.getAbsolutePath() );", "+                     \" empty director\" +", "+                     ( count == 1 ? \"y\" : \"ies\" ) +", "+                     \" to \" + destDir.getAbsolutePath() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398a0885c650387c5bfd16b3546014df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/input/src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "e7de779f7c1e189f3d1528d0b26b5af5613648c0", "commitAfterChange": "944aa460d4c23ae00ef6ead10666d67b9db82a6c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-            if ( !Project.JAVA_1_0.equals(Project.getJavaVersion()) &&", "-                !Project.JAVA_1_1.equals(Project.getJavaVersion()) ){", "+            if (!Project.JAVA_1_0.equals(Project.getJavaVersion()) &&", "+                !Project.JAVA_1_1.equals(Project.getJavaVersion())){", "-                //SecurityManager can not be installed here for backwards ", "+                //SecurityManager can not be installed here for backwards", "-                    String arg = (String)e.nextElement();", "-                    String value = (String)definedProps.get(arg);", "+                    String arg = (String) e.nextElement();", "+                    String value = (String) definedProps.get(arg);", "-                ", "-                project.setUserProperty(\"ant.file\" , buildFile.getAbsolutePath() );", "-                ", "+", "+                project.setUserProperty(\"ant.file\",", "+                    buildFile.getAbsolutePath());", "+", "-                String noParserMessage = ", "-                    \"No JAXP compliant XML parser found. Please visit http://xml.apache.org for a suitable parser\";", "+                String noParserMessage = \"No JAXP compliant XML parser found. \"", "+                    + \"Please visit http://xml.apache.org \"", "+                    + \"for a suitable parser\";", "-                    printTargets(project, msgOutputLevel > Project.MSG_INFO );", "+                    printTargets(project, msgOutputLevel > Project.MSG_INFO);", "-                ", "+", "-                ", "+", "-            }", "-            finally {", "+            } finally {", "-        }", "-        catch(RuntimeException exc) {", "+        } catch (RuntimeException exc) {", "-        }", "-        catch(Error err) {", "+        } catch (Error err) {", "-        }", "-        finally {", "+        } finally {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9d677f3fb1e8500aa85825ce8773e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void doFileOperations()", "signatureAfterChange": "     protected void doFileOperations()", "diff": ["-                \" file\" + ( fileCopyMap.size() == 1 ? \"\" : \"s\" ) +", "-                \" to \" + destDir.getAbsolutePath() );", "+                 \" file\" + ( fileCopyMap.size() == 1 ? \"\" : \"s\" ) +", "+                 \" to \" + destDir.getAbsolutePath() );", "-                String fromFile = ( String )e.nextElement();", "-                String toFile = ( String )fileCopyMap.get( fromFile );", "+                String fromFile = (String)e.nextElement();", "+                String toFile = (String)fileCopyMap.get( fromFile );", "-                    for( Enumeration filterEnum = filterSets.elements(); filterEnum.hasMoreElements();  )", "+                    for( Enumeration filterEnum = filterSets.elements(); filterEnum.hasMoreElements(); )", "-                        executionFilters.addFilterSet( ( FilterSet )filterEnum.nextElement() );", "+                        executionFilters.addFilterSet( (FilterSet)filterEnum.nextElement() );", "-                        forceOverwrite, preserveLastModified );", "+                                        forceOverwrite, preserveLastModified );", "-                         + \" due to \" + ioe.getMessage();", "-                    throw new BuildException( msg, ioe, location );", "+                        + \" due to \" + ioe.getMessage();", "+                    throw new BuildException( msg, ioe );", "-                File d = new File( ( String )e.nextElement() );", "+                File d = new File( (String)e.nextElement() );", "-                    \" empty director\" +", "-                    ( count == 1 ? \"y\" : \"ies\" ) +", "-                    \" to \" + destDir.getAbsolutePath() );", "+                     \" empty director\" +", "+                     ( count == 1 ? \"y\" : \"ies\" ) +", "+                     \" to \" + destDir.getAbsolutePath() );"]}]}