{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab3ac443f50ad63e4c657ad604f43331", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "521f5bd2e284c6924df897a2840de557", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/remote/Server.java", "commitBeforeChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "commitAfterChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void start()", "signatureAfterChange": "     public void start(boolean loop) throws IOException", "diff": ["-    public void start() {", "-        try {", "-            start(false);", "-        } catch (InterruptedException e){", "-        }", "-    }", "+    public void start(boolean loop) throws IOException {", "+        server = new ServerSocket(port);", "+        while (server != null) {", "+            client = server.accept();", "+            messenger = new Messenger(client.getInputStream(), client.getOutputStream());", "+            TestRunEvent evt = null;", "+            try {", "+                while ( (evt = messenger.read()) != null ) {", "+                    dispatcher.dispatchEvent(evt);", "+                }", "+            } catch (Exception e){", "+                e.printStackTrace();", "+                //@fixme this stacktrace might be normal when closing", "+                // the socket. So decompose the above in distinct steps", "+            }", "+            if (!loop){", "+                break;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dc48151277287b779acd8df9fef6099", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/IsReachable.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override \tpublic boolean eval() throws BuildException", "signatureAfterChange": " \tpublic boolean eval() throws BuildException", "diff": ["-    @Override", "-                URL realURL = new URL(url);", "+                final URL realURL = new URL(url);", "-            } catch (MalformedURLException e) {", "+            } catch (final MalformedURLException e) {", "-        } catch (UnknownHostException e1) {", "+        } catch (final UnknownHostException e1) {", "-            Object[] params = new Object[1];", "+            final Object[] params = new Object[1];", "-            } catch (IllegalAccessException e) {", "+            } catch (final IllegalAccessException e) {", "-            } catch (InvocationTargetException e) {", "+            } catch (final InvocationTargetException e) {", "-                Throwable nested = e.getTargetException();", "+                final Throwable nested = e.getTargetException();", "-        } catch (NoSuchMethodException e) {", "+        } catch (final NoSuchMethodException e) {"]}]}