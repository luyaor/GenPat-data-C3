{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18479e0bafb04158a31522fe1b95cff7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310ca013bf9ad994084596e0e8b88579", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "96e6561e659a24f1e2122d884e83561327cb0f48", "commitAfterChange": "88dcebf815f27d9b16735745605342963870010e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private void catText()", "signatureAfterChange": "          public void close() throws IOException", "diff": ["-     */", "-    private void catText() {", "-        // Check the buffer.", "-        if (textBuffer == null) {", "-            // No text to write.", "-            return;", "-", "-        String text = textBuffer.toString();", "-", "-        // Replace ${property} strings.", "-        text = getProject().replaceProperties(text);", "-", "-        // Set up a writer if necessary.", "-        FileWriter writer = null;", "-        if (destinationFile != null) {", "-            try {", "-                writer = new FileWriter(destinationFile.getAbsolutePath(), ", "-                                        append);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Error creating destination \" + ", "-                                         \"file.\", ioe);", "-", "-        // Reads the text, line by line.", "-        BufferedReader reader = null;", "-        try {", "-            reader = new BufferedReader(new StringReader(text));", "-", "-            String line;", "-            while ((line = reader.readLine()) != null) {", "-                if (destinationFile == null) {", "-                    // Log the line, using WARN so it displays in", "-                    // 'quiet' mode.", "-                    log(line, Project.MSG_WARN);", "-                } else {", "-                    writer.write(line);", "-                    writer.write(StringUtils.LINE_SEP);", "-                    writer.flush();", "-                }", "-            }", "-", "-        } catch (IOException ioe) {", "-            throw new BuildException(\"Error while concatenating \" + ", "-                                     \"text.\", ioe);", "-        } finally {", "-            // Close resources.", "-            if (reader != null) {", "-                try {", "-                    reader.close();", "-                } catch (Exception ignore) {}", "-            }", "-", "-            if (writer != null) {", "-                try {", "-                    writer.close();", "-                } catch (Exception ignore) {}", "-            }", "-        }", "+", "+        public void close() throws IOException {", "+            if (reader != null) {", "+                reader.close();", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d694ac61c35d73e1f073c35142c5e2ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "cfd119edd23f56c4aa458d892285c6b038820ce2", "commitAfterChange": "ac6f3addd34489d7a91f3fd79a9fd0b1b524f5ce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public static String getAntVersion() throws BuildException", "signatureAfterChange": "      public synchronized static String getAntVersion() throws BuildException", "diff": ["-    public static String getAntVersion() throws BuildException {", "-        try {", "-            Properties props = new Properties();", "-            InputStream in =", "-                Main.class.getResourceAsStream(\"/org/apache/tools/ant/version.txt\");", "-            props.load(in);", "-            in.close();", "-            String lSep = System.getProperty(\"line.separator\");", "-            StringBuffer msg = new StringBuffer();", "-            msg.append(\"Ant version \");", "-            msg.append(props.getProperty(\"VERSION\"));", "-            msg.append(\" compiled on \");", "-            msg.append(props.getProperty(\"DATE\"));", "-            return msg.toString();", "-        } catch (IOException ioe) {", "-            throw new BuildException(\"Could not load the version information:\"", "-                                     + ioe.getMessage());", "-        } catch (NullPointerException npe) {", "-            throw new BuildException(\"Could not load the version information.\");", "+    public synchronized static String getAntVersion() throws BuildException {", "+        if (antVersion == null) {", "+            try {", "+                Properties props = new Properties();", "+                InputStream in =", "+                    Main.class.getResourceAsStream(\"/org/apache/tools/ant/version.txt\");", "+                props.load(in);", "+                in.close();", "+                ", "+                String lSep = System.getProperty(\"line.separator\");", "+                StringBuffer msg = new StringBuffer();", "+                msg.append(\"Ant version \");", "+                msg.append(props.getProperty(\"VERSION\"));", "+                msg.append(\" compiled on \");", "+                msg.append(props.getProperty(\"DATE\"));", "+                antVersion = msg.toString();", "+            } catch (IOException ioe) {", "+                throw new BuildException(\"Could not load the version information:\"", "+                                         + ioe.getMessage());", "+            } catch (NullPointerException npe) {", "+                throw new BuildException(\"Could not load the version information.\");", "+            }", "+        return antVersion;"]}]}