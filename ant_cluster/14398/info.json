{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abb7ac7965269e5a69fdcbd6e3c431e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e29033e179b34c26f26d47a237fb5a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "36b62a7ed1b8ae93aad5e2fc841e67efc7cef749", "commitAfterChange": "a1608d62d4c274d15e2ad27ddfc2c96a1762dcb8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "signatureAfterChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "diff": ["-        File file = new File(fileName);", "-", "+        ", "+        String name;", "+        String dir;", "+        int lastDirSep = fileName.lastIndexOf(\"/\");", "+        if (lastDirSep > -1) {", "+            name = fileName.substring(lastDirSep + 1);", "+            dir  = fileName.substring(0, lastDirSep);", "+        } else {", "+            name = fileName;", "+            dir  = \".\";      // so a dir+\"/\"+name would not result in an absolute path", "+        }", "+        ", "-            liaison.addParam(fileNameParameter, inFile.getName());", "+            liaison.addParam(fileNameParameter, name);", "-            liaison.addParam(fileDirParameter, (file.getParent()!=null) ? file.getParent() : \"\" );", "+            liaison.addParam(fileDirParameter, dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d38be695f1cfdabbf6d4058884bd28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "6b3d8a02956aad55938df6c7a1b2994a4acc5f6a", "commitAfterChange": "fe4a5cb02940376fddc661302141394be20d1f02", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private static void runBuild()", "diff": ["-\t", "+", "+            try {", "+                Class.forName(\"javax.xml.parsers.SAXParserFactory\");", "+            } catch (ClassNotFoundException cnfe) {", "+                throw new BuildException(cnfe);", "+            }", "-            String msg = \"BUILD CONFIG ERROR: \";", "-            System.out.println(msg + be.getMessage());", "-            be.printStackTrace();", "+            System.out.println(\"\\nBUILD CONFIG ERROR\\n\");", "+            if (be.getException() == null) {", "+                System.out.println(be.toString());", "+            } else {", "+                be.getException().printStackTrace();", "+\t    }", "-            String msg = \"BUILD FATAL ERROR: \";", "-            System.out.println(msg + be.getMessage());", "+            String msg = \"\\nBUILD FATAL ERROR\\n\\n\";", "+            System.out.println(msg + be.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426dced7b68577ff90a6b16df7211724", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "5337488612953eb072e38cb99e6b5d60999297da", "commitAfterChange": "2479bd9a12ef9c6b3aa631d0c3dfb17afbfe4c9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-", "+        ", "+        if (filesets.size() == 0) {", "+            throw new BuildException(\"You must supply either a basdir attribute or some nested filesets.\", ", "+                                     location);", "+        }", "+        ", "-            tOut.setLongFileMode(TarOutputStream.LONGFILE_GNU);", "+            if (longFileMode.equalsIgnoreCase(TRUNCATE)) {", "+                tOut.setLongFileMode(TarOutputStream.LONGFILE_TRUNCATE);", "+            }", "+            else if (longFileMode.equalsIgnoreCase(FAIL) ||", "+                     longFileMode.equalsIgnoreCase(OMIT)) {", "+                tOut.setLongFileMode(TarOutputStream.LONGFILE_ERROR);", "+            }", "+            else {", "+                // warn or GNU", "+                tOut.setLongFileMode(TarOutputStream.LONGFILE_GNU);", "+            }", "+            longWarningGiven = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f341fa7293faa94a8b06e45b2326b96", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PreSetDef.java", "commitBeforeChange": "e211cf05f7df29b7531bd7d1525f7fe8bd8d33e0", "commitAfterChange": "c7ec7ad1a4aa4f52693b354d08914e07e0bcd2a8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public boolean sameDefinition(AntTypeDefinition other, Project project)", "signatureAfterChange": "         public boolean sameDefinition(AntTypeDefinition other, Project project)", "diff": ["-            return this == other;", "+            if (other == null) {", "+                return false;", "+            }", "+            if (other.getClass() != getClass()) {", "+                return false;", "+            }", "+            MyAntTypeDefinition otherDef = (MyAntTypeDefinition) other;", "+            if (!parent.sameDefinition(otherDef.parent, project)) {", "+                return false;", "+            }", "+            if (!element.similar(otherDef.element)) {", "+                return false;", "+            }", "+            return true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661bab4497e9a6778d726ad2192e50ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/FileResource.java", "commitBeforeChange": "4662a4c1e4614a8c8e7dbd2b036905da64a84576", "commitAfterChange": "3bfca0664b64b24abc88c93295babee6d3719b35", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public int compareTo(Object another)", "signatureAfterChange": "     public int compareTo(Object another)", "diff": ["-        return this.equals(another) ? 0 : super.compareTo(another);", "+        if (this.equals(another)) {", "+            return 0;", "+        }", "+        if (another.getClass().equals(getClass())) {", "+            FileResource otherfr = (FileResource) another;", "+            File f = getFile();", "+            if (f == null) {", "+                return -1;", "+            }", "+            File of = otherfr.getFile();", "+            if (of == null) {", "+                return 1;", "+            }", "+            return f.compareTo(of);", "+        }", "+        return super.compareTo(another);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99336c1b607482079dcbf604fd1fd63c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "commitAfterChange": "af0505dd8ad69538cef3c64f9674c27c1d1775fb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Manifest(InputStream is) throws IOException", "signatureAfterChange": "     public Manifest(InputStream is) throws IOException", "diff": ["-        Attribute version = new Attribute(line);", "-        if (!version.getName().equalsIgnoreCase(ATTR_MANIFEST_VERSION)) {", "-            throw new IOException(\"Manifest must start with \\\"\" + ATTR_MANIFEST_VERSION + ", "-                                  \"\\\" and not \\\"\" + line + \"\\\"\");", "+        String nextSectionName = mainSection.read(reader);", "+        String readManifestVersion = mainSection.getAttributeValue(ATTR_MANIFEST_VERSION);", "+        if (readManifestVersion != null) {", "+            manifestVersion = readManifestVersion;", "+            mainSection.removeAttribute(ATTR_MANIFEST_VERSION);", "-        manifestVersion = version.getValue();", "-        mainSection.read(reader);", "-        ", "+", "-            Attribute sectionName = new Attribute(line);", "-            if (!sectionName.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                throw new IOException(\"Manifest sections should start with a \\\"\" + ATTR_NAME + ", "-                                      \"\\\" attribute and not \\\"\" + sectionName.getName() + \"\\\"\");", "-            }", "-                ", "+            ", "-            section.setName(sectionName.getValue());", "-            section.read(reader);", "+            if (nextSectionName == null) {", "+                Attribute sectionName = new Attribute(line);", "+                if (!sectionName.getName().equalsIgnoreCase(ATTR_NAME)) {", "+                    throw new IOException(\"Manifest sections should start with a \\\"\" + ATTR_NAME + ", "+                                          \"\\\" attribute and not \\\"\" + sectionName.getName() + \"\\\"\");", "+                }", "+                nextSectionName = sectionName.getValue();", "+            }", "+            else {", "+                // we have already started reading this section", "+                // this line is the first attribute. set it and then let the normal", "+                // read handle the rest", "+                Attribute firstAttribute = new Attribute(line);", "+                section.addAttribute(firstAttribute);", "+            }", "+                    ", "+            section.setName(nextSectionName);", "+            nextSectionName = section.read(reader);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8a18bc90cbd5a574feae3e59266869", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Cvs.java", "commitBeforeChange": "0fce1960afecacee4b489ab8c403653e3171ac01", "commitAfterChange": "32647e28359684b3515b08c9d8e7bc4a26f2c039", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public void execute() throws BuildException", "signatureAfterChange": "          public void execute() throws BuildException", "diff": ["-\tsb.append(\" cvs -d \").append( cvsRoot ).append(\" checkout \");", "+\tsb.append(\" cvs \");", "+        if (cvsRoot != null) { ", "+            sb.append(\"-d \").append(cvsRoot).append(\" \");", "+        }", "+", "+        sb.append(noexec ? \"-n \" : \"\")", "+            .append(quiet  ? \"-q \" : \"\")", "+            .append(command).append(\" \");", "+\t\t", "-\tsb.append( pack );", "+\tif (pack != null) {", "+            sb.append(pack);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b348b96985857be21ec5a92a63f4d5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Resource.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public int compareTo(Object other)", "signatureAfterChange": "     public int compareTo(Object other)", "diff": ["+        if (isReference()) {", "+            return ((Comparable) getCheckedRef()).compareTo(other);", "+        }", "-            throw new IllegalArgumentException(\"Can only be compared with \"", "-                                               + \"Resources\");", "+            throw new IllegalArgumentException(", "+                \"Can only be compared with Resources\");", "-        return getName().compareTo(r.getName());", "+        String name = getName();", "+        String oname = r.getName();", "+        if (name == null && oname == null) {", "+            return 0;", "+        }", "+        if (name == null) {", "+            return -1;", "+        }", "+        return oname == null ? 1 : name.compareTo(oname);", "+    }"]}]}