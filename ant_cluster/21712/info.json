{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a79b4b5f8b368d31b5a79990bd59366", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09b719a2d36de40632b75e59a39d2ad2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "30ed25c7c7f8a0de0cf10d2129c314eddb43c562", "commitAfterChange": "1266e53bd199e68ea11ce1bcf38b58d8fc1ea0a1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-        systemError = new PrintStream(errStrm);", "-", "-        systemOut = new PrintStream(outStrm);", "-        PrintStream savedErr = null;", "-", "-        if (forked) {", "-            if (!outputToFormatters) {", "-                if (!showOutput) {", "-                    savedOut = System.out;", "-                    savedErr = System.err;", "-                    System.setOut(", "-                        new PrintStream(", "-                            new OutputStream() {", "-                                public void write(int b) {", "-                                }", "-                            }));", "-                    System.setErr(", "-                        new PrintStream(", "-                            new OutputStream() {", "-                                public void write(int b) {", "-                                }", "-                            }));", "-                }", "-            } else {", "-                savedOut = System.out;", "-                savedErr = System.err;", "-                if (!showOutput) {", "-                    System.setOut(systemOut);", "-                    System.setErr(systemError);", "-                } else {", "-                    System.setOut(new PrintStream(", "-                                      new TeeOutputStream(savedOut, systemOut)", "-                                      )", "-                                  );", "-                    System.setErr(new PrintStream(", "-                                      new TeeOutputStream(savedErr,", "-                                                          systemError)", "-                                      )", "-                                  );", "-                }", "-                perm = null;", "-            }", "-        } else {", "-            if (perm != null) {", "-                perm.setSecurityManager();", "-            }", "-        }", "+        setupIOStreams(outStrm, errStrm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cb4f9dc4b4259a08979315c2cf2acc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Concat.java", "commitBeforeChange": "6b5c48061a0409b564f51bcf0717e946a0a41556", "commitAfterChange": "de06c1b597ffcab2fd85890c0d110873a7e3b738", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void catFiles(File base, String[] files)", "signatureAfterChange": "     private void catFiles(File base, String[] files)", "diff": ["-                    byte[] buffer = new byte[8096];", "+                    byte[] buffer = new byte[8192];", "-        } else { // user specified encoding, assume line oriented input", "+        } else { // user specified encoding", "-            PrintWriter out = null;", "+            Writer out = null;", "-                    out = new PrintWriter(", "-                              new OutputStreamWriter(", "-                                  new LogOutputStream(this, Project.MSG_WARN)));", "+                    out = new OutputStreamWriter(", "+                              new LogOutputStream(this, Project.MSG_WARN));", "-                    out = new PrintWriter(", "-                              new OutputStreamWriter(", "-                                  new FileOutputStream(destinationFile", "-                                                       .getAbsolutePath(),", "-                                                       append),", "-                                  encoding));", "+                    out = new OutputStreamWriter(", "+                              new FileOutputStream(destinationFile", "+                                                   .getAbsolutePath(),", "+                                                   append),", "+                              encoding);", "-                    while ((line = in.readLine()) != null) {", "-                        // Log the line, using WARN so it displays in", "-                        // 'quiet' mode.", "-                        out.println(line);", "+                    char[] buffer = new char[4096];", "+                    while (true) {", "+                        int charsRead = in.read(buffer);", "+                        if (charsRead == -1) { // EOF", "+                            break;", "+                        }", "+                        ", "+                        // Write the read data.", "+                        out.write(buffer, 0, charsRead);", "+                    out.flush();"]}]}