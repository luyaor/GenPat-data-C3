{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83627608fab190220b42ab0393679987", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd370926e470dfa71836c46a9f59866", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/comparators/FileSystem.java", "commitBeforeChange": "edb0dd9582a26bb899aa970735f93049c61d7ce7", "commitAfterChange": "d5103ff56cf6470a214f082e89364f783d0504e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected int resourceCompare(Resource foo, Resource bar)", "signatureAfterChange": "     protected int resourceCompare(Resource foo, Resource bar)", "diff": ["-        File foofile = ((FileProvider) foo.as(FileProvider.class)).getFile();", "-        File barfile = ((FileProvider) bar.as(FileProvider.class)).getFile();", "+        FileProvider fooFP = (FileProvider) foo.as(FileProvider.class);", "+        if (fooFP == null) {", "+            throw new ClassCastException(foo.getClass()", "+                                         + \" doesn't provide files\");", "+        }", "+        File foofile = fooFP.getFile();", "+        FileProvider barFP = (FileProvider) bar.as(FileProvider.class);", "+        if (barFP == null) {", "+            throw new ClassCastException(bar.getClass()", "+                                         + \" doesn't provide files\");", "+        }", "+        File barfile = barFP.getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cad02fb9141351947e3c00d22c4c8ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/JavaResource.java", "commitBeforeChange": "9a90265a335104835ae034a7f221aa459f3af59d", "commitAfterChange": "be90dbd7b54f177a4ecf3b4de6d77366f34cad2e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected InputStream openInputStream(ClassLoader cl) throws IOException", "signatureAfterChange": "     protected InputStream openInputStream(ClassLoader cl) throws IOException", "diff": ["-        return cl == null ? ClassLoader.getSystemResourceAsStream(getName())", "-            : cl.getResourceAsStream(getName());", "+        InputStream inputStream;", "+        if (cl == null) {", "+            inputStream = ClassLoader.getSystemResourceAsStream(getName());", "+            if (inputStream == null) {", "+                throw new FileNotFoundException(\"No resource \" + getName()", "+                        + \" on Ant's classpath\");", "+            }", "+        } else {", "+            inputStream = cl.getResourceAsStream(getName());", "+            if (inputStream == null) {", "+                throw new FileNotFoundException(\"No resource \" + getName()", "+                        + \" on the classpath \" + cl);", "+            }", "+        }", "+        return inputStream;"]}]}