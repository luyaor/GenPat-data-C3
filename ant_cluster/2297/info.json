{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8971bac72cf185de5ba94270e3e98902", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a78c823ab7b60a373a2cf8222b59d0c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "8d226e312c364e3465737658341d24cf795c3393", "commitAfterChange": "bc34bb06ca8b29568e31990be726d04559ca2972", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void deployTypeLib( final Deployer deployer, final Project project )         throws TaskException", "signatureAfterChange": "      private void deployTypeLib( final Deployer deployer, final Project project )         throws TaskException", "diff": ["+                final TypeDeployer typeDeployer = deployer.createDeployer( file );", "-                    deployer.deploy( file );", "+                    // Deploy everything in the typelib", "+                    typeDeployer.deployAll();", "-                    deployer.deployType( typeLib.getRole(), typeLib.getName(), file );", "+                    // Deploy the specified type", "+                    typeDeployer.deployType( typeLib.getRole(), typeLib.getName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac07964734200cae0e1cc62ea6607cd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "13355064e679198a0b8212779599eb888739a9bd", "commitAfterChange": "662f68f096613b90eb1448be53d907453492287f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "signatureAfterChange": "     protected void handleChildren(Object parent,                                   RuntimeConfigurable parentWrapper)         throws BuildException", "diff": ["-                realChild = makeTask(child, childWrapper, false);", "+                realChild = makeTask(child, childWrapper);", "-                    throw getNotFoundException(\"task\", child.getTag());", "+                    ih.throwNotSupported(getProject(), parent, child.getTag());", "-                    // What ? Add data type ? createElement ?", "+                    // should not happen", "+                    ih.throwNotSupported(getProject(), parent, child.getTag());"]}]}