{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2110b2411d5ff1cc822832ece99242cf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6d2bcb64a215632b66429e441be332", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Reflector.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void addElement(Object obj, String elementName, Object value)          throws ExecutionException, TaskException", "signatureAfterChange": "     public void addElement(Object obj, String elementName, Object value)          throws ExecutionException", "diff": ["-         throws ExecutionException, TaskException {", "-        ElementAdder ea = (ElementAdder)elementAdders.get(elementName);", "-        if (ea == null) {", "-            throw new ExecutionException(\"Class \" + obj.getClass().getName() +", "-                \" doesn't support the \\\"\" + elementName + \"\\\" nested element\");", "+         throws ExecutionException {", "+        String name = elementName.toLowerCase();", "+        ElementAdder adder = (ElementAdder)elementAdders.get(name);", "+        if (adder == null) {", "+            throw new ExecutionException(\"Class \" + obj.getClass().getName()", "+                 + \" doesn't support the \\\"\" + elementName", "+                 + \"\\\" nested element\");", "-            ea.add(obj, value);", "+            adder.add(obj, value);", "-            if (t instanceof TaskException) {", "-                throw (TaskException)t;", "+            if (t instanceof ExecutionException) {", "+                throw (ExecutionException)t;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95954e65a4eee0373b583c7eed9ac4a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Reflector.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAttribute(Object obj, String attributeName,                              String value)          throws ExecutionException, TaskException", "signatureAfterChange": "     public void setAttribute(Object obj, String attributeName,                              String value)          throws ExecutionException", "diff": ["-         throws ExecutionException, TaskException {", "+         throws ExecutionException {", "+        String name = attributeName.toLowerCase();", "-             = (AttributeSetter)attributeSetters.get(attributeName);", "+             = (AttributeSetter)attributeSetters.get(name);", "-            throw new ExecutionException(\"Class \" + obj.getClass().getName() +", "-                \" doesn't support the \\\"\" + attributeName + \"\\\" attribute\");", "+            throw new ExecutionException(\"Class \" + obj.getClass().getName()", "+                 + \" doesn't support the \\\"\" + attributeName + \"\\\" attribute\");", "-        } catch (ConversionException e) {", "-            throw new ExecutionException(e);", "-            if (t instanceof TaskException) {", "-                throw (TaskException)t;", "+            if (t instanceof ExecutionException) {", "+                throw (ExecutionException)t;"]}]}