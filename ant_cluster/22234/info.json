{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d97629b53ebbf4fa6e3a51bffdb6140", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d097d704dea37bf0ccbf8dbb836b26e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "a14b034437745cfc4066f88bfcaa7923c574ae1d", "commitAfterChange": "bf5d72445b3750fb9e34c150abb7b6372324b85d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void testTypedAdderReference()         throws Exception", "signatureAfterChange": "     public void testTypedAdderReference()         throws Exception", "diff": ["-        roleMgr.addNameRoleMapping( \"my-role1\", MyRole1.class.getName() );", "+        final RoleInfo roleInfo = new RoleInfo( \"my-role1\", MyRole1.class );", "+        roleMgr.addRole( roleInfo );", "-        m_configurer.configure( test, config, m_context );", "+        m_configurer.configure( test, config, m_adaptor );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1930fe19221de629b8c88c6701e12c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "a14b034437745cfc4066f88bfcaa7923c574ae1d", "commitAfterChange": "bf5d72445b3750fb9e34c150abb7b6372324b85d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void testTypedAdderReference()         throws Exception", "signatureAfterChange": "     public void testTypedAdderReference()         throws Exception", "diff": ["-        roleMgr.addNameRoleMapping( \"my-role1\", MyRole1.class.getName() );", "+        final RoleInfo roleInfo = new RoleInfo( \"my-role1\", MyRole1.class );", "+        roleMgr.addRole( roleInfo );", "-        m_configurer.configure( test, config, m_context );", "+        m_configurer.configure( test, config, m_adaptor );"]}]}