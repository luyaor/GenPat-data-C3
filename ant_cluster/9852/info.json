{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95b48e079c8890e197b0527bde4e8460", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3affa4691cbcb3f63f802e55a56a9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "0022fa2365dff486750da547135c9339b7a67526", "commitAfterChange": "984ad3c0217344ebdeb3b55fe2ba4018384fcfa3", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private int run(String[] command) throws BuildException", "signatureAfterChange": "     private int run(String[] command) throws BuildException", "diff": ["-        FileOutputStream fos = null;", "-        try {", "-            Execute exe = null;", "-            if (out == null) {", "-                exe = new Execute(new LogStreamHandler(this, Project.MSG_INFO,", "-                                                       Project.MSG_WARN), ", "-                                  createWatchdog());", "-            } else {", "-                fos = new FileOutputStream(out.getAbsolutePath(), append);", "-                exe = new Execute(new PumpStreamHandler(fos),", "-                                  createWatchdog());", "-            }", "+            Execute exe ", "+                = new Execute(redirector.createHandler(), createWatchdog());", "+                redirector.complete();", "-        } catch (IOException io) {", "-            throw new BuildException(io, getLocation());", "-        } finally {", "-            if (fos != null) {", "-                try {fos.close();} catch (IOException io) {}", "-            }", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ac824620e2436be6f1c223f1ae3f87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/util/ChainReaderHelper.java", "commitBeforeChange": "64a4e9eb2dcf6ea87a0033f6082421e028d9024a", "commitAfterChange": "43e62b81ff4d8554b4a548d26e0f907318ed6f1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public final String readFully(Reader rdr)         throws IOException", "signatureAfterChange": "     public final String readFully(Reader rdr)         throws IOException", "diff": ["-", "-        final char[] buffer = new char[bufferSize];", "-        int bufferLength = 0;", "-        String text = null;", "-        StringBuffer textBuffer = null;", "-        while (bufferLength != -1) {", "-            bufferLength = rdr.read(buffer);", "-            if (bufferLength != -1) {", "-                if (textBuffer == null) {", "-                    textBuffer = new StringBuffer(", "-                                    new String(buffer, 0, bufferLength));", "-                } else {", "-                    textBuffer.append(new String(buffer, 0, bufferLength));", "-                }", "-            }", "-        }", "-        if (textBuffer != null) {", "-            text = textBuffer.toString();", "-        }", "-        return text;", "+        return FileUtils.readFully(rdr, bufferSize);"]}]}