{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d99fa1f6206768249e6847d833832c78", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad99d612abc44b5b7566b96493b3935", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "20b547f782a451e2185208bee3e548454a3cb313", "commitAfterChange": "154ef1be5cb0da4acbfacf218c7efb86df86b97e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-        ", "-        // check against packaging spec", "-        // http://java.sun.com/j2se/1.3/docs/guide/versioning/spec/VersioningSpecification.html#PackageVersioning", "-        Section mainSection = (configuredManifest==null) ? null : configuredManifest.getMainSection();", "-        if (mainSection==null) {", "-            log(\"No Implementation-Title set. (\" + getLocation() + \")\");", "-            log(\"No Implementation-Version set. (\" + getLocation() + \")\");", "-            log(\"No Implementation-Vendor set. (\" + getLocation() + \")\");", "-        } else {", "-            if (mainSection.getAttribute(\"Implementation-Title\") == null) {", "-                log(\"No Implementation-Title set. (\" + getLocation() + \")\");", "-            }", "-            if (mainSection.getAttribute(\"Implementation-Version\") == null) {", "-                log(\"No Implementation-Version set. (\" + getLocation() + \")\");", "-            }", "-            if (mainSection.getAttribute(\"Implementation-Vendor\") == null) {", "-                log(\"No Implementation-Vendor set. (\" + getLocation() + \")\");", "-            }", "-        }", "+        checkJarSpec();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e555faaf114d3e3b6835991c419b6920", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public DefaultFileSystemManager() throws Exception", "signatureAfterChange": "      public DefaultFileSystemManager()", "diff": ["-", "-    public DefaultFileSystemManager() throws Exception", "+    public DefaultFileSystemManager()", "-", "-        // TODO - make this list configurable", "-        // Create the providers", "-", "-        FileSystemProvider provider = createProvider( \"org.apache.aut.vfs.provider.zip.ZipFileSystemProvider\" );", "-        if( provider != null )", "-        {", "-            m_providers.put( \"zip\", provider );", "-            m_providers.put( \"jar\", provider );", "-        }", "-", "-        provider = createProvider( \"org.apache.aut.vfs.provider.smb.SmbFileSystemProvider\" );", "-        if( provider != null )", "-        {", "-            m_providers.put( \"smb\", provider );", "-        }", "-", "-        provider = createProvider( \"org.apache.aut.vfs.provider.ftp.FtpFileSystemProvider\" );", "-        if( provider != null )", "-        {", "-            m_providers.put( \"ftp\", provider );", "-        }", "-", "-        // Contextualise the providers", "-        for( Iterator iterator = m_providers.values().iterator(); iterator.hasNext(); )", "-        {", "-            provider = (FileSystemProvider)iterator.next();", "-            provider.setContext( m_context );", "-        }", "+        m_localFileProvider.setContext( m_context );"]}]}