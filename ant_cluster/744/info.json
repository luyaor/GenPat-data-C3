{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e038f902b4c6dd2521d840c439c984d2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49b5e7d120f78160d4fd13a8833c4db1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ContainerMapper.java", "commitBeforeChange": "3375d671acfa1fceb3325dc54fda5484b9e19208", "commitAfterChange": "2ead66e52c56fbc1a59789187ddba634ebe4ae2d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public String[] mapFileName(String sourceFileName)", "signatureAfterChange": "     public synchronized List getMappers()", "diff": ["+     */", "+    public synchronized List getMappers() {", "+        return Collections.unmodifiableList(mappers);", "+    }", "-     */", "-    public String[] mapFileName(String sourceFileName) {", "-        List ret = new ArrayList();", "-        if (chained) {", "-            List inputs = new ArrayList();", "-            ret.add(sourceFileName);", "-            for (int i = 0; i < mappers.size(); ++i) {", "-                inputs = ret;", "-                ret = new ArrayList();", "-                FileNameMapper mapper = (FileNameMapper) mappers.get(i);", "-                for (Iterator it = inputs.iterator(); it.hasNext();) {", "-                    String[] mapped = mapper.mapFileName(", "-                        (String) it.next());", "-                    if (mapped != null) {", "-                        for (int m = 0; m < mapped.length; ++m) {", "-                            ret.add(mapped[m]);", "-                        }", "-                    }", "-                }", "-                if (ret.size() == 0) {", "-                    return null;", "-                }", "-            }", "-        } else {", "-            for (int i = 0; i < mappers.size(); ++i) {", "-                FileNameMapper mapper = (FileNameMapper) mappers.get(i);", "-                String[] mapped = mapper.mapFileName(sourceFileName);", "-                if (mapped != null) {", "-                    for (int m = 0; m < mapped.length; ++m) {", "-                        ret.add(mapped[m]);", "-                    }", "-                }", "-            }", "-            if (ret.size() == 0) {", "-                return null;", "-            }", "-        }", "-        return (String[]) ret.toArray(new String[ret.size()]);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d20e9bf8687af65ab575eed3791a0630", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "0c132498a8026db624c2fcf7026538c52e47b312", "commitAfterChange": "4004834c04e0eec8f0f698435b0c5983751fb593", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private void accountForIncludedDir(String name, File file, boolean fast)", "signatureAfterChange": "     private void accountForIncludedDir(String name, File file, boolean fast)", "diff": ["-        if (!dirsIncluded.contains(name)", "-            && !dirsExcluded.contains(name)", "-            && !dirsDeselected.contains(name)) {", "-", "-            if (!isExcluded(name)) {", "-                if (isSelected(name, file)) {", "-                    dirsIncluded.addElement(name);", "-                    if (fast) {", "-                        scandir(file, name + File.separator, fast);", "-                    }", "-                } else {", "-                    everythingIncluded = false;", "-                    dirsDeselected.addElement(name);", "-                    if (fast && couldHoldIncluded(name)) {", "-                        scandir(file, name + File.separator, fast);", "-                    }", "-                }", "-", "-            } else {", "-                everythingIncluded = false;", "-                dirsExcluded.addElement(name);", "-                if (fast && couldHoldIncluded(name)) {", "-                    scandir(file, name + File.separator, fast);", "-                }", "-            }", "+        if (dirsIncluded.contains(name)", "+            || dirsExcluded.contains(name)", "+            || dirsDeselected.contains(name)) {", "+            return;", "+        }", "+        boolean included = false;", "+        if (isExcluded(name)) {", "+            dirsExcluded.addElement(name);", "+        } else if (isSelected(name, file)) {", "+            included = true;", "+            dirsIncluded.addElement(name);", "+        } else {", "+            dirsDeselected.addElement(name);", "+        }", "+        everythingIncluded &= included;", "+        if (fast && (included || couldHoldIncluded(name))) {", "+            scandir(file, name + File.separator, fast);"]}]}