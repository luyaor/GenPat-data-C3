{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50c608beca01e0e1f7bd45a5bfdb1cab", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3411fb831ade38f80c91136cce12bd5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ImportTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void notTestImportInTargetWithEffect()", "signatureAfterChange": "      @Ignore(\"deactivate this test as imports within targets are not allowed\")     @Test     public void notTestImportInTargetWithEffect()", "diff": ["-    // deactivate this test as imports within targets are not allowed", "+    @Ignore(\"deactivate this test as imports within targets are not allowed\")", "+    @Test", "-        configureProject(\"src/etc/testcases/taskdefs/import/subdir/importintarget.xml\");", "-        expectPropertySet(\"do-import\", \"foo\", \"bar\");", "-        assertNotNull(getProject().getReference(\"baz\"));", "+        buildRule.configureProject(\"src/etc/testcases/taskdefs/import/subdir/importintarget.xml\");", "+        buildRule.executeTarget(\"do-import\");", "+        assertEquals(buildRule.getProject().getProperty(\"foo\"), \"bar\");", "+        assertNotNull(buildRule.getProject().getReference(\"baz\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d0720b26a42cf1844ea4c69df61d197", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ImportTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testImportInSequential()", "signatureAfterChange": "      @Test     public void testImportInSequential()", "diff": ["+    @Test", "-        configureProject(", "+        buildRule.configureProject(", "-        expectPropertySet(\"within-imported\", \"foo\", \"bar\");", "-        assertNotNull(getProject().getReference(\"baz\"));", "+        buildRule.executeTarget(\"within-imported\");", "+        assertEquals(buildRule.getProject().getProperty(\"foo\"), \"bar\");", "+        assertNotNull(buildRule.getProject().getReference(\"baz\"));"]}]}