{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1b04dc6acb1995ab019a3ccdba0931e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4374c0e6ca0baf13568b29607abc77f6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/selftest/ExtensionsTest.java", "commitBeforeChange": "a1e045b36e763acef3fc6c4911d85ada8bef9814", "commitAfterChange": "87e58160998c8cb1273787f196edddebe111eb21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["+", "+        Class clazz = null;", "+        try", "+        {", "+            clazz = Class.forName( \"sun.tools.javac.Main\" );", "+        }", "+        catch( ClassNotFoundException e )", "+        {", "+            try", "+            {", "+                clazz = Class.forName( \"com.sun.tools.javac.Main\" );", "+            }", "+            catch( ClassNotFoundException e1 )", "+            {", "+                throw new TaskException( \"Unable to locate compilers from tools.jar\" );", "+            }", "+        }", "+", "+        System.out.println( \"Compiler loaded from tools.jar = \" + clazz );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd564ecd1862b52d907e919a153cbf90", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/TraXLiaisonTest.java", "commitBeforeChange": "84926aa016ebb2053d9573a2908996f35d2522cb", "commitAfterChange": "2b79ae4693fc4e6091944dbc6fa93c401cd84446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testXalan2Redirect() throws Exception", "signatureAfterChange": "      public void testXalan2Redirect() throws Exception", "diff": ["+    \tClass clazz = null;", "+    \ttry {", "+    \t\tclazz = getClass().getClassLoader().loadClass(\"org.apache.xalan.lib.Redirect\");", "+    \t} catch (Exception exc) {", "+    \t\t// ignore", "+    \t}", "+    \tif (clazz == null) {", "+    \t\tSystem.out.println(\"xalan redirect is not on the classpath\");", "+    \t\treturn;", "+    \t}"]}]}