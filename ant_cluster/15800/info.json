{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9285efede4f5940bf30bf188209fe8c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cab87bf5b7d93e6d73dd641b6e734ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "2a6beb146f021464cf2df9590f649410ad9509c3", "commitAfterChange": "e390c09b6e313b7d9528ca9075e2c5c864c05f21", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void moveGeneratedFile (File baseDir, File sourceBaseFile,                                     String classname,                                     RmicAdapter adapter)         throws BuildException", "signatureAfterChange": "     private void moveGeneratedFile (File baseDir, File sourceBaseFile,                                     String classname,                                     RmicAdapter adapter)         throws BuildException", "diff": ["+            if (!generatedFiles[i].endsWith(\".class\")) {", "+                // don't know how to handle that - a IDL file doesn't", "+                // have a corresponding Java source for example.", "+                continue;", "+            }", "+            ", "-                classFileName.substring(0, classFileName.length()-6) + \".java\";", "+                generatedFiles[i].substring(0, classFileName.length()-6) ", "+                + \".java\";", "+", "+            if (!oldFile.exists()) {", "+                // no source file generated, nothing to move", "+                continue;", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7330f78504e2e8632190e3daf8fad10c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/xdocs/src/org/apache/tools/ant/xdoclet/AntTagsHandler.java", "commitBeforeChange": "6252354506953777f5b921b8746a54e7d317475a", "commitAfterChange": "5578d94e01cf5b036fa71ca974c9dfb43d6f1438", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private MethodDoc[] getAttributeMethods(ClassDoc cur_class) throws XDocletException", "signatureAfterChange": "     private MethodDoc[] getAttributeMethods(ClassDoc cur_class) throws XDocletException", "diff": ["+            // ensure method only has one parameter", "+            Parameter[] params = methods[i].parameters();", "+            if (params.length != 1) {", "+                continue;", "+            }", "+"]}]}