{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5ea19a11e548c5aebd896cd46da5a03", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "012ad4150368d01d549284b3487728ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "a99711a13ec7e6c4ac9379b39fd08917964866d9", "commitAfterChange": "5151a3152de887e4dccf485a437dea64cc49afa3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Map findAdders()         throws ConfigurationException", "signatureAfterChange": "     private Map findAdders()         throws ConfigurationException", "diff": ["-                if( currentType != String.class && type == String.class )", "+                if( isTypedAdder )", "+                {", "+                    // Both are string, or both are not string", "+                    final String message =", "+                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "+                                       m_class.getName(),", "+                                       type.getName(),", "+                                       currentType.getName() );", "+                    throw new ConfigurationException( message );", "+                }", "+                else if( currentType != String.class && type == String.class )", "-                    throw new ConfigurationException( message );", "-                }", "-                else if( isTypedAdder )", "-                {", "-                    // Both are string, or both are not string", "-                    final String message =", "-                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "-                                       m_class.getName(),", "-                                       type.getName(),", "-                                       currentType.getName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7784efb1bb6551f53095ecdb80e8ff5a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Map findAdders()         throws ConfigurationException", "signatureAfterChange": "     private Map findAdders()         throws ConfigurationException", "diff": ["-            final boolean isTypedAdder = methodName.equals( \"add\" );", "-", "-            final Class paramType = method.getParameterTypes()[ 0 ];", "-            if( isTypedAdder && !paramType.isInterface() )", "-            {", "-                final String message =", "-                    REZ.getString( \"typed-adder-non-interface.error\",", "-                                   m_class.getName(),", "-                                   paramType.getName() );", "-                throw new ConfigurationException( message );", "-            }", "-", "-            // TODO - un-hard-code this", "+            // Skip the text content method", "-", "-            final Class type = paramType;", "+            final Class type = method.getParameterTypes()[0];", "-                if( isTypedAdder )", "-                {", "-                    // Both are string, or both are not string", "-                    final String message =", "-                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "-                                       m_class.getName() );", "-                    throw new ConfigurationException( message );", "-                }", "-                else if( currentType != String.class && type == String.class )", "+                if( currentType != String.class && type == String.class )", "+"]}]}