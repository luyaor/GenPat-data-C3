{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a710f9ac8c56c1d420586431ce56eb0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc4d86429b31a54de0fb02036aedcc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "fc6a4383fa7cee5fe2534dc9edc9d8a4eb5c254f", "commitAfterChange": "75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "       public void parse(Project project, Object source) throws BuildException", "diff": ["+", "+    public void parse(Project project, Object source) throws BuildException {", "+        // Hook our internal tasks. XXX refactor ", "+        try {", "+            Class c=Class.forName(\"org.apache.tools.ant.types.SystemPath\");", "+            project.addDataTypeDefinition( \"systemPath\" , c );", "+            c=Class.forName(\"org.apache.tools.ant.tasks.Import\");", "+            project.addTaskDefinition( \"import\" , c );", "+        } catch (Exception ex ) {", "+        }", "+        AntXmlContext context=new AntXmlContext(this);", "+        AntXmlContext.resetImports();", "+        ", "+        project.addReference( \"ant.parsing.context\", context );", "+        parse(project, source,new RootHandler(context));", "+    }", "-    public void parse(Project project, Object source) throws BuildException {", "-        // Hook our one tasks.", "-        try {", "-            Class c=Class.forName(\"org.apache.tools.ant.types.SystemPath\");", "-            project.addDataTypeDefinition( \"systemPath\" , c );", "-        } catch (Exception ex ) {", "-        }", "-        AntXmlContext context=new AntXmlContext();", "-            org.xml.sax.XMLReader parser;", "-    ", "-            parser =JAXPUtils.getXMLReader();", "-            DefaultHandler hb = new RootHandler(context);", "-            parser.setContentHandler(hb);", "-            parser.setEntityResolver(hb);", "-            parser.setErrorHandler(hb);", "-            parser.setDTDHandler(hb);", "-            parser.parse(inputSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d1758732a3e579c8f1c6707b3f5e9e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "fc6a4383fa7cee5fe2534dc9edc9d8a4eb5c254f", "commitAfterChange": "75cdfc682ec1c00da1a7ed51ce5e8621776ccaf1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parse(Project project, Object source) throws BuildException", "signatureAfterChange": "     public void parse(Project project, Object source, RootHandler handler) throws BuildException", "diff": ["-    public void parse(Project project, Object source) throws BuildException {", "-        // Hook our one tasks.", "-        try {", "-            Class c=Class.forName(\"org.apache.tools.ant.types.SystemPath\");", "-            project.addDataTypeDefinition( \"systemPath\" , c );", "-        } catch (Exception ex ) {", "-        }", "+    public void parse(Project project, Object source, RootHandler handler) throws BuildException {", "-        AntXmlContext context=new AntXmlContext();", "+        AntXmlContext context=handler.context;", "+", "-            org.xml.sax.XMLReader parser;", "-    ", "-            parser =JAXPUtils.getXMLReader();", "+            context.parser =JAXPUtils.getXMLReader();", "-            DefaultHandler hb = new RootHandler(context);", "+            DefaultHandler hb = handler;", "-            parser.setContentHandler(hb);", "-            parser.setEntityResolver(hb);", "-            parser.setErrorHandler(hb);", "-            parser.setDTDHandler(hb);", "-            parser.parse(inputSource);", "+            context.parser.setContentHandler(hb);", "+            context.parser.setEntityResolver(hb);", "+            context.parser.setErrorHandler(hb);", "+            context.parser.setDTDHandler(hb);", "+            context.parser.parse(inputSource);"]}]}