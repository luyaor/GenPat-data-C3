{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fc3537affdc470db9bfed4bd8a97f4e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35264ad61c7d96f2b0f78400317a2020", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void determineDependencies()         throws IOException", "signatureAfterChange": "     private void determineDependencies()         throws IOException, TaskException", "diff": ["-        throws IOException", "+        throws IOException, TaskException", "-        for( Enumeration e = getClassFiles( destPath ).elements(); e.hasMoreElements();  )", "+        for( Enumeration e = getClassFiles( destPath ).elements(); e.hasMoreElements(); )", "-            ClassFileInfo info = ( ClassFileInfo )e.nextElement();", "+            ClassFileInfo info = (ClassFileInfo)e.nextElement();", "-                    dependencyList = ( Vector )dependencyMap.get( info.className );", "+                    dependencyList = (Vector)dependencyMap.get( info.className );", "-            for( Enumeration depEnum = dependencyList.elements(); depEnum.hasMoreElements();  )", "+            for( Enumeration depEnum = dependencyList.elements(); depEnum.hasMoreElements(); )", "-                String dependentClass = ( String )depEnum.nextElement();", "+                String dependentClass = (String)depEnum.nextElement();", "-                Hashtable affectedClasses = ( Hashtable )affectedClassMap.get( dependentClass );", "+                Hashtable affectedClasses = (Hashtable)affectedClassMap.get( dependentClass );", "-            for( Enumeration e = dependencyMap.keys(); e.hasMoreElements();  )", "+            for( Enumeration e = dependencyMap.keys(); e.hasMoreElements(); )", "-                String className = ( String )e.nextElement();", "-                Vector dependencyList = ( Vector )dependencyMap.get( className );", "+                String className = (String)e.nextElement();", "+                Vector dependencyList = (Vector)dependencyMap.get( className );", "-                for( Enumeration e2 = dependencyList.elements(); e2.hasMoreElements();  )", "+                for( Enumeration e2 = dependencyList.elements(); e2.hasMoreElements(); )", "-                    String dependency = ( String )e2.nextElement();", "+                    String dependency = (String)e2.nextElement();", "-                                    \" depends on \" + classpathFileObject +", "-                                    \" due to \" + dependency, Project.MSG_DEBUG );", "+                                     \" depends on \" + classpathFileObject +", "+                                     \" due to \" + dependency, Project.MSG_DEBUG );", "-                        File jarFile = ( File )classpathFileObject;", "+                        File jarFile = (File)classpathFileObject;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80c3332d6f66a8afe7481b4a992bfd72", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void determineDependencies()         throws IOException", "signatureAfterChange": "     private void determineDependencies()         throws IOException, TaskException", "diff": ["-        throws IOException", "+        throws IOException, TaskException", "-        for( Enumeration e = getClassFiles( destPath ).elements(); e.hasMoreElements();  )", "+        for( Enumeration e = getClassFiles( destPath ).elements(); e.hasMoreElements(); )", "-            ClassFileInfo info = ( ClassFileInfo )e.nextElement();", "+            ClassFileInfo info = (ClassFileInfo)e.nextElement();", "-                    dependencyList = ( Vector )dependencyMap.get( info.className );", "+                    dependencyList = (Vector)dependencyMap.get( info.className );", "-            for( Enumeration depEnum = dependencyList.elements(); depEnum.hasMoreElements();  )", "+            for( Enumeration depEnum = dependencyList.elements(); depEnum.hasMoreElements(); )", "-                String dependentClass = ( String )depEnum.nextElement();", "+                String dependentClass = (String)depEnum.nextElement();", "-                Hashtable affectedClasses = ( Hashtable )affectedClassMap.get( dependentClass );", "+                Hashtable affectedClasses = (Hashtable)affectedClassMap.get( dependentClass );", "-            for( Enumeration e = dependencyMap.keys(); e.hasMoreElements();  )", "+            for( Enumeration e = dependencyMap.keys(); e.hasMoreElements(); )", "-                String className = ( String )e.nextElement();", "-                Vector dependencyList = ( Vector )dependencyMap.get( className );", "+                String className = (String)e.nextElement();", "+                Vector dependencyList = (Vector)dependencyMap.get( className );", "-                for( Enumeration e2 = dependencyList.elements(); e2.hasMoreElements();  )", "+                for( Enumeration e2 = dependencyList.elements(); e2.hasMoreElements(); )", "-                    String dependency = ( String )e2.nextElement();", "+                    String dependency = (String)e2.nextElement();", "-                                    \" depends on \" + classpathFileObject +", "-                                    \" due to \" + dependency, Project.MSG_DEBUG );", "+                                     \" depends on \" + classpathFileObject +", "+                                     \" due to \" + dependency, Project.MSG_DEBUG );", "-                        File jarFile = ( File )classpathFileObject;", "+                        File jarFile = (File)classpathFileObject;"]}]}