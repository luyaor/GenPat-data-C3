{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b3948532923dfa868b462d9f9010d11", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150821c53a9647e426996838cddbf37e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/rmic/DefaultRmicAdapter.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "signatureAfterChange": "     protected Commandline setupRmicCommand( String[] options )         throws TaskException", "diff": ["-            cmd.addArguments( FileUtils.translateCommandline( attributes.getExtdirs() ) );", "+            cmd.addArgument( PathUtil.formatPath( attributes.getExtdirs() ) );", "-        cmd.addArguments( FileUtils.translateCommandline( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "431f960902a8e9766ce9a2deb9888cc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/Kjc.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected Commandline setupKjcCommand()         throws TaskException", "signatureAfterChange": "     protected Commandline setupKjcCommand()         throws TaskException", "diff": ["-        Path classpath = getCompileClasspath();", "+        Path classpath = new Path();", "+        addCompileClasspath( classpath );", "-            cp.append( m_bootclasspath );", "+            cp.addPath( m_bootclasspath );", "-        cp.append( classpath );", "-        cp.append( src );", "+        cp.addPath( classpath );", "+        cp.addPath( src );", "-        cmd.addArguments( FileUtils.translateCommandline( cp ) );", "+        cmd.addArgument( PathUtil.formatPath( cp ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816d0376c7175076ba1002bb2cffe934", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/DeweyDecimal.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DeweyDecimal( final int[] components )", "signatureAfterChange": "     public DeweyDecimal(final int[] components)", "diff": ["-    public DeweyDecimal( final int[] components )", "-    {", "-        m_components = new int[ components.length ];", "+    public DeweyDecimal(final int[] components) {", "+        this.components = new int[components.length];", "-        for( int i = 0; i < m_components.length; i++ )", "-        {", "-            m_components[ i ] = components[ i ];", "+        for (int i = 0; i < components.length; i++) {", "+            this.components[i] = components[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8289f8ea2d07bb047afd919eaa1324b6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "50d24e6e653c8bb84ae7aa833ef74596826997ae", "commitAfterChange": "24f4015568c96b92ab7d60b28da4b7c20b4e85f6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private String resolveExecutable()", "signatureAfterChange": "     protected String resolveExecutable(String exec)", "diff": ["-    private String resolveExecutable() {", "+    protected String resolveExecutable(String exec) {", "-            return executable;", "+            return exec;", "-        File executableFile = getProject().resolveFile(executable);", "+        File executableFile = getProject().resolveFile(exec);", "-            executableFile = fileUtils.resolveFile(dir, executable);", "+            executableFile = fileUtils.resolveFile(dir, exec);", "-        return executable;", "+        return exec;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b013278051fc8c38aa2aacf5f421756", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/javac/Jikes.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-            classpath.append( m_bootclasspath );", "+            classpath.addPath( m_bootclasspath );", "-        if( ( m_bootclasspath == null ) || ( m_bootclasspath.size() == 0 ) )", "+        if( ( m_bootclasspath == null ) || m_bootclasspath.isEmpty() )", "-        classpath.append( getCompileClasspath() );", "+        addCompileClasspath( classpath );", "-        classpath.append( src );", "+        classpath.addPath( src );", "-            classpath.append( new Path( jikesPath ) );", "+            classpath.addPath( jikesPath );", "-        cmd.addArguments( FileUtils.translateCommandline( classpath ) );", "+        cmd.addArgument( PathUtil.formatPath( classpath ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4584b04168f1b368c26b9e726d07b76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionSet.java", "commitBeforeChange": "7573ef75f77cca9198cd0d4340c33f38c8242afa", "commitAfterChange": "7a297b6c99265eb360806ebb2df6d80930a63114", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setRefid( final Reference reference )         throws BuildException", "signatureAfterChange": "     public void setRefid(final Reference reference)         throws BuildException", "diff": ["-    public void setRefid( final Reference reference )", "-        throws BuildException", "-    {", "-        if( !m_extensions.isEmpty() ||", "-            !m_extensionsFilesets.isEmpty() )", "-        {", "+    public void setRefid(final Reference reference)", "+        throws BuildException {", "+        if (!extensions.isEmpty() || !extensionsFilesets.isEmpty()) {", "-            reference.getReferencedObject( getProject() );", "-        if( object instanceof ExtensionSet )", "-        {", "-            final ExtensionSet other = (ExtensionSet)object;", "-            m_extensions.addAll( other.m_extensions );", "-            m_extensionsFilesets.addAll( other.m_extensionsFilesets );", "-        }", "-        else", "-        {", "+            reference.getReferencedObject(getProject());", "+        if (object instanceof ExtensionSet) {", "+            final ExtensionSet other = (ExtensionSet) object;", "+            extensions.addAll(other.extensions);", "+            extensionsFilesets.addAll(other.extensionsFilesets);", "+        } else {", "-            throw new BuildException( message );", "+            throw new BuildException(message);", "-        super.setRefid( reference );", "+        super.setRefid(reference);"]}]}