{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46523a7be6d865217ce01ad4e4353262", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b7c16d43bc5fd19ec4fbe331435920", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "f1fd5e5e8a65a3463feb6226f4b827fc55417e51", "commitAfterChange": "1e760c7354cf76a820bf05aa29881ca9154757fc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkConfiguration() throws BuildException", "diff": ["-            throw new BuildException(\"basedir attribute must be set!\");", "+            throw new BuildException(\"basedir attribute must be set!\", getLocation());", "-            throw new BuildException(\"basedir does not exist!\");", "+            throw new BuildException(\"basedir does not exist!\", getLocation());", "-            throw new BuildException(\"cabfile attribute must be set!\");", "+            throw new BuildException(\"cabfile attribute must be set!\" , getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4cd45418bcfe78789a110c0f617aa79", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "12e8a63e2f797fdfb28e9f30761669465cb033ee", "commitAfterChange": "f9121ee81e58e6cb4369a4e043e0a88cbfe3e503", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            throw new BuildException(\"base attribute must be set!\", location);", "+            throw new BuildException(\"base attribute must be set!\", getLocation());", "-            throw new BuildException(\"base does not exist!\", location);", "+            throw new BuildException(\"base does not exist!\", getLocation());", "-                    throw new BuildException(FAIL_MSG, location);", "+                    throw new BuildException(FAIL_MSG, getLocation());"]}]}