{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aadb96742d967330544ec63e1497e225", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a78cd9c4674d6b02a356d66f76f49de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UntarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testEncoding()", "signatureAfterChange": "      @Test     public void testEncoding()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"encoding\",", "-                                     \"<untar> overrides setEncoding.\",", "-                                     \"The untar task doesn't support the \"", "-                                     + \"encoding attribute\");", "+        try {", "+            buildRule.executeTarget(\"encoding\");", "+            fail(\"<untar> overrides setEncoding.\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"The untar task doesn't support the encoding attribute\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b81e266e2cfc17c5c1bfb29fbabe21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "          public void testMultipleTargetsOneDoesntExist_FOEtrue()", "signatureAfterChange": "          @Test     public void testMultipleTargetsOneDoesntExist_FOEtrue()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"multipleTargetsOneDoesntExist_FOEtrue\", ", "-                                       \"Calling not existent target\", ", "-                                       \"Target \\\"three\\\" does not exist in the project \\\"subant\\\"\");", "+        try {", "+            buildRule.executeTarget(\"multipleTargetsOneDoesntExist_FOEtrue\");", "+            fail(\"BuildException expected: Calling not existent target\");", "+        } catch (BuildException ex) {", "+            assertContains(\"Target \\\"three\\\" does not exist in the project \\\"subant\\\"\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "655bfec71e8ec4a45f2ad13d9420141b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testConditionIncomplete()", "signatureAfterChange": "      @Test     public void testConditionIncomplete()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"condition-incomplete\",", "-                                     \"property attribute has been omitted\",", "-                                     \"The property attribute is required.\");", "+        try {", "+            buildRule.executeTarget(\"condition-incomplete\");", "+            fail(\"BuildException should have been thrown - property attribute has been omitted\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"The property attribute is required.\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68d47cb495fe627222d78423272d8a43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReferenceTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNotEnoughArgs()", "signatureAfterChange": "      @Test     public void testNotEnoughArgs()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"isreference-incomplete\",", "-                                     \"refid attribute has been omitted\",", "-                                     \"No reference specified for isreference \"", "-                                     + \"condition\");", "+        try {", "+            buildRule.executeTarget(\"isreference-incomplete\");", "+            fail(\"Build exception expected: refid attirbute has been omitted\");", "+        } catch(BuildException ex) {", "+            assertEquals(\"No reference specified for isreference condition\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb2c8aee031014cbbde4220a6726aa31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/EchoPropertiesTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testWithPrefixAndRegex() throws Exception", "signatureAfterChange": "      @Test     public void testWithPrefixAndRegex() throws Exception", "diff": ["+    @Test", "-        expectSpecificBuildException(\"testWithPrefixAndRegex\",", "-                \"The target must fail with prefix and regex attributes set\",", "-                \"Please specify either prefix or regex, but not both\");", "+    \ttry {", "+    \t\tbuildRule.executeTarget(\"testWithPrefixAndRegex\");", "+    \t\tfail(\"BuildException should have been thrown on Prefix and RegEx beng set\");", "+    \t} catch (BuildException ex) {", "+    \t\tassertEquals(\"The target must fail with prefix and regex attributes set\", \"Please specify either prefix or regex, but not both\", ex.getMessage());", "+    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea89082381a05e6a3774b22f4590dcf3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ConditionTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public void testFilesmatchIncomplete()", "signatureAfterChange": "      @Test     public void testFilesmatchIncomplete()", "diff": ["-", "+    @Test", "-        expectSpecificBuildException(\"filesmatch-incomplete\",", "-                                     \"Missing file2 attribute\",", "-                                     \"both file1 and file2 are required in filesmatch\");", "+        try {", "+            buildRule.executeTarget(\"filesmatch-incomplete\");", "+            fail(\"Build exception should have been thrown - Missing file2 attirbute\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"both file1 and file2 are required in filesmatch\", ex.getMessage());", "+        }"]}]}