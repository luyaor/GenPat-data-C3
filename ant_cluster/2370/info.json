{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c9f2f888b05503e0c7d81a821b74726", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237f49620e85578f6e587842e657a37e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "336c1beb219da09734b237ab6f7f0e56b14ae7b3", "commitAfterChange": "2d1ac70e3bebee7b64ccf4a926371095df00666c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testEmptyCatalog()", "signatureAfterChange": "     public void testEmptyCatalog()", "diff": ["-           //", "-           // These shenanigans are necessary b/c Norm Walsh's resolver", "-           // has a different idea of how file URLs are created on windoze", "-           // ie file://c:/foo instead of file:///c:/foo", "-           //", "-           String resultStr = new URL(((SAXSource)result).getInputSource().getSystemId()).getFile();", "-           assertTrue(\"Empty catalog should return input\",", "+           String resultStr =", "+               fileURLPartWithoutLeadingSlashes((SAXSource)result);", "+           assertTrue(\"Empty catalog should return input with a system ID like \"", "+                      + expected + \" but was \" + resultStr,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2135316f21bab0094e5766a07659f9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "51efe539a6d03adf63a486d27865f78fe4eaa804", "commitAfterChange": "1967c958ff5363f25742a8b7687a0c9dddcfa38a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "        public void testEmptyCatalog()", "signatureAfterChange": "        public void testEmptyCatalog()", "diff": ["-           assertNull(\"Empty catalog should return null\", result);", "+           String expected = toURLString(new File(project.getBaseDir() +", "+                                                  \"/i/dont/exist.dtd\"));", "+           //", "+           // These shenanigans are necessary b/c Norm Walsh's resolver", "+           // has a different idea of how file URLs are created on windoze", "+           // ie file://c:/foo instead of file:///c:/foo", "+           // ", "+           String resultStr = new URL(((SAXSource)result).getInputSource().getSystemId()).getFile();", "+           assertTrue(\"Empty catalog should return input\", ", "+                      expected.endsWith(resultStr));"]}]}