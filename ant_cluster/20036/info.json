{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66c4079d92520fcb3b5ae642d372030f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b297587333c80a538843b358538fa0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void enableContent()         throws ConfigurationException", "signatureAfterChange": "     public void enableContent()         throws ConfigurationException", "diff": ["-            Class type = method.getParameterTypes()[0];", "-            m_contentConfigurer = new DefaultPropertyConfigurer( type, null, method );", "+            final Class type = method.getParameterTypes()[ 0 ];", "+            m_contentConfigurer =", "+                new DefaultPropertyConfigurer( m_allProps.size(),", "+                                               type,", "+                                               null,", "+                                               method,", "+                                               1 );", "+            m_allProps.add( m_contentConfigurer );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693c8aad2dda9d6d698d0528d094b8e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "7bb0f18d6d15c21ea256733209b830fb00dfea1a", "commitAfterChange": "8d4197a222dae2279657d9765a8869d45d0c768d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            Iterator iter = getBuildListeners();", "+            while (iter.hasNext()) {", "+                newProject.removeBuildListener((BuildListener) iter.next());", "+            }", "+            iter = newProject.getBuildListeners().iterator();", "+            while (iter.hasNext()) {", "+                Object o = iter.next();", "+                if (o instanceof RecorderEntry) {", "+                    ((RecorderEntry) o).close();", "+                } else if (o instanceof AntClassLoader) {", "+                    ((AntClassLoader) o).cleanup();", "+                }", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711c1e2678c6f7b56f54f6a2f858fb31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "43f3df1bca1b297ad7db39237ae8978c0ceee182", "commitAfterChange": "c35f045b9055bb478a9ccdb8189af883adce0ee8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        // make sure we don't have an illegal set of options", "-        validateAttributes();", "+        // make sure we don't have an illegal set of options", "+            try {", "+        validateAttributes();", "+            } catch (BuildException e) {", "+                if (failonerror", "+                    || !getMessage(e)", "+                    .equals(MSG_WHEN_COPYING_EMPTY_RC_TO_FILE)) {", "+                    throw e;", "+                } else {", "+                    log(\"Warning: \" + getMessage(e), Project.MSG_ERR);", "+                    return;", "+                }", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e357fa431e9c32211808a8983052d07e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            Object obj = ref.getReferencedObject(getProject());", "-            if (obj != null) {", "-                addProperty(name, obj.toString());", "-            }", "+            try {", "+                addProperty(name, ", "+                            ref.getReferencedObject(getProject()).toString());", "+            } catch (BuildException be) {", "+                if (fallback != null) {", "+                    addProperty(name, ", "+                                ref.getReferencedObject(fallback).toString());", "+                } else {", "+                    throw be;", "+                }", "+            }                "]}]}