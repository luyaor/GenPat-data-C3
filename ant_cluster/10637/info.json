{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fbf5760c8203066caed77d389e751f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105fe1d5cc1a3a45e363f1eb8d3f87ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "1e01d1142cc73b63bdf8748408d87bf6d30a032a", "commitAfterChange": "4bcc44728551a0152f09f0fdf23553029e7bbde1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "    void disconnect() throws IOException", "signatureAfterChange": "      void disconnect() throws IOException", "diff": ["-  void disconnect() throws IOException {", "-    if (out != null) out.close(); ", "-    if (in != null) in.close(); ", "-    if (socket != null) socket.close();", "-  }", "+    void disconnect() throws IOException {", "+        if (out != null) {", "+            out.close(); ", "+        }", "+        if (in != null) {", "+            try {", "+                in.close(); ", "+            } catch (IOException e) {", "+            }", "+        }", "+        if (socket != null) {", "+            try {", "+                socket.close(); ", "+            } catch (IOException e) {", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a04f53fc3880eecc7c321c1ccfc051e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/util/Condition.java", "commitBeforeChange": "c31e31c52a1f624e72be505d788db9be42b87e5d", "commitAfterChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public boolean evaluate( final Context context )", "signatureAfterChange": "          public boolean evaluate( final Context context )", "diff": ["+        boolean result = false;", "+", "-                PropertyUtil.resolveProperty( m_condition, context, false ); ", "-", "-            boolean result = false;", "+                PropertyUtil.resolveProperty( getCondition(), context, false ); ", "-                result = ( null != context.get( resolved ) );", "+                final Object object = context.get( resolved );", "+                //TODO: Do more than just check for presence????????????", "+                ", "+                //true as object present", "+                result = true;", "-", "-            if( !m_isIfCondition )", "-            {", "-                result = !result;", "-            }", "-", "-            return result;", "+        }", "+        catch( final ContextException ce )", "+        {", "+            result = false;", "+", "+        if( !m_isIfCondition )", "+        {", "+            result = !result;", "+        }", "+", "+        return result;"]}]}