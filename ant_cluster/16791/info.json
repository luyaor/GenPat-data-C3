{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "146edc8415ab78518fac5e9723af9362", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b24bbc7fde9db78833e60ae954aabc6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "215ff90feefbbb5916572f2ebdafa885fa0acd17", "commitAfterChange": "ee5b9c7e25776b05f051515e1d801ff3c9a9dc38", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            beforeInstrumentationClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "+            beforeInstrumentationClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( instrumentDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( repositoryDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( buildDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( instrumentDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( repositoryDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( buildDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), System.getProperty( \"java.home\" ) + File.separator + \"..\" + File.separator + \"lib\" + File.separator + \"tools.jar\" ) );", "-            iContractClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( System.getProperty( \"java.home\" ) + File.separator + \"..\" + File.separator + \"lib\" + File.separator + \"tools.jar\" ) );", "+            iContractClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( repositoryDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( instrumentDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( buildDir.getAbsolutePath() ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77e2836ef158ec4d49358ef02ed4c92", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "215ff90feefbbb5916572f2ebdafa885fa0acd17", "commitAfterChange": "ee5b9c7e25776b05f051515e1d801ff3c9a9dc38", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            beforeInstrumentationClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "+            beforeInstrumentationClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            afterInstrumentationClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( instrumentDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( repositoryDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "+            afterInstrumentationClasspath.append( new Path( buildDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            repositoryClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( instrumentDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( repositoryDir.getAbsolutePath() ) );", "+            repositoryClasspath.append( new Path( buildDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), System.getProperty( \"java.home\" ) + File.separator + \"..\" + File.separator + \"lib\" + File.separator + \"tools.jar\" ) );", "-            iContractClasspath.append( new Path( getProject(), srcDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), repositoryDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), instrumentDir.getAbsolutePath() ) );", "-            iContractClasspath.append( new Path( getProject(), buildDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( System.getProperty( \"java.home\" ) + File.separator + \"..\" + File.separator + \"lib\" + File.separator + \"tools.jar\" ) );", "+            iContractClasspath.append( new Path( srcDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( repositoryDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( instrumentDir.getAbsolutePath() ) );", "+            iContractClasspath.append( new Path( buildDir.getAbsolutePath() ) );"]}]}