{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15f7b9447b998bc6413e603c01268dbe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113ac67481ef158fe9dc6efe5855fdb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "b9e04be31565d39250926e318190aa56bfb76452", "commitAfterChange": "78f88a7c4a3ea7ea57dafbd2dd0bd3801b30588d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      static void throwableMessage(StringBuffer m, Throwable error, boolean verbose)", "signatureAfterChange": "      static void throwableMessage(StringBuffer m, Throwable error, boolean verbose)", "diff": ["-            if (cause != null && cause.toString().equals(error.getMessage())) {", "+            if (cause == null) {", "+                break;", "+            }", "+            String msg1 = error.toString();", "+            String msg2 = cause.toString();", "+            if (msg1.endsWith(msg2)) {", "+                m.append(msg1.substring(0, msg1.length() - msg2.length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700629c6584476da778e98da1c038e6b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "0c25b6891413a3af1006c54d9d68459b1a5609b5", "commitAfterChange": "3fe578a16dfaae9a9bb1f24561e3bba6b9c88830", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private String[] patchEnvironment()", "signatureAfterChange": "     private String[] patchEnvironment()", "diff": ["+            String keyValue = env[i];", "-            String key = env[i].substring(0, env[i].indexOf('=') + 1);", "+            String key = keyValue.substring(0, keyValue.indexOf('=') + 1);", "+            // Find the key in the current enviroment copy", "+            // and remove it.", "-                if (environmentCaseInSensitive) {", "-                    osEnvItem = osEnvItem.toLowerCase();", "-                }", "-                if (osEnvItem.startsWith(key)) {", "+                String convertedItem = environmentCaseInSensitive", "+                    ? osEnvItem.toLowerCase() : osEnvItem;", "+                if (convertedItem.startsWith(key)) {", "+                    if (environmentCaseInSensitive) {", "+                        // Use the original casiness of the key", "+                        keyValue = osEnvItem.substring(0, key.length())", "+                            + keyValue.substring(key.length());", "+                    }", "-            osEnv.addElement(env[i]);", "+            // Add the key to the enviromnent copy", "+            osEnv.addElement(keyValue);"]}]}