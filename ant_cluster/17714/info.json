{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ec442abcee1abbe83954255d05e14f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9612503f2de3931d83c8e2d2eab4709f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testTypedAdderAttribute()         throws Exception", "signatureAfterChange": "     public void testTypedAdderAttribute()         throws Exception", "diff": ["-        RoleManager roleMgr = (RoleManager)getServiceManager().lookup( RoleManager.ROLE );", "-        final RoleInfo roleInfo = new RoleInfo(\"my-role1\", MyRole1.class );", "-        roleMgr.addRole( roleInfo );", "-        registerConverter( StringToMyRole1Converter.class, String.class, MyRole1.class );", "+        registerRole( new RoleInfo(\"my-role1\", MyRole1.class ) );", "+        registerConverter( ObjectToMyRole1Converter.class, String.class, MyRole1.class );", "-        final ConfigTest6 test = new ConfigTest6();", "+        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "-        m_configurer.configure( test, config, m_adaptor );", "+        m_configurer.configure( test, config, m_context );", "-        final ConfigTest6 expected = new ConfigTest6();", "-        expected.add( new MyType1() );", "+        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        expected.add( new MyRole1Adaptor( \"some value\" ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "990d05a29353c013ed73943c9c77054e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testTypedAdderAttribute()         throws Exception", "signatureAfterChange": "     public void testTypedAdderAttribute()         throws Exception", "diff": ["-        RoleManager roleMgr = (RoleManager)getServiceManager().lookup( RoleManager.ROLE );", "-        final RoleInfo roleInfo = new RoleInfo(\"my-role1\", MyRole1.class );", "-        roleMgr.addRole( roleInfo );", "-        registerConverter( StringToMyRole1Converter.class, String.class, MyRole1.class );", "+        registerRole( new RoleInfo(\"my-role1\", MyRole1.class ) );", "+        registerConverter( ObjectToMyRole1Converter.class, String.class, MyRole1.class );", "-        final ConfigTest6 test = new ConfigTest6();", "+        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "-        m_configurer.configure( test, config, m_adaptor );", "+        m_configurer.configure( test, config, m_context );", "-        final ConfigTest6 expected = new ConfigTest6();", "-        expected.add( new MyType1() );", "+        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "+        expected.add( new MyRole1Adaptor( \"some value\" ) );"]}]}