{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef0f726c96cc3425c16f7a0295d42ba2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa00c3cc417bf43890d08e5638d0df2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/AddTypeTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testNestedAB()", "signatureAfterChange": "      @Test     public void testNestedAB()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(", "-            \"nested.ab\", \"Should have got ambiguous\", \"ambiguous\");", "+        try {", "+            buildRule.executeTarget(\"nested.ab\");", "+            fail(\"Build exception expected: Should have got ambiguous\");", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(\"ambiguous\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47b8ee279e157b044707fc8536d86ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/TypeFoundTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testUndefined()", "signatureAfterChange": "      @Test     public void testUndefined()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testUndefined\",\"left out the name attribute\", \"No type specified\");", "+        try {", "+            buildRule.executeTarget(\"testUndefined\");", "+            fail(\"Build exception expected: left out the name attribute\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"No type specified\", ex.getMessage());", "+        }"]}]}