{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28eddf95db71e6212a1937ab754ac8ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0301ce5078f28b28dedd7c790a7dd8cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f735f5f44df9fa52266e7b8b7f2741c2b7560d22", "commitAfterChange": "400ba5d1981259cc07b41f08cd1b53f048f8ef52", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, TaskException", "signatureAfterChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, TaskException", "diff": ["-        if( action == SEND_FILES )", "+        if( m_action == SEND_FILES )", "-        if( ( ds.getBasedir() == null ) && ( ( action == SEND_FILES ) || ( action == GET_FILES ) ) )", "+        if( ( ds.getBasedir() == null ) && ( ( m_action == SEND_FILES ) || ( m_action == GET_FILES ) ) )", "-            if( ( action == SEND_FILES ) || ( action == GET_FILES ) )", "+            if( ( m_action == SEND_FILES ) || ( m_action == GET_FILES ) )", "-        if( action == LIST_FILES )", "+        if( m_action == LIST_FILES )", "-            File pd = new File( listing.getParent() );", "+            File pd = new File( m_listing.getParent() );", "-            bw = new BufferedWriter( new FileWriter( listing ) );", "+            bw = new BufferedWriter( new FileWriter( m_listing ) );", "-            switch( action )", "+            switch( m_action )", "-                        throw new TaskException( \"unknown ftp action \" + action );", "+                        throw new TaskException( \"unknown ftp action \" + m_action );", "-        if( action == LIST_FILES )", "+        if( m_action == LIST_FILES )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5733d294dcbb2a793ee7ab4ee976eb32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "bc9dc4239a1889d0da388b3e52372dbb1ded7f09", "commitAfterChange": "d7d6e9fa4c426534b21ce6a7011b40e7a6a63f13", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws TaskException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-            reader = encoding == null ? new FileReader( src )", "-                : new InputStreamReader( new FileInputStream( src ), encoding );", "-            writer = encoding == null ? new FileWriter( temp )", "-                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+            reader = m_encoding == null ? new FileReader( src )", "+                : new InputStreamReader( new FileInputStream( src ), m_encoding );", "+            writer = m_encoding == null ? new FileWriter( temp )", "+                : new OutputStreamWriter( new FileOutputStream( temp ), m_encoding );", "-            if( token != null )", "+            if( m_token != null )", "-                final String val = stringReplace( value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                final String tok = stringReplace( token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String val = stringReplace( m_value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String tok = stringReplace( m_token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + token.getText() + \" --> \" + value.getText() );", "+                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + m_token.getText() + \" --> \" + m_value.getText() );", "-            if( replacefilters.size() > 0 )", "+            if( m_replacefilters.size() > 0 )", "-                ++fileCount;", "+                ++m_fileCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c07191de9f9eabf828c9befca51fb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "signatureAfterChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "diff": ["-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "+        ArrayList fragments = new ArrayList();", "+        ArrayList propertyRefs = new ArrayList();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-        while( i.hasMoreElements() )", "+        Iterator i = fragments.iterator();", "+        Iterator j = propertyRefs.iterator();", "+        while( i.hasNext() )", "-            String fragment = (String)i.nextElement();", "+            String fragment = (String)i.next();", "-                String propertyName = (String)j.nextElement();", "+                String propertyName = (String)j.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc2fe5f04b79fba341c73611657cd564", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/Project.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "signatureAfterChange": "     private String replaceProperties( Project project, String value, Hashtable keys )         throws TaskException", "diff": ["-        Vector fragments = new Vector();", "-        Vector propertyRefs = new Vector();", "+        ArrayList fragments = new ArrayList();", "+        ArrayList propertyRefs = new ArrayList();", "-        Enumeration i = fragments.elements();", "-        Enumeration j = propertyRefs.elements();", "-        while( i.hasMoreElements() )", "+        Iterator i = fragments.iterator();", "+        Iterator j = propertyRefs.iterator();", "+        while( i.hasNext() )", "-            String fragment = (String)i.nextElement();", "+            String fragment = (String)i.next();", "-                String propertyName = (String)j.nextElement();", "+                String propertyName = (String)j.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1a29a79db3bc61c2d70b716c20a0194", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f735f5f44df9fa52266e7b8b7f2741c2b7560d22", "commitAfterChange": "400ba5d1981259cc07b41f08cd1b53f048f8ef52", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, TaskException", "signatureAfterChange": "     protected int transferFiles( FTPClient ftp, FileSet fs )         throws IOException, TaskException", "diff": ["-        if( action == SEND_FILES )", "+        if( m_action == SEND_FILES )", "-        if( ( ds.getBasedir() == null ) && ( ( action == SEND_FILES ) || ( action == GET_FILES ) ) )", "+        if( ( ds.getBasedir() == null ) && ( ( m_action == SEND_FILES ) || ( m_action == GET_FILES ) ) )", "-            if( ( action == SEND_FILES ) || ( action == GET_FILES ) )", "+            if( ( m_action == SEND_FILES ) || ( m_action == GET_FILES ) )", "-        if( action == LIST_FILES )", "+        if( m_action == LIST_FILES )", "-            File pd = new File( listing.getParent() );", "+            File pd = new File( m_listing.getParent() );", "-            bw = new BufferedWriter( new FileWriter( listing ) );", "+            bw = new BufferedWriter( new FileWriter( m_listing ) );", "-            switch( action )", "+            switch( m_action )", "-                        throw new TaskException( \"unknown ftp action \" + action );", "+                        throw new TaskException( \"unknown ftp action \" + m_action );", "-        if( action == LIST_FILES )", "+        if( m_action == LIST_FILES )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d863f2f458c140f1d667d9445162a422", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "bc9dc4239a1889d0da388b3e52372dbb1ded7f09", "commitAfterChange": "d7d6e9fa4c426534b21ce6a7011b40e7a6a63f13", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile( File src )         throws TaskException", "signatureAfterChange": "     private void processFile( File src )         throws TaskException", "diff": ["-            reader = encoding == null ? new FileReader( src )", "-                : new InputStreamReader( new FileInputStream( src ), encoding );", "-            writer = encoding == null ? new FileWriter( temp )", "-                : new OutputStreamWriter( new FileOutputStream( temp ), encoding );", "+            reader = m_encoding == null ? new FileReader( src )", "+                : new InputStreamReader( new FileInputStream( src ), m_encoding );", "+            writer = m_encoding == null ? new FileWriter( temp )", "+                : new OutputStreamWriter( new FileOutputStream( temp ), m_encoding );", "-            if( token != null )", "+            if( m_token != null )", "-                final String val = stringReplace( value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                final String tok = stringReplace( token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String val = stringReplace( m_value.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "+                final String tok = stringReplace( m_token.getText(), \"\\n\", StringUtil.LINE_SEPARATOR );", "-                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + token.getText() + \" --> \" + value.getText() );", "+                getLogger().debug( \"Replacing in \" + src.getPath() + \": \" + m_token.getText() + \" --> \" + m_value.getText() );", "-            if( replacefilters.size() > 0 )", "+            if( m_replacefilters.size() > 0 )", "-                ++fileCount;", "+                ++m_fileCount;"]}]}