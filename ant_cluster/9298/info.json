{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e74cd2c8f0eaaf2622077ef4cfef6e46", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28e198b8dc929c37dec84c9ea6d99f6f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void setValue( final PropertyConfigurer setter,                            final ConfigurationState state,                            final String value,                            final Context context )         throws Exception", "signatureAfterChange": "     private void setValue( final PropertyConfigurer setter,                            final ConfigurationState state,                            final String value,                            final Context context )         throws Exception", "diff": ["+", "+        Object converterContext = context;", "+        if( context instanceof Resolvable )", "+        {", "+            converterContext = ( (Resolvable)context ).resolve( context );", "+        }", "-        objValue = m_converter.convert( clazz, objValue, context );", "+        objValue = m_converter.convert( clazz, objValue, converterContext );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce813473cfa7e4fcfcc60f6d96e53e59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/xml/ParseContext.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void parse(URL source, String[] rootElementNames,                       ElementHandler rootElementHandler)          throws XMLParseException", "signatureAfterChange": "     public void parse(URL source, String[] rootElementNames,                       ElementHandler rootElementHandler)          throws XMLParseException", "diff": ["-                throw new XMLParseException(e.getException(), location);", "+                Throwable nestedException = e.getException();", "+                if (nestedException instanceof AntException) {", "+                    location = ((AntException)nestedException).getLocation();", "+                }", "+                throw new XMLParseException(nestedException, location);"]}]}