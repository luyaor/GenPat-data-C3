{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0801685b5f019bbfc89fb39cda03ce07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e9d3d30dd89fc1fc67d6a16cbfdd45", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "f844348eff346280acc9d922bfacf5c99668ac4a", "commitAfterChange": "1a4946cfd6c88cd17f387b99634ab859dbbea692", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["-        boolean found = tryToLocateSignature(MIN_EOCD_SIZE + ZIP64_EOCDL_LENGTH,", "-                                             MAX_EOCD_SIZE + ZIP64_EOCDL_LENGTH,", "-                                             ZipOutputStream", "-                                             .ZIP64_EOCD_LOC_SIG);", "+        positionAtEndOfCentralDirectoryRecord();", "+        archive.seek(archive.getFilePointer() - ZIP64_EOCDL_LENGTH);", "+        archive.readFully(WORD_BUF);", "+        boolean found = Arrays.equals(ZipOutputStream.ZIP64_EOCD_LOC_SIG,", "+                                      WORD_BUF);", "+            skipBytes(ZIP64_EOCDL_LENGTH - WORD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf3ac427c96abe8a17f1591b5ecdce7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSGET.java", "commitBeforeChange": "5722812dbe0cfda11a528c3e6c32b2b2b67b7960", "commitAfterChange": "d76fda652ab6bb3f3840e8606f73d23307a33ca4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     Commandline buildCmdLine()", "signatureAfterChange": "     Commandline buildCmdLine()", "diff": ["-        commandLine.createArgument().setValue(getVersion());", "+        commandLine.createArgument().setValue(getVersionDateLabel());", "+        // -G", "+        commandLine.createArgument().setValue(getFileTimeStamp());", "+        // -GWS or -GWR", "+        commandLine.createArgument().setValue(getWritableFiles());"]}]}