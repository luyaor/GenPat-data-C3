{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6fdbba289da8dab25900bc52fa171418", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b6b3165205d7a67db316904afccc0f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "e7e99f061c7bf7cb73df38d26b3cff344012c5d6", "commitAfterChange": "7d174c342609636a70ce2f26fb50d8ea8077fd7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public ZipFile(String name, boolean mustNotBeEmpty) throws IOException", "signatureAfterChange": "     private boolean startsWithLocalFileHeader() throws IOException", "diff": ["-     */", "-    public ZipFile(String name, boolean mustNotBeEmpty) throws IOException {", "-        this(new File(name), null, mustNotBeEmpty);", "-    }", "+     */", "+    private boolean startsWithLocalFileHeader() throws IOException {", "+        archive.seek(0);", "+        final byte[] start = new byte[WORD];", "+        archive.readFully(start);", "+        for (int i = 0; i < start.length; i++) {", "+            if (start[i] != ZipOutputStream.LFH_SIG[i]) {", "+                return false;", "+            }", "+        }", "+        return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1688a8c72404924fd02a7cdf97cd72", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/CommandlineJava.java", "commitBeforeChange": "a92bca05d07e3aaade0b32079ff66912c2ca9573", "commitAfterChange": "d957fa1151163d513197a174a098e2aac8745b1e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public String[] getCommandline()", "signatureAfterChange": "     public String[] getCommandline()", "diff": ["-        // -jar must be the first option in the command line.", "-        if (executeJar){", "-            result[pos++] = \"-jar\";", "-        }", "+", "+        // JDK usage command line says that -jar must be the first option, as there is", "+        // a bug in JDK < 1.4 that forces the jvm type to be specified as the first", "+        // option, it is appended here as specified in the docs even though there is", "+        // in fact no order.", "+        if (executeJar){", "+            result[pos++] = \"-jar\";", "+        }", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f408e4cc32bde511558fd4fcd85fbe29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/xdocs/src/org/apache/tools/ant/xdoclet/AntSubTask.java", "commitBeforeChange": "f29de55fee3269af96bc2c5b2c70ce930d131195", "commitAfterChange": "9b35ad50ac0efc39cce65a99274f0f7acf2775c3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static final boolean isAntTask(ClassDoc clazz)", "signatureAfterChange": "     public static final boolean isAntTask(ClassDoc clazz)", "diff": ["-        MethodDoc[] methods = clazz.methods();", "-        for (int i = 0; i < methods.length; i++) {", "-            if (\"execute\".equals(methods[i].name())) {", "-                return true;", "+        // remove deprecated tasks (controversial!)", "+        Tag[] tags = clazz.tags();", "+        for (int i=0; i < tags.length; i++) {", "+            if (\"@deprecated\".equals(tags[i].name())) {", "+                return false;", "+        if (hasExecuteMethod(clazz)) {", "+            return true;", "+        }", "+"]}]}