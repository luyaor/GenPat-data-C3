{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c0feaca069e97701d501decdfa19911", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bfe11cfb68e189da37792982e9fb35", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "1df7fd17caeda194502c9d4cb7a8271eca4997d8", "commitAfterChange": "49672cb190db8dcc8abe583b603edcdfe617a43b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void complete() throws IOException", "signatureAfterChange": "     public void complete() throws IOException", "diff": ["+", "+        if (outputStream instanceof LazyFileOutputStream) {", "+            ((LazyFileOutputStream) outputStream).open();", "+        }", "-        errorStream.close();", "+", "+        if (errorStream != outputStream) {", "+            if (errorStream instanceof LazyFileOutputStream) {", "+                ((LazyFileOutputStream) errorStream).open();", "+            }", "+            errorStream.close();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb13a435667c493d19c1102e1bdc561", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/Property.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void run()         throws AntException", "signatureAfterChange": "      public void run()         throws AntException", "diff": ["-        final Object value = context.resolveValue( m_value );", "+", "+        Object value = m_value;", "+", "+        if( value instanceof String )", "+        {", "+            value = context.resolveValue( (String)value );", "+        }", "+", "+        while( null != value && value instanceof Resolvable )", "+        {", "+            value = ((Resolvable)value).resolve( context );", "+        }"]}]}