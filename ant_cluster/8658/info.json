{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a0631054a2494d0bd6efe35d056e6d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53dd1ad31f6d4dd5859e4e8b78e2c28b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "signatureAfterChange": "     private void buildWeblogicJar(File sourceJar, File destJar, String publicId)", "diff": ["-        org.apache.tools.ant.taskdefs.Java javaTask = null;", "+        Java javaTask = null;", "+", "+            javaTask.createJvmarg().setLine(additionalJvmArgs);", "+            if (!(sysprops.isEmpty())) {", "+                for (Enumeration en = sysprops.elements() ; en.hasMoreElements();) {", "+                    Environment.Variable entry", "+                        = (Environment.Variable) en.nextElement();", "+                    javaTask.addSysproperty(entry);", "+                }", "+            }", "-            if (combinedClasspath != null", "+            if (wlClasspath != null && combinedClasspath != null", "-            javaTask.createArg().setValue(destJar.getPath());", "+            if (outputDir == null) {", "+                javaTask.createArg().setValue(destJar.getPath());", "+            } else {", "+                javaTask.createArg().setValue(outputDir.getPath());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883e413bc2477665c07871144f53b92a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WeblogicDeploymentTool.java", "commitBeforeChange": "bd2c472af4fc8428f494cfd929dfd098100ceb41", "commitAfterChange": "64c4989ed4575a005c66a87a194791cf15ce27f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          protected DescriptorHandler getDescriptorHandler(File srcDir)", "signatureAfterChange": "           protected DescriptorHandler getDescriptorHandler(File srcDir)", "diff": ["-    ", "-        registerDTD(handler, PUBLICID_EJB, ", "-                    ejbDTD == null ? DEFAULT_EJB_DTD_LOCATION : ejbDTD);", "+        // register all the DTDs, both the ones that are known and", "+        // any supplied by the user", "+        handler.registerDTD(PUBLICID_EJB11, DEFAULT_WL51_EJB11_DTD_LOCATION);", "+        handler.registerDTD(PUBLICID_EJB11, DEFAULT_WL60_EJB11_DTD_LOCATION);", "+        handler.registerDTD(PUBLICID_EJB11, ejb11DTD);", "+        handler.registerDTD(PUBLICID_EJB20, DEFAULT_WL60_EJB20_DTD_LOCATION);", "+        ", "+        ", "+        for (Iterator i = getConfig().dtdLocations.iterator(); i.hasNext();) {", "+            EjbJar.DTDLocation dtdLocation = (EjbJar.DTDLocation)i.next();", "+            handler.registerDTD(dtdLocation.getPublicId(), dtdLocation.getLocation());", "+        }", "+        "]}]}