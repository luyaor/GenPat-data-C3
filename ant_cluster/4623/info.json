{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcee8db5990f3035b42e9d68ebd4e6e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19de915e27c59a6b3b402fb3fa150e4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java", "commitBeforeChange": "e438a9bf89f863be3d231d0a1a275ca0b8550ed0", "commitAfterChange": "dda05149e50bb4550899dce414bfa1013669b947", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testSigFile()", "signatureAfterChange": "      public void testSigFile()", "diff": ["+        SignJarChild sj = new SignJarChild();", "+        sj.setAlias(\"testonly\");", "+        sj.setKeystore(\"testkeystore\");", "+        sj.setStorepass(\"apacheant\");", "+        File jar = new File(getProject().getProperty(\"test.jar\"));", "+        sj.setJar(jar);", "+        assertFalse(\"mustn't find signature without sigfile attribute\",", "+                    sj.isSigned());", "+        sj.setSigfile(\"TEST\");", "+        assertTrue(\"must find signature with sigfile attribute\",", "+                   sj.isSigned());", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538e7bed023fe376efe76d3043ca7735", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "5ecbfc2436bdcb618dba0414ccead746e699c05a", "commitAfterChange": "14211b597afbfd0bee39c381afe3d681704f7eeb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void spawn() throws IOException", "signatureAfterChange": "     public void spawn() throws IOException", "diff": ["+", "+        OutputStream dummyOut = new OutputStream() {", "+            public void write(int b) throws IOException {", "+            }", "+        };", "+", "+        ExecuteStreamHandler streamHandler = new PumpStreamHandler(dummyOut);", "+        streamHandler.setProcessErrorStream(process.getErrorStream());", "+        streamHandler.setProcessOutputStream(process.getInputStream());", "+        streamHandler.start();", "+        process.getOutputStream().close();", "+"]}]}