{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2981aecc6d6979bf071290b91b91fea1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105e0dd1141d23ea867ad29b8ce2a891", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private void createFolders( File file )         throws IOException, ParseException", "signatureAfterChange": "     private void createFolders( File file )         throws IOException, ParseException", "diff": ["-            log( \"Considering \\\"\" + line + \"\\\"\", Project.MSG_VERBOSE );", "+            getLogger().debug( \"Considering \\\"\" + line + \"\\\"\" );", "-                        log( \"Creating \" + dir.getAbsolutePath(), Project.MSG_VERBOSE );", "+                        getLogger().debug( \"Creating \" + dir.getAbsolutePath() );", "-                            log( \"Created \" + dir.getAbsolutePath(), Project.MSG_INFO );", "+                            getLogger().info( \"Created \" + dir.getAbsolutePath() );", "-                            log( \"Failed to create \" + dir.getAbsolutePath(), Project.MSG_INFO );", "+                            getLogger().info( \"Failed to create \" + dir.getAbsolutePath() );", "-                        log( dir.getAbsolutePath() + \" exists. Skipping\", Project.MSG_VERBOSE );", "+                        getLogger().debug( dir.getAbsolutePath() + \" exists. Skipping\" );", "-                    log( \"File separator problem with \" + line,", "-                         Project.MSG_WARN );", "+                    final String message = \"File separator problem with \" + line;", "+                    getLogger().warn( message );", "-                log( \"Skipped \\\"\" + line + \"\\\"\", Project.MSG_VERBOSE );", "+                getLogger().debug( \"Skipped \\\"\" + line + \"\\\"\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d97e41de19050b66bfb372404c39a5c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "96f9a81fa679d8e7ef4eb3725d383df9730d49dd", "commitAfterChange": "669a7eae15ea1cf4d43f78955eb15a1b757717f5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     private void createFolders( File file )         throws IOException, ParseException", "signatureAfterChange": "     private void createFolders( File file )         throws IOException, ParseException", "diff": ["-            log( \"Considering \\\"\" + line + \"\\\"\", Project.MSG_VERBOSE );", "+            getLogger().debug( \"Considering \\\"\" + line + \"\\\"\" );", "-                        log( \"Creating \" + dir.getAbsolutePath(), Project.MSG_VERBOSE );", "+                        getLogger().debug( \"Creating \" + dir.getAbsolutePath() );", "-                            log( \"Created \" + dir.getAbsolutePath(), Project.MSG_INFO );", "+                            getLogger().info( \"Created \" + dir.getAbsolutePath() );", "-                            log( \"Failed to create \" + dir.getAbsolutePath(), Project.MSG_INFO );", "+                            getLogger().info( \"Failed to create \" + dir.getAbsolutePath() );", "-                        log( dir.getAbsolutePath() + \" exists. Skipping\", Project.MSG_VERBOSE );", "+                        getLogger().debug( dir.getAbsolutePath() + \" exists. Skipping\" );", "-                    log( \"File separator problem with \" + line,", "-                         Project.MSG_WARN );", "+                    final String message = \"File separator problem with \" + line;", "+                    getLogger().warn( message );", "-                log( \"Skipped \\\"\" + line + \"\\\"\", Project.MSG_VERBOSE );", "+                getLogger().debug( \"Skipped \\\"\" + line + \"\\\"\" );"]}]}