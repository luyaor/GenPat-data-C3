{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3362eaeb4b4dde8cfc173147f71c3372", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae8dff720815b4b1e403a0deb3dbdb0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/repository/Library.java", "commitBeforeChange": "4d831bb7cbb2bb2839303380a28f888c587802a0", "commitAfterChange": "f630ef56ed68316b07aaa27e05cf871de1070498", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setUnless(String unlessClause)", "signatureAfterChange": "     public void setEnabled(boolean enabled)", "diff": ["+     */", "+    public void setEnabled(boolean enabled) {", "+        this.enabled = enabled;", "+    }", "-     */", "-    public void setUnless(String unlessClause) {", "-        this.unlessClause = unlessClause;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da856da9b417b8920fde65a474c79507", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/execution/ExecutionFrame.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void executeTasks(Iterator taskIterator) throws ExecutionException, ConfigException", "signatureAfterChange": "     public void executeTasks(Iterator taskIterator) throws ExecutionException, ConfigException", "diff": ["-     */", "-    public void executeTasks(Iterator taskIterator) throws ExecutionException, ConfigException {", "-        Task task = null;", "-        try {", "-            while (taskIterator.hasNext()) {", "-                task = (Task)taskIterator.next();", "-                try {", "-                    ExecutionTask executionTask = getConfiguredExecutionTask(task);", "-                    eventSupport.fireTaskStarted(this, task);", "-                    executionTask.execute();", "-                }", "-                catch (ExecutionException e) {", "-                    if (e.getLocation() == null || e.getLocation() == Location.UNKNOWN_LOCATION) {", "-                        e.setLocation(task.getLocation());", "-                    }", "-                    throw e;", "-                }", "-                catch (ConfigException e) {", "-                    if (e.getLocation() == null || e.getLocation() == Location.UNKNOWN_LOCATION) {", "-                        e.setLocation(task.getLocation());", "-                    }", "-                    throw e;", "-                }", "-                eventSupport.fireTaskFinished(this, task, null);", "-            }", "-        }", "-        catch (RuntimeException e) {", "-            eventSupport.fireTaskFinished(this, task, e);", "-            throw e;", "-        }", "-    }        ", "+     */", "+    public void executeTasks(Iterator taskIterator) throws ExecutionException, ConfigException {", "+        TaskElement task = null;", "+        try {", "+            while (taskIterator.hasNext()) {", "+                task = (TaskElement)taskIterator.next();", "+                try {", "+                    Task configuredTask = configureTask(task);", "+                    eventSupport.fireTaskStarted(this, task);", "+                    configuredTask.execute();", "+                }", "+                catch (ExecutionException e) {", "+                    if (e.getLocation() == null || e.getLocation() == Location.UNKNOWN_LOCATION) {", "+                        e.setLocation(task.getLocation());", "+                    }", "+                    throw e;", "+                }", "+                catch (ConfigException e) {", "+                    if (e.getLocation() == null || e.getLocation() == Location.UNKNOWN_LOCATION) {", "+                        e.setLocation(task.getLocation());", "+                    }", "+                    throw e;", "+                }", "+                eventSupport.fireTaskFinished(this, task, null);", "+            }", "+        }", "+        catch (RuntimeException e) {", "+            eventSupport.fireTaskFinished(this, task, e);", "+            throw e;", "+        }", "+    }        "]}]}