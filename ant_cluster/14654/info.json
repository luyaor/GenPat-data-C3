{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e115d69aa2c7705e11b0fd44048b4823", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4d5ca66e8132e45608c236e7fc4ce5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/ssh/ScpTest.java", "commitBeforeChange": "13bc6453fe4c31a2f053a6ebb28638a20136227f", "commitAfterChange": "9ffa99a029f6a0d02374c8705d2db32b23731779", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public ScpTest(String testname)", "signatureAfterChange": "      public ScpTest(String testname)", "diff": ["+        if (System.getProperty(\"scp.tmp\") != null) {", "+            tempDir = new File(System.getProperty(\"scp.tmp\"));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b067515cea4ff2925bb9da37027ef2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/svn/src/main/org/apache/tools/ant/taskdefs/svn/SvnChangeLogParser.java", "commitBeforeChange": "027327211a21b95f34bae714fcefb3e14c7f595c", "commitAfterChange": "644897e7a5ca067009c5c56dee3922707fe705ef", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processPath(final String line)", "signatureAfterChange": "     private void processPath(final String line)", "diff": ["-        } else {", "-            paths.add(line.substring(5));", "+        } else if (line.length() > 5) {", "+            paths.add(new SvnEntry.Path(line.substring(5), line.charAt(3)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97fe8d20a88a2d19907bc889418f5491", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "44be0d652d306225e106ce501d4c6421d50fd8b5", "commitAfterChange": "590844e775f322377fe9d9dbb7137ed465d625d9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void useParameter(Parameter parameter)", "signatureAfterChange": "     public void useParameter(Parameter parameter)", "diff": ["+        } else if (\"delayupdate\".equals(key)) {", "+            boolean updateValue =", "+                (\"true\".equalsIgnoreCase(value))", "+                ? true", "+                : false;", "+            setDelayUpdate(updateValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37f1f0c594c8cb1a147d7650f984b4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "8ea8f38c22dce6c8c6696751ae6c381e4f1985fa", "commitAfterChange": "5348fe6bcba126301a3f97e3919f7eeca1b940ea", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static void deleteSymlink(File linkfil)         throws IOException", "signatureAfterChange": "     public static void deleteSymlink(File linkfil)         throws IOException", "diff": ["+", "-                                              canfil.getParentFile(), false, false);", "+                                              canfil.getParentFile(), false,", "+                                              false);", "+", "+        if (FILE_UTILS.isLeadingPath(canfil, linkfil)) {", "+            // link points to a parent directory, renaming the parent", "+            // will rename the file", "+            linkfil = new File(temp,", "+                               FILE_UTILS.removeLeadingPath(canfil, linkfil));", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc6db9b15c4aa26713a87dabac04db97", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java", "commitBeforeChange": "773a2273edbbe2976362a6698ad57fd4df51ceca", "commitAfterChange": "63ec7ba4cab73e0710f2613a0a4ab35e99754afe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["+                        parameters[i].getValue()));", "+                }", "+                else if (WHITESPACE_KEY.equalsIgnoreCase(paramname)) {", "+                    setIgnorewhitespace(Project.toBoolean("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d527983b97d45eeff3f2633db9ab2223", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "487989a0592c31de0e39bdb1f0d5aa8971922e57", "commitAfterChange": "fa9eca56a6da096bf979f5509971017d87e4eb23", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean contentEquals(File f1, File f2) throws IOException", "signatureAfterChange": "     public boolean contentEquals(File f1, File f2) throws IOException", "diff": ["+        if (f1.equals(f2)) {", "+            // same filename => true", "+            return true;", "+        }", "+        ", "+        if (f1.length() != f2.length()) {", "+            // different size =>false", "+            return false;", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3511d43381b2d43f36df3816e4d867", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/JavacTest.java", "commitBeforeChange": "8e410f0f18af59a1726e34166b0633dc97723c41", "commitAfterChange": "763ad7ae9b53d425515a9222f04dfc7d08ce6acf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testCompilerAttribute()", "signatureAfterChange": "     public void testCompilerAttribute()", "diff": ["-        assertTrue(\"default value\",", "-                   \"javac1.1\".equals(compiler)", "-                   || \"javac1.2\".equals(compiler)", "-                   || \"javac1.3\".equals(compiler)", "-                   || \"javac1.4\".equals(compiler)", "-                   || \"javac1.5\".equals(compiler)", "-                   || \"classic\".equals(compiler));", "+        if (System.getProperty(\"build.compiler\") != null) {", "+            assertEquals(System.getProperty(\"build.compiler\"),", "+                         compiler);", "+        } else {", "+            assertTrue(\"default value\",", "+                       \"javac1.1\".equals(compiler)", "+                       || \"javac1.2\".equals(compiler)", "+                       || \"javac1.3\".equals(compiler)", "+                       || \"javac1.4\".equals(compiler)", "+                       || \"javac1.5\".equals(compiler)", "+                       || \"classic\".equals(compiler));", "+        }", "-        project.setNewProperty(\"build.compiler\", \"jikes\");", "+        // setUserProperty to override system properties", "+        project.setUserProperty(\"build.compiler\", \"jikes\");"]}]}