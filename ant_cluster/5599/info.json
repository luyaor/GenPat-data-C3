{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff1be94bb808b1f873a15e7eef79165b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b876d3cce5259f4b6513ccfaf67a7cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/StringInputStream.java", "commitBeforeChange": "03b6e25418f4b94cbb94e191d23d8ab0ba7b8f6e", "commitAfterChange": "fc6a4383fa7cee5fe2534dc9edc9d8a4eb5c254f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int read() throws IOException", "signatureAfterChange": "     public synchronized int read() throws IOException", "diff": ["-    public int read() throws IOException {", "-        return in.read();", "+    public synchronized int read() throws IOException {", "+        if (in == null) {", "+            throw new IOException(\"Stream Closed\");", "+        }", "+", "+        byte result;", "+        if (slack != null && begin < slack.length) {", "+            result = slack[begin];", "+            if (++begin == slack.length) {", "+                slack = null;", "+            }", "+        } else {", "+            byte[] buf = new byte[1];", "+            if (read(buf, 0, 1) <= 0) {", "+                return -1;", "+            }", "+            result = buf[0];", "+        }", "+        if (result < 0) {", "+            return 256 + result;", "+        } else {", "+            return result;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8f1d3509461bd70ebdac6a34782585", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/ReaderInputStreamTest.java", "commitBeforeChange": "a2752e8df2868053c731ac4e3b7a5a8015a2d080", "commitAfterChange": "d58a8ba786e48208fce9bf80b4940e9f124fd114", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r     public void notAtestSimple16() throws Exception", "signatureAfterChange": "\r \r     public void testSimpleAbc16() throws Exception", "diff": ["-    public void notAtestSimple16() throws Exception {\r", "+    public void testSimpleAbc16() throws Exception {\r", "-        compareBytes(\"abc\", \"utf-16\");\r", "+        //compareBytes(\"abc\", \"utf-16\");\r", "+        byte[] bytes = new byte[40];\r", "+        int pos = 0;\r", "+        ReaderInputStream r = new ReaderInputStream(\r", "+            new StringReader(\"abc\"), \"utf-16\");\r", "+        for (int i = 0; true; ++i) {\r", "+            int res = r.read();\r", "+            if (res == -1) {\r", "+                break;\r", "+            }\r", "+            bytes[pos++] = (byte) res;\r", "+        }\r", "+        bytes = \"abc\".getBytes(\"utf-16\");\r", "+        //        String n = new String(bytes, 0, pos, \"utf-16\");\r", "+        String n = new String(bytes, 0, bytes.length, \"utf-16\");\r", "+        System.out.println(n);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64cadbfc915a466257e1e16ceafbacd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarInputStream.java", "commitBeforeChange": "86b5885efa2b6a264d86087adc88b59653ac3919", "commitAfterChange": "efa9cca0e47e4576cebdb04eac431845a522b1f1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void skip(int numToSkip) throws IOException", "signatureAfterChange": "     public long skip(long numToSkip) throws IOException", "diff": ["-    public void skip(int numToSkip) throws IOException {", "-", "+    public long skip(long numToSkip) throws IOException {", "-        // ", "+        //", "-", "-        for (int num = numToSkip; num > 0; ) {", "-            int numRead = this.read(skipBuf, 0, ", "-                                    (num > skipBuf.length ? skipBuf.length ", "-                                     : num));", "-", "+        long skip = numToSkip;", "+        while (skip > 0) {", "+            int realSkip = (int) (skip > skipBuf.length ? skipBuf.length : skip);", "+            int numRead = this.read(skipBuf, 0, realSkip);", "-            } ", "-", "-            num -= numRead;", "-        } ", "-    } ", "+            }", "+            skip -= numRead;", "+        }", "+        return (numToSkip - skip);", "+    }"]}]}