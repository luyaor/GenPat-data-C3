{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6a61ac4193ddb9d363e544346f6c8b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599a36400fa0a0980cb55990bb88c215", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/manifest/Manifest.java", "commitBeforeChange": "0595affdf0cc45086d9055cf1e3cfb4e50bc2d76", "commitAfterChange": "78a7fbf3d909ad842f9e6f3e193a1017eb2f9cbb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public boolean equals( Object rhs )", "signatureAfterChange": "      public boolean equals( final Object object )", "diff": ["-    public boolean equals( Object rhs )", "-        if( !( rhs instanceof Manifest ) )", "-        {", "-            return false;", "-        }", "-", "-        Manifest rhsManifest = (Manifest)rhs;", "-        if( m_manifestVersion == null )", "-        {", "-            if( rhsManifest.m_manifestVersion != null )", "-            {", "-                return false;", "-            }", "-        }", "-        else if( !m_manifestVersion.equals( rhsManifest.m_manifestVersion ) )", "-        {", "-            return false;", "-        }", "-        if( m_sections.size() != rhsManifest.m_sections.size() )", "-        {", "-            return false;", "-        }", "-", "-        if( !m_mainSection.equals( rhsManifest.m_mainSection ) )", "-        {", "-            return false;", "-        }", "-", "-        for( Enumeration e = m_sections.elements(); e.hasMoreElements(); )", "-        {", "-            Section section = (Section)e.nextElement();", "-            Section rhsSection = (Section)rhsManifest.m_sections.get( section.getName().toLowerCase() );", "-            if( !section.equals( rhsSection ) )", "-            {", "-                return false;", "-            }", "-        }", "-", "-        return true;", "+", "+    public boolean equals( final Object object )", "+    {", "+        if( !( object instanceof Manifest ) )", "+            return false;", "+        }", "+", "+        final Manifest other = (Manifest)object;", "+        if( m_manifestVersion == null && other.m_manifestVersion != null )", "+        {", "+            return false;", "+        }", "+        else if( !m_manifestVersion.equals( other.m_manifestVersion ) )", "+        {", "+            return false;", "+        }", "+        if( m_sections.size() != other.m_sections.size() )", "+        {", "+            return false;", "+        }", "+", "+        if( !m_mainSection.equals( other.m_mainSection ) )", "+        {", "+            return false;", "+        }", "+", "+        final Iterator e = m_sections.values().iterator();", "+        while( e.hasNext() )", "+        {", "+            final Section section = (Section)e.next();", "+            final String key = section.getName().toLowerCase();", "+            final Section otherSection = (Section)other.m_sections.get( key );", "+            if( !section.equals( otherSection ) )", "+            {", "+                return false;", "+            }", "+        }", "+", "+        return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b24ccc461fcf792d355a9ea4dfbd5f09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/manifest/Manifest.java", "commitBeforeChange": "0595affdf0cc45086d9055cf1e3cfb4e50bc2d76", "commitAfterChange": "78a7fbf3d909ad842f9e6f3e193a1017eb2f9cbb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public boolean equals( Object rhs )", "signatureAfterChange": "      public boolean equals( final Object object )", "diff": ["-    public boolean equals( Object rhs )", "-        if( !( rhs instanceof Manifest ) )", "-        {", "-            return false;", "-        }", "-", "-        Manifest rhsManifest = (Manifest)rhs;", "-        if( m_manifestVersion == null )", "-        {", "-            if( rhsManifest.m_manifestVersion != null )", "-            {", "-                return false;", "-            }", "-        }", "-        else if( !m_manifestVersion.equals( rhsManifest.m_manifestVersion ) )", "-        {", "-            return false;", "-        }", "-        if( m_sections.size() != rhsManifest.m_sections.size() )", "-        {", "-            return false;", "-        }", "-", "-        if( !m_mainSection.equals( rhsManifest.m_mainSection ) )", "-        {", "-            return false;", "-        }", "-", "-        for( Enumeration e = m_sections.elements(); e.hasMoreElements(); )", "-        {", "-            Section section = (Section)e.nextElement();", "-            Section rhsSection = (Section)rhsManifest.m_sections.get( section.getName().toLowerCase() );", "-            if( !section.equals( rhsSection ) )", "-            {", "-                return false;", "-            }", "-        }", "-", "-        return true;", "+", "+    public boolean equals( final Object object )", "+    {", "+        if( !( object instanceof Manifest ) )", "+            return false;", "+        }", "+", "+        final Manifest other = (Manifest)object;", "+        if( m_manifestVersion == null && other.m_manifestVersion != null )", "+        {", "+            return false;", "+        }", "+        else if( !m_manifestVersion.equals( other.m_manifestVersion ) )", "+        {", "+            return false;", "+        }", "+        if( m_sections.size() != other.m_sections.size() )", "+        {", "+            return false;", "+        }", "+", "+        if( !m_mainSection.equals( other.m_mainSection ) )", "+        {", "+            return false;", "+        }", "+", "+        final Iterator e = m_sections.values().iterator();", "+        while( e.hasNext() )", "+        {", "+            final Section section = (Section)e.next();", "+            final String key = section.getName().toLowerCase();", "+            final Section otherSection = (Section)other.m_sections.get( key );", "+            if( !section.equals( otherSection ) )", "+            {", "+                return false;", "+            }", "+        }", "+", "+        return true;", "+    }"]}]}