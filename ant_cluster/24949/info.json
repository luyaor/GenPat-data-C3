{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "708d5e00be4fed9238b5e5384334c060", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c61affe6621c47f1af560b084bd8302", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "6a2d05b7a8541f09b4ac41d92d54ce3cc80e2036", "commitAfterChange": "55811ba73b5aed3169e1d003a069a4f83f161d1d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "diff": ["-        // we cannot be using Java 1.0 when forking, so we only have to", "-        // distinguish between Java 1.1, and Java 1.2 and higher, as Java 1.1", "-        // has its own parameter format", "-        boolean usingJava1_1 ", "-            = Project.getJavaVersion().equals(Project.JAVA_1_1);", "-        String memoryParameterPrefix = usingJava1_1 ? \"-J-\" : \"-J-X\";", "+        String memoryParameterPrefix = assumeJava11() ? \"-J-\" : \"-J-X\";", "-        if (Project.getJavaVersion().startsWith(\"1.1\")) {", "+        if (assumeJava11()) {", "-            if (useDebugLevel", "-                && Project.getJavaVersion() != Project.JAVA_1_0", "-                && Project.getJavaVersion() != Project.JAVA_1_1) {", "-", "+            if (useDebugLevel && !assumeJava11()) {", "-        } else if (Project.getJavaVersion() != Project.JAVA_1_0 &&", "-                   Project.getJavaVersion() != Project.JAVA_1_1) {", "+        } else if (!assumeJava11()) {", "-            if (Project.getJavaVersion().startsWith(\"1.1\")) {", "+            if (assumeJava11()) {", "-            } else if (Project.getJavaVersion().startsWith(\"1.2\")) {", "+            } else if (assumeJava12()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba68f32352c91f1a63aa54ffbb56011", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/EmailTask.java", "commitBeforeChange": "e24825b3b81014e025f1181702cff049a41adc65", "commitAfterChange": "3ed946bae41d5528a2b4762c20efb8dc74b71519", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-                    Throwable t = e.getCause() == null ? e : e.getCause();", "-                    log(\"Failed to initialise MIME mail: \" + t.getMessage(),", "-                            Project.MSG_WARN);", "+                    logBuildException(\"Failed to initialise MIME mail: \", e);", "-                    Throwable t = e.getCause() == null ? e : e.getCause();", "-                    log(\"Failed to initialise UU mail: \" + t.getMessage(),", "-                            Project.MSG_WARN);", "+                    logBuildException(\"Failed to initialise UU mail: \", e);", "-            Throwable t = e.getCause() == null ? e : e.getCause();", "-            log(\"Failed to send email: \" + t.getMessage(), Project.MSG_WARN);", "+            logBuildException(\"Failed to send email: \", e);"]}]}