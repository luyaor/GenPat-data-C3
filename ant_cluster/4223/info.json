{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c1104568b2a743a0a6bb7bd751d1a23", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c637db223abb76cca2376d558ec84694", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "1a02a5f570c6b91a6efc7233b47ad45feeee8b75", "commitAfterChange": "e0bed0aa143b567e005e51e811e5622e5103eacd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final TaskContext context,                                final PropertyConfigurer childConfigurer )         throws Exception", "signatureAfterChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final TaskContext context,                                final PropertyConfigurer childConfigurer )         throws Exception", "diff": ["-        Object child = childConfigurer.createValue( state );", "-        if( null == child )", "+        Object child = null;", "+        if( childConfigurer == state.getConfigurer().getTypedProperty() )", "-            if( childConfigurer == state.getConfigurer().getTypedProperty() )", "-            {", "-                // Typed property", "-                child = createTypedObject( name, type );", "-            }", "-            else", "-            {", "-                // Named property", "-                child = createNamedObject( type );", "-            }", "+            // Typed property", "+            child = createTypedObject( name, type );", "+        }", "+        else", "+        {", "+            // Named property", "+            child = createNamedObject( type );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d15b153cb3c3a0bbcc6089e5c01661ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final Context context,                                final PropertyConfigurer childConfigurer )         throws Exception", "signatureAfterChange": "     private Object setupChild( final ConfigurationState state,                                final Configuration element,                                final Context context,                                final PropertyConfigurer childConfigurer )         throws Exception", "diff": ["-        Object child = childConfigurer.createValue( state );", "-        if( null == child && Configuration.class == type )", "+        if( Configuration.class == type )", "-        else if( null == child )", "+", "+        // Create an instance", "+        Object child = childConfigurer.createValue( state );", "+        if( null == child )", "-            // Create an instance", "-            if( type.isInterface() )", "+            if( childConfigurer == state.getConfigurer().getTypedProperty() )", "-                child = createdTypedObject( name, type );", "+                // Typed property", "+                child = createTypedObject( name, type );", "-                child = createObject( type );", "+                // Named property", "+                child = createNamedObject( type );", "+        // Configure the object", "+", "+        // Convert the object, if necessary", "+        if( ! type.isInstance( child ) )", "+        {", "+            child = m_converter.convert( type, child, context );", "+        }", "+"]}]}