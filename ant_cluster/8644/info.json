{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "368e129c0591bef140189491572c8918", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8d8b58384282147239bb3dec47760b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "commitAfterChange": "86334974455a492f4b76331b6002a45289874ddf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void startElement(String uri, String name, String qname, AttributeList attrs)             throws SAXParseException", "signatureAfterChange": "         public AntHandler onStartChild(String uri, String name, String qname,                                        Attributes attrs,                                        AntXmlContext context)             throws SAXParseException", "diff": ["-        public void startElement(String uri, String name, String qname, AttributeList attrs)", "+        public AntHandler onStartChild(String uri, String name, String qname,", "+                                       Attributes attrs,", "+                                       AntXmlContext context)", "-            if (name.equals(\"taskdef\")) {", "-                handleTaskdef(name, attrs);", "-            } else if (name.equals(\"typedef\")) {", "-                handleTypedef(name, attrs);", "-            } else if (name.equals(\"property\")) {", "-                handleProperty(name, attrs);", "-            } else if (name.equals(\"target\")) {", "-                handleTarget(name, attrs);", "-            } else if (project.getDataTypeDefinitions().get(name) != null) {", "-                handleDataType(name, attrs);", "+            if (qname.equals(\"taskdef\")) {", "+                return new TaskHandler(null, null, null);", "+            } else if (qname.equals(\"typedef\")) {", "+                return new TaskHandler(null, null, null);", "+            } else if (qname.equals(\"property\")) {", "+                return new TaskHandler(null, null, null);", "+            } else if (qname.equals(\"target\")) {", "+                return new TargetHandler();", "+            } else if (context.project.getDataTypeDefinitions().get(qname) != null) {", "+                return new DataTypeHandler(null);", "-                throw new SAXParseException(\"Unexpected element \\\"\" + name + \"\\\"\", locator);", "+                throw new SAXParseException(\"Unexpected element \\\"\" + qname + \"\\\" \" + name, context.locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f06cf7e43fc1e0dadae241182acceb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "commitAfterChange": "86334974455a492f4b76331b6002a45289874ddf", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public void init(String propType, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String propType, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "diff": ["-        public void init(String propType, AttributeList attrs) throws SAXParseException {", "+        public void onStartElement(String uri, String propType, String qname,", "+                                   Attributes attrs,", "+                                   AntXmlContext context)", "+            throws SAXParseException", "+        {", "-                String elementName = propType.toLowerCase(Locale.US);", "+                String elementName = qname.toLowerCase(Locale.US);", "-                    uc.setProject(project);", "+                    uc.setProject(context.project);", "-                    child = ih.createElement(project, parent, elementName);", "+                    child = ih.createElement(context.project, parent, elementName);", "-                configureId(child, attrs);", "+                context.configureId(child, attrs);", "-                    childWrapper = new RuntimeConfigurable(child, propType);", "-                    childWrapper.setAttributes(attrs);", "+                    childWrapper = new RuntimeConfigurable(child, qname);", "+                    childWrapper.setAttributes(sax1Attributes(attrs));", "-                    configure(child, attrs, project);", "-                    ih.storeElement(project, parent, child, elementName);", "+                    ProjectHelper.configure(child, sax1Attributes(attrs), context.project);", "+                    ih.storeElement(context.project, parent, child, elementName);", "-                throw new SAXParseException(exc.getMessage(), locator, exc);", "+                throw new SAXParseException(exc.getMessage(), context.locator, exc);"]}]}