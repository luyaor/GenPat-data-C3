{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46ed2d963278864b5b147ff27487d70a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d960a36711b87554e78206a0f4d570b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/dotnet/CSharp.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        final Commandline cmd = exe.getCommandline();", "-        cmd.setExecutable( EXE_NAME );", "+        exe.setExecutable( EXE_NAME );", "-        addArgument( cmd, \"/nologo\" );", "-        addArgument( cmd, getAdditionalModulesParameter() );", "-        addArgument( cmd, getDefinitionsParameter() );", "-        addArgument( cmd, getDebugParameter() );", "-        addArgument( cmd, getDocFileParameter() );", "-        addArgument( cmd, getIncrementalParameter() );", "-        addArgument( cmd, getMainClassParameter() );", "-        addArgument( cmd, getOptimizeParameter() );", "-        addArgument( cmd, getReferencesParameter() );", "-        addArgument( cmd, getTargetTypeParameter() );", "-        addArgument( cmd, getUnsafeParameter() );", "-        addArgument( cmd, getWarnLevelParameter() );", "-        addArgument( cmd, getWin32IconParameter() );", "-        addArgument( cmd, getOutputFileParameter() );", "-        addArgument( cmd, getIncludeDefaultReferencesParameter() );", "-        addArgument( cmd, getDefaultReferenceParameter() );", "-        addArgument( cmd, getWin32ResParameter() );", "-        addArgument( cmd, getUtf8OutpuParameter() );", "-        addArgument( cmd, getFullPathsParameter() );", "-        addArgument( cmd, getExtraOptionsParameter() );", "+        addArgument( exe, \"/nologo\" );", "+        addArgument( exe, getAdditionalModulesParameter() );", "+        addArgument( exe, getDefinitionsParameter() );", "+        addArgument( exe, getDebugParameter() );", "+        addArgument( exe, getDocFileParameter() );", "+        addArgument( exe, getIncrementalParameter() );", "+        addArgument( exe, getMainClassParameter() );", "+        addArgument( exe, getOptimizeParameter() );", "+        addArgument( exe, getReferencesParameter() );", "+        addArgument( exe, getTargetTypeParameter() );", "+        addArgument( exe, getUnsafeParameter() );", "+        addArgument( exe, getWarnLevelParameter() );", "+        addArgument( exe, getWin32IconParameter() );", "+        addArgument( exe, getOutputFileParameter() );", "+        addArgument( exe, getIncludeDefaultReferencesParameter() );", "+        addArgument( exe, getDefaultReferenceParameter() );", "+        addArgument( exe, getWin32ResParameter() );", "+        addArgument( exe, getUtf8OutpuParameter() );", "+        addArgument( exe, getFullPathsParameter() );", "+        addArgument( exe, getExtraOptionsParameter() );", "-            addArgument( cmd, targetFile );", "+            addArgument( exe, targetFile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b89ce83b9958146ab29166de656467", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprivate void initConnections() throws Exception", "signatureAfterChange": "     private void initConnections() throws Exception", "diff": ["-\t */", "-\tprivate void initConnections() throws Exception {", "-\t\tthis.addWindowListener(iEventHandler);", "-\t\tgetBrowseButton().addActionListener(iEventHandler);", "-\t\tgetCloseButton().addActionListener(iEventHandler);", "-\t\tgetBuildButton().addActionListener(iEventHandler);", "-\t\tgetSaveMenuItem().addActionListener(iEventHandler);", "-\t\tgetAboutOkButton().addActionListener(iEventHandler);", "-\t\tgetAboutMenuItem().addActionListener(iEventHandler);", "-\t\tgetMessageOkButton().addActionListener(iEventHandler);", "-\t\tgetMessageClearLogButton().addActionListener(iEventHandler);", "-\t\tgetMessageOkButton().addActionListener(iEventHandler);", "-\t\tgetShowLogMenuItem().addActionListener(iEventHandler);", "-\t\tgetAboutDialog().addWindowListener(iEventHandler);", "-\t\tgetMessageFrame().addWindowListener(iEventHandler);", "-\t\tgetReloadButton().addActionListener(iEventHandler);", "-\t\tgetTargetList().addItemListener(iEventHandler);", "-\t\tgetMessageOutputLevelChoice().addItemListener(iEventHandler);", "-\t\tgetBuildFileTextField().addTextListener(iEventHandler);", "-\t\tconnectProjectNameToLabel();", "-\t\tconnectBuildFileNameToTextField();", "-\t}", "+     */", "+    private void initConnections() throws Exception {", "+        this.addWindowListener(iEventHandler);", "+        getBrowseButton().addActionListener(iEventHandler);", "+        getCloseButton().addActionListener(iEventHandler);", "+        getBuildButton().addActionListener(iEventHandler);", "+        getStopButton().addActionListener(iEventHandler);", "+        getSaveMenuItem().addActionListener(iEventHandler);", "+        getAboutOkButton().addActionListener(iEventHandler);", "+        getAboutMenuItem().addActionListener(iEventHandler);", "+        getMessageOkButton().addActionListener(iEventHandler);", "+        getMessageClearLogButton().addActionListener(iEventHandler);", "+        getMessageOkButton().addActionListener(iEventHandler);", "+        getShowLogMenuItem().addActionListener(iEventHandler);", "+        getAboutDialog().addWindowListener(iEventHandler);", "+        getMessageFrame().addWindowListener(iEventHandler);", "+        getReloadButton().addActionListener(iEventHandler);", "+        getTargetList().addItemListener(iEventHandler);", "+        getMessageOutputLevelChoice().addItemListener(iEventHandler);", "+        getBuildFileTextField().addTextListener(iEventHandler);", "+        connectProjectNameToLabel();", "+        connectBuildFileNameToTextField();", "+    }"]}]}