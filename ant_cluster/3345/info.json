{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c913174cbc89a6a1955bb8cd5c6839ea", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66d298877031bca6ae8de6ba0df22874", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a98a49253bd792fec570f11f310d61dc9370f67a", "commitAfterChange": "5d1320e99cabb7dad880799accea519ce575d492", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected boolean couldHoldIncluded(String name)", "signatureAfterChange": "     protected boolean couldHoldIncluded(String name)", "diff": ["-        final PathPattern tokenizedName = new PathPattern(name);", "+        final TokenizedPath tokenizedName = new TokenizedPath(name);", "-            PathPattern tokenizedInclude = new PathPattern(includes[i]);", "-            if (tokenizedName.matchPatternStartOf(tokenizedInclude,", "-                                                  isCaseSensitive())", "+            TokenizedPattern tokenizedInclude =", "+                new TokenizedPattern(includes[i]);", "+            if (tokenizedInclude.matchStartOf(tokenizedName, isCaseSensitive())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b220678a6318333e71db67abebcdbd2a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "e362b3b1fc28b4d9b2965708b5d5e457f21b0c9f", "commitAfterChange": "c13dba6d524fe74b1518e3442429ba6e97592edd", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected boolean couldHoldIncluded(String name)", "signatureAfterChange": "     protected boolean couldHoldIncluded(String name)", "diff": ["+        final PathPattern tokenizedName = new PathPattern(name);", "-            if (matchPatternStart(includes[i], name, isCaseSensitive())", "+            PathPattern tokenizedInclude = new PathPattern(includes[i]);", "+            if (tokenizedName.matchPatternStartOf(tokenizedInclude,", "+                                                  isCaseSensitive())", "-                && isDeeper(includes[i], name)) {", "+                && isDeeper(tokenizedInclude, tokenizedName)) {"]}]}