{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d0af803b9af0e358d50bdf54945151a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92166d6f5680c68f558be221afe54c98", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "f2a501a5cc401b98c0f1665b3e525c6384be61ae", "commitAfterChange": "bd0662b8fa0d69a8129ea1089518b146e77c6abd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public File resolveFile(File file, String filename)", "signatureAfterChange": "     public File resolveFile(File file, String filename)", "diff": ["-        if (filename.startsWith(File.separator) ||", "-", "-            (filename.length() >= 2 &&", "-             Character.isLetter(filename.charAt(0)) &&", "-             filename.charAt(1) == ':')", "-", "-            ) {", "-            return normalize(filename);", "+        if (!onNetWare) {", "+            if (filename.startsWith(File.separator) ||", "+                ", "+                (filename.length() >= 2 &&", "+                 Character.isLetter(filename.charAt(0)) &&", "+                 filename.charAt(1) == ':')", "+                ", "+                ) {", "+                return normalize(filename);", "+            }", "+        } else {", "+            // the assumption that the : will appear as the second character in", "+            // the path name breaks down when NetWare is a supported platform.", "+            // Netware volumes are of the pattern: \"data:\\\"", "+            int colon = filename.indexOf(\":\");", "+            if (filename.startsWith(File.separator) ||", "+                (colon > -1)", "+                ) {", "+                return normalize(filename);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3f521f7859b8d23f2cad866b0f40f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/util/FileUtils.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public File resolveFile(File file, String filename)          throws GeneralAntException", "signatureAfterChange": "     public File resolveFile(File file, String filename)          throws ExecutionException", "diff": ["-         throws GeneralAntException {", "-        filename = filename.replace('/', File.separatorChar)", "+         throws ExecutionException {", "+        String platformFilename = filename.replace('/', File.separatorChar)", "-        if (filename.startsWith(File.separator) ||", "-            (filename.length() >= 2 &&", "-            Character.isLetter(filename.charAt(0)) &&", "-            filename.charAt(1) == ':')", "-            ) {", "-            return normalize(filename);", "+        if (platformFilename.startsWith(File.separator) ||", "+            (platformFilename.length() >= 2 &&", "+            Character.isLetter(platformFilename.charAt(0)) &&", "+            platformFilename.charAt(1) == ':')) {", "+            return normalize(platformFilename);", "-            return new File(filename);", "+            return new File(platformFilename);", "-        StringTokenizer tok = new StringTokenizer(filename, File.separator);", "+        StringTokenizer tok ", "+            = new StringTokenizer(platformFilename, File.separator);", "-                    throw new GeneralAntException(msg);", "+                    throw new ExecutionException(msg);"]}]}