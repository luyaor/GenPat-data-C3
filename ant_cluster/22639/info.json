{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3719fc1bfe2c6ccbf5f8c467e88002b4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008a5d3f97881086b8bef8d4e56b7fd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "5f35e5e952c7732af5b98e484a87b8a90d8f2fa4", "commitAfterChange": "f09afe103c9bd8540483fbdafab92df1cdf049e2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setProperty( final String name, final Object value, final ScopeEnum scope )         throws TaskException", "signatureAfterChange": "     public void setProperty( final String name, final Object value, final ScopeEnum scope )         throws TaskException", "diff": ["-                throw new TaskException( \"Can't set a property with parent scope when context \" +", "-                                         \" has no parent\" );", "+                final String message = REZ.getString( \"no-parent.error\" );", "+                throw new TaskException( message );", "-            throw new IllegalStateException( \"Unknown property scope! (\" + scope + \")\" );", "+            final String message = REZ.getString( \"bad-scope.error\", scope );", "+            throw new IllegalStateException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "268211dc41e999e12647fe2e12195f8b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/Facility.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "signatureAfterChange": "      public void configure( final Configuration configuration )         throws ConfigurationException", "diff": ["-        if( 1 == children.length ) ", "+        if( 1 == children.length )", "-                throw new ConfigurationException( \"Failed to create aspect handler of type '\" + ", "-                                                  children[ 0 ].getName() + \"'\", e );", "+                final String message = ", "+                    REZ.getString( \"facility.no-create.error\", children[ 0 ].getName() );", "+                throw new ConfigurationException( message, e );", "-            ", "+", "-            throw new ConfigurationException( \"Expected one sub-element to \" + ", "-                                              \"configure facility\" );", "+            final String message = REZ.getString( \"facility.multi-element.error\" );", "+            throw new ConfigurationException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a8ac4df2d1243c00f307974c82499f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractContainerTask.java", "commitBeforeChange": "b30c144309f56e380bbc34897b8ab7ff29c40f17", "commitAfterChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected final Object resolve( final String value )         throws ConfigurationException", "signatureAfterChange": "     protected final Object resolve( final String value )         throws ConfigurationException", "diff": ["-            final Object object = ", "+            final Object object =", "-                throw new ConfigurationException( \"Value (\" + value +", "-                                                  \") resolved to null\" );", "+                final String message = REZ.getString( \"container.null-value.error\", value );", "+                throw new ConfigurationException( message );", "-            throw new ConfigurationException( \"Error resolving value: \" + value, pe );", "+            final String message = REZ.getString( \"container.bad-resolve.error\", value );", "+            throw new ConfigurationException( message, pe );"]}]}