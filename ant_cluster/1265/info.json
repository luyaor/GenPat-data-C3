{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd0b8ccab3dde4dc39037cf39223d5cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "230684f77a31df92a55bb3232064d7c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "d5ed2401cf27495042f365a3d6a41270c4cb937e", "commitAfterChange": "1d677212cc1f9d5b494e87939453a69e300a9056", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String[] getEnvironment()         throws TaskException", "signatureAfterChange": "     public String[] getEnvironment()         throws TaskException", "diff": ["-            return m_environment;", "-        return patchEnvironment();", "+        {", "+            return Environment.toNativeFormat( m_environment );", "+        }", "+        else", "+        {", "+            try", "+            {", "+                Environment.addNativeEnvironment( m_environment );", "+                return Environment.toNativeFormat( m_environment );", "+            }", "+            catch( final IOException ioe )", "+            {", "+                throw new TaskException( ioe.getMessage(), ioe );", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a1704f9a1fd1ce7bbb38bcf9857cf0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/exec/Execute.java", "commitBeforeChange": "d5ed2401cf27495042f365a3d6a41270c4cb937e", "commitAfterChange": "1d677212cc1f9d5b494e87939453a69e300a9056", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String[] getEnvironment()         throws TaskException", "signatureAfterChange": "     public String[] getEnvironment()         throws TaskException", "diff": ["-            return m_environment;", "-        return patchEnvironment();", "+        {", "+            return Environment.toNativeFormat( m_environment );", "+        }", "+        else", "+        {", "+            try", "+            {", "+                Environment.addNativeEnvironment( m_environment );", "+                return Environment.toNativeFormat( m_environment );", "+            }", "+            catch( final IOException ioe )", "+            {", "+                throw new TaskException( ioe.getMessage(), ioe );", "+            }", "+        }"]}]}