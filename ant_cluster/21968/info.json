{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b5433980d9338dbe6960e297f205bef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e436e95a0ddd74f98379edf099a435", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "69b83f32135e786ce5ebaf4d275e2fd7cde8d154", "commitAfterChange": "d463563bef58bd94efa53ad1a9aa7aa81f89ae7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute(Project project) throws BuildException", "signatureAfterChange": "      public void execute(Project project) throws BuildException", "diff": ["+", "-        final Object[] argument = { javaCommand.getArguments() };", "-            final Method main = target.getMethod(\"main\", param);", "-            main.invoke(null, argument);", "+            main = target.getMethod(\"main\", param);", "+", "+            if (timeout == null) {", "+                run();", "+            } else {", "+                thread = new Thread(this, \"ExecuteJava\");", "+                Watchdog w = new Watchdog(timeout.longValue());", "+                w.addTimeoutObserver(this);", "+                synchronized (this) {", "+                    thread.start();", "+                    w.start();", "+                    try {", "+                        wait();", "+                    } catch (InterruptedException e) {}", "+                    if (timedOut) {", "+                        project.log(\"Timeout: killed the sub-process\",", "+                                    Project.MSG_WARN); ", "+                    } else {", "+                        thread = null;", "+                        w.stop();", "+                    }", "+                }", "+            }", "+", "+            if (caught != null) {", "+                throw caught;", "+            }", "+", "-        } catch (InvocationTargetException e) {", "-            Throwable t = e.getTargetException();", "-            if (!(t instanceof SecurityException)) {", "-                throw new BuildException(t);", "-            }", "-            else {", "-                throw (SecurityException)t;", "-            }", "-        } catch (Exception e) {", "+        } catch (SecurityException e) {", "+            throw e;", "+        } catch (Throwable e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848b1a2cc9ffaee7836eda79044a005f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "065256f579a3681862b7dc61cce5a6fb45a0244e", "commitAfterChange": "671dff9a1cfe74859b9ec4356974b22840953989", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-                    BufferedReader br = new BufferedReader(r);", "-                    BufferedWriter bw = new BufferedWriter(w);", "-", "+                        r = new BufferedReader(r);", "+                        w = new BufferedWriter(w);", "+", "-                            c = br.read();", "+                            c = r.read();", "-                                    bw.write(res);", "-                                    bw.write('\\r');", "+                                    w.write(res);", "+                                    w.write('\\r');", "-                                bw.write(res);", "+                                w.write(res);", "-                                    bw.write('\\r');", "+                                    w.write('\\r');", "-                                bw.write('\\n');", "+                                w.write('\\n');", "-                                    bw.write(res);", "+                                    w.write(res);", "-                                        bw.write('\\r');", "+                                        w.write('\\r');", "-                        String buf = FileUtils.safeReadFully(br);", "-", "-                        String res = doReplace(regex, subs, buf, options);", "-", "-                        if (!res.equals(buf)) {", "-                            changes = true;", "-                        }", "-", "-                        bw.write(res);", "+                        changes = multilineReplace(r, w, options);", "-                    bw.flush();", "+                    r.close();", "+                    w.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9322bd3f6d1fe0948dc60c33dcc08ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "470a4695e947c43343806a5a8ec79f1e4b4a9321", "commitAfterChange": "29c20176679062f1345b7edc0aa3fe1b5810c858", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void extractFile(Touch touch, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, long entrySize,                                Date entryDate, boolean isDirectory,                                String modeStr, String userGroup)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, long entrySize,                                Date entryDate, boolean isDirectory,                                String modeStr, String userGroup)                                throws IOException", "diff": ["-    protected void extractFile(Touch touch, File srcF, File dir,", "+    protected void extractFile(FileUtils fileUtils, File srcF, File dir,", "-            File f = new File(dir, project.translatePath(entryName));", "+            File f = fileUtils.resolveFile(dir, entryName);", "-                File dirF=new File(f.getParent());", "+                File dirF= fileUtils.getParentFile(f);", "-                    FileOutputStream fos = new FileOutputStream(f);", "-", "-                    while ((length =", "+                    FileOutputStream fos = null;", "+                    try {", "+                        fos = new FileOutputStream(f);", "+                        ", "+                        while ((length =", "-                        fos.write(buffer, 0, length);", "+                            fos.write(buffer, 0, length);", "+                        }", "+                        ", "+                        fos.close();", "+                        fos = null;", "+                    } finally {", "+                        if (fos != null) {", "+                            try {", "+                                fos.close();", "+                            } catch (IOException e) {}", "+                        }", "-", "-                    fos.close();", "-", "-                if (project.getJavaVersion() != Project.JAVA_1_1) {", "-                    touch.setFile(f);", "-                    touch.setMillis(entryDate.getTime());", "-                    touch.touch();", "-                }", "-", "+                    ", "+                fileUtils.setFileLastModified(f, entryDate.getTime());"]}]}