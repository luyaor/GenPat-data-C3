{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41db82b17f5ca25b7b6f98066c4f0fa8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ca82d4b820304a44ba4d2849248fa5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/PlainJUnitResultFormatter.java", "commitBeforeChange": "c098b9c80d5ef451dfd683510c9f6c28489a8685", "commitAfterChange": "313479bb3569061c2598d90274930c4957d36364", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["+        try {", "+            write(sb.toString());", "-        // append the err and output streams to the log", "+        // write the err and output streams to the log", "-            sb.append(\"------------- Standard Output ---------------\")", "-                .append(StringUtils.LINE_SEP)", "-                .append(systemOutput)", "-                .append(\"------------- ---------------- ---------------\")", "-                .append(StringUtils.LINE_SEP);", "+                write(\"------------- Standard Output ---------------\");", "+                write(StringUtils.LINE_SEP);", "+                write(systemOutput);", "+                write(\"------------- ---------------- ---------------\");", "+                write(StringUtils.LINE_SEP);", "-            sb.append(\"------------- Standard Error -----------------\")", "-                .append(StringUtils.LINE_SEP)", "-                .append(systemError)", "-                .append(\"------------- ---------------- ---------------\")", "-                .append(StringUtils.LINE_SEP);", "+                write(\"------------- Standard Error -----------------\");", "+                write(StringUtils.LINE_SEP);", "+                write(systemError);", "+                write(\"------------- ---------------- ---------------\");", "+                write(StringUtils.LINE_SEP);", "-        sb.append(StringUtils.LINE_SEP);", "-", "+            write(StringUtils.LINE_SEP);", "+            if (out != null) {", "+                try {", "+                    wri.flush();", "+                    write(inner.toString());", "+                } catch (IOException ioex) {", "+                    throw new BuildException(\"Unable to write output\", ioex);", "+                }", "+            }", "+        } finally {", "-                out.write(sb.toString().getBytes());", "-                out.write(inner.toString().getBytes());", "-                out.flush();", "-                throw new BuildException(\"Unable to write output\", ioex);", "+                    throw new BuildException(\"Unable to flush output\", ioex);", "+                    wri = null;", "+                    out = null;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1aa7fe216b3d26211cd2ae29b54793", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "0ac8284adb8158c1dd659e9e6a4c65a2054fdd26", "commitAfterChange": "33db84490cd8526fec0508e9b8c53a2f4ae8a666", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["-        sb.append(m_numberFormat.format(suite.getRunTime()/1000.0));", "+        sb.append(numberFormat.format(suite.getRunTime() / 1000.0));", "-            sb.append(\"------------- Standard Output ---------------\" )", "-                .append(newLine)", "-                .append(systemOutput)", "-                .append(\"------------- ---------------- ---------------\" )", "-                .append(newLine);", "-        }", "-        ", "-        if (systemError != null && systemError.length() > 0) {", "-            sb.append(\"------------- Standard Error -----------------\" )", "-                .append(newLine)", "-                .append(systemError)", "-                .append(\"------------- ---------------- ---------------\" )", "-                .append(newLine);", "+            sb.append(\"------------- Standard Output ---------------\")", "+                    .append(newLine)", "+                    .append(systemOutput)", "+                    .append(\"------------- ---------------- ---------------\")", "+                    .append(newLine);", "-        if ( output() != null) {", "+        if (systemError != null && systemError.length() > 0) {", "+            sb.append(\"------------- Standard Error -----------------\")", "+                    .append(newLine)", "+                    .append(systemError)", "+                    .append(\"------------- ---------------- ---------------\")", "+                    .append(newLine);", "+        }", "+", "+        if (output != null) {", "-                output().write(sb.toString());", "-                resultWriter().close();", "-                output().write(m_results.toString());", "-                output().flush();", "+                output.write(sb.toString());", "+                resultWriter.close();", "+                output.write(results.toString());", "+                output.flush();", "-                if (m_out != (Object)System.out &&", "-                    m_out != (Object)System.err) {", "+                if (out != System.out &&", "+                        out != System.err) {", "-                        m_out.close();", "-                    } catch (java.io.IOException e) {}", "+                        out.close();", "+                    } catch (IOException e) {", "+                    }"]}]}