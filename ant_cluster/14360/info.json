{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a367d00e9f9e1317315061369369a55", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9764c1e50bb261ac098b0d63ae0ea75", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "12df7ec426adb3e47cfb0d268d9b646769e38ac7", "commitAfterChange": "152be14c152edab99f90e8c71f589a6bf8087bbe", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)         throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)         throws IOException, BuildException", "diff": ["-        if ((ds.getBasedir() == null) && ((action == SEND_FILES) || (action == GET_FILES))) {", "-            throw new BuildException( \"the dir attribute must be set for send and get actions\" );", "+        if ((ds.getBasedir() == null) ", "+            && ((action == SEND_FILES) || (action == GET_FILES))) {", "+            throw new BuildException(\"the dir attribute must be set for send \"", "+                                     + \"and get actions\" );", "-        if (action == LIST_FILES) {", "-            File pd = new File(listing.getParent());", "-            if (!pd.exists()) {", "-                pd.mkdirs();", "-            }", "-            bw = new BufferedWriter(new FileWriter(listing));", "-        }", "-", "-        for (int i = 0; i < dsfiles.length; i++)", "-        {", "-            switch (action) {", "-            case SEND_FILES: {", "-                sendFile(ftp, dir, dsfiles[i]);", "-                break;", "+        try {", "+            if (action == LIST_FILES) {", "+                File pd = fileUtils.getParentFile(listing);", "+                if (!pd.exists()) {", "+                    pd.mkdirs();", "+                }", "+                bw = new BufferedWriter(new FileWriter(listing));", "-            case GET_FILES: {", "-                getFile(ftp, dir, dsfiles[i]);", "-                break;", "-            }", "+            for (int i = 0; i < dsfiles.length; i++) {", "+                switch (action) {", "+                case SEND_FILES: {", "+                    sendFile(ftp, dir, dsfiles[i]);", "+                    break;", "+                }", "-            case DEL_FILES: {", "-                delFile(ftp, dsfiles[i]);", "-                break;", "-            }", "+                case GET_FILES: {", "+                    getFile(ftp, dir, dsfiles[i]);", "+                    break;", "+                }", "-            case LIST_FILES: {", "-                listFile(ftp, bw, dsfiles[i]);", "-                break;", "-            }", "+                case DEL_FILES: {", "+                    delFile(ftp, dsfiles[i]);", "+                    break;", "+                }", "+                    ", "+                case LIST_FILES: {", "+                    listFile(ftp, bw, dsfiles[i]);", "+                    break;", "+                }", "+                    ", "+                case CHMOD: {", "+                    doSiteCommand(ftp, \"chmod \" + chmod + \" \" + dsfiles[i]);", "+                    transferred++;", "+                    break;", "+                }", "-            case CHMOD: {", "-                 doSiteCommand(ftp,\"chmod \" + chmod + \" \" + dsfiles[i]);", "-                 transferred++;", "-                 break;", "+                default: {", "+                    throw new BuildException(\"unknown ftp action \" + action );", "+                }", "+                }", "-", "-            default: {", "-                throw new BuildException(\"unknown ftp action \" + action );", "+        } finally {", "+            if (bw != null) {", "+                bw.close();", "-            }", "-        }", "-", "-        if (action == LIST_FILES) {", "-            bw.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec75752b17194f0631fed1b0a6282146", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/WaitFor.java", "commitBeforeChange": "92e78a439b4dcc2db25fdd9b7df1674b4d5a1726", "commitAfterChange": "dac8f932ac91bd42f6fec9d8e1a324897312ab42", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                                     + \"condition into <waitfor>\");", "+                                     + \"condition into \"", "+                                     + getTaskName());", "-                                     + \"<waitfor>\");", "+                                     + getTaskName());", "+                    processSuccess();", "-            if (timeoutProperty != null) {", "-                getProject().setNewProperty(timeoutProperty, \"true\");", "-            }", "+            processTimeout();"]}]}