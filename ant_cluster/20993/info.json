{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aab78c09036f07e6418f1b9ce98bb719", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87517863ece2cfd05ac6e016c1cf6e47", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/input/src/main/org/apache/tools/ant/input/PropertyFileInputHandler.java", "commitBeforeChange": "6b61cb14f38a03ce9d2d7c0408ac47e35a984387", "commitAfterChange": "fdcbd434d8c5cb90bd0c7a98acd9a3f26a0e20fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void readProps() throws BuildException", "signatureAfterChange": "      private synchronized void readProps() throws BuildException", "diff": ["-    private void readProps() throws BuildException {", "-        String propsFile = System.getProperty(\"input.properties\");", "-        if (propsFile == null) {", "-            throw new BuildException(\"System property input.properties for PropertyFileInputHandler not set\");", "-        }", "-        ", "-        props = new Properties();", "-        ", "-        try {", "-            props.load(new FileInputStream(propsFile));", "-        } catch (IOException e) {", "-            throw new BuildException(\"Couldn't load \"+propsFile, e);", "+    private synchronized void readProps() throws BuildException {", "+        if (props == null) {", "+            String propsFile = System.getProperty(FILE_NAME_KEY);", "+            if (propsFile == null) {", "+                throw new BuildException(\"System property \"", "+                                         + FILE_NAME_KEY", "+                                         + \" for PropertyFileInputHandler not set\");", "+            }", "+            ", "+            props = new Properties();", "+            ", "+            try {", "+                props.load(new FileInputStream(propsFile));", "+            } catch (IOException e) {", "+                throw new BuildException(\"Couldn't load \"+propsFile, e);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef4612472aee392ba35e589346700cec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/starteam/TreeBasedTask.java", "commitBeforeChange": "837f7ef785e24137608ba41f850d605b23bccff4", "commitAfterChange": "23e61358c8ed2aa3fe63c1f67082150047f1df9e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public final void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "-            testPreconditions();", "-", "-            Folder starteamrootfolder =", "-            if (null == starteamrootfolder) {", "-                throw new BuildException(", "-                        \"Unable to find root folder in repository.\");", "-            }", "+", "+    public final void execute() throws BuildException {", "+        try {", "+            testPreconditions();", "+", "+            Folder starteamrootfolder = configureRootStarteamFolder();", "-            java.io.File localrootfolder;", "-            if (null == this.rootLocalFolder) {", "-                // use Star Team's default", "-                localrootfolder =", "-                        new java.io.File(starteamrootfolder.getPath());", "-            } else {", "-                // force StarTeam to use our folder", "-                localrootfolder = new java.io.File(getRootLocalFolder());", "-                log(\"overriding local folder to \" + localrootfolder);", "-            }", "+            java.io.File localrootfolder = ", "+                getLocalRootMapping(starteamrootfolder);", "+            // Tell user what he is doing", "+            logOperationDescription(starteamrootfolder, localrootfolder);", "+            ", "+", "+    }"]}]}