{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcf12aeba3645bee66c069eaa657094e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fdb8f8b6ede3e4a078b45291cc26ad6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java", "commitBeforeChange": "8785091ee1c92874c44324f0429765539987b048", "commitAfterChange": "c9928eaad1f371f18ecae2b487a5328b315b5790", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+     */", "+    public void execute() throws BuildException", "+    {", "+        // Check all of the properties that are required.", "+        if ( getServerName() == null )", "+        {", "+            project.log(\"ServerName must not be null.\");", "+            return;", "+        }", "+        if ( getServerPort() == null )", "+        {", "+            project.log(\"ServerPort must not be null.\");", "+            return;", "+        }", "+        if ( getProjectName() == null )", "+        {", "+            project.log(\"ProjectName must not be null.\");", "+            return;", "+        }", "+        if ( getViewName() == null )", "+        {", "+            project.log(\"ViewName must not be null.\");", "+            return;", "+        }", "+        if ( getUsername() == null )", "+        {", "+            project.log(\"Username must not be null.\");", "+            return;", "+        }", "+        if ( getPassword() == null )", "+        {", "+            project.log(\"Password must not be null.\");", "+            return;", "+        }", "+        if ( getTargetFolder() == null )", "+        {", "+            project.log(\"TargetFolder must not be null.\");", "+            return;", "+        }", "+        // Because of the way I create the full target path, there", "+        // must be NO slash at the end of targetFolder and folderName", "+        // However, if the slash or backslash is the only character, leave it alone", "+        if (null != getTargetFolder())", "+        {", "+            if ((getTargetFolder().endsWith(\"/\") || ", "+                 getTargetFolder().endsWith(\"\\\\\")) && getTargetFolder().length() > 1)", "+            {", "+                setTargetFolder(getTargetFolder().substring(0, getTargetFolder().length() - 1));", "+            }", "+        }", "+        if ( null != getFolderName() )", "+        {", "+            if ((getFolderName().endsWith(\"/\") || ", "+                 getFolderName().endsWith(\"\\\\\")) && getFolderName().length() > 1)", "+            {", "+                setFolderName(getFolderName().substring(0, getFolderName().length() - 1));", "+            }", "+        }", "+        // Check to see if the target directory exists.", "+        java.io.File dirExist = new java.io.File(getTargetFolder());", "+        if (dirExist.isDirectory() && !getForceAsBoolean())", "+        {", "+            project.log( \"Target directory exists. Set \\\"force\\\" to \\\"true\\\" \" +", "+                         \"to continue anyway.\" );", "+            return;", "+        }", "+        try", "+        {", "+            // Connect to the StarTeam server, and log on.", "+            Server s = getServer();", "-\t */", "-\tpublic void execute() throws BuildException", "-\t{", "+            // Search the items on this server.", "+            runServer(s);", "-\t\t// Check all of the properties that are required.", "-\t\tif ( getServerName() == null )", "-\t\t{", "-\t\t\tproject.log(\"ServerName must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-\t\tif ( getServerPort() == null )", "-\t\t{", "-\t\t\tproject.log(\"ServerPort must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-\t\tif ( getProjectName() == null )", "-\t\t{", "-\t\t\tproject.log(\"ProjectName must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-\t\tif ( getViewName() == null )", "-\t\t{", "-\t\t\tproject.log(\"ViewName must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-\t\tif ( getUsername() == null )", "-\t\t{", "-\t\t\tproject.log(\"Username must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-\t\tif ( getPassword() == null )", "-\t\t{", "-\t\t\tproject.log(\"Password must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-\t\tif ( getTargetFolder() == null )", "-\t\t{", "-\t\t\tproject.log(\"TargetFolder must not be null.\");", "-\t\t\treturn;", "-\t\t}", "-", "-\t\t// Because of the way I create the full target path, there must be NO slash at the end of targetFolder and folderName", "-\t\t// However, if the slash or backslash is the only character, leave it alone", "-\t\tif (!(getTargetFolder()==null))", "-\t\t{", "-\t\t\tif ((getTargetFolder().endsWith(\"/\") || getTargetFolder().endsWith(\"\\\\\")) && getTargetFolder().length() > 1)", "-\t\t\t{", "-\t\t\t\tsetTargetFolder(getTargetFolder().substring(0, getTargetFolder().length() - 1));", "-\t\t\t}", "-\t\t}", "-", "-\t\tif (!(getFolderName()==null))", "-\t\t{", "-\t\t\tif ((getFolderName().endsWith(\"/\") || getFolderName().endsWith(\"\\\\\")) && getFolderName().length() > 1)", "-\t\t\t{", "-\t\t\t\tsetFolderName(getFolderName().substring(0, getFolderName().length() - 1));", "-\t\t\t}", "-\t\t}", "-", "-\t\t// Check to see if the target directory exists.", "-\t\tjava.io.File dirExist = new java.io.File(getTargetFolder());", "-\t\tif (dirExist.isDirectory() && !getForceAsBoolean())", "-\t\t{", "-\t\t\tproject.log(\"Target directory exists. Set \\\"force\\\" to \\\"true\\\" to continue anyway.\");", "-\t\t\treturn;", "-\t\t}", "-", "-\t\ttry", "-\t\t{", "-\t\t\t// Connect to the StarTeam server, and log on.", "-\t\t\tServer s = getServer();", "-", "-\t\t\t// Search the items on this server.", "-\t\t\trunServer(s);", "-", "-\t\t\t// Disconnect from the server.", "-\t\t\ts.disconnect();", "-", "-\t\t\t// after you are all of the properties are ok, do your thing", "-\t\t\t// with StarTeam.  If there are any kind of exceptions then", "-\t\t\t// send the message to the project log.", "-", "-\t\t\t// Tell how many files were checked out.", "-\t\t\tproject.log(checkedOut + \" files checked out.\");", "-\t\t}", "-\t\tcatch (Throwable e)", "-\t\t{", "-\t\t\tproject.log(\"    \" + e.getMessage());", "-\t\t}", "-\t}", "+            // Disconnect from the server.", "+            s.disconnect();", "+            // after you are all of the properties are ok, do your thing", "+            // with StarTeam.  If there are any kind of exceptions then", "+            // send the message to the project log.", "+            // Tell how many files were checked out.", "+            project.log(checkedOut + \" files checked out.\");", "+        }", "+        catch (Throwable e)", "+        {", "+            project.log(\"    \" + e.getMessage());", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00f2b33a8ca3128deacabac0cae08ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java", "commitBeforeChange": "f7def885dd7bc3f17bb095754a21805701d7ada7", "commitAfterChange": "7fbbcdf665363d7efd4fe092bc7b24bd8eb6d542", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        // Check all of the properties that are required.", "-        if ( getServerName() == null )", "-        {", "-            project.log(\"ServerName must not be null.\");", "-            return;", "-        }", "-        if ( getServerPort() == null )", "-        {", "-            project.log(\"ServerPort must not be null.\");", "-            return;", "-        }", "-        if ( getProjectName() == null )", "-        {", "-            project.log(\"ProjectName must not be null.\");", "-            return;", "-        }", "-        if ( getViewName() == null )", "-        {", "-            project.log(\"ViewName must not be null.\");", "-            return;", "-        }", "-        if ( getUsername() == null )", "-        {", "-            project.log(\"Username must not be null.\");", "-            return;", "-        }", "-        if ( getPassword() == null )", "-        {", "-            project.log(\"Password must not be null.\");", "-            return;", "-        }", "-        if ( getTargetFolder() == null )", "-        {", "-            project.log(\"TargetFolder must not be null.\");", "-            return;", "-        }", "+        // Connect to the StarTeam server, and log on.", "+        Server s = getServer();", "-        // Because of the way I create the full target path, there", "-        // must be NO slash at the end of targetFolder and folderName", "-        // However, if the slash or backslash is the only character, leave it alone", "-        if (null != getTargetFolder())", "-        {", "-            if ((getTargetFolder().endsWith(\"/\") || ", "-                 getTargetFolder().endsWith(\"\\\\\")) && getTargetFolder().length() > 1)", "-            {", "-                setTargetFolder(getTargetFolder().substring(0, getTargetFolder().length() - 1));", "-            }", "-        }", "-", "-        if ( null != getFolderName() )", "-        {", "-            if ((getFolderName().endsWith(\"/\") || ", "-                 getFolderName().endsWith(\"\\\\\")) && getFolderName().length() > 1)", "-            {", "-                setFolderName(getFolderName().substring(0, getFolderName().length() - 1));", "-            }", "-        }", "-", "-        // Check to see if the target directory exists.", "-        java.io.File dirExist = new java.io.File(getTargetFolder());", "-        if (dirExist.isDirectory() && !getForceAsBoolean())", "-        {", "-            project.log( \"Target directory exists. Set \\\"force\\\" to \\\"true\\\" \" +", "-                         \"to continue anyway.\" );", "-            return;", "-        }", "-", "-        try", "-        {", "-            // Connect to the StarTeam server, and log on.", "-            Server s = getServer();", "-", "+        try {", "-", "+        } finally {", "-", "-            // after you are all of the properties are ok, do your thing", "-            // with StarTeam.  If there are any kind of exceptions then", "-            // send the message to the project log.", "-", "-            // Tell how many files were checked out.", "-            project.log(checkedOut + \" files checked out.\");", "-        catch (Throwable e)", "-        {", "-            project.log(\"    \" + e.getMessage());", "-        }", "+        // after you are all of the properties are ok, do your thing", "+        // with StarTeam.  If there are any kind of exceptions then", "+        // send the message to the project log.", "+", "+        // Tell how many files were checked out.", "+        log(checkedOut + \" files checked out.\");"]}]}