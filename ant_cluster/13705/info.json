{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e587774a5d3866ebee023722ee87f61d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97afcb6bf00ec99f512e054e7fd455ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/Jdk14RegexpMatcher.java", "commitBeforeChange": "32b8cce516421a912ced3f568167107df3332710", "commitAfterChange": "e3b6d1fe768d87352d3d0348638911045fc4668e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected int getCompilerOptions(int options)", "signatureAfterChange": "      protected int getCompilerOptions(int options)", "diff": ["-        if (RegexpUtil.hasFlag(options, MATCH_CASE_INSENSITIVE))", "+        if (RegexpUtil.hasFlag(options, MATCH_CASE_INSENSITIVE)) {", "-        if (RegexpUtil.hasFlag(options, MATCH_MULTILINE))", "+        }", "+        if (RegexpUtil.hasFlag(options, MATCH_MULTILINE)) {", "-        if (RegexpUtil.hasFlag(options, MATCH_SINGLELINE))", "+        }", "+        if (RegexpUtil.hasFlag(options, MATCH_SINGLELINE)) {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f869c6b0ca6f959f7bb4c512e9fc7fc9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/JakartaRegexpMatcher.java", "commitBeforeChange": "32b8cce516421a912ced3f568167107df3332710", "commitAfterChange": "e3b6d1fe768d87352d3d0348638911045fc4668e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      protected int getCompilerOptions(int options)", "signatureAfterChange": "      protected int getCompilerOptions(int options)", "diff": ["-        if (RegexpUtil.hasFlag(options, MATCH_CASE_INSENSITIVE))", "+        if (RegexpUtil.hasFlag(options, MATCH_CASE_INSENSITIVE)) {", "-        if (RegexpUtil.hasFlag(options, MATCH_MULTILINE))", "+        }", "+        if (RegexpUtil.hasFlag(options, MATCH_MULTILINE)) {", "-        if (RegexpUtil.hasFlag(options, MATCH_SINGLELINE))", "+        }", "+        if (RegexpUtil.hasFlag(options, MATCH_SINGLELINE)) {", "+        }"]}]}