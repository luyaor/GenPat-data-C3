{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cca7a6f25a64f12ab8804a2fd7e96be6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "050b808969dc090355bf973e35aaf4d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfig.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void merge(AntConfig otherConfig)", "signatureAfterChange": "     public void merge(AntConfig otherConfig)", "diff": ["-        List currentTaskDirs = taskDirLocations;", "-        taskDirLocations = new ArrayList();", "-        taskDirLocations.addAll(otherConfig.taskDirLocations);", "-        taskDirLocations.addAll(currentTaskDirs);", "+        List currentLibraryLocations = libraryLocations;", "+        libraryLocations = new ArrayList();", "+        libraryLocations.addAll(otherConfig.libraryLocations);", "+        libraryLocations.addAll(currentLibraryLocations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b00475af86d12491e52e54741ad0bb0b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (p1 == null) {", "+            if (newProject == null) {", "-            if(dir == null) ", "+            if (dir == null) {", "+            }", "-            p1.setBaseDir(dir);", "-            p1.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "+            newProject.setBaseDir(dir);", "+            newProject.setUserProperty(\"basedir\" , dir.getAbsolutePath());", "-            if (antFile == null) ", "+            if (antFile == null) {", "+            }", "-            p1.setUserProperty( \"ant.file\" , antFile );", "-            ProjectHelper.configureProject(p1, new File(antFile));", "+            newProject.setUserProperty( \"ant.file\" , antFile );", "+            ProjectHelper.configureProject(newProject, new File(antFile));", "-                target = p1.getDefaultTarget();", "+                target = newProject.getDefaultTarget();", "-            if (p1.getBaseDir().equals(project.getBaseDir()) &&", "-                p1.getProperty(\"ant.file\").equals(project.getProperty(\"ant.file\")) &&", "+            if (newProject.getBaseDir().equals(project.getBaseDir()) &&", "+                newProject.getProperty(\"ant.file\").equals(project.getProperty(\"ant.file\")) &&", "-            p1.executeTarget(target);", "+            newProject.executeTarget(target);", "-            p1 = null;", "+            newProject = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9885305be8e47e66c834452ace5bc8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static PropertyHelper getPropertyHelper(Project project)", "signatureAfterChange": "     public static PropertyHelper getPropertyHelper(Project project)", "diff": ["-        PropertyHelper ph=(PropertyHelper)project.getReference( \"ant.PropertyHelper\" );", "-        if( ph!=null ) return ph;", "-        ph=new PropertyHelper();", "-        ph.setProject( project );", "+        PropertyHelper helper", "+            = (PropertyHelper) project.getReference(\"ant.PropertyHelper\");", "+        if (helper != null) {", "+            return helper;", "+        }", "+        helper = new PropertyHelper();", "+        helper.setProject(project);", "-        project.addReference( \"ant.PropertyHelper\",ph );", "-        return ph;", "+        project.addReference(\"ant.PropertyHelper\", helper);", "+        return helper;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d912cf57e75ba87f7bb2663bdd445ac2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "19397fb959cb8afa2a87b3e68eaf23994384aab4", "commitAfterChange": "21a1b3cfb48abc9e87a97e1bdab451abe49b44eb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-        for (int icounter = 0; icounter < includes.length; icounter++) {", "-            if (FileUtils.isAbsolutePath(includes[icounter])) {", "+        for (int i = 0; i < includes.length; i++) {", "+            if (FileUtils.isAbsolutePath(includes[i])) {", "-                    && !SelectorUtils.matchPatternStart(includes[icounter],", "+                    && !SelectorUtils.matchPatternStart(includes[i],", "-                includes[icounter]), includes[icounter]);", "+                includes[i]), includes[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbbe1e363ab30663ae614b5d6d517c9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "1fa5ccf5682707c6b5e33482b641009e48190013", "commitAfterChange": "bec2a0777e910345fa7877d5aaa209ddde0937e3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void initializeProject()", "signatureAfterChange": "      private void initializeProject()", "diff": ["-            p1.addBuildListener((BuildListener)listeners.elementAt(i));", "+            newProject.addBuildListener((BuildListener)listeners.elementAt(i));", "-                p1.addBuildListener(logger);", "+                newProject.addBuildListener(logger);", "-            p1.addTaskDefinition(taskName, taskClass);", "+            newProject.addTaskDefinition(taskName, taskClass);", "-            p1.addDataTypeDefinition(typeName, typeClass);", "+            newProject.addDataTypeDefinition(typeName, typeClass);", "-           p1.setSystemProperties();", "+           newProject.setSystemProperties();", "-            if (inheritAll == true)", "-               p1.setProperty(arg, value);", "-            else", "-               p1.setUserProperty(arg, value);", "+            if (inheritAll == true){", "+               newProject.setProperty(arg, value);", "+            } else {", "+               newProject.setUserProperty(arg, value);", "+            }"]}]}