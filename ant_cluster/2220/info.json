{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b9bfbe924288ade4f087c15460d894b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b04d3fa3eeba7bf73a515a43e67207e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "aba1be216b8e8f554e7eeab98c77fdb5d61d2a47", "commitAfterChange": "ca5695fa0b2244e641914350434aa0dc8071d12c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        File savedBaseDir = baseDir;", "+", "-        if (baseDir == null) {", "-            baseDir = project.resolveFile(\".\");", "-        }", "-        ", "-        liaison = getLiaison();", "-        ", "-        // check if liaison wants to log errors using us as logger", "-        if (liaison instanceof XSLTLoggerAware) {", "-            ((XSLTLoggerAware)liaison).setLogger(this);", "-        }", "-        ", "-        log(\"Using \" + liaison.getClass().toString(), Project.MSG_VERBOSE);", "-        ", "-        File stylesheet = project.resolveFile(xslFile);", "-        if (!stylesheet.exists()) {", "-            stylesheet = fileUtils.resolveFile(baseDir, xslFile);", "-            /*", "-             * shouldn't throw out deprecation warnings before we know,", "-             * the wrong version has been used.", "-             */", "-            if (stylesheet.exists()) {", "-                log(\"DEPRECATED - the style attribute should be relative \" ", "-                    + \"to the project\\'s\");", "-                log(\"             basedir, not the tasks\\'s basedir.\");", "+        try {", "+            if (baseDir == null) {", "+                baseDir = project.resolveFile(\".\");", "-        }", "-        // if we have an in file and out then process them", "-        if (inFile != null && outFile != null) {", "-            process(inFile, outFile, stylesheet);", "-            return;", "-        }", "-        ", "-        /*", "-         * if we get here, in and out have not been specified, we are", "-         * in batch processing mode.", "-         */", "-        ", "-        //-- make sure Source directory exists...", "-        if (destDir == null ) {", "-            String msg = \"destdir attributes must be set!\";", "-            throw new BuildException(msg);", "-        }", "-        scanner = getDirectoryScanner(baseDir);", "-        log(\"Transforming into \" + destDir, Project.MSG_INFO);", "-        ", "-        // Process all the files marked for styling", "-        list = scanner.getIncludedFiles();", "-        for (int i = 0; i < list.length; ++i) {", "-            process( baseDir, list[i], destDir, stylesheet );", "-        }", "-        if (performDirectoryScan) {", "-            // Process all the directories marked for styling", "-            dirs = scanner.getIncludedDirectories();", "-            for (int j = 0; j < dirs.length; ++j){", "-                list = new File(baseDir, dirs[j]).list();", "-                for (int i = 0; i < list.length; ++i) {", "-                    process( baseDir, list[i], destDir, stylesheet );", "+            liaison = getLiaison();", "+            ", "+            // check if liaison wants to log errors using us as logger", "+            if (liaison instanceof XSLTLoggerAware) {", "+                ((XSLTLoggerAware)liaison).setLogger(this);", "+            }", "+            ", "+            log(\"Using \" + liaison.getClass().toString(), Project.MSG_VERBOSE);", "+            ", "+            File stylesheet = project.resolveFile(xslFile);", "+            if (!stylesheet.exists()) {", "+                stylesheet = fileUtils.resolveFile(baseDir, xslFile);", "+                /*", "+                 * shouldn't throw out deprecation warnings before we know,", "+                 * the wrong version has been used.", "+                 */", "+                if (stylesheet.exists()) {", "+                    log(\"DEPRECATED - the style attribute should be relative \" ", "+                        + \"to the project\\'s\");", "+                    log(\"             basedir, not the tasks\\'s basedir.\");", "+        ", "+            // if we have an in file and out then process them", "+            if (inFile != null && outFile != null) {", "+                process(inFile, outFile, stylesheet);", "+                return;", "+            }", "+        ", "+            /*", "+             * if we get here, in and out have not been specified, we are", "+             * in batch processing mode.", "+             */", "+        ", "+            //-- make sure Source directory exists...", "+            if (destDir == null ) {", "+                String msg = \"destdir attributes must be set!\";", "+                throw new BuildException(msg);", "+            }", "+            scanner = getDirectoryScanner(baseDir);", "+            log(\"Transforming into \" + destDir, Project.MSG_INFO);", "+        ", "+            // Process all the files marked for styling", "+            list = scanner.getIncludedFiles();", "+            for (int i = 0; i < list.length; ++i) {", "+                process( baseDir, list[i], destDir, stylesheet );", "+            }", "+            if (performDirectoryScan) {", "+                // Process all the directories marked for styling", "+                dirs = scanner.getIncludedDirectories();", "+                for (int j = 0; j < dirs.length; ++j){", "+                    list = new File(baseDir, dirs[j]).list();", "+                    for (int i = 0; i < list.length; ++i) {", "+                        process( baseDir, list[i], destDir, stylesheet );", "+                    }", "+                }", "+            }", "+        } finally {", "+            liaison = null;", "+            stylesheetLoaded = false;", "+            baseDir = savedBaseDir;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd1902331e199f0c1b129f53c629f193", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "96932a3c788bf970f72fe5927d4a44e1527447d3", "commitAfterChange": "e931e7bad1b82f459c34b7de1ba191d269322d3b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["+        AntClassLoader al = null;", "+        try {", "-                getProject().createClassLoader(compilerClasspath));", "+                al = getProject().createClassLoader(compilerClasspath));", "+        } finally {", "+            if (al != null) {", "+                al.cleanup();", "+            }", "+        }"]}]}