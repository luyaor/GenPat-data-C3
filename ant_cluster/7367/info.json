{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cf5336e1b0f8d15bdc7edcda47e19e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "365225c0d1145b02d3f11ed46788d720", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "7ad3a991697060d112bd74851c0b6fab7f98202c", "commitAfterChange": "650c0ab0b12375ac528646794c33c9887ea539ff", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     private boolean contentsExcluded(String name)", "signatureAfterChange": "     private boolean contentsExcluded(String name)", "diff": ["-            if (e.endsWith(File.separator + \"**\") && SelectorUtils.matchPath(", "+            if (e.endsWith(\"**\") && SelectorUtils.matchPath("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61af58ffc570eb166f6025bf8a446eae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "88de0fe15a7b5f3680278c2dda7bfb0711392622", "commitAfterChange": "b32f4587da5b6aa63458564000e7c29ab5f3e5cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "diff": ["-            = new File(System.getProperty(USER_HOMEDIR),", "-                    ANT_PRIVATEDIR + File.separatorChar + ANT_PRIVATELIB);", "+            = new File(System.getProperty(USER_HOMEDIR), USER_LIBDIR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bccd7dedb028d0f5735298edf4b6d24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "25968eb0c59b644650c57691910368f961f37311", "commitAfterChange": "92663dfd6a98615bd2d2b087f988561ff35102af", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "             public AntFTPFile(AntFTPFile parent, String path)", "signatureAfterChange": "             public AntFTPFile(AntFTPFile parent, String path)", "diff": ["-                        this.curpwd = this.curpwd + remoteFileSep", "+                        this.curpwd = getCurpwdPlusFileSep()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabffcd984eed69b865f135a0fad961c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "84b8f2b8b61578e8ddba975a9b78fffba579fd14", "commitAfterChange": "584e6514a14bbc7bb78e77e67352e58f5202f693", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void usage( final CLOptionDescriptor[] options )", "signatureAfterChange": "     private void usage( final CLOptionDescriptor[] options )", "diff": ["-        System.out.println( \"java \" + getClass().getName() + \" [options]\" );", "+        System.out.println( \"ant [options] [targets]\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4bf7ceb61239470484306d8b259d82a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setUseEFS(boolean b)", "signatureAfterChange": "     public void setCreateUnicodeExtraFields(boolean b)", "diff": ["-    public void setUseEFS(boolean b) {", "+     */", "+    public void setCreateUnicodeExtraFields(boolean b) {", "+        createUnicodeExtraFields = b;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d666e1d207d3c435efffb688caf2f27b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "611d085ff653bcf61d3cea4eb72869095e98439d", "commitAfterChange": "71ecbaefb28107447e2d3875786501ba1a71cc4d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public String getDefault()", "signatureAfterChange": "         public String getDefault()", "diff": ["-                return prefix + \"#\" + DefineAttribute.class.getName() + \"#\" + (++count);", "+                return prefix + \"#\" + getClass().getName() + \"#\" + (++count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0ac6911d0d1c673d87b5240c0dd7cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/EchoPropertiesTest.java", "commitBeforeChange": "4265a6fe9c258b420f9f37ee84a0c4d9e9560854", "commitAfterChange": "1a8bb2e5a5ef38951095904eeeba7bf8e4f4cbc6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": "               public void testEchoToBadFileNoFail()", "signatureAfterChange": "       public void testEchoToBadFileNoFail()", "diff": ["-    ", "+", "-        expectLog( \"testEchoToBadFileNoFail\",", "-            \"Destfile \"+toAbsolute(BAD_OUTFILE)+\" could not be written to.\" );", "+        expectLog( \"testEchoToBadFileNoFail\", \"destfile is a directory!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb1674fc03aa6c8685a64d21fa428d02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "afb49574cfcbe00f84a117d7a59d8518bc369d62", "commitAfterChange": "ee0fc90c1af3f49fbfc357258ccf63aafd230b10", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void zipFile(InputStream is, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(InputStream is, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "diff": ["-            if (!doubleFilePass || skipWriting) {", "+            if (isFirstPass()) {", "-            log(\"Warning: selected \" + archiveType", "+            logOnFirstPass(\"Warning: selected \" + archiveType"]}]}