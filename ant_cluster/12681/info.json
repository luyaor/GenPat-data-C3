{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb3dcf9a2d637e28567be47298ef670a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5d4a9439d5c25933f740b35afbdf00", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b3daf333da19cbbea2de9fafefdc14c1f4c8e886", "commitAfterChange": "3341571e8e6ebbcd9a5e89f78f15eb01da9936ab", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public void merge(Section section) throws ManifestException", "signatureAfterChange": "         public void merge(Section section) throws ManifestException", "diff": ["+            Attribute classpathAttribute = null;", "-                if (attributeName.equals(ATTRIBUTE_CLASSPATH) &&", "-                        attributes.containsKey(attributeName)) {", "-                    Attribute ourClassPath = getAttribute(attributeName);", "+                if (attributeName.equals(ATTRIBUTE_CLASSPATH)) {", "+                    if (classpathAttribute == null) {", "+                        classpathAttribute = new Attribute();", "+                        classpathAttribute.setName(ATTRIBUTE_CLASSPATH);", "+                    }", "-                        ourClassPath.addValue(value);", "+                        classpathAttribute.addValue(value);", "+            if (classpathAttribute != null) {", "+                // the merge file *always* wins, even for Class-Path", "+                storeAttribute(classpathAttribute);", "+            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1f7b9d7cbbe33590bb79675341999c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/taskdefs/LoadFile.java", "commitBeforeChange": "2eb375f62cb6a5cd4b22cd648403472312e82a4f", "commitAfterChange": "ef148d08a2b147b6c22cdcff74d0fa0c69915eed", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private final String processStream(final Reader inputReader, final int size)         throws BuildException, IOException", "signatureAfterChange": "     private final String processStream(final Reader inputReader, final int size)         throws BuildException, IOException", "diff": ["-        final int bufferLength = instream.read(buffer);", "-        final String text = new String(buffer, 0, bufferLength);", "+        int bufferLength = 0;", "+        String text = null;", "+        while (bufferLength != -1) {", "+            bufferLength = instream.read(buffer);", "+            if (bufferLength != -1) {", "+                if (text == null) {", "+                    text = new String(buffer, 0, bufferLength);", "+                } else {", "+                    text += new String(buffer, 0, bufferLength);", "+                }", "+            }", "+        }"]}]}