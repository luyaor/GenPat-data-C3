{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22f8798843d67a5c1659678ca3382e0e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c21d0f02de80441ac3cfe430510ebde", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/constantpool/ConstantPoolEntry.java", "commitBeforeChange": "adede93ab100e1abf809bc68984d9ad947978594", "commitAfterChange": "b103f7e356a3cd615e5164b4695211a7807a6c02", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ConstantPoolEntry readEntry(DataInputStream cpStream)          throws IOException", "signatureAfterChange": "     public static ConstantPoolEntry readEntry(DataInputStream cpStream)          throws IOException", "diff": ["+            case CONSTANT_METHODHANDLE:", "+                cpInfo = new MethodHandleCPInfo();", "+", "+                break;", "+            case CONSTANT_METHODTYPE:", "+                cpInfo = new MethodTypeCPInfo();", "+", "+                break;", "+            case CONSTANT_INVOKEDYNAMIC:", "+                cpInfo = new InvokeDynamicCPInfo();", "+", "+                break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87551091475b1fe3f54ac2a1e89a6f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/project/DefaultProjectEngine.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "signatureAfterChange": "      protected void executeTargetWork( final String name,                                        final Target target,                                        final TaskletContext context )", "diff": ["+        final Condition condition = target.getCondition();", "+", "+        if( null != condition )", "+        {", "+            if( false == condition.evaluate( context ) )", "+            {", "+                m_logger.debug( \"Skipping target \" + name + ", "+                                \" as it does not satisfy condition\" );", "+                return;", "+            }", "+        }", "+"]}]}