{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "357df537695186ac88463a8192e3b3cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f0998c2c075bb620773c2bc8f356cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarBuffer.java", "commitBeforeChange": "23bbf085727756cfbad92aaa345e10c7370d3486", "commitAfterChange": "75110026aa35fe98da6c696598361977c3c46c48", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean readBlock() throws IOException", "signatureAfterChange": "     private boolean readBlock() throws IOException", "diff": ["-        if (this.debug) {", "-            System.err.println(\"ReadBlock: blkIdx = \" + this.currBlkIdx);", "+        if (debug) {", "+            System.err.println(\"ReadBlock: blkIdx = \" + currBlkIdx);", "-        if (this.inStream == null) {", "+        if (inStream == null) {", "-        this.currRecIdx = 0;", "+        currRecIdx = 0;", "-        int bytesNeeded = this.blockSize;", "+        int bytesNeeded = blockSize;", "-            long numBytes = this.inStream.read(this.blockBuffer, offset,", "+            long numBytes = inStream.read(blockBuffer, offset,", "-            if (numBytes != this.blockSize) {", "-                if (this.debug) {", "+            if (numBytes != blockSize) {", "+                if (debug) {", "-                                       + numBytes + \" of \" + this.blockSize", "+                                       + numBytes + \" of \" + blockSize", "-        this.currBlkIdx++;", "+        currBlkIdx++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25877e86e546a9b07a99e5e453280924", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         private void findNextResource()", "signatureAfterChange": "         private void findNextResource()", "diff": ["-            while ((this.pathElementsIndex < this.pathElements.length) &&", "+            while ((pathElementsIndex < pathComponents.size()) &&", "-                    File pathComponent = AntClassLoader.this.project.resolveFile(", "-                        (String)this.pathElements[this.pathElementsIndex]);", "+                    File pathComponent ", "+                        = (File)pathComponents.elementAt(pathElementsIndex);", "-                    this.pathElementsIndex++;", "+                    pathElementsIndex++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca54ed892c70316d36d409c645f9c37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private void initBlock()", "signatureAfterChange": "      private void initBlock()", "diff": ["-        this.crc.initialiseCRC();", "-        this.last = -1;", "+        mCrc.initialiseCRC();", "+        last = -1;", "-        boolean[] inUse = this.data.inUse;", "-        for (int i = 256; --i >= 0;) {", "+        for (int i = 0; i < 256; i++) {", "-        this.allowableBlockSize", "-            = (this.blockSize100k * BZip2Constants.baseBlockSize) - 20;", "+        allowableBlockSize = baseBlockSize * blockSize100k - 20;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2587f006e8958376472720427e45273", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "380870c2b26a9f3289569dc2451178df3f05613e", "commitAfterChange": "ad9edf5f5ea4a8f2a974726eeb8e656c177357df", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void close() throws IOException", "signatureAfterChange": "      public void close() throws IOException", "diff": ["-        OutputStream outShadow = this.out;", "-        if (outShadow != null) {", "-            try {", "-                if (this.runLength > 0) {", "-                    writeRun();", "-                }", "-                this.currentChar = -1;", "-                endBlock();", "-                endCompression();", "-                outShadow.close();", "-            } finally {", "-                this.out = null;", "-                this.data = null;", "-            }", "+        if (closed) {", "+            return;", "+", "+        if (runLength > 0) {", "+            writeRun();", "+        }", "+        currentChar = -1;", "+        endBlock();", "+        endCompression();", "+        closed = true;", "+        super.close();", "+        bsStream.close();"]}]}