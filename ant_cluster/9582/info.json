{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22dfa307b5438430877f536a813ee6cd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c49aa332a1a563fb88e62aa6d411d11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int executeJava()         throws TaskException", "signatureAfterChange": "     public int executeJava()         throws TaskException", "diff": ["-            getLogger().debug( \"Forking \" + m_cmdl.toString() );", "+            getContext().debug( \"Forking \" + m_cmdl.toString() );", "-                getLogger().warn( \"JVM args ignored when same JVM is used.\" );", "+                getContext().warn( \"JVM args ignored when same JVM is used.\" );", "-                getLogger().warn( \"Working directory ignored when same JVM is used.\" );", "+                getContext().warn( \"Working directory ignored when same JVM is used.\" );", "-            getLogger().debug( \"Running in same VM \" + m_cmdl.getJavaCommand().toString() );", "+            getContext().debug( \"Running in same VM \" + m_cmdl.getJavaCommand().toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12efecbce2374c1667ebd495bba7ceb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void addClasspathEntry( String resource )", "signatureAfterChange": "     protected void addClasspathEntry( String resource )", "diff": ["-                getLogger().debug( \"Implicitly adding \" + jarName + \" to classpath\" );", "+                getContext().debug( \"Implicitly adding \" + jarName + \" to classpath\" );", "-                getLogger().debug( \"Implicitly adding \" + dirName + \" to classpath\" );", "+                getContext().debug( \"Implicitly adding \" + dirName + \" to classpath\" );", "-                getLogger().debug( \"Don\\'t know how to handle resource URL \" + u );", "+                getContext().debug( \"Don\\'t know how to handle resource URL \" + u );", "-            getLogger().debug( \"Couldn\\'t find \" + resource );", "+            getContext().debug( \"Couldn\\'t find \" + resource );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22e67fe6f0937abdd5679f1b92ea4f9d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/text/ReplaceRegExp.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-                getLogger().error( message, e );", "+                getContext().error( message, e );", "-            getLogger().error( message );", "+            getContext().error( message );", "-                        getLogger().error( message );", "+                        getContext().error( message );", "-                    getLogger().error( message );", "+                    getContext().error( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3c8e7202f861e1d7c3de55f55ca8a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/Rmic.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            getLogger().info( \"Verify has been turned on.\" );", "+            getContext().info( \"Verify has been turned on.\" );", "-            getLogger().info( \"RMI Compiling \" + fileCount + \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir );", "+            getContext().info( \"RMI Compiling \" + fileCount + \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir );", "-                getLogger().warn( \"Cannot determine sourcefiles in idl mode, \" );", "-                getLogger().warn( \"sourcebase attribute will be ignored.\" );", "+                getContext().warn( \"Cannot determine sourcefiles in idl mode, \" );", "+                getContext().warn( \"sourcebase attribute will be ignored.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fca316495655c57633e9b7833fe0d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Label.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-            getLogger().warn( \"View not set, assuming //depot/...\" );", "+            getContext().warn( \"View not set, assuming //depot/...\" );", "-            getLogger().warn( \"Label Description not set, assuming 'AntLabel'\" );", "+            getContext().warn( \"Label Description not set, assuming 'AntLabel'\" );", "-            getLogger().warn( \"lock attribute invalid - ignoring\" );", "+            getContext().warn( \"lock attribute invalid - ignoring\" );", "-            getLogger().warn( \"name not set, assuming '\" + m_name + \"'\" );", "+            getContext().warn( \"name not set, assuming '\" + m_name + \"'\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b646b0bece51fe0953b411d115379c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/text/ReplaceRegExp.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-                getLogger().error( message, e );", "+                getContext().error( message, e );", "-            getLogger().error( message );", "+            getContext().error( message );", "-                        getLogger().error( message );", "+                        getContext().error( message );", "-                    getLogger().error( message );", "+                    getContext().error( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ba4a47a4ae53a37c91b8d38c9ee666e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public int executeInVM( final CommandlineJava commandline )         throws TaskException", "signatureAfterChange": "     public int executeInVM( final CommandlineJava commandline )         throws TaskException", "diff": ["-                getLogger().info( msg );", "+                getContext().info( msg );", "-            getLogger().info( \"Output to be stored in \" + m_outputFile.getPath() );", "+            getContext().info( \"Output to be stored in \" + m_outputFile.getPath() );", "-                getLogger().info( msg );", "+                getContext().info( msg );", "-                getLogger().info( msg );", "+                getContext().info( msg );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7611c2801e0f9e14bee7107575ed5e2e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void doMail()         throws MessagingException, AddressException, TaskException", "signatureAfterChange": "     public void doMail()         throws MessagingException, AddressException, TaskException", "diff": ["-        getLogger().debug( \"message sender: \" + from );", "+        getContext().debug( \"message sender: \" + from );", "-            getLogger().debug( \"subject: \" + subject );", "+            getContext().debug( \"subject: \" + subject );", "-                    getLogger().debug( \"Attaching \" + file.toString() + \" - \" + file.length() + \" bytes\" );", "+                    getContext().debug( \"Attaching \" + file.toString() + \" - \" + file.length() + \" bytes\" );", "-        getLogger().info( \"sending email \" );", "+        getContext().info( \"sending email \" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f227d863143804e63fa2df93a2d611b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/cvslib/CVSPass.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public final void execute()         throws TaskException", "signatureAfterChange": "     public final void execute()         throws TaskException", "diff": ["-        getLogger().debug( \"cvsRoot: \" + m_cvsRoot );", "-        getLogger().debug( \"password: \" + m_password );", "-        getLogger().debug( \"passFile: \" + m_passwordFile );", "+        getContext().debug( \"cvsRoot: \" + m_cvsRoot );", "+        getContext().debug( \"password: \" + m_password );", "+        getContext().debug( \"passFile: \" + m_passwordFile );", "-            getLogger().debug( \"Writing -> \" + pwdfile );", "+            getContext().debug( \"Writing -> \" + pwdfile );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d2322f848624344ef25d41bd56a1ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void addClasspathEntry( String resource )", "signatureAfterChange": "     protected void addClasspathEntry( String resource )", "diff": ["-                getLogger().debug( \"Implicitly adding \" + jarName + \" to classpath\" );", "+                getContext().debug( \"Implicitly adding \" + jarName + \" to classpath\" );", "-                getLogger().debug( \"Implicitly adding \" + dirName + \" to classpath\" );", "+                getContext().debug( \"Implicitly adding \" + dirName + \" to classpath\" );", "-                getLogger().debug( \"Don\\'t know how to handle resource URL \" + u );", "+                getContext().debug( \"Don\\'t know how to handle resource URL \" + u );", "-            getLogger().debug( \"Couldn\\'t find \" + resource );", "+            getContext().debug( \"Couldn\\'t find \" + resource );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85bec796b4e78f1fef3c2ec1614551db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate()         throws TaskException", "signatureAfterChange": "     private void translate()         throws TaskException", "diff": ["-                        getLogger().debug( \"Exception occured while trying to check/create \" + \" parent directory.  \" + e.getMessage() );", "+                        getContext().debug( \"Exception occured while trying to check/create \" + \" parent directory.  \" + e.getMessage() );", "-                        getLogger().debug( \"Processing \" + srcFiles[ j ] );", "+                        getContext().debug( \"Processing \" + srcFiles[ j ] );", "-                                    getLogger().debug( \"Warning: The key: \" + matches + \" hasn't been defined.\" );", "+                                    getContext().debug( \"Warning: The key: \" + matches + \" hasn't been defined.\" );", "-                        getLogger().debug( \"Skipping \" + srcFiles[ j ] + \" as destination file is up to date\" );", "+                        getContext().debug( \"Skipping \" + srcFiles[ j ] + \" as destination file is up to date\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dbaf1a770748a9be470c29815fe01c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/perforce/P4Label.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-            getLogger().warn( \"View not set, assuming //depot/...\" );", "+            getContext().warn( \"View not set, assuming //depot/...\" );", "-            getLogger().warn( \"Label Description not set, assuming 'AntLabel'\" );", "+            getContext().warn( \"Label Description not set, assuming 'AntLabel'\" );", "-            getLogger().warn( \"lock attribute invalid - ignoring\" );", "+            getContext().warn( \"lock attribute invalid - ignoring\" );", "-            getLogger().warn( \"name not set, assuming '\" + m_name + \"'\" );", "+            getContext().warn( \"name not set, assuming '\" + m_name + \"'\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9334035d9663d06fcbb06f7442b2144d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void execSQL( String sql, PrintStream out )         throws SQLException", "signatureAfterChange": "     protected void execSQL( String sql, PrintStream out )         throws SQLException", "diff": ["-                getLogger().debug( statement.getUpdateCount() + \" rows affected\" );", "+                getContext().debug( statement.getUpdateCount() + \" rows affected\" );", "-                getLogger().debug( warning + \" sql warning\" );", "+                getContext().debug( warning + \" sql warning\" );", "-            getLogger().error( \"Failed to execute: \" + sql );", "+            getContext().error( \"Failed to execute: \" + sql );", "-            getLogger().error( e.toString() );", "+            getContext().error( e.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99db597fc083f6326fa99e9a9b588539", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/Rmic.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            getLogger().info( \"Verify has been turned on.\" );", "+            getContext().info( \"Verify has been turned on.\" );", "-            getLogger().info( \"RMI Compiling \" + fileCount + \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir );", "+            getContext().info( \"RMI Compiling \" + fileCount + \" class\" + ( fileCount > 1 ? \"es\" : \"\" ) + \" to \" + baseDir );", "-                getLogger().warn( \"Cannot determine sourcefiles in idl mode, \" );", "-                getLogger().warn( \"sourcebase attribute will be ignored.\" );", "+                getContext().warn( \"Cannot determine sourcefiles in idl mode, \" );", "+                getContext().warn( \"sourcebase attribute will be ignored.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a75246f88f85a8a819105761b970b68f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/archive/Expand.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void expandFile( final File src, final File dir )         throws TaskException", "signatureAfterChange": "     protected void expandFile( final File src, final File dir )         throws TaskException", "diff": ["-        if( getLogger().isInfoEnabled() )", "+        if( getContext().isInfoEnabled() )", "-            getLogger().info( message );", "+            getContext().info( message );", "-        if( getLogger().isDebugEnabled() )", "+        if( getContext().isDebugEnabled() )", "-            getLogger().debug( message );", "+            getContext().debug( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8ccc81aa2ca7a74a9e4cfc88b9900e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public int executeJava()         throws TaskException", "signatureAfterChange": "     public int executeJava()         throws TaskException", "diff": ["-            getLogger().debug( \"Forking \" + m_cmdl.toString() );", "+            getContext().debug( \"Forking \" + m_cmdl.toString() );", "-                getLogger().warn( \"JVM args ignored when same JVM is used.\" );", "+                getContext().warn( \"JVM args ignored when same JVM is used.\" );", "-                getLogger().warn( \"Working directory ignored when same JVM is used.\" );", "+                getContext().warn( \"Working directory ignored when same JVM is used.\" );", "-            getLogger().debug( \"Running in same VM \" + m_cmdl.getJavaCommand().toString() );", "+            getContext().debug( \"Running in same VM \" + m_cmdl.getJavaCommand().toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab833ff56f7fd4668a650a7f60fcdd14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/archive/Expand.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void expandFile( final File src, final File dir )         throws TaskException", "signatureAfterChange": "     protected void expandFile( final File src, final File dir )         throws TaskException", "diff": ["-        if( getLogger().isInfoEnabled() )", "+        if( getContext().isInfoEnabled() )", "-            getLogger().info( message );", "+            getContext().info( message );", "-        if( getLogger().isDebugEnabled() )", "+        if( getContext().isDebugEnabled() )", "-            getLogger().debug( message );", "+            getContext().debug( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f699725db33ceb01ac8978cfb3108f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void execSQL( String sql, PrintStream out )         throws SQLException", "signatureAfterChange": "     protected void execSQL( String sql, PrintStream out )         throws SQLException", "diff": ["-                getLogger().debug( statement.getUpdateCount() + \" rows affected\" );", "+                getContext().debug( statement.getUpdateCount() + \" rows affected\" );", "-                getLogger().debug( warning + \" sql warning\" );", "+                getContext().debug( warning + \" sql warning\" );", "-            getLogger().error( \"Failed to execute: \" + sql );", "+            getContext().error( \"Failed to execute: \" + sql );", "-            getLogger().error( e.toString() );", "+            getContext().error( e.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de084c4bc772c6419bce278fb9ff1094", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate()         throws TaskException", "signatureAfterChange": "     private void translate()         throws TaskException", "diff": ["-                        getLogger().debug( \"Exception occured while trying to check/create \" + \" parent directory.  \" + e.getMessage() );", "+                        getContext().debug( \"Exception occured while trying to check/create \" + \" parent directory.  \" + e.getMessage() );", "-                        getLogger().debug( \"Processing \" + srcFiles[ j ] );", "+                        getContext().debug( \"Processing \" + srcFiles[ j ] );", "-                                    getLogger().debug( \"Warning: The key: \" + matches + \" hasn't been defined.\" );", "+                                    getContext().debug( \"Warning: The key: \" + matches + \" hasn't been defined.\" );", "-                        getLogger().debug( \"Skipping \" + srcFiles[ j ] + \" as destination file is up to date\" );", "+                        getContext().debug( \"Skipping \" + srcFiles[ j ] + \" as destination file is up to date\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f0aeb0bd0546fbf95a536e7455bb3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/MimeMail.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void doMail()         throws MessagingException, AddressException, TaskException", "signatureAfterChange": "     public void doMail()         throws MessagingException, AddressException, TaskException", "diff": ["-        getLogger().debug( \"message sender: \" + from );", "+        getContext().debug( \"message sender: \" + from );", "-            getLogger().debug( \"subject: \" + subject );", "+            getContext().debug( \"subject: \" + subject );", "-                    getLogger().debug( \"Attaching \" + file.toString() + \" - \" + file.length() + \" bytes\" );", "+                    getContext().debug( \"Attaching \" + file.toString() + \" - \" + file.length() + \" bytes\" );", "-        getLogger().info( \"sending email \" );", "+        getContext().info( \"sending email \" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd417c62afd0f8fcd7526567cbb5dc1f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "732df7532e22b0472690663897388f4b89ca9eb6", "commitAfterChange": "71aa092e8cec93a5c43c37a6becce11d3756de5b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public int executeInVM( final CommandlineJava commandline )         throws TaskException", "signatureAfterChange": "     public int executeInVM( final CommandlineJava commandline )         throws TaskException", "diff": ["-                getLogger().info( msg );", "+                getContext().info( msg );", "-            getLogger().info( \"Output to be stored in \" + m_outputFile.getPath() );", "+            getContext().info( \"Output to be stored in \" + m_outputFile.getPath() );", "-                getLogger().info( msg );", "+                getContext().info( msg );", "-                getLogger().info( msg );", "+                getContext().info( msg );"]}]}