{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db5bf5f26e3ce31388d8daf269350474", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23df26c81b764a69900614b38687f9fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "271c73b91cf469886bc023adde1bd592600518b3", "commitAfterChange": "4ffd54fee4e9d7853085d8649a49c175914aa860", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["-                            StringBuffer newline = new StringBuffer(line);", "-                        outer:                      while (true) {", "-                            startIndex = line.indexOf(startToken, endIndex + 1);", "-                            if (startIndex < 0 ||", "-                                startIndex + 1 >= line.length()) {", "-                                break;", "-                            }", "-                            endIndex = line.indexOf(endToken, startIndex + 1);", "-                            if (endIndex < 0) {", "-                                break;", "-                            }", "-                            String matches = line.substring(startIndex + 1,", "-                                                            endIndex);", "-                                //If there is a white space or = or :, then", "-                                //it isn't to be treated as a valid key.", "-                            for (int k = 0; k < matches.length(); k++) {", "-                                char c = matches.charAt(k);", "-                                if (c == ':' ||", "-                                    c == '=' ||", "-                                    Character.isSpaceChar(c)) {", "-                                    endIndex = endIndex - 1;", "-                                    continue outer;", "+outer:                      while (true) {", "+                                startIndex = line.indexOf(startToken, endIndex + 1);", "+                                if (startIndex < 0 ||", "+                                    startIndex + 1 >= line.length()) {", "+                                    break;", "+                                }", "+                                endIndex = line.indexOf(endToken, startIndex + 1);", "+                                if (endIndex < 0) {", "+                                    break;", "+                                }", "+                                String matches = line.substring(startIndex + 1,", "+                                                                endIndex);", "+                                    //If there is a white space or = or :, then", "+                                    //it isn't to be treated as a valid key.", "+                                for (int k = 0; k < matches.length(); k++) {", "+                                    char c = matches.charAt(k);", "+                                    if (c == ':' ||", "+                                        c == '=' ||", "+                                        Character.isSpaceChar(c)) {", "+                                        endIndex = endIndex - 1;", "+                                        continue outer;", "+                                    }", "+                                }", "+                                String replace = null;", "+                                replace = (String) resourceMap.get(matches);", "+                                    //If the key hasn't been loaded into resourceMap,", "+                                    //use the key itself as the value also.", "+                                if (replace == null) {", "+                                    log(\"Warning: The key: \" + matches", "+                                        + \" hasn't been defined.\",", "+                                        Project.MSG_DEBUG);", "+                                    replace = matches;", "+                                }", "+                                line = line.substring(0, startIndex)", "+                                    + replace", "+                                    + line.substring(endIndex + 1);", "+                                endIndex = startIndex + replace.length() + 1;", "+                                if (endIndex + 1 >= line.length()) {", "+                                    break;", "-                            String replace = null;", "-                            replace = (String) resourceMap.get(matches);", "-                                //If the key hasn't been loaded into resourceMap,", "-                                //use the key itself as the value also.", "-                            if (replace == null) {", "-                                log(\"Warning: The key: \" + matches", "-                                    + \" hasn't been defined.\",", "-                                    Project.MSG_DEBUG);", "-                                replace = matches;", "-                            }", "-                            line = line.substring(0, startIndex)", "-                                + replace", "-                                + line.substring(endIndex + 1);", "-                            endIndex = startIndex + replace.length() + 1;", "-                            if (endIndex + 1 >= line.length()) {", "-                                break;", "-                            }", "-                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e7feeda216b6dbfe1d77462ebc1326", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java", "commitBeforeChange": "ce77ae56b8eea658f67b91a8e430ed5048c3f7c7", "commitAfterChange": "2736a72e9cb52aaa3376f0010ca0c7e3b417c659", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void translate() throws BuildException", "signatureAfterChange": "     private void translate() throws BuildException", "diff": ["-                            StringBuffer newline = new StringBuffer(line);", "-                        outer:                      while (true) {", "-                            startIndex = line.indexOf(startToken, endIndex + 1);", "-                            if (startIndex < 0 ||", "-                                startIndex + 1 >= line.length()) {", "-                                break;", "-                            }", "-                            endIndex = line.indexOf(endToken, startIndex + 1);", "-                            if (endIndex < 0) {", "-                                break;", "-                            }", "-                            String matches = line.substring(startIndex + 1,", "-                                                            endIndex);", "-                                //If there is a white space or = or :, then", "-                                //it isn't to be treated as a valid key.", "-                            for (int k = 0; k < matches.length(); k++) {", "-                                char c = matches.charAt(k);", "-                                if (c == ':' ||", "-                                    c == '=' ||", "-                                    Character.isSpaceChar(c)) {", "-                                    endIndex = endIndex - 1;", "-                                    continue outer;", "+outer:                      while (true) {", "+                                startIndex = line.indexOf(startToken, endIndex + 1);", "+                                if (startIndex < 0 ||", "+                                    startIndex + 1 >= line.length()) {", "+                                    break;", "+                                }", "+                                endIndex = line.indexOf(endToken, startIndex + 1);", "+                                if (endIndex < 0) {", "+                                    break;", "+                                }", "+                                String matches = line.substring(startIndex + 1,", "+                                                                endIndex);", "+                                    //If there is a white space or = or :, then", "+                                    //it isn't to be treated as a valid key.", "+                                for (int k = 0; k < matches.length(); k++) {", "+                                    char c = matches.charAt(k);", "+                                    if (c == ':' ||", "+                                        c == '=' ||", "+                                        Character.isSpaceChar(c)) {", "+                                        endIndex = endIndex - 1;", "+                                        continue outer;", "+                                    }", "+                                }", "+                                String replace = null;", "+                                replace = (String) resourceMap.get(matches);", "+                                    //If the key hasn't been loaded into resourceMap,", "+                                    //use the key itself as the value also.", "+                                if (replace == null) {", "+                                    log(\"Warning: The key: \" + matches", "+                                        + \" hasn't been defined.\",", "+                                        Project.MSG_DEBUG);", "+                                    replace = matches;", "+                                }", "+                                line = line.substring(0, startIndex)", "+                                    + replace", "+                                    + line.substring(endIndex + 1);", "+                                endIndex = startIndex + replace.length() + 1;", "+                                if (endIndex + 1 >= line.length()) {", "+                                    break;", "-                            String replace = null;", "-                            replace = (String) resourceMap.get(matches);", "-                                //If the key hasn't been loaded into resourceMap,", "-                                //use the key itself as the value also.", "-                            if (replace == null) {", "-                                log(\"Warning: The key: \" + matches", "-                                    + \" hasn't been defined.\",", "-                                    Project.MSG_DEBUG);", "-                                replace = matches;", "-                            }", "-                            line = line.substring(0, startIndex)", "-                                + replace", "-                                + line.substring(endIndex + 1);", "-                            endIndex = startIndex + replace.length() + 1;", "-                            if (endIndex + 1 >= line.length()) {", "-                                break;", "-                            }", "-                        }"]}]}