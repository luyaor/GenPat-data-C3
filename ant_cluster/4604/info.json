{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f760f2de97db4f76b312538dac376ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9794795bc6b7d5c66ac0255774a157ee", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "7627a966ee4283bebb43ff4f0b6eeb84236a6019", "commitAfterChange": "c0649769e0063616ae46a2e58a57203bb42a7f8e", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": "     public void rename(File from, File to) throws IOException", "signatureAfterChange": "     public void rename(File from, File to) throws IOException", "diff": ["-        if (to.exists() && !to.delete()) {", "+        from = normalize(from.getAbsolutePath()).getCanonicalFile();", "+        to = normalize(to.getAbsolutePath());", "+        if (!from.exists()) {", "+            System.err.println(\"Cannot rename nonexistent file \" + from);", "+            return;", "+        }", "+        if (from.equals(to)) {", "+            System.err.println(\"Rename of \" + from + \" to \" + to + \" is a no-op.\");", "+            return;", "+        }", "+        if (to.exists() && !(from.equals(to.getCanonicalFile()) || to.delete())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ac2d5144a709affcfb351e0488f672", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/anteater/source/main/org/apache/ant/ProjectBuilder.java", "commitBeforeChange": "421736ed4a52a3f068a31f53678b97915ebb0cc9", "commitAfterChange": "f85678f1abd081bfd165ce81b94bad652968e4fd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "                  public void endElement(String name) throws SAXException", "signatureAfterChange": "                  public void endElement(String name) throws SAXException", "diff": ["-            // System.out.println(\"end: \" + name);", "+            ", "+            StringBuffer elementData = (StringBuffer)tagCharDataStack.elementAt(0);", "+            tagCharDataStack.removeElementAt(0);", "+            ", "+            ", "+            ", "+            ", "+              case STATE_DESCRIPTION:", "+                if (name.equals(\"description\")) {", "+                    state = STATE_PROJECT;", "+                    project.setDescription(elementData.toString().trim());", "+                } else {", "+                    System.out.println(\"Expecting to get an end of description, got: \" +", "+                        name);", "+                    // XXX exception out.", "+                }", "+                break;", "+            ", "+              case STATE_PROPERTY:", "+                if (name.equals(\"property\")) {", "+                    state = STATE_PROJECT;", "+                } else {", "+                    System.out.println(\"Expecting to get end of property, got: \" + name);", "+                    // XXX exception out", "+                }", "+                break;", "+            ", "+            "]}]}