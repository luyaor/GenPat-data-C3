{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bf8dbb1c0e14f6ad9a40b160663d0af", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb4aab14792ff9643f40dac2d734143", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "signatureAfterChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "diff": ["+        String ifCondition = target.getIfCondition();", "+        String unlessCondition = target.getUnlessCondition();", "+        ", "+        if (ifCondition != null) {", "+            ifCondition = dataService.replacePropertyRefs(ifCondition.trim());", "+            if (!isDataValueSet(ifCondition)) {", "+                return;", "+            }", "+        }", "+        ", "+        if (unlessCondition != null) {", "+            unlessCondition ", "+                = dataService.replacePropertyRefs(unlessCondition.trim());", "+            if (isDataValueSet(unlessCondition)) {", "+                return;", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a03259f4b56bab392a24c7f9b9f68d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "1885612e5d6666e09a655fbe4f1ee888e2e26f69", "commitAfterChange": "9585ec663a4244b8b75bdfe173c115189cbd08c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (!testIfAllows()) {", "-            project.log(this, \"Skipped because property '\" + project.replaceProperties(ifCondition)", "+        if (ifCondition != null && !ifCondition.eval()) {", "+            project.log(this, \"Skipped because property '\" + project.replaceProperties(ifString)", "-        if (!testUnlessAllows()) {", "+        if (unlessCondition != null && unlessCondition.eval()) {", "-                    + project.replaceProperties(unlessCondition) + \"' set.\", Project.MSG_VERBOSE);", "+                    + project.replaceProperties(unlessString) + \"' set.\", Project.MSG_VERBOSE);"]}]}