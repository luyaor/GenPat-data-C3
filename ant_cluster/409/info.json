{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5814bc01ca9e91463475c721d22b3c8c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f8fdab6341ef0d2bee3b9e1fd498b5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "c28ec7da7aefa85051bcb81e0eea06c74e17342a", "commitAfterChange": "50c1cfa5726c79d5184a0c9d258afb159a5e0899", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         FileInput(File source) throws IOException", "signatureAfterChange": "         FileInput(File source) throws IOException", "diff": ["-            if (encoding == null) {", "-                reader = new BufferedReader(new FileReader(source));", "-            } else {", "-                reader = new BufferedReader(new InputStreamReader(", "-                        new FileInputStream(source), encoding));", "+            is = new FileInputStream(source);", "+            try {", "+                reader = new BufferedReader(encoding != null ? new InputStreamReader(is, encoding) : new InputStreamReader(is));", "+            } finally {", "+                if (reader == null) {", "+                    is.close();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8eb34fc64f5f004e4d0992823775def", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "c28ec7da7aefa85051bcb81e0eea06c74e17342a", "commitAfterChange": "50c1cfa5726c79d5184a0c9d258afb159a5e0899", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": "         FileOutput(File out) throws IOException", "signatureAfterChange": "         FileOutput(File out) throws IOException", "diff": ["-                if (encoding == null) {", "-                    writer = new BufferedWriter(new FileWriter(out));", "-                } else {", "-                    writer = new BufferedWriter(new OutputStreamWriter", "-                            (new FileOutputStream(out), encoding));", "+            os = new FileOutputStream(out);", "+            try {", "+                writer = new BufferedWriter(encoding != null ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os));", "+            } finally {", "+                if (writer == null) {", "+                    os.close();", "+            }"]}]}