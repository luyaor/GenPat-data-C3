{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f84e4f63705fb44a647ee68770970eda", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23238fc50ffb1104d22db04409f06cda", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "43804e4ea2eff0ec4b2a606876ce3adf98dda954", "commitAfterChange": "0fcac6aa36d856294f2f1829c09b943bb4420f5a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private InputStream loadResource(String name)", "signatureAfterChange": "     private InputStream loadResource(String name)", "diff": ["-        String[] pathElements = classpath.list();", "-        for (int i = 0; i < pathElements.length && stream == null; ++i) {", "-            try {", "-                File pathComponent = project.resolveFile((String)pathElements[i]);", "-                stream = getResourceStream(pathComponent, name);", "-            }", "-            catch (BuildException e) {", "-                // ignore path elements which are invalid relative to the project", "-            }", "+        for (Enumeration e = pathComponents.elements(); e.hasMoreElements() && stream == null; ) {", "+            File pathComponent = (File)e.nextElement();", "+            stream = getResourceStream(pathComponent, name);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff705847dafacadecaf5b7ee8753f556", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "403c32e5c5322f65e184f6d21496d0295d74f6e1", "commitAfterChange": "655df7f9e198a141defc9dcfb45f7f14cd7749f8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public InputStream getResourceAsStream(String name)", "signatureAfterChange": "     public InputStream getResourceAsStream(String name)", "diff": ["-        if (components == null) {", "-            // we haven't set up the list of directories and jars yet.", "-            setup();", "-        }", "-", "-", "-        for (Enumeration e = components.elements(); e.hasMoreElements() && stream == null; ) {", "-            File pathComponent = (File)e.nextElement();", "+ ", "+        String[] pathElements = classpath.list();", "+        for (int i = 0; i < pathElements.length && stream == null; ++i) {", "+            File pathComponent = project.resolveFile((String)pathElements[i]);"]}]}