{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "140457bc61295860a93602fb083c9a9a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21f9a3a90c25cc4211414cf7c3974022", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "98caa52a0a2816697e533f7864a95b52e293273f", "commitAfterChange": "99529fd6c5e0d622048fe2ea34af150b7a1f09ff", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-                project.fireBuildFinished(error);", "+                try {", "+                    project.fireBuildFinished(error);", "+                } catch (Throwable t) {", "+                    // yes, I know it is bad style to catch Throwable,", "+                    // but if we don't, we lose valuable information", "+                    System.err.println(\"Caught an exception while logging the\"", "+                                       + \" end of the build.  Exception was:\");", "+                    t.printStackTrace();", "+                    if (error != null) {", "+                        System.err.println(\"There has been an error prior to\"", "+                                           + \" that:\");", "+                        error.printStackTrace();", "+                    }", "+                    throw new BuildException(t);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9da994b0973193099e3ed53d94343239", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "d977d4b58f8e6e323060aeb695e45749822187d4", "commitAfterChange": "b417973d391382a96e26e6c50751b9b24f85b239", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-    public void buildStarted(BuildEvent event) {}", "-    public void buildFinished(BuildEvent event) {}", "+     */", "+    public void buildFinished(BuildEvent event) {", "+        Throwable error = event.getException();", "+", "+        if (error == null) {", "+            out.println(\"\\nBUILD SUCCESSFUL\");", "+        }", "+        else {", "+            out.println(\"\\nBUILD FAILED\\n\");", "+", "+            if (error instanceof BuildException) {", "+                out.println(error.toString());", "+", "+                Throwable nested = ((BuildException)error).getException();", "+                if (nested != null) {", "+                    nested.printStackTrace(out);", "+                }", "+            }", "+            else {", "+                error.printStackTrace(out);", "+            }", "+        }", "+", "+        out.println(\"\\nTotal time: \" + formatTime(System.currentTimeMillis() - startTime));", "+    }"]}]}