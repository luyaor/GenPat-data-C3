{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ed1a13fac27c4ad59d39cbc84624adb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143204ddf0634777bae15a1af032242f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/Project.java", "commitBeforeChange": "5168496109edbff91558a4d654082a36a1f74a69", "commitAfterChange": "1dcdf4c05f0685b9cac061c9ea9d7f5b6822cde3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private void flattenDependency(List flattenedList, String fullTargetName)          throws ConfigException", "signatureAfterChange": "     private void flattenDependency(List flattenedList, String fullTargetName)          throws ConfigException", "diff": ["-        String fullProjectName = getFullProjectName(fullTargetName);", "-        Target target = getRefTarget(fullTargetName);", "-        if (target == null) {", "-            throw new ConfigException(\"Target \" + fullTargetName", "-                 + \" does not exist\");", "-        }", "-        for (Iterator i = target.getDependencies(); i.hasNext(); ) {", "-            String localDependencyName = (String)i.next();", "-            String fullDependencyName", "-                 = fullProjectName == null ? localDependencyName", "-                 : fullProjectName + REF_DELIMITER + localDependencyName;", "-            flattenDependency(flattenedList, fullDependencyName);", "-            flattenedList.add(fullDependencyName);", "+        try {", "+            String fullProjectName = getFullProjectName(fullTargetName);", "+            Target target = getRefTarget(fullTargetName);", "+            if (target == null) {", "+                throw new ConfigException(\"Target \" + fullTargetName", "+                     + \" does not exist\");", "+            }", "+            for (Iterator i = target.getDependencies(); i.hasNext(); ) {", "+                String localDependencyName = (String)i.next();", "+                String fullDependencyName", "+                     = fullProjectName == null ? localDependencyName", "+                     : fullProjectName + REF_DELIMITER + localDependencyName;", "+                flattenDependency(flattenedList, fullDependencyName);", "+                flattenedList.add(fullDependencyName);", "+            }", "+        } catch (ModelException e) {", "+            throw new ConfigException(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6232a5911255919d5fb8833df89b24c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessageBySftp.java", "commitBeforeChange": "9ffa99a029f6a0d02374c8705d2db32b23731779", "commitAfterChange": "fd126ea83074cffca634b5e6ef2ae80844ff7695", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void doMultipleTransfer() throws IOException, JSchException", "signatureAfterChange": "      private void doMultipleTransfer() throws IOException, JSchException", "diff": ["+                try {", "+                    channel.stat(remotePath);", "+                } catch (SftpException e) {", "+                    if (e.id == ChannelSftp.SSH_FX_NO_SUCH_FILE) {", "+                        // dir does not exist.", "+                        channel.mkdir(remotePath);", "+                    } else {", "+                        throw new JSchException(\"failed to access remote dir '\"", "+                                                + remotePath + \"'\", e);", "+                    }", "+                }", "-                JSchException schException = new JSchException(\"Could not CD to '\" + remotePath + \"' - \" + e.toString());", "-                schException.initCause(e);", "-                throw schException;", "+                throw new JSchException(\"Could not CD to '\" + remotePath", "+                                        + \"' - \" + e.toString(), e);", "+            Directory current = null;", "-                    Directory current = (Directory) i.next();", "-                    if(getVerbose()) {", "+                    current = (Directory) i.next();", "+                    if (getVerbose()) {", "-                JSchException schException = new JSchException(e.toString());", "-                schException.initCause(e);", "-                throw schException;", "+                String msg = \"Error sending directory\";", "+                if (current != null && current.getDirectory() != null) {", "+                    msg += \" '\" + current.getDirectory().getName() + \"'\";", "+                }", "+                throw new JSchException(msg, e);"]}]}