{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f02ac2e1f36c30312a6564068c1ae140", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce872dcb338903595d4c06b4305409f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "d90686a9a82bf54d19f1cad9e7cca0aeae46c4aa", "commitAfterChange": "96e6561e659a24f1e2122d884e83561327cb0f48", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["-        Element currentTest = (Element) testElements.get(test);", "-        ", "-        if (currentTest == null) {", "+        if (!testStarts.containsKey(test)) {", "+        }", "+", "+        Element currentTest = null;", "+        if (!failedTests.containsKey(test)) {", "+            currentTest = doc.createElement(TESTCASE);", "+            currentTest.setAttribute(ATTR_NAME, ", "+                                     JUnitVersionHelper.getTestCaseName(test));", "+            rootElement.appendChild(currentTest);", "+            testElements.put(test, currentTest);", "+        } else {", "-        ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e653d871a22db274adf87bf8c64397e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/formatter/XMLFormatter.java", "commitBeforeChange": "a8965dadded68e9618a8421f64433745011fc62d", "commitAfterChange": "cbf1a178e3f594dd79291e6de776141e55fc3eb7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void onTestStarted(String testname)", "signatureAfterChange": "      public void onTestStarted(TestRunEvent evt)", "diff": ["-    public void onTestStarted(String testname) {", "+    public void onTestStarted(TestRunEvent evt) {", "-        testStarts.put(testname, new Long(System.currentTimeMillis()));", "+        testStarts.put(evt.getName(), evt);", "-        currentTest.setAttribute(ATTR_NAME, testname);", "+        currentTest.setAttribute(ATTR_NAME, evt.getName());", "-        testElements.put(testname, currentTest);", "-        super.onTestStarted(testname);", "+        testElements.put(evt.getName(), currentTest);", "+        super.onTestStarted(evt);", "+        removeEvent(evt);"]}]}