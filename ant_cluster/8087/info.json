{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b98d43d7c465526222e34bc4b708e56c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b44f6a43599474cd8e40bb16b99cde9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "5151a3152de887e4dccf485a437dea64cc49afa3", "commitAfterChange": "ed7685cd6f28da8710ca2209e711d9c644a4d053", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Object createdTypedObject( final String name,                                        final Class type )         throws ConfigurationException", "signatureAfterChange": "     private Object createdTypedObject( final String name,                                        final Class type )         throws ConfigurationException", "diff": ["-     */", "-    private Object createdTypedObject( final String name,", "-                                       final Class type )", "-        throws ConfigurationException", "-    {", "-        try", "-        {", "-            return type.newInstance();", "-        }", "-        catch( final Exception e )", "-        {", "-            final String message =", "-                REZ.getString( \"create-object.error\",", "-                               type.getName() );", "-            throw new ConfigurationException( message, e );", "-        }", "-    }", "+     */", "+    private Object createdTypedObject( final String name,", "+                                       final Class type )", "+        throws ConfigurationException", "+    {", "+        final TypeFactory factory = getTypeFactory( type.getName() );", "+        try", "+        {", "+            return factory.create( name );", "+        }", "+        catch( final Exception e )", "+        {", "+            final String message =", "+                REZ.getString( \"create-typed-object.error\",", "+                               name,", "+                               type.getName() );", "+            throw new ConfigurationException( message, e );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ab26643ae49ab61a276fcaea8cbfd9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void setReference( final ConfigurationState state,                                final String refName,                                final String unresolvedId,                                final Context context )         throws Exception", "signatureAfterChange": "     private void setReference( final ConfigurationState state,                                final String refName,                                final String unresolvedId,                                final Context context )         throws Exception", "diff": ["-        Object id = PropertyUtil.resolveProperty( unresolvedId, context, false );", "+        String id = context.resolveValue( unresolvedId ).toString();", "-        Object ref = null;", "-        try", "-        {", "-            ref = context.get( id );", "-        }", "-        catch( final ContextException e )", "+        Object ref = context.getProperty( id );", "+        if( ref == null )", "-            throw new ConfigurationException( message, e );", "+            throw new ConfigurationException( message );", "-        // Check the types", "+        // Convert the object, if necessary", "-            final String message = REZ.getString( \"mismatch-ref-types.error\", id, type.getName(), ref.getClass().getName() );", "-            throw new ConfigurationException( message );", "+            try", "+            {", "+                ref = m_converter.convert( type, ref, context );", "+            }", "+            catch( ConverterException e )", "+            {", "+                final String message = REZ.getString( \"mismatch-ref-types.error\", id, name );", "+                throw new ConfigurationException( message, e );", "+            }"]}]}