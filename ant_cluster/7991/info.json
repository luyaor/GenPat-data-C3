{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f8f9221e09c8b8496b8fe2191ba2f8f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dae20ce7ffed8f37ce52f52ea8a9acb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "commitAfterChange": "cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,                                                             ResourceCollection source,                                                             FileNameMapper mapper,                                                             ResourceFactory targets,                                                             long granularity)", "signatureAfterChange": "     public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,                                                             ResourceCollection source,                                                             FileNameMapper mapper,                                                             ResourceFactory targets,                                                             final long granularity)", "diff": ["-                                                            long granularity) {", "+                                                            final long granularity) {", "-            Resource sr = (Resource) iter.next();", "+            final Resource sr = (Resource) iter.next();", "-            r.add(new And(new ResourceSelector[] {Type.FILE, new Or(", "-                new ResourceSelector[] {NOT_EXISTS, new Outdated(sr, granularity)})}));", "+            r.add(new ResourceSelector() {", "+                public boolean isSelected(Resource target) {", "+                    /* Extra I/O, probably wasted:", "+                    if (target.isDirectory()) {", "+                        return false;", "+                    }", "+                     */", "+                    return SelectorUtils.isOutOfDate(sr, target, granularity);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc6f3c0f38f4b9015fe15369c32453b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/EjbcHelper.java", "commitBeforeChange": "205151486acb02a98f17a73c8367302d53fb56b8", "commitAfterChange": "34b083983d52d1bc7eaf31b312924fdf83a76b07", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "                 private void process() throws Exception", "diff": ["-     */", "-    public void execute() throws BuildException {", "-        try {", "-            String manifest = \"Manifest-Version: 1.0\\n\\n\";", "-            for (int i = 0; i < descriptors.length; ++i) {", "-                String descriptorName = descriptors[i];", "-                File descriptorFile = new File(descriptorDirectory, descriptorName);", "-                ", "-                if (isRegenRequired(descriptorFile)) {", "-                    ejbcTask.log(\"Running ejbc for \" + descriptorFile.getName(), Project.MSG_INFO);", "-                    regenerateSupportClasses(descriptorFile);", "-                }", "-                else {", "-                    ejbcTask.log(descriptorFile.getName() + \" is up to date\", Project.MSG_VERBOSE);", "-                }", "-                manifest += \"Name: \" + descriptorFile.getName() + \"\\nEnterprise-Bean: True\\n\\n\";", "-            }", "-            ", "-            FileWriter fw = new FileWriter(manifestFile);", "-            PrintWriter pw = new PrintWriter(fw);", "-            pw.print(manifest);", "-            fw.flush();", "-            fw.close();", "-        }", "-        catch (IOException e) {", "-            throw new BuildException(e);", "+     */            ", "+    private void process() throws Exception {", "+        String manifest = \"Manifest-Version: 1.0\\n\\n\";", "+        for (int i = 0; i < descriptors.length; ++i) {", "+            String descriptorName = descriptors[i];", "+            File descriptorFile = new File(descriptorDirectory, descriptorName);", "+            ", "+            if (isRegenRequired(descriptorFile)) {", "+                System.out.println(\"Running ejbc for \" + descriptorFile.getName());", "+                regenerateSupportClasses(descriptorFile);", "+            }", "+            else {", "+                System.out.println(descriptorFile.getName() + \" is up to date\");", "+            }", "+            manifest += \"Name: \" + descriptorFile.getName() + \"\\nEnterprise-Bean: True\\n\\n\";", "+        }", "+        ", "+        FileWriter fw = new FileWriter(manifestFile);", "+        PrintWriter pw = new PrintWriter(fw);", "+        pw.print(manifest);", "+        fw.flush();", "+        fw.close();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02b71912261a5ebbd9a43b53d649cac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/URLResource.java", "commitBeforeChange": "ad72b9a92036b02e00cf28740c27322a93256328", "commitAfterChange": "c89d650a9c8fdac5fd5cc71a5fd6dbfd48cc893b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public synchronized long getSize()", "signatureAfterChange": "     public synchronized long getSize()", "diff": ["-        try {", "-            connect();", "-            long contentlength = conn.getContentLength();", "-            close();", "-            return contentlength;", "-        } catch (IOException e) {", "-            return UNKNOWN_SIZE;", "-        }", "+        return withConnection(new ConnectionUser() {", "+                public long useConnection(URLConnection c) {", "+                    return conn.getContentLength();", "+                }", "+            }, UNKNOWN_SIZE);"]}]}