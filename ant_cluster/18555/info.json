{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34f2ada38b5317edb042568fb86eb64b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863911150e86a6bbefb19840eda9c7e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "8036bb0ebf115113a2a8f21a32071e74a61cc2c6", "commitAfterChange": "1c204914d03e9bc53afb4ebf3c56a0181c10ab51", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "signatureAfterChange": "      private ExecutionFrame createExecutionFrame( final Project project )         throws TaskException", "diff": ["+", "-        componentManager.put( TypeManager.ROLE, m_typeManager.createChildTypeManager() );", "+        final TypeManager typeManager = m_typeManager.createChildTypeManager();", "+        componentManager.put( TypeManager.ROLE, typeManager );", "+", "+        //We need to create a new deployer so that it deploys", "+        //to project specific TypeManager", "+        final DefaultDeployer deployer = new DefaultDeployer();", "+        deployer.setLogger( getLogger() );", "+", "+        try { deployer.compose( componentManager ); }", "+        catch( final ComponentException ce )", "+        {", "+            throw new TaskException( \"Error configuring deployer\", ce );", "+        }", "+", "+        //HACK: Didn't call initialize because Deployer contained in Embeddor", "+        // Already initialized and this would be reduendent", "+        //deployer.initialize();", "+", "+        componentManager.put( Deployer.ROLE, deployer );", "+", "+        deployTypeLib( deployer, project );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e45412e3f1a0e3f85ae409a6faae1d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "abf343291206f3cab8b3436214cc0a88efefcb25", "commitAfterChange": "2bbb06868a89e9390959ec3dd4b3b8eca8a40b95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void send()", "signatureAfterChange": "   public void send()", "diff": ["+            if (SSL) {", "+                try {", "+                    java.security.Provider p=(java.security.Provider)Class.forName( \"com.sun.net.ssl.internal.ssl.Provider\").newInstance();", "+                    Security.addProvider(p);", "+                }", "+                catch (Exception e) {", "+                    throw new BuildException(\"could not instantiate ssl security provider, check that you have JSSE in your classpath\");", "+                }", "+                final String SSL_FACTORY = \"javax.net.ssl.SSLSocketFactory\";", "+                // SMTP provider", "+                props.put( \"mail.smtp.socketFactory.class\", SSL_FACTORY);", "+                props.put( \"mail.smtp.socketFactory.fallback\", \"false\");", "+            }", "-"]}]}