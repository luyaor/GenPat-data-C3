{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0b8e33e1caf152a38b9971113bb6b08", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40da3162e7382040d0a3f681c024816c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "0c0cce9b347197a30e691c02e10a8ef735d99d1a", "commitAfterChange": "7b485798bb427b8b829c276c0fe0758827cc2616", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+                File file = project.resolveFile(xslFile, baseDir);", "-                styleSheetLastModified = xslFile.lastModified();", "-                log( \"Loading stylesheet \" + xslFile, Project.MSG_INFO);", "-                liaison.setStylesheet( xslFile.toString() );", "+                styleSheetLastModified = file.lastModified();", "+                log( \"Loading stylesheet \" + file, Project.MSG_INFO);", "+                liaison.setStylesheet( file.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629ae08c16c77fb19a19b14ebecf55c8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/vfs/impl/DefaultFileSystemManager.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public FileObject resolveFile( final FileObject baseFile, final String uri )         throws FileSystemException", "signatureAfterChange": "     public FileObject resolveFile( final FileObject baseFile, final String uri )         throws FileSystemException", "diff": ["-                return provider.findFile( uri );", "+                return provider.findFile( baseFile, uri );", "+        // Decode the URI (remove %nn encodings)", "+        final String decodedUri = UriParser.decode( uri );", "+", "-        if( m_localFileProvider.isAbsoluteLocalName( uri ) )", "+        if( m_localFileProvider.isAbsoluteLocalName( decodedUri ) )", "-            return m_localFileProvider.findLocalFile( uri );", "+            return m_localFileProvider.findLocalFile( decodedUri );", "-        return baseFile.resolveFile( uri );", "+        return baseFile.resolveFile( decodedUri );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c8dcfae08324235fd8a0b46d181ab6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/XMLFormatter.java", "commitBeforeChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "commitAfterChange": "8c68d4864950b4f5fa519753d19301cf84bf91bd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void onTestStarted(TestRunEvent evt)", "signatureAfterChange": "      public void onTestStarted(TestRunEvent evt)", "diff": ["-        if ( !suiteName.equals(lastSuiteElement.getAttribute(\"name\")) ){", "+        String lastSuiteName = lastSuiteElement.getAttribute(ATTR_PACKAGE)", "+                + \".\" + lastSuiteElement.getAttribute(ATTR_NAME);", "+        if ( !suiteName.equals(lastSuiteName) ){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8b31b6b26d660cf03870c5676d18c9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "a500ff1e5013cbbb7830d5b47fa24dc4db1bc400", "commitAfterChange": "bcf84f5f14a9f80df80ca5836fc5b08d8be7c295", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static File getToolsJar()", "signatureAfterChange": "     public static File getToolsJar()", "diff": ["+        String libToolsJar= File.separator + \"lib\" + File.separator + \"tools.jar\";", "-        File toolsJar = new File(javaHome + \"/lib/tools.jar\");", "+        File toolsJar = new File(javaHome + libToolsJar);", "-            toolsJar = new File(javaHome + \"/lib/tools.jar\");", "+            toolsJar = new File(javaHome + libToolsJar );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa2c2a6375e119ef045d83e143605aed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "a6e9a55f6531fd09bea8b85fde951833505dbe62", "commitAfterChange": "8d20a46835846d0ff4bf0bf2244c7d809832aa03", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        String enc = encoding == null ? \"default\" : encoding;", "-            + \" encoding=\" + (encoding == null ? \"default\" : encoding),", "+            + \" encoding=\" + enc", "+            + \" outputencoding=\"", "+            + (outputEncoding == null ? enc : outputEncoding),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c00b74d009db1b3f23c2c11ab2cc30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/DataType.java", "commitBeforeChange": "fcd9581d6121602489e491a92dea0109a186a274", "commitAfterChange": "e539f6378221559dd8f18f43ceb941801e9a9820", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void dieOnCircularReference(final Stack stack,                                           final Project project)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(final Stack stack,                                           final Project project)         throws BuildException", "diff": ["-            if (stack.contains(o)) {", "+            IdentityStack id = IdentityStack.getInstance(stack);", "+", "+            if (id.contains(o)) {", "-                stack.push(o);", "-                ((DataType) o).dieOnCircularReference(stack, project);", "-                stack.pop();", "+                id.push(o);", "+                ((DataType) o).dieOnCircularReference(id, project);", "+                id.pop();"]}]}