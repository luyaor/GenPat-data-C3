{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55ff92b04cafe63c15adf5a15f301fd9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d69d39d268600e93c5c457b47269c57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DefaultLogger.java", "commitBeforeChange": "affdc94099335f21a0e62be2256c9eaf16ad1e85", "commitAfterChange": "233ae85c5f835679681ece8d58a279b6bcf50550", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void messageLogged(BuildEvent event)", "signatureAfterChange": "     public void messageLogged(BuildEvent event)", "diff": ["-            // Print out the name of the task if we're in one", "-            if (event.getTask() != null) {", "+            if (event.getTask() != null && !emacsMode) {", "+                // Print out the name of the task if we're in one", "-", "-                if (!emacsMode) {", "-                    String label = \"[\" + name + \"] \";", "-                    int size = LEFT_COLUMN_SIZE - label.length();", "-                    for (int i = 0; i < size; i++) {", "-                        message.append(\" \");", "-                    }", "-                    message.append(label);", "+                String label = \"[\" + name + \"] \";", "+                int size = LEFT_COLUMN_SIZE - label.length();", "+                StringBuffer tmp = new StringBuffer(size);", "+                for (int i = 0; i < size; i++) {", "+                    tmp.append(\" \");", "+                tmp.append(label);", "+                label = tmp.toString();", "+", "+                StringTokenizer tok = new StringTokenizer(event.getMessage(),", "+                                                          \"\\r\\n\", false);", "+                boolean first = true;", "+                while (tok.hasMoreTokens()) {", "+                    if (!first) {", "+                        message.append(StringUtils.LINE_SEP);", "+                    }", "+                    first = false;", "+                    message.append(label);", "+                    message.append(tok.nextToken());", "+                }", "+", "+            } else {", "+                message.append(event.getMessage());", "-            message.append(event.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebbb2521670913413ba6ee656a76ef9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public void testSeldirs()", "signatureAfterChange": "     @Test     public void testSeldirs()", "diff": ["+    @Test", "-        ModifiedSelector s = (ModifiedSelector)getSelector();", "-        try {", "-            makeBed();", "-", "-            StringBuffer sbTrue  = new StringBuffer();", "-            StringBuffer sbFalse = new StringBuffer();", "-            for (int i=0; i<filenames.length; i++) {", "-                if (files[i].isDirectory()) {", "-                    sbTrue.append(\"T\");", "-                    sbFalse.append(\"F\");", "-                } else {", "-                    sbTrue.append(\"T\");", "-                    sbFalse.append(\"T\");", "-                }", "+        ModifiedSelector s = new ModifiedSelector();", "+        StringBuffer sbTrue  = new StringBuffer();", "+        StringBuffer sbFalse = new StringBuffer();", "+        for (int i=0; i<selectorRule.getFiles().length; i++) {", "+            if (selectorRule.getFiles()[i].isDirectory()) {", "+                sbTrue.append(\"T\");", "+                sbFalse.append(\"F\");", "+            } else {", "+                sbTrue.append(\"T\");", "+                sbFalse.append(\"T\");", "-", "-            s.setSeldirs(true);", "-            performTests(s, sbTrue.toString());", "-            s.getCache().delete();", "-", "-            s.setSeldirs(false);", "-            performTests(s, sbFalse.toString());", "-            s.getCache().delete();", "-", "-        } finally {", "-            cleanupBed();", "-            if (s!=null) s.getCache().delete();", "+", "+        s.setSeldirs(true);", "+        performTests(s, sbTrue.toString());", "+        s.getCache().delete();", "+", "+        s.setSeldirs(false);", "+        performTests(s, sbFalse.toString());", "+        s.getCache().delete();", "+", "+        s.getCache().delete();"]}]}