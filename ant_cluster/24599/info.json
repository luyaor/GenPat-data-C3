{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f3f010b6ab4122253244ae1f72b1d1e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04324ed0a89b05c8dc7c2f73845bc2ea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/builder/DefaultProjectBuilder.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Project build( final File projectFile )         throws IOException, AntException", "signatureAfterChange": "     public Project build( final File projectFile )         throws Exception", "diff": ["-        throws IOException, AntException", "+        throws Exception", "-        try", "-        {", "-            final String location = projectFile.getCanonicalFile().toString();", "-            final Configuration configuration = buildConfiguration( location );", "-            return build( projectFile, configuration );", "-        }", "-        catch( final ConfigurationException ce )", "-        {", "-            throw new AntException( \"ConfigurationException: \" + ce.getMessage(), ce );", "-        }", "-    }", "+        final String location = projectFile.getCanonicalFile().toString();", "+        final Configuration configuration = (Configuration)m_builder.buildFromFile( location );", "+        return build( projectFile, configuration );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c8d34a88ef14366095571d1bf42d347", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void stdin()", "signatureAfterChange": "      private void stdin() throws IOException", "diff": ["-", "-    private void stdin() {", "-            System.setIn(new FileInputStream(", "-                getProject().resolveFile(\"input.stdin\")));", "-        } catch (Exception e) {", "-            throw e instanceof RuntimeException", "-                ? (RuntimeException) e : new RuntimeException(e.getMessage());", "+", "+    private void stdin() throws IOException {", "+        System.setIn(new FileInputStream(buildRule.getProject().resolveFile(\"input.stdin\")));"]}]}