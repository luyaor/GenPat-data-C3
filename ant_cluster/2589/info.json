{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49929b299b9135935c1bbe7291c856dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64cfd4baa3b4e667502985a6f4be7761", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/aut/vfs/AbstractFileSystemTest.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testChildName() throws Exception", "signatureAfterChange": "     public void testChildName() throws Exception", "diff": ["-        FileName baseName = m_baseFolder.getName();", "-        String basePath = baseName.getPath();", "-        FileName name = baseName.resolveName( \"some-child\", NameScope.CHILD );", "+        final FileName baseName = m_baseFolder.getName();", "+        final String basePath = baseName.getPath();", "+        final FileName name = baseName.resolveName( \"some-child\", NameScope.CHILD );", "-        try", "-        {", "-            name.resolveName( \"a/b\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }", "+        assertBadName( name, \"a/b\", NameScope.CHILD );", "-        // Try using a empty name to find a child", "-        try", "-        {", "-            name.resolveName( \"\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }", "+        // Check other invalid names", "+        checkDescendentNames( name, NameScope.CHILD );", "+    }", "-        // Try using '.' to find a child", "-        try", "-        {", "-            name.resolveName( \".\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }", "-        // Try using '..' to find a child", "-        try", "-        {", "-            name.resolveName( \"..\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a65dc96f65b014cf18e2a43403de4315", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/aut/vfs/AbstractFileSystemTest.java", "commitBeforeChange": "b6ed0b49348d6e8f820f4e5590bd71782c111976", "commitAfterChange": "5b48abc10df6339a4114a4135fdab2b38b9252bd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testChildName() throws Exception", "signatureAfterChange": "     public void testChildName() throws Exception", "diff": ["-        FileName baseName = m_baseFolder.getName();", "-        String basePath = baseName.getPath();", "-        FileName name = baseName.resolveName( \"some-child\", NameScope.CHILD );", "+        final FileName baseName = m_baseFolder.getName();", "+        final String basePath = baseName.getPath();", "+        final FileName name = baseName.resolveName( \"some-child\", NameScope.CHILD );", "-        try", "-        {", "-            name.resolveName( \"a/b\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }", "+        assertBadName( name, \"a/b\", NameScope.CHILD );", "-        // Try using a empty name to find a child", "-        try", "-        {", "-            name.resolveName( \"\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }", "+        // Check other invalid names", "+        checkDescendentNames( name, NameScope.CHILD );", "+    }", "-        // Try using '.' to find a child", "-        try", "-        {", "-            name.resolveName( \".\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }", "-        // Try using '..' to find a child", "-        try", "-        {", "-            name.resolveName( \"..\", NameScope.CHILD );", "-            assertTrue( false );", "-        }", "-        catch( FileSystemException e )", "-        {", "-        }"]}]}