{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac85c6aa45febf8a697a0193f7a69bda", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19d1a8ee24e186889631044db3a0964a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ConcatFilter.java", "commitBeforeChange": "71be9bc2d672d09173a5d47a4acd18c18186ac37", "commitAfterChange": "d1bc937f76bfe650c3c2a530e848140cadedd785", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void initialize() throws IOException", "signatureAfterChange": "     private void initialize() throws IOException", "diff": ["-                if (\"before\".equals(params[i].getName())) {", "-                    setBefore(new File(params[i].getValue()));", "+                if (\"prepend\".equals(params[i].getName())) {", "+                    setPrepend(new File(params[i].getValue()));", "-                if (\"after\".equals(params[i].getName())) {", "-                    setAfter(new File(params[i].getValue()));", "+                if (\"append\".equals(params[i].getName())) {", "+                    setAppend(new File(params[i].getValue()));", "-        if (before != null) {", "-            if (!before.isAbsolute()) {", "-                before = new File(getProject().getBaseDir(), before.getPath());", "+        if (prepend != null) {", "+            if (!prepend.isAbsolute()) {", "+                prepend = new File(getProject().getBaseDir(), prepend.getPath());", "-            beforeReader = new BufferedReader(new FileReader(before));", "+            prependReader = new BufferedReader(new FileReader(prepend));", "-        if (after != null) {", "-            if (!after.isAbsolute()) {", "-                after = new File(getProject().getBaseDir(), after.getPath());", "+        if (append != null) {", "+            if (!append.isAbsolute()) {", "+                append = new File(getProject().getBaseDir(), append.getPath());", "-            afterReader = new BufferedReader(new FileReader(after));", "+            appendReader = new BufferedReader(new FileReader(append));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7a40ffc1931f7a00cc53956f0fdb24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "de47901582d1675358fd4b55e68c0fdc241dfd53", "commitAfterChange": "b5b99c769a21d3602ee35948cf004925f03464ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            //Aside, the JDK is clearly unaware of the scottish 'session', which", "-            //involves excessive quantities of alcohol :-)", "+            // Aside, the JDK is clearly unaware of the scottish", "+            // 'session', which //involves excessive quantities of", "+            // alcohol :-)", "-                msg.setFrom( new InternetAddress( from.getAddress(), from.getName() ) );", "+                msg.setFrom( new InternetAddress( from.getAddress(), ", "+                                                  from.getName() ) );", "-            msg.setRecipients( Message.RecipientType.TO, internetAddresses( toList ) );", "-            msg.setRecipients( Message.RecipientType.CC, internetAddresses( ccList ) );", "-            msg.setRecipients( Message.RecipientType.BCC, internetAddresses( bccList ) );", "+            msg.setRecipients( Message.RecipientType.TO, ", "+                               internetAddresses( toList ) );", "+            msg.setRecipients( Message.RecipientType.CC, ", "+                               internetAddresses( ccList ) );", "+            msg.setRecipients( Message.RecipientType.BCC, ", "+                               internetAddresses( bccList ) );", "-                                              + \"\\\" does not exist or is not readable.\" );", "+                                              + \"\\\" does not exist or is not \"", "+                                              + \"readable.\" );"]}]}