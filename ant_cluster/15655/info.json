{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65d3f9624ac6bf12ae5eff930bb6b289", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b46c52ad0c183fa0d0ac14553208af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/util/FileUtils.java", "commitBeforeChange": "6a20789293e6588a94560a11697fb59dd0d9338c", "commitAfterChange": "d319ab594b9d0b5a3a2ee264845172ca590496f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static String[] translateCommandline( Path to_process )         throws TaskException", "signatureAfterChange": "      public static String[] translateCommandline( final String to_process )         throws TaskException", "diff": ["-    public static String[] translateCommandline( Path to_process )", "-        throws TaskException", "-    {", "-        return translateCommandline( to_process.toString() );", "-    }", "+    public static String[] translateCommandline( final String to_process )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8f1b1698cf5db9be51e5a3dbae4fe5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/AggregateTransformer.java", "commitBeforeChange": "f274a4b1ad577013835b77ba608c546847cd063c", "commitAfterChange": "e7734def8b0961af37c37eb1964a7e9ffdd052ca", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void transform() throws BuildException", "signatureAfterChange": "     public void transform() throws BuildException", "diff": ["+     */", "+        Project project = task.getProject();", "+", "+        TempFile tempFileTask = new TempFile();", "+        tempFileTask.bindToOwner(task);", "+        String tempFileProperty = getClass().getName() + String.valueOf(counter++);", "+        File tmp = FILE_UTILS.resolveFile(project.getBaseDir(),", "+                project.getProperty(\"java.io.tmpdir\"));", "+        tempFileTask.setDestDir(tmp);", "+        tempFileTask.setProperty(tempFileProperty);", "+        tempFileTask.execute();", "+", "+        XSLTProcess xsltTask = new XSLTProcess();", "+        xsltTask.bindToOwner(task);", "+", "+        xsltTask.addConfigured(getStylesheet());", "+        // acrobatic cast.", "+        xsltTask.setIn(((XMLResultAggregator) task).getDestinationFile());", "+        File dummyFile = new File(project.getProperty(tempFileProperty));", "+        xsltTask.setOut(dummyFile);", "+        for (Iterator i = params.iterator(); i.hasNext();) {", "+            XSLTProcess.Param param = (XSLTProcess.Param) i.next();", "+            XSLTProcess.Param newParam = xsltTask.createParam();", "+            newParam.setProject(task.getProject());", "+            newParam.setName(param.getName());", "+            newParam.setExpression(param.getExpression());", "+        }", "+        XSLTProcess.Param paramx = xsltTask.createParam();", "+        paramx.setProject(task.getProject());", "+        paramx.setName(\"output.dir\");", "+        paramx.setExpression(toDir.getAbsolutePath());", "-        XalanExecutor executor = XalanExecutor.newInstance(this);", "-            executor.execute();", "+            xsltTask.execute();", "-                + e.getMessage(), e);", "+                    + e.getMessage(), e);", "+        Delete delete = new Delete();", "+        delete.bindToOwner(task);", "+        delete.setFile(dummyFile);", "+        delete.execute();"]}]}