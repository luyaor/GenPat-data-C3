{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a20c9341051feb934e4055dc5ad9222", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8356d4222637e5e600f1d2f6d352eda2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "0777fa853af3a619d777adaead96e9c0d1aff291", "commitAfterChange": "5061e731c3919a7236bdcdd2ad9965d384313e26", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setTablength(int tlength) throws BuildException", "signatureAfterChange": "     public void setTablength(int tlength) throws BuildException", "diff": ["-        if (tlength < 2 || tlength > 80) {", "-            throw new BuildException(\"tablength must be between 2 and 80\",", "-                                     getLocation());", "+        try {", "+            filter.setTablength(tlength);", "+        } catch (IOException e) {", "+            throw new BuildException(e);", "-        tablength = tlength;", "-        StringBuffer sp = new StringBuffer();", "-        for (int i = 0; i < tablength; i++) {", "-            sp.append(' ');", "-        }", "-        spaces = sp.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a5500cd9ffb4a51e52409f843c42ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DOMElementWriter.java", "commitBeforeChange": "c098b9c80d5ef451dfd683510c9f6c28489a8685", "commitAfterChange": "313479bb3569061c2598d90274930c4957d36364", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public String encodedata(final String value)", "signatureAfterChange": "     public String encodedata(final String value)", "diff": ["+        final StringWriter out = new StringWriter();", "+        try {", "+            encodedata(out, value);", "+        } catch (IOException ex) {", "+            throw new RuntimeException(ex);", "+        }", "+        return out.toString();", "+    }", "-        StringBuffer sb = new StringBuffer(len);", "-        for (int i = 0; i < len; ++i) {", "-            final char c = value.charAt(i);", "-            if (isLegalCharacter(c)) {", "-                sb.append(c);", "-", "-        return sb.substring(0).replace(\"]]>\", \"]]]]><![CDATA[>\");"]}]}