{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "152e6d8ddccb8aebf2c59b2c788a54c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "075785d671390376cbef952b15b1b5e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "35cadddc9862a72009a774f7d5939b338b434e60", "commitAfterChange": "4c69b551ec82319466630d5d268e4b840cd0b909", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void positionAtCentralDirectory()         throws IOException", "signatureAfterChange": "     private void positionAtCentralDirectory()         throws IOException", "diff": ["-                if (curr == sig[0]) {", "+                if (curr == sig[POS_0]) {", "-                    if (curr == sig[1]) {", "+                    if (curr == sig[POS_1]) {", "-                        if (curr == sig[SHORT]) {", "+                        if (curr == sig[POS_2]) {", "-                            if (curr == sig[3]) {", "+                            if (curr == sig[POS_3]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bf7bf65473b3f70653ae30e29be04dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/antlib/AntLibFactory.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     Converter createConverter(Class converterClass)          throws InstantiationException, IllegalAccessException,         ExecutionException;", "signatureAfterChange": "     Object createInstance(Class requiredClass)          throws InstantiationException, IllegalAccessException,         ExecutionException;", "diff": ["-    Converter createConverter(Class converterClass)", "+    Object createInstance(Class requiredClass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7067c9a7ce13868f6b95cc93b10a88d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "9d30d3cd2ada1f4ee9800274f0dbb4d898a73344", "commitAfterChange": "f3e4a4790e917dbb1ba838de047c6826810e09b9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public static byte[] decodeHex(char[] data) throws BuildException", "signatureAfterChange": "     public static byte[] decodeHex(char[] data) throws BuildException", "diff": ["-            int f = Character.digit(data[j++], 16) << 4;", "-            f = f | Character.digit(data[j++], 16);", "-            out[i] = (byte) (f & 0xFF);", "+            int f = Character.digit(data[j++], WORD) << NIBBLE;", "+            f = f | Character.digit(data[j++], WORD);", "+            out[i] = (byte) (f & BYTE_MASK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb9e6dc4289f1a2569283ae77b115cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TypeSelector.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["-                    FileType type = new FileType();", "-                    type.setValue(parameters[i].getValue());", "-                    setType(type);", "+                    FileType t = new FileType();", "+                    t.setValue(parameters[i].getValue());", "+                    setType(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af8f66906c237fbc07057c3bcf0c3ae7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/antlib/StandardLibFactory.java", "commitBeforeChange": "83dc385bd01fbc8ee2fb166b9a5605bdc6958d76", "commitAfterChange": "bf844382c856f7b51c56024189c93f11d34cb720", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Object createTypeInstance(Class typeClass, String localName)          throws InstantiationException, IllegalAccessException,         ExecutionException", "signatureAfterChange": "     public Object createComponent(Class componentClass, String localName)          throws InstantiationException, IllegalAccessException,         ExecutionException", "diff": ["+    public Object createComponent(Class componentClass, String localName)", "-     */", "-    public Object createTypeInstance(Class typeClass, String localName)", "-         throws InstantiationException, IllegalAccessException,", "-        ExecutionException {", "-        return typeClass.newInstance();", "+        return componentClass.newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2aaf78bdfd73c4358d5477e93d409a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "9dfd03133bf2e960f2eedf76f8292e1c7ba6bdfb", "commitAfterChange": "36012960a97b8415ce6bc7e03a4cb64ffabc4d68", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void createFolders(File file) throws IOException, ParseException", "signatureAfterChange": "     private void createFolders(File file) throws IOException, ParseException", "diff": ["-                if (line.startsWith(\"\\\"\\\\\")", "-                    || line.startsWith(\"\\\"/\")", "-                    || (line.length() > 3 && line.startsWith(\"\\\"\")", "-                        && Character.isLetter(line.charAt(1))", "-                        && String.valueOf(line.charAt(2)).equals(\":\")", "-                        && String.valueOf(line.charAt(3)).equals(\"\\\\\"))) {", "+                if (line.startsWith(\"\\\"\\\\\")    // Checking for \"\\", "+                    || line.startsWith(\"\\\"/\")  // or           \"/", "+                                               // or           \"X:\\...", "+                   || (line.length() > POS_3 && line.startsWith(\"\\\"\")", "+                        && Character.isLetter(line.charAt(POS_1))", "+                        && String.valueOf(line.charAt(POS_2)).equals(\":\")", "+                        && String.valueOf(line.charAt(POS_3)).equals(\"\\\\\"))) {"]}]}