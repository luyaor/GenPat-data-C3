{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c83b2b183fdc642738b09eaa0f3e1206", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "120243f6ee551ec9223b7125cf554097", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java", "commitBeforeChange": "53e10e20aac4b698e94c9b2ab2881c9ece495d13", "commitAfterChange": "24f9da26b52d675f4b7c2ab79167a04647e243ee", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "      private void compareFiles(FTP.FTPDirectoryScanner ds, String[] expectedFiles,                               String[] expectedDirectories)", "signatureAfterChange": "      private void compareFiles(DirectoryScanner ds, String[] expectedFiles,                               String[] expectedDirectories)", "diff": ["-    private void compareFiles(FTP.FTPDirectoryScanner ds, String[] expectedFiles,", "+    private void compareFiles(DirectoryScanner ds, String[] expectedFiles,", "-        TreeSet files = new TreeSet();", "-            files.add(includedFiles[counter].replace(File.separatorChar, '/'));", "+            includedFiles[counter] = includedFiles[counter].replace(File.separatorChar, '/');", "-        TreeSet directories = new TreeSet();", "+        Arrays.sort(includedFiles);", "-            directories.add(includedDirectories[counter]", "-                            .replace(File.separatorChar, '/'));", "+            includedDirectories[counter] = includedDirectories[counter]", "+                            .replace(File.separatorChar, '/');", "-", "-        String currentfile;", "-        Iterator i = files.iterator();", "-        int counter = 0;", "-        while (i.hasNext()) {", "-            currentfile = (String) i.next();", "-            assertEquals(expectedFiles[counter], currentfile);", "-            counter++;", "+        Arrays.sort(includedDirectories);", "+        for (int counter=0; counter < includedFiles.length; counter++) {", "+            assertEquals(expectedFiles[counter], includedFiles[counter]);", "-        String currentdirectory;", "-        Iterator dirit = directories.iterator();", "-        counter = 0;", "-        while (dirit.hasNext()) {", "-            currentdirectory = (String) dirit.next();", "-            assertEquals(expectedDirectories[counter], currentdirectory);", "+        for (int counter=0; counter < includedDirectories.length; counter++) {", "+            assertEquals(expectedDirectories[counter], includedDirectories[counter]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27ce641251bd03904119894c1ff902a8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/DotnetResource.java", "commitBeforeChange": "c5d224e2fabd860332b84182429505a5f2a2ee54", "commitAfterChange": "6f8402d926c54252e54ac79efa3f5480ab7323c3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public String getCSharpStyleParameter()", "signatureAfterChange": "     public void getParameters(Project p, NetCommand command, boolean csharpStyle)", "diff": ["-    public String getCSharpStyleParameter() {", "-        StringBuffer buffer = new StringBuffer();", "-        buffer.append(isEmbed() ? \"/resource\" : \"/linkresource\");", "-        buffer.append(':');", "-        buffer.append(getFile().toString());", "-        if (getName() != null) {", "-            buffer.append(',');", "-            buffer.append(getName());", "+    public void getParameters(Project p, NetCommand command, boolean csharpStyle) {", "+        checkParameters();", "+        if (hasFilesets()) {", "+            for (Iterator listIter=fileSets.iterator(); listIter.hasNext();) {", "+                FileSet fs=(FileSet)listIter.next();;", "+                String baseDirectory=fs.getDir(p).toString();", "+                String namespace=getNamespace(); // ends with '.' or null", "+                DirectoryScanner ds = fs.getDirectoryScanner(p);", "+                String[] files = ds.getIncludedFiles();", "+                for (int i=0; i<files.length; i++) {", "+                    String file=files[i];", "+                    command.addArgument(getParameter(baseDirectory+File.separatorChar+file, (namespace==null ? null : namespace+file.replace(File.separatorChar, '.')), csharpStyle));", "+                }", "+            }", "-        if (getPublic() != null) {", "-            throw new BuildException(\"This compiler does not support the \"", "-                    + \"public/private option.\");", "+        else {", "+            command.addArgument(getParameter(getFile().toString(), getName(),", "+                                             csharpStyle));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8eacdc9f33b89a6e187b3b5f137abf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJImport.java", "commitBeforeChange": "adb10aa72e51f837386530781d2845cdcba3f799", "commitAfterChange": "7cd7c4e5f82cbe8a3fe5d03b7c8ea871a523fdd1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void importFileset(FileSet fileset)", "signatureAfterChange": "     protected void importFileset(FileSet fileset)", "diff": ["-        DirectoryScanner ds = fileset.getDirectoryScanner(this.getProject());", "+        LocalDirectoryScanner ds = new LocalDirectoryScanner();", "+        fileset.setupDirectoryScanner(ds, this.getProject());", "-        String[] includes = null;", "-        String[] excludes = null;", "-", "-        // Hack to get includes and excludes. We could also use getIncludedFiles,", "-        // but that would result in very long HTTP-requests.", "-        // Therefore we want to send the patterns only to the remote tool server", "-        // and let him figure out the files.", "-        try {", "-            Class directoryScanner = ds.getClass();", "-", "-            Field includesField = directoryScanner.getDeclaredField(\"includes\");", "-            includesField.setAccessible(true);", "-            includes = (String[]) includesField.get(ds);", "-", "-            Field excludesField = directoryScanner.getDeclaredField(\"excludes\");", "-            excludesField.setAccessible(true);", "-            excludes = (String[]) excludesField.get(ds);", "-        } catch (NoSuchFieldException nsfe) {", "-            throw new BuildException(", "-                \"DirectoryScanner.includes or .excludes missing\" + nsfe.getMessage());", "-        } catch (IllegalAccessException iae) {", "-            throw new BuildException(", "-                \"Access to DirectoryScanner.includes or .excludes not allowed\");", "-        }", "+        String[] includes = ds.getIncludes();", "+        String[] excludes = ds.getExcludes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc14dc9ac350040363caf6be39febbf2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "b0f1f9cab707a5227a69d33ed613c5c988b00d4b", "commitAfterChange": "76c6de74b01f61acca8a153bf4dd38ce1926a248", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            DirectoryScanner ds = fs.getDirectoryScanner(project);", "-            String[] files = ds.getIncludedFiles();", "-            String[] dirs = ds.getIncludedDirectories();", "-            removeFiles(fs.getDir(project), files, dirs);", "+            try {", "+                DirectoryScanner ds = fs.getDirectoryScanner(project);", "+                String[] files = ds.getIncludedFiles();", "+                String[] dirs = ds.getIncludedDirectories();", "+                removeFiles(fs.getDir(project), files, dirs);", "+            } catch (BuildException be) {", "+                // directory doesn't exist or is not readable", "+                if (!quiet) {", "+                    throw be;", "+                } else {", "+                    log(be.getMessage(), Project.MSG_VERBOSE);", "+                }", "+            }", "-            DirectoryScanner ds = super.getDirectoryScanner(dir);", "-            String[] files = ds.getIncludedFiles();", "-            String[] dirs = ds.getIncludedDirectories();", "-            removeFiles(dir, files, dirs);", "+            try {", "+                DirectoryScanner ds = super.getDirectoryScanner(dir);", "+                String[] files = ds.getIncludedFiles();", "+                String[] dirs = ds.getIncludedDirectories();", "+                removeFiles(dir, files, dirs);", "+            } catch (BuildException be) {", "+                // directory doesn't exist or is not readable", "+                if (!quiet) {", "+                    throw be;", "+                } else {", "+                    log(be.getMessage(), Project.MSG_VERBOSE);", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2deef1261e421e72595ad69d5a2f781", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "df25e856f651d0652a66d861f44032368c78ebfb", "commitAfterChange": "30a41589b40d875b84d124885d566d3614e17079", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        validate();", "+        ", "+        // log options used", "+        String enc = encoding == null ? \"default\" : encoding;", "+        log(\"options:\"", "+            + \" eol=\" + filter.getEol().getValue()", "+            + \" tab=\" + filter.getTab().getValue()", "+            + \" eof=\" + filter.getEof().getValue()", "+            + \" tablength=\" + filter.getTablength()", "+            + \" encoding=\" + enc", "+            + \" outputencoding=\"", "+            + (outputEncoding == null ? enc : outputEncoding),", "+            Project.MSG_VERBOSE);", "+        DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "+        String[] files = ds.getIncludedFiles();", "+", "+        for (int i = 0; i < files.length; i++) {", "+            processFile(files[i]);", "+        }", "+    }", "-        // log options used", "-        String enc = encoding == null ? \"default\" : encoding;", "-        log(\"options:\"", "-            + \" eol=\" + filter.getEol().getValue()", "-            + \" tab=\" + filter.getTab().getValue()", "-            + \" eof=\" + filter.getEof().getValue()", "-            + \" tablength=\" + filter.getTablength()", "-            + \" encoding=\" + enc", "-            + \" outputencoding=\"", "-            + (outputEncoding == null ? enc : outputEncoding),", "-            Project.MSG_VERBOSE);", "-", "-        DirectoryScanner ds = super.getDirectoryScanner(srcDir);", "-        String[] files = ds.getIncludedFiles();", "-", "-        for (int i = 0; i < files.length; i++) {", "-            processFile(files[i]);", "-        }"]}]}