{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf92ad4c2e09a4d80ce473d39b6a9012", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309ff9150b4e7f4c892b4344d7c45dd7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-        configureObject( object, configuration, context );", "+        try", "+        {", "+            // Configure the object", "+            configureObject( object, configuration, context );", "+        }", "+        catch( final ReportableConfigurationException e )", "+        {", "+            // Already have a reasonable error message - so rethrow", "+            throw e.getCause();", "+        }", "+        catch( final Exception e )", "+        {", "+            // Wrap all other errors with general purpose error message", "+            final String message = REZ.getString( \"bad-configure-element.error\", configuration.getName() );", "+            throw new ConfigurationException( message, e );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c020b156c8257186c882fd3c3162e48f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Class getType()", "signatureAfterChange": "     public Object finishConfiguration( final ConfigurationState state )         throws ConfigurationException", "diff": ["-    public Class getType()", "-        return m_class;", "+     */", "+    public Object finishConfiguration( final ConfigurationState state )", "+        throws ConfigurationException", "+    {", "+        // Make sure there are no pending created objects", "+        final DefaultConfigurationState defState = (DefaultConfigurationState)state;", "+        for( int i = 0; i < m_allProps.size(); i++ )", "+        {", "+            if( defState.getCreatedObject( i ) != null )", "+            {", "+                final String message = REZ.getString( \"pending-property-value.error\" );", "+                throw new ConfigurationException( message );", "+            }", "+        }", "+", "+        return defState.getObject();"]}]}