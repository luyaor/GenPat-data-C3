{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f2ae5cee3c0f565e2bb566256b395e0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dc74fd06d5fa51907ed0c230fe937ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "a5ad127be2cc2c71abdbf4f10c474d5ab6fd55c6", "commitAfterChange": "0c41850a5477f82db678bbc85e6fccc04f66e661", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-        } else if (source.as(FileProvider.class) != null", "-                   && destFile != null && !append) {", "-            File sourceFile =", "-                source.as(FileProvider.class).getFile();", "-            copyUsingFileChannels(sourceFile, destFile);", "-            copyUsingStreams(source, dest, append, project);", "+            boolean copied = false;", "+            if (source.as(FileProvider.class) != null", "+                && destFile != null && !append) {", "+                File sourceFile =", "+                    source.as(FileProvider.class).getFile();", "+                try {", "+                    copyUsingFileChannels(sourceFile, destFile);", "+                    copied = true;", "+                } catch (IOException ex) {", "+                    project.log(\"Attempt to copy \" + sourceFile", "+                                + \" to \" + destFile + \" using NIO Channels\"", "+                                + \" failed due to '\" + ex.getMessage()", "+                                + \"'.  Falling back to streams.\",", "+                                Project.MSG_WARN);", "+                }", "+            }", "+            if (!copied) {", "+                copyUsingStreams(source, dest, append, project);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dafc777c899e0d3974af0a9d027f15ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SubAnt.java", "commitBeforeChange": "d516e14240d819b597b4051a21989240e59a0155", "commitAfterChange": "76a6e36fe5ebb6170b20591616ee634f7b51f342", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void execute(File file, File directory)                 throws BuildException", "signatureAfterChange": "     private void execute(File file, File directory)                 throws BuildException", "diff": ["+        } catch (Throwable e) {", "+            if (failOnError) {", "+                throw new BuildException(e);", "+            }", "+            log(\"Failure for target '\" + target", "+                + \"' of: \" + antfilename + \"\\n\"", "+                + e.toString(),", "+                Project.MSG_WARN);"]}]}