{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33d2535e00c771d567430c9acb8b5834", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3056851cb9061076d46b36416a927f3c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "1b7d8d44fd80e84057b44965db5a9b39eb72545d", "commitAfterChange": "1876ce865b610d6fe694e7cba44c6c258c0a8cc9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void setReference( final ConfigurationState state,                                final String refName,                                final String unresolvedId,                                final Context context )         throws CascadingException", "signatureAfterChange": "     private void setReference( final ConfigurationState state,                                final String refName,                                final String unresolvedId,                                final Context context )         throws Exception", "diff": ["-        throws CascadingException", "+        throws Exception", "-        Object id = PropertyUtil.resolveProperty( unresolvedId, context, false );", "+        Object id = resolveProperty( unresolvedId, context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d8f29c8ff8592e08e022a46db2f0d79", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "321497ad25f76931e5b18e384fbd73ca8d198d92", "commitAfterChange": "ec74722dcd89659e5f1b1241acd59dc3f5978be7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void start()         throws Exception", "signatureAfterChange": "      public void start()         throws Exception", "diff": ["-        final ClassLoader libClassloader = Thread.currentThread().getContextClassLoader();", "+        final ClassLoader libClassloader = getClass().getClassLoader();"]}]}