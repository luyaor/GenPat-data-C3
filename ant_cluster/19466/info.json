{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40c16f84b32448ea86fdce20dfc90ba6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef09eea1956a46e2cf99bc2fa8e09f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1c5c68f3ed2854776e2377bf5486caadc8ecc5b8", "commitAfterChange": "f665a4d33564ecc12851996978a9847024643829", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public ZipExtraField[] getExtraFields()", "signatureAfterChange": "     public ZipExtraField[] getExtraFields(boolean includeUnparseable)", "diff": ["-        if (extraFields == null) {", "-            return new ZipExtraField[0];", "-        }", "-        ZipExtraField[] result = new ZipExtraField[extraFields.size()];", "-        return (ZipExtraField[]) extraFields.values().toArray(result);", "+     */", "+    public ZipExtraField[] getExtraFields(boolean includeUnparseable) {", "+        if (extraFields == null) {", "+            return !includeUnparseable || unparseableExtra == null", "+                ? new ZipExtraField[0]", "+                : new ZipExtraField[] { unparseableExtra };", "+        }", "+        List result = new ArrayList(extraFields.values());", "+        if (includeUnparseable && unparseableExtra != null) {", "+            result.add(unparseableExtra);", "+        }", "+        return (ZipExtraField[]) result.toArray(new ZipExtraField[0]);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9243bc06e8e52f4fbe389fa2ce279ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "4cbbf3629a15a78615a3ce63ffe6f3fc028b172d", "commitAfterChange": "2c04d7e833b4e5dab1a3c5ddfe14b572aea8c112", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public ZipExtraField[] getExtraFields(final boolean includeUnparseable)", "signatureAfterChange": "     public ZipExtraField[] getExtraFields(final boolean includeUnparseable)", "diff": ["+        return includeUnparseable ?", "+                getAllExtraFields() :", "+                getParseableExtraFields();", "+    }", "-            return !includeUnparseable || unparseableExtra == null", "-                ? new ZipExtraField[0]", "-                : new ZipExtraField[] {unparseableExtra};", "-        final List<ZipExtraField> result =", "-            new ArrayList<ZipExtraField>(extraFields.values());", "-        if (includeUnparseable && unparseableExtra != null) {", "-            result.add(unparseableExtra);", "-        return result.toArray(new ZipExtraField[0]);"]}]}