{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "071fa6d10148959b145563070ac77b0b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "048661a5490164607ed20bb34fd3b2df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DifferentSelector.java", "commitBeforeChange": "236873d6eb74a5ceaa0aae78f748946557595cf3", "commitAfterChange": "f7a5fe1058ed168c2655047494dacfde6c6931f0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean selectionTest(File srcfile, File destfile)", "signatureAfterChange": "     protected boolean selectionTest(File srcfile, File destfile)", "diff": ["-", "-        //here do a bulk comparison", "-        try {", "-            return !fileUtils.contentEquals(srcfile, destfile);", "-        } catch (IOException e) {", "-            throw new BuildException(\"while comparing \" + srcfile + \" and \"", "-                    + destfile, e);", "+        if (!ignoreContents) {", "+            //here do a bulk comparison", "+            try {", "+                return !fileUtils.contentEquals(srcfile, destfile);", "+            } catch (IOException e) {", "+                throw new BuildException(\"while comparing \" + srcfile + \" and \"", "+                        + destfile, e);", "+            }", "+        } else {", "+            return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a8814b32696a10b9b6d7fcf0f48568", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/RExecTask.java", "commitBeforeChange": "0562cd0400efbcbd9aa20cc1e74bc3622f6bea10", "commitAfterChange": "c798cf3db806306f570561a5b2935dbc9aaf2fbb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-           if (rexec != null) {", "-               try {", "-                   rexec.disconnect();", "-               } catch (IOException e) {", "-                   throw new BuildException(\"Error disconnecting from \"", "-                                            + server);", "-               }", "-           }", "-       }", "+            if (rexec != null && rexec.isConnected()) {", "+                try {", "+                    rexec.disconnect();", "+                } catch (IOException e) {", "+                    throw new BuildException(\"Error disconnecting from \"", "+                                             + server);", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2037c48939019db92ceca2eac502ab48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "0a9a3cc1f80e139aa4ca8bba7080bdbf728ed311", "commitAfterChange": "f40450a1ea9d49a2fe1a3c01da37f89fc7bfed7f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "signatureAfterChange": "     protected RecorderEntry getRecorder(String name, Project proj)          throws BuildException", "diff": ["-            try {", "-                PrintStream out = null;", "-", "-                    out = new PrintStream(", "-                        new FileOutputStream(name));", "+                    entry.openFile(false);", "-                    out = new PrintStream(", "-                        new FileOutputStream(name, append.booleanValue()));", "+                    entry.openFile(append.booleanValue());", "-                entry.setErrorPrintStream(out);", "-                entry.setOutputPrintStream(out);", "-            } catch (IOException ioe) {", "-                throw new BuildException(\"Problems creating a recorder entry\",", "-                    ioe);", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7a94029a13b363cc5bfa3083fdcebd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1511487597b2dfa9391f80564f09d13a12418911", "commitAfterChange": "34e72a6607d510aed224c0db5b5b7a492e7e06d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public ZipEntry(java.util.zip.ZipEntry entry) throws ZipException", "signatureAfterChange": "     public ZipEntry(java.util.zip.ZipEntry entry) throws ZipException", "diff": ["-        /*", "-         * REVISIT: call super(entry) instead of this stuff in Ant2,", "-         *          \"copy constructor\" has not been available in JDK 1.1", "-         */", "-        super(entry.getName());", "-", "-        setComment(entry.getComment());", "-        setMethod(entry.getMethod());", "-        setTime(entry.getTime());", "-", "-        long size = entry.getSize();", "-        if (size > 0) {", "-            setSize(size);", "-        }", "-        long cSize = entry.getCompressedSize();", "-        if (cSize > 0) {", "-            setComprSize(cSize);", "-        }", "-        long crc = entry.getCrc();", "-        if (crc > 0) {", "-            setCrc(crc);", "-        }", "-", "+        super(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc546451e1b999f5aa136a4e1d02256", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/AntXMLContext.java", "commitBeforeChange": "42f31b452be82bd026330f0e3ea44878f8c79e5f", "commitAfterChange": "e1cd13c79b97bbf750fe5859769f90a99aa9f9bf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setBuildFile(File buildFile)", "signatureAfterChange": "     public void setBuildFile(File buildFile)", "diff": ["-        this.buildFileParent = new File(buildFile.getParent());", "-        implicitTarget.setLocation(new Location(buildFile.getAbsolutePath()));", "-        try {", "-            setBuildFile(FileUtils.getFileUtils().getFileURL(buildFile));", "-        } catch (MalformedURLException ex) {", "-            throw new BuildException(ex);", "+        if (buildFile != null) {", "+            this.buildFileParent = new File(buildFile.getParent());", "+            implicitTarget.setLocation(new Location(buildFile.getAbsolutePath()));", "+            try {", "+                setBuildFile(FileUtils.getFileUtils().getFileURL(buildFile));", "+            } catch (MalformedURLException ex) {", "+                throw new BuildException(ex);", "+            }", "+        } else {", "+            this.buildFileParent = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69574386730c8104afd15399e7a419e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprivate Button getBuildButton()", "signatureAfterChange": "     private Button getBuildButton()", "diff": ["-\t */", "-\tprivate Button getBuildButton() {", "-\t\tif (iBuildButton == null) {", "-\t\t\ttry {", "-\t\t\t\tiBuildButton = new Button();", "-\t\t\t\tiBuildButton.setName(\"BuildButton\");", "-\t\t\t\tiBuildButton.setLabel(\"Build\");", "-\t\t\t} catch (Throwable iExc) {", "-\t\t\t\thandleException(iExc);", "-\t\t\t}", "-\t\t}", "-\t\treturn iBuildButton;", "-\t}", "+     */", "+    private Button getBuildButton() {", "+        if (iBuildButton == null) {", "+            try {", "+                iBuildButton = new Button();", "+                iBuildButton.setName(\"BuildButton\");", "+                iBuildButton.setLabel(\"Execute\");", "+            } catch (Throwable iExc) {", "+                handleException(iExc);", "+            }", "+        }", "+        return iBuildButton;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d358eeb2117cc7b0a05c03d584167c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic RoleAdapter createAdapter()", "signatureAfterChange": "         public RoleAdapter createAdapter(Project p)", "diff": ["-\t */", "-\tpublic RoleAdapter createAdapter() {", "-\t    if (adapterVerifier == null) return null;", "-\t    ", "-\t    try {", "-\t\treturn (RoleAdapter) ", "-\t\t    adapterVerifier.getDeclaringClass().newInstance();", "-\t    }", "-\t    catch(BuildException be) {", "-\t\tthrow be;", "-\t    }", "-\t    catch(Exception e) {", "-\t\tthrow new BuildException(e);", "-\t    }", "-\t}", "+         */", "+        public RoleAdapter createAdapter(Project p) {", "+            if (adapterFactory == null) return null;", "+", "+            try {", "+                return (RoleAdapter) adapterFactory.create(p);", "+            }", "+            catch(BuildException be) {", "+                throw be;", "+            }", "+            catch(Exception e) {", "+                throw new BuildException(e);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b75823d4c101e882a36c9d6a99d8607", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copyfile.java", "commitBeforeChange": "ab202c98abdb86255e80d286acee3b8c6960cab2", "commitAfterChange": "ae16bb711b331f6c8a20ee1298cf171de43266f7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-\tif (srcFile.lastModified() > destFile.lastModified()) {", "-\t    try {", "-\t\tcopyFile(srcFile, destFile);", "-\t    } catch (IOException ioe) {", "-\t\tString msg = \"Error copying file: \" + srcFile.getAbsolutePath()", "-\t\t    + \" due to \" + ioe.getMessage();", "-\t\tthrow new BuildException(msg);", "-\t    }", "-\t}", "+        if (srcFile.lastModified() > destFile.lastModified()) {", "+            try {", "+                project.copyFile(srcFile, destFile);", "+            } catch (IOException ioe) {", "+                String msg = \"Error copying file: \" + srcFile.getAbsolutePath()", "+                    + \" due to \" + ioe.getMessage();", "+                throw new BuildException(msg);", "+            }", "+        }"]}]}