{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb0af98eb2138eca333cf3e8343cc251", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdac654b775ccb031bacd0418a28a16", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testGetWithSelector()", "signatureAfterChange": "          @Test     public void testGetWithSelector()", "diff": ["+    ", "+    @Test", "-        expectLogContaining(\"ftp-get-with-selector\",", "-            \"selectors are not supported in remote filesets\");", "-        FileSet fsDestination = (FileSet) getProject().getReference(\"fileset-destination-without-selector\");", "-        DirectoryScanner dsDestination = fsDestination.getDirectoryScanner(getProject());", "+    \tbuildRule.executeTarget(\"ftp-get-with-selector\");", "+    \tassertContains(\"selectors are not supported in remote filesets\", buildRule.getLog());", "+        FileSet fsDestination = (FileSet) buildRule.getProject().getReference(\"fileset-destination-without-selector\");", "+        DirectoryScanner dsDestination = fsDestination.getDirectoryScanner(buildRule.getProject());", "-        FileSet fsSource =  (FileSet) getProject().getReference(\"fileset-source-without-selector\");", "-        DirectoryScanner dsSource = fsSource.getDirectoryScanner(getProject());", "+        FileSet fsSource =  (FileSet) buildRule.getProject().getReference(\"fileset-source-without-selector\");", "+        DirectoryScanner dsSource = fsSource.getDirectoryScanner(buildRule.getProject());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3776e7b39a481e22af66a2f79b44a55", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/image/ImageTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testOverwriteFalse()", "signatureAfterChange": "      @Test     public void testOverwriteFalse()", "diff": ["+    @Test", "-        expectLogContaining(\"testSimpleScale\", \"Processing File\");", "-        File f = new File(getOutputDir(), LARGEIMAGE);", "+        buildRule.executeTarget(\"testSimpleScale\");", "+        AntAssert.assertContains(\"Processing File\", buildRule.getLog());", "+        File f = new File(buildRule.getOutputDir(), LARGEIMAGE);", "-        expectLogContaining(\"testOverwriteFalse\", \"Processing File\");", "-        f = new File(getOutputDir(), LARGEIMAGE);", "+        buildRule.executeTarget(\"testOverwriteFalse\");", "+        AntAssert.assertContains(\"Processing File\", buildRule.getLog());", "+        f = new File(buildRule.getOutputDir(), LARGEIMAGE);"]}]}