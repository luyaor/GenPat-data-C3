{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef3b86027d093c97e778fb3d0f27b5ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b6b3165205d7a67db316904afccc0f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "e7e99f061c7bf7cb73df38d26b3cff344012c5d6", "commitAfterChange": "7d174c342609636a70ce2f26fb50d8ea8077fd7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public ZipFile(String name, boolean mustNotBeEmpty) throws IOException", "signatureAfterChange": "     private boolean startsWithLocalFileHeader() throws IOException", "diff": ["-     */", "-    public ZipFile(String name, boolean mustNotBeEmpty) throws IOException {", "-        this(new File(name), null, mustNotBeEmpty);", "-    }", "+     */", "+    private boolean startsWithLocalFileHeader() throws IOException {", "+        archive.seek(0);", "+        final byte[] start = new byte[WORD];", "+        archive.readFully(start);", "+        for (int i = 0; i < start.length; i++) {", "+            if (start[i] != ZipOutputStream.LFH_SIG[i]) {", "+                return false;", "+            }", "+        }", "+        return true;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a78d0bd59fc5ac96b7464d70af9bc5fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "d9ce954d35df741c0344e59f043b4e41f33c71f4", "commitAfterChange": "839c93f9e0ba20487296f807470650b93f2abdd8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected int run(Commandline cmd)", "signatureAfterChange": "      protected int run(Commandline cmd)", "diff": ["+", "+", "+            // If location of ss.ini is specified we need to set the ", "+            // environment-variable SSDIR to this value", "+            if (m_serverPath != null) {", "+                String[] env = exe.getEnvironment();", "+                if( env == null ) {", "+                    env = new String[0];", "+                }", "+                String[] newEnv = new String[env.length+1];", "+                for( int i=0;i<env.length;i++ ) {", "+                    newEnv[i] = env[i];", "+                }", "+                newEnv[env.length] = \"SSDIR=\" + m_serverPath;", "+", "+                exe.setEnvironment(newEnv);", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31ad8e547ce4973f0c84652b95221f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Commandline.java", "commitBeforeChange": "183de933a18bc2af76fbed2385a30afa0c816cd5", "commitAfterChange": "c62e477a0b74de1c4f16643fce6851f44bf2e90e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public String[] getParts()", "signatureAfterChange": "         public String[] getParts()", "diff": ["-            return parts;", "+            if (parts == null || parts.length == 0", "+                || (prefix.length() == 0 && suffix.length() == 0)) {", "+                return parts;", "+            }", "+            String[] fullParts = new String[parts.length];", "+            for (int i = 0; i < fullParts.length; ++i) {", "+                fullParts[i] = prefix + parts[i] + suffix;", "+            }", "+            return fullParts;"]}]}