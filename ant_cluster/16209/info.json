{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b621caf09b42070fb93245a61365cde3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dbcfdf1d1649bff3534f35a0a2967f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/IntrospectionHelperTest.java", "commitBeforeChange": "64d149d3e9aebbc047bfc4d7942e892e2dc1bc4d", "commitAfterChange": "9844e736fe3bc77e6761f5031e371430907e0c1c", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "      public void testGetExtensionPoints()", "signatureAfterChange": "      public void testGetExtensionPoints()", "diff": ["-        assertEquals(\"extension count\", 3, extensions.size());", "+        final int adders = 2;", "+        assertEquals(\"extension count\", adders, extensions.size());", "-        assertExtMethod(extensions.get(0), \"add\", Number.class,", "-                        new Integer(2), new Integer(3));", "+        // this original test assumed something about the order of", "+        // add(Number) and addConfigured(Map) returned by reflection.", "+        // Unfortunately the assumption doesn't hold for all VMs", "+        // (failed on MacOS X using JDK 1.4.2_05) and the possible", "+        // combinatorics are too hard to check.  We really only want", "+        // to ensure that the more derived Hashtable can be found", "+        // before Map.", "+//        assertExtMethod(extensions.get(0), \"add\", Number.class,", "+//                        new Integer(2), new Integer(3));", "-        assertExtMethod(extensions.get(1), \"addConfigured\", Hashtable.class,", "+        assertExtMethod(extensions.get(adders - 2),", "+                        \"addConfigured\", Hashtable.class,", "-        assertExtMethod(extensions.get(2), \"addConfigured\", Map.class,", "+        assertExtMethod(extensions.get(adders - 1), \"addConfigured\", Map.class,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf7f8103d511da2d8514c5abeeb4b7c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "0b1e459d5ce8a519a6419a713c57693c68d4a6d2", "commitAfterChange": "d17f3c4f2af31dd15b59bc9a2a42fdf2a6854c92", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void setAction(String action) throws BuildException", "signatureAfterChange": "     public void setAction(String action) throws BuildException", "diff": ["-        if (action.toLowerCase().equals(\"send\") ||", "-            action.toLowerCase().equals(\"put\"))", "+        String actionL = action.toLowerCase(Locale.US);", "+        if (actionL.equals(\"send\") ||", "+            actionL.equals(\"put\"))", "-        else if (action.toLowerCase().equals(\"recv\") ||", "-                 action.toLowerCase().equals(\"get\"))", "+        else if (actionL.equals(\"recv\") ||", "+                 actionL.equals(\"get\"))", "-        else if (action.toLowerCase().equals(\"del\") ||", "-                 action.toLowerCase().equals(\"delete\" ))", "+        else if (actionL.equals(\"del\") ||", "+                 actionL.equals(\"delete\" ))", "-        else if (action.toLowerCase().equals(\"list\"))", "+        else if (actionL.equals(\"list\"))", "-        else if (action.toLowerCase().equals(\"mkdir\"))", "+        else if (actionL.equals(\"mkdir\"))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2f263ba1bf1523c8b5c1e1533de25f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/CVSPass.java", "commitBeforeChange": "08535a06a25538edd320122b847d546ef085203d", "commitAfterChange": "2b6f0a872003b2f6dcc4ffd4f83fae9fd9cfb362", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["+\t    String pwdfile = buf.toString() + cvsRoot + \" A\" + mangle(password);", "+", "+            log(\"Writing -> \" + pwdfile , project.MSG_DEBUG);", "+", "-", "-            writer.print(buf.toString());", "-            writer.print(cvsRoot);", "-            writer.print(\" A\");", "-            writer.println(mangle(password));", "-", "-            log(\"Writing -> \" + buf.toString() + cvsRoot + \" A\" + mangle(password), project.MSG_DEBUG);", "+            writer.println( pwdfile );"]}]}