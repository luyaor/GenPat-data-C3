{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfff33b018540423d621c9af25153c3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1111e6719dc28623bfb9141da7f1f907", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "79ab8ae1d59ed007337a3657ac5c6c78107cc0d8", "commitAfterChange": "c8c751af8ea4cb0607690327d79a0b56d6054925", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public String getReplaceValue()", "signatureAfterChange": "         public String getReplaceValue()", "diff": ["-                return new String(\"\");", "+                return \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a1844d0c23204d5999e9bbf64bef71f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AbstractCvsTask.java", "commitBeforeChange": "4783bc46159826bc33858cfc9145c4be93dfe755", "commitAfterChange": "2a291dca9249d6a4958d9898282fa67343bf59b7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void runCommand(Commandline toExecute) throws BuildException", "signatureAfterChange": "     protected void runCommand(Commandline toExecute) throws BuildException", "diff": ["-                                         + actualCommandLine + \"]\", getLocation());", "+                                         + actualCommandLine + \"]\",", "+                                         getLocation());", "-            } else {", "-                log(\"Caught exception: \" + e.getMessage(), Project.MSG_WARN);", "+            log(\"Caught exception: \" + e.getMessage(), Project.MSG_WARN);", "-            if (failOnError) {", "-                throw(e);", "-            } else {", "+                if (failOnError) {", "+                        throw(e);", "+                }", "-                    t = e;", "+                        t = e;", "-            }", "-            if (failOnError) {", "-                throw new BuildException(e, getLocation());", "-            } else {", "+                if (failOnError) {", "+                        throw new BuildException(e, getLocation());", "+                }", "-            }", "+                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d70f714dce7336542eeffa01d0176ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bbee264333a725bca9c8e44b54a0e89714d2328d", "commitAfterChange": "823aadf5aa3424d8dcda444b8af0f3d63147cb24", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public static void initializeClass(Class theClass)", "signatureAfterChange": "     public static void initializeClass(Class theClass)", "diff": ["-                    cons[0].newInstance((Object[])strs);", "+                    cons[0].newInstance(strs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "207adf29a1a5e42cddf34372ff6cfbcf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "8d0a7dc50ac5f28978517eb289457e26b4b40c44", "commitAfterChange": "27b9f24bf23dcd72f13756dd74984dd2432c39c0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public MailMessage(String host, int port) throws IOException", "signatureAfterChange": "   public MailMessage(String host, int port) throws IOException", "diff": ["+    replyto = new Vector();", "-    setHeader(\"X-Mailer\", \"org.apache.tools.mail.MailMessage (jakarta.apache.org)\");", "+    setHeader(\"X-Mailer\", \"org.apache.tools.mail.MailMessage (ant.apache.org)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29bde61bdbec4399abe7a0cdde5d6668", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/mail/MailMessage.java", "commitBeforeChange": "47ba7d22e2e132bef06c232ee6b5ac4ec8fcbebd", "commitAfterChange": "ecfa6b9a0c7f04af87ffd8a3e66ac87e27866708", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "    void connect() throws IOException", "signatureAfterChange": "    void connect() throws IOException", "diff": ["-    in = new BufferedReader(new InputStreamReader(socket.getInputStream())); ", "+    in = new SmtpResponseReader(socket.getInputStream());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ed77c13091980601f9d59940fd36bbe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "2d39fb4500bf00ff8f671b77f7517ec20e5a4474", "commitAfterChange": "19d970dbd33bac4654e4d8319afe11dcb15dd708", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final synchronized Iterator iterator()", "signatureAfterChange": "     public final synchronized Iterator iterator()", "diff": ["-        return new FailFast(this, w.iterator());", "+        return w.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "367504169e6a2c0b0e917e6562214be5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/init/org/apache/ant/init/LoaderUtils.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static URL[] getLocalURLs(File location,                                       final String[] extensions)          throws MalformedURLException", "signatureAfterChange": "     private static URL[] getLocalURLs(File location,                                       final String[] extensions)          throws MalformedURLException", "diff": ["+            urls = new URL[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4639b8ced96d9aea1f71c18e03e8554f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/formatter/BaseStreamFormatter.java", "commitBeforeChange": "4bd65dfb59acfb5d60a90f79fa73a7e561bb8239", "commitAfterChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected void setOutput(OutputStream value)", "signatureAfterChange": "     protected void setOutput(OutputStream value)", "diff": ["-            writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(value, \"UTF8\")), true);", "+            // do not buffer but flush each line.", "+            writer = new PrintWriter(new OutputStreamWriter(value, \"UTF8\"), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d2588b2b9a041e87b9fcd694e965e84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void addBuildListeners(Project project)", "signatureAfterChange": "     protected void addBuildListeners(final Project project)", "diff": ["-    protected void addBuildListeners(Project project) {", "+    protected void addBuildListeners(final Project project) {", "-            String className = (String) listeners.elementAt(i);", "-            BuildListener listener =", "+            final String className = listeners.elementAt(i);", "+            final BuildListener listener ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5577540409d9a853019c08f16fe8e7aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "diff": ["-        FileSet[] fs = (FileSet[]) filesets.toArray(new FileSet[filesets", "+        FileSet[] fs = filesets.toArray(new FileSet[filesets"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6759c347439b7cc79778d2c4c6bb315d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "     protected ArchiveState getNonFileSetResourcesToAdd(ResourceCollection[] rcs,                                                        File zipFile,                                                        boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getNonFileSetResourcesToAdd(ResourceCollection[] rcs,                                                        File zipFile,                                                        boolean needsUpdate)         throws BuildException", "diff": ["-                    (FileProvider) initialResources[i][j].as(FileProvider.class);", "+                    initialResources[i][j].as(FileProvider.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b457c331b2f465b156423aad3a021d5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "e7726a439bc401d529bca00eb4765967d4bd494d", "commitAfterChange": "30a0e6bf899246f045208d0dc5fa01c75ed72290", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "signatureAfterChange": "     protected boolean createEmptyZip(File zipFile) throws BuildException", "diff": ["-            zOut = new ZipOutputStream(new FileOutputStream(getDestFile()));", "+            zOut = new ZipOutputStream(getDestFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7a609cd4fa7d15e4557535db3d7d99", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private Certificate[] getCertificates(File container, String entry)         throws IOException", "signatureAfterChange": "     private Certificate[] getCertificates(final File container, final String entry)         throws IOException", "diff": ["-    private Certificate[] getCertificates(File container, String entry)", "+    private Certificate[] getCertificates(final File container, final String entry)", "-        JarFile jarFile = (JarFile) jarFiles.get(container);", "+        final JarFile jarFile = jarFiles.get(container);", "-        JarEntry ent = jarFile.getJarEntry(entry);", "+        final JarEntry ent = jarFile.getJarEntry(entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715bfa194637426f679d0b1e15a61648", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "b43f4224d8fe9d1e7d628e88df394a7dfed46d1b", "commitAfterChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public TarEntry(String name, byte linkFlag)", "signatureAfterChange": "     public TarEntry(String name, byte linkFlag)", "diff": ["-            magic = new StringBuffer(GNU_TMAGIC);", "+            magic = GNU_TMAGIC;", "+            version = VERSION_GNU_SPACE;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ff51ebc3aa7e74c905be5bd2c17279", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static String[] getDefaultExcludes()", "signatureAfterChange": "     public static String[] getDefaultExcludes()", "diff": ["-            return (String[]) defaultExcludes.toArray(new String[defaultExcludes", "+            return defaultExcludes.toArray(new String[defaultExcludes"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98968de8bb2ff0265905f51b43790f4a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "4f10a1e3b23a3eca01801f07d95b6a320e163a33", "commitAfterChange": "5a75c735358493a5eba4c56fcd696dfeda47e8df", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public String getVsspath()", "signatureAfterChange": "     public String getVsspath()", "diff": ["-        return new String(m_vssPath);", "+        return m_vssPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a749cf172a220937c545ec12bcc55f94", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "4783bc46159826bc33858cfc9145c4be93dfe755", "commitAfterChange": "2a291dca9249d6a4958d9898282fa67343bf59b7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                    } else {", "-                        throw new BuildException(getTaskName() + \" task at the\"", "-                                                 + \" top level must not invoke\"", "-                                                 + \" its own build file.\");", "+                    throw new BuildException(getTaskName() + \" task at the\"", "+                                + \" top level must not invoke\"", "+                                + \" its own build file.\");", "-                } else {", "-                    boolean circular = false;", "-                    for (Iterator it = locals.iterator(); !circular && it.hasNext();) {", "-                        Target other = (Target) (getProject().getTargets().get(", "-                            (String) (it.next())));", "-                        circular |= (other != null", "-                            && other.dependsOn(owningTargetName));", "-                    }", "-                    if (circular) {", "-                        throw new BuildException(getTaskName()", "-                                                 + \" task calling a target\"", "-                                                 + \" that depends on\"", "-                                                 + \" its parent target \\'\"", "-                                                 + owningTargetName", "-                                                 + \"\\'.\");", "-                    }", "+                }", "+                boolean circular = false;", "+                for (Iterator it = locals.iterator(); ", "+                     !circular && it.hasNext();) {", "+                    Target other = ", "+                        (Target) (getProject().getTargets().get(it.next()));", "+                    circular |= (other != null", "+                                 && other.dependsOn(owningTargetName));", "+                }", "+                if (circular) {", "+                    throw new BuildException(getTaskName()", "+                                             + \" task calling a target\"", "+                                             + \" that depends on\"", "+                                             + \" its parent target \\'\"", "+                                             + owningTargetName", "+                                             + \"\\'.\");", "-            if (locals.size() > 0 && !(locals.size() == 1 && locals.get(0) == \"\")) {", "+            if (locals.size() > 0 && !(locals.size() == 1 ", "+                                       && locals.get(0) == \"\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa23b94542d565cf21663588f2d67ab0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FilterSet.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "     private synchronized String replaceTokens(String line, String parent)         throws BuildException", "signatureAfterChange": "     private synchronized String replaceTokens(String line, String parent)         throws BuildException", "diff": ["-                value = (String) passedTokens.remove(passedTokens.size() - 1);", "+                value = passedTokens.remove(passedTokens.size() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a192f3964a88e71622e49018e14d7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/FilterSet.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected synchronized Vector<Filter> getFilters()", "signatureAfterChange": "     protected synchronized Vector<Filter> getFilters()", "diff": ["-                readFiltersFromFile((File) filtersFiles.get(i));", "+                readFiltersFromFile(filtersFiles.get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79fc132a49b4c22225614615f269fdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     private Manifest getJarManifest(File container) throws IOException", "signatureAfterChange": "     private Manifest getJarManifest(final File container) throws IOException", "diff": ["-    private Manifest getJarManifest(File container) throws IOException {", "+    private Manifest getJarManifest(final File container) throws IOException {", "-        JarFile jarFile = (JarFile) jarFiles.get(container);", "+        final JarFile jarFile = jarFiles.get(container);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb26c2be2a3467b47f3b4d11f6945c4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "62f2142b3431002933bf1281d244c164ed962890", "commitAfterChange": "6cbeee38fa5502baa5d75036ad2c0418cf808d56", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "              public String[] getValues()", "signatureAfterChange": "              public String[] getValues()", "diff": ["-", "-                return new String[] {\"+\", \"-\", \"=\", NOW_VALUE_, NULL_VALUE_};", "+                return new String[] {\"+\", \"-\", \"=\"};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbea8ba6414be3df08507e1d3b2e363f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "38bbf18dc4e0e811f5ec13f0a6c4dffe99eeda34", "commitAfterChange": "104de0d7d21754b2d49321690b46762b699bdd61", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     protected void execute(List testList) throws BuildException", "signatureAfterChange": "     protected void execute(List testList) throws BuildException", "diff": ["-            writer =", "-                new BufferedWriter(new BufferedWriter(new FileWriter(casesFile)));", "+            writer = new BufferedWriter(new FileWriter(casesFile));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4466a1ade30c955ea14ae19e02f82e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static IntrospectionHelper getHelper(Project p, Class c)", "signatureAfterChange": "     public static IntrospectionHelper getHelper(Project p, Class<?> c)", "diff": ["-    public static IntrospectionHelper getHelper(Project p, Class c) {", "-        IntrospectionHelper ih = (IntrospectionHelper) HELPERS.get(c.getName());", "+    public static IntrospectionHelper getHelper(Project p, Class<?> c) {", "+        IntrospectionHelper ih = HELPERS.get(c.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d76f62ad1961c12c5dfc03941a0f6c76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         private void findNextResource()", "signatureAfterChange": "         private void findNextResource()", "diff": ["-                    File pathComponent = (File) pathComponents.elementAt(pathElementsIndex);", "+                    final File pathComponent = pathComponents.elementAt(pathElementsIndex);", "-                } catch (BuildException e) {", "+                } catch (final BuildException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6fabfaee5133b0d3edb10303e5466b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ANTLR.java", "commitBeforeChange": "84d3e4a158b155664d401f0d8b57124504532b74", "commitAfterChange": "26f6bfe2be0861267eca5624537b48daa7574dd6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        //TODO: use ANTLR to parse the grammer file to do this.", "+        //TODO: use ANTLR to parse the grammar file to do this.", "-            (new File(superGrammar).lastModified() > generatedFile.lastModified());", "+            (superGrammar.lastModified() > generatedFile.lastModified());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec717a14563ea2c48e499992de509b0f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public Attribute getAttribute(String attributeName)", "signatureAfterChange": "         public Attribute getAttribute(String attributeName)", "diff": ["-            return (Attribute) attributes.get(attributeName.toLowerCase(Locale.ENGLISH));", "+            return attributes.get(attributeName.toLowerCase(Locale.ENGLISH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6e9862c627972c26a9e642df8ddb61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/scm/AntStarTeamCheckOut.java", "commitBeforeChange": "2f77ae0cd681b722669732389faeb0ca2d41e391", "commitAfterChange": "f37b5c2d280bf2189b0b12eb7a7d3f558bdc695b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void runProject(Server s, com.starbase.starteam.Project p)", "signatureAfterChange": "     protected void runProject(Server s, com.starbase.starteam.Project p)", "diff": ["-                runType(s, p, v, s.typeForName((String)s.getTypeNames().FILE));", "+                runType(s, p, v, s.typeForName(s.getTypeNames().FILE));"]}]}