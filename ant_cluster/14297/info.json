{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3aa7f84a79b2b8b0c407c90ae042bc7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1626abf9ecde27d3e2ba1a782bec13af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "fc7cfffc89d82da7426c14b0fcd48682b026a56d", "commitAfterChange": "1dfa5ca002e81a1b89dbfd0fdd172bad141b829a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public Process exec(Project project, String[] cmd, String[] env, File workingDir) throws IOException", "signatureAfterChange": "         public Process exec(Project project, String[] cmd, String[] env, File workingDir) throws IOException", "diff": ["-            if ( workingDir == null ) {", "-                return exec(project, cmd, env);", "-            }", "-", "-            // Locate the auxiliary script", "+                if ( workingDir == null ) {", "+                    return exec(project, cmd, env);", "+                }", "+            ", "+            // Locate the auxiliary script", "+            File commandDir = workingDir;", "+            if ( workingDir == null ) {", "+                commandDir = project.getBaseDir();", "+            }", "+", "-            newcmd[1] = workingDir.getAbsolutePath();", "+            newcmd[1] = commandDir.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1997ffcafa01d96cd944c65d787e928", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Execute.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private ExecMetaData buildExecMetaData( final ExecManager execManager )         throws ExecException", "signatureAfterChange": "     private ExecMetaData buildExecMetaData( final TaskContext context,                                             final ExecManager execManager )         throws ExecException", "diff": ["-    private ExecMetaData buildExecMetaData( final ExecManager execManager )", "+    private ExecMetaData buildExecMetaData( final TaskContext context,", "+                                            final ExecManager execManager )", "+        // Build the command line", "+        // Build the environment", "+        // Determine the working directory", "+        File workingDir = m_workingDirectory;", "+        if( workingDir == null )", "+        {", "+            workingDir = context.getBaseDirectory();", "+        }", "+", "-                                 m_workingDirectory );", "+                                 workingDir );"]}]}