{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c708e385725c877c9322b248dd324d8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1abd0640b2d77fb6803b474bbccc230", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/RegexpPatternMapper.java", "commitBeforeChange": "8ec47dd2be3c8fbb0c59dee65ae16620244e2bfd", "commitAfterChange": "3512883717720ed51b4fcc6a8403ac832876840d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected String replaceReferences( String source )         throws TaskException", "signatureAfterChange": "     private String replaceReferences( final String source )         throws TaskException", "diff": ["-    protected String replaceReferences( String source )", "+    private String replaceReferences( final String source )", "-        ArrayList v = reg.getGroups( source );", "+        final ArrayList groups = m_matcher.getGroups( source );", "-        result.setLength( 0 );", "-        for( int i = 0; i < to.length; i++ )", "+        m_result.setLength( 0 );", "+        for( int i = 0; i < m_to.length; i++ )", "-            if( to[ i ] == '\\\\' )", "+            if( m_to[ i ] == '\\\\' )", "-                if( ++i < to.length )", "+                if( ++i < m_to.length )", "-                    int value = Character.digit( to[ i ], 10 );", "+                    final int value = Character.digit( m_to[ i ], 10 );", "-                        result.append( (String)v.get( value ) );", "+                        m_result.append( (String)groups.get( value ) );", "-                        result.append( to[ i ] );", "+                        m_result.append( m_to[ i ] );", "-                    result.append( '\\\\' );", "+                    m_result.append( '\\\\' );", "-                result.append( to[ i ] );", "+                m_result.append( m_to[ i ] );", "-        return result.toString();", "+        return m_result.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab28d66d6105dcc1df33d47c4c5d426", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/util/RegexpPatternMapper.java", "commitBeforeChange": "8ec47dd2be3c8fbb0c59dee65ae16620244e2bfd", "commitAfterChange": "3512883717720ed51b4fcc6a8403ac832876840d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected String replaceReferences( String source )         throws TaskException", "signatureAfterChange": "     private String replaceReferences( final String source )         throws TaskException", "diff": ["-    protected String replaceReferences( String source )", "+    private String replaceReferences( final String source )", "-        ArrayList v = reg.getGroups( source );", "+        final ArrayList groups = m_matcher.getGroups( source );", "-        result.setLength( 0 );", "-        for( int i = 0; i < to.length; i++ )", "+        m_result.setLength( 0 );", "+        for( int i = 0; i < m_to.length; i++ )", "-            if( to[ i ] == '\\\\' )", "+            if( m_to[ i ] == '\\\\' )", "-                if( ++i < to.length )", "+                if( ++i < m_to.length )", "-                    int value = Character.digit( to[ i ], 10 );", "+                    final int value = Character.digit( m_to[ i ], 10 );", "-                        result.append( (String)v.get( value ) );", "+                        m_result.append( (String)groups.get( value ) );", "-                        result.append( to[ i ] );", "+                        m_result.append( m_to[ i ] );", "-                    result.append( '\\\\' );", "+                    m_result.append( '\\\\' );", "-                result.append( to[ i ] );", "+                m_result.append( m_to[ i ] );", "-        return result.toString();", "+        return m_result.toString();"]}]}