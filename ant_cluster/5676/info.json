{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c1263a79236f722e3e9a986c042e482", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64ab6d35fc3bf155b5099d43d1950804", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/LoadProperties.java", "commitBeforeChange": "43a69a7b6e52e95a4d65390f603e1fbe4ca8fcb9", "commitAfterChange": "3742656f6d8175a8004cfc7187801e84e2f7172d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["+        ByteArrayInputStream tis = null;", "-                ByteArrayInputStream tis = null;", "-                final Enumeration e = props.keys();", "-                while (e.hasMoreElements()) {", "-                    final String key = (String) e.nextElement();", "-                    final String value = props.getProperty(key);", "-                    if (key != null && value != null", "-                            && value.trim().length() > 0) {", "-                        getProject().setNewProperty(key, value);", "-                    }", "-                }", "-                tis.close();", "+", "+                Property propertyTask = ", "+                    (Property) getProject().createTask(\"property\");", "+                propertyTask.setTaskName(getTaskName());", "+                propertyTask.addProperties(props);", "+            try {", "+                if (tis != null) {", "+                    tis.close();", "+                }", "+            } catch (IOException ioex) {", "+                //ignore", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47090d9a903746acb93dd17b12326db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/XMLCatalogTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testClasspath()", "signatureAfterChange": "      @Test     public void testClasspath() throws IOException, TransformerException, SAXException", "diff": ["-    public void testClasspath() {", "+    @Test", "+    public void testClasspath() throws IOException, TransformerException, SAXException {", "-        try {", "-            InputSource result = catalog.resolveEntity(publicId,", "-                                                       \"nap:chemical+brothers\");", "-            assertNotNull(result);", "-            String resultStr = new URL(result.getSystemId()).getFile();", "-            assertTrue(toURLString(dtdFile).endsWith(resultStr));", "-        } catch (Exception e) {", "-            fail(\"resolveEntity() failed!\" + e.toString());", "-        }", "+        InputSource isResult = catalog.resolveEntity(publicId,", "+                                                   \"nap:chemical+brothers\");", "+        assertNotNull(isResult);", "+        String resultStr1 = new URL(isResult.getSystemId()).getFile();", "+        assertTrue(toURLString(dtdFile).endsWith(resultStr1));", "-        try {", "-            Source result = catalog.resolve(uri, null);", "-            assertNotNull(result);", "-            String resultStr = new URL(result.getSystemId()).getFile();", "-            assertTrue(toURLString(xmlFile).endsWith(resultStr));", "-        } catch (Exception e) {", "-            fail(\"resolve() failed!\" + e.toString());", "-        }", "+        Source result = catalog.resolve(uri, null);", "+        assertNotNull(result);", "+        String resultStr = new URL(result.getSystemId()).getFile();", "+        assertTrue(toURLString(xmlFile).endsWith(resultStr));", "+"]}]}