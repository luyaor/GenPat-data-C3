{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d6c66d4cf07c0834fa970a9976d77e2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9209adf1eb12935a1a4f66dce9ed8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpFactory.java", "commitBeforeChange": "0c0ea749581b7ddac026ab294d1708f7b784d75b", "commitAfterChange": "b165169549c4f199906968196ce55274405767d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Regexp newRegexp( Project p )         throws TaskException", "signatureAfterChange": "     public Regexp newRegexp()         throws TaskException", "diff": ["-     */", "-    public Regexp newRegexp( Project p )", "-        throws TaskException", "-    {", "-        String systemDefault = null;", "-        if( p == null )", "-        {", "-            systemDefault = System.getProperty( \"ant.regexp.regexpimpl\" );", "-        }", "-        else", "-        {", "-            systemDefault = (String)p.getProperties().get( \"ant.regexp.regexpimpl\" );", "-        }", "-", "+        final String systemDefault = System.getProperty( \"ant.regexp.regexpimpl\" );", "-            return createRegexpInstance( \"org.apache.tools.ant.util.regexp.Jdk14RegexpRegexp\" );", "+            return createRegexpInstance( JDK14_REGEXP );", "-            return createRegexpInstance( \"org.apache.tools.ant.util.regexp.JakartaOroRegexp\" );", "+            return createRegexpInstance( JAKARTA_ORO );", "-            return createRegexpInstance( \"org.apache.tools.ant.util.regexp.JakartaRegexpRegexp\" );", "+            return createRegexpInstance( JAKARTA_REGEXP );", "-        throw new TaskException( \"No supported regular expression matcher found\" );", "+        final String message = \"No supported regular expression matcher found\";", "+        throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "929f5fd2ef2bb35afafb2a7fcc94f31a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "0c0ea749581b7ddac026ab294d1708f7b784d75b", "commitAfterChange": "b165169549c4f199906968196ce55274405767d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public RegexpMatcher newRegexpMatcher( Project p )         throws TaskException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher()         throws TaskException", "diff": ["-    public RegexpMatcher newRegexpMatcher( Project p )", "+    public RegexpMatcher newRegexpMatcher()", "-        String systemDefault = null;", "-        if( p == null )", "-        {", "-            systemDefault = System.getProperty( \"ant.regexp.regexpimpl\" );", "-        }", "-        else", "-        {", "-            systemDefault = (String)p.getProperties().get( \"ant.regexp.regexpimpl\" );", "-        }", "-", "+        final String systemDefault = System.getProperty( \"ant.regexp.regexpimpl\" );", "-            return createInstance( \"org.apache.tools.ant.util.regexp.Jdk14RegexpMatcher\" );", "+            return createInstance( JDK14_REGEXP );", "-            return createInstance( \"org.apache.tools.ant.util.regexp.JakartaOroMatcher\" );", "+            return createInstance( JAKARTA_ORO );", "-            return createInstance( \"org.apache.tools.ant.util.regexp.JakartaRegexpMatcher\" );", "+            return createInstance( JAKARTA_REGEXP );", "-        throw new TaskException( \"No supported regular expression matcher found\" );", "+        final String message = \"No supported regular expression matcher found\";", "+        throw new TaskException( message );"]}]}