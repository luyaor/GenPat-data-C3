{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af96c9e189ab076ba403bec4c7ec2eef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ccaa65d67d2528fac3daa36ff95e372", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/RegisterTasklet.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void run()         throws AntException", "signatureAfterChange": "      public void run()         throws AntException", "diff": ["+/*", "-", "+*/", "-            throw new AntException( \"Must specify taskname parameter\" );            ", "+            throw new AntException( \"Must specify taskname parameter\" );", "+        }", "+", "+        if( null == m_tasklib && null == m_classname )", "+        {", "+            throw new AntException( \"Must specify classname if don't specify \" + ", "+                                    \"tasklib parameter\" );", "-            final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "-            final URL url = tasklib.toURL();", "+            URL url = null;", "+", "+            if( null != m_tasklib )", "+            {", "+                final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "+                url = tasklib.toURL();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21354b76fa38efe161600af27c74e084", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "d64034d24ea4532e39f7c12df6c35fe9d5dc5fcb", "commitAfterChange": "4e347a681e78a2c860e581608b0c6b0018ba3d2f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void checkConfiguration() throws BuildException", "signatureAfterChange": "     protected void checkConfiguration() throws BuildException", "diff": ["-        if (baseDir == null) {", "-            throw new BuildException(\"basedir attribute must be set!\", getLocation());", "+        if (baseDir == null && filesets.size() == 0) {", "+            throw new BuildException(\"basedir attribute or at least one \"", "+                                     + \"nested filest is required!\", ", "+                                     getLocation());", "-        if (!baseDir.exists()) {", "+        if (baseDir != null && !baseDir.exists()) {", "-            throw new BuildException(\"cabfile attribute must be set!\" , getLocation());", "+            throw new BuildException(\"cabfile attribute must be set!\",", "+                                     getLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f224df82252ea30c6c78a1b24f75102", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "diff": ["-            if (bootclasspath != null) {", "+            if (bootclasspath != null && bootclasspath.size() > 0) {", "-            if (extdirs != null) {", "+            if (extdirs != null && extdirs.size() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abbbff1b68a2f9dbd2b7767a2745eb28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "ac6f3addd34489d7a91f3fd79a9fd0b1b524f5ce", "commitAfterChange": "35aee5ccea917873433c9c3caf2482c03fe16c72", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (Project.getJavaVersion().startsWith(\"1.3\")) {", "+            if (Project.getJavaVersion() != Project.JAVA_1_1 &&", "+                Project.getJavaVersion() != Project.JAVA_1_2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae978acf1ae25585dd4c79d7d9da7c74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "8b162d567dc13b9ae576422744854684a6c3ceb1", "commitAfterChange": "6c7f485943c930bf2de75288e47c4bf27c63b50a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void addExcludes(String[] excludes)", "signatureAfterChange": "     public synchronized void addExcludes(String[] excludes)", "diff": ["-    public void addExcludes(String[] excludes) {", "-        if (excludes != null) {", "-            if (this.excludes != null) {", "+    public synchronized void addExcludes(String[] excludes) {", "+        if (excludes != null && excludes.length > 0) {", "+            if (this.excludes != null && this.excludes.length > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b41313b9ab4a17f35633c2440d0d1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "40c79e53546eefa381c645fced7002592524a951", "commitAfterChange": "b0bdced687d02b5b68c19b2c7bf9bccb2724b802", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "signatureAfterChange": "     public DirectoryScanner getDirectoryScanner(Project p)", "diff": ["-                if (!dir.exists()) {", "+                if (!dir.exists() && errorOnMissingDir) {", "-                if (!dir.isDirectory()) {", "+                if (!dir.isDirectory() && dir.exists()) {", "+                ds.setErrorOnMissingDir(errorOnMissingDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d4174f4a4bd0dd45fdd85ebcd75d1f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "4575bd58e182d5c8263e9df7d3469619b80a5167", "commitAfterChange": "456488aec5a5d7fdc7b7b185b81c33fdfd1f8ec5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (includeEmpty) {", "+            if (includeEmpty && fs.getDir().isDirectory()) {", "-        if (usedMatchingTask && dir != null) {", "+        if (usedMatchingTask && dir != null && dir.isDirectory()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f503508ddb954e635e04c82cc5e6e88d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "ffeb30bccea8adf4b543ae90b214734bdcb95ced", "commitAfterChange": "02fce032edbad3f50cb317f7cefc8987f2876040", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         private void checkRemoteSensitivity(FTPFile[] array, String directory)", "signatureAfterChange": "         private void checkRemoteSensitivity(FTPFile[] array, String directory)", "diff": ["-                if (array[icounter].isDirectory()) {", "+                if (array[icounter] != null && array[icounter].isDirectory()) {", "-                            if (array[pcounter].getName().equals(target) && pcounter != icounter) {", "+                            if (array[pcounter] != null && pcounter != icounter && target.equals(array[pcounter].getName()) ) {"]}]}