{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bf61c45f2199e91b2fa0a25989d7a89", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7557d2e1d2950f36306108a3b26a83ed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "a14b034437745cfc4066f88bfcaa7923c574ae1d", "commitAfterChange": "bf5d72445b3750fb9e34c150abb7b6372324b85d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testTypedAdderAttribute()         throws Exception", "signatureAfterChange": "     public void testTypedAdderAttribute()         throws Exception", "diff": ["-        roleMgr.addNameRoleMapping( \"my-role1\", MyRole1.ROLE );", "+        final RoleInfo roleInfo = new RoleInfo(\"my-role1\", MyRole1.class );", "+        roleMgr.addRole( roleInfo );", "-        m_configurer.configure( test, config, m_context );", "+        m_configurer.configure( test, config, m_adaptor );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab3d142da7f966c3a662d9ade72801d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "a14b034437745cfc4066f88bfcaa7923c574ae1d", "commitAfterChange": "bf5d72445b3750fb9e34c150abb7b6372324b85d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testTypedAdderAttribute()         throws Exception", "signatureAfterChange": "     public void testTypedAdderAttribute()         throws Exception", "diff": ["-        roleMgr.addNameRoleMapping( \"my-role1\", MyRole1.ROLE );", "+        final RoleInfo roleInfo = new RoleInfo(\"my-role1\", MyRole1.class );", "+        roleMgr.addRole( roleInfo );", "-        m_configurer.configure( test, config, m_context );", "+        m_configurer.configure( test, config, m_adaptor );"]}]}