{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc9cc53b1c548033034553b576fa1dcc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858a901f3dc0b58999eaa2ad5177e5ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "1dc3ff85f64b99ede826fbfe4656f1a0b27bcbb5", "commitAfterChange": "3fd5393e99cef2d28ced46f804a3ae53f915bf3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void processArgs(String[] args)", "signatureAfterChange": "     private void processArgs(String[] args)", "diff": ["+            } else if (arg.equals(\"-nice\")) {", "+                try {", "+                    threadPriority=Integer.decode(args[i + 1]);", "+                } catch (ArrayIndexOutOfBoundsException aioobe) {", "+                    throw new BuildException(", "+                            \"You must supply a niceness value (1-10)\"+", "+                            \" after the -nice option\");", "+                } catch (NumberFormatException e) {", "+                    throw new BuildException(\"Unrecognized niceness value: \" +", "+                            args[i + 1]);", "+                }", "+                i++;", "+                if(threadPriority.intValue()<Thread.MIN_PRIORITY ||", "+                        threadPriority.intValue()>Thread.MAX_PRIORITY) {", "+                    throw new BuildException(", "+                            \"Niceness value is out of the range 1-10\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e4f68a6e93080f19d43224e7495744", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/dotnet/src/main/org/apache/tools/ant/taskdefs/optional/dotnet/AbstractBuildTask.java", "commitBeforeChange": "49d7dffbd158195b4815679366e563cc0a76a384", "commitAfterChange": "ed70f738d46319e6440ef4d53745ca97a46a4589", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        if (buildFile != null && buildSnippet != null) {", "+            throw new BuildException(\"You must not specify the build file\"", "+                                     + \" attribute and a nested build at the\"", "+                                     + \" same time\");", "+        }", "+", "-        args = getBuildfileArguments(buildFile);", "+", "+        File generatedFile = null;", "+        if (buildSnippet != null) {", "+            try {", "+                generatedFile = getBuildFile();", "+            } catch (IOException e) {", "+                throw new BuildException(e);", "+            }", "+            args = getBuildfileArguments(generatedFile);", "+        } else {", "+            args = getBuildfileArguments(buildFile);", "+        }        ", "+", "-        exec.execute();", "+", "+        try {", "+            exec.execute();", "+        } finally {", "+            if (generatedFile != null) {", "+                generatedFile.delete();", "+            }", "+        }", "+    }"]}]}