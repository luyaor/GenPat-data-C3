{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ec614d8203dd19a690132a8edb560c7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a276ea3ab1133c2cdf3a85d941dc89", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "7b1b3d16673949d0a108587b653c1a1855def0cb", "commitAfterChange": "7fc0d42636ae70a69d8dc312090c5fe80ae32f0c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-                // first use the ProjectHelper to create the project object", "-                // from the given build file.", "-                String noParserMessage = \"No JAXP compliant XML parser found. \"", "-                    + \"Please visit http://xml.apache.org \"", "-                    + \"for a suitable parser\";", "-                try {", "-                    Class.forName(\"javax.xml.parsers.SAXParserFactory\");", "-                    ProjectHelper.configureProject(project, buildFile);", "-                } catch (NoClassDefFoundError ncdfe) {", "-                    throw new BuildException(noParserMessage, ncdfe);", "-                } catch (ClassNotFoundException cnfe) {", "-                    throw new BuildException(noParserMessage, cnfe);", "-                } catch (NullPointerException npe) {", "-                    throw new BuildException(noParserMessage, npe);", "-                }", "+                ProjectHelper.configureProject(project, buildFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aac022873ceddd9fe126c245149f699e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public RegexpMatcher newRegexpMatcher() throws BuildException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher() throws BuildException", "diff": ["+     */", "-        String systemDefault = System.getProperty(\"ant.regexp.matcherimpl\");", "+        return newRegexpMatcher(null);", "+    }", "-            // XXX     should we silently possible exceptions and try to "]}]}