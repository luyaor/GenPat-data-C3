{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "133717b21121f50ca83ee3b693b879e6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7b185e8eb20d3e749e542deaff6d6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "451b31643e27e87d48176cfd329f90945ef2c6df", "commitAfterChange": "5306e0b587e88197239d068389990d578919732e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Task makeTask(UnknownElement ue, RuntimeConfigurable w)", "signatureAfterChange": "     protected Task makeTask(UnknownElement ue, RuntimeConfigurable w)", "diff": ["-            log(\"Could not create task of type: \" + elementName + \" Common solutions\" +", "-                \" are adding the task to defaults.properties and executing bin/bootstrap\",", "-                Project.MSG_DEBUG);", "-            throw new BuildException(\"Could not create task of type: \" + elementName +", "-                                     \". Common solutions are to use taskdef to declare\" +", "-                                     \" your task, or, if this is an optional task,\" +", "-                                     \" to put the optional.jar in the lib directory of\" +", "-                                     \" your ant installation (ANT_HOME).\", location);", "+            String lSep = System.getProperty(\"line.separator\");", "+            String msg = \"Could not create task of type: \" + elementName", "+                + \".\" + lSep", "+                + \"Ant could not find the task or a class this\" + lSep", "+                + \"task relies upon.\" + lSep", "+                + \"Common solutions are to use taskdef to declare\" + lSep", "+                + \"your task, or, if this is an optional task,\" + lSep", "+                + \"to put the optional.jar and all required libraries of\" +lSep", "+                + \"this task in the lib directory of\" + lSep", "+                + \"your ant installation (ANT_HOME).\";", "+            throw new BuildException(msg, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb91241715ae66d4a92d0f9657e0d44", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "d08dc16c87219ad372a269293c2b72d8e30d02f6", "commitAfterChange": "ee5cc3d419a166e1ad453961e86bc4857510c2da", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void maybeConfigure() throws BuildException", "signatureAfterChange": "      public void maybeConfigure() throws BuildException", "diff": ["-            throw new BuildException(\"Could not create task of type: \"+elementName+", "-                                     \" because I can\\'t find it in the list of task\"+", "-                                     \" class definitions.  Common solutions are: 1\"+", "-                                     \" execute bin/bootstrap. 2 use taskdef to declare\"+", "-                                     \" your task. 3 add the task to defaults.properties.\"", "-                                     , location);", "+            log(\"Could not create task of type: \" + elementName + \" Common solutions\" +", "+                \" are adding the task to defaults.properties and executing bin/bootstrap\",", "+                Project.MSG_DEBUG);", "+            throw new BuildException(\"Could not create task of type: \" + elementName +", "+                                     \". Common solutions are to use taskdef to declare\" +", "+                                     \" your task, or, if this is an optional task,\" +", "+                                     \" to put the optional.jar in the lib directory of\" +", "+                                     \" your ant installation (ANT_HOME).\", location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7c1be019587c3ac5919b5ce613d7bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "99a45aab1888ca73f7a2fc6fa97d7c76ee763fb0", "commitAfterChange": "70f7d48dbdb48256e509f99eac4b569046b255c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void maybeConfigure() throws BuildException", "signatureAfterChange": "      public void maybeConfigure() throws BuildException", "diff": ["-        realTask = project.createTask(elementName);", "-        if (realTask == null) {", "-            log(\"Could not create task of type: \" + elementName + \" Common solutions\" +", "-                \" are adding the task to defaults.properties and executing bin/bootstrap\",", "-                Project.MSG_DEBUG);", "-            throw new BuildException(\"Could not create task of type: \" + elementName +", "-                                     \". Common solutions are to use taskdef to declare\" +", "-                                     \" your task, or, if this is an optional task,\" +", "-                                     \" to put the optional.jar in the lib directory of\" +", "-                                     \" your ant installation (ANT_HOME).\", location);", "-        }", "-", "-        realTask.setLocation(location);", "-        String id = wrapper.getAttributes().getValue(\"id\");", "-        if (id != null) {", "-            project.addReference(id, realTask);", "-        }", "-        realTask.init();", "-", "-        // UnknownElement always has an associated target", "-        realTask.setOwningTarget(target);", "+        realTask = makeTask(this, wrapper);"]}]}