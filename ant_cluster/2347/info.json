{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62d0572ffe43719199c0374694e4af51", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "070651f678342ec456e2dc8fab4faafa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/acs/ACSDocumentType.java", "commitBeforeChange": "53ddc59eccb9ca398bcc74db1fc1577bde5b7d45", "commitAfterChange": "4c0c12c0f70aab990d7aefae3ab82d92d24c7cef", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public InputSource resolveEntity (             String publicId,             String systemId)             throws SAXException, IOException", "signatureAfterChange": "         public InputSource resolveEntity (             String publicId,             String systemId)             throws SAXException, IOException", "diff": ["-            final String PROJECT = \"project.dtd\";", "-            final String PROJECTEXT = \"project-ext.dtd\";", "-            if (systemId.indexOf(PROJECT) != -1) {", "+            if (systemId.indexOf(DTD_1) != -1) {", "-                    result = getClass().getResourceAsStream(PROJECT);", "+                    result = getClass().getResourceAsStream(DTD_1);", "-            if (systemId.indexOf(PROJECTEXT) != -1) {", "+            if (systemId.indexOf(DTD_2) != -1) {", "-                    result = getClass().getResourceAsStream(PROJECTEXT);", "+                    result = getClass().getResourceAsStream(DTD_2);", "+                } catch (Exception e) {}", "+            }", "+            if (result != null) {", "+                return new InputSource(result);", "+            }", "+            // Is it the share.dtd?", "+            if (systemId.indexOf(DTD_SHARE) != -1) {", "+                try {", "+                    // Look for it as a resource", "+                    result = getClass().getResourceAsStream(DTD_SHARE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1063c58d5d5fb7ecf3fa24e8015973c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "b374c9f8a0a98f6127e1c226da0c68ad159e37e9", "commitAfterChange": "4dbe4dd92b5ec3dad9b357bffba330ad79d3895b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static boolean isOutOfDate(Resource src, Resource target,                                       long granularity)", "signatureAfterChange": "     public static boolean isOutOfDate(Resource src, Resource target, long granularity)", "diff": ["-    public static boolean isOutOfDate(Resource src, Resource target,", "-                                      long granularity) {", "+    public static boolean isOutOfDate(Resource src, Resource target, long granularity) {", "-        // Check if source exists - use sourceLastModified for file resources", "-        // as it is quicker than checking exists() again, however string resources", "-        // have a last modified time of 0", "-        boolean sourceExists = (src instanceof FileResource)", "-            ? sourceLastModified != 0L : src.isExists();", "-", "-        if (targetLastModified == 0L) {", "-            return true;", "-        }", "-        return (sourceLastModified - granularity) > targetLastModified;", "+        return src.isExists()", "+                && (sourceLastModified == Resource.UNKNOWN_DATETIME", "+                        || targetLastModified == Resource.UNKNOWN_DATETIME", "+                                || (sourceLastModified - granularity) > targetLastModified);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a665f59e48c32c1342077582b09dfe2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "51e2cc543512d445e415bc5b7c2a42f98ddf8446", "commitAfterChange": "8e955e3a2e84e093d19f8053f610c479a3f27478", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (baseDir == null && filesets.size() == 0 && ", "-            locFileSets.size() == 0 && \"zip\".equals(archiveType)) {", "+        if (baseDir == null && filesets.size() == 0 && \"zip\".equals(archiveType)) {", "+        // Create the scanners to pass to isUpToDate().", "-        FileScanner[] scanners = new FileScanner[dssSize + locFileSets.size()];", "+        FileScanner[] scanners = new FileScanner[dssSize];", "-", "-        addScanners(scanners, dssSize, locFileSets);", "-                addPrefixedFiles(locFileSets, zOut);", "-            ", "-                for (int j = 0; j < dssSize; j++) {", "-                    addFiles(scanners[j], zOut, \"\");", "- ", "+                // Add the implicit fileset to the archive.", "+                if (baseDir != null)", "+                    addFiles(getDirectoryScanner(baseDir), zOut, \"\", \"\");", "+                // Add the explicit filesets to the archive.", "+                addFiles(filesets, zOut);", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9028df0b6d6faed25989baa33bfd65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "f3eed91811c13007966599e1511dd57f2252ccff", "commitAfterChange": "86ffd422467bec1d81ff85e58eb75d1e589cc95c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()             throws BuildException", "signatureAfterChange": "     public void execute()             throws BuildException", "diff": ["-        if (getFile() == null) {", "-            String msg = \"XmlProperty task requires a file attribute\";", "+        Resource r = getResource();", "+", "+        if (r == null) {", "+            String msg = \"XmlProperty task requires a source resource\";", "-            log(\"Loading \" + src.getAbsolutePath(), Project.MSG_VERBOSE);", "+            log(\"Loading \" + src, Project.MSG_VERBOSE);", "-            if (src.exists()) {", "+            if (r.isExists()) {", "-              Document document = builder.parse(src);", "+              Document document = null;", "+              if (src instanceof FileResource) {", "+                  document = builder.parse(((FileResource) src).getFile());", "+              } else {", "+                  document = builder.parse(src.getInputStream());", "+              }", "-                log(\"Unable to find property file: \" + src.getAbsolutePath(),", "+                log(\"Unable to find property resource: \" + r,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05066800fa3f0024521ddbf3232fe71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "a3bbe9f596f9a8e29f8971b7276a4f4f2d2d037b", "commitAfterChange": "0282d8fe2ef1441598d9a1032e7708bf0b7b8ca5", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "signatureAfterChange": "     protected final void addResources(ResourceCollection rc,                                       Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "diff": ["-            String name = resources[i].getName().replace(File.separatorChar,", "-                                                         '/');", "+            final Resource resource = resources[i];", "+            String name = resource.getName();", "+            if (name == null) {", "+                continue;", "+            }", "+            name = name.replace(File.separatorChar, '/');", "+", "-            if (resources[i].isDirectory() && doFilesonly) {", "+            if (resource.isDirectory() && doFilesonly) {", "-            FileProvider fp = resources[i].as(FileProvider.class);", "+            FileProvider fp = resource.as(FileProvider.class);", "-            if (resources[i].isDirectory()) {", "-                addDirectoryResource(resources[i], name, \"\", base, zOut,", "+            if (resource.isDirectory()) {", "+                addDirectoryResource(resource, name, \"\", base, zOut,", "-                    addResource(resources[i], name, \"\", zOut,", "+                    addResource(resource, name, \"\", zOut,"]}]}