{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0475b792d9857a107dc73bb7ac0d7d76", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8a4cb633d763508dc35918e71b00bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "1c5c68f3ed2854776e2377bf5486caadc8ecc5b8", "commitAfterChange": "f665a4d33564ecc12851996978a9847024643829", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void addAsFirstExtraField(ZipExtraField ze)", "signatureAfterChange": "     public void addAsFirstExtraField(ZipExtraField ze)", "diff": ["-        LinkedHashMap copy = extraFields;", "-        extraFields = new LinkedHashMap();", "-        extraFields.put(ze.getHeaderId(), ze);", "-        if (copy != null) {", "-            copy.remove(ze.getHeaderId());", "-            extraFields.putAll(copy);", "+        if (ze instanceof UnparseableExtraFieldData) {", "+            unparseableExtra = (UnparseableExtraFieldData) ze;", "+        } else {", "+            LinkedHashMap copy = extraFields;", "+            extraFields = new LinkedHashMap();", "+            extraFields.put(ze.getHeaderId(), ze);", "+            if (copy != null) {", "+                copy.remove(ze.getHeaderId());", "+                extraFields.putAll(copy);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a17499580cc2800bca72a88fd3364f4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "4cbbf3629a15a78615a3ce63ffe6f3fc028b172d", "commitAfterChange": "2c04d7e833b4e5dab1a3c5ddfe14b572aea8c112", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void addAsFirstExtraField(final ZipExtraField ze)", "signatureAfterChange": "     public void addAsFirstExtraField(final ZipExtraField ze)", "diff": ["-            final LinkedHashMap<ZipShort, ZipExtraField> copy = extraFields;", "-            extraFields = new LinkedHashMap<ZipShort, ZipExtraField>();", "-            extraFields.put(ze.getHeaderId(), ze);", "-            if (copy != null) {", "-                copy.remove(ze.getHeaderId());", "-                extraFields.putAll(copy);", "+            if (getExtraField(ze.getHeaderId()) != null){", "+                removeExtraField(ze.getHeaderId());", "+            }", "+            ZipExtraField[] copy = extraFields;", "+            int newLen = extraFields != null ? extraFields.length + 1: 1;", "+            extraFields = new ZipExtraField[newLen];", "+            extraFields[0] = ze;", "+            if (copy != null){", "+                System.arraycopy(copy, 0, extraFields, 1, extraFields.length - 1);"]}]}