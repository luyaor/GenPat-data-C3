{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "669ff5f65ac54811d1bdfa5459d64b35", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5514781d9dd172908a3fbe44afa50c8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "3c26912e56e06ac64c392444cb19e3587f1bbb11", "commitAfterChange": "ba22b3de5a2c195cc893e6455dbd88940f7547ac", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static void configureTargets(Project project, Element root) \tthrows BuildException", "signatureAfterChange": "      private static void configureTargets(Project project, Element root)         throws BuildException", "diff": ["-\tthrows BuildException", "+        throws BuildException", "-\t// configure targets", "-\tNodeList list = root.getElementsByTagName(\"target\");", "-\tfor (int i = 0; i < list.getLength(); i++) {", "-\t    Element element = (Element)list.item(i);", "-\t    String targetName = element.getAttribute(\"name\");", "-\t    String targetDep = element.getAttribute(\"depends\");", "+        // configure targets", "+        NodeList list = root.getElementsByTagName(\"target\");", "+        for (int i = 0; i < list.getLength(); i++) {", "+            Element element = (Element)list.item(i);", "+            String targetName = element.getAttribute(\"name\");", "+            String targetDep = element.getAttribute(\"depends\");", "+            String targetCond = element.getAttribute(\"if\");", "-\t    // all targets must have a name", "-\t    if (targetName.equals(\"\")) {", "-\t\tString msg = \"target element appears without a name attribute\";", "-\t\tthrow new BuildException(msg);", "-\t    }", "+            // all targets must have a name", "+            if (targetName.equals(\"\")) {", "+                String msg = \"target element appears without a name attribute\";", "+                throw new BuildException(msg);", "+            }", "-\t    // init is done already", "-\t    if( targetName.equals(\"init\") ) ", "-\t\tcontinue;", "-\t    ", "-\t    Target target = new Target();", "-\t    target.setName(targetName);", "-\t    project.addTarget(targetName, target);", "-\t    ", "-\t    // take care of dependencies", "-\t    ", "-\t    if (targetDep.length() > 0) {", "-\t\tStringTokenizer tok =", "-\t\t    new StringTokenizer(targetDep, \",\", false);", "-\t\twhile (tok.hasMoreTokens()) {", "-\t\t    target.addDependency(tok.nextToken().trim());", "-\t\t}", "-\t    }", "+            // init is done already", "+            if( targetName.equals(\"init\") )", "+                continue;", "-\t    // populate target with tasks", "+            Target target = new Target();", "+            target.setName(targetName);", "+            target.setCondition(targetCond);", "+            project.addTarget(targetName, target);", "-\t    configureTasks(project, target, element);", "-\t}", "+            // take care of dependencies", "+", "+            if (targetDep.length() > 0) {", "+                StringTokenizer tok =", "+                    new StringTokenizer(targetDep, \",\", false);", "+                while (tok.hasMoreTokens()) {", "+                    target.addDependency(tok.nextToken().trim());", "+                }", "+            }", "+", "+            // populate target with tasks", "+", "+            configureTasks(project, target, element);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba5cb123c22ed7e5f37f6f2b2f22ff0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "6b3d8a02956aad55938df6c7a1b2994a4acc5f6a", "commitAfterChange": "fe4a5cb02940376fddc661302141394be20d1f02", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private static void configureProject(Project project, Element root)         throws BuildException", "signatureAfterChange": "          public void init(String tag, AttributeList attrs) throws SAXParseException", "diff": ["-    private static void configureProject(Project project, Element root)", "-        throws BuildException", "-    {", "-        // configure taskdefs", "-        NodeList list = root.getElementsByTagName(\"taskdef\");", "-        for (int i = 0; i < list.getLength(); i++) {", "-            Task taskdef = new Taskdef();", "-            configure(project, taskdef, (Element)list.item(i));", "-            taskdef.setProject(project);", "-            taskdef.init();", "-        // configure properties", "-        list = root.getElementsByTagName(\"property\");", "-        for (int i = 0; i < list.getLength(); i++) {", "-            Task property = new Property();", "-            configure(project, property, (Element)list.item(i));", "-            property.setProject(project);", "-            property.init();", "-        // configure targets", "-        list = root.getElementsByTagName(\"target\");", "-        for (int i = 0; i < list.getLength(); i++) {", "-            Element element = (Element)list.item(i);", "-            String targetName = element.getAttribute(\"name\");", "-            String targetDep = element.getAttribute(\"depends\");", "-            String targetCond = element.getAttribute(\"if\");", "-            String targetId = element.getAttribute(\"id\");", "-            // all targets must have a name", "-            if (targetName.equals(\"\")) {", "-                String msg = \"target element appears without a name attribute\";", "-                throw new BuildException(msg);", "-            Target target = new Target();", "-            target.setName(targetName);", "-            target.setCondition(targetCond);", "-            project.addTarget(targetName, target);", "-            if (targetId != null && !targetId.equals(\"\")) ", "-                project.addReference(targetId,target);", "+", "+        public void init(String tag, AttributeList attrs) throws SAXParseException {", "+            String name = null;", "+            String depends = \"\";", "+            String cond = null;", "+            String id = null;", "+", "+            for (int i = 0; i < attrs.getLength(); i++) {", "+                String key = attrs.getName(i);", "+                String value = attrs.getValue(i);", "+", "+                if (key.equals(\"name\")) {", "+                    name = value;", "+                } else if (key.equals(\"depends\")) {", "+                    depends = value;", "+                } else if (key.equals(\"if\")) {", "+                    cond = value;", "+                } else if (key.equals(\"id\")) {", "+                    id = value;", "+                } else {", "+                    throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\", locator);", "+                }", "+            }", "+", "+            if (name == null) {", "+                throw new SAXParseException(\"target element appears without a name attribute\", locator);", "+            }", "+", "+            target = new Target();", "+            target.setName(name);", "+            target.setCondition(cond);", "+            project.addTarget(name, target);", "+", "+            if (id != null && !id.equals(\"\"))", "+                project.addReference(id, target);", "-            if (targetDep.length() > 0) {", "-                StringTokenizer tok =", "-                    new StringTokenizer(targetDep, \",\", false);", "+            if (depends.length() > 0) {", "+                StringTokenizer tok = ", "+                    new StringTokenizer(depends, \",\", false);", "+        }", "-            // populate target with tasks", "-", "-            configureTasks(project, target, element);"]}]}