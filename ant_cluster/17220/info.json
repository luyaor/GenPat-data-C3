{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e734a1713e724a3d973ddf8eefc5ece7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7521b2dbeeec2f1dcabc314ba222dca7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public void startBuild(List targets) throws AntException", "signatureAfterChange": "     public void startBuild(List targets) throws AntException", "diff": ["-            URL systemLibs", "-                = new URL(antEnv.getLibraryURL(), \"syslibs/\");", "-            componentManager.loadLib(systemLibs, false);", "+            log(\"Loading system antlibs.\", MessageLevel.DEBUG);", "+            URL systemLibsURL = antEnv.getSyslibsURL();", "+            componentManager.loadLib(systemLibsURL, false);", "+            log(\"Importing standard components.\", MessageLevel.DEBUG);", "+            log(\"Executing global configuration tasks\", MessageLevel.DEBUG);", "-            URL antLibs = new URL(antEnv.getLibraryURL(), \"antlibs/\");", "-            componentManager.loadLib(antLibs, false);", "+            log(\"Loading standard antlibs.\", MessageLevel.DEBUG);", "+            URL antLibsURL = antEnv.getAntlibsURL();", "+            componentManager.loadLib(antLibsURL, false);", "-        } catch (MalformedURLException e) {", "-            ExecutionException ee =", "-                new ExecutionException(\"Unable to initialize antlibs\", e);", "-            buildFailureCause = ee;", "-            throw ee;", "+        } catch (Throwable e) {", "+            ExecutionException ee =", "+                new ExecutionException(\"Unable to initialize antlibs\", e);", "+            buildFailureCause = ee;", "+            throw ee;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18fa037460088454900f0fa5d3c314d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 37, "signatureBeforeChange": "     protected void initialize() throws ExecutionException", "signatureAfterChange": "     protected void initialize() throws ExecutionException", "diff": ["+        configureServices();", "+        setMagicProperties();", "-        Iterator taskIterator = project.getTasks();", "-", "-        executeTasks(taskIterator);", "+        try {        ", "+            // load system ant lib", "+            URL systemLibs ", "+                = new URL(initConfig.getLibraryURL(), \"syslibs/\");", "+            componentManager.loadLib(systemLibs.toString(), true);", "+            ", "+            // execute any config tasks", "+            executeTasks(config.getTasks());", "+    ", "+            // now load other system libraries", "+            URL antLibs = new URL(initConfig.getLibraryURL(), \"antlibs/\");", "+            componentManager.loadLib(antLibs.toString(), false);                           ", "+            ", "+            executeTasks(project.getTasks());", "+        } catch (MalformedURLException e) {", "+            throw new ExecutionException(\"Unable to initialize antlibs\", e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f1cf81eed054da90a5e14fa032951e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 45, "signatureBeforeChange": "     protected void initialize() throws ExecutionException", "signatureAfterChange": "     public void startBuild(List targets) throws AntException", "diff": ["-    protected void initialize() throws ExecutionException {", "-        configureServices();", "-        setMagicProperties();", "-        determineBaseDir();", "+    public void startBuild(List targets) throws AntException {", "+        eventSupport.fireBuildStarted(project);", "-        try {        ", "+        Throwable buildFailureCause = null;", "+        try {", "-            URL systemLibs ", "+            URL systemLibs", "-            componentManager.loadLib(systemLibs.toString(), true, true);", "-            ", "-            // execute any config tasks", "-            executeTasks(config.getTasks());", "-    ", "+            componentManager.loadLib(systemLibs, true);", "+", "+            executeTasks(config.getGlobalTasks());", "+", "-            componentManager.loadLib(antLibs.toString(), false, true);", "-            ", "-            executeTasks(project.getTasks());", "+            componentManager.loadLib(antLibs, false);", "+", "+", "+        try {", "+            runBuild(targets);", "+        } catch (RuntimeException e) {", "+            buildFailureCause = e;", "+            throw e;", "+        } catch (AntException e) {", "+            buildFailureCause = e;", "+            throw e;", "+        } finally {", "+            eventSupport.fireBuildFinished(project, buildFailureCause);", "+        }", "+    }"]}]}