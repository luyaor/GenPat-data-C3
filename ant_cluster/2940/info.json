{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68e7683e33f9d490a626bf9bef48fdc6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aff6537b65249aa456fc4c338afc980", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private String readLines(InputStream is) throws IOException", "signatureAfterChange": "     private String readLines(final InputStream is) throws IOException", "diff": ["-    private String readLines(InputStream is) throws IOException {", "-        InputStreamReader isr = new InputStreamReader(is, ResourceUtils.ISO_8859_1);", "-        PushbackReader pbr = new PushbackReader(isr, 1);", "+    private String readLines(final InputStream is) throws IOException {", "+        final InputStreamReader isr = new InputStreamReader(is, ResourceUtils.ISO_8859_1);", "+        final PushbackReader pbr = new PushbackReader(isr, 1);", "-        BufferedReader br = new BufferedReader(pbr);", "+        final BufferedReader br = new BufferedReader(pbr);", "-        StringBuffer fileBuffer = new StringBuffer();", "-        StringBuffer logicalLineBuffer = new StringBuffer();", "+        final StringBuffer fileBuffer = new StringBuffer();", "+        final StringBuffer logicalLineBuffer = new StringBuffer();", "-                    String key = unescape(((Pair)line).getName());", "+                    final String key = unescape(((Pair)line).getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b724ffa0a77609f50f40bb5e553130", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void store(OutputStream out, String header) throws IOException", "signatureAfterChange": "      @Override \tpublic void store(final OutputStream out, final String header) throws IOException", "diff": ["-    public void store(OutputStream out, String header) throws IOException {", "-        OutputStreamWriter osw = new OutputStreamWriter(out, ResourceUtils.ISO_8859_1);", "+    @Override", "+\tpublic void store(final OutputStream out, final String header) throws IOException {", "+        final OutputStreamWriter osw = new OutputStreamWriter(out, ResourceUtils.ISO_8859_1);", "-        int totalLines = logicalLines.size();", "+        final int totalLines = logicalLines.size();", "-            } catch (java.text.ParseException pe) {", "+            } catch (final java.text.ParseException pe) {", "-        for (Iterator i = logicalLines.subList(skipLines, totalLines).iterator();", "-             i.hasNext(); ) {", "-            LogicalLine line = (LogicalLine) i.next();", "+        for (final Iterator i = logicalLines.subList(skipLines, totalLines).iterator();", "+             i.hasNext();) {", "+            final LogicalLine line = (LogicalLine) i.next();"]}]}