{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa9194459bcfd65952fdc97f0b7752bb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f54fe2d289b7e4ad605f42ec50e69e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/pvcs/Pvcs.java", "commitBeforeChange": "32b8cce516421a912ced3f568167107df3332710", "commitAfterChange": "e3b6d1fe768d87352d3d0348638911045fc4668e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws org.apache.tools.ant.BuildException", "signatureAfterChange": "     public void execute() throws org.apache.tools.ant.BuildException", "diff": ["-        if(repository == null || repository.trim().equals(\"\")) ", "+        if(repository == null || repository.trim().equals(\"\")) { ", "+        }", "-        if(getWorkspace()!=null)", "+        if(getWorkspace()!=null) {", "+        }", "-        if(getPvcsproject() == null && getPvcsprojects().isEmpty())", "+        if(getPvcsproject() == null && getPvcsprojects().isEmpty()) {", "+        }", "-        if(getPvcsproject()!=null)", "+        if(getPvcsproject()!=null) {", "+        }", "-                if (projectName == null || (projectName.trim()).equals(\"\"))", "+                if (projectName == null || (projectName.trim()).equals(\"\")) {", "+                }", "-            if(!tmp.exists())", "+            if(!tmp.exists()) {", "+            }", "-            if(getForce()!=null && getForce().equals(\"yes\"))", "+            if(getForce()!=null && getForce().equals(\"yes\")) {", "-            else", "+            } else {", "+            }", "-            if(getPromotiongroup()!=null)", "+            if(getPromotiongroup()!=null) {", "-            else {", "-                if(getLabel()!=null)", "+            } else {", "+                if(getLabel()!=null) {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5afa7936fbe7cb3f24a5c13528beb9b2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/ScriptRunner.java", "commitBeforeChange": "ebefa298a138aaf7088ad1af981a392b895eff85", "commitAfterChange": "c0b535098106a3b4549151960da251a6e78e627e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void addBeans(Map dictionary)", "signatureAfterChange": "     public boolean supportsLanguage()", "diff": ["-    public void addBeans(Map dictionary) {", "-        for (Iterator i = dictionary.keySet().iterator(); i.hasNext();) {", "-            String key = (String) i.next();", "-            try {", "-                Object val = dictionary.get(key);", "-                addBean(key, val);", "-            } catch (BuildException ex) {", "-                // The key is in the dictionary but cannot be retrieved", "-                // This is usually due references that refer to tasks", "-                // that have not been taskdefed in the current run.", "-                // Ignore", "-            }", "+    public boolean supportsLanguage() {", "+        if (manager != null) {", "+            return true;", "-    }", "+        checkLanguage();", "+        ClassLoader origLoader = replaceContextLoader();", "+        try {", "+            BSFManager m = createManager();", "+            BSFEngine e =", "+                engine != null", "+                ? engine", "+                : m.loadScriptingEngine(getLanguage());", "+            return e != null;", "+        } catch (Exception ex) {", "+            return false;", "+        } finally {", "+            restoreContextLoader(origLoader);"]}]}