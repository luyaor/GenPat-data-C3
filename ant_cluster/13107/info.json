{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6503d045178d8bdb95be70e561adc53c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630037232e098da60d71a5a57b534ca4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"srcdir attribute must be set!\" );", "+                throw new TaskException( \"srcdir attribute must be set!\" );", "-                throw new BuildException( \"The cache, if specified, must point to a directory\" );", "+                throw new TaskException( \"The cache, if specified, must point to a directory\" );", "-                    \" classes:\", Project.MSG_DEBUG );", "-                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements();  )", "+                     \" classes:\", Project.MSG_DEBUG );", "+                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                    Hashtable affectedClasses = ( Hashtable )affectedClassMap.get( className );", "-                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements();  )", "+                    Hashtable affectedClasses = (Hashtable)affectedClassMap.get( className );", "+                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements(); )", "-                        String affectedClass = ( String )e2.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )affectedClasses.get( affectedClass );", "+                        String affectedClass = (String)e2.nextElement();", "+                        ClassFileInfo info = (ClassFileInfo)affectedClasses.get( affectedClass );", "-                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                        String className = ( String )e.nextElement();", "+                        String className = (String)e.nextElement();", "-                        Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                        Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                            File classpathFile = ( File )e2.nextElement();", "+                            File classpathFile = (File)e2.nextElement();", "-                File srcDir = ( File )resolveFile( srcPathList[i] );", "+                File srcDir = (File)resolveFile( srcPathList[ i ] );", "-                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )classFileInfoMap.get( className );", "+                        ClassFileInfo info = (ClassFileInfo)classFileInfoMap.get( className );", "-                            Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                            Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                                File classpathFile = ( File )e2.nextElement();", "+                                File classpathFile = (File)e2.nextElement();", "-                                        \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "+                                         \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94703248cf00bddd64212187bf9b4ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"srcdir attribute must be set!\" );", "+                throw new TaskException( \"srcdir attribute must be set!\" );", "-                throw new BuildException( \"The cache, if specified, must point to a directory\" );", "+                throw new TaskException( \"The cache, if specified, must point to a directory\" );", "-                    \" classes:\", Project.MSG_DEBUG );", "-                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements();  )", "+                     \" classes:\", Project.MSG_DEBUG );", "+                for( Enumeration e = affectedClassMap.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                    Hashtable affectedClasses = ( Hashtable )affectedClassMap.get( className );", "-                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements();  )", "+                    Hashtable affectedClasses = (Hashtable)affectedClassMap.get( className );", "+                    for( Enumeration e2 = affectedClasses.keys(); e2.hasMoreElements(); )", "-                        String affectedClass = ( String )e2.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )affectedClasses.get( affectedClass );", "+                        String affectedClass = (String)e2.nextElement();", "+                        ClassFileInfo info = (ClassFileInfo)affectedClasses.get( affectedClass );", "-                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                    for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                        String className = ( String )e.nextElement();", "+                        String className = (String)e.nextElement();", "-                        Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                        Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                        for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                            File classpathFile = ( File )e2.nextElement();", "+                            File classpathFile = (File)e2.nextElement();", "-                File srcDir = ( File )resolveFile( srcPathList[i] );", "+                File srcDir = (File)resolveFile( srcPathList[ i ] );", "-                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements();  )", "+                for( Enumeration e = classpathDependencies.keys(); e.hasMoreElements(); )", "-                    String className = ( String )e.nextElement();", "+                    String className = (String)e.nextElement();", "-                        ClassFileInfo info = ( ClassFileInfo )classFileInfoMap.get( className );", "+                        ClassFileInfo info = (ClassFileInfo)classFileInfoMap.get( className );", "-                            Hashtable dependencies = ( Hashtable )classpathDependencies.get( className );", "-                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements();  )", "+                            Hashtable dependencies = (Hashtable)classpathDependencies.get( className );", "+                            for( Enumeration e2 = dependencies.elements(); e2.hasMoreElements(); )", "-                                File classpathFile = ( File )e2.nextElement();", "+                                File classpathFile = (File)e2.nextElement();", "-                                        \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "+                                         \" is out of date with respect to \" + classpathFile, Project.MSG_DEBUG );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}]}