{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfea2b2201c84d40e0f83900f17dea60", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ffa3d06825f9a84a5d6c105c1098ae5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "5971a069cf9cb4f14d0dac60d150eb952065f38a", "commitAfterChange": "1e65e7f37f2cfae8632629e2b52440a827bb1c76", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        boolean reallyDoUpdate = false;", "-        if (doUpdate && zipFile.exists())", "+        doUpdate = doUpdate && zipFile.exists();", "+        if (doUpdate)", "-            reallyDoUpdate = true;", "-", "-            int i;", "-            for (i=0; i < 1000; i++)", "-            {", "-                renamedFile = new File(zipFile.getParent(), \"tmp.\"+i);", "-", "-                if (!renamedFile.exists()) {", "-                    break;", "-                }", "-            }", "-            if (i == 1000) {", "-                throw new BuildException(\"Can't find available temporary filename to which to rename old file.\");", "-            }", "+            FileUtils fileUtils = FileUtils.newFileUtils();", "+            renamedFile = fileUtils.createTempFile(\"zip\", \".tmp\",", "+                                                   fileUtils.getParentFile(zipFile));", "-        String action = reallyDoUpdate ? \"Updating \" : \"Building \";", "+        String action = doUpdate ? \"Updating \" : \"Building \";", "-                if (reallyDoUpdate) {", "+                if (doUpdate) {", "-            if (reallyDoUpdate) {", "+            if (doUpdate) {", "-        if (success && reallyDoUpdate) {", "+        if (success && doUpdate) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25f876ac2f27a0d428f0d8db99f0664", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/JonasDeploymentTool.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private File createTempDir()", "signatureAfterChange": "     private File createTempDir() throws IOException", "diff": ["-    private File createTempDir() {", "-        String theTempDir = System.getProperty(\"java.io.tmpdir\");", "-        int anIndice = 0;", "-        File aFile = null;", "-        // try 50 times to find a free tempory directory", "-        while (anIndice < 50 && aFile == null) {", "-            aFile = new File(theTempDir, \"GenicTemp\" + anIndice);", "-            if (aFile.exists()) {", "-                anIndice++;", "-                aFile = null;", "-            }", "-        }", "-        if (aFile == null) {", "-            // problem in temp directory", "-            throw new BuildException(\"Impossible to find a free temp directory for output.\");", "-        } else {", "-            aFile.mkdirs();", "-            return (aFile);", "-        }", "+    private File createTempDir() throws IOException {       ", "+\tFile tmpDir = File.createTempFile(\"genic\", null, null);\t    ", "+\ttmpDir.delete();", "+\tif ( !tmpDir.mkdir() ) {", "+\t    throw new IOException(\"Cannot create the temporary directory '\" + tmpDir + \"'.\");", "+\t}", "+\treturn tmpDir;", "+    }"]}]}