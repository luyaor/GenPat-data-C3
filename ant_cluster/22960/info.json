{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f95719c0085a3dbd13c5566ae6439e7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1426f51103f0ac269696f5e64d38cba3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "1829060b863bcb631e251a2a58b7a752d60ddddb", "commitAfterChange": "432a0ae47a43a7e8c6a8c2678289b88b8aa18960", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private String[] makeArray( final ArrayList list, final TaskContext context )", "signatureAfterChange": "     private String[] toArray( final ArrayList list, final TaskContext context )", "diff": ["-    private String[] makeArray( final ArrayList list, final TaskContext context )", "+    private String[] toArray( final ArrayList list, final TaskContext context )", "-        final ArrayList tmpNames = new ArrayList();", "-        for( Iterator e = list.iterator(); e.hasNext(); )", "+        final ArrayList names = new ArrayList();", "+        final Iterator e = list.iterator();", "+        while( e.hasNext() )", "-            final Pattern ne = (Pattern)e.next();", "-            final String pattern = ne.evaluateName( context );", "-            if( pattern != null && pattern.length() > 0 )", "+            final Pattern pattern = (Pattern)e.next();", "+            final String result = pattern.evaluateName( context );", "+            if( null != result && result.length() > 0 )", "-                tmpNames.add( pattern );", "+                names.add( result );", "-        final String[] result = new String[ tmpNames.size() ];", "-        return (String[])tmpNames.toArray( result );", "+        return (String[])names.toArray( new String[ names.size() ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c5d2cde640c49b59983d51fbe956fe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/PatternSet.java", "commitBeforeChange": "1829060b863bcb631e251a2a58b7a752d60ddddb", "commitAfterChange": "432a0ae47a43a7e8c6a8c2678289b88b8aa18960", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private String[] makeArray( final ArrayList list, final TaskContext context )", "signatureAfterChange": "     private String[] toArray( final ArrayList list, final TaskContext context )", "diff": ["-    private String[] makeArray( final ArrayList list, final TaskContext context )", "+    private String[] toArray( final ArrayList list, final TaskContext context )", "-        final ArrayList tmpNames = new ArrayList();", "-        for( Iterator e = list.iterator(); e.hasNext(); )", "+        final ArrayList names = new ArrayList();", "+        final Iterator e = list.iterator();", "+        while( e.hasNext() )", "-            final Pattern ne = (Pattern)e.next();", "-            final String pattern = ne.evaluateName( context );", "-            if( pattern != null && pattern.length() > 0 )", "+            final Pattern pattern = (Pattern)e.next();", "+            final String result = pattern.evaluateName( context );", "+            if( null != result && result.length() > 0 )", "-                tmpNames.add( pattern );", "+                names.add( result );", "-        final String[] result = new String[ tmpNames.size() ];", "-        return (String[])tmpNames.toArray( result );", "+        return (String[])names.toArray( new String[ names.size() ] );"]}]}