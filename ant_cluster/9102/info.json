{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83d958612ffcd8848991fe8e90830686", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "390ab74a205f2c9fcc2240310943f155", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecTask.java", "commitBeforeChange": "7d7fa63c26bd2b7ebf1f42c6ba09c49f52e58b2a", "commitAfterChange": "6fd0ddc8b843c2f0348fc51f680d465b89046fe7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected String resolveExecutable(String exec, boolean searchPath)", "signatureAfterChange": "     protected String resolveExecutable(String exec, boolean searchPath)", "diff": ["+            Path p = null;", "+            String[] environment = env.getVariables();", "+            if (environment != null) {", "+                for (int i = 0; i < environment.length; i++) {", "+                    if (isPath(environment[i])) {", "+                        p = new Path(getProject(), ", "+                                     environment[i].substring(5));", "+                        break;", "+                    }", "+                }", "+            }", "+", "+            if (p == null) {", "-            Path p = null;", "-                if (line.startsWith(\"PATH=\") || line.startsWith(\"Path=\")) {", "+                if (isPath(line)) {", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d4b98d0f82e2c88a2e1c7476ec0ca0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "88f1be2d0462de59e99bf085522756a647195248", "commitAfterChange": "e242acf554b5d0d6045356db292c999bcdd9c41d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r     \r     private float getVersion()", "signatureAfterChange": "\r     \r     private DeweyDecimal getVersion()", "diff": ["-    private float getVersion() {\r", "+    private DeweyDecimal getVersion() {\r", "-        return Versions.getVersion(v);\r", "-    }\r", "+        char[] cs = v.toCharArray();\r", "+        int end = cs.length;\r", "+        for (int i = cs.length; i > 0; i--) {\r", "+            if (!Character.isLetter(cs[i-1])) {\r", "+                end = i;\r", "+                break;\r", "+            }\r", "+        v = v.substring(0, end);\r", "+        return new DeweyDecimal(v);\r"]}]}