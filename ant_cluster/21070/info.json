{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0455a709c01a7b2d2b6a7384e756144", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cdd40206acb685ec4e35c5020a318cb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/HashvalueAlgorithm.java", "commitBeforeChange": "bb9fcbf172c3b1656a17b2968c0ebff85037e205", "commitAfterChange": "d1e9fb46083b84b3277bdf8d4e23e05ffc19fbd7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getValue(File file)", "signatureAfterChange": "     public String getValue(File file)", "diff": ["-            byte[] content = new byte[fis.available()];", "-            fis.read(content);", "+            StringBuffer content = new StringBuffer();", "+            byte[] buffer = new byte[256];            ", "+            int len = 0;", "+            while ((len = fis.read(buffer, 0, len)) != -1) {", "+                content.append(new String(buffer, 0, len));", "+            }", "-            String s = new String(content);", "-            int hash = s.hashCode();", "+            int hash = content.toString().hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb023ef258ff5dc8f70fe4a0b9a7671c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "32dc44001f1d8348ce37d9b551feab8158e7b35f", "commitAfterChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void execute( final String[] args )         throws Exception", "signatureAfterChange": "      protected void execute( final String[] args )         throws Exception", "diff": ["-        setupProjectContext( project, defines );", "-            doBuild( engine, project, targets );", "+            final TaskContext context = new DefaultTaskContext();", "+            setupContext( context, defines );", "+", "+            context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+            context.setProperty( Project.PROJECT_FILE, buildFile );", "+            //context.setProperty( Project.PROJECT, projectName );", "+", "+            doBuild( engine, project, context, targets );"]}]}