{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a475cd025feefea3a3592811bc34045", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c35e84dcdad70013877e64b0eeaa166", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "signatureAfterChange": "          public void processDescriptor(String descriptorFileName, SAXParser saxParser)", "diff": ["-            if (config.supportFileSet != null) {", "-                Project project = task.getProject();", "-                File supportBaseDir = config.supportFileSet.getDir(project);", "-                DirectoryScanner supportScanner = config.supportFileSet.getDirectoryScanner(project);", "+            Project project = task.getProject();", "+            for (Iterator i = config.supportFileSets.iterator(); i.hasNext();) {", "+                FileSet supportFileSet = (FileSet)i.next();", "+                File supportBaseDir = supportFileSet.getDir(project);", "+                DirectoryScanner supportScanner = supportFileSet.getDirectoryScanner(project);", "-                for (int i = 0; i < supportFiles.length; ++i) {", "-                    ejbFiles.put(supportFiles[i], new File(supportBaseDir, supportFiles[i]));", "+                for (int j = 0; j < supportFiles.length; ++j) {", "+                    ejbFiles.put(supportFiles[j], new File(supportBaseDir, supportFiles[j]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d75a8f2e985e1ef73c54050ed0a2225", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/vfile/ListFileSetTask.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        FileSetResult result = m_fileSet.getResult( getContext() );", "-        final FileObject[] files = result.getFiles();", "-        final String[] paths = result.getPaths();", "-        for( int i = 0; i < files.length; i++ )", "+        final int count = m_fileSets.size();", "+        for( int i = 0; i < count; i++ )", "-            final FileObject file = files[ i ];", "-            final String path = paths[ i ];", "-            getLogger().info( path + \" = \" + file );", "+            final FileSet fileSet = (FileSet)m_fileSets.get(i );", "+            FileSetResult result = fileSet.getResult( getContext() );", "+            final FileObject[] files = result.getFiles();", "+            final String[] paths = result.getPaths();", "+            for( int j = 0; j < files.length; j++ )", "+            {", "+                final FileObject file = files[ j ];", "+                final String path = paths[ j ];", "+                getLogger().info( path + \" = \" + file );", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d487632749ebd70e5d134a0dd775f859", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/XMLValidateTask.java", "commitBeforeChange": "957f9e512572a78a3e82ca1d0938f486394950dd", "commitAfterChange": "d8361ec47ac005b959a6a22b17fecf77d540e890", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     private void initValidator()", "signatureAfterChange": "     private void initValidator()", "diff": ["-                    AntClassLoader loader", "-                        = getProject().createClassLoader(classpath);", "+                    AntClassLoader loader =", "+                        getProject().createClassLoader(classpath);", "-            log(\"Using SAX2 reader \" + reader.getClass().getName(),", "+            log(", "+                \"Using SAX2 reader \" + reader.getClass().getName(),", "-                log(\"Using SAX1 parser \" + reader.getClass().getName(),", "+                log(", "+                    \"Using SAX1 parser \" + reader.getClass().getName(),", "-            }  else {", "-                throw new BuildException(INIT_FAILED_MSG", "-                    + reader.getClass().getName()", "-                    + \" implements nor SAX1 Parser nor SAX2 XMLReader.\");", "+            } else {", "+                throw new BuildException(", "+                    INIT_FAILED_MSG", "+                        + reader.getClass().getName()", "+                        + \" implements nor SAX1 Parser nor SAX2 XMLReader.\");", "+", "+            // Sets properties", "+            for (int i = 0; i < propertyList.size(); i++) {", "+                final Property prop = (Property) propertyList.elementAt(i);", "+                setProperty(prop.getName(), prop.getValue());", "+            }"]}]}