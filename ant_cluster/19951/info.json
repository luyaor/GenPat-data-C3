{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa3fa3fcafdeb4ce83c8d2649eb5ddb1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d0918c9027865d701bb8b0668da6d31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarBuffer.java", "commitBeforeChange": "b43f4224d8fe9d1e7d628e88df394a7dfed46d1b", "commitAfterChange": "2e5b53fa106b848646493cb6f6ea74616973aca0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void skipRecord() throws IOException", "signatureAfterChange": "     public void skipRecord() throws IOException", "diff": ["-        if (currRecIdx >= recsPerBlock) {", "-            if (!readBlock()) {", "-                return;    // UNDONE", "-            }", "+        if (currRecIdx >= recsPerBlock && !readBlock()) {", "+            return;    // UNDONE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85f6824ac3528540b4c8fb26b1c02df", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "c64fafb60c841a1c7f014340167a84b32c0d19e3", "commitAfterChange": "adb161cdc40c45f6f563cdd7816973bc91a75178", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "     public static String getRelativePath(         File fromFile,         File toFile     ) throws Exception", "signatureAfterChange": "     public static String getRelativePath(File fromFile, File toFile) throws Exception", "diff": ["-    public static String getRelativePath(", "-        File fromFile,", "-        File toFile", "-    ) throws Exception {", "+    public static String getRelativePath(File fromFile, File toFile) throws Exception {", "-        int minLength = Math", "-                .min(fromPathStack.length, toPathStack.length);", "-", "+        int minLength = Math.min(fromPathStack.length, toPathStack.length);", "-        for (; same < minLength; same++) {", "-            if (!fromPathStack[same].equals(toPathStack[same])) {", "-                break;", "-            }", "-        }", "+        for (; same < minLength && fromPathStack[same].equals(toPathStack[same]); same++);"]}]}