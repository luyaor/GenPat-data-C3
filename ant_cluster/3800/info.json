{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29c329772975772c493dfc4074743226", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a78cd9c4674d6b02a356d66f76f49de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/UntarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testEncoding()", "signatureAfterChange": "      @Test     public void testEncoding()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"encoding\",", "-                                     \"<untar> overrides setEncoding.\",", "-                                     \"The untar task doesn't support the \"", "-                                     + \"encoding attribute\");", "+        try {", "+            buildRule.executeTarget(\"encoding\");", "+            fail(\"<untar> overrides setEncoding.\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"The untar task doesn't support the encoding attribute\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5cf71b26b6d7e547bd018d4cd913e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/StyleTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testWithStyleAttrAndResource() throws Exception", "signatureAfterChange": "      @Test     public void testWithStyleAttrAndResource()", "diff": ["-    public void testWithStyleAttrAndResource() throws Exception {", "-        expectSpecificBuildException(\"testWithStyleAttrAndResource\",", "-                \"Must throws a BuildException\", \"specify the \" +", "-                \"stylesheet either as a filename in style \" +", "-                \"attribute or as a nested resource but not \" +", "-                \"as both\");", "+    @Test", "+    public void testWithStyleAttrAndResource() {", "+        try {", "+            buildRule.executeTarget(\"testWithStyleAttrAndResource\");", "+            fail(\"Must throws a BuildException\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"specify the stylesheet either as a filename in style attribute or as a \"", "+                    + \"nested resource but not as both\", ex.getMessage());", "+        }"]}]}