{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "800529c0e3f1279793dc04fd60d722dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ffae6601c4d78866125d87233722bae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreExecService.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Object setupBuild(Project model, Map properties)          throws ExecutionException", "signatureAfterChange": "     public BuildKey setupBuild(Project model, Map properties,                                boolean addListeners)          throws AntException", "diff": ["-    public Object setupBuild(Project model, Map properties)", "-         throws ExecutionException {", "+    public BuildKey setupBuild(Project model, Map properties,", "+                               boolean addListeners)", "+         throws AntException {", "+        if (addListeners) {", "+            frame.addListeners(newFrame);", "+        }", "+        newFrame.initialize(properties);", "-        newFrame.setInitialProperties(properties);", "-", "-        Object key = new Object();", "+        // create an anonymous inner class key.", "+        BuildKey key = new BuildKey() {};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89510e3e6077f5465a12b51c799c05e9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void initialize(Map properties)          throws AntException", "signatureAfterChange": "     public void initialize(Map initialDataValues) throws AntException", "diff": ["-     */", "-    public void initialize(Map properties)", "-         throws AntException {", "+    public void initialize(Map initialDataValues) throws AntException {", "-        if (properties != null) {", "-            addProperties(properties);", "-        }", "-", "-        addProperties(System.getProperties());", "+        dataService.addProperties(System.getProperties(),", "+            DataValue.PRIORITY_BASE);", "+        if (initialDataValues != null) {", "+            dataService.addDataValues(initialDataValues);", "+        }"]}]}