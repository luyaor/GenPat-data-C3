{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e27abf109ee2649e67a864cbadc18558", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ccaa9f7d0452eab8944a277c905467", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java", "commitBeforeChange": "9be3d121b008a13bcef8c1bbd6adfa36a5d9d0e8", "commitAfterChange": "ce9af8263b480d123091720ab334e9c18061f359", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void processDate(final String line)", "signatureAfterChange": "     private void processDate(final String line)", "diff": ["-            date = line.substring(6, 25);", "-            String lineData = line.substring(line.indexOf(\";\") + 1);", "-            author = lineData.substring(10, lineData.indexOf(\";\"));", "+            // The date format is using a - format since 1.12.9 so we have:", "+            // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;'", "+            // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'", "+            int endOfDateIndex = line.indexOf(';');", "+            date = line.substring(\"date: \".length(), endOfDateIndex);", "+", "+            int startOfAuthorIndex = line.indexOf(\"author: \", endOfDateIndex + 1);", "+            int endOfAuthorIndex = line.indexOf(';', startOfAuthorIndex + 1);", "+            author = line.substring(\"author: \".length() + startOfAuthorIndex, endOfAuthorIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce9d3214fe17c312c9ba4fc5f08400d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "b04c338caa73cc14ad6e8b258280426c3522de38", "commitAfterChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void assertEqualsIgnoreDriveCase(String s1, String s2)", "signatureAfterChange": "     private void assertEqualsIgnoreDriveCase(String s1, String s2)", "diff": ["-        if (Os.isFamily(\"dos\") && s1.length()>=1 && s2.length()>=1) {", "-            StringBuffer sb1= new StringBuffer(s1);", "-            StringBuffer sb2= new StringBuffer(s2);", "-            sb1.setCharAt(0,Character.toUpperCase(s1.charAt(0)));", "-            sb2.setCharAt(0,Character.toUpperCase(s2.charAt(0)));", "-            assertEquals(sb1.toString(),sb2.toString());", "-        }   else {", "-            assertEquals(s1,s2);", "+        if ((Os.isFamily(\"dos\") || Os.isFamily(\"netware\"))", "+            && s1.length() > 0 && s2.length() > 0) {", "+            StringBuffer sb1 = new StringBuffer(s1);", "+            StringBuffer sb2 = new StringBuffer(s2);", "+            sb1.setCharAt(0, Character.toUpperCase(s1.charAt(0)));", "+            sb2.setCharAt(0, Character.toUpperCase(s2.charAt(0)));", "+            assertEquals(sb1.toString(), sb2.toString());", "+        } else {", "+            assertEquals(s1, s2);"]}]}