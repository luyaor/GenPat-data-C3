{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ea946ea7db1eaccb929f53edc82a996", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fae2d37445357cdc74331dbbff555cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/FileListTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testCircularReferenceCheck()", "signatureAfterChange": "      @Test     public void testCircularReferenceCheck()", "diff": ["+    @Test", "-        project.addReference(\"dummy\", f);", "-        f.setRefid(new Reference(getProject(), \"dummy\"));", "+        buildRule.getProject().addReference(\"dummy\", f);", "+        f.setRefid(new Reference(buildRule.getProject(), \"dummy\"));", "-            f.getDir(project);", "+            f.getDir(buildRule.getProject());", "-            f.getFiles(project);", "+            f.getFiles(buildRule.getProject());", "-        project.addReference(\"dummy1\", f1);", "-        f1.setRefid(new Reference(getProject(), \"dummy2\"));", "+        buildRule.getProject().addReference(\"dummy1\", f1);", "+        f1.setRefid(new Reference(buildRule.getProject(), \"dummy2\"));", "-        project.addReference(\"dummy2\", f2);", "-        f2.setRefid(new Reference(getProject(), \"dummy3\"));", "+        buildRule.getProject().addReference(\"dummy2\", f2);", "+        f2.setRefid(new Reference(buildRule.getProject(), \"dummy3\"));", "-        project.addReference(\"dummy3\", f3);", "-        f3.setRefid(new Reference(getProject(), \"dummy1\"));", "+        buildRule.getProject().addReference(\"dummy3\", f3);", "+        f3.setRefid(new Reference(buildRule.getProject(), \"dummy1\"));", "-            f1.getDir(project);", "+            f1.getDir(buildRule.getProject());", "-            f1.getFiles(project);", "+            f1.getFiles(buildRule.getProject());", "-        project.addReference(\"dummy1\", f1);", "-        f1.setRefid(new Reference(getProject(), \"dummy2\"));", "+        buildRule.getProject().addReference(\"dummy1\", f1);", "+        f1.setRefid(new Reference(buildRule.getProject(), \"dummy2\"));", "-        project.addReference(\"dummy2\", f2);", "-        f2.setRefid(new Reference(getProject(), \"dummy3\"));", "+        buildRule.getProject().addReference(\"dummy2\", f2);", "+        f2.setRefid(new Reference(buildRule.getProject(), \"dummy3\"));", "-        project.addReference(\"dummy3\", f3);", "-        f3.setDir(project.resolveFile(\".\"));", "-        File dir = f1.getDir(project);", "-        assertEquals(\"Dir is basedir\", dir, project.getBaseDir());", "+        buildRule.getProject().addReference(\"dummy3\", f3);", "+        f3.setDir(buildRule.getProject().resolveFile(\".\"));", "+        File dir = f1.getDir(buildRule.getProject());", "+        assertEquals(\"Dir is basedir\", dir, buildRule.getProject().getBaseDir());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eba7e1c7ca51fe8c85ed9ed3cf8b847", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 20, "signatureBeforeChange": "      public void testNonTestsSkipped() throws Exception", "signatureAfterChange": "      @Test     public void testNonTestsSkipped() throws Exception", "diff": ["+    @Test", "-        executeTarget(\"testNonTests\");", "-        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.NonTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.NonTestMissed.xml\").exists());", "-        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.JUnit3NonTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.JUnit3TestMissed.xml\").exists());", "-        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.AbstractTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractTestMissed.xml\").exists());", "-        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.AbstractJUnit3TestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractJUnit3TestMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractTestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractTestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractJUnit3TestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractJUnit3TestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.TestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3TestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.JUnit3TestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestWithSuiteNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.TestWithSuiteNotMissed.xml\").exists());", "-        executeTarget(\"testNonTestsRun\");", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.NonTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.NonTestMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3NonTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.JUnit3NonTestMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.TestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3TestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.JUnit3TestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractTestMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractTestNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractTestNotMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractJUnit3TestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.AbstractJUnit3TestMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3NonTestMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.JUnit3NonTestMissed.xml\").exists());", "-        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestWithSuiteNotMissed.xml\", new File(getOutputDir(), \"TEST-org.example.junit.TestWithSuiteNotMissed.xml\").exists());", "+        buildRule.executeTarget(\"testNonTests\");", "+        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.NonTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.NonTestMissed.xml\").exists());", "+        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.JUnit3NonTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.JUnit3TestMissed.xml\").exists());", "+        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.AbstractTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractTestMissed.xml\").exists());", "+        assertFalse(\"Test result should not exist as test was skipped - TEST-org.example.junit.AbstractJUnit3TestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractJUnit3TestMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractTestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractTestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractJUnit3TestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractJUnit3TestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.TestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3TestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.JUnit3TestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestWithSuiteNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.TestWithSuiteNotMissed.xml\").exists());", "+", "+        buildRule.executeTarget(\"testNonTestsRun\");", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.NonTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.NonTestMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3NonTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.JUnit3NonTestMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.TestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3TestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.JUnit3TestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractTestMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractTestNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractTestNotMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.AbstractJUnit3TestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.AbstractJUnit3TestMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.JUnit3NonTestMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.JUnit3NonTestMissed.xml\").exists());", "+        assertTrue(\"Test result should exist as test was not skipped - TEST-org.example.junit.TestWithSuiteNotMissed.xml\", new File(buildRule.getOutputDir(), \"TEST-org.example.junit.TestWithSuiteNotMissed.xml\").exists());", "+"]}]}