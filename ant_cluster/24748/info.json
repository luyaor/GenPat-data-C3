{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3c390c59c12883ad4cd5d045c54e7b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0595189c3ad508db91b7e697930f6544", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovBase.java", "commitBeforeChange": "9ba0cb2f6d429c39815cc6bc8b216e62e6b767cb", "commitAfterChange": "df03da5c6a1f8c8720c81e3ea0f00f2c618abdbf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected String findExecutable(String relativePath)", "signatureAfterChange": "      protected String findExecutable(String relativePath)", "diff": ["-        return fu.resolveFile(home, relativePath).getAbsolutePath();", "+        if (isDos) {", "+            relativePath += \".exe\";", "+        }", "+", "+        File loc = null;", "+        if (isJProbe4) {", "+            loc = fu.resolveFile(home, \"bin/\" + relativePath);", "+        } else {", "+            loc = fu.resolveFile(home, relativePath);", "+            if (!loc.canRead()) {", "+                File newLoc = fu.resolveFile(home, \"bin/\" + relativePath);", "+                if (newLoc.canRead()) {", "+                    isJProbe4 = true;", "+                    loc = newLoc;", "+                }", "+            }", "+        }", "+        return loc.getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348118adc45b90ea03fac456bad07844", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovBase.java", "commitBeforeChange": "9ba0cb2f6d429c39815cc6bc8b216e62e6b767cb", "commitAfterChange": "df03da5c6a1f8c8720c81e3ea0f00f2c618abdbf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected File findJar(String relativePath)", "signatureAfterChange": "      protected File findCoverageJar()", "diff": ["-    protected File findJar(String relativePath) {", "-        return fu.resolveFile(home, relativePath);", "+    protected File findCoverageJar() {", "+        File loc = null;", "+        if (isJProbe4) {", "+            loc = fu.resolveFile(home, \"lib/coverage.jar\");", "+        } else {", "+            loc = fu.resolveFile(home, \"coverage/coverage.jar\");", "+            if (!loc.canRead()) {", "+                File newLoc = fu.resolveFile(home, \"lib/coverage.jar\");", "+                if (newLoc.canRead()) {", "+                    isJProbe4 = true;", "+                    loc = newLoc;", "+                }", "+            }", "+        }", "+        ", "+        return loc;"]}]}