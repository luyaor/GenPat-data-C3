{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e4f8027fb96c2adc231ab9d2f7414c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397d65309a2cc81b689e04e0618b71aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "6885f5ccadd471cc33c19bdcca4271aa3086d3ca", "commitAfterChange": "8dfa7abd4d64b0cbef6166a28440f39f46d6efd1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     Factory checkClass(final Class clz) \tthrows BuildException", "signatureAfterChange": "     void checkClass(final Class clz)  \tthrows BuildException", "diff": ["-    Factory checkClass(final Class clz) // Package on purpose", "+    void checkClass(final Class clz) ", "-\tif (clz == null) return null;", "-", "-\t\treturn new Factory(){", "-\t\t\tpublic Object create(Project p) {", "-\t\t\t    try {", "-\t\t\t\treturn clz.newInstance();", "-\t\t\t    }", "-\t\t\t    catch(Exception e) {", "-\t\t\t\tthrow new BuildException(e);", "-\t\t\t    }", "-\t\t\t}", "-", "-\t\t\tpublic Class getOriginalClass() {", "-\t\t\t    return clz;", "-\t\t\t}", "-\t\t    };", "-                final Constructor c = ", "-\t\t    clz.getConstructor(new Class[] {Project.class});", "-\t\treturn new Factory(){", "-\t\t\tpublic Object create(Project p) {", "-\t\t\t    try {", "-\t\t\t\treturn c.newInstance(new Object[]{p});", "-\t\t\t    }", "-\t\t\t    catch(Exception e) {", "-\t\t\t\tthrow new BuildException(e);", "-\t\t\t    }", "-\t\t\t}", "-", "-\t\t\tpublic Class getOriginalClass() {", "-\t\t\t    return clz;", "-\t\t\t}", "-\t\t    };", "+                clz.getConstructor(new Class[] {Project.class});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bccce8acbea51460b767e93bc9db79f5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "2bcc3b328adcc97c10be2efba1077ccf28b92caa", "commitAfterChange": "4ad59f0fc5eb69936f4322c1394993d33299959b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "     void checkClass(final Class clz)  \tthrows BuildException", "signatureAfterChange": "     Factory checkClass(final Class clz) \tthrows BuildException", "diff": ["-    void checkClass(final Class clz) ", "+    Factory checkClass(final Class clz) // Package on purpose", "+\tif (clz == null) return null;", "+", "+\t\treturn new Factory(){", "+\t\t\tpublic Object create(Project p) {", "+\t\t\t    try {", "+\t\t\t\treturn clz.newInstance();", "+\t\t\t    }", "+\t\t\t    catch(Exception e) {", "+\t\t\t\tthrow new BuildException(e);", "+\t\t\t    }", "+\t\t\t}", "+", "+\t\t\tpublic Class getOriginalClass() {", "+\t\t\t    return clz;", "+\t\t\t}", "+\t\t    };", "-                clz.getConstructor(new Class[] {Project.class});", "+                final Constructor c = ", "+\t\t    clz.getConstructor(new Class[] {Project.class});", "+\t\treturn new Factory(){", "+\t\t\tpublic Object create(Project p) {", "+\t\t\t    try {", "+\t\t\t\treturn c.newInstance(new Object[]{p});", "+\t\t\t    }", "+\t\t\t    catch(Exception e) {", "+\t\t\t\tthrow new BuildException(e);", "+\t\t\t    }", "+\t\t\t}", "+", "+\t\t\tpublic Class getOriginalClass() {", "+\t\t\t    return clz;", "+\t\t\t}", "+\t\t    };"]}]}