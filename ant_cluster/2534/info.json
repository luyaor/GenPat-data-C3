{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c6944a033f08746e1b2a45748474fcd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e51983cc44604d08c486e6ece899776", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/WeakishReference.java", "commitBeforeChange": "122c6ddd9ee015a8638b9143815d3289badfdf04", "commitAfterChange": "fb773596657265aa101b7513a2374aab27afbbd9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static WeakishReference createReference(Object object)", "signatureAfterChange": "     public static WeakishReference createReference(Object object)", "diff": ["-        if (referenceConstructor == null) {", "-            createReferenceConstructor();", "-        }", "-        try {", "-            return (WeakishReference) referenceConstructor", "-                        .newInstance(new Object[]{object});", "-        } catch (Exception e) {", "-            throw new BuildException(\"while creating a weakish reference\", e);", "-        }", "+            return new WeakishReference12(object);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380d706c2a386a646dd09b69f4a4dd78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/WeakishReference.java", "commitBeforeChange": "1699e35445109864ac93c27212b9392a8797c2fc", "commitAfterChange": "e5a85d7265ed5c9a0e391d5d00596368229e8014", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static WeakishReference createReference(Object object)", "signatureAfterChange": "     public static WeakishReference createReference(Object object)", "diff": ["-        if(JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "-            return new HardReference(object);", "-        } else {", "-            return new SoftReference(object);", "+        if(referenceConstructor==null) {", "+            createReferenceConstructor();", "+        }", "+        try {", "+            return (WeakishReference)referenceConstructor", "+                        .newInstance(new Object[]{object});", "+        } catch (Exception e) {", "+            throw new BuildException(\"while creating a weakish reference\",e);"]}]}