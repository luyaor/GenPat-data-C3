{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5e168c2338368c3d7ac97710d074215", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "363da6db73e8a470ee41d360d72d3d5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "861a4490644853d4b9bff9b0d0b871d7e88b0784", "commitAfterChange": "3af551b1bbd21e0ff6d8bb1453dac216ce89e9da", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void touch() throws BuildException", "signatureAfterChange": "     protected void touch() throws BuildException", "diff": ["-            touch(file.getParentFile(), file.getName(), defaultTimestamp);", "+            touch(new FileResource(file.getParentFile(), file.getName()),", "+                  defaultTimestamp);", "-        // deal with the filesets", "+        // deal with the resource collections", "+        Iterator iter = resources.iterator();", "+        while (iter.hasNext()) {", "+            Resource r = (Resource) iter.next();", "+            if (!(r instanceof Touchable)) {", "+                throw new BuildException(\"Can't touch \" + r);", "+            }", "+            touch(r, defaultTimestamp);", "+        }", "+", "+        // deal with filesets in a special way since the task", "+        // originally also used the directories and Union won't return", "+        // them.", "-            String[] srcFiles = ds.getIncludedFiles();", "-            for (int j = 0; j < srcFiles.length; j++) {", "-                touch(fromDir, srcFiles[j], defaultTimestamp);", "-            }", "-                touch(fromDir, srcDirs[j], defaultTimestamp);", "-            }", "-        }", "-        // deal with the filelists", "-        for (int i = 0; i < filelists.size(); i++) {", "-            FileList fl = (FileList) filelists.elementAt(i);", "-            File fromDir = fl.getDir(getProject());", "-", "-            String[] srcFiles = fl.getFiles(getProject());", "-", "-            for (int j = 0; j < srcFiles.length; j++) {", "-                touch(fromDir, srcFiles[j], defaultTimestamp);", "+                touch(new FileResource(fromDir, srcDirs[j]), defaultTimestamp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acbe6f20cb9158ac29616519a5175ce7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "6d5ce5b54d4424f74298d7aac6778539e286b8f4", "commitAfterChange": "44735223d94bae810d33e7f820d587bfb49728fd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "+        ", "-", "+        ", "-", "+        ", "-", "+        ", "-        if(liaison instanceof XSLTLoggerAware) {", "+        if (liaison instanceof XSLTLoggerAware) {", "-", "-        log(\"Using \"+liaison.getClass().toString(), Project.MSG_VERBOSE);", "-", "+        ", "+        log(\"Using \" + liaison.getClass().toString(), Project.MSG_VERBOSE);", "+        ", "-                log(\"DEPRECATED - the style attribute should be relative to the project\\'s\");", "+                log(\"DEPRECATED - the style attribute should be relative \" ", "+                    + \"to the project\\'s\");", "-", "+        ", "-", "+        ", "-", "+        ", "-        log(\"Transforming into \"+destDir, Project.MSG_INFO);", "-", "+        log(\"Transforming into \" + destDir, Project.MSG_INFO);", "+        ", "-        for (int i = 0;i < list.length; ++i) {", "+        for (int i = 0; i < list.length; ++i) {", "-", "-            for (int j = 0;j < dirs.length;++j){", "-                list=new File(baseDir,dirs[j]).list();", "-                for (int i = 0;i < list.length;++i) {", "+            for (int j = 0; j < dirs.length; ++j){", "+                list = new File(baseDir, dirs[j]).list();", "+                for (int i = 0; i < list.length; ++i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f63e997d37ace27ebad23b6097b415", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "9c51b355f7e7c16c5466e43b59019cad49a1fe56", "commitAfterChange": "b001eb2bcb618ad963c862bf203df3c0a302bd99", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "     protected void checkOptions() throws BuildException", "signatureAfterChange": "     protected void checkOptions() throws BuildException", "diff": ["-        if (home == null || !home.isDirectory()) {", "+        if (getHome() == null || !getHome().isDirectory()) {", "-        home = new File(home, \"coverage\");", "-        File jar = new File(home, \"coverage.jar\");", "+        File jar = findJar(\"coverage/coverage.jar\");", "-            throw new BuildException(\"Cannot find Coverage directory: \" + home);", "+            throw new BuildException(\"Cannot find Coverage directory: \" + getHome());", "-            String version = System.getProperty(\"java.version\");", "-            // make we are using 1.2+, if it is, then do your best to", "-            // get a javaexe", "-            if (!version.startsWith(\"1.1\")) {", "+            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "-                // if we are here obviously it is java2", "-                String home = System.getProperty(\"java.home\");", "-                boolean isUnix = File.separatorChar == '/';", "-                javaExe = isUnix ? new File(home, \"bin/java\") : new File(home, \"/bin/java.exe\");", "+                javaExe = new File(JavaEnvUtils.getJreExecutable(\"java\"));"]}]}