{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "930a109f2823c3cfa4b906db41dabd01", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb22599b4ba5a160d95701e6b81f6ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["+    private void formatError(String type, Test test, Throwable t) {", "+        if (test != null) {", "+            endTest(test);", "+        }", "+", "+        Element nested = doc.createElement(type);", "+        if (test != null) {", "+            currentTest.appendChild(nested);", "+        } else {", "+            rootElement.appendChild(nested);", "+        }", "+", "+        String message = t.getMessage();", "+        if (message != null && message.length() > 0) {", "+            nested.setAttribute(\"message\", xmlEscape(t.getMessage()));", "+        }", "+        nested.setAttribute(\"type\", xmlEscape(t.getClass().getName()));", "+", "+        StringWriter swr = new StringWriter();", "+        t.printStackTrace(new PrintWriter(swr, true));", "+        Text trace = doc.createTextNode(swr.toString());", "+        nested.appendChild(trace);", "+    }", "-", "-    private void formatError(String type, Test test, Throwable t) {", "-        formatTestCaseOpenTag(test);", "-        results.append(\"    <\");", "-        results.append(type);", "-        results.append(\" message=\\\"\");", "-        results.append(xmlEscape(t.getMessage()));", "-        results.append(\"\\\" type=\\\"\");", "-        results.append(t.getClass().getName());", "-        results.append(\"\\\">\");", "-        results.append(newLine);", "-", "-        results.append(\"<![CDATA[\");", "-        results.append(newLine);", "-        StringWriter swr = new StringWriter();", "-        t.printStackTrace(new PrintWriter(swr, true));", "-        results.append(swr.toString());", "-        results.append(\"]]>\");", "-        results.append(newLine);", "-", "-        results.append(\"    </\");", "-        results.append(type);", "-        results.append(\">\");", "-        results.append(newLine);", "-", "-        results.append(\"  </testcase>\");", "-        results.append(newLine);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c56474ac06a3aac4073b6d9b4a411d7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void endTestSuite(JUnitTest suite)", "signatureAfterChange": "     public void endTestSuite(JUnitTest suite) throws BuildException", "diff": ["-    public void endTestSuite(JUnitTest suite) {", "-        out.println(\"<?xml version=\\\"1.0\\\"?>\");", "-        out.print(\"<testsuite name=\\\"\");", "-        out.print(suite.getName());", "-        out.print(\"\\\" tests=\\\"\");", "-        out.print(suite.runCount());", "-        out.print(\"\\\" failures=\\\"\");", "-        out.print(suite.failureCount());", "-        out.print(\"\\\" errors=\\\"\");", "-        out.print(suite.errorCount());", "-        out.print(\"\\\" time=\\\"\");", "-        out.print(nf.format(suite.getRunTime()/1000.0));", "-        out.println(\" sec\\\">\");", "-        out.print(results.toString());", "-        out.println(\"</testsuite>\");", "-        out.flush();", "-        out.close();", "+     */", "+    public void endTestSuite(JUnitTest suite) throws BuildException {", "+        rootElement.setAttribute(\"tests\", \"\"+suite.runCount());", "+        rootElement.setAttribute(\"failures\", \"\"+suite.failureCount());", "+        rootElement.setAttribute(\"errors\", \"\"+suite.errorCount());", "+        rootElement.setAttribute(\"time\", ", "+                                 nf.format(suite.getRunTime()/1000.0)+\" sec\");", "+        if (out != null) {", "+            Writer wri = null;", "+            try {", "+                wri = new OutputStreamWriter(out);", "+                wri.write(\"<?xml version=\\\"1.0\\\"?>\\n\");", "+                write(rootElement, wri, 0);", "+                wri.flush();", "+            } catch(IOException exc) {", "+                throw new BuildException(\"Unable to write log file\", exc);", "+            } finally {", "+                if (wri != null) {", "+                    try {", "+                        wri.close();", "+                    } catch (IOException e) {}", "+                }", "+            }", "+        }"]}]}