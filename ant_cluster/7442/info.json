{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fba96b928505caec6544ea5274419767", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebb2929b0cab96ba7b142c2751e6bd4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "3f240a64d9b37b5b3de325c0930e1aee73c17b07", "commitAfterChange": "617f12691cf1b500ef88fd755955c95f6827ae20", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     private String formatCommandLine(Commandline cmd)", "signatureAfterChange": "     private String formatCommandLine(Commandline cmd)", "diff": ["-        int indexUser = sBuff.indexOf(FLAG_LOGIN);", "+        int indexUser = sBuff.substring(0).indexOf(FLAG_LOGIN);", "-            int indexPass = sBuff.indexOf(\",\", indexUser);", "-            int indexAfterPass = sBuff.indexOf(\" \", indexPass);", "+            int indexPass = sBuff.substring(0).indexOf(\",\", indexUser);", "+            int indexAfterPass = sBuff.substring(0).indexOf(\" \", indexPass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c65953e0d8caaf1ad9bd6e0c93943c0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "9fdb1c85ba0d2fab36ce8f3b0563f393d955ac9d", "commitAfterChange": "a51c373c0fcf539fc8f71b5c21951fa64439d361", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 44, "signatureBeforeChange": "     private void stringReplace(StringBuffer str, String str1, String str2,                                  boolean countReplaces)", "signatureAfterChange": "     private void stringReplace(StringBuffer str, String str1, String str2)", "diff": ["-    private void stringReplace(StringBuffer str, String str1, String str2,", "-                                 boolean countReplaces) {", "-        int found = str.indexOf(str1);", "+    private void stringReplace(StringBuffer str, String str1, String str2) {", "+        int found = str.toString().indexOf(str1);", "-            found = str.indexOf(str1, found + str2.length());", "-            if (countReplaces) {", "-                ++replaceCount;", "-            }", "+            found = str.toString().indexOf(str1, found + str2.length());"]}]}