{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccf827ab881bf16bf582fb6f34c26f5f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbfe8d50b63770ac725990634392f5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "b5ad58c4d736b7f0a97aaa78b258dcceb9c21c89", "commitAfterChange": "7435b27b914764c3845b4821363ffeb4ddfe89cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void setWorkingdir(File workingdir)", "signatureAfterChange": "     protected void generateOptionsFile(File tofile, String[] options) throws BuildException", "diff": ["-    public void setWorkingdir(File workingdir) {", "-        this.metaworkingdir = workingdir;", "-    }", "+     */", "+    protected void generateOptionsFile(File tofile, String[] options) throws BuildException {", "+        FileWriter fw = null;", "+        try {", "+            fw = new FileWriter(tofile);", "+            PrintWriter pw = new PrintWriter(fw);", "+            for (int i = 0; i < options.length; i++){", "+                pw.println( options[i] );", "+            }", "+            pw.flush();", "+        } catch (IOException e){", "+            throw new BuildException(\"Error while writing options file \" + tofile, e);", "+        } finally {", "+            if (fw != null){", "+                try {", "+                    fw.close();", "+                } catch (IOException ignored){}", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1bcc4c0fa36214321b4dfd7236ae0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exec.java", "commitBeforeChange": "0218e3ecae8397a700aae864601f963e5771a9a5", "commitAfterChange": "a037ae329b9fa9d94dde3fc7c4346ab77dddfdb9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void pipeOutput(InputStream is, String name, PrintWriter fos)          throws IOException", "signatureAfterChange": "  \tpublic void run()", "diff": ["-    private void pipeOutput(InputStream is, String name, PrintWriter fos) ", "-        throws IOException ", "-    {", "-project.log(\"pipeOutput\", name, Project.MSG_INFO);", "-        InputStreamReader isr=new InputStreamReader(is);", "-        BufferedReader din = new BufferedReader(isr);", "-        // pipe output to STDOUT", "-        String line;", "-        while((line = din.readLine()) != null) {", "-        if( fos==null)", "-            project.log(line, name, Project.MSG_INFO);", "-        else", "-            fos.println(line);", "-        }", "+", "+\tpublic void run() {", "+            try {", "+\t        try {", "+\t\t    while (!endOfStream) {", "+\t\t        pumpStream();", "+\t\t        sleep(SLEEP_TIME);", "+\t\t    }", "+\t        } catch (InterruptedException ie) {", "+                }", "+                din.close();", "+\t    } catch (IOException ioe) {", "+\t    }", "+\t}"]}]}