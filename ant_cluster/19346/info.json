{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc208e1f8e2ebc143750f322f0dee927", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d508c94a44cdb5ecb9e720f5f442848", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/framework/file/test/TestFileList.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] listFiles( final TaskContext context )         throws TaskException", "signatureAfterChange": "     public String[] listFiles( final TaskContext context )         throws TaskException", "diff": ["-        final File file = context.resolveFile( m_name );", "-        return new String[] { file.getAbsolutePath() };", "+        final ArrayList files = new ArrayList();", "+        if( m_name != null )", "+        {", "+            final File file = context.resolveFile( m_name );", "+            files.add( file.getAbsolutePath() );", "+        }", "+        if( m_path != null )", "+        {", "+            final String[] fileNames = m_path.listFiles( context );", "+            for( int i = 0; i < fileNames.length; i++ )", "+            {", "+                files.add( fileNames[ i ] );", "+            }", "+        }", "+        return (String[])files.toArray( new String[ files.size() ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf740ce43a05799aed69686d26f517c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "0e481b8463a698cc76b183b097eaa08db32fa6e4", "commitAfterChange": "c66d1357e4ef1e3e9b56512ab6b63784fc47220b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setImplementationVendorID( final String implementationVendorID )", "signatureAfterChange": "     private void extractLibraryData( final ArrayList librarys,                                      final ArrayList fileset )         throws TaskException", "diff": ["-     */", "-    public void setImplementationVendorID( final String implementationVendorID )", "-    {", "-        m_implementationVendorID = implementationVendorID;", "-    }", "+     */", "+    private void extractLibraryData( final ArrayList librarys,", "+                                     final ArrayList fileset )", "+        throws TaskException", "+    {", "+        if( !fileset.isEmpty() )", "+        {", "+            final Extension[] extensions = getExtensions( fileset );", "+            for( int i = 0; i < extensions.length; i++ )", "+            {", "+                librarys.add( extensions[ i ] );", "+            }", "+        }", "+    }"]}]}