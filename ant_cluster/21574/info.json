{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c409b578f861460a689a917a40489853", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13abba9193864388e2cca9dba803b593", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "74e8a57c93dd534ebfbca3b4d92ea34789c7fe0c", "commitAfterChange": "0b31d6f97a5e41f33dabeda8daae2e13194c1bb5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected String getJarBaseName(String descriptorFileName)", "signatureAfterChange": "     protected String getJarBaseName(String descriptorFileName)", "diff": ["-        if (config.baseJarName != null) {", "+        if (config.namingScheme.getValue().equals(EjbJar.NamingScheme.BASEJARNAME)) {", "-        } else {", "+        } else if (config.namingScheme.getValue().equals(EjbJar.NamingScheme.DESCRIPTOR)) {", "+        } else if (config.namingScheme.getValue().equals(EjbJar.NamingScheme.DIRECTORY)) {", "+            int lastSeparatorIndex = descriptorFileName.lastIndexOf(File.separator);", "+            String dirName = descriptorFileName.substring(0, lastSeparatorIndex);", "+            int dirSeparatorIndex = dirName.lastIndexOf(File.separator);", "+            if (dirSeparatorIndex != -1) {", "+                dirName = dirName.substring(dirSeparatorIndex + 1);", "+            }", "+            ", "+            baseName = dirName;", "+        } else if (config.namingScheme.getValue().equals(EjbJar.NamingScheme.EJB_NAME)) {", "+            baseName = handler.getEjbName();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23e99de28980d6bf0c1cb1ce8b481eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/common/org/apache/ant/common/model/ModelElement.java", "commitBeforeChange": "69d9b9a49622889f44d6792faf00f886857828d6", "commitAfterChange": "fcc7e2b47f01468c83803caa09ce8266e56f213c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setAspects(Map aspects)", "signatureAfterChange": "     public void addAspectAttributes(Map aspectAttributes)", "diff": ["-    public void setAspects(Map aspects) {", "-        aspectMaps = new HashMap();", "-        for (Iterator i = aspects.keySet().iterator(); i.hasNext();) {", "-            String aspectName = (String) i.next();", "-            int separator = aspectName.indexOf(\":\");", "-            if (separator != -1) {", "-                String prefix = aspectName.substring(0, separator);", "-                String name = aspectName.substring(separator + 1);", "-                if (prefix.length() != 0 && name.length() != 0) {", "-                    Map prefixMap = (Map) aspectMaps.get(prefix);", "-                    if (prefixMap == null) {", "-                        prefixMap = new HashMap();", "-                        aspectMaps.put(prefix, prefixMap);", "-                    }", "-                    prefixMap.put(name, aspects.get(aspectName));", "-                }", "-            }", "-        }", "+    public void addAspectAttributes(Map aspectAttributes) {", "+        aspectValues.addAttributes(aspectAttributes);"]}]}