{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22a5332865149d89847c00be17c6b0c5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f7d06d86cf9f5e385fb0480e674fffc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/PreSetDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testCorrectTaskNameBadEl()", "signatureAfterChange": "      @Test     public void testCorrectTaskNameBadEl()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(", "-            \"correct_taskname_badel\", \"element message\", \"javac doesn't support the\");", "+        try {", "+            buildRule.executeTarget(\"correct_taskname_badel\");", "+            fail(\"BuildException expected: element message\");", "+        } catch (BuildException ex) {", "+            assertContains(\"javac doesn't support the\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "434e01175f36495fc65d3fcaee39f1bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsFileSelectedTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testNotSelector()", "signatureAfterChange": "      @Test     public void testNotSelector()", "diff": ["+", "+    @Test", "-        expectBuildExceptionContaining(", "-            \"not.selector\", \"checking for use as a selector (not allowed)\",", "-            \"fileset doesn't support the nested \\\"isfile\");", "+        try {", "+            buildRule.executeTarget(\"not.selector\");", "+            fail(\"Exception should have been thrown: checking for use as a selector (not allowed)\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"fileset doesn't support the nested \\\"isfile\",", "+                    ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717d4c4d75a59aa28e5957aef2adf3cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testNested6()", "signatureAfterChange": "      @Test     public void testNested6()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"testNested6\",", "-            \"it is required to fail :-)\",", "-            \"testNested6\\ntestNested6\\ntestNested6\");", "+        try {", "+            buildRule.executeTarget(\"testNested6\");", "+            fail(\"it is required to fail :-)\") ;", "+        } catch (BuildException ex) {", "+            assertEquals(\"testNested6\\ntestNested6\\ntestNested6\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89daafcbda93dd2b22f1c1dbfdb65ee7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/PreSetDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testCorrectTaskNameBadAttr()", "signatureAfterChange": "      @Test     public void testCorrectTaskNameBadAttr()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(", "-            \"correct_taskname_badattr\", \"attribute message\", \"javac doesn't support the\");", "+        try {", "+            buildRule.executeTarget(\"correct_taskname_badattr\");", "+            fail(\"BuildException expected: attribute message\");", "+        } catch (BuildException ex) {", "+            assertContains(\"javac doesn't support the\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e4f0d79f56bc9af7974884af1194253", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void testNested5()", "signatureAfterChange": "      @Test     public void testNested5()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"testNested5\",", "-            \"it is required to fail :-)\",", "-            \"Only one nested condition is allowed.\");", "+        try {", "+            buildRule.executeTarget(\"testNested5\");", "+            fail(\"it is required to fail :-)\") ;", "+        } catch (BuildException ex) {", "+            assertEquals(\"Only one nested condition is allowed.\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a351f09f5f4ccdb37ba1f062096e61d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/XmlnsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testExcluded()", "signatureAfterChange": "      @Test     public void testExcluded()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(", "-            \"excluded\", \"excluded uri\",", "-            \"Attempt to use a reserved URI ant:notallowed\");", "+        try {", "+            buildRule.executeTarget(\"excluded\");", "+            fail(\"BuildException expected: excluded uri\");", "+        } catch (BuildException ex) {", "+            assertEquals(\"Attempt to use a reserved URI ant:notallowed\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28d183a4261cc9688c57df010e5ff2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/AddTypeTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testConditionConditionTask()", "signatureAfterChange": "          @Test     public void testConditionConditionTask()", "diff": ["+    ", "+    @Test", "-        expectBuildExceptionContaining(", "-            \"condition.condition.task\", \"task masking condition\",", "-            \"doesn't support the nested\");", "+        try {", "+            buildRule.executeTarget(\"condition.condition.task\");", "+            fail(\"Build exception expected: Task masking condition\");", "+        } catch (BuildException ex) {", "+             AntAssert.assertContains(\"doesn't support the nested\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c3f230696554f436f94ce960983945", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testNested3()", "signatureAfterChange": "      @Test     public void testNested3()", "diff": ["-    public void testNested3() {", "-        expectSpecificBuildException(\"testNested3\",", "-            \"it is required to fail :-)\",", "-            \"testNested3\");", "+    @Test", "+    public void testNested3() {", "+        try {", "+            buildRule.executeTarget(\"testNested3\");", "+            fail(\"it is required to fail :-)\") ;", "+        } catch (BuildException ex) {", "+            assertEquals(\"testNested3\", ex.getMessage());", "+        }", "+    }"]}]}