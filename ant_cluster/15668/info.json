{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7923151db5f84c593c2ae221fbb4c16", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07175171fa988cf1c16b3f50308bd570", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/Environment.java", "commitBeforeChange": "4c36f7cb5aca402d90ea046454939860ba5457e8", "commitAfterChange": "4a9c6d79bc91a3a35d222c8f037830feb7de0cfe", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static String getEnvironmentText()         throws IOException, TaskException", "signatureAfterChange": "     private static String getEnvironmentText()         throws IOException, ExecException", "diff": ["-        throws IOException, TaskException", "+        throws IOException, ExecException", "-        final int retval = exe.execute();", "-        if( retval != 0 )", "+        try", "-            // Just try to use what we got", "+            final int retval = exe.execute();", "+            if( retval != 0 )", "+            {", "+                // Just try to use what we got", "+            }", "+        }", "+        catch( final TaskException te )", "+        {", "+            throw new ExecException( te.getMessage(), te );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3979d9a0cbabc1af1c8754fc6115176", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected String getString(byte[] bytes, String enc)         throws ZipException", "signatureAfterChange": "     protected String getString(byte[] bytes, String enc)         throws ZipException", "diff": ["-                return ZipEncodingHelper.decodeName(bytes, enc);", "+                try {", "+                    return ZipEncodingHelper.decodeName(bytes, enc);", "+                } catch (CharacterCodingException ex) {", "+                    throw new ZipException(ex.getMessage());", "+                }"]}]}