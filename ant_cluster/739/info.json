{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65f51f0623b016463ff261bfe5075e20", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a68802321031aa761d88bf6a65fc18", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/depend/bcel/FullAnalyzer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void determineDependencies(Vector files, Vector classes)", "signatureAfterChange": "     protected void determineDependencies(Vector<File> files, Vector<String> classes)", "diff": ["-    protected void determineDependencies(Vector files, Vector classes) {", "+    protected void determineDependencies(Vector<File> files, Vector<String> classes) {", "-        Hashtable dependencies = new Hashtable();", "-        Hashtable containers = new Hashtable();", "-        Hashtable toAnalyze = new Hashtable();", "-        for (Enumeration e = getRootClasses(); e.hasMoreElements();) {", "-            String classname = (String) e.nextElement();", "+        Hashtable<String, String> dependencies = new Hashtable<String, String>();", "+        Hashtable<File, File> containers = new Hashtable<File, File>();", "+        Hashtable<String, String> toAnalyze = new Hashtable<String, String>();", "+        for (Enumeration<String> e = getRootClasses(); e.hasMoreElements();) {", "+            String classname = e.nextElement();", "-            for (Enumeration e = toAnalyze.keys(); e.hasMoreElements();) {", "-                String classname = (String) e.nextElement();", "+            for (String classname : toAnalyze.keySet()) {", "-            Enumeration depsEnum = dependencyVisitor.getDependencies();", "+            Enumeration<String> depsEnum = dependencyVisitor.getDependencies();", "-                String className = (String) depsEnum.nextElement();", "+                String className = depsEnum.nextElement();", "-        for (Enumeration e = containers.keys(); e.hasMoreElements();) {", "-            files.addElement((File) e.nextElement());", "+        for (File f : containers.keySet()) {", "+            files.add(f);", "-        for (Enumeration e = dependencies.keys(); e.hasMoreElements();) {", "-            classes.addElement((String) e.nextElement());", "+        for (String dependency : dependencies.keySet()) {", "+            classes.add(dependency);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cefd22441b881b618f26091084320f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/depend/bcel/AncestorAnalyzer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void determineDependencies(Vector files, Vector classes)", "signatureAfterChange": "     protected void determineDependencies(Vector<File> files, Vector<String> classes)", "diff": ["-    protected void determineDependencies(Vector files, Vector classes) {", "+    protected void determineDependencies(Vector<File> files, Vector<String> classes) {", "-        Hashtable dependencies = new Hashtable();", "-        Hashtable containers = new Hashtable();", "-        Hashtable toAnalyze = new Hashtable();", "-        Hashtable nextAnalyze = new Hashtable();", "-        for (Enumeration e = getRootClasses(); e.hasMoreElements();) {", "-            String classname = (String) e.nextElement();", "+        Hashtable<String, String> dependencies = new Hashtable<String, String>();", "+        Hashtable<File, File> containers = new Hashtable<File, File>();", "+        Hashtable<String, String> toAnalyze = new Hashtable<String, String>();", "+        Hashtable<String, String> nextAnalyze = new Hashtable<String, String>();", "+", "+        for (Enumeration<String> e = getRootClasses(); e.hasMoreElements();) {", "+            String classname = e.nextElement();", "-            for (Enumeration e = toAnalyze.keys(); e.hasMoreElements();) {", "-                String classname = (String) e.nextElement();", "+            for (String classname : toAnalyze.keySet()) {", "-            Hashtable temp = toAnalyze;", "+            Hashtable<String, String> temp = toAnalyze;", "-        for (Enumeration e = containers.keys(); e.hasMoreElements();) {", "-            files.addElement((File) e.nextElement());", "+        for (File f : containers.keySet()) {", "+            files.add(f);", "-        for (Enumeration e = dependencies.keys(); e.hasMoreElements();) {", "-            classes.addElement((String) e.nextElement());", "+        for (String dependency : dependencies.keySet()) {", "+            classes.add(dependency);"]}]}