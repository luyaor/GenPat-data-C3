{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1537e5d304f271676c6690027c6f4b57", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f7fa932461db01b33bbea790853a80", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void setValue( final PropertyConfigurer setter,                            final ConfigurationState state,                            final String value,                            final Context context )         throws Exception", "signatureAfterChange": "     private void setValue( final PropertyConfigurer setter,                            final ConfigurationState state,                            final String value,                            final Context context )         throws Exception", "diff": ["-        Object objValue = PropertyUtil.resolveProperty( value, context, false );", "+        Object objValue = context.resolveValue( value );", "-", "-        Object converterContext = context;", "-        if( context instanceof Resolvable )", "+        final Class type = setter.getType();", "+        if( ! type.isInstance( objValue ) )", "-            converterContext = ( (Resolvable)context ).resolve( context );", "+            objValue = m_converter.convert( type, objValue, context );", "-        final Class clazz = setter.getType();", "-        objValue = m_converter.convert( clazz, objValue, converterContext );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d6de198ba973a4b7c3ee552e59d9ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "130b9317efa86bc6509e592b52df18c89743d95a", "commitAfterChange": "8d48bc67994f396712c0b6552ebd857d4f52f521", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void finish() throws IOException", "signatureAfterChange": "     public void finish() throws IOException", "diff": ["-        for (int i = 0, entriesSize = entries.size(); i < entriesSize; i++) {", "-            writeCentralFileHeader((ZipEntry) entries.elementAt(i));", "+        for (Iterator i = entries.iterator(); i.hasNext(); ) {", "+            writeCentralFileHeader((ZipEntry) i.next());", "-        entries.removeAllElements();", "+        entries.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d3b4e3356c54681aa84f4267e4d60e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "052d19e952abee3ced0456b7412ec51fe8baa51b", "commitAfterChange": "b404a282b25f5b01eeb1646495eb2f36f675ebe9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setLoaderRef(Reference r)", "signatureAfterChange": "     public void setLoaderRef(Reference r)", "diff": ["-        loaderId = r.getRefId();", "+        this.cpDelegate.setLoaderRef(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094c39e81c1593d31dfcace22ae21604", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "ff5195fa54146617ec5805b9e2863bc1dcb8d150", "commitAfterChange": "c5d57a281a3b28f9d711b3f70e900333faa7c457", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                            || !e.getMessage().endsWith(\" not found.\")) {", "+                            || !getMessage(e).endsWith(\" not found.\")) {", "-                            log(\"Warning: \" + e.getMessage());", "+                            log(\"Warning: \" + getMessage(e));", "-                    log(\"Warning: \" + e.getMessage(), Project.MSG_ERR);", "+                    log(\"Warning: \" + getMessage(e), Project.MSG_ERR);", "-                        log(\"Warning: \" + e.getMessage(), Project.MSG_ERR);", "+                        log(\"Warning: \" + getMessage(e), Project.MSG_ERR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a714a51fe8a12d93a7ce090cffb3237", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private Object createService( final Class roleType, final String defaultImpl )         throws Exception", "signatureAfterChange": "     private Object createService( final Class roleType, final String defaultImpl )         throws Exception", "diff": ["-        final String role = roleType.getName();", "-        final String className = m_parameters.getParameter( role, defaultImpl );", "+        // TODO - need to be able to provide different implementations", "+        final String className = defaultImpl;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c635c841e3fd7f625e9aebcba61e33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "e7fb9570418c8f963123c259470373667ac8a84e", "commitAfterChange": "f5b5a8b53cad568d5a5ab97ed35c91f698fb1c8e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "        public String getContentType()", "signatureAfterChange": "          public String getContentType()", "diff": ["-", "-      public String getContentType() {", "-        if (type != null && type.indexOf(\"charset\") > 0 && type.startsWith(\"text/\")) {", "-          return type;", "-        // Must be like \"text/plain; charset=windows-1251\"", "-        return type != null ? type.concat(\"; charset=\".concat(charset))", "-                            : \"text/plain\".concat(\"; charset=\".concat(charset));", "-      }", "+        public String getContentType() {", "+            if (type != null && type.indexOf(\"charset\") > 0", "+                && type.startsWith(\"text/\")) {", "+                return type;", "+            }", "+            // Must be like \"text/plain; charset=windows-1251\"", "+            return new StringBuffer(type != null ? type : \"text/plain\").append(", "+                \"; charset=\").append(charset).toString();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11fba8d846507c32ce2d2d362a6ddf59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask.java", "commitBeforeChange": "7da091a46f02f686fb6c2f960b2f6c261a7fbdf2", "commitAfterChange": "4a827ff185932f529e5ef867256e54f5aab798e3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void validate() throws BuildException", "signatureAfterChange": "     private void validate() throws BuildException", "diff": ["-            final String message = \"Destfile attribute not specified.\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"Destfile attribute not specified.\");", "-            final String message = destFile + \" is not a file.\";", "-            throw new BuildException(message);", "+            throw new BuildException(destFile + \" is not a file.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1638237f3d2e3cbcf2c650306ec08b95", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tstamp.java", "commitBeforeChange": "aea068074e36c24ed3aeb3e28d4c0c8dfe46ccfb", "commitAfterChange": "f1fd5e5e8a65a3463feb6226f4b827fc55417e51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            getProject().setNewProperty(prefix + \"DSTAMP\", dstamp.format(d));", "+            setProperty(\"DSTAMP\", dstamp.format(d));", "-            getProject().setNewProperty(prefix + \"TSTAMP\", tstamp.format(d));", "+            setProperty(\"TSTAMP\", tstamp.format(d));", "-            getProject().setNewProperty(prefix + \"TODAY\", today.format(d));", "+            setProperty(\"TODAY\", today.format(d));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "175869ef92d24a78127cb635fb77120b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "816d018e67a8703d14b55316e338ea7a6ded4e17", "commitAfterChange": "5728d77e073954bae5660e35dd9486e448cf0e0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "              public boolean  eval() throws BuildException", "signatureAfterChange": "              public boolean eval() throws BuildException", "diff": ["-    public boolean  eval() throws BuildException {", "+    public boolean eval() throws BuildException {", "-                log(\"Unable to find \" + type + \" \" + file.getName() + \" to set property \" + property, Project.MSG_VERBOSE);", "+                log(\"Unable to find \" + type + \" \" + file + \" to set property \" + property, Project.MSG_VERBOSE);", "-                log(\"Unable to find \" + file.getName() + \" to set property \" + property, Project.MSG_VERBOSE);", "+                log(\"Unable to find \" + file + \" to set property \" + property, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ef652d7874707c4bda504001f88985", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/SourceFileScanner.java", "commitBeforeChange": "03820a820668350f37daf1a5d4becc06d5f2588b", "commitAfterChange": "361eba435593bd43a91322b315136e511eb34cfd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String[] restrict(String[] files, File srcDir, File destDir,                              FileNameMapper mapper)", "signatureAfterChange": "     public String[] restrict(String[] files, File srcDir, File destDir,                              FileNameMapper mapper)", "diff": ["-            File src = null;", "-            if (srcDir == null) {", "-                src = new File(files[i]);", "-            } else {", "-                src = fileUtils.resolveFile(srcDir, files[i]);", "-            }", "+            File src = fileUtils.resolveFile(srcDir, files[i]);", "-                File dest = null;", "-                if (destDir == null) {", "-                    dest = new File(targets[j]);", "-                } else {", "-                    dest = fileUtils.resolveFile(destDir, targets[j]);", "-                }", "+                File dest = fileUtils.resolveFile(destDir, targets[j]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b83ce7d07a8fd3431612ebc0e750acf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "9931a12c723b640bcc8f96c889bc5f59cd72a3b6", "commitAfterChange": "a0359662be0920cfb21acddc2bb4ccc6827c3894", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["-        for (int i = 0; i < macroDef.getAttributes().size(); ++i) {", "-            MacroDef.Attribute attribute =", "-                (MacroDef.Attribute) macroDef.getAttributes().get(i);", "+        for (Iterator i = macroDef.getAttributes().values().iterator();", "+             i.hasNext();) {", "+            MacroDef.Attribute attribute = (MacroDef.Attribute) i.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6bf33b07dc52649ce5b56688f855d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "0a8c6255be73edc5bbcaa696c05fbb93a0db9e8f", "commitAfterChange": "dc899ea41e643e42423b32e87d067cbf412bf2e1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["-                    File userDir = getJavac().getTempdir();", "-                    if (userDir == null) {", "-                        String userDirName = System.getProperty(\"user.dir\");", "-                        userDir = new File(userDirName);", "-                    }", "-                    tmpFile = fileUtils.createTempFile(\"files\", \"\", userDir);", "+                    tmpFile = fileUtils.createTempFile(", "+                        \"files\", \"\", getJavac().getTempdir());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e9557c6cf6e7b2bc70fd520e385f69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibManifestTask.java", "commitBeforeChange": "7da091a46f02f686fb6c2f960b2f6c261a7fbdf2", "commitAfterChange": "4a827ff185932f529e5ef867256e54f5aab798e3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        final String createdBy = \"Apache Ant \" + getProject().getProperty(MagicNames.ANT_VERSION);", "-        attributes.putValue(CREATED_BY, createdBy);", "+        attributes.putValue(CREATED_BY, \"Apache Ant \"", "+                + getProject().getProperty(MagicNames.ANT_VERSION));", "-        appendExtensionList(attributes,", "-                             Extension.EXTENSION_LIST,", "-                             \"lib\",", "-                             depends.size());", "+        appendExtensionList(attributes, Extension.EXTENSION_LIST, \"lib\", depends.size());", "-        //Add all the dependency data to manifest for \"optional\"", "+        // Add all the dependency data to manifest for \"optional\"", "-        appendExtensionList(attributes,", "-                             Extension.OPTIONAL_EXTENSION_LIST,", "-                             \"opt\",", "-                             option.size());", "+        appendExtensionList(attributes, Extension.OPTIONAL_EXTENSION_LIST, \"opt\", option.size());", "-            final String message = \"Generating manifest \" + destFile.getAbsoluteFile();", "-            log(message, Project.MSG_INFO);", "+            log(\"Generating manifest \" + destFile.getAbsoluteFile(), Project.MSG_INFO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b086c1a6d3d9c6b29275b5b27f3b3f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "cdd2ba5de98290f5b17ef8de511d1f09f54dd090", "commitAfterChange": "d75862ba284162c9b02c2cc3d915ae79b11d2c65", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-            // only in JDK > 1.1", "-            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_0)", "-                && !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {", "-                oldsm = System.getSecurityManager();", "+            oldsm = System.getSecurityManager();", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1935b220c47f314209d2f465e89750", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "d8d7586c7b1c7c62543ac244b002ebd1d996b354", "commitAfterChange": "67c388940d22d06f271431d252d5c96311ee4503", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Map getNsElements()", "signatureAfterChange": "      private Map getNsElements()", "diff": ["-            String myUri = ProjectHelper.extractUriFromComponentName(", "-                getTaskType());", "-                nsElements.put(ProjectHelper.genComponentName(", "-                                   myUri, (String) entry.getKey()),", "+                nsElements.put((String) entry.getKey(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f333ddac6d4e08a25e63db062ebaeab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/ProjectTest.java", "commitBeforeChange": "b4c15a336731c50e57ddb0f8bfda86689affb3a4", "commitAfterChange": "4c0e25065b0808b151417e79522b617bbc12e188", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testResolveFile()", "signatureAfterChange": "     public void testResolveFile()", "diff": ["-            assertEquals(driveSpec + \"\\\\\",", "-                         p.resolveFile(driveSpec + \"/\", null).getPath());", "-            assertEquals(driveSpec + \"\\\\\",", "-                         p.resolveFile(driveSpec + \"\\\\\", null).getPath());", "-            assertEquals(driveSpec + \"\\\\\",", "+            ", "+            assertEqualsIgnoreDriveCase(driveSpecLower + \"\\\\\",", "+                         p.resolveFile(driveSpec + \"/\", null).getPath());", "+            assertEqualsIgnoreDriveCase(driveSpecLower + \"\\\\\",", "+                         p.resolveFile(driveSpec + \"\\\\\", null).getPath());", "+            assertEqualsIgnoreDriveCase(driveSpecLower + \"\\\\\",", "-            assertEquals(driveSpec + \"\\\\\",", "+            assertEqualsIgnoreDriveCase(driveSpecLower + \"\\\\\",", "-            assertEquals(driveSpec + \"\\\\\",", "+            assertEqualsIgnoreDriveCase(driveSpec + \"\\\\\",", "-            assertEquals(driveSpec + \"\\\\\",", "+            assertEqualsIgnoreDriveCase(driveSpec + \"\\\\\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36f25b6103e01d11753bb7ed75c0b4bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/ResourceList.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          private synchronized ResourceCollection cache()", "signatureAfterChange": "          private synchronized ResourceCollection cache()", "diff": ["-                for (Iterator r = rc.iterator(); r.hasNext(); ) {", "-                    cachedResources.add(read((Resource) r.next()));", "+                for (Resource r : rc) {", "+                    cachedResources.add(read(r));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40be3630878cb9cc95198a58d0a8b744", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Sync.java", "commitBeforeChange": "dd72ac08fff2f2eb7fb7b8fed237f718036c7434", "commitAfterChange": "c807cf91c6fa47ef199cce3ae19a9d0e74fb4b18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private int removeEmptyDirectories(File dir, boolean removeIfEmpty,                                        Set preservedEmptyDirectories)", "signatureAfterChange": "     private int removeEmptyDirectories(File dir, boolean removeIfEmpty,                                        Set preservedEmptyDirectories)", "diff": ["-        if (!preservedEmptyDirectories.contains(dir) && dir.isDirectory()) {", "+        if (dir.isDirectory()) {", "-                if (!preservedEmptyDirectories.contains(file)", "-                    && file.isDirectory()) {", "+                if (file.isDirectory()) {", "-            if (children.length < 1 && removeIfEmpty) {", "+            if (children.length < 1 && removeIfEmpty", "+                && !preservedEmptyDirectories.contains(dir)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41398e98fc508055588681d07898d720", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LoaderUtils.java", "commitBeforeChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "commitAfterChange": "f3939727d9e11188d266beed7e9dfa8e2fd0bc9a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static File getClassSource(Class c)", "signatureAfterChange": "     public static File getClassSource(Class c)", "diff": ["-        String classFile = c.getName().replace('.', '/') + \".class\";", "-        return getResourceSource(c.getClassLoader(), classFile);", "+        return normalizeSource(Locator.getClassSource(c));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f7e3f10abb5f7f9294c397c9b2f4cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "cc8afe2788ca97dd85bb3321bfc4b3c583758d08", "commitAfterChange": "4b56e099f28c2e7d47cf2408b07f97e6ede696fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "      protected void tarFile(File file, TarOutputStream tOut, String vPath,                            TarFileSet tarFileSet)         throws IOException", "diff": ["-        if (file.isDirectory() && vPath.length() != 0 ", "-                && vPath.charAt(vPath.length() - 1) != '/')", "-            vPath = vPath + \"/\";", "+", "+        // don't add \"\" to the archive", "+        if (vPath.length() <= 0) {", "+            return;", "+        }", "+        ", "+        if (file.isDirectory() && !vPath.endsWith(\"/\")) {", "+            vPath += \"/\";", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47511a23046ac5663ef462d1535f0cd4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "7cce31d892daee83fd1e49e322af3ef20605c221", "commitAfterChange": "1f71acf427e164e75bc4f90b1ddaecd51998709b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void parse(Project project, Object source)             throws BuildException", "signatureAfterChange": "      public void parse(Project project, Object source)             throws BuildException", "diff": ["-        this.getImportStack().addElement(source);", "+        getImportStack().addElement(source);", "-        if (this.getImportStack().size() > 1) {", "+        if (getImportStack().size() > 1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4922a088a7b9036f8adce95b291da1eb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/build/Checksum.java", "commitBeforeChange": "67d542191a40e64a06ac9e54e42216048d729254", "commitAfterChange": "2e60e0841cb84a45444da250e84915237a686940", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            final String name = m_verifyProperty;", "-            final Object value1 = new Boolean( value ).toString();", "-            getContext().setProperty( name, value1 );", "+            getContext().setProperty( m_verifyProperty, \"\" + value );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a9d8aaa067fbec0f8ee2aa17da5b453", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "4d68f55377bc2398d234eac2978d73ba60f490ca", "commitAfterChange": "b8678d977409facd43522a5816cbb5e866dcab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void init() throws BuildException", "signatureAfterChange": "      public void init() throws BuildException", "diff": ["-                String v = ProjectHelper.replaceProperties(value, project.getProperties());", "-\t\t        project.setUserProperty(name, v);", "+\t\t        project.setUserProperty(name, value);", "-\t\t        project.setProperty(name, v);", "+\t\t        project.setProperty(name, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aaadcc7943e8146a8fb068a80283a5d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java", "commitBeforeChange": "95cc5a59b586a841be4bfa67c8585b30e1d37352", "commitAfterChange": "63382d9cbfc5089d6c46cd7819b33bf956f38a87", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void testChildrenOfExcludedDirectory()", "signatureAfterChange": "     public void testChildrenOfExcludedDirectory()", "diff": ["-        ds.setFollowSymlinks(false);", "-                    new String[] {\"\", \"delta\"});", "+                    new String[] {\"delta\"});", "-        ds.setFollowSymlinks(false);", "-                     new String[] {\"\", \"alpha/beta\", \"alpha/beta/gamma\", \"delta\"});", "+                     new String[] {\"alpha/beta\", \"alpha/beta/gamma\", \"delta\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d6a524d26c3aae4ae64c74098d613c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/TempFile.java", "commitBeforeChange": "ad6b39a6207abd8443094050224f58dc1afda3b9", "commitAfterChange": "94dd480d07ac2028fc94d46a253abcd2ddb189a8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        File tfile;", "-        if (createFile) {", "-            tfile = FILE_UTILS.createTempFile(prefix, suffix, destDir,", "-                    deleteOnExit);", "-        } else {", "-            tfile = FILE_UTILS.createTempFileName(prefix, suffix, destDir,", "-                    deleteOnExit);", "-        }", "-", "+        File tfile = FILE_UTILS.createTempFile(prefix, suffix, destDir,", "+                    deleteOnExit, createFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52476aa5598da208bb693c7f4db6cbed", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/JavacTest.java", "commitBeforeChange": "33832587a4070693dd77d6e08fcf4e7d0d9a2b99", "commitAfterChange": "126daf8b31f6c01d1c6891581195db9956142970", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testCompilerAdapter()", "signatureAfterChange": "      public void testCompilerAdapter()", "diff": ["-        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)", "-            || JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "+        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "-        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)", "-            || JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "+        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf8c44a810e358f470e4fe72e5faeef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ImportTask.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()", "signatureAfterChange": "      public void execute()", "diff": ["-        for (Iterator i = resourcesToImport.iterator(); i.hasNext(); ) {", "-            importResource(helper, (Resource) i.next());", "+        for (Resource r : resourcesToImport) {", "+            importResource(helper, r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "634cbcf5b8f5fb420be6c41539475335", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "0cff5aacff4a58568af43bda38d36a61688ead1f", "commitAfterChange": "0c132498a8026db624c2fcf7026538c52e47b312", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                boolean isEverythingIncluded = ds.isEverythingIncluded()", "-                    && (!fs.hasSelectors() && !fs.hasPatterns());", "-                if (isEverythingIncluded", "-                    && !flatten && mapperElement == null) {", "+                if (!flatten && mapperElement == null", "+                    && ds.isEverythingIncluded() && !fs.hasPatterns()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6452530cae28c9f0305cb38c678f5a27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "cd8a8e0cc286ceb9111845fbd0606efb25669ef8", "commitAfterChange": "960cd2a7117d0fa96b4247c3081da7b5363ba0d8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Object createAndSet(Project project, Class c)", "signatureAfterChange": "     private Object createAndSet(Project project, Class c)", "diff": ["+            Object o = ctor.newInstance(", "+                ((noArg) ? new Object[0] : new Object[] {project}));", "-            Object o = null;", "-            if (noArg) {", "-                o = ctor.newInstance(new Object[0]);", "-            } else {", "-                o = ctor.newInstance(new Object[] {project});", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693b3c4c6e0d58693c7170966408dc7c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/BriefJUnitResultFormatter.java", "commitBeforeChange": "0ac8284adb8158c1dd659e9e6a4c65a2054fdd26", "commitAfterChange": "33db84490cd8526fec0508e9b8c53a2f4ae8a666", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected synchronized void formatError(String type, Test test,                                              Throwable error)", "signatureAfterChange": "     protected synchronized void formatError(String type, Test test,                                             Throwable error)", "diff": ["-    protected synchronized void formatError(String type, Test test, ", "+    protected synchronized void formatError(String type, Test test,", "-        resultWriter().println(formatTest(test) + type);", "-        resultWriter().println(error.getMessage());", "+        resultWriter.println(formatTest(test) + type);", "+        resultWriter.println(error.getMessage());", "-        resultWriter().println(strace);", "-        resultWriter().println(\"\");", "+        resultWriter.println(strace);", "+        resultWriter.println();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed8fa94e897d23b370458af97ba0f8a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "4bdc90bd5ea371107ce5f4fbe0939557e1f5aaa9", "commitAfterChange": "2270580b7724fb28e357cd2ea4da561778bc8fa8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (srcFile == null && sqlCommand.length() == 0", "-                && filesets.isEmpty()) {", "+            if (srcFile == null && sqlCommand.length() == 0 ", "+                && filesets.isEmpty()) { ", "-                                             + \"must be set!\", getLocation());", "+                                             + \"must be set!\", location);", "-", "+        ", "-                throw new BuildException(\"Source file does not exist!\", getLocation());", "+                throw new BuildException(\"Source file does not exist!\", location);", "-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-                File srcDir = fs.getDir(getProject());", "-", "+                DirectoryScanner ds = fs.getDirectoryScanner(project);", "+                File srcDir = fs.getDir(project);", "+                ", "-", "+                ", "-", "+            ", "-", "+            ", "-                        log(\"Opening PrintStream to output file \" + output,", "+                        log(\"Opening PrintStream to output file \" + output, ", "-", "+                    ", "-                    for (Enumeration e = transactions.elements();", "+                    for (Enumeration e = transactions.elements(); ", "-", "+                       ", "-                }", "+                } ", "-                throw new BuildException(e, getLocation());", "+                throw new BuildException(e, location);", "-                throw new BuildException(e, getLocation());", "+                throw new BuildException(e, location);", "-", "-            log(goodSql + \" of \" + totalSql +", "+            ", "+            log(goodSql + \" of \" + totalSql + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78668cf816c4e802e72946c36ac45fea", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/selectors/Compare.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized boolean isSelected(Resource r)", "signatureAfterChange": "     public synchronized boolean isSelected(Resource r)", "diff": ["-        for (Iterator it = control.iterator(); it.hasNext();) {", "-            if (when.evaluate(comp.compare(r, (Resource) it.next()))) {", "+        for (Resource res : control) {", "+            if (when.evaluate(comp.compare(r, res))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78a4e6e80e5b55f500d9b08eaaef0a21", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "bad48b6b7913f77ac7b8507475087ac126250bce", "commitAfterChange": "4c8ebdb4898358e956a8b82fd4c5b3d11b657746", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      protected void addProperty(String n, String v)", "signatureAfterChange": "      protected void addProperty(String n, String v)", "diff": ["+            log(\"DEPRECATED - Setting user properties through the Property task has been deprecated.\");", "-            if (project.getProperty(n) == null) {", "-                project.setProperty(n, v);", "-            } else {", "-                log(\"Override ignored for \" + n, Project.MSG_VERBOSE);", "-            }", "+            project.setNewProperty(n, v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794a9ab126e5b793e65a696946cbd6d6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/interfaces/type/DefaultTypeFactory.java", "commitBeforeChange": "0dcd7b3f686790a9f7e5e85ffa6d588854641bb2", "commitAfterChange": "b6e062af22ec64196ed8d8c65ff5d8b7c98689ee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private String getClassName( final String name )         throws TypeException", "signatureAfterChange": "      private String getClassName( final String name )", "diff": ["-        throws TypeException", "-        final String className = (String)m_classNames.get( name );", "-        if( null == className )", "-        {", "-            final String message = REZ.getString( \"no-mapping.error\", name );", "-            throw new TypeException( message );", "-        }", "-", "-        return className;", "+        return  (String)m_classNames.get( name );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a9b58fd95bcf63b622f54b8b6e67824", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSS.java", "commitBeforeChange": "5c8bd0811c87f5bcf050225ea0d2cc042a32f186", "commitAfterChange": "33d19ef67e2eb18cdf696c337f158ae725f92f21", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     protected String getLabel()", "signatureAfterChange": "     protected String getLabel()", "diff": ["-            if (m_Label.length() > 31) {", "-                String label = m_Label.substring(0, 30);", "-                log(\"Label is longer than 31 characters, truncated to: \" + label, Project.MSG_WARN);", "-                return FLAG_LABEL + label;", "-            } else {", "-                return FLAG_LABEL + m_Label;", "-            }", "+                return FLAG_LABEL + getShortLabel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d451788b3228c2898266e2b67347554", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "5fe27650f4d3fef919481efcedbf6ba83daa4152", "commitAfterChange": "7dc2430ad5c8f2cb7eb47d37cf816f971ddc8f33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void checkPropertyValid( final String name, final Object value )         throws TaskException", "signatureAfterChange": "     protected void checkPropertyValid( final String name, final Object value )         throws TaskException", "diff": ["-            throw new TaskException( message );", "-        }", "-        else if( JAVA_VERSION.equals( name ) && !( value instanceof JavaVersion ) )", "-        {", "-            final String message =", "-                REZ.getString( \"bad-property.error\", JAVA_VERSION, JavaVersion.class.getName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82603afd76b12364d46212e0a3b355ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "18784a313b7d3cc5ebc714ca4d7c2eacdf0718ab", "commitAfterChange": "fe678d1937dfca00eda5019956c3352d557accc6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                baseDir = FILE_UTILS.resolveFile(getProject().getBaseDir(),\".\");", "+                baseDir = getProject().resolveFile(\".\");", "-                File stylesheet = FILE_UTILS.resolveFile(getProject().getBaseDir(), xslFile);", "+                File stylesheet = getProject().resolveFile(xslFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a83de50349f22a87b44c8db8c5b265", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/CommandlineJavaTest.java", "commitBeforeChange": "028ba47c8246f510012ef061d879d05240b90c71", "commitAfterChange": "efd287b871106edf3efb9e1b96aeea16b85f0549", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testAssertions() throws Exception", "signatureAfterChange": "      public void testAssertions() throws Exception", "diff": ["-        if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_2)", "-            || JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_3)) {", "-            return;", "-        }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "840216debc67dbf604f6139d6d9e905b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "919e3d3e56ed1089f0807f5e05f1384ad1bccfef", "commitAfterChange": "3988c2b07fd29655c037192292c37094651864bd", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public boolean createNewFile(File f) throws IOException", "signatureAfterChange": "     public boolean createNewFile(File f) throws IOException", "diff": ["-        if (f != null) {", "-            if (f.exists()) {", "-                return false;", "-            }", "-", "-            FileOutputStream fos = null;", "-            try {", "-                fos = new FileOutputStream(f);", "-                fos.write(new byte[0]);", "-            } finally {", "-                if (fos != null) {", "-                    fos.close();", "-                }", "-            }", "-", "-            return true;", "-        }", "-        return false;", "+        return f.createNewFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8737aa8a340f1a26737c4be0e4cd06dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "88f1be2d0462de59e99bf085522756a647195248", "commitAfterChange": "e242acf554b5d0d6045356db292c999bcdd9c41d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     \r     public boolean eval() throws BuildException", "signatureAfterChange": "\r     \r     public boolean eval() throws BuildException", "diff": ["-        float actual = getVersion();\r", "+        DeweyDecimal actual = getVersion();\r", "-            if (actual >= Versions.getVersion(atLeast)) {\r", "+            if (actual.isGreaterThanOrEqual(new DeweyDecimal(atLeast))) {\r", "-            if (actual == Versions.getVersion(exactly)) {\r", "+            if (actual.isEqual(new DeweyDecimal(exactly))) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f162beab80ba658ec8fc4f75f5f4e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "     private void checkJarSpec()", "signatureAfterChange": "     private void checkJarSpec()", "diff": ["-            if (strict.getValue().toLowerCase(Locale.ENGLISH).equals(\"fail\")) {", "+            if (strict.getValue().equalsIgnoreCase(\"fail\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89aad94453ceca6e2a198cfff4be40e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "e6706b6daeaa0a8f3b12152919021dca5c1f877f", "commitAfterChange": "34528dbf65dff02a0f8705372966b4a92bb0b515", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "signatureAfterChange": "     private void runBuild(ClassLoader coreLoader) throws BuildException", "diff": ["-            if (!Project.JAVA_1_0.equals(Project.getJavaVersion()) &&", "-                !Project.JAVA_1_1.equals(Project.getJavaVersion())){", "+            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_0) &&", "+                !JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a35895d5b937b09f6aecba21e44d71f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "a14b034437745cfc4066f88bfcaa7923c574ae1d", "commitAfterChange": "bf5d72445b3750fb9e34c150abb7b6372324b85d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void deployType( final Deployment deployment,                             final TypeDefinition typeDef )         throws Exception", "signatureAfterChange": "     public void deployType( final Deployment deployment,                             final TypeDefinition typeDef )         throws Exception", "diff": ["-            final String role = getRoleForName( roleShorthand );", "-            final Class roleType = deployment.getClassLoader().loadClass( role );", "+            final Class roleType = getRoleType( roleShorthand );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1be9791557270666a9b8e3950b7c7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "ee2779b5b94b830a888590c16076952941290922", "commitAfterChange": "051ba1279d96c822e7708a348a4d7bc0393b89f9", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            if (!fs.getDir().isDirectory()) {", "-                handle(\"Directory does not exist:\" + fs.getDir());", "+            File fsDir = fs.getDir();", "+            if (fsDir == null) {", "+                throw new BuildException(", "+                        \"File or Resource without directory or file specified\");", "+            } else if (!fsDir.isDirectory()) {", "+                handle(\"Directory does not exist:\" + fsDir);", "-                    filesetDirs.add(new ReverseDirs(fs.getDir(), fs", "+                    filesetDirs.add(new ReverseDirs(fsDir, fs"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e0e0a246cefaafa2dc780d22715fe87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public PropertyConfigurer getProperty( final String name )         throws NoSuchPropertyException", "signatureAfterChange": "     public PropertyConfigurer getProperty( final String name )", "diff": ["-        throws NoSuchPropertyException", "-        PropertyConfigurer configurer = (PropertyConfigurer)m_props.get( name );", "-        if( null != configurer )", "-        {", "-            return configurer;", "-        }", "-", "-        // Unknown property", "-        final String message = REZ.getString( \"unknown-property.error\", m_class.getName(), name );", "-        throw new NoSuchPropertyException( message );", "+        return (PropertyConfigurer)m_props.get( name );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "913aa48caf3c0642c771d9e30d29534f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ArchiveFileSet.java", "commitBeforeChange": "c6e453b42b5ef99d3d129319830f90c0cce5d843", "commitAfterChange": "9f5ab4ebed9aad38807cedd7f15248294c66fcf2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setSrcResource(Resource src)", "signatureAfterChange": "     public void setSrcResource(Resource src)", "diff": ["-        if (getProject()!=null) {", "-            this.src = new FileResource(FILE_UTILS.resolveFile(getProject().getBaseDir(),src.toString()));", "-        } else {", "-            this.src = new FileResource(new File(src.toString()));", "-        }", "+        this.src = src;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93c861c27e08e20cc2d2657ec174c51a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/security/SignJar.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      private Commandline buildCommand( final File jarTarget, final File jarSource )", "signatureAfterChange": "      private Execute buildCommand( final File jarTarget,                                   final File jarSource )", "diff": ["-    private Commandline buildCommand( final File jarTarget, final File jarSource )", "+    private Execute buildCommand( final File jarTarget,", "+                                  final File jarSource )", "-        final Commandline cmd = new Commandline();", "+        final Execute cmd = new Execute();", "-            cmd.addArgument( m_keystore.toString() );", "+            cmd.addArgument( m_keystore );", "-            cmd.addArgument( m_sigfile.toString() );", "+            cmd.addArgument( m_sigfile );", "-            cmd.addArgument( jarTarget.toString() );", "+            cmd.addArgument( jarTarget );", "-        cmd.addArgument( jarSource.toString() );", "+        cmd.addArgument( jarSource );", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9528da692e035bbb1075f99295ce16cf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ComponentHelper.java", "commitBeforeChange": "b0078a54717eaf1f896ce3094adeed0540f6bd8e", "commitAfterChange": "7527ef19625d2d77806b9ce8262b49e667bb7101", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private synchronized void checkNamespace(String componentName)", "signatureAfterChange": "     private synchronized void checkNamespace(String componentName)", "diff": ["+        definer.init();", "-        definer.setResource(", "-            uri.substring(ANTLIB_PREFIX.length()).replace('.', '/')", "-            + \"/antlib.xml\");", "+        //there to stop error messages being \"null\"", "+        definer.setTaskName(uri);", "+        //if this is left out, bad things happen. like all build files break", "+        //on the first element encountered.", "+        definer.setResource(Definer.makeResourceFromURI(uri));", "-        definer.init();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e003463c6d58625afc4dc28b6f9629", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "0ceef36b9097f2061ce321b85b654eba2bd82e52", "commitAfterChange": "6d9e7cb56e1c3e3ffeedabf92486c9ff25054c9c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "diff": ["-        if (attributes.getSource() != null && !assumeJava13()) {", "-            cmd.createArgument().setValue(\"-source\");", "-            String source = attributes.getSource();", "-            cmd.createArgument().setValue(adjustSourceValue(source));", "-        } else if (!assumeJava13() && !assumeJava14()", "-                   && attributes.getTarget() != null) {", "-            String t = attributes.getTarget();", "-            String s = adjustSourceValue(t);", "-            if (mustSetSourceForTarget(t)) {", "-                setImplicitSourceSwitch(cmd, t, s);", "+        if (!assumeJava13()) { // -source added with JDK 1.4", "+            final String t = attributes.getTarget();", "+            if (attributes.getSource() != null) {", "+                cmd.createArgument().setValue(\"-source\");", "+                cmd.createArgument()", "+                    .setValue(adjustSourceValue(attributes.getSource()));", "+", "+            } else if (t != null && mustSetSourceForTarget(t)) {", "+                setImplicitSourceSwitch(cmd, t, adjustSourceValue(t));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f8db645735c94d85a010ed44a9b297", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/type/MultiSourceTypeFactory.java", "commitBeforeChange": "0dcd7b3f686790a9f7e5e85ffa6d588854641bb2", "commitAfterChange": "b6e062af22ec64196ed8d8c65ff5d8b7c98689ee", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object create( final String name )         throws TypeException", "signatureAfterChange": "     public Object create( final String name )         throws TypeException", "diff": ["-        TypeFactory factory = getTypeFactory( name );", "-", "-        if( null == factory && null != m_parent )", "-        {", "-            factory = m_parent.getTypeFactory( name );", "-        }", "-", "+        // Locate the factory to use", "+        TypeFactory factory = findFactory( name );", "-        else", "+", "+        // Create the object", "+        final Object object = factory.create( name );", "+        if( !m_type.isInstance( object ) )", "-            final Object object = factory.create( name );", "-", "-            if( !m_type.isInstance( object ) )", "-            {", "-                final String message = REZ.getString( \"mismatched-type.error\", name, object.getClass().getName() );", "-                throw new TypeException( message );", "-            }", "-", "-            return object;", "+            final String message = REZ.getString( \"mismatched-type.error\", name, object.getClass().getName() );", "+            throw new TypeException( message );", "+", "+        return object;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a24d196c04efe0ff9a71e9b484910e8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "5460755b447223e93e926e11a08e4df4f0e0ddb5", "commitAfterChange": "3b9cd024be33a6a44693304d75678ff7dffaf4f6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute()             throws BuildException", "signatureAfterChange": "     public void execute()             throws BuildException", "diff": ["-        BufferedInputStream configurationStream = null;", "-", "-              configurationStream =", "-                      new BufferedInputStream(new FileInputStream(src));", "-", "-", "-", "-              Element topElement", "-                = factory.newDocumentBuilder().parse(configurationStream).getDocumentElement();", "+              Document document = factory.newDocumentBuilder().parse(src);", "+              Element topElement = document.getDocumentElement();", "-        } finally {", "-            if (configurationStream != null) {", "-                try {", "-                    configurationStream.close();", "-                } catch (Exception e) {", "-                }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f94499f1fbef1b63ec16d80dfa7c98b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public Manifest(Reader r) throws ManifestException, IOException", "signatureAfterChange": "     public Manifest(Reader r) throws ManifestException, IOException", "diff": ["-                if (!sectionName.getName().toLowerCase(Locale.ENGLISH)", "-                    .equals(ATTRIBUTE_NAME_LC)) {", "+                if (!sectionName.getName().equalsIgnoreCase(ATTRIBUTE_NAME)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fdfd396474cb0ca3c5e51cc8135cd38", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEncodingHelper.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     static boolean isUTF8(String encoding)", "signatureAfterChange": "     static boolean isUTF8(String encoding)", "diff": ["-        String enc = encoding.toLowerCase(Locale.ENGLISH);", "-        return UTF8_LC.equals(enc) || UTF_DASH_8_LC.equals(enc);", "+        return UTF8.equalsIgnoreCase(encoding)", "+            || UTF_DASH_8.equalsIgnoreCase(encoding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a01f1d75f127ef2596ea0d4b6563efe0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "47f04e469cac0e3b728ac34f35ea263717d91745", "commitAfterChange": "bab68a759807a7eb1a16d0447e1356119333ca9a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         private void executeInteger(String oldValue) throws BuildException", "signatureAfterChange": "         private void executeInteger(String oldValue) throws BuildException", "diff": ["-            int value = 0;", "-            int newValue  = 0;", "-            int oldIntValue  = 0;", "+            int value = 0;          // the value given in the 'value' attr", "+            int newValue  = 0;      // the new value, after the operation", "+            int oldIntValue  = 0;   // the old value from the prop file", "-                    value = fmt.parse(oldValue).intValue();", "-                    value = fmt.parse(m_default).intValue();", "+                    oldIntValue = fmt.parse(m_default).intValue();", "-                newValue = value;", "+                newValue = oldIntValue;", "-                if (this.m_value == \"\") {", "-                    // No value attr was given, so just increment \"value\"", "-                    // (which is the old value from the prop file, 0 by", "-                    // assignment above, if none) by 1.", "-                    newValue = ++value;", "+                if (m_value == \"\") {", "+                    // No value attr was given, so just increment the", "+                    // old value from the prop file (0 by assignment above,", "+                    // if none).", "+                    newValue = ++oldIntValue;", "-                    // A value attr was given, so add it to \"value\", which", "-                    // is the old value from the prop file (0, if none).", "+                    // A value attr was given, so add the old value from", "+                    // the prop file (0, if none) to the specified value.", "-                if (this.m_value == \"\") {", "-                    // No value attr was given, so just decrement \"value\"", "-                    // (which is the old value from the prop file, 0 by", "-                    // assignment above, if none) by 1.", "-                    newValue = --value;", "+                if (m_value == \"\") {", "+                    // No value attr was given, so just decrement the", "+                    // old value from the prop file (0 by assignment above,", "+                    // if none).", "+                    newValue = --oldIntValue;", "-                    // A value attr was given, so subtract from it \"value\",", "-                    // which is the old value from the prop file (0, if none).", "+                    // A value attr was given, so subtract from the", "+                    // old value from the prop file (0, if none) the", "+                    // specified value."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ce598afe0a94854dc4f1adddd93997", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0efc2f817257f69d7cdc67c016b1caac68465f1d", "commitAfterChange": "939a6bbf2fb97ec29ecf79c86013846656d8751c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public boolean supportsNestedElement(String elementName)", "signatureAfterChange": "     public boolean supportsNestedElement(String elementName)", "diff": ["-        return nestedCreators.containsKey(elementName.toLowerCase(Locale.US))", "-            || isDynamic()", "-            || addTypeMethods.size() != 0;", "+        return supportsNestedElement(\"\", elementName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae767849c08bc1c21798b1414ccd227c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "f4b28f1de47d4f05b35a829eed931ca1fb17f894", "commitAfterChange": "88ba8725968b6a90152a8096ebb2a8a7bfccd9c7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void tar(ResourceCollection rc, TarOutputStream tOut)         throws IOException", "signatureAfterChange": "     protected void tar(ResourceCollection rc, TarOutputStream tOut)         throws IOException", "diff": ["-                FileResource r = ResourceUtils.asFileResource((FileProvider) iter.next());", "-                File f = r.getFile();", "-                if (f == null) {", "-                    f = new File(r.getBaseDir(), r.getName());", "-                }", "+                File f = ((FileProvider) iter.next()).getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb6bf632e85f306345a657af5b195ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/DefaultCommandLauncher.java", "commitBeforeChange": "5b78d0ba6fe0251619df15ede79617849c914349", "commitAfterChange": "65a74dfc9e1accb6b5074973840aaea3c16c9f6d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "signatureAfterChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "diff": ["-            final String[] env = ExecUtil.toNativeEnvironment( metaData.getEnvironment() );", "+            final String[] env = getEnvironmentSpec( metaData );", "-            final String message = \"Unable to launch native command in a \" +", "-                \"working directory other than \\\".\\\"\";", "+            final String message = REZ.getString( \"default.bad-dir.error\" );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af7d3ca002aba6621e46e89852359a7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "7da091a46f02f686fb6c2f960b2f6c261a7fbdf2", "commitAfterChange": "4a827ff185932f529e5ef867256e54f5aab798e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkExtension(final File file)", "signatureAfterChange": "     private void checkExtension(final File file)", "diff": ["-            final String message =", "-                \"File \" + file + \" does not exist\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"File \" + file + \" does not exist\");", "-            final String message =", "-                \"File \" + file + \" is not a file\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"File \" + file + \" is not a file\");", "-", "-            final String message = \"Setting property to \" + file", "-                + \" without verifying library satisfies extension\";", "-            getProject().log(message, Project.MSG_VERBOSE);", "+            getProject().log(\"Setting property to \" + file", "+                    + \" without verifying library satisfies extension\", Project.MSG_VERBOSE);", "-            getProject().log(\"Checking file \" + file", "-                + \" to see if it satisfies extension\", Project.MSG_VERBOSE);", "-            final Manifest manifest =", "-                ExtensionUtil.getManifest(file);", "-            final Extension[] extensions =", "-                Extension.getAvailable(manifest);", "+            getProject().log(\"Checking file \" + file + \" to see if it satisfies extension\",", "+                    Project.MSG_VERBOSE);", "+            final Manifest manifest = ExtensionUtil.getManifest(file);", "+            final Extension[] extensions = Extension.getAvailable(manifest);", "-", "-            getProject().log(\"File \" + file + \" skipped as it \"", "-                + \"does not satisfy extension\", Project.MSG_VERBOSE);", "-", "-            final String message =", "-                \"File \" + file + \" does not satisfy extension\";", "+            final String message = \"File \" + file + \" skipped as it \" + \"does not satisfy extension\";", "+            getProject().log(message, Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a7e4e9b2767a41bc64659601bce672", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "1b414dd2d45817cba7fe6773873a0f5ff4fdfcd3", "commitAfterChange": "c58f8e6e7a80372127af34f7ef9c9bd94d9c221b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["-        StringWriter swr = new StringWriter();", "-        t.printStackTrace(new PrintWriter(swr, true));", "-        Text trace = doc.createTextNode(swr.toString());", "+        String strace = JUnitTestRunner.getFilteredTrace(t);", "+        Text trace = doc.createTextNode(strace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be450e849e405eabc124a63043d415ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/BorlandGenerateClient.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (mode.toLowerCase(Locale.ENGLISH).equals(FORK_MODE)) {", "+        if (mode.equalsIgnoreCase(FORK_MODE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35ebfc9be531885f8e918fffafbc334", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "f8c1bb00f245b6d96ee71deb589d3f4e5d5bef8d", "commitAfterChange": "122c6ddd9ee015a8638b9143815d3289badfdf04", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      protected boolean isUpToDate(File jarFile, File signedjarFile)", "signatureAfterChange": "      protected boolean isUpToDate(File jarFile, File signedjarFile)", "diff": ["-            if (signedjarFile.lastModified() > jarFile.lastModified()) {", "+            if (FileUtils.newFileUtils().isUpToDate(jarFile,signedjarFile)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c0f4af893e2b57d8d621a97d14a32f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "eb288bb09de327c4355520880c99577e55bc5d57", "commitAfterChange": "de3a669c71580d7fd8e750bda4f8fac3bf2d5bca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void readTemplates()         throws IOException, TransformerConfigurationException", "signatureAfterChange": "     private void readTemplates()         throws IOException, TransformerConfigurationException,                 ParserConfigurationException, SAXException", "diff": ["-        throws IOException, TransformerConfigurationException {", "-        // WARN: Don't use the StreamSource(File) ctor. It won't work with", "-        // xalan prior to 2.2 because of systemid bugs.", "+        throws IOException, TransformerConfigurationException, ", "+               ParserConfigurationException, SAXException {", "-            StreamSource src = new StreamSource(xslStream);", "-            // Always set the systemid to the source for imports, includes...", "-            // in xsl and xml...", "-            src.setSystemId(JAXPUtils.getSystemId(stylesheet));", "+            Source src = getSource(xslStream, stylesheet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f70a0a395bbeeebd02dd7997a88eaa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAction(ActionChoices action)", "signatureAfterChange": "     public void setAction(ActionChoices action)", "diff": ["-        if (action.getValue().toLowerCase(Locale.ENGLISH).equals(\"start\")) {", "+        if (action.getValue().equalsIgnoreCase(\"start\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75bd26024bb01a41106dac5f0534183", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message, String testCase)", "signatureAfterChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message, String testCase)", "diff": ["-                String s = summaryValue != null", "-                    ? summaryValue.toLowerCase(Locale.ENGLISH) : null;", "-                f.setWithOutAndErr(\"withoutanderr\".equals(s));", "+                f.setWithOutAndErr(equalsWithOutAndErr(summaryValue));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c807d57bdca34b6d8ff62769a0078ef1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "8239fdac8cbd435257e4842c3b3429b54dc3112b", "commitAfterChange": "b82d12d30f50d40cdf9a990e3473cd5868930634", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "signatureAfterChange": "     private TestResultHolder executeAsForked(JUnitTest test,                                              ExecuteWatchdog watchdog,                                              File casesFile)         throws BuildException", "diff": ["-        formatterArg.append(\"crashfile=\");", "-        formatterArg.append(vmWatcher);", "-        cmd.createArgument().setValue(formatterArg.toString());", "-", "+        cmd.createArgument().setValue(\"crashfile=\"", "+                                      + vmWatcher.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2d5d3d33fa7abd54f0e3daa43f7e11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "d8114b36f5127f7a16d163208042ed23d2ca320b", "commitAfterChange": "8bf76a6d5476dfc5dcaea89528973e324bbdcf6f", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "     private String quoteString(String str)", "signatureAfterChange": "     private String quoteString(final String str)", "diff": ["-    private String quoteString(String str) {", "-        if (str.indexOf(' ') == -1", "+    private String quoteString(final String str) {", "+        if (!containsWhitespace(str)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc9b9873379008e5b743fdf4e5bb8468", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Label.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (lock != null && !lock.toLowerCase(Locale.ENGLISH).equals(\"locked\")) {", "+        if (lock != null && !lock.equalsIgnoreCase(\"locked\")) {", "-        if (lock != null && lock.toLowerCase(Locale.ENGLISH).equals(\"locked\")) {", "+        if (lock != null && lock.equalsIgnoreCase(\"locked\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfef5b9df60f3c72ad9ba89dd3bbfeb4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "46330b41c1a0cd642c895b8ff39ab295a3519ca4", "commitAfterChange": "f42a96f3046b6a665f9755123c9f7939e53737ba", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void createComponent( Class roleType, String defaultImpl )         throws Exception", "signatureAfterChange": "     private void createComponent( Class roleType, String defaultImpl )         throws Exception", "diff": ["-        final String role = roleType.getName();", "-        final String className = m_parameters.getParameter( role, defaultImpl );", "-        final Object component = createService( className, roleType );", "-        m_serviceManager.put( role, component );", "+        final Object component = createService( roleType, defaultImpl );", "+        m_serviceManager.put( roleType.getName(), component );", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d1db69d54caa80c9c7b44f188776aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/Directory.java", "commitBeforeChange": "01ca57a3170fe917f71d809eedfb4c3c059d38aa", "commitAfterChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Directory getChild(File dir)", "signatureAfterChange": "     public Directory getChild(File dir)", "diff": ["-        for (int i = 0; i < childDirectories.size(); i++) {", "-            Directory current = (Directory) childDirectories.get(i);", "+        for (Iterator i = childDirectories.iterator(); i.hasNext(); ) {", "+            Directory current = (Directory) i.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ed50a0e10c37d793da27bd8c8abbfb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "9c29344dc2caf821f91931b65ee581b0ef5bb8f5", "commitAfterChange": "6ecb04cbad127c05855b26cb12ef35d86a5ebe39", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static synchronized IntrospectionHelper getHelper(Class c)", "signatureAfterChange": "     public static synchronized IntrospectionHelper getHelper(Class c)", "diff": ["-        IntrospectionHelper ih = (IntrospectionHelper) helpers.get(c);", "-        if (ih == null) {", "-            ih = new IntrospectionHelper(c);", "-            helpers.put(c, ih);", "-        }", "-        return ih;", "+        return getHelper(null, c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d56a47e280ceec45badc5bd1aa2ba566", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDepends(String depS)", "signatureAfterChange": "     public void setDepends(String depS)", "diff": ["-        for (Iterator iter = parseDepends(depS, getName(), \"depends\").iterator();", "-             iter.hasNext(); ) {", "-            addDependency((String) iter.next());", "+        for (String dep : parseDepends(depS, getName(), \"depends\")) {", "+            addDependency(dep);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83e27644346311e2ca81d6426f0933b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "052d19e952abee3ced0456b7412ec51fe8baa51b", "commitAfterChange": "b404a282b25f5b01eeb1646495eb2f36f675ebe9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setClasspathRef(Reference r)", "signatureAfterChange": "     public void setClasspathRef(Reference r)", "diff": ["-        classpathId=r.getRefId();", "-        createClasspath().setRefid(r);", "+        this.cpDelegate.setClasspathref(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded9755054fbc4c5381c6919bce692d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarBuffer.java", "commitBeforeChange": "23bbf085727756cfbad92aaa345e10c7370d3486", "commitAfterChange": "75110026aa35fe98da6c696598361977c3c46c48", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private void flushBlock() throws IOException", "signatureAfterChange": "     private void flushBlock() throws IOException", "diff": ["-        if (this.debug) {", "+        if (debug) {", "-        if (this.outStream == null) {", "+        if (outStream == null) {", "-        if (this.currRecIdx > 0) {", "-            this.writeBlock();", "+        if (currRecIdx > 0) {", "+            writeBlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e10959f6c878be52a855775750b1e45a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "cd517c28816d6aeb32efbd15e8442d5145b1ca30", "commitAfterChange": "7830ff460def6c04a974b31ea5ffc1e422b54165", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private void checkIncludePatterns()", "signatureAfterChange": "     private void checkIncludePatterns()", "diff": ["-                    canonBase = basedir.getCanonicalFile();", "+                    canonBase = getCanonicalFile(basedir);", "-                            ? myfile.getCanonicalPath()", "+                            ? getCanonicalPath(myfile)", "-                            myfile.getCanonicalFile());", "+                                         getCanonicalFile(myfile));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d9eebb8ff1bbdbbe179ad0f7a7192f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/JavaEnvUtilsTest.java", "commitBeforeChange": "33832587a4070693dd77d6e08fcf4e7d0d9a2b99", "commitAfterChange": "126daf8b31f6c01d1c6891581195db9956142970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testGetExecutableMostPlatforms()", "signatureAfterChange": "      public void testGetExecutableMostPlatforms()", "diff": ["-            if (JavaEnvUtils.getJavaVersion() == JavaEnvUtils.JAVA_1_0 ||", "-                JavaEnvUtils.getJavaVersion() == JavaEnvUtils.JAVA_1_1 ||", "-                Os.isFamily(\"mac\")) {", "+            if (Os.isFamily(\"mac\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eae89e85b14b80a4921da9dce3914b6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "ee9f0d34223813621144c441c9fe2d29f55246f6", "commitAfterChange": "73b118584a49366b63902bdc3c49576732321ace", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void registerConverter( final String className,                                    final String source,                                    final String destination )", "signatureAfterChange": "     public void registerConverter( final String className,                                    final String source,                                    final String destination )", "diff": ["-        HashMap map = (HashMap)m_mapping.get( source );", "-        if( null == map )", "-        {", "-            map = new HashMap();", "-            m_mapping.put( source, map );", "-        }", "-", "-        map.put( destination, className );", "-    }", "+        super.registerConverter( className, source, destination );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef8e68055dceaab49f5409cb477663de", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Pack.java", "commitBeforeChange": "dc7f97a9325dbb9b4b6126b9fa0960ef409bb2cb", "commitAfterChange": "2ff97ac3d107d741c35a236960a0f963e7aad6a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void validate()", "signatureAfterChange": "      private void validate()", "diff": ["-        if (zipFile == null || zipFile.getName().equals(\"\")) {", "+        if (zipFile == null) {", "-        if (source == null || source.getName().equals(\"\")) {", "+        if (zipFile.isDirectory()) {", "+            throw new BuildException(\"zipfile attribute must not \" +", "+                                     \"represent a directory!\", location);", "+        }", "+", "+        if (source == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01cd92c519e91c1fa7b4a130d74f6c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void merge(Section section, boolean mergeClassPaths)             throws ManifestException", "signatureAfterChange": "         public void merge(Section section, boolean mergeClassPaths)             throws ManifestException", "diff": ["-                String attributeNameLC =", "-                    attributeName.toLowerCase(Locale.ENGLISH);", "-                if (attributeNameLC.equals(ATTRIBUTE_CLASSPATH_LC)) {", "+                if (attributeName.equalsIgnoreCase(ATTRIBUTE_CLASSPATH)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3eebe3fee751a3402c4e36240c1f0ae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJAntToolGUI.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tprivate Panel getCommandButtonPanel()", "signatureAfterChange": "     private Panel getCommandButtonPanel()", "diff": ["-\t */", "-\tprivate Panel getCommandButtonPanel() {", "-\t\tif (iCommandButtonPanel == null) {", "-\t\t\ttry {", "-\t\t\t\tiCommandButtonPanel = new Panel();", "-\t\t\t\tiCommandButtonPanel.setName(\"CommandButtonPanel\");", "-\t\t\t\tiCommandButtonPanel.setLayout(getCommandButtonPanelFlowLayout());", "-\t\t\t\tiCommandButtonPanel.setBackground(SystemColor.control);", "-\t\t\t\tiCommandButtonPanel.add(getReloadButton());", "-\t\t\t\tgetCommandButtonPanel().add(getBuildButton(), getBuildButton().getName());", "-\t\t\t\tgetCommandButtonPanel().add(getCloseButton(), getCloseButton().getName());", "-\t\t\t} catch (Throwable iExc) {", "-\t\t\t\thandleException(iExc);", "-\t\t\t}", "-\t\t}", "-\t\treturn iCommandButtonPanel;", "-\t}", "+     */", "+    private Panel getCommandButtonPanel() {", "+        if (iCommandButtonPanel == null) {", "+            try {", "+                iCommandButtonPanel = new Panel();", "+                iCommandButtonPanel.setName(\"CommandButtonPanel\");", "+                iCommandButtonPanel.setLayout(getCommandButtonPanelFlowLayout());", "+                iCommandButtonPanel.setBackground(SystemColor.control);", "+                iCommandButtonPanel.add(getReloadButton());", "+                iCommandButtonPanel.add(getBuildButton());", "+                iCommandButtonPanel.add(getStopButton());", "+                iCommandButtonPanel.add(getCloseButton());", "+            } catch (Throwable iExc) {", "+                handleException(iExc);", "+            }", "+        }", "+        return iCommandButtonPanel;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa109612f7367e14e6acff0766f639d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public synchronized void setAttribute(String name, String value)", "signatureAfterChange": "     public synchronized void setAttribute(String name, String value)", "diff": ["-        String nameLC = name.toLowerCase(Locale.ENGLISH);", "-        if (nameLC.equals(ProjectHelper.ANT_TYPE_LC)) {", "+        if (name.equalsIgnoreCase(ProjectHelper.ANT_TYPE)) {", "-            if (nameLC.equals(\"refid\")) {", "+            if (name.equalsIgnoreCase(\"refid\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa9b3a912dbb9369c1466cf78206e749", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/image/Arc.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setType(String strType)", "signatureAfterChange": "     public void setType(String strType)", "diff": ["-        String stype = strType.toLowerCase(Locale.ENGLISH);", "-        if (stype.equals(\"open\")) {", "+        if (strType.equalsIgnoreCase(\"open\")) {", "-        } else if (stype.equals(\"pie\")) {", "+        } else if (strType.equalsIgnoreCase(\"pie\")) {", "-        } else if (stype.equals(\"chord\")) {", "+        } else if (strType.equalsIgnoreCase(\"chord\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce5c1676cc5dde58ec22565cfac3cf7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "f3a0918e1d1ecaaad774135e02cfd7c6695b8542", "commitAfterChange": "da89ca486a9afa85b4dd1edd137f94cc8f8b44be", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        final File javaFile = new File(", "-            target.toString().substring(0, target.toString().indexOf(\".jj\")) + \".java\");", "+", "+        // determine if the generated java file is up-to-date", "+        final File javaFile = getOutputJavaFile(outputDirectory, target);"]}]}