{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56b8459ead99da1c6bb644f48e554f34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930ae60f04a5802fc2db1dc26562f6d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private static Map removeDuplicateTargets(Map targets)", "signatureAfterChange": "     private static Map<String, Target> removeDuplicateTargets(Map<String, Target> targets)", "diff": ["-    private static Map removeDuplicateTargets(Map targets) {", "-        Map locationMap = new HashMap();", "-        for (Iterator i = targets.entrySet().iterator(); i.hasNext();) {", "-            Map.Entry entry = (Map.Entry) i.next();", "-            String name = (String) entry.getKey();", "-            Target target = (Target) entry.getValue();", "-            Target otherTarget =", "-                (Target) locationMap.get(target.getLocation());", "+    private static Map<String, Target> removeDuplicateTargets(Map<String, Target> targets) {", "+        Map<Location, Target> locationMap = new HashMap<Location, Target>();", "+        for (Entry<String, Target> entry : targets.entrySet()) {", "+            String name = entry.getKey();", "+            Target target = entry.getValue();", "+            Target otherTarget = locationMap.get(target.getLocation());", "-            //  b) location is in map, but it's name is longer", "+            //  b) location is in map, but its name is longer", "-        Map ret = new HashMap();", "-        for (Iterator i = locationMap.values().iterator(); i.hasNext();) {", "-            Target target = (Target) i.next();", "+        Map<String, Target> ret = new HashMap<String, Target>();", "+        for (Target target : locationMap.values()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d181079ad1c015c0dac82f7bdd4c8c65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private static Map<String, Target> removeDuplicateTargets(Map<String, Target> targets)", "signatureAfterChange": "     private static Map<String, Target> removeDuplicateTargets(final Map<String, Target> targets)", "diff": ["-    private static Map<String, Target> removeDuplicateTargets(Map<String, Target> targets) {", "-        Map<Location, Target> locationMap = new HashMap<Location, Target>();", "-        for (Entry<String, Target> entry : targets.entrySet()) {", "-            String name = entry.getKey();", "-            Target target = entry.getValue();", "-            Target otherTarget = locationMap.get(target.getLocation());", "+    private static Map<String, Target> removeDuplicateTargets(final Map<String, Target> targets) {", "+        final Map<Location, Target> locationMap = new HashMap<Location, Target>();", "+        for (final Entry<String, Target> entry : targets.entrySet()) {", "+            final String name = entry.getKey();", "+            final Target target = entry.getValue();", "+            final Target otherTarget = locationMap.get(target.getLocation());", "-        Map<String, Target> ret = new HashMap<String, Target>();", "-        for (Target target : locationMap.values()) {", "+        final Map<String, Target> ret = new HashMap<String, Target>();", "+        for (final Target target : locationMap.values()) {"]}]}