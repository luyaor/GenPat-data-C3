{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ef2a5813aee237976d0ee9bb4936972", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23ba1af3cf6b59be57227e894b91b839", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/classloader/DefaultClassLoaderManager.java", "commitBeforeChange": "62562693ac733d0697b5a522972f36ea5570225c", "commitAfterChange": "a816a71d9e2587a83890f499dd2cabb7c6e02889", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private URL[] buildClasspath( final File file, final File[] dependencies )         throws MalformedURLException", "signatureAfterChange": "     private URL[] buildClasspath( final ArrayList files )         throws MalformedURLException", "diff": ["-    private URL[] buildClasspath( final File file, final File[] dependencies )", "+    private URL[] buildClasspath( final ArrayList files )", "-        final URL[] urls = new URL[ dependencies.length + 1 ];", "-", "-        for( int i = 0; i < dependencies.length; i++ )", "+        final URL[] urls = new URL[ files.size() + 1 ];", "+        final int count = files.size();", "+        for( int i = 0; i < count; i++ )", "-            urls[ i ] = dependencies[ i ].toURL();", "+            final File file = (File)files.get( i );", "+            urls[ i ] = file.toURL();", "-", "-        urls[ dependencies.length ] = file.toURL();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3206bcd24aca805871cbd58c0f4f02a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private File findTypeLib( final String libraryName )         throws Exception", "signatureAfterChange": "      private File findTypeLib( final String libraryName )         throws Exception", "diff": ["-        final String home = m_parameters.getParameter( \"myrmidon.home\" );", "-        final File homeDir = new File( home + File.separatorChar + \"ext\" );", "-", "-        final File library = new File( homeDir, name );", "-", "-        if( library.exists() )", "+        final File[] extPath = (File[])m_context.get( \"myrmidon.antlib.path\" );", "+        for( int i = 0; i < extPath.length; i++ )", "-            if( !library.canRead() )", "+            final File extDir = extPath[ i ];", "+            final File library = new File( extDir, name );", "+", "+            if( library.exists() )", "-                final String message = REZ.getString( \"no-read.error\", library );", "-                throw new TaskException( message );", "-            }", "-            else", "-            {", "-                return library;", "+                if( !library.canRead() )", "+                {", "+                    final String message = REZ.getString( \"no-read.error\", library );", "+                    throw new TaskException( message );", "+                }", "+                else", "+                {", "+                    return library;", "+                }"]}]}