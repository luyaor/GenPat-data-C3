{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1b333ac78865fbc6044c3527a6e3f64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87133b7cf65fa42ff47b0c4ec7be8d67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public void testChildrenOfExcludedDirectory()", "signatureAfterChange": "     @Test     public void testChildrenOfExcludedDirectory()", "diff": ["+    @Test", "-        getProject().executeTarget(\"children-of-excluded-dir-setup\");", "+        buildRule.getProject().executeTarget(\"children-of-excluded-dir-setup\");", "-        ds.setBasedir(new File(getProject().getProperty(\"output\")));", "+        ds.setBasedir(new File(buildRule.getProject().getProperty(\"output\")));", "-        ds.setBasedir(new File(getProject().getProperty(\"output\")));", "+        ds.setBasedir(new File(buildRule.getProject().getProperty(\"output\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da47a24257f7a7858ddc0cf6abcbc070", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/junit/JUnitTaskTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testForkedCapture() throws IOException", "signatureAfterChange": "      @Test     public void testForkedCapture() throws IOException", "diff": ["+    @Test", "-        getProject().setProperty(\"fork\", \"true\");", "+        buildRule.getProject().setProperty(\"fork\", \"true\");", "-        // those would fail because of the way BuildFileTest captures output", "-        assertNoPrint(getOutput(), \"output\");", "-        assertNoPrint(getError(), \"error output\");", "+        // those would fail because of the way BuildFileRule captures output", "+        assertNoPrint(buildRule.getOutput(), \"output\");", "+        assertNoPrint(buildRule.getError(), \"error output\");"]}]}