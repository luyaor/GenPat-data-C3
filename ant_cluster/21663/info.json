{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36c8344a978a4e2eaefa43df436722aa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d5777658def92fe18572a962caa4c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "fdade0537c4628290168a365b9a14d28c3e32b72", "commitAfterChange": "9af46a2ca05b7e2da738a1688ff679445f2c1a6e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 48, "signatureBeforeChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "signatureAfterChange": "     private TestResultHolder executeInVM(JUnitTest arg) throws BuildException", "diff": ["-            createClassLoader();", "+            if (splitJunit) {", "+                classLoader = (AntClassLoader) delegate.getClass().getClassLoader();", "+            } else {", "+                createClassLoader();", "+            }", "-            runner = new JUnitTestRunner(test, test.getHaltonerror(),", "+            runner = delegate.newJUnitTestRunner(test, test.getHaltonerror(),", "-                SummaryJUnitResultFormatter f =", "-                    new SummaryJUnitResultFormatter();", "+                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "+                    delegate.newSummaryJUnitResultFormatter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de35b63ab75a29c50c7cf81080f20a61", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Chmod.java", "commitBeforeChange": "222693b10f20a17af93ca107ba09dc2a679ab5cd", "commitAfterChange": "85875db138d8efbc050b5d34dbba19cc9c707db6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-            super.execute();", "+            try {", "+                super.execute();", "+            } finally {", "+                filesets.removeElement(defaultSet);", "+            }", "-            createArg().setValue(defaultSet.getDir(project).getPath());", "+            Commandline cloned = (Commandline) cmdl.clone();", "+            cloned.createArgument().setValue(defaultSet.getDir(project)", "+                                             .getPath());", "-                execute.setCommandline(cmdl.getCommandline());", "+                execute.setCommandline(cloned.getCommandline());"]}]}