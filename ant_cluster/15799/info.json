{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "753821f5cc97ebb827aadb78829a2946", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f795ee416e1d6bf5f6e4dc49f39bc0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void putNextEntry(ZipEntry ze) throws IOException", "signatureAfterChange": "     public void putNextEntry(ZipEntry ze) throws IOException", "diff": ["-        if (entry.getMethod() == STORED) {", "+        // Size/CRC not required if RandomAccessFile is used", "+        if (entry.getMethod() == STORED && raf == null) {", "-                throw new ZipException(\"uncompressed size is required for STORED method\");", "+                throw new ZipException(\"uncompressed size is required for\"", "+                                       + \" STORED method when not writing to a\"", "+                                       + \" file\");", "-                throw new ZipException(\"crc checksum is required for STORED method\");", "+                throw new ZipException(\"crc checksum is required for STORED\"", "+                                       + \" method when not writing to a file\");", "-        } else if (hasCompressionLevelChanged) {", "+        } ", "+", "+        if (entry.getMethod() == DEFLATED && hasCompressionLevelChanged) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ade36cc7fe3ccda7fe91d171ed76ebe", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntTypeDefinition.java", "commitBeforeChange": "cd8a8e0cc286ceb9111845fbd0606efb25669ef8", "commitAfterChange": "960cd2a7117d0fa96b4247c3081da7b5363ba0d8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void checkClass(Project project)", "signatureAfterChange": "     public void checkClass(Project project)", "diff": ["-        if (adapterClass != null) {", "-            boolean needToCheck = true;", "-            if (adaptToClass != null", "-                && adaptToClass.isAssignableFrom(clazz)) {", "-                needToCheck = false;", "+        if (adapterClass != null && (adaptToClass == null", "+            || !adaptToClass.isAssignableFrom(clazz))) {", "+            TypeAdapter adapter = (TypeAdapter) createAndSet(", "+                project, adapterClass);", "+            if (adapter == null) {", "+                throw new BuildException(\"Unable to create adapter object\");", "-            if (needToCheck) {", "-                TypeAdapter adapter = (TypeAdapter) createAndSet(", "-                    project, adapterClass);", "-                if (adapter == null) {", "-                    throw new BuildException(\"Unable to create adapter object\");", "-                }", "-                adapter.checkProxyClass(clazz);", "-            }", "+            adapter.checkProxyClass(clazz);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0df6f1fd235133ec5eb6d16a71835c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "3ca199cab8dfc0449835efa717423d54f1ee1ad6", "commitAfterChange": "23a1c7d3a76b7d15fbddeff0789aa3960879b02f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void checkConfiguration()", "signatureAfterChange": "     protected void checkConfiguration()", "diff": ["-        if (targetFilePos != null || mapperElement != null", "-            || destDir != null) {", "-", "-            if (mapperElement == null) {", "-                throw new BuildException(\"no mapper specified\", getLocation());", "-            }", "-            if (destDir == null) {", "-                throw new BuildException(\"no dest attribute specified\",", "-                                         getLocation());", "-            }", "+        if (targetFilePos != null && mapperElement == null) {", "+            throw new BuildException(\"targetfile specified without mapper\",", "+                                     getLocation());", "+        }", "+        if (destDir != null && mapperElement == null) {", "+            throw new BuildException(\"dest specified without mapper\",", "+                                     getLocation());", "+        }", "+        if (mapperElement != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff74e631467ba07dd9ae01e8bb29e4a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/CvsTagEntry.java", "commitBeforeChange": "2ca7dca3a61c1dfaf641aaae01d923a018e418c5", "commitAfterChange": "ab752d0295f473dde0b01a369616625a3ce9b871", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["+     */", "-        buffer.append(m_filename);", "-        if ((m_revision == null)) {", "+        buffer.append(filename);", "+        if ((revision == null)) {", "-            if (m_prevRevision != null) {", "-                buffer.append(\"; previous revision was \").append(m_prevRevision);", "+            if (prevRevision != null) {", "+                buffer.append(\"; previous revision was \").append(prevRevision);", "-        } else if (m_revision != null && m_prevRevision == null) {", "+        } else if (revision != null && prevRevision == null) {", "-                .append(m_revision);", "-        } else if (m_revision != null && m_prevRevision != null) {", "+                .append(revision);", "+        } else if (revision != null && prevRevision != null) {", "-                .append(m_prevRevision).append(\" to \").append(m_revision);", "+                .append(prevRevision).append(\" to \").append(revision);"]}]}