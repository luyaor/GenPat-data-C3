{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "280ea04905f38215832e8ce186a08ff0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a13b6daa8286e91edd61b85de078ec", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "472977c920afdefb2decccedebd0b372ebb29df1", "commitAfterChange": "bd02671bd0f52793b970f73014668574bf9833c6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private boolean checkResource(String resource)", "signatureAfterChange": "      private boolean checkResource(String resource)", "diff": ["-        return (ClassLoader.getSystemResource(resource) != null);", "+        if (loader != null) {", "+            return (loader.getResourceAsStream(resource) != null);", "+        } else {", "+            return (this.getClass().getResourceAsStream(resource) != null);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b262e5e390efeb79cde45f52883a328", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "dad211c19fbf676be2462650e380439c0cae4982", "commitAfterChange": "91ee1ced95e8b60187ccaaa4f032015605c26e07", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String[] args)", "signatureAfterChange": "     public static void main(String[] args)", "diff": ["+        int exitCode;", "-            launcher.run(args);", "+            exitCode=launcher.run(args);", "+            exitCode=-1;", "-            t.printStackTrace();", "+            exitCode=-1;", "+            t.printStackTrace(System.err);", "+        }", "+        if(exitCode!=0) {", "+            System.exit(exitCode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b4523e00bf79bc0083f9cfb597e3e83", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "fcd6548344aa3f590435beff55530cfdb6983588", "commitAfterChange": "ffea0a9f7459b7c64148ae244b22e847bad9128b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public RegexpMatcher newRegexpMatcher() throws BuildException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher(Project p)         throws BuildException", "diff": ["-        String systemDefault = System.getProperty(\"ant.regexp.matcherimpl\");", "+     */", "+    public RegexpMatcher newRegexpMatcher(Project p)", "+        throws BuildException {", "+        String systemDefault = null;", "+        if (p == null) {", "+            systemDefault = System.getProperty(\"ant.regexp.regexpimpl\");", "+        } else {", "+            systemDefault = (String) p.getProperties().get(\"ant.regexp.regexpimpl\");", "+        }", "+        ", "-            // XXX     should we silently possible exceptions and try to ", "+            // XXX     should we silently catch possible exceptions and try to "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a4dd4215bdf04f2c842e3c636f0b0d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/modifiedselector/ModifiedSelector.java", "commitBeforeChange": "08c6cab4cc097564fe1df9dbb1a5be647b919595", "commitAfterChange": "ccfc216622568ccf99c231bf0de224ef3a24aa33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected Object loadClass(String classname, String msg, Class type)", "signatureAfterChange": "     protected Object loadClass(String classname, String msg, Class type)", "diff": ["-            Object rv = getClassLoader().loadClass(classname).newInstance();", "+            ClassLoader cl = getClassLoader();", "+            Class clazz = null;", "+            if (cl != null) {", "+                clazz = cl.loadClass(classname);", "+            } else {", "+                clazz = Class.forName(classname);", "+            }", "+            ", "+            Object rv = clazz.newInstance();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "256defc6c74de4ce0b79a5d9e50e1618", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "6c40e0ca77d68418106ebd401936949e61e152bd", "commitAfterChange": "47dce162e8c5dbd403a4456eb427ae439171ca99", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure)", "signatureAfterChange": "     public JUnitTestRunner(JUnitTest test, boolean haltOnError,                            boolean haltOnFailure, ClassLoader loader)", "diff": ["+     */", "+    public JUnitTestRunner(JUnitTest test, boolean haltOnError,", "+                           boolean haltOnFailure, ClassLoader loader) {", "-            Class testClass = Class.forName(test.getName());", "+            Class testClass = null;", "+            if (loader == null) {", "+                testClass = Class.forName(test.getName());", "+            } else {", "+                testClass = loader.loadClass(test.getName());", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301c4ef7c529d235483dcfc3af0f8a1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LeadPipeInputStream.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public synchronized int read() throws IOException", "signatureAfterChange": "     public synchronized int read() throws IOException", "diff": ["-            if (\"write end dead\".equalsIgnoreCase(eyeOhEx.getMessage())) {", "+            String msg = eyeOhEx.getMessage();", "+            if (msg != null) {", "+                msg = msg.toLowerCase(Locale.ENGLISH);", "+            }", "+            if (\"write end dead\".equals(msg)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b3b3bb44e03fe0dcbb0f8178d474c6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "d42256bf5456cb6a699edf64dd6b578d9d5074f0", "commitAfterChange": "77ed2ceec591f35d8056e41f48b8c9e0f9ce32c5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private boolean checkResource(String resource)", "signatureAfterChange": "      private boolean checkResource(String resource)", "diff": ["-            return (this.getClass().getResourceAsStream(resource) != null);", "+            ClassLoader cL = this.getClass().getClassLoader();", "+            if (cL != null) {", "+                return (cL.getResourceAsStream(resource) != null);", "+            } else {", "+                return ", "+                    (ClassLoader.getSystemResourceAsStream(resource) != null);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c067a30d22149bff6f8b1d4cdbc1c5e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "a570213ccfdb56f94be50262454306671d59a179", "commitAfterChange": "b482bf23bd33f97ec56d7b41cbbb203f151465fc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private boolean checkFile(File file)", "signatureAfterChange": "      private boolean checkFile(File file)", "diff": ["-        return file.isFile();", "-    }", "+        if (type != null) {", "+            if (type.equalsIgnoreCase(\"dir\")){", "+                return file.isDirectory();", "+            } else if (type.equalsIgnoreCase(\"file\")){", "+                return file.isFile();", "+            }", "+        }", "+        return file.exists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f06acf565fa0492445ceff63bf8f261", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "98c3a0ea1093d8fa82bc229721c70daffa76609a", "commitAfterChange": "8a0dc2deaf89df8278246612afd85562b1994254", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            ", "+            final int summaryLogLevel;", "+            if(count>0) {", "+                summaryLogLevel = Project.MSG_INFO;", "+            }  else {", "+                summaryLogLevel = Project.MSG_DEBUG;", "+            }", "+            ", "-                + duration + \" seconds\");", "+                + duration + \" seconds\", summaryLogLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50df654ff7267406b4a53e6b7456b4f3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbcTask.java", "commitBeforeChange": "11997bb5b8f7ad45ff7bbf461311325e0003e014", "commitAfterChange": "6a65262ae702364e448ed94837199c40eac8eefd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private Path getClasspath()", "signatureAfterChange": "     private Path getClasspath()", "diff": ["+        Path cp = null;", "-            classpath = Path.systemClasspath;", "+            cp = (new Path(getProject())).concatSystemClasspath(\"last\");", "+        } else {", "+            cp = classpath.concatSystemClasspath(\"ignore\");", "-        return classpath;", "+        return cp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f5814f1e8cbb382839e824c0359a939", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "9301e386b382e7b94742a22f37d401d61ee044e6", "commitAfterChange": "6d157f462cdd9e601cb6fd296cb8c746ed7227fc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void initializeProject()", "signatureAfterChange": "      private void initializeProject()", "diff": ["-        // set user-define properties", "-        Hashtable prop1 = project.getProperties();", "+        // set user-defined or all properties from calling project", "+        Hashtable prop1;", "+        if (inheritAll == true) {", "+           prop1 = project.getProperties();", "+        }", "+        else {", "+           prop1 = project.getUserProperties();", "+        }", "+        ", "-            p1.setProperty(arg, value);", "+            if (inheritAll == true)", "+               p1.setProperty(arg, value);", "+            else", "+               p1.setUserProperty(arg, value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fbb9b1cc1e9b2b6f72b2ce300d0290f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Java.java", "commitBeforeChange": "8fd0d861a171d0a5cbc1c46ab84e0ba0b394f852", "commitAfterChange": "3e49b015c51a6c6deaedf791ad96a464af3b0454", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void run(String classname, Vector args) throws BuildException", "signatureAfterChange": "     protected void run(String classname, Vector args) throws BuildException", "diff": ["+            Class c = null;", "+            if (classpath == null) {", "+                c = Class.forName(classname);", "+            } ", "+            else {", "+                AntClassLoader loader = new AntClassLoader(project, classpath);", "+                c = loader.forceLoadClass(classname);", "+            }", "+        ", "-            Class c = Class.forName(classname);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e87d872a2a4e57ff819fef7c89234bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void write(byte[] b, int offset, int length) throws IOException", "signatureAfterChange": "     public void write(byte[] b, int offset, int length) throws IOException", "diff": ["-            super.write(b, offset, length);", "+            if (length > 0) {", "+                if (!def.finished()) {", "+                    def.setInput(b, offset, length);", "+                    while (!def.needsInput()) {", "+                        deflate();", "+                    }", "+                }", "+            }", "-            out.write(b, offset, length);", "+            writeOut(b, offset, length);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f7ba1ca66fb098546c9011cd47da2c1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "5e898465ac1ab3d90fdc26dc34a2b87a2ea9be35", "commitAfterChange": "c5faebbd854cf6f4363402c2cd2a54749b4eeb61", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute(Project project) throws BuildException", "diff": ["-    public void execute() throws BuildException{", "+", "+    public void execute(Project project) throws BuildException{", "-        final Class[] param = { argument[0].getClass() };", "-            final Class target = Class.forName(classname);", "+            final Class[] param = { Class.forName(\"[Ljava.lang.String;\") };", "+            Class target = null;", "+            if (classpath == null) {", "+                target = Class.forName(classname);", "+            } else {", "+                AntClassLoader loader = new AntClassLoader(project, classpath);", "+                target = loader.forceLoadClass(classname);", "+            }", "-                throw new BuildException(t.toString());", "+                throw new BuildException(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d57f355fd218296b5752ce760b6326", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public void setValue(String value)", "signatureAfterChange": "         public void setValue(String value)", "diff": ["-            this.value = value;", "+            if (currentIndex >= values.size()) {", "+                values.addElement(value);", "+                currentIndex = values.size() - 1;", "+            } else {", "+                values.setElementAt(value, currentIndex);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "982c91a55e78cdd9b82a9627802e907a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "0a9a3cc1f80e139aa4ca8bba7080bdbf728ed311", "commitAfterChange": "f40450a1ea9d49a2fe1a3c01da37f89fc7bfed7f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        recorder.setRecordState(start);", "+        if (start != null) {", "+            if (start.booleanValue()) {", "+                recorder.reopenFile();", "+                recorder.setRecordState(start);", "+            } else {", "+                recorder.setRecordState(start);", "+                recorder.closeFile();", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8401825cb4f3b57da4a81c49ec80508", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "98d5287971d91bc3de42b920d3f93aa5c044e3ce", "commitAfterChange": "9490ce8f93b6cf0d97d87c57fba88149be9f48cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected Main(String[] args) throws BuildException", "signatureAfterChange": "      protected Main(String[] args) throws BuildException", "diff": ["+            } else if (arg.equals(\"-debug\")) {", "+                printVersion();", "+                msgOutputLevel = Project.MSG_DEBUG;", "-        // make sure buildfile exists", "+        // if buildFile was not specified on the command line,", "+        // then search for it", "+        if (buildFile == null) {", "+            buildFile = findBuildFile(DEFAULT_BUILD_FILENAME);", "+        }", "+        // make sure buildfile exists", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84ad1d185ac3c5c6d963234ec57f3d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "c8d4ba2393fab9703138171f5d63efa34cbc37e8", "commitAfterChange": "2bf9f10a860d6519b1247e6f7f5487c193c584b3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "signatureAfterChange": "     protected int transferFiles(FTPClient ftp, FileSet fs)          throws IOException, BuildException", "diff": ["-        String[] dsfiles = ds.getIncludedFiles();", "+        String[] dsfiles = null;", "+        if (action == RM_DIR) {", "+            dsfiles = ds.getIncludedDirectories();", "+        } else {", "+            dsfiles = ds.getIncludedFiles();", "+        }", "+                    case RM_DIR:", "+                    {", "+                        rmDir(ftp, dsfiles[i]);", "+                        break;", "+                    }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a973fcfe41e3e6ecba2e19d818a16bdb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java", "commitBeforeChange": "ed475344e72f1fb4d9e19cf627ddf8e67cc23942", "commitAfterChange": "bd578f489a9200bf0c1e361023cb235c15d743e7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      JUnitResultFormatter createFormatter() throws BuildException", "signatureAfterChange": "     JUnitResultFormatter createFormatter(ClassLoader loader)          throws BuildException", "diff": ["+     */", "+    JUnitResultFormatter createFormatter(ClassLoader loader) ", "+        throws BuildException {", "+", "-            f = Class.forName(classname);", "+            if (loader == null) {", "+                f = Class.forName(classname);", "+            } else {", "+                f = loader.loadClass(classname);", "+                AntClassLoader.initializeClass(f);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b20b238ff93bf3f5a909b8cd2d51a6f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java", "commitBeforeChange": "f19f07d6e4c72f241057ecfc32d80be21201bbf7", "commitAfterChange": "ca91f8cb7e4f2bfe1a191dea6126a32649af9565", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isSelected(File basedir, String filename, File file)", "signatureAfterChange": "     public boolean isSelected(File basedir, String filename, File file)", "diff": ["+        String userstr = contains;", "+        if (!casesensitive) {", "+            userstr = contains.toLowerCase();", "+        }", "-                if (teststr.indexOf(contains) > -1) {", "+                if (!casesensitive) {", "+                    teststr = teststr.toLowerCase();", "+                }", "+                if (teststr.indexOf(userstr) > -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6f80d3d763289378bf3b4ce16357e0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "472977c920afdefb2decccedebd0b372ebb29df1", "commitAfterChange": "bd02671bd0f52793b970f73014668574bf9833c6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private boolean checkClass(String classname)", "signatureAfterChange": "      private boolean checkClass(String classname)", "diff": ["-            Class.forName(classname);", "+            if (loader != null) {", "+                loader.loadClass(classname);", "+            } else {", "+                this.getClass().getClassLoader().loadClass(classname);", "+            }", "-        } catch (Throwable t) {", "-            log(t.toString(), Project.MSG_VERBOSE);", "+        } catch (ClassNotFoundException e) {", "+            log(e.toString(), Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd69a81208b046607f67e80fe1352882", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "04632b415168861153d1507fff8614dc2aef491b", "commitAfterChange": "a638a40bcdc97886bec8140149b5754c77a4f8e0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected void loadResource( String name )", "signatureAfterChange": "      protected void loadResource( String name )", "diff": ["-            InputStream is = this.getClass().getResourceAsStream(name);", "+            ClassLoader cL = this.getClass().getClassLoader();", "+            InputStream is = null;", "+", "+            if (cL == null) {", "+                is = ClassLoader.getSystemResourceAsStream(name);", "+            } else {", "+                is = cL.getResourceAsStream(name);", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3bd85f6074a8d64a112e693424d460", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "6309813d01620379a35da64c12c4de488efedc2d", "commitAfterChange": "4ab1950bd8ba0bf2335e09b07852d74e1b016f5a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public void merge(Manifest other) throws ManifestException", "signatureAfterChange": "     public void merge(Manifest other, boolean overwriteMain) throws ManifestException", "diff": ["-        if (other.manifestVersion != null) {", "-            manifestVersion = other.manifestVersion;", "-        }", "-        mainSection.merge(other.mainSection);", "-        for (Enumeration e = other.sections.keys(); e.hasMoreElements();) {", "-            String sectionName = (String)e.nextElement();", "-            Section ourSection = (Section)sections.get(sectionName);", "-            Section otherSection = (Section)other.sections.get(sectionName);", "-            if (ourSection == null) {", "-                sections.put(sectionName, otherSection);", "-            }", "-            else {", "-                ourSection.merge(otherSection);", "-            }", "-        }", "+     */", "+    public void merge(Manifest other, boolean overwriteMain) throws ManifestException {", "+        if (other != null) {", "+             if (overwriteMain) {", "+                 mainSection = other.mainSection;", "+             }", "+             else {", "+                 mainSection.merge(other.mainSection);", "+             }", "+", "+             if (other.manifestVersion != null) {", "+                 manifestVersion = other.manifestVersion;", "+             }", "+", "+             for (Enumeration e = other.sections.keys(); e.hasMoreElements();) {", "+                 String sectionName = (String)e.nextElement();", "+                 Section ourSection = (Section)sections.get(sectionName);", "+                 Section otherSection = (Section)other.sections.get(sectionName);", "+                 if (ourSection == null) {", "+                     if (otherSection != null) {", "+                         sections.put(sectionName.toLowerCase(), otherSection);", "+                     }", "+                 }", "+                 else {", "+                     ourSection.merge(otherSection);", "+                 }", "+             }", "+         }"]}]}