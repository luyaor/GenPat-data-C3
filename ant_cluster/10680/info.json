{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7c1b0ef834db8524d224d9dd77d43a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58564898a392e6eadb7f1bba7411926f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl2.java", "commitBeforeChange": "af97c64cb1b6bea8dd0d7aa333a51c7613cbe5e9", "commitAfterChange": "3256156dcc13ead3eba8a9ea02b23ce7f7be8eb2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public AntHandler onStartChild(String uri, String tag, String qname,                                        Attributes attrs,                                        AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public AntHandler onStartChild(String uri, String tag, String qname,                                        Attributes attrs,                                        AntXmlContext context)             throws SAXParseException", "diff": ["+            // this element", "+            RuntimeConfigurable2 wrapper=context.currentWrapper();", "+            ", "+            Object element=wrapper.getProxy();", "-                return new ElementHandler((TaskContainer)element, wrapper, target);", "+                return ProjectHelperImpl2.elementHandler;", "-                return new NestedElementHandler(element, wrapper, target);", "+                return ProjectHelperImpl2.nestedElementHandler;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db764940e1f3b719ad639a3cd985feb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "a05aca8a79e03c1a54200d38dce8120b4d13ca4c", "commitAfterChange": "a7e2a93ee49eb3d1cdd090d3909aa115959d55b5", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 109, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["-        synchronized (this) {", "-            if (loggingMessage) {", "+            if (isLoggingMessage.get() != Boolean.FALSE) {", "-                loggingMessage = true;", "+                isLoggingMessage.set(Boolean.TRUE);", "-                loggingMessage = false;", "+                isLoggingMessage.set(Boolean.FALSE);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80795b1683f2c487f9089f0c5920cd1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "6309813d01620379a35da64c12c4de488efedc2d", "commitAfterChange": "4ab1950bd8ba0bf2335e09b07852d74e1b016f5a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-        addedDirs = new Hashtable();", "-        addedFiles = new Vector();", "-        filesets = new Vector();", "+        addedDirs.clear();", "+        addedFiles.clear();", "+        filesets.clear();", "+        entries.clear();", "+        groupfilesets.clear();", "+        duplicate = \"add\";", "+        archiveType = \"zip\";", "+        emptyBehavior = \"skip\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb49b7f2ede5b607b8e1feb26775592", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/Attic/wizzard/Wizzard.java", "commitBeforeChange": "bb67dc44d84a49fc3d8a14b02b014ac5acd41877", "commitAfterChange": "e99e5c5fc5c4f85afc7ced3f9c910ae1817ff2e4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void showStep(WizzardStep step)", "signatureAfterChange": "     private void showStep(WizzardStep step)", "diff": ["+        _curr.updateDataModel();", "-        TitledBorder border = (TitledBorder) getBorder();", "-        border.setTitle(step.getTitle());", "+        _stepContainer.setBorder(", "+            BorderFactory.createTitledBorder(step.getTitle()));", "+        _progress.setValue(_stepOrdering.indexOf(step));", "+", "+        // Tell the step to refresh its display based on the data model.", "+        step.updateDisplay();", "-"]}]}