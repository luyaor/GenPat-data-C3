{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94993c8620647d731f301bcc020c93ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425b6b00b38262bad02f845a9f246d7a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "eb85ba43d4d919e9e0a98d2925d6d961b7b53315", "commitAfterChange": "9557aed0f00650ea6cda33e994893e5e3f3faf4f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["-        if (!uri.startsWith(\"file:\")) {", "-            throw new IllegalArgumentException(\"Can only handle file: URIs\");", "-        }", "-        if (uri.startsWith(\"file://\")) {", "-            uri = uri.substring(7);", "-        } else {", "-            uri = uri.substring(5);", "+        try {", "+            URL url = new URL(uri);", "+            if (!(\"file\".equals(url.getProtocol()))) {", "+                throw new IllegalArgumentException(\"Can only handle file: URIs\");", "+            }", "+            StringBuffer buf = new StringBuffer(url.getHost());", "+            if (buf.length() > 0) {", "+                buf.insert(0, \"//\");", "+            }", "+            buf.append(url.getPath());", "+            uri = buf.toString();", "+        } catch (MalformedURLException emYouEarlEx) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64b7105f96db807c4d97259ee0059416", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "831857b1f342e3cf0f3917e6000ee796fe242cac", "commitAfterChange": "8195ed0fa714966dcfb8ad81fcd6114fa5b85076", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["+        URL url = null;", "-            URL url = new URL(uri);", "-            if (!(\"file\".equals(url.getProtocol()))) {", "-                throw new IllegalArgumentException(\"Can only handle file: URIs\");", "-            }", "-            StringBuffer buf = new StringBuffer(url.getHost());", "-            if (buf.length() > 0) {", "-                buf.insert(0, \"//\");", "-            }", "-            buf.append(url.getPath());", "-            uri = buf.toString();", "+            url = new URL(uri);", "+        if (url == null || !(\"file\".equals(url.getProtocol()))) {", "+            throw new IllegalArgumentException(\"Can only handle valid file: URIs\");", "+        }", "+        StringBuffer buf = new StringBuffer(url.getHost());", "+        if (buf.length() > 0) {", "+            buf.insert(0, File.separatorChar).insert(0, File.separatorChar);", "+        }", "-        uri = uri.replace('/', File.separatorChar);", "+        String file = url.getFile();", "+        int queryPos = file.indexOf('?');", "+        buf.append((queryPos < 0) ? file : file.substring(0, queryPos));", "+", "+        uri = buf.toString().replace('/', File.separatorChar);", "+"]}]}