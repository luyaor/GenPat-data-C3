{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74fbc72950bc8c00a09c31c3c4513866", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d86fb6a2367b04973341f331f69f1a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/compilers/JspCompilerAdapterFactory.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static JspCompilerAdapter getCompiler(String compilerType, Task task,                                                  AntClassLoader loader)         throws BuildException", "signatureAfterChange": "     public static JspCompilerAdapter getCompiler(String compilerType, Task task,                                                  AntClassLoader loader)         throws BuildException", "diff": ["-        String compilerTypeLC = compilerType.toLowerCase(Locale.ENGLISH);", "-        if (compilerTypeLC.equals(\"jasper\")) {", "+        if (compilerType.equalsIgnoreCase(\"jasper\")) {", "-        if (compilerTypeLC.equals(\"jasper41\")) {", "+        if (compilerType.equalsIgnoreCase(\"jasper41\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "336f86b20dbd1731e3eb0cae977d7bd3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "6003b0fe88a4efbd9b4d3728aab4f6fceb85486c", "commitAfterChange": "adb971260c7328e1914b7716ac1691c52d2c88a5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXMLContext context)             throws SAXParseException", "diff": ["-            if (parent != null) {", "-                // nested elements. Backward compatibilitiy - only nested elements", "-                // are lower cased in the original processor", "-                qname = qname.toLowerCase(Locale.US);", "-                // XXX What about nested elements that are inside TaskContainers ?", "-                // We can't know that that we need lowercase until we know", "-                // parent is not a TaskContainer. Maybe this test should", "-                // be done in UnknownElement.", "-", "-                // Note: the original code seems to have a similar problem: the lowercase", "-                // conversion happens only inside ProjectHelper, if we know that the", "-                // parent is not TaskContainer. If the parent is not known - UE are used", "-                // and AFAIK there is no code to deal with that, so the conversion will be", "-                // different based on context ( if the enclosing task is taskdefed in target", "-                // or known at top level ).", "-            }", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7328777ca472835145372a002dff2a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "8dd4e0ba76f304d2a1bfde2ddd614d750d83560f", "commitAfterChange": "566ea426c391b0114e12ab6cbd5fc822d792ccc0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private String cleanBuffer(StringBuffer buffer)", "signatureAfterChange": "      private String cleanBuffer(StringBuffer buffer)", "diff": ["-                if (ch == '\\n') {", "-                    cleanedBuffer.append(ch);", "-                } else {", "-                    cleanedBuffer.append('\\r').append(ch);", "-                }", "+                cleanedBuffer.append(ch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49d8eb5545a4f51db4cb6fbc1a7ecd59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TypeSelector.java", "commitBeforeChange": "4f1e68bd2b9b912702ce0d1588688b5491be0ad5", "commitAfterChange": "c767541c7d35c9eef55bf65e686373b02b71af2a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["-                if (paramname != null) {", "-                    paramname = paramname.toLowerCase(Locale.ENGLISH);", "-                }", "-                if (TYPE_KEY.equals(paramname)) {", "+                if (TYPE_KEY.equalsIgnoreCase(paramname)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80799816f095fe0208b3f351adb7b035", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/BuildFileTest.java", "commitBeforeChange": "ae2ce59075975c8ee7dd2eba234c5ab47f257972", "commitAfterChange": "28d7d5d8d3e6819733ed45e899783fba39bc58c7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private String cleanBuffer(StringBuffer buffer)", "signatureAfterChange": "      private String cleanBuffer(StringBuffer buffer)", "diff": ["-            if (!cr) {", "-                cleanedBuffer.append(ch);", "-            } else {", "-                cleanedBuffer.append(ch);", "-            }", "+            cleanedBuffer.append(ch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fde4b4f720ee01dc2c482fde39e61f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "e2ec6a3988643fe6f3c8fabd5b8656e4209eaa1d", "commitAfterChange": "42c6021a9e42f49f50a3f4a170590d15a9b8c3db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object getService( final Class serviceClass )         throws TaskException", "signatureAfterChange": "     public Object getService( final Class serviceClass )         throws TaskException", "diff": ["-        // Try this context first", "+        //Note that this will chain up to parent ServiceManagers (if any)", "-        }", "-", "-        // Try parent", "-        if( null != m_parent )", "-        {", "-            return m_parent.getService( serviceClass );"]}]}