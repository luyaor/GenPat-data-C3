{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d92ffb2692fc3e91a59962c5e17f54c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f3fc56168007776485c32cc80adb845", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "cca008dd0001628eefae7a0ebffba4815a6909f1", "commitAfterChange": "021fdf251c92ecb3981724d83c0265dc770280b3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "     protected void execute(JUnitTest arg) throws BuildException", "signatureAfterChange": "     protected void execute(JUnitTest arg) throws BuildException", "diff": ["-            exitValue = executeAsForked(test, watchdog);", "+            exitValue = executeAsForked(test, watchdog, null);", "+        actOnTestResult(exitValue, wasKilled, test, \"Test \" + test.getName());", "+    }", "-        // if there is an error/failure and that it should halt, stop", "-        // everything otherwise just log a statement", "-        boolean errorOccurredHere =", "-            exitValue == JUnitTestRunner.ERRORS || wasKilled;", "-        boolean failureOccurredHere =", "-            exitValue != JUnitTestRunner.SUCCESS || wasKilled;", "-        if (errorOccurredHere || failureOccurredHere) {", "-            if ((errorOccurredHere && test.getHaltonerror())", "-                || (failureOccurredHere && test.getHaltonfailure())) {", "-                throw new BuildException(\"Test \" + test.getName() + \" failed\"", "-                    + (wasKilled ? \" (timeout)\" : \"\"), getLocation());", "-            } else {", "-                log(\"TEST \" + test.getName() + \" FAILED\"", "-                    + (wasKilled ? \" (timeout)\" : \"\"), Project.MSG_ERR);", "-                if (errorOccurredHere && test.getErrorProperty() != null) {", "-                    getProject().setNewProperty(test.getErrorProperty(), \"true\");", "-                if (failureOccurredHere && test.getFailureProperty() != null) {", "-                    getProject().setNewProperty(test.getFailureProperty(), \"true\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aef2914d998ab06c3a330c201859882", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "8c9b19d0a2849ba712c6859ed7b7d3537cef33fb", "commitAfterChange": "6362427b085c8b677409bc376b4805e8e50fbe8c", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "     protected void actOnTestResult(TestResultHolder result,JUnitTest test,                                     String name)", "signatureAfterChange": "     protected void actOnTestResult(int exitValue, boolean wasKilled,                                    JUnitTest test, String name)", "diff": ["-    protected void actOnTestResult(TestResultHolder result,JUnitTest test, ", "+    protected void actOnTestResult(int exitValue, boolean wasKilled,", "+                                   JUnitTest test, String name) {", "+        TestResult t = new TestResult();", "+        t.exitValue = exitValue;", "+        t.wasKilled = wasKilled;", "+        actOnTestResult(t, test, name);", "+    }"]}]}