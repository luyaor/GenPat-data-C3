{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "638e1506d28ce35045a0343b3b1a5719", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165b75b4d193900cab6ad54e3baab7ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "      private Set getPropertyNames(Hashtable props)", "signatureAfterChange": "      private Set<String> getPropertyNames(Map<String, Object> props)", "diff": ["-    private Set getPropertyNames(Hashtable props) {", "-        Set names;", "+    private Set<String> getPropertyNames(Map<String, Object> props) {", "+        Set<String> names;", "-            names = new HashSet();", "+            names = new HashSet<String>();", "-            for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "-                PropertySet set = (PropertySet) e.nextElement();", "-                names.addAll(set.getProperties().keySet());", "+            for (PropertySet set : setRefs) {", "+                names.addAll(set.getPropertyMap().keySet());", "-                HashSet complement = new HashSet(props.keySet());", "+                HashSet<String> complement = new HashSet<String>(props.keySet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec5be2c565472f3dbb61e9318212914", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private Hashtable getEffectiveProperties()", "signatureAfterChange": "      private Map<String, Object> getEffectiveProperties()", "diff": ["-    private Hashtable getEffectiveProperties() {", "-        Project prj = getProject();", "-        Hashtable result = prj == null ? getAllSystemProperties() : prj.getProperties();", "+    private Map<String, Object> getEffectiveProperties() {", "+        final Project prj = getProject();", "+        final Map<String, Object> result = prj == null ? getAllSystemProperties() : prj.getProperties();", "-        for (Enumeration e = setRefs.elements(); e.hasMoreElements();) {", "-            PropertySet set = (PropertySet) e.nextElement();", "-            result.putAll(set.getProperties());", "+        for (PropertySet set : setRefs) {", "+            result.putAll(set.getPropertyMap());"]}]}