{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "005e51cfe6538060de33873431267efa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448e3057ec91f407a6ea8319a40716cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "     private boolean causesIllegalSymlinkLoop(String dirName, File parent,                                              LinkedList directoryNamesFollowed)", "signatureAfterChange": "     private boolean causesIllegalSymlinkLoop(String dirName, File parent,                                              LinkedList<String> directoryNamesFollowed)", "diff": ["-                                             LinkedList directoryNamesFollowed) {", "+                                             LinkedList<String> directoryNamesFollowed) {", "-                ArrayList files = new ArrayList();", "+                ArrayList<String> files = new ArrayList<String>();", "-                for (Iterator i = directoryNamesFollowed.iterator();", "-                     i.hasNext(); ) {", "+                for (String dir : directoryNamesFollowed) {", "-                    String dir = (String) i.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f0dc8addcef47e3db6d0b6fc3ac153b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public synchronized boolean retainAll(Collection c)", "signatureAfterChange": "      public synchronized boolean retainAll(Collection<?> c)", "diff": ["-    public synchronized boolean retainAll(Collection c) {", "+    public synchronized boolean retainAll(Collection<?> c) {", "-            c = new HashSet(c);", "+            c = new HashSet<Object>(c);", "-        LinkedList l = new LinkedList();", "-        for (Iterator i = iterator(); i.hasNext(); ) {", "-            Object o = i.next();", "+        LinkedList<E> l = new LinkedList<E>();", "+        for (E o : this) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf92eb560bc7422ca596e133f9a8ef0c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/property/ResolvePropertyMap.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void resolveAllProperties(Map map, String prefix,                                      boolean prefixValues)", "signatureAfterChange": "     public void resolveAllProperties(Map<String, Object> map, String prefix,                                      boolean prefixValues)", "diff": ["-    public void resolveAllProperties(Map map, String prefix,", "+    public void resolveAllProperties(Map<String, Object> map, String prefix,", "-        for (Iterator i = map.keySet().iterator(); i.hasNext();) {", "+        for (String key : map.keySet()) {", "-            String key = (String) i.next();"]}]}