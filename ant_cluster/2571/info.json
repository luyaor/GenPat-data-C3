{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ffff0e15ffd35c4c104c4c03a77299c", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ef9f79ecad88869310527ddccd529c4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreDataService.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isDataValueSet(String name) throws ExecutionException", "signatureAfterChange": "     public boolean isDataValueSet(String name) throws AntException", "diff": ["-    public boolean isDataValueSet(String name) throws ExecutionException {", "-        return frame.isDataValueSet(name);", "+    public boolean isDataValueSet(String name) throws AntException {", "+        Frame containingFrame = frame.getContainingFrame(name);", "+", "+        if (containingFrame == null) {", "+            return isOverrideSet(name);", "+        }", "+        if (containingFrame == frame) {", "+            return dataValues.containsKey(name);", "+        } else {", "+            String localName = frame.getNameInFrame(name);", "+            DataService actualDataService = getFrameDataService(containingFrame);", "+            return actualDataService.isDataValueSet(localName);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360fc60a4672729cfce8ae913dc5f33b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreDataService.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setDataValue(String valueName, Object value)          throws ExecutionException", "signatureAfterChange": "     public void setDataValue(String name, DataValue value, boolean mutable)          throws AntException", "diff": ["-    public void setDataValue(String valueName, Object value)", "-        frame.setDataValue(valueName, value, false);", "+     */", "+    public void setDataValue(String name, DataValue value, boolean mutable)", "+         throws AntException {", "+        Frame containingFrame = frame.getContainingFrame(name);", "+", "+        if (containingFrame == null) {", "+            setOverrideProperty(name, value, mutable);", "+            return;", "+        }", "+", "+        String localName = frame.getNameInFrame(name);", "+        if (containingFrame == frame) {", "+            updateValue(dataValues, localName, value, mutable);", "+        } else {", "+            DataService actualDataService = getFrameDataService(containingFrame);", "+            actualDataService.setDataValue(localName, value, mutable);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca91d3423525f091958f43b7dffc1e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/CoreDataService.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Object getDataValue(String valueName) throws ExecutionException", "signatureAfterChange": "     public Object getDataValue(String name) throws AntException", "diff": ["-    public Object getDataValue(String valueName) throws ExecutionException {", "-        return frame.getDataValue(valueName);", "+    public Object getDataValue(String name) throws AntException {", "+        Frame containingFrame = frame.getContainingFrame(name);", "+", "+        if (containingFrame == null) {", "+            return getOverrideProperty(name);", "+        }", "+        if (containingFrame == frame) {", "+            DataValue dataValue = (DataValue) dataValues.get(name);", "+            if (dataValue == null) {", "+                return null;", "+            }", "+            return dataValue.getValue();", "+        } else {", "+            String localName = frame.getNameInFrame(name);", "+            DataService actualDataService = getFrameDataService(containingFrame);", "+            return actualDataService.getDataValue(localName);", "+        }"]}]}