{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "005664fde3bcdb4ea07aeacec759947d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8335e34f654d0ca3a9a5ee2593c459", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/xml/XSLTProcess.java", "commitBeforeChange": "030fd751f51bef1c60b27cc4034cf1b013551520", "commitAfterChange": "0deb15031e9e934900b3b41f0d191dabdece8f80", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void configureLiaison( File stylesheet )         throws TaskException", "signatureAfterChange": "      private void specifyParams() throws TaskException", "diff": ["-    protected void configureLiaison( File stylesheet )", "-        if( m_stylesheetLoaded )", "-        m_stylesheetLoaded = true;", "-            getLogger().info( \"Loading stylesheet \" + stylesheet );", "-            m_liaison.setStylesheet( stylesheet );", "-            final Iterator params = m_params.iterator();", "-            while( params.hasNext() )", "-            {", "-                final XSLTParam param = (XSLTParam)params.next();", "-", "-                final String expression = param.getExpression();", "-                if( expression == null )", "-                {", "-                    throw new TaskException( \"Expression attribute is missing.\" );", "-                }", "-", "-                final String name = param.getName();", "-                if( name == null )", "-                {", "-                    throw new TaskException( \"Name attribute is missing.\" );", "-                }", "-", "-                m_liaison.addParam( name, expression );", "-            }", "-            getLogger().info( \"Failed to read stylesheet \" + stylesheet );", "+", "+    private void specifyParams() throws TaskException", "+    {", "+        final Iterator params = m_params.iterator();", "+        while( params.hasNext() )", "+        {", "+            final XSLTParam param = (XSLTParam)params.next();", "+", "+            final String expression = param.getExpression();", "+            if( expression == null )", "+            {", "+                throw new TaskException( \"Expression attribute is missing.\" );", "+            }", "+", "+            final String name = param.getName();", "+            if( name == null )", "+            {", "+                throw new TaskException( \"Name attribute is missing.\" );", "+            }", "+", "+            m_transformer.setParameter( name, expression );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484bc5655ddb325409dafeaed037dca1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "e47b4d5aca65c519f01afabb9479b8443abd2ccf", "commitAfterChange": "63a3e9609b4913d540ead325004f919e9a87c4b9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        // load command line with required attributes", "-        if (outputDirectory != null) {", "-            if (!outputDirectory.isDirectory()) {", "-                throw new BuildException(\"Outputdir not a directory.\");", "-            }", "-            cmdl.createArgument().setValue(", "-                \"-OUTPUT_DIRECTORY:\"+outputDirectory.getAbsolutePath());", "-        }", "-", "+        // check the target is a file", "+        // use the directory containing the target as the output directory", "+        if (outputDirectory == null) {", "+            outputDirectory = new File(target.getParent());", "+        }", "+        else if (!outputDirectory.isDirectory()) {", "+            throw new BuildException(\"Outputdir not a directory.\");", "+        }", "+        cmdl.createArgument().setValue(", "+            \"-OUTPUT_DIRECTORY:\"+outputDirectory.getAbsolutePath());", "+", "-            project.log(\"Target is already built - skipping (\" + target + \")\");", "+            log(\"Target is already built - skipping (\" + target + \")\", Project.MSG_VERBOSE);", "-        final Execute process =", "-            new Execute(new LogStreamHandler(this,", "-                                             Project.MSG_INFO,", "-                                             Project.MSG_INFO),", "-                        null);", "-        log(cmdl.toString(), Project.MSG_VERBOSE);", "-        process.setCommandline(cmdl.getCommandline());", "-", "-        try {", "-            if (process.execute() != 0) {", "-                throw new BuildException(\"JavaCC failed.\");", "-            }", "-        }", "-        catch (IOException e) {", "-            throw new BuildException(\"Failed to launch JavaCC: \" + e);", "-        }", "+        Execute.runCommand(this, cmdl.getCommandline());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d17d04b667bc8e8e1d36d14a3b869b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/ANTLR.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        if( target.lastModified() > getGeneratedFile().lastModified() )", "+        if( m_target.lastModified() <= getGeneratedFile().lastModified() )", "-            commandline.addArgument( \"-o\" );", "-            commandline.addArgument( outputDirectory.toString() );", "-            commandline.addArgument( target.toString() );", "-", "-            if( fork )", "-            {", "-                run( commandline );", "-            }", "-            else", "-            {", "-                ExecuteJava exe = new ExecuteJava();", "-                exe.setJavaCommand( commandline.getJavaCommand() );", "-                exe.setClasspath( commandline.getClasspath() );", "-                exe.execute();", "-            }", "+            return;", "+", "+        m_exe.setClassName( \"antlr.Tool\" );", "+", "+        m_exe.getArguments().addArgument( \"-o\" );", "+        m_exe.getArguments().addArgument( m_outputDirectory );", "+        m_exe.getArguments().addArgument( m_target );", "+", "+        m_exe.execute( getContext() );"]}]}