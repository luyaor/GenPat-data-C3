{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04b78cc12aafe3a668c17d373f88d6bb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff7914ab322886cbcd616fb912ffca0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/cli/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "7e6ed5c57f2d59a4ef3089d3f66863441a296e54", "commitAfterChange": "984e12200a21e70c9ec9086f8c69e86aaa0d7de9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void parseArguments(String[] args)          throws ConfigException", "signatureAfterChange": "     private void parseArguments(String[] args)          throws ConfigException", "diff": ["-                    String url = args[i++];", "+                    String url = getOption(args, i++, arg);", "-                } catch (ArrayIndexOutOfBoundsException e) {", "-                    System.err.println(\"You must specify a buildfile when \" +", "-                        \"using the -buildfile argument\");", "-                    return;", "-                    File logFile = new File(args[i++]);", "+                    File logFile = new File(getOption(args, i++, arg));", "-                    return;", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    System.err.println(\"You must specify a log file when \" +", "-                        \"using the -log argument\");", "+            } else if (arg.equals(\"-config\") || arg.equals(\"-c\")) {", "+                configFiles.add(new File(getOption(args, i++, arg)));", "-                try {", "-                    listeners.add(args[i++]);", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    System.err.println(\"You must specify a classname when \" +", "-                        \"using the -listener argument\");", "-                    return;", "-                }", "+                listeners.add(getOption(args, i++, arg));", "-                try {", "-                    loggerClassname = args[i++];", "-                } catch (ArrayIndexOutOfBoundsException aioobe) {", "-                    System.err.println(\"You must specify a classname when \" +", "-                        \"using the -logger argument\");", "-                    return;", "-                }", "+                loggerClassname = getOption(args, i++, arg);", "-                } else if (i < args.length - 1) {", "-                    value = args[++i];", "+                } else {", "+                    value = getOption(args, i++, arg);", "-                File ant1BuildFile =  new File(DEFAULT_ANT1_FILENAME);", "+                File ant1BuildFile = new File(DEFAULT_ANT1_FILENAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03af6d6f55363211305a89f61c96fe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Untar.java", "commitBeforeChange": "559859ef43a7d03b5f17ff1121f9d3e7a5c79656", "commitAfterChange": "1f4fe213e2f3268419fb74d79bfb3ff4a3de77fe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        Method setLastModified = null;", "-        Long[] times = null;", "-        // 1.0 is ruled out anyway, so this ensures 1.2 or above", "-        if (project.getJavaVersion() != Project.JAVA_1_1) {", "-            try {", "-                setLastModified = ", "-                    java.io.File.class.getMethod(\"setLastModified\", ", "-                                                 new Class[] {Long.TYPE});", "-", "-                times = new Long[1];", "-            } catch (Exception e) {", "-                project.log(\"File.setLastModified(long) not found\",", "-                            Project.MSG_VERBOSE);", "-            }", "-        }", "+        Touch touch = new Touch();", "+        touch.setProject(project);", "+        touch.setTarget(target);", "-                throw new BuildException(\"No source specified\");", "+                throw new BuildException(\"No source specified\", location);", "-                throw new BuildException(\"source doesn't exist\");", "+                throw new BuildException(\"source \"+srcF+\" doesn't exist\",", "+                                         location);", "-                throw new BuildException(\"No destination specified\");", "+                throw new BuildException(\"No destination specified\", location);", "-", "-                    project.log(\"expand-file \" + te.getName() , \"untar\", Project.MSG_VERBOSE );", "+                    project.log(\"expand-file \" + te.getName() , \"untar\", ", "+                                Project.MSG_VERBOSE );", "-                    if (setLastModified != null) {", "-                        times[0] = new Long(te.getModTime().getTime());", "-                        try {", "-                            setLastModified.invoke(f, times);", "-                        } catch (Exception e) {", "-                            project.log(\"cannot invoke File.setLastModified(long)\",", "-                                        Project.MSG_VERBOSE);", "-                            setLastModified = null;", "-                        }", "+                    if (project.getJavaVersion() != Project.JAVA_1_1) {", "+                        touch.setFile(f.getAbsolutePath());", "+                        touch.setMillis(te.getModTime().getTime());", "+                        touch.touch();"]}]}