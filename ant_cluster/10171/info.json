{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68673c40de82a0097de37d015c601834", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836e091ad4cc094541bc6696d2e12353", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/regexp/RegexpMatcherTest.java", "commitBeforeChange": "b436d9ec5e1d6025d26b1da85769994e387646d4", "commitAfterChange": "e0c5a1f097d74e51109bc095bb09f946d4ea48e5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testMultiVersusSingleLine() throws IOException", "signatureAfterChange": "       public void testMultiVersusSingleLine() throws IOException", "diff": ["+", "-        StringWriter swr = new StringWriter();", "-        PrintWriter p = new PrintWriter(swr);", "-        p.println(\"Line1\");", "-        p.println(\"starttest Line2\");", "-        p.println(\"Line3 endtest\");", "-        p.println(\"Line4\");", "-        p.close();", "-        String text = swr.toString();", "+        StringBuffer buf = new StringBuffer();", "+        buf.append(\"Line1\").append(UNIX_LINE);", "+        buf.append(\"starttest Line2\").append(UNIX_LINE);", "+        buf.append(\"Line3 endtest\").append(UNIX_LINE);", "+        buf.append(\"Line4\").append(UNIX_LINE);", "+        String text = buf.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ad4b9a16350fd3153be60d1a1b39f1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageWriter.java", "commitBeforeChange": "48a9017850dc1a302304a057ad05640175a2dd15", "commitAfterChange": "626c685b1dd04334dcdebcdaa39f5f438a51be2e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      public void notifySystemProperties()", "signatureAfterChange": "      public void notifySystemProperties()", "diff": ["-            ByteArrayOutputStream out = new ByteArrayOutputStream();", "-            ObjectOutputStream oos = new ObjectOutputStream(out);", "-            oos.writeObject(System.getProperties());", "-            oos.close();", "-            String msg = new String(Base64.encode(out.toByteArray()));", "-            sendMessage(MessageIds.PROPS_START + msg + MessageIds.PROPS_END);", "-        } catch (IOException e){", "+            StringBuffer msg = new StringBuffer(512);", "+            msg.append(MessageIds.PROPS_START);", "+            byte[] data = SocketUtil.serialize(System.getProperties());", "+            msg.append(Base64.encode(data));", "+            msg.append(MessageIds.PROPS_END);", "+            sendMessage(msg.toString());", "+        } catch (Exception e) {"]}]}