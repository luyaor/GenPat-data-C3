{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36d534c1a0dcf33774b7ff9498a085cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "009b3505859a0e143a6bfb455372f93b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/file/Delete.java", "commitBeforeChange": "5205e1bb542f995e3b209edf0cdfbb37374704ca", "commitAfterChange": "59526e7a6762a7fdbb6bf45b815ed1d5a4f4d635", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( usedMatchingTask )", "+        if( m_file == null && m_dir == null && filesets.size() == 0 )", "-            getLogger().info( \"DEPRECATED - Use of the implicit FileSet is deprecated.  Use a nested fileset element instead.\" );", "-        }", "-", "-        if( file == null && dir == null && filesets.size() == 0 )", "-        {", "-            throw new TaskException( \"At least one of the file or dir attributes, or a fileset element, must be set.\" );", "-        }", "-", "-        if( quiet && failonerror )", "-        {", "-            throw new TaskException( \"quiet and failonerror cannot both be set to true\" );", "+            final String message = \"At least one of the file or dir attributes, \" +", "+                \"or a fileset element, must be set.\";", "+            throw new TaskException( message );", "-        if( file != null )", "+        if( null != m_file )", "-            if( file.exists() )", "+            if( m_file.exists() )", "-                if( file.isDirectory() )", "+                if( m_file.isDirectory() )", "-                    getLogger().info( \"Directory \" + file.getAbsolutePath() + \" cannot be removed using the file attribute.  Use dir instead.\" );", "+                    final String message = \"Directory \" + m_file.getAbsolutePath() +", "+                        \" cannot be removed using the file attribute.  Use dir instead.\";", "+                    getLogger().info( message );", "-                    getLogger().info( \"Deleting: \" + file.getAbsolutePath() );", "-", "-                    if( !file.delete() )", "+                    getLogger().info( \"Deleting: \" + m_file.getAbsolutePath() );", "+                    if( !m_file.delete() )", "-                        String message = \"Unable to delete file \" + file.getAbsolutePath();", "-                        if( failonerror )", "-                            throw new TaskException( message );", "-                        else", "-                            log( message,", "-                                 quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                        String message = \"Unable to delete file \" + m_file.getAbsolutePath();", "+                        throw new TaskException( message );", "-                getLogger().debug( \"Could not find file \" + file.getAbsolutePath() + \" to delete.\" );", "+                getLogger().debug( \"Could not find file \" + m_file.getAbsolutePath() + \" to delete.\" );", "-        if( dir != null && dir.exists() && dir.isDirectory() && !usedMatchingTask )", "+        if( m_dir != null && m_dir.exists() && m_dir.isDirectory() )", "-            /*", "-             * If verbosity is MSG_VERBOSE, that mean we are doing regular logging", "-             * (backwards as that sounds).  In that case, we want to print one", "-             * message about deleting the top of the directory tree.  Otherwise,", "-             * the removeDir method will handle messages for _all_ directories.", "-             */", "-            if( verbosity == Project.MSG_VERBOSE )", "-            {", "-                getLogger().info( \"Deleting directory \" + dir.getAbsolutePath() );", "-            }", "-            removeDir( dir );", "+            getLogger().info( \"Deleting directory \" + m_dir.getAbsolutePath() );", "+            removeDir( m_dir );", "-                if( failonerror )", "-                {", "-                    throw be;", "-                }", "-                else", "-                {", "-                    log( be.getMessage(),", "-                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-                }", "-            }", "-        }", "-", "-        // delete the files from the default fileset", "-        if( usedMatchingTask && dir != null )", "-        {", "-            try", "-            {", "-                DirectoryScanner ds = super.getDirectoryScanner( dir );", "-                String[] files = ds.getIncludedFiles();", "-                String[] dirs = ds.getIncludedDirectories();", "-                removeFiles( dir, files, dirs );", "-            }", "-            catch( TaskException be )", "-            {", "-                // directory doesn't exist or is not readable", "-                if( failonerror )", "-                {", "-                    throw be;", "-                }", "-                else", "-                {", "-                    log( be.getMessage(),", "-                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-                }", "+                throw be;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8284abbfd4606294eccb88024e6f041b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/file/Delete.java", "commitBeforeChange": "5205e1bb542f995e3b209edf0cdfbb37374704ca", "commitAfterChange": "59526e7a6762a7fdbb6bf45b815ed1d5a4f4d635", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        if( usedMatchingTask )", "+        if( m_file == null && m_dir == null && filesets.size() == 0 )", "-            getLogger().info( \"DEPRECATED - Use of the implicit FileSet is deprecated.  Use a nested fileset element instead.\" );", "-        }", "-", "-        if( file == null && dir == null && filesets.size() == 0 )", "-        {", "-            throw new TaskException( \"At least one of the file or dir attributes, or a fileset element, must be set.\" );", "-        }", "-", "-        if( quiet && failonerror )", "-        {", "-            throw new TaskException( \"quiet and failonerror cannot both be set to true\" );", "+            final String message = \"At least one of the file or dir attributes, \" +", "+                \"or a fileset element, must be set.\";", "+            throw new TaskException( message );", "-        if( file != null )", "+        if( null != m_file )", "-            if( file.exists() )", "+            if( m_file.exists() )", "-                if( file.isDirectory() )", "+                if( m_file.isDirectory() )", "-                    getLogger().info( \"Directory \" + file.getAbsolutePath() + \" cannot be removed using the file attribute.  Use dir instead.\" );", "+                    final String message = \"Directory \" + m_file.getAbsolutePath() +", "+                        \" cannot be removed using the file attribute.  Use dir instead.\";", "+                    getLogger().info( message );", "-                    getLogger().info( \"Deleting: \" + file.getAbsolutePath() );", "-", "-                    if( !file.delete() )", "+                    getLogger().info( \"Deleting: \" + m_file.getAbsolutePath() );", "+                    if( !m_file.delete() )", "-                        String message = \"Unable to delete file \" + file.getAbsolutePath();", "-                        if( failonerror )", "-                            throw new TaskException( message );", "-                        else", "-                            log( message,", "-                                 quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "+                        String message = \"Unable to delete file \" + m_file.getAbsolutePath();", "+                        throw new TaskException( message );", "-                getLogger().debug( \"Could not find file \" + file.getAbsolutePath() + \" to delete.\" );", "+                getLogger().debug( \"Could not find file \" + m_file.getAbsolutePath() + \" to delete.\" );", "-        if( dir != null && dir.exists() && dir.isDirectory() && !usedMatchingTask )", "+        if( m_dir != null && m_dir.exists() && m_dir.isDirectory() )", "-            /*", "-             * If verbosity is MSG_VERBOSE, that mean we are doing regular logging", "-             * (backwards as that sounds).  In that case, we want to print one", "-             * message about deleting the top of the directory tree.  Otherwise,", "-             * the removeDir method will handle messages for _all_ directories.", "-             */", "-            if( verbosity == Project.MSG_VERBOSE )", "-            {", "-                getLogger().info( \"Deleting directory \" + dir.getAbsolutePath() );", "-            }", "-            removeDir( dir );", "+            getLogger().info( \"Deleting directory \" + m_dir.getAbsolutePath() );", "+            removeDir( m_dir );", "-                if( failonerror )", "-                {", "-                    throw be;", "-                }", "-                else", "-                {", "-                    log( be.getMessage(),", "-                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-                }", "-            }", "-        }", "-", "-        // delete the files from the default fileset", "-        if( usedMatchingTask && dir != null )", "-        {", "-            try", "-            {", "-                DirectoryScanner ds = super.getDirectoryScanner( dir );", "-                String[] files = ds.getIncludedFiles();", "-                String[] dirs = ds.getIncludedDirectories();", "-                removeFiles( dir, files, dirs );", "-            }", "-            catch( TaskException be )", "-            {", "-                // directory doesn't exist or is not readable", "-                if( failonerror )", "-                {", "-                    throw be;", "-                }", "-                else", "-                {", "-                    log( be.getMessage(),", "-                         quiet ? Project.MSG_VERBOSE : Project.MSG_WARN );", "-                }", "+                throw be;"]}]}