{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "415a52593f00c9a6e05d70194184be23", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea5a60010d36256273a55456bdfa583", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/WinNTCommandLauncher.java", "commitBeforeChange": "ace547bc97be558680726ceaa2c4bc36cfd9191a", "commitAfterChange": "cdd8484f399e432198efe17a1ab8db95b26aaeaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "signatureAfterChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "diff": ["-        return Runtime.getRuntime().", "-            exec( newMetaData.getCommand(), newMetaData.getEnvironment() );", "+        final String[] env = ExecUtil.toNativeEnvironment( metaData.getEnvironment() );", "+        return Runtime.getRuntime().exec( newMetaData.getCommand(), env );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1a4ae6a0619057d1730717680dcde2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/exec/launchers/ScriptCommandLauncher.java", "commitBeforeChange": "ace547bc97be558680726ceaa2c4bc36cfd9191a", "commitAfterChange": "cdd8484f399e432198efe17a1ab8db95b26aaeaf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "signatureAfterChange": "     public Process exec( final ExecMetaData metaData )         throws IOException, ExecException", "diff": ["-        return Runtime.getRuntime().", "-            exec( newMetaData.getCommand(), newMetaData.getEnvironment() );", "+        final String[] env = ExecUtil.toNativeEnvironment( metaData.getEnvironment() );", "+        return Runtime.getRuntime().exec( newMetaData.getCommand(), env );"]}]}