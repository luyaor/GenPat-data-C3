{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36b6be5dd80769c5e8d1b93d5da72981", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc621f3ce95eb3c3fc1a1943306b2a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/ProjectTest.java", "commitBeforeChange": "b04c338caa73cc14ad6e8b258280426c3522de38", "commitAfterChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testResolveFile()", "signatureAfterChange": "     public void testResolveFile()", "diff": ["-        /*", "-         * Start with simple absolute file names.", "-         */", "-        assertEquals(File.separator,", "-                     p.resolveFile(\"/\", null).getPath());", "-        assertEquals(File.separator,", "-                     p.resolveFile(\"\\\\\", null).getPath());", "-", "+            assertEqualsIgnoreDriveCase(localize(File.separator),", "+                p.resolveFile(\"/\", null).getPath());", "+            assertEqualsIgnoreDriveCase(localize(File.separator),", "+                p.resolveFile(\"\\\\\", null).getPath());", "+             * Start with simple absolute file names.", "+             */", "+            assertEquals(File.separator,", "+                         p.resolveFile(\"/\", null).getPath());", "+            assertEquals(File.separator,", "+                         p.resolveFile(\"\\\\\", null).getPath());", "+            /*", "-            assertEquals(driveSpec,", "+            String udir = System.getProperty(\"user.dir\") + File.separatorChar;", "+            assertEquals(udir + driveSpec,", "-            assertEquals(driveSpec,", "+            assertEquals(udir + driveSpec,", "-            assertEquals(driveSpecLower,", "+            assertEquals(udir + driveSpecLower,", "-            assertEquals(driveSpecLower,", "+            assertEquals(udir + driveSpecLower,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d548a260f4f6f309e14ca5de25b93bd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/util/FileUtilsTest.java", "commitBeforeChange": "b04c338caa73cc14ad6e8b258280426c3522de38", "commitAfterChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testResolveFile()", "signatureAfterChange": "      public void testResolveFile()", "diff": ["-        /*", "-         * Start with simple absolute file names.", "-         */", "-        assertEquals(File.separator,", "-                     FILE_UTILS.resolveFile(null, \"/\").getPath());", "-        assertEquals(File.separator,", "-                     FILE_UTILS.resolveFile(null, \"\\\\\").getPath());", "-", "-        if (Os.isFamily(\"dos\")) {", "+        if (!(Os.isFamily(\"dos\") || Os.isFamily(\"netware\"))) {", "+            /*", "+             * Start with simple absolute file names.", "+             */", "+            assertEquals(File.separator,", "+                         FILE_UTILS.resolveFile(null, \"/\").getPath());", "+            assertEquals(File.separator,", "+                         FILE_UTILS.resolveFile(null, \"\\\\\").getPath());", "+        } else {", "+            assertEqualsIgnoreDriveCase(localize(File.separator),", "+                FILE_UTILS.resolveFile(null, \"/\").getPath());", "+            assertEqualsIgnoreDriveCase(localize(File.separator),", "+                FILE_UTILS.resolveFile(null, \"\\\\\").getPath());", "-        } else if (Os.isFamily(\"netware\")) {", "+        }", "+        if (Os.isFamily(\"netware\")) {", "-        } else {", "+        } else if (!(Os.isFamily(\"dos\"))) {", "-            assertEquals(driveSpec,", "+            String udir = System.getProperty(\"user.dir\");", "+            assertEquals(udir + File.separator + driveSpec,", "-            assertEquals(driveSpec,", "+            assertEquals(udir + File.separator + driveSpec,", "-            assertEquals(driveSpecLower,", "+            assertEquals(udir + File.separator + driveSpecLower,", "-            assertEquals(driveSpecLower,", "+            assertEquals(udir + File.separator + driveSpecLower,"]}]}