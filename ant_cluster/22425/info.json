{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae39a59dcd94b1d8138e6f982c1cb6ef", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094e4ea433587e36f38861b93bc90d4d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "51d2ae9068cde0e8a071a48a5f1188ebba14587a", "commitAfterChange": "e20a25b59653ec883676504b42c70591040fa2f9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Resource getResource(String name)", "signatureAfterChange": "     public Resource getResource(String name)", "diff": ["-        ", "+", "-        for (int counter = 0; counter < myentries.size(); counter++) {", "-            Resource myresource=(Resource)myentries.elementAt(counter);", "-            if (myresource.getName().equals(name)", "-                || myresource.getName().equals(name + \"/\")) {", "-                return myresource;", "-            }", "+        if (myentries.containsKey(name)) {", "+            return (Resource) myentries.get(name);", "+        } else if (myentries.containsKey(name + \"/\")) {", "+            return (Resource) myentries.get(name + \"/\");", "+        } else {", "+            return new Resource(name);", "-        return new Resource(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0958f9482113f2467f441071b85f6869", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "ec980be7345681968c93f0609e9a3fecb39b9753", "commitAfterChange": "fbb9886634198d8377104bef9ec697fadeb134df", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Resource getResource(String name)", "signatureAfterChange": "     public Resource getResource(String name)", "diff": ["-        } else if (name.equals(\"\")) {", "+        }", "+        if (name.equals(\"\")) {", "-", "-        if (myentries.containsKey(name)) {", "-            return (Resource) myentries.get(name);", "-        } else if (myentries.containsKey(name + \"/\")) {", "-            return (Resource) myentries.get(name + \"/\");", "-        } else {", "-            return new Resource(name);", "+        if (fileEntries.containsKey(name)) {", "+            return (Resource) fileEntries.get(name);", "+        name = trimSeparator(name);", "+", "+        if (dirEntries.containsKey(name)) {", "+            return (Resource) dirEntries.get(name);", "+        }", "+        return new Resource(name);"]}]}