{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b11b9f3642900370a7d8e7600e589513", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8d0ec9af97b3ae5c71ed83a609b1fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/About.java", "commitBeforeChange": "71cd7defed7816e61f8779e3605e5e808933475d", "commitAfterChange": "7fadc50ca4662547852d6554b37490c41e9bf2e9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic About(AppContext context)", "signatureAfterChange": " \tpublic About(AppContext context)", "diff": ["-            buf.append(\"<P>\\n\");", "+            buf.append(\"<br>\\n\");", "-\t\tJLabel contents = new JLabel(message);", "+        JTextPane contents = new JTextPane();", "+        contents.setContentType(\"text/html\");", "+        contents.setText(message);", "+        contents.setEditable(false);", "+        // XXX Still not sure why this is necessary. JTextPane doesn't ", "+        // seem to report a \"true\" preferred size.", "+        contents.setPreferredSize(", "+            new Dimension(contents.getPreferredSize().width, 450));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb023ef258ff5dc8f70fe4a0b9a7671c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/Main.java", "commitBeforeChange": "32dc44001f1d8348ce37d9b551feab8158e7b35f", "commitAfterChange": "ce225a0e46c3cb76bd99b45b24c5da3b7f126ed0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void execute( final String[] args )         throws Exception", "signatureAfterChange": "      protected void execute( final String[] args )         throws Exception", "diff": ["-        setupProjectContext( project, defines );", "-            doBuild( engine, project, targets );", "+            final TaskContext context = new DefaultTaskContext();", "+            setupContext( context, defines );", "+", "+            context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+            context.setProperty( Project.PROJECT_FILE, buildFile );", "+            //context.setProperty( Project.PROJECT, projectName );", "+", "+            doBuild( engine, project, context, targets );"]}]}