{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90e974758ed302035f2daf1343eb183a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c77b3c81db2d5d907bf45886fbf0e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( final Class destination,                            final Object original,                            final Object context )         throws ConverterException", "signatureAfterChange": "     public Object convert( final Class destination,                            final Object original,                            final Object context )         throws ConverterException", "diff": ["-        if( DEBUG )", "-        {", "-            final String message =", "-                REZ.getString( \"converter-lookup.notice\",", "-                               originalClass.getName(),", "-                               destination.getName() );", "-            getLogger().debug( message );", "-        }", "-", "-        //Searching inheritance hierarchy for converter", "-        final String name = getConverterName( originalClass, destination );", "-", "-            //TODO: Start caching converters instead of repeatedly instantiating em.", "-            final Converter converter = (Converter)m_factory.create( name );", "+            // Search inheritance hierarchy for converter", "+            final String name = getConverterName( originalClass, destination );", "-            if( DEBUG )", "+            // Create the converter", "+            Converter converter = (Converter)m_converters.get( name );", "+            if( converter == null )", "-                final String message = REZ.getString( \"found-converter.notice\", converter );", "-                getLogger().debug( message );", "+                converter = (Converter)m_factory.create( name );", "+                m_converters.put( name, converter );", "+            // Convert", "-            else", "-            {", "-                final String message =", "-                    REZ.getString( \"bad-return-type.error\",", "-                                   name,", "-                                   object,", "-                                   destination.getName() );", "-                throw new ConverterException( message );", "-            }", "+", "+            final String message =", "+                REZ.getString( \"bad-return-type.error\",", "+                               object.getClass().getName(),", "+                               destination.getName() );", "+            throw new ConverterException( message );", "-        catch( final TypeException te )", "+        catch( final Exception e )", "-            final String message = REZ.getString( \"bad-typemanager.error\" );", "-            throw new ConverterException( message, te );", "+            final String message = REZ.getString( \"convert.error\",", "+                                                  originalClass.getName(),", "+                                                  destination.getName() );", "+            throw new ConverterException( message, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9eaddab83f9bbc1bae17cc44b868a76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void setContent( final ObjectConfigurer configurer,                              final Object object,                              final String content,                              final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void setContent( final ObjectConfigurer configurer,                              final Object object,                              final String content,                              final Context context )         throws ConfigurationException", "diff": ["-     */", "-    private void setContent( final ObjectConfigurer configurer,", "-                             final Object object,", "-                             final String content,", "-                             final Context context )", "-        throws ConfigurationException", "-    {", "-        if( DEBUG )", "-        {", "-            final String message =", "-                REZ.getString( \"configure-content.notice\", content );", "-            getLogger().debug( message );", "-        }", "-", "-        // Set the content", "-        final AttributeSetter setter = configurer.getContentSetter();", "-        if( null == setter )", "-        {", "-            final String message = REZ.getString( \"content-not-supported.error\" );", "-            throw new ConfigurationException( message );", "-        }", "-        try", "-        {", "-            setValue( setter, object, content, context );", "-        }", "-        catch( final Exception e )", "-        {", "-            final String message = REZ.getString( \"bad-set-content.error\" );", "-            throw new ConfigurationException( message, e );", "-        }", "-    }", "+     */", "+    private void setContent( final ObjectConfigurer configurer,", "+                             final Object object,", "+                             final String content,", "+                             final Context context )", "+        throws ConfigurationException", "+    {", "+        if( DEBUG )", "+        {", "+            final String message =", "+                REZ.getString( \"configure-content.notice\", content );", "+            getLogger().debug( message );", "+        }", "+", "+        // Set the content", "+        final PropertyConfigurer contentConfigurer = configurer.getContentConfigurer();", "+        if( null == contentConfigurer )", "+        {", "+            final String message = REZ.getString( \"content-not-supported.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "+        try", "+        {", "+            setValue( contentConfigurer, object, content, context );", "+        }", "+        catch( final Exception e )", "+        {", "+            final String message = REZ.getString( \"bad-set-content.error\" );", "+            throw new ConfigurationException( message, e );", "+        }", "+    }"]}]}