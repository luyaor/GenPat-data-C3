{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cec924af87c9bcce357502cb43432ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c5b89eae16769a1da47fc6405ff3916", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/PathElement.java", "commitBeforeChange": "7b52927716df4e958bbe6530e064678bdde17e24", "commitAfterChange": "29cd889775d70bb1dad99b6bbfb08e826feda1f4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected String[] getParts( final File baseDirectory, final Logger logger )", "signatureAfterChange": "      protected String[] getParts( final File baseDirectory )             throws TaskException", "diff": ["-    protected String[] getParts( final File baseDirectory, final Logger logger )", "+    protected String[] getParts( final File baseDirectory )", "+            throws TaskException", "-        return FileUtils.translatePath( baseDirectory, m_path, logger );", "+        if ( m_location != null )", "+        {", "+            return new String[] { m_location };", "+        }", "+        return FileUtils.translatePath( baseDirectory, m_path );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade7890d626e3becc2cce68956e8b139", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/PathElement.java", "commitBeforeChange": "7b52927716df4e958bbe6530e064678bdde17e24", "commitAfterChange": "29cd889775d70bb1dad99b6bbfb08e826feda1f4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected String[] getParts( final File baseDirectory, final Logger logger )", "signatureAfterChange": "      protected String[] getParts( final File baseDirectory )             throws TaskException", "diff": ["-    protected String[] getParts( final File baseDirectory, final Logger logger )", "+    protected String[] getParts( final File baseDirectory )", "+            throws TaskException", "-        return FileUtils.translatePath( baseDirectory, m_path, logger );", "+        if ( m_location != null )", "+        {", "+            return new String[] { m_location };", "+        }", "+        return FileUtils.translatePath( baseDirectory, m_path );"]}]}