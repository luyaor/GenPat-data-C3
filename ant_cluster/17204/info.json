{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d68c4c04f6c42e0d1ef2084712047a3c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d82be8f783f9fcd857b8464dd47eba", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/nativelib/impl/DefaultExecManager.java", "commitBeforeChange": "7b38537d182138a3e5c9f6d14fa4a5acab47d42a", "commitAfterChange": "3c2b554fbcbb85616dbb552f1ed54072ecf23cc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int execute( final ExecMetaData execMetaData,                         final ExecOutputHandler handler,                         long timeout )         throws IOException, ExecException", "signatureAfterChange": "     public int execute( final ExecMetaData execMetaData,                         final ExecOutputHandler handler,                         long timeout )         throws IOException, ExecException", "diff": ["-        return execute( execMetaData, null, output, error, timeout );", "+        try", "+        {", "+            return execute( execMetaData, null, output, error, timeout );", "+        }", "+        finally", "+        {", "+            IOUtil.shutdownStream( output );", "+            IOUtil.shutdownStream( error );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc81482c2b38ab2f3bb7c53806d6044b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "c8ae289ddd72e9f5858612fba38393a3c8698c27", "commitAfterChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void executeIncrementalBuild( final Embeddor embeddor,                                           final Project project,                                           final ProjectListener listener )         throws Exception", "signatureAfterChange": "      private void executeIncrementalBuild( final Embeddor embeddor,                                           final Project project,                                           final ProjectListener listener )         throws Exception", "diff": ["-            executeBuild( embeddor, project, listener );", "+            try", "+            {", "+                executeBuild( embeddor, project, listener );", "+            }", "+            catch( final TaskException te )", "+            {", "+                reportError( te );", "+            }", "+        }", "+    }"]}]}