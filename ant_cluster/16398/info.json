{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79bf24082a8494d908bae50cbd6d7323", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e29033e179b34c26f26d47a237fb5a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "36b62a7ed1b8ae93aad5e2fc841e67efc7cef749", "commitAfterChange": "a1608d62d4c274d15e2ad27ddfc2c96a1762dcb8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "signatureAfterChange": "     private void setLiaisonDynamicFileParameters(         XSLTLiaison liaison,         File inFile     ) throws Exception", "diff": ["-        File file = new File(fileName);", "-", "+        ", "+        String name;", "+        String dir;", "+        int lastDirSep = fileName.lastIndexOf(\"/\");", "+        if (lastDirSep > -1) {", "+            name = fileName.substring(lastDirSep + 1);", "+            dir  = fileName.substring(0, lastDirSep);", "+        } else {", "+            name = fileName;", "+            dir  = \".\";      // so a dir+\"/\"+name would not result in an absolute path", "+        }", "+        ", "-            liaison.addParam(fileNameParameter, inFile.getName());", "+            liaison.addParam(fileNameParameter, name);", "-            liaison.addParam(fileDirParameter, (file.getParent()!=null) ? file.getParent() : \"\" );", "+            liaison.addParam(fileDirParameter, dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99336c1b607482079dcbf604fd1fd63c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "b74b9067510ce1fd1ce68b465f74c38c81fb7d01", "commitAfterChange": "af0505dd8ad69538cef3c64f9674c27c1d1775fb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Manifest(InputStream is) throws IOException", "signatureAfterChange": "     public Manifest(InputStream is) throws IOException", "diff": ["-        Attribute version = new Attribute(line);", "-        if (!version.getName().equalsIgnoreCase(ATTR_MANIFEST_VERSION)) {", "-            throw new IOException(\"Manifest must start with \\\"\" + ATTR_MANIFEST_VERSION + ", "-                                  \"\\\" and not \\\"\" + line + \"\\\"\");", "+        String nextSectionName = mainSection.read(reader);", "+        String readManifestVersion = mainSection.getAttributeValue(ATTR_MANIFEST_VERSION);", "+        if (readManifestVersion != null) {", "+            manifestVersion = readManifestVersion;", "+            mainSection.removeAttribute(ATTR_MANIFEST_VERSION);", "-        manifestVersion = version.getValue();", "-        mainSection.read(reader);", "-        ", "+", "-            Attribute sectionName = new Attribute(line);", "-            if (!sectionName.getName().equalsIgnoreCase(ATTR_NAME)) {", "-                throw new IOException(\"Manifest sections should start with a \\\"\" + ATTR_NAME + ", "-                                      \"\\\" attribute and not \\\"\" + sectionName.getName() + \"\\\"\");", "-            }", "-                ", "+            ", "-            section.setName(sectionName.getValue());", "-            section.read(reader);", "+            if (nextSectionName == null) {", "+                Attribute sectionName = new Attribute(line);", "+                if (!sectionName.getName().equalsIgnoreCase(ATTR_NAME)) {", "+                    throw new IOException(\"Manifest sections should start with a \\\"\" + ATTR_NAME + ", "+                                          \"\\\" attribute and not \\\"\" + sectionName.getName() + \"\\\"\");", "+                }", "+                nextSectionName = sectionName.getValue();", "+            }", "+            else {", "+                // we have already started reading this section", "+                // this line is the first attribute. set it and then let the normal", "+                // read handle the rest", "+                Attribute firstAttribute = new Attribute(line);", "+                section.addAttribute(firstAttribute);", "+            }", "+                    ", "+            section.setName(nextSectionName);", "+            nextSectionName = section.read(reader);"]}]}