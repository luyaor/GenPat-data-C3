{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b429590554b4edef84c2fdb40296805e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955e0347d1ca6165c5c9d5e0b790bfe1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "4c83562c6c9f681cdcd17c86f5e3c68c910dd5f8", "commitAfterChange": "33f3479056780007a3b474d8633e36d38552e875", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private static String resolveFile(Project project, String relativeName)", "signatureAfterChange": "     private static File resolveFile(Project project, String relativeName)", "diff": ["-    private static String resolveFile(Project project, String relativeName) {", "-        return (project == null) ? relativeName", "-            : project.resolveFile(relativeName).getAbsolutePath();", "+    private static File resolveFile(Project project, String relativeName) {", "+        return FileUtils.getFileUtils().resolveFile(", "+            (project == null) ? null : project.getBaseDir(), relativeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4cf247c4350904fb822e6dd10d7c71", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/EchoPropertiesTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": "       protected File createRelativeFile( String filename )", "signatureAfterChange": "       protected File createRelativeFile(String filename)", "diff": ["-    protected File createRelativeFile( String filename ) {", "-        if (filename.equals( \".\" )) {", "-            return getProjectDir();", "+    protected File createRelativeFile(String filename) {", "+        if (filename.equals(\".\")) {", "+            return buildRule.getProject().getBaseDir();", "-        return new File( getProjectDir(), filename );", "+        return new File(buildRule.getProject().getBaseDir(), filename);"]}]}