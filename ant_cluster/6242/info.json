{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c1b03d50c47e10608fef0b96d9d24b6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a93abeabe7a6d0c63423c55370459a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "5e4408208a34ba760533b1c6738ccb71cdfa03ba", "commitAfterChange": "278074659bf5724cde17788d210699876f7ffa4e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private UnknownElement copy(UnknownElement ue)", "signatureAfterChange": "      private UnknownElement copy(UnknownElement ue)", "diff": ["+            } else if (templateElement.isImplicit()) {", "+                if (unknownElements.size() == 0 && !templateElement.isOptional()) {", "+                    throw new BuildException(", "+                        \"Missing nested elements for implicit element \"", "+                        + templateElement.getName());", "+                }", "+                for (Iterator i = unknownElements.iterator();", "+                     i.hasNext();) {", "+                    UnknownElement child = (UnknownElement) i.next();", "+                    rc.addChild(child.getWrapper());", "+                    ret.addChild(child);", "+                }", "-                Element element = (Element) presentElements.get(tag);", "-                if (element == null) {", "+                List list = (List) presentElements.get(tag);", "+                if (list == null) {", "-                for (Iterator i = element.getUnknownElements().iterator();", "+                for (Iterator i = list.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e72fc63a92ad0d9ad3f412b5dcdf32a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "1fe0291e099e9814a69ed27097477d455e1ec6fe", "commitAfterChange": "e56743fb3b214c9010f16be65d0bdc0de77fc246", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private UnknownElement copy(UnknownElement ue)", "signatureAfterChange": "      private UnknownElement copy(UnknownElement ue)", "diff": ["-                List list = (List) presentElements.get(tag);", "-                if (list == null) {", "+                UnknownElement presentElement =", "+                    (UnknownElement) presentElements.get(tag);", "+                if (presentElement == null) {", "-                for (Iterator i = list.iterator();", "-                     i.hasNext();) {", "-                    UnknownElement child = copy((UnknownElement) i.next());", "-                    rc.addChild(child.getWrapper());", "-                    ret.addChild(child);", "+                String presentText =", "+                    presentElement.getWrapper().getText().toString();", "+                if (!\"\".equals(presentText)) {", "+                    rc.addText(macroSubs(presentText, localAttributes));", "+                }", "+                List list = presentElement.getChildren();", "+                if (list != null) {", "+                    for (Iterator i = list.iterator();", "+                         i.hasNext();) {", "+                        UnknownElement child = copy((UnknownElement) i.next());", "+                        rc.addChild(child.getWrapper());", "+                        ret.addChild(child);", "+                    }"]}]}