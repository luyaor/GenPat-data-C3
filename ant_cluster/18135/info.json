{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d7445a9d0fce92d4cfb6e90917ed9ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fe35d8218e13865908732d84b7f3beb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        getTypeManager().registerType( MyRole1.class, \"my-type1\", factory );", "-        getTypeManager().registerType( MyRole1.class, \"my-type2\", factory );", "+        getTypeManager().registerType( DataType.class, \"my-type1\", factory );", "+        getTypeManager().registerType( DataType.class, \"my-type2\", factory );", "+        assertEquals( expected, test );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d6b871b16ac18d3c11e271aaf5350b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void testTypedAdder()         throws Exception", "signatureAfterChange": "     public void testTypedAdder()         throws Exception", "diff": ["-        getTypeManager().registerType( MyRole1.class, \"my-type1\", factory );", "-        getTypeManager().registerType( MyRole1.class, \"my-type2\", factory );", "+        getTypeManager().registerType( DataType.class, \"my-type1\", factory );", "+        getTypeManager().registerType( DataType.class, \"my-type2\", factory );", "+        assertEquals( expected, test );", "+    }"]}]}