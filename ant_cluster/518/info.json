{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8865ea509549d52873d3f217fa747af7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aafd57c9fa64054c2e981b7701ca238", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSLABEL.java", "commitBeforeChange": "b5de6e5a6a5d41ba7e3d4aae0109c6838a59cbb2", "commitAfterChange": "b50fd138f8b9c08dc04ff70319e953d2450780a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     Commandline buildCmdLine()", "diff": ["-    public void execute() throws BuildException {", "+    Commandline buildCmdLine() {", "-        int result = 0;", "-            String msg = \"vsspath attribute must be set!\";", "-            throw new BuildException(msg, getLocation());", "+            throw new BuildException(\"vsspath attribute must be set!\", getLocation());", "-        if (getLabel() == null) {", "+        if (getLabel() == \"\") {", "-        // now look for illegal combinations of things ...", "-", "-        // ss Label VSS items [-C]      [-H] [-I-] [-Llabel] [-N] [-O]      [-V]      [-Y] [-?]", "+        // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?]", "-", "-        commandLine.createArgument().setValue(\"-C\" + getComment());", "-", "+        commandLine.createArgument().setValue(getComment());", "-        getAutoresponse(commandLine);", "-", "-        // -L", "-        // Specify the new label on the command line (instead of being prompted)", "-        getLabelCommand(commandLine);", "-", "-        // -V", "-        // Label an existing file or project version", "-        getVersionCommand(commandLine);", "-", "+        commandLine.createArgument().setValue(getAutoresponse());", "+        // -L Specify the new label on the command line (instead of being prompted)", "+        commandLine.createArgument().setValue(getLabel());", "+        // -V Label an existing file or project version", "+        commandLine.createArgument().setValue(getVersion());", "-        getLoginCommand(commandLine);", "+        commandLine.createArgument().setValue(getLogin());", "-        result = run(commandLine);", "-        if (result != 0) {", "-            String msg = \"Failed executing: \" + commandLine.toString();", "-            throw new BuildException(msg, getLocation());", "-        }", "-", "+        return commandLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7f7bcea1079582150c2f0e3d92fc01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSCHECKIN.java", "commitBeforeChange": "b5de6e5a6a5d41ba7e3d4aae0109c6838a59cbb2", "commitAfterChange": "b50fd138f8b9c08dc04ff70319e953d2450780a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-    public void execute() throws BuildException {", "+    protected Commandline buildCmdLine() {", "-        int result = 0;", "-", "-        // now look for illegal combinations of things ...", "-        getLocalpathCommand(commandLine);", "+        commandLine.createArgument().setValue(getLocalpath());", "-        getAutoresponse(commandLine);", "+        commandLine.createArgument().setValue(getAutoresponse());", "-        getRecursiveCommand(commandLine);", "+        commandLine.createArgument().setValue(getRecursive());", "-        getWritableCommand(commandLine);", "+        commandLine.createArgument().setValue(getWritable());", "-        getLoginCommand(commandLine);", "+        commandLine.createArgument().setValue(getLogin());", "-        commandLine.createArgument().setValue(\"-C\" + getComment());", "+        commandLine.createArgument().setValue(getComment());", "-        result = run(commandLine);", "-        if (result != 0) {", "-            String msg = \"Failed executing: \" + commandLine.toString();", "-            throw new BuildException(msg, getLocation());", "-        }", "+        return commandLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47f63e1202ffaf44cd510299e3d66c7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/vss/MSVSSADD.java", "commitBeforeChange": "b5de6e5a6a5d41ba7e3d4aae0109c6838a59cbb2", "commitAfterChange": "b50fd138f8b9c08dc04ff70319e953d2450780a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     protected Commandline buildCmdLine()", "diff": ["-    public void execute() throws BuildException {", "+    protected Commandline buildCmdLine() {", "-        int result = 0;", "-         // first off, make sure that we've got a command and a localPath ...", "-        if (getLocalPath() == null) {", "+        // first off, make sure that we've got a command and a localPath ...", "+        if (getLocalpath() == null) {", "-", "-        // now look for illegal combinations of things ...", "-        commandLine.createArgument().setValue(getLocalPath());        ", "+        commandLine.createArgument().setValue(getLocalpath());", "-        getAutoresponse(commandLine);", "+        commandLine.createArgument().setValue(getAutoresponse());", "-        getRecursiveCommand(commandLine);", "+        commandLine.createArgument().setValue(getRecursive());", "-        getWritableCommand(commandLine);", "+        commandLine.createArgument().setValue(getWritable());", "-        getLoginCommand(commandLine);", "+        commandLine.createArgument().setValue(getLogin());", "-        commandLine.createArgument().setValue(\"-C\" + getComment());", "+        commandLine.createArgument().setValue(getComment());", "-        result = run(commandLine);", "-        if (result != 0) {", "-            String msg = \"Failed executing: \" + commandLine.toString();", "-            throw new BuildException(msg, getLocation());", "-        }", "+        return commandLine;"]}]}