{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d68408196b49a6ef42c91696be4ba0b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18b78c2dad631aab1d5c717e1ea1bf64", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/FilenameSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testValidate()", "signatureAfterChange": "     @Test     public void testValidate()", "diff": ["+    @Test", "-        FilenameSelector s = (FilenameSelector)getInstance();", "+        FilenameSelector s = new FilenameSelector();", "-            s.isSelected(basedir,filenames[0],files[0]);", "+            s.isSelected(selectorRule.getProject().getBaseDir(),selectorRule.getFilenames()[0],selectorRule.getFiles()[0]);", "-        s = (FilenameSelector)getInstance();", "+        s = new FilenameSelector();", "-            s.isSelected(basedir,filenames[0],files[0]);", "+            s.isSelected(selectorRule.getProject().getBaseDir(),selectorRule.getFilenames()[0],selectorRule.getFiles()[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c29e4ebe9478ec8b1f9a67f4b5e1457e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ContainsSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testValidate()", "signatureAfterChange": "     @Test     public void testValidate()", "diff": ["+    @Test", "-        ContainsSelector s = (ContainsSelector)getInstance();", "+        ContainsSelector s = new ContainsSelector();", "-            s.isSelected(basedir,filenames[0],files[0]);", "+            s.isSelected(selectorRule.getProject().getBaseDir(),selectorRule.getFilenames()[0],selectorRule.getFiles()[0]);", "-        s = (ContainsSelector)getInstance();", "+        s = new ContainsSelector();", "-            s.isSelected(basedir,filenames[0],files[0]);", "+            s.isSelected(selectorRule.getProject().getBaseDir(),selectorRule.getFilenames()[0],selectorRule.getFiles()[0]);"]}]}