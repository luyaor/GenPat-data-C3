{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7b979fab773bb497e4993cec1098d47", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ffa3152dfb59b38e861bb3be5ff992", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "commitAfterChange": "f3939727d9e11188d266beed7e9dfa8e2fd0bc9a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void run(String[] args) throws MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws MalformedURLException", "diff": ["-        URL launchJarURL = Locator.getClassLocationURL(getClass());", "-        File jarDir = new File(launchJarURL.getFile()).getParentFile();", "+        File sourceJar = Locator.getClassSource(getClass());", "+        File jarDir = sourceJar.getParentFile();", "-            URL antHomeURL = new URL(launchJarURL, \"..\");", "-            antHome = new File(antHomeURL.getFile());", "+            antHome = jarDir.getParentFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2276a50be60306dbb5a4bfccd3f383b4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "1816e79c3a3ae236a5b59e0127997a18ffce5fd5", "commitAfterChange": "79b7beb40009ddef7ef755f2b3e6022a4bb436c5", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "diff": ["-        File toTest = new File(((parent == null)", "-            ? null : parent.getCanonicalPath()), name);", "+        if (parent == null) {", "+            File f = new File(name);", "+            parent = f.getParentFile();", "+            name = f.getName();", "+        }", "+        File toTest = new File(parent.getCanonicalPath(), name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "385bc1db614f9b105498a1539ec1e2dd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/dotnet/WsdlToDotnet.java", "commitBeforeChange": "74c147ed2ae75824b2c163c41631945f414341bd", "commitAfterChange": "a349a7f732f4878c78d104d07adc485049ced450", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute()              throws BuildException", "signatureAfterChange": "     public void execute()              throws BuildException", "diff": ["-        path=wsdl.evaluate();", "-        if ( !compiler.supportsAbsoluteFiles() ) {", "+        path = wsdl.evaluate();", "+        if (!compiler.supportsAbsoluteFiles() && wsdl.getFile() != null) {", "-            path = srcFileName;", "+            File f = wsdl.getFile();", "+            command.setDirectory(f.getParentFile());", "+            path = f.getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a35815e2a02254fbd5bb78ffdfb9d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "f1d71eaeb8e405cb6da3dad2fe9b8c84a7e9394f", "commitAfterChange": "9f30d0550989766a9ad2032363a5dfdb49ee6932", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "diff": ["+        SymbolicLinkUtils u = SymbolicLinkUtils.getSymbolicLinkUtils();", "-            File f = new File(name);", "-            parent = f.getParentFile();", "-            name = f.getName();", "+            return u.isSymbolicLink(name);", "-        File toTest = new File(parent.getCanonicalPath(), name);", "-        return !toTest.getAbsolutePath().equals(toTest.getCanonicalPath());", "-    }", "+        return u.isSymbolicLink(parent, name);"]}]}