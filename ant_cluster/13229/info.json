{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4c6ce073f6812e2151ecbb8b07bcadb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebb86b19fa146a2ea1549c318deb0ca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "5f0f83111959eb89b47e4378393d6e0b072dc778", "commitAfterChange": "c28ec7da7aefa85051bcb81e0eea06c74e17342a", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        BufferedWriter srcListWriter = null;", "-", "+        FileWriter wr = null;", "+            BufferedWriter srcListWriter = null;", "-                srcListWriter = new BufferedWriter(", "-                    new FileWriter(tmpList.getAbsolutePath(),", "-                                   true));", "+                wr = new FileWriter(tmpList.getAbsolutePath(), true);", "+                srcListWriter = new BufferedWriter(wr);", "+", "+            if (useExternalFile) {", "+                srcListWriter.flush();", "+            }", "-            FileUtils.close(srcListWriter);", "+            FileUtils.close(wr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b50a78702e5fb0f7e0641f1be91f3f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java", "commitBeforeChange": "6d79f276e80f9850f7ee19119341d4ec386b824c", "commitAfterChange": "52504ea28080af9de93e757d2adf8a5603785ed8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private Properties loadLinks(Vector v)", "signatureAfterChange": "     private Properties loadLinks(Vector v)", "diff": ["+                InputStream is = null;", "-                    lnks.load(new BufferedInputStream(new FileInputStream(inc)));", "+                    is = new BufferedInputStream(new FileInputStream(inc));", "+                    lnks.load(is);", "+                } finally {", "+                    FileUtils.close(is);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8382cf06cecb642295eab9055aff7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ReplaceTokens.java", "commitBeforeChange": "7b2bcde38e355757d03767f0616e144ab0140fd5", "commitAfterChange": "0c7b42e0748a73a5f05bd7c914ca61b277e3f268", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private Properties getPropertiesFromFile (String fileName)", "signatureAfterChange": "     private Properties getPropertiesFromFile (String fileName)", "diff": ["+        FileInputStream in = null;", "-            props.load(new FileInputStream(fileName));", "+            in = new FileInputStream(fileName);", "+            props.load(in);", "+        } finally {", "+            FileUtils.close(in);", "+        "]}]}