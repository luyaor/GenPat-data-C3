{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59126a53324e35376ac652ad2a93c038", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0b0d7b7a7ee62ca4b986b690d77e84", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "7f44f839eb6961e0ce01e6813d36f674804df1fb", "commitAfterChange": "29866fce1d825832107184311f0a764b10efea07", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 15, "signatureBeforeChange": "         private Xest(ResourceCollection rc, ResourceComparator c)", "signatureAfterChange": "      private Resource getXest(ResourceCollection rc, ResourceComparator c)", "diff": ["-    private static class Xest extends Sort {", "-        private Xest(ResourceCollection rc, ResourceComparator c) {", "-            super.add(c);", "-            super.add(rc);", "-        }", "+", "+    private Resource getXest(ResourceCollection rc, ResourceComparator c) {", "+        Iterator i = rc.iterator();", "+        if (!i.hasNext()) {", "+            return null;", "+", "+        }", "+        Resource xest = (Resource) i.next();", "+        while (i.hasNext()) {", "+            Resource next = (Resource) i.next();", "+            if (c.compare(xest, next) < 0) {", "+                xest = next;", "+            }", "+        }", "+        return xest;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c75d7c4dce5f7cf696b3392f31b8be6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Union.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private static ResourceCollection nextRC(Iterator i)", "signatureAfterChange": "     protected Set<Resource> getAllResources()", "diff": ["-    private static ResourceCollection nextRC(Iterator i) {", "-        return (ResourceCollection) i.next();", "+     */", "+    protected Set<Resource> getAllResources() {", "+        final List<ResourceCollection> resourceCollections = getResourceCollections();", "+        if (resourceCollections.isEmpty()) {", "+            return Collections.emptySet();", "+        }", "+        final LinkedHashSet<Resource> result = new LinkedHashSet<Resource>(", "+                resourceCollections.size() * 2);", "+        for (ResourceCollection resourceCollection : resourceCollections) {", "+            for (Resource r : resourceCollection) {", "+                result.add(r);", "+            }", "+        }", "+        return result;", "+    }"]}]}