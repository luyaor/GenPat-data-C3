{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab67a2518de9b3a60acf7e9ef0b798cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d4b3d87b2417db58fa345d32a141c91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "ab7d2dee491d2ef095f51c2b528ac5fdcf5b151c", "commitAfterChange": "5205e1bb542f995e3b209edf0cdfbb37374704ca", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            LogStreamHandler handler = new CoverageStreamHandler( this );", "+                    final LogOutputStream output = new LogOutputStream( getLogger(), false );", "+        final LogOutputStream error = new LogOutputStream( getLogger(), true );", "+        final LogStreamHandler handler = new CoverageStreamHandler( output, error );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f729bc9d1a7e2ab9a8dca149515442da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java", "commitBeforeChange": "ab7d2dee491d2ef095f51c2b528ac5fdcf5b151c", "commitAfterChange": "5205e1bb542f995e3b209edf0cdfbb37374704ca", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-            LogStreamHandler handler = new CoverageStreamHandler( this );", "+                    final LogOutputStream output = new LogOutputStream( getLogger(), false );", "+        final LogOutputStream error = new LogOutputStream( getLogger(), true );", "+        final LogStreamHandler handler = new CoverageStreamHandler( output, error );"]}]}