{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ac54efa4e84780336ee8bf58244cb20", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6c63696cab7cd031c3bafc626adae33", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "3e2cbab6ba443daf0abf6e02535fb6cc1df72e04", "commitAfterChange": "b33d33d754378862953b0243500d94eaaf983923", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     private Certificate[] getCertificates(File container, String entry)         throws IOException", "signatureAfterChange": "     private Certificate[] getCertificates(File container, String entry)         throws IOException", "diff": ["-        JarFile jarFile = null;", "-        InputStream is = null;", "-        try {", "-            jarFile = new JarFile(container);", "-            JarEntry ent = jarFile.getJarEntry(entry);", "-            if (ent != null) {", "-                // must read the input in order to obtain certificates", "-                is = new BufferedInputStream(jarFile.getInputStream(ent));", "-                byte[] b = new byte[BUFFER_SIZE];", "-                while (is.read(b, 0, BUFFER_SIZE) >= 0);", "-            }", "-            return ent == null ? null : ent.getCertificates();", "-        } finally {", "-            FileUtils.close(is);", "-            if (jarFile != null) {", "-                jarFile.close();", "-            }", "+        JarFile jarFile = (JarFile) jarFiles.get(container);", "+        if (jarFile == null) {", "+            return null;", "+        JarEntry ent = jarFile.getJarEntry(entry);", "+        return ent == null ? null : ent.getCertificates();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f93e05babac5773bd1f141504d124833", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "3e2cbab6ba443daf0abf6e02535fb6cc1df72e04", "commitAfterChange": "b33d33d754378862953b0243500d94eaaf983923", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     private InputStream getResourceStream(File file, String resourceName)", "signatureAfterChange": "     private InputStream getResourceStream(File file, String resourceName)", "diff": ["-            ZipFile zipFile = (ZipFile) zipFiles.get(file);", "-            if (zipFile == null && file.isDirectory()) {", "+            JarFile jarFile = (JarFile) jarFiles.get(file);", "+            if (jarFile == null && file.isDirectory()) {", "-                if (zipFile == null) {", "+                if (jarFile == null) {", "-                        zipFile = new ZipFile(file);", "-                        zipFiles.put(file, zipFile);", "+                        jarFile = new JarFile(file);", "+                        jarFiles.put(file, jarFile);", "-                    zipFile = (ZipFile) zipFiles.get(file);", "+                    jarFile = (JarFile) jarFiles.get(file);", "-                ZipEntry entry = zipFile.getEntry(resourceName);", "+                JarEntry entry = jarFile.getJarEntry(resourceName);", "-                    return zipFile.getInputStream(entry);", "+                    return jarFile.getInputStream(entry);"]}]}