{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a885c38e26c357bdbab68f14dd940a0", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f520d5be22f0231050a30dabaf4871", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private boolean checkFile()         throws TaskException", "signatureAfterChange": "      private boolean checkFile()         throws TaskException", "diff": ["-        if( filepath == null )", "+        if( m_filepath == null )", "-            return checkFile( resolveFile( file ), file );", "+            return checkFile( resolveFile( m_file ), m_file );", "-            String[] paths = filepath.list();", "+            String[] paths = m_filepath.list();", "-                if( path.exists() && file.equals( paths[ i ] ) )", "+                if( path.exists() && m_file.equals( paths[ i ] ) )", "-                    if( type == null )", "+                    if( m_type == null )", "-                    else if( type.isDir()", "+                    else if( m_type.isDir()", "-                    else if( type.isFile()", "+                    else if( m_type.isFile()", "-                    && file.equals( parent.getAbsolutePath() ) )", "+                    && m_file.equals( parent.getAbsolutePath() ) )", "-                    if( type == null )", "+                    if( m_type == null )", "-                    else if( type.isDir() )", "+                    else if( m_type.isDir() )", "-                    if( checkFile( new File( path, file ),", "-                                   file + \" in \" + path ) )", "+                    if( checkFile( new File( path, m_file ),", "+                                   m_file + \" in \" + path ) )", "-                    if( checkFile( new File( parent, file ),", "-                                   file + \" in \" + parent ) )", "+                    if( checkFile( new File( parent, m_file ),", "+                                   m_file + \" in \" + parent ) )", "-                        if( checkFile( new File( grandParent, file ),", "-                                       file + \" in \" + grandParent ) )", "+                        if( checkFile( new File( grandParent, m_file ),", "+                                       m_file + \" in \" + grandParent ) )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb7ebf0749956a947a3352f225fea62a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private boolean checkFile()         throws TaskException", "signatureAfterChange": "      private boolean checkFile()         throws TaskException", "diff": ["-        if( filepath == null )", "+        if( m_filepath == null )", "-            return checkFile( resolveFile( file ), file );", "+            return checkFile( resolveFile( m_file ), m_file );", "-            String[] paths = filepath.list();", "+            String[] paths = m_filepath.list();", "-                if( path.exists() && file.equals( paths[ i ] ) )", "+                if( path.exists() && m_file.equals( paths[ i ] ) )", "-                    if( type == null )", "+                    if( m_type == null )", "-                    else if( type.isDir()", "+                    else if( m_type.isDir()", "-                    else if( type.isFile()", "+                    else if( m_type.isFile()", "-                    && file.equals( parent.getAbsolutePath() ) )", "+                    && m_file.equals( parent.getAbsolutePath() ) )", "-                    if( type == null )", "+                    if( m_type == null )", "-                    else if( type.isDir() )", "+                    else if( m_type.isDir() )", "-                    if( checkFile( new File( path, file ),", "-                                   file + \" in \" + path ) )", "+                    if( checkFile( new File( path, m_file ),", "+                                   m_file + \" in \" + path ) )", "-                    if( checkFile( new File( parent, file ),", "-                                   file + \" in \" + parent ) )", "+                    if( checkFile( new File( parent, m_file ),", "+                                   m_file + \" in \" + parent ) )", "-                        if( checkFile( new File( grandParent, file ),", "-                                       file + \" in \" + grandParent ) )", "+                        if( checkFile( new File( grandParent, m_file ),", "+                                       m_file + \" in \" + grandParent ) )"]}]}