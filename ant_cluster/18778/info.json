{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13779d0799972cc5e4770c330b7fac4f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96985e6381adc5a222cd74c06e95083a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "7be61ff46cba15020a14a9d8c83236e929bb5a31", "commitAfterChange": "07a3027bb2230d2add3de5ec0b166a35d50b0236", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void addClassFiles(Vector classFileList, File dir, File root)", "signatureAfterChange": "     private void addClassFiles(Vector classFileList, File dir, File root)", "diff": ["-        if (filesInDir != null) {", "-            int length = filesInDir.length;", "+        if (filesInDir == null) {", "+            return;", "+        }", "+        int length = filesInDir.length;", "-            for (int i = 0; i < length; ++i) {", "-                File file = new File(dir, filesInDir[i]);", "-                if (file.isDirectory()) {", "-                    addClassFiles(classFileList, file, root);", "-                } else if (file.getName().endsWith(\".class\")) {", "-                    ClassFileInfo info = new ClassFileInfo();", "-                    info.absoluteFile = file;", "-                    info.relativeName = file.getPath().substring(root.getPath().length() + 1,", "-                        file.getPath().length() - 6);", "-                    info.className = ClassFileUtils.convertSlashName(info.relativeName);", "-                    classFileList.addElement(info);", "-                }", "+        int rootLength = root.getPath().length();", "+        for (int i = 0; i < length; ++i) {", "+            File file = new File(dir, filesInDir[i]);", "+            if (file.isDirectory()) {", "+                addClassFiles(classFileList, file, root);", "+            } else if (file.getName().endsWith(\".class\")) {", "+                ClassFileInfo info = new ClassFileInfo();", "+                info.absoluteFile = file;", "+                String relativeName = file.getPath().substring(rootLength + 1,", "+                    file.getPath().length() - 6);", "+                info.className ", "+                    = ClassFileUtils.convertSlashName(relativeName);", "+                info.sourceFile = findSourceFile(relativeName);    ", "+                classFileList.addElement(info);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf83239b80f58d471a5f0c9a092d22fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antlibs/system/org/apache/ant/antlib/system/Ant.java", "commitBeforeChange": "f1025dd3c6deebb466ac41a06a42d812cdf4e08d", "commitAfterChange": "c2f14ffad1518f0d1c23c084b7c216d06c5da363", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws ExecutionException", "signatureAfterChange": "     public void execute() throws ExecutionException", "diff": ["-        ", "+", "+", "-            antFile ", "-                = FileUtils.newFileUtils().resolveFile(baseDir, antFileName);", "+            antFile", "+                 = FileUtils.newFileUtils().resolveFile(baseDir, antFileName);", "-        ", "+", "-        ", "-        Object key = getExecService().setupBuild(antFile, getProperties());", "+", "+        ExecService execService = getExecService();", "+        Project model = execService.parseXMLBuildFile(antFile);", "+        Object key = execService.setupBuild(model, getProperties());", "+", "-        getExecService().runBuild(key, getTargets());", "+        execService.runBuild(key, getTargets());"]}]}