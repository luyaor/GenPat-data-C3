{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00dd4842b709c1c5f51365894a1096ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "184d728e8a02ef17105eb604478de145", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["-                PrintWriter out = null;", "+                BufferedWriter out = null;", "-                    out = new PrintWriter(new FileWriter(tmpFile));", "+                    out = new BufferedWriter(new FileWriter(tmpFile));", "-                            out.println(\"\\\"\" + args[i] + \"\\\"\");", "+                            out.write(\"\\\"\" + args[i] + \"\\\"\");", "-                            out.println(args[i]);", "+                            out.write(args[i]);", "+                        out.newLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26247690b445a0586e777f7124e9b43e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Echo.java", "commitBeforeChange": "4a7b9de346e3b0e98c952fc981eff871527ffead", "commitAfterChange": "4e7f82aede337093ce7bf8bfe03f930500e22551", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            FileWriter out = null;", "+            Writer out = null;", "-                out = new FileWriter(file.getAbsolutePath(), append);", "+                String filename = file.getAbsolutePath();", "+                if(encoding==null || encoding.length()==0) {", "+                    out = new FileWriter(filename, append);", "+                } else {", "+                    out = new BufferedWriter(", "+                            new OutputStreamWriter(", "+                                new FileOutputStream(filename, append),encoding));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f07ebdc007161b5a277ee70f60949d3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/Depend.java", "commitBeforeChange": "8d4985ca744bd0925d812835615bb991b16e1db2", "commitAfterChange": "f62d563414e6848898008af84073651eb83a7959", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void writeCachedDependencies(Hashtable dependencyMap)         throws IOException", "signatureAfterChange": "     private void writeCachedDependencies(Hashtable dependencyMap)         throws IOException", "diff": ["-            PrintWriter pw = null;", "+            BufferedWriter pw = null;", "-                pw = new PrintWriter(new FileWriter(depFile));", "+                pw = new BufferedWriter(new FileWriter(depFile));", "-                    pw.println(CLASSNAME_PREPEND + className);", "+                    pw.write(CLASSNAME_PREPEND + className);", "+                    pw.newLine();", "-                        pw.println(dependencyList.elementAt(x));", "+                        pw.write(String.valueOf(dependencyList.elementAt(x)));", "+                        pw.newLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ae1279586e88f9bd613589ab76c117", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "00d14d398fdee8aed882a7b77c4c4767339c11fd", "commitAfterChange": "82d37706ea0eee342ceee50d1982bbbbf38c6056", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "     public static Manifest getDefaultManifest() throws BuildException", "signatureAfterChange": "     public static Manifest getDefaultManifest() throws BuildException", "diff": ["-                return new Manifest(new InputStreamReader(in, \"ASCII\"));", "+                Manifest defaultManifest ", "+                    = new Manifest(new InputStreamReader(in, \"ASCII\"));", "+                Attribute createdBy = new Attribute(\"Created-By\", ", "+                    System.getProperty(\"java.vm.version\") + \" (\"", "+                    + System.getProperty(\"java.vm.vendor\") + \")\" );", "+                defaultManifest.getMainSection().storeAttribute(createdBy);", "+                return defaultManifest;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f8f41d2b838f9bff4b8720f9ac2961", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "9177c5d9810a2393097bef20d8aee90b9563940e", "commitAfterChange": "6e7154321d3e95449b4a9ab838d0872384e641a0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["+     */", "+    protected int executeExternalCompile(String[] args, int firstFileName,", "+                                         boolean quoteFiles) {", "-                        out.println(args[i]);", "+                        if (quoteFiles && args[i].indexOf(\" \") > -1) {", "+                            out.println(\"\\\"\" + args[i] + \"\\\"\");", "+                        } else {", "+                            out.println(args[i]);", "+                        }"]}]}