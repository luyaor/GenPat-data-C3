{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5eddd38c5b888fc11607d0af888c5232", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de99a996dfebffae5609873c66389c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/aspect/DefaultAspectManager.java", "commitBeforeChange": "1dc00cb1d11437ed4284e6a8de584435f13e2564", "commitAfterChange": "190db7ce1a9cdad175a551c410fe22a85f03fb4a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public synchronized void addAspectHandler( final AspectHandler handler )", "signatureAfterChange": "      public synchronized void addAspectHandler( final String name, final AspectHandler handler )         throws TaskException", "diff": ["-    public synchronized void addAspectHandler( final AspectHandler handler )", "-        m_aspectCopy.add( handler );", "-        m_aspects = (AspectHandler[])m_aspectCopy.toArray( m_aspects );", "+    public synchronized void addAspectHandler( final String name, final AspectHandler handler )", "+        throws TaskException", "+        m_aspectMap.put( name, handler );", "+        rebuildArrays();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b60c7bba6092ab9e0336be3091d872", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/aspect/DefaultAspectManager.java", "commitBeforeChange": "1dc00cb1d11437ed4284e6a8de584435f13e2564", "commitAfterChange": "190db7ce1a9cdad175a551c410fe22a85f03fb4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public synchronized void removeAspectHandler( final AspectHandler handler )", "signatureAfterChange": "      public synchronized void removeAspectHandler( final String name, final AspectHandler handler )         throws TaskException", "diff": ["-    public synchronized void removeAspectHandler( final AspectHandler handler )", "-        m_aspectCopy.remove( handler );", "-        m_aspects = (AspectHandler[])m_aspectCopy.toArray( m_aspects );", "+", "+    public synchronized void removeAspectHandler( final String name, final AspectHandler handler )", "+        throws TaskException", "+    {", "+        final AspectHandler entry = (AspectHandler)m_aspectMap.remove( name );", "+        if( null == entry )", "+        {", "+            throw new TaskException( \"No such aspect with name '\" + name + \"'\" );", "+        }", "+", "+        rebuildArrays();", "+    }"]}]}