{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd6169571de67dcf7727eaa3ef9e1122", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c912c8cc832ae5b0df155c3c47f870", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "ed1abbaa01fd034c3d4d9a61f8a2bfc268ea74e6", "commitAfterChange": "f61c1bcd3a4a540bac7ae97559f37c49bfee75d8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected static boolean matchPatternStart(String pattern, String str,                                                boolean isCaseSensitive)", "signatureAfterChange": "     protected static boolean matchPatternStart(String pattern, String str,                                                boolean isCaseSensitive)", "diff": ["-        // When str starts with a File.separator, pattern has to start with a", "-        // File.separator.", "-        // When pattern starts with a File.separator, str has to start with a", "-        // File.separator.", "-        if (str.startsWith(File.separator) !=", "-            pattern.startsWith(File.separator)) {", "-            return false;", "-        }", "-", "-        Vector patDirs = tokenizePath (pattern);", "-        Vector strDirs = tokenizePath (str);", "-", "-        int patIdxStart = 0;", "-        int patIdxEnd   = patDirs.size() - 1;", "-        int strIdxStart = 0;", "-        int strIdxEnd   = strDirs.size() - 1;", "-", "-        // up to first '**'", "-        while (patIdxStart <= patIdxEnd && strIdxStart <= strIdxEnd) {", "-            String patDir = (String) patDirs.elementAt(patIdxStart);", "-            if (patDir.equals(\"**\")) {", "-                break;", "-            }", "-            if (!match(patDir, (String) strDirs.elementAt(strIdxStart), isCaseSensitive)) {", "-                return false;", "-            }", "-            patIdxStart++;", "-            strIdxStart++;", "-        }", "-", "-        if (strIdxStart > strIdxEnd) {", "-            // String is exhausted", "-            return true;", "-        } else if (patIdxStart > patIdxEnd) {", "-            // String not exhausted, but pattern is. Failure.", "-            return false;", "-        } else {", "-            // pattern now holds ** while string is not exhausted", "-            // this will generate false positives but we can live with that.", "-            return true;", "-        }", "+        return SelectorUtils.matchPatternStart(pattern, str, isCaseSensitive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ca77ae4acc8800fdfd7793253f0491", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectorUtils.java", "commitBeforeChange": "f292daba99b3d3955a157d1c43b7053e74df13da", "commitAfterChange": "1c3f4b1664951bb5e4c28de46b01dc50b0ee74bd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static boolean matchPath(String pattern, String str,             boolean isCaseSensitive)", "signatureAfterChange": "     public static boolean matchPath(String pattern, String str,             boolean isCaseSensitive)", "diff": ["-        Vector patDirs = tokenizePath (pattern);", "-        Vector strDirs = tokenizePath (str);", "+        String[] patDirs = tokenizePathAsArray(pattern);", "+        String[] strDirs = tokenizePathAsArray(str);", "-        int patIdxEnd   = patDirs.size()-1;", "+        int patIdxEnd   = patDirs.length-1;", "-        int strIdxEnd   = strDirs.size()-1;", "+        int strIdxEnd   = strDirs.length-1;", "-            String patDir = (String)patDirs.elementAt(patIdxStart);", "+            String patDir = patDirs[patIdxStart];", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxStart),", "+            if (!match(patDir,strDirs[strIdxStart],", "-                if (!patDirs.elementAt(i).equals(\"**\")) {", "+                if (!patDirs[i].equals(\"**\")) {", "-            String patDir = (String)patDirs.elementAt(patIdxEnd);", "+            String patDir = patDirs[patIdxEnd];", "-            if (!match(patDir,(String)strDirs.elementAt(strIdxEnd),", "+            if (!match(patDir,strDirs[strIdxEnd],", "-                if (!patDirs.elementAt(i).equals(\"**\")) {", "+                if (!patDirs[i].equals(\"**\")) {", "-                if (patDirs.elementAt(i).equals(\"**\")) {", "+                if (patDirs[i].equals(\"**\")) {", "-                    String subPat = (String)patDirs.elementAt(patIdxStart+j+1);", "-                    String subStr = (String)strDirs.elementAt(strIdxStart+i+j);", "+                    String subPat = patDirs[patIdxStart+j+1];", "+                    String subStr = strDirs[strIdxStart+i+j];", "-            if (!patDirs.elementAt(i).equals(\"**\")) {", "+            if (!patDirs[i].equals(\"**\")) {"]}]}