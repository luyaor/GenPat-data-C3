{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fce8b339ae63eb0307ddb8a7d77e28da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfbf2d6afc2cbf9c5a02a6d8c3be878", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "54fec62b385b75dc3eb2919685dbddc032e316a1", "commitAfterChange": "a9353331a922b229316fa3da01f1b2df9fd75059", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String[] getIncludedFiles()", "signatureAfterChange": "     public String[] getIncludedFiles()", "diff": ["-    public String[] getIncludedFiles() {", "-        String[] result = new String[1];", "-        result[0] = srcFile.getAbsolutePath();", "-        return result;", "+     */", "+    public String[] getIncludedFiles() {", "+        Vector myvector = new Vector();", "+        // first check if the archive needs to be scanned again", "+        scanme();", "+        for (int counter = 0; counter < myentries.size(); counter++) {", "+            Resource myresource= (Resource) myentries.elementAt(counter);", "+            if (!myresource.isDirectory() && match(myresource.getName())) {", "+                myvector.addElement(myresource.getName());", "+            }", "+        }", "+        String[] files = new String[myvector.size()];", "+        myvector.copyInto(files);", "+        return files;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "709184ea90453187f8dd96388f3450f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/types/AntFilterReader.java", "commitBeforeChange": "7265fdb8a846802089831647891b0218858fdc7b", "commitAfterChange": "8aa365e5d7d7f14ac4e0002be30968df77b08b56", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public final Hashtable getParams()", "signatureAfterChange": "      public final Parameter[] getParams()", "diff": ["-    public final Hashtable getParams() {", "-        final int size = parameters.size();", "-        final Hashtable params = new Hashtable();", "-        for (int i = 0; i < size; i++) {", "-            final Parameter param = (Parameter) parameters.elementAt(i);", "-            final String name = param.getName();", "-            final String value = param.getValue();", "-            if (name != null && value != null) {", "-                params.put(name, value);", "-            }", "-        }", "+    public final Parameter[] getParams() {", "+        Parameter[] params = new Parameter[parameters.size()];", "+        parameters.copyInto(params);", "-    }"]}]}