{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1c6dfda0fb073a5ded56f744f9545a6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236e541574ce80e9ed7bb31409ac594a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "c1d66dbc0cb573a6afe5fcaea76e661622337a00", "commitAfterChange": "43cbdfc52cca75f3089c7494d99b91cb9d562fc0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object getService( final Class serviceClass )         throws TaskException", "signatureAfterChange": "     public Object getService( final Class serviceClass )         throws TaskException", "diff": ["-        throw new TaskException( \"No services available atm\" );", "+        // Try this context first", "+        final String name = serviceClass.getName();", "+        if( m_componentManager.hasComponent( name ) )", "+        {", "+            try", "+            {", "+                final Component service = m_componentManager.lookup( name );", "+                if( !serviceClass.isInstance( service ) )", "+                {", "+                    final String message =", "+                        REZ.getString( \"bad-service-class.error\",", "+                                       name,", "+                                       service.getClass().getName(),", "+                                       serviceClass.getName() );", "+                    throw new TaskException( message );", "+                }", "+", "+                return service;", "+            }", "+            catch( final ComponentException ce )", "+            {", "+                final String message = REZ.getString( \"bad-find-service.error\", name );", "+                throw new TaskException( message, ce );", "+            }", "+        }", "+", "+        // Try parent", "+        final TaskContext parent = (TaskContext)getParent();", "+        if( null != parent )", "+        {", "+            return parent.getService( serviceClass );", "+        }", "+", "+        // Not found", "+        final String message = REZ.getString( \"bad-find-service.error\", name );", "+        throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdca22c63de7029fb1d23db0eef2fa77", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "be938b1e8fe6d68aec358cb6982c7d70fe827886", "commitAfterChange": "ef420c53bf5756a4e14afb47a54cef25e01017a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object getService( final Class serviceClass )         throws TaskException", "signatureAfterChange": "     public Object getService( final Class serviceClass )         throws TaskException", "diff": ["-        if( m_componentManager.hasComponent( name ) )", "+        if( m_serviceManager != null && m_serviceManager.hasService( serviceClass ) )", "-                final Component service = m_componentManager.lookup( name );", "-                if( !serviceClass.isInstance( service ) )", "-                {", "-                    final String message =", "-                        REZ.getString( \"bad-service-class.error\",", "-                                       name,", "-                                       service.getClass().getName(),", "-                                       serviceClass.getName() );", "-                    throw new TaskException( message );", "-                }", "-", "-                return service;", "+                return m_serviceManager.getService( serviceClass );", "-            catch( final ComponentException ce )", "+            catch( final ServiceException se )", "-                final String message = REZ.getString( \"bad-find-service.error\", name );", "-                throw new TaskException( message, ce );", "+                throw new TaskException( se.getMessage(), se );"]}]}