{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09c1caee3aff1af12a8236aabeea66cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c70c7ef81b1eed9a9c8a6406bc96278e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/HeadTailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testHeadLines() throws IOException", "signatureAfterChange": "      @Test     public void testHeadLines() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testHeadLines\");", "-        File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(), \"expected/head-tail.headLines.test\");", "-        File result = new File(getProject().getProperty(\"output\") + \"/head-tail.headLines.test\");", "-        assertTrue(\"testHeadLines: Result not like expected\", FILE_UTILS.contentEquals(expected, result));", "+        buildRule.executeTarget(\"testHeadLines\");", "+        File expected = buildRule.getProject().resolveFile(\"expected/head-tail.headLines.test\");", "+        File result = new File(buildRule.getProject().getProperty(\"output\") + \"/head-tail.headLines.test\");", "+        assertEquals(\"testHeadLines: Result not like expected\", FileUtilities.getFileContents(expected), FileUtilities.getFileContents(result));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b81a0d810ce33c8eb2be309cbc8676", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/ConcatFilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "       public void testFilterReaderNoArgs() throws IOException", "signatureAfterChange": "      @Test     public void testFilterReaderNoArgs() throws IOException", "diff": ["-", "+    @Test", "-        executeTarget(\"testFilterReaderNoArgs\");", "-        File expected = new File(getProject().getProperty(\"output\"), \"concatfilter.test\");", "-        File result = new File(getProject().getProperty(\"output\"),  \"concat.FilterReaderNoArgs.test\");", "-        assertTrue(\"testFilterReaderNoArgs: Result not like expected\", FILE_UTILS.contentEquals(expected, result));", "+        buildRule.executeTarget(\"testFilterReaderNoArgs\");", "+        File expected = new File(buildRule.getProject().getProperty(\"output\"), \"concatfilter.test\");", "+        File result = new File(buildRule.getProject().getProperty(\"output\"),  \"concat.FilterReaderNoArgs.test\");", "+        assertEquals(\"testFilterReaderNoArgs: Result not like expected\", FileUtilities.getFileContents(expected),", "+                FileUtilities.getFileContents(result));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d68d6b0ae5254fb34a9fd99047255488", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/filters/HeadTailTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testTailLines() throws IOException", "signatureAfterChange": "      @Test     public void testTailLines() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testTailLines\");", "-        File expected = FILE_UTILS.resolveFile(getProject().getBaseDir(),\"expected/head-tail.tailLines.test\");", "-        File result = new File(getProject().getProperty(\"output\") + \"/head-tail.tailLines.test\");", "-        assertTrue(\"testTailLines: Result not like expected\", FILE_UTILS.contentEquals(expected, result));", "+        buildRule.executeTarget(\"testTailLines\");", "+        File expected = buildRule.getProject().resolveFile(\"expected/head-tail.tailLines.test\");", "+        File result = new File(buildRule.getProject().getProperty(\"output\") + \"/head-tail.tailLines.test\");", "+        assertEquals(\"testTailLines: Result not like expected\", FileUtilities.getFileContents(expected), FileUtilities.getFileContents(result));"]}]}