{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8a7a78d4cc355fa2f80453e87d4f280", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00cd31552c4ee1f6d757828d1d7771f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "018aa8685b246a8bb269832fcbc935874eff0c1e", "commitAfterChange": "e545bf4a3695a90cc6d3645fb20d5dbacc7ec988", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void addFileToJar(JarOutputStream jStream,                                 FileInputStream iStream,                                 String          filename)         throws BuildException", "signatureAfterChange": "     protected void addFileToJar(JarOutputStream jStream,                                 File inputFile,                                 String logicalFilename)         throws BuildException", "diff": ["-                                FileInputStream iStream,", "-                                String          filename)", "+                                File inputFile,", "+                                String logicalFilename)", "+        FileInputStream iStream = null;", "-            // Create the zip entry and add it to the jar file", "-            ZipEntry zipEntry = new ZipEntry(filename);", "-            jStream.putNextEntry(zipEntry);", "-            ", "-            // Create the file input stream, and buffer everything over", "-            // to the jar output stream", "-            byte[] byteBuffer = new byte[2 * 1024];", "-            int count = 0;", "-            do {", "-                jStream.write(byteBuffer, 0, count);", "-                count = iStream.read(byteBuffer, 0, byteBuffer.length);", "-            } while (count != -1);", "-            ", "-            // Close up the file input stream for the class file", "-            iStream.close();", "+            if (!addedfiles.contains(logicalFilename)) {", "+                iStream = new FileInputStream(inputFile);", "+                // Create the zip entry and add it to the jar file", "+                ZipEntry zipEntry = new ZipEntry(logicalFilename);", "+                jStream.putNextEntry(zipEntry);", "+                   ", "+                // Create the file input stream, and buffer everything over", "+                // to the jar output stream", "+                byte[] byteBuffer = new byte[2 * 1024];", "+                int count = 0;", "+                do {", "+                    jStream.write(byteBuffer, 0, count);", "+                    count = iStream.read(byteBuffer, 0, byteBuffer.length);", "+                } while (count != -1);", "+                ", "+                //add it to list of files in jar", "+                addedfiles.add(logicalFilename);", "+           }       ", "-                         + filename + \"to jarfile.\"", "+                         + logicalFilename + \" to jarfile from \" + inputFile.getPath() + \".\"", "+        }", "+        finally {", "+            // Close up the file input stream for the class file", "+            if (iStream != null) {", "+                try {", "+                    iStream.close();", "+                }", "+                catch (IOException closeException) {}", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9762474cc2049f9ec9c88cf88642fc16", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/WLRun.java", "commitBeforeChange": "e49a5fb5644508cc28576955cebb347071848b94", "commitAfterChange": "c73084faf5d4b9c3a7b6d692908200303dc21d02", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (beaHome != null) {", "-            executeWLS6();", "-        }", "-        else {", "-            executeWLS();", "-        }", "-    }", "+        if (!securityPolicyFile.exists()) {", "+            // OK it maybe an absolute path. Use the project to resolve it", "+            securityPolicyFile = project.resolveFile(securityPolicy);", "+            if (!securityPolicyFile.exists()) {", "+                throw new BuildException(\"Security policy \" + securityPolicy +", "+                                         \" was not found.\");", "+            }                                         ", "+        }", "+", "+", "+        if (beaHome != null) {", "+            executeWLS6(securityPolicyFile);", "+        }", "+        else {", "+            executeWLS(securityPolicyFile);", "+        }", "+    }"]}]}