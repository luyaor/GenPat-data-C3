{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c37e176e05c4b18131c34216cea7d28", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010a0e1a136bafa360ab0f13ec9ebfb0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     private void mainQSort3(final Data data, final int loSt, final int hiSt,                             final int dSt)", "signatureAfterChange": "     private void mainQSort3(final Data dataShadow, final int loSt, final int hiSt,                             final int dSt)", "diff": ["-    private void mainQSort3(final Data data, final int loSt, final int hiSt,", "+    private void mainQSort3(final Data dataShadow, final int loSt, final int hiSt,", "-        final int[] stack_ll = data.stack_ll;", "-        final int[] stack_hh = data.stack_hh;", "-        final int[] stack_dd = data.stack_dd;", "-        final int[] fmap     = data.fmap;", "-        final byte[] block   = data.block;", "+        final int[] stack_ll = dataShadow.stack_ll;", "+        final int[] stack_hh = dataShadow.stack_hh;", "+        final int[] stack_dd = dataShadow.stack_dd;", "+        final int[] fmap     = dataShadow.fmap;", "+        final byte[] block   = dataShadow.block;", "-                if (mainSimpleSort(data, lo, hi, d)) {", "+                if (mainSimpleSort(dataShadow, lo, hi, d)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40caecd53d35067e3044dfd7fab711d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void createHuffmanDecodingTables(final int alphaSize,                                              final int nGroups)", "signatureAfterChange": "     private void createHuffmanDecodingTables(final int alphaSize,                                              final int nGroups)", "diff": ["-        final Data data = this.data;", "-        final char[][] len  = data.temp_charArray2d;", "-        final int[] minLens = data.minLens;", "-        final int[][] limit = data.limit;", "-        final int[][] base  = data.base;", "-        final int[][] perm  = data.perm;", "+        final Data dataShadow = this.data;", "+        final char[][] len  = dataShadow.temp_charArray2d;", "+        final int[] minLens = dataShadow.minLens;", "+        final int[][] limit = dataShadow.limit;", "+        final int[][] base  = dataShadow.base;", "+        final int[][] perm  = dataShadow.perm;"]}]}