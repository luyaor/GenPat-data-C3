{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4872ef8adad533a8f7655224e0b06592", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fdff98ad9b82f40d5ed285c1f07f66a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "14f760492cdf18560bccf1b7afcf8ae052228237", "commitAfterChange": "26498d6bc57731d3c9b320b958c5eaa22e9484b7", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        FileSet implicit = null;", "+        if (usedMatchingTask && dir != null && dir.isDirectory()) {", "+            //add the files from the default fileset:", "+            implicit = getImplicitFileSet();", "+            implicit.setProject(getProject());", "+            filesets.add(implicit);", "+        }", "-            }", "-        }", "-        if (usedMatchingTask && dir != null && dir.isDirectory()) {", "-            //add the files from the default fileset:", "-            FileSet implicit = getImplicitFileSet();", "-            resourcesToDelete.add(implicit);", "-            if (includeEmpty) {", "-              filesetDirs.add(new ReverseDirs(dir,", "-                  implicit.getDirectoryScanner().getIncludedDirectories()));", "-        }", "+        } finally {", "+\t    if (implicit != null) {", "+\t\tfilesets.remove(implicit);", "+\t    }", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "763326ac882ab680688efcc59bc3e8a6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "c4b1f65a6e716c0abeca09ac36399edc00d77d24", "commitAfterChange": "edb0dd9582a26bb899aa970735f93049c61d7ce7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private String resourceToURI(Resource resource)", "signatureAfterChange": "      private String resourceToURI(Resource resource)", "diff": ["-        if (resource instanceof FileProvider) {", "-            File f = ((FileProvider) resource).getFile();", "-            return FILE_UTILS.toURI(f.getAbsolutePath());", "+        // TODO turn URLResource into Provider", "+        FileProvider fp = (FileProvider) resource.as(FileProvider.class);", "+        if (fp != null) {", "+            return FILE_UTILS.toURI(fp.getFile().getAbsolutePath());"]}]}