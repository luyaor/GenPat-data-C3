{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a595e1a799d39ae2bfb204708e247ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f1c497a7282c0803f105a03811bb087", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MoveTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testDirectoryRetaining() throws IOException", "signatureAfterChange": "     @Test     public void testDirectoryRetaining() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testDirectoryRetaining\");", "-        assertTrue(new File(getOutputDir(),\"E\").exists());", "-        assertTrue(new File(getOutputDir(),\"E/1\").exists());", "-        assertTrue(!new File(getOutputDir(),\"A/1\").exists());", "-        assertTrue(new File(getOutputDir(),\"A\").exists());", "+        buildRule.executeTarget(\"testDirectoryRetaining\");", "+        String output = buildRule.getProject().getProperty(\"output\");", "+        assertTrue(new File(output,\"E\").exists());", "+        assertTrue(new File(output,\"E/1\").exists());", "+        assertTrue(!new File(output,\"A/1\").exists());", "+        assertTrue(new File(output,\"A\").exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548b5cfecef3a0e6c313844905716e3f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/MoveTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testPathElementMove() throws IOException", "signatureAfterChange": "      @Test     public void testPathElementMove() throws IOException", "diff": ["+    @Test", "-        executeTarget(\"testPathElementMove\");", "-        assertTrue(new File(getOutputDir(),\"E\").exists());", "-        assertTrue(new File(getOutputDir(),\"E/1\").exists());", "-        assertTrue(!new File(getOutputDir(),\"A/1\").exists());", "-        assertTrue(new File(getOutputDir(),\"A\").exists());", "+        buildRule.executeTarget(\"testPathElementMove\");", "+        String output = buildRule.getProject().getProperty(\"output\");", "+        assertTrue(new File(output,\"E\").exists());", "+        assertTrue(new File(output,\"E/1\").exists());", "+        assertTrue(!new File(output,\"A/1\").exists());", "+        assertTrue(new File(output,\"A\").exists());"]}]}