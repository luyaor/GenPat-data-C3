{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83863d1088d0a1a82ab00000e92fe6c4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24d57da72721605554a4586df1394d4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "d5bfb5609dde48b93877185c1f61067e009e8499", "commitAfterChange": "1ba5087df429abe38dd22fe5c9ddbc343280f0ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private static void runBuild()", "signatureAfterChange": "      private void runBuild()", "diff": ["-    private static void runBuild() {", "+    private void runBuild() {", "+        if (!readyToRun) {", "+            return;", "+        }", "+        ", "-        Project project = new Project(out, msgOutputLevel);", "+        Project project = new Project();", "+        addBuildListeners(project);", "+        project.fireBuildStarted();", "+        project.init();", "-\tproject.setUserProperty( \"ant.file\" , buildFile.getAbsolutePath() );", "+", "+        project.setUserProperty( \"ant.file\" , buildFile.getAbsolutePath() );", "-            Enumeration en = targets.elements();", "-            while (en.hasMoreElements()) {", "-                project.executeTarget((String) en.nextElement());", "-            }", "+            project.executeTargets(targets);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47918a64f07d117ad0d0372edca76078", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "587a3c4f5ef9a0effe4e1065ac7500e1e6987018", "commitAfterChange": "f504cf793e6d72308577e1dc86c7bed47d65de12", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 92, "signatureBeforeChange": "     private Hashtable mapClasses(File path)", "signatureAfterChange": "      protected Vector findPackages(File srcDir)", "diff": ["-     */", "-    private Hashtable mapClasses(File path) {", "-        Hashtable map = new Hashtable();", "-", "-        Vector files = new Vector();", "-        getFiles(path, files);", "-", "-        Enumeration e = files.elements();", "-        while (e.hasMoreElements()) {", "-            File file = (File) e.nextElement();", "-            String packageName = getPackageName(file);", "-            if (packageName != null) map.put(packageName, file);", "-        }", "-", "-        return map;", "-    }", "+    protected Vector findPackages(File srcDir) {", "+    \tVector foundPkgs = new Vector();", "+    \t", "+    \tif ((srcDir != null) && (srcDir.isDirectory())) {", "+    \t\tscan(srcDir, \"\", foundPkgs);", "+    \t}", "+    \t", "+    \treturn foundPkgs;"]}]}