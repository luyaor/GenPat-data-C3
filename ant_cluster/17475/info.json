{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9eb8c79a557e1d08587e1d67291bb488", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067fee9a44a0f43ceb8392d0f3103bfa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "30c0d31cc4e6eba6ffc9ead619b6f9f1d5181af3", "commitAfterChange": "813c2482279195999531f86dce204164523a071b", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 87, "signatureBeforeChange": "      private void configure(FTPClient ftp)", "signatureAfterChange": "      private void configure(FTPClient ftp)", "diff": ["-            FTPClientConfig config;", "-            if (this.systemKeyConfig != null) {", "-                config = new FTPClientConfig(this.systemKeyConfig);", "-                log(\"custom config: system key = \" ", "-                        + this.systemKeyConfig, Project.MSG_VERBOSE);", "-            } else {", "-                config = new FTPClientConfig();", "-            }", "-            if (this.defaultDateFormatConfig != null) {", "-                config.setDefaultDateFormatStr(this.defaultDateFormatConfig);", "-                log(\"custom config: default date format = \" ", "-                        + this.defaultDateFormatConfig, Project.MSG_VERBOSE);", "-            }", "-            if (this.recentDateFormatConfig != null) {", "-                config.setRecentDateFormatStr(this.recentDateFormatConfig);", "-                log(\"custom config: recent date format = \" ", "-                        + this.recentDateFormatConfig, Project.MSG_VERBOSE);", "-            }", "-            if (this.serverLanguageCodeConfig != null) {", "-                config.setServerLanguageCode(this.serverLanguageCodeConfig);", "-                log(\"custom config: server language code = \" ", "-                        + this.serverLanguageCodeConfig, Project.MSG_VERBOSE);", "-            }", "-            if (this.serverTimeZoneConfig != null) {", "-                config.setServerTimeZoneId(this.serverTimeZoneConfig);", "-                log(\"custom config: server time zone ID = \" ", "-                        + this.serverTimeZoneConfig, Project.MSG_VERBOSE);", "-            }", "-            if (this.shortMonthNamesConfig != null) {", "-                config.setShortMonthNames(this.shortMonthNamesConfig);", "-                log(\"custom config: short month names = \" ", "-                        + this.shortMonthNamesConfig, Project.MSG_VERBOSE);", "-            }", "-            ftp.configure(config);", "+            FTPConfigurator.configure(ftp, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5fb275161f48b5fabba4ba2a8bcb728", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 32, "signatureBeforeChange": "     private void addLibraryConverters(AntLibrary library)          throws ConfigException", "signatureAfterChange": "     private void addLibraryConverters(AntLibrary library)          throws ExecutionException", "diff": ["-         throws ConfigException {", "+         throws ExecutionException {", "+            AntLibFactory libFactory = getLibFactory(library);", "-                    throw new ConfigException(\"The converter class \"", "+                    throw new ExecutionException(\"In Ant library \\\"\"", "+                         + library.getLibraryId() + \"\\\" the converter class \"", "-                Converter converter = (Converter)converterClass.newInstance();", "-                ExecutionContext context = new ExecutionContext();", "-                context.initEnvironment(this, eventSupport);", "+                Converter converter", "+                     = libFactory.createConverter(converterClass);", "+                ExecutionContext context", "+                     = new ExecutionContext(this, eventSupport);", "-            throw new ConfigException(\"Converter Class \" + className", "-                 + \" was not found\", e);", "+            throw new ExecutionException(\"In Ant library \\\"\"", "+                 + library.getLibraryId() + \"\\\" converter class \"", "+                 + className + \" was not found\", e);", "-            throw new ConfigException(\"Could not load a dependent class (\"", "+            throw new ExecutionException(\"In Ant library \\\"\"", "+                 + library.getLibraryId()", "+                 + \"\\\" could not load a dependent class (\"", "-            throw new ConfigException(\"Unable to instantiate converter class \"", "+            throw new ExecutionException(\"In Ant library \\\"\"", "+                 + library.getLibraryId()", "+                 + \"\\\" unable to instantiate converter class \"", "-            throw new ConfigException(\"Unable to access converter class \"", "+            throw new ExecutionException(\"In Ant library \\\"\"", "+                 + library.getLibraryId()", "+                 + \"\\\" unable to access converter class \""]}]}