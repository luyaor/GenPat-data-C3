{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6ed4ad82cc658a80c907bc445546ef8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11be210e937dc86f718e0b6564e567b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/optional/ScriptRunner.java", "commitBeforeChange": "ebefa298a138aaf7088ad1af981a392b895eff85", "commitAfterChange": "c0b535098106a3b4549151960da251a6e78e627e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addText(String text)", "signatureAfterChange": "     public Object evalulateScript(String execName)         throws BuildException", "diff": ["+    public Object evalulateScript(String execName)", "+        throws BuildException {", "+        checkLanguage();", "+        ClassLoader origLoader = replaceContextLoader();", "+            BSFManager m = createManager();", "+            declareBeans(m);", "+            // execute the script", "+            if (engine == null) {", "+                return m.eval(getLanguage(), execName, 0, 0, getScript());", "+            } else {", "+                return engine.eval(execName, 0, 0, getScript());", "+            }", "+        } catch (BSFException be) {", "+            throwBuildException(be);", "+            // NotReached", "+            return null;", "+            restoreContextLoader(origLoader);", "-    public void addText(String text) {", "-        this.script += text;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2acf01378c80b8623081a04ba4a8f04a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "1733506854444866e6a904c3c3e65b8fc9773400", "commitAfterChange": "3d76bc5d3a70e23f49bd566fc54e0553b966f1c4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+            boolean compileSucceeded = false;", "+", "-                doClassicCompile();", "+                compileSucceeded = doClassicCompile();", "-                doModernCompile();", "+                compileSucceeded = doModernCompile();", "-                doJikesCompile();", "+                compileSucceeded = doJikesCompile();", "-                doJvcCompile();", "+                compileSucceeded = doJvcCompile();", "+            }", "+            ", "+            if (!compileSucceeded) {", "+                if (failOnError) {", "+                    throw new BuildException(FAIL_MSG, location);", "+                }", "+                else {", "+                    log(FAIL_MSG, Project.MSG_ERR);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3558a3ce323c656c71354bea4feaaee2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/taskdefs/LoadFile.java", "commitBeforeChange": "2986a1b266db0241341764c2ee3c240a45ac3cfd", "commitAfterChange": "e886871506743df400949c1c6c3e87820290119b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public final void execute()         throws BuildException", "diff": ["-    public void execute()", "+    public final void execute()", "-            long len = srcFile.length();", "+            final long len = srcFile.length();", "-            int size=(int) len;", "+            final int size=(int) len;", "-        } catch (IOException ioe) {", "-            String message = \"Unable to load file: \" + ioe.toString();", "+        } catch (final IOException ioe) {", "+            final String message = \"Unable to load file: \" + ioe.toString();", "+            }", "+        } catch (final BuildException be) {", "+            if (failOnError) {", "+                throw be;", "+            }", "+            else {", "+                log(be.getMessage(), Project.MSG_ERR);", "+                //ignore"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fabe46668bae98e57e6e3b99e6ad3b88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "89fcd5b57af66a3699964a5b445a3c94bfdd901c", "commitAfterChange": "78b414381f8d0da9249558b3dd922319fa89c5fa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "      protected void runExec(Execute exe) throws BuildException", "diff": ["-                FileSet fs = (FileSet) filesets.elementAt(i);", "+", "+                Object o = filesets.elementAt(i);", "+                FileSet fs = null;", "+                if (o instanceof FileSet) {", "+                    fs = (FileSet) o;", "+                } else {", "+                    Reference r = (Reference) o;", "+                    o = r.getReferencedObject(project);", "+                    if (o instanceof FileSet) {", "+                        fs = (FileSet) o;", "+                    } else {", "+                        String msg = r.getRefId()+\" doesn\\'t denote a fileset\";", "+                        throw new BuildException(msg, location);", "+                    }", "+                }", "+                "]}]}