{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04d0e99bb33e1e73c3ae201f731d4709", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663bb1c373997d18f58c963fcce22d67", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "de190c4094ef4f0bb42d710d95b74bcef765aadc", "commitAfterChange": "e1018ac5bacf39393c79c27d80b07e1825189867", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Frame getContainingFrame(String targetName)", "signatureAfterChange": "     protected Frame getContainingFrame(String elementName)", "diff": ["+     */", "+    protected Frame getContainingFrame(String elementName) {", "+        int index = elementName.lastIndexOf(Project.REF_DELIMITER);", "+        if (index == -1) {", "+            return this;", "+        }", "+", "+        Frame currentFrame = this;", "+        String relativeName = elementName.substring(0, index);", "+        StringTokenizer tokenizer", "+             = new StringTokenizer(relativeName, Project.REF_DELIMITER);", "+        while (tokenizer.hasMoreTokens()) {", "+            String refName = tokenizer.nextToken();", "+            currentFrame = currentFrame.getReferencedFrame(refName);", "+            if (currentFrame == null) {", "+                return null;", "+            }", "+        }", "+", "+        return currentFrame;", "-     */", "-    private Frame getContainingFrame(String targetName) {", "-        int index = targetName.lastIndexOf(Project.REF_DELIMITER);", "-        if (index == -1) {", "-            return this;", "-        }", "-", "-        Frame currentFrame = this;", "-        String relativeName = targetName.substring(0, index);", "-        StringTokenizer tokenizer", "-             = new StringTokenizer(relativeName, Project.REF_DELIMITER);", "-        while (tokenizer.hasMoreTokens()) {", "-            String refName = tokenizer.nextToken();", "-            currentFrame = currentFrame.getReferencedFrame(refName);", "-            if (currentFrame == null) {", "-                return null;", "-            }", "-        }", "-", "-        return currentFrame;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b38bb1d060167a89ca0196d8f90997a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Map getAllProperties()", "signatureAfterChange": "     protected Map getAllProperties()", "diff": ["-     */", "-    public Map getAllProperties() {", "-        Map allProperties = new HashMap(dataValues);", "-        Iterator i = referencedFrames.keySet().iterator(); ", "-        while (i.hasNext()) {", "-            String refName = (String)i.next();", "-            ExecutionFrame refFrame = getReferencedFrame(refName);", "-            Map refProperties = refFrame.getAllProperties();", "-            Iterator j = refProperties.keySet().iterator();", "-            while (j.hasNext()) {", "-                String name = (String)j.next();", "-                Object value = refProperties.get(name);", "-                allProperties.put(refName + Project.REF_DELIMITER + name,", "-                    value);", "-            }", "-        }", "-        ", "-        return allProperties;", "-    }", "+     */", "+    protected Map getAllProperties() {", "+        Map allProperties = new HashMap(dataValues);", "+        Iterator i = referencedFrames.keySet().iterator();", "+        while (i.hasNext()) {", "+            String refName = (String)i.next();", "+            ExecutionFrame refFrame = getReferencedFrame(refName);", "+            Map refProperties = refFrame.getAllProperties();", "+            Iterator j = refProperties.keySet().iterator();", "+            while (j.hasNext()) {", "+                String name = (String)j.next();", "+                Object value = refProperties.get(name);", "+                allProperties.put(refName + Project.REF_DELIMITER + name,", "+                    value);", "+            }", "+        }", "+", "+        return allProperties;"]}]}