{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86b161592a438c397550e6cc7821258d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a43db2f0b57bd7e0ee3bc6a2c86ef1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/RuntimeConfigurable.java", "commitBeforeChange": "84d14bfb72b481348097d71c76c1e47253a8660c", "commitAfterChange": "1038e813e3eccdf970c5a2a82d8b0286370f4270", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "signatureAfterChange": "     public synchronized void maybeConfigure(Project p, boolean configureChildren)         throws BuildException", "diff": ["-        if (attributeNames != null) {", "-            for (int i = 0; i < attributeNames.size(); i++) {", "-                String name = (String) attributeNames.get(i);", "-                String value = (String) attributeMap.get(name);", "+        if (attributeMap != null) {", "+            for (Iterator iter = attributeMap.entrySet().iterator(); iter.hasNext();) {", "+                Map.Entry entry = (Map.Entry) iter.next();", "+                String name = (String) entry.getKey();", "+                String value = (String) entry.getValue();", "-                    } else  if (getElementTag() == null) {", "+                    } else if (getElementTag() == null) {", "-                            getElementTag() +  \" doesn't support the \\\"\"", "+                            getElementTag() + \" doesn't support the \\\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a037285541ceae7797355eef62f6134", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/DOMElementWriter.java", "commitBeforeChange": "80eb41df70f59620db5127b116b1311dc33bd804", "commitAfterChange": "a7900921c30f730f0fda304913f867dee4dcebc5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void write(Element element, Writer out, int indent,                       String indentWith)         throws IOException", "signatureAfterChange": "     public void write(Element element, Writer out, int indent,                       String indentWith)         throws IOException", "diff": ["-        // Write indent characters", "-        for (int i = 0; i < indent; i++) {", "-            out.write(indentWith);", "-        }", "-", "-        // Write element", "-        out.write(\"<\");", "-        out.write(element.getTagName());", "-", "-        // Write attributes", "-        NamedNodeMap attrs = element.getAttributes();", "-        for (int i = 0; i < attrs.getLength(); i++) {", "-            Attr attr = (Attr) attrs.item(i);", "-            out.write(\" \");", "-            out.write(attr.getName());", "-            out.write(\"=\\\"\");", "-            out.write(encode(attr.getValue()));", "-            out.write(\"\\\"\");", "-        }", "-        out.write(\">\");", "+        openElement(element, out, indent, indentWith);", "+        closeElement(element, out, indent, indentWith, hasChildren);", "+    }"]}]}