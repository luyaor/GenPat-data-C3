{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23b8dcf51cab4e0c96ba23e461ce13e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "123774398a91e23806cc3832d5bcad41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "73b731154ae2ac82f40685f9398e295d5c34457f", "commitAfterChange": "91a07a1f685acd64f79347288b50584e4df34c3e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testChildrenOfExcludedDirectory()", "signatureAfterChange": "     public void testChildrenOfExcludedDirectory()", "diff": ["-        haveZipPackage = false;", "-        Resource[] includedResources = ds.getIncludedDirectoryResources();", "-        for (int i=0; i<includedResources.length; i++) {", "-            if (includedResources[i].getName().equals(\"zip\")) {", "-                haveZipPackage = true;", "-            } else if (includedResources[i].getName().equals(\"ant\" ", "-                                                             + File.separator", "-                                                             + \"taskdefs\")) {", "-                haveTaskdefsPackage = true;", "-            }", "-        }", "-        assertTrue(\"(1b) zip package included\", haveZipPackage);", "-        assertTrue(\"(1b) taskdefs package not included\", !haveTaskdefsPackage);", "-", "-", "-        haveZipPackage = false;", "-        haveTaskdefsPackage = false;", "-        includedResources = ds.getIncludedDirectoryResources();", "-        for (int i=0; i<includedResources.length; i++) {", "-            if (includedResources[i].getName().equals(\"zip\")) {", "-                haveZipPackage = true;", "-            } else if (includedResources[i].getName().equals(\"ant\"", "-                                                             + File.separator", "-                                                             + \"taskdefs\")) {", "-                haveTaskdefsPackage = true;", "-            }", "-        }", "-        assertTrue(\"(2b) zip package included\", haveZipPackage);", "-        assertTrue(\"(2b) taskdefs package included\", haveTaskdefsPackage);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea66ccb7fa8d3a08c11d0d02e812d807", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "7e82bff60dc29413bc89101f37da8f971134fe5a", "commitAfterChange": "69e7d88d2e23ff04812a0588bbf9ea59d04ad32d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void testChildrenOfExcludedDirectory()", "signatureAfterChange": "     public void testChildrenOfExcludedDirectory()", "diff": ["-        File dir = new File(\"src/main/org/apache/tools\");", "+        getProject().executeTarget(\"children-of-excluded-dir-setup\");", "-        ds.setBasedir(dir);", "-        ds.setExcludes(new String[] {\"ant/**\"});", "+        ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));", "+        ds.setExcludes(new String[] {\"alpha/**\"});", "+        ds.setFollowSymlinks(false);", "-", "-        boolean haveZipPackage = false;", "-        boolean haveTaskdefsPackage = false;", "-        String[] included = ds.getIncludedDirectories();", "-        for (int i=0; i<included.length; i++) {", "-            if (included[i].equals(\"zip\")) {", "-                haveZipPackage = true;", "-            } else if (included[i].equals(\"ant\"+File.separator+\"taskdefs\")) {", "-                haveTaskdefsPackage = true;", "-            }", "-        }", "-        assertTrue(\"(1) zip package included\", haveZipPackage);", "-        assertTrue(\"(1) taskdefs package not included\", !haveTaskdefsPackage);", "+        compareFiles(ds, new String[] {\"delta/delta.xml\"},", "+                    new String[] {\"\", \"delta\"});", "-        ds.setBasedir(dir);", "-        ds.setExcludes(new String[] {\"ant\"});", "+        ds.setBasedir(new File(getProject().getBaseDir(), \"tmp\"));", "+        ds.setExcludes(new String[] {\"alpha\"});", "+        ds.setFollowSymlinks(false);", "-        haveZipPackage = false;", "-        included = ds.getIncludedDirectories();", "-        for (int i=0; i<included.length; i++) {", "-            if (included[i].equals(\"zip\")) {", "-                haveZipPackage = true;", "-            } else if (included[i].equals(\"ant\"+File.separator+\"taskdefs\")) {", "-                haveTaskdefsPackage = true;", "-            }", "-        }", "-        assertTrue(\"(2) zip package included\", haveZipPackage);", "-        assertTrue(\"(2) taskdefs package included\", haveTaskdefsPackage);", "+        compareFiles(ds, new String[] {\"alpha/beta/beta.xml\",", "+                                       \"alpha/beta/gamma/gamma.xml\",", "+                                        \"delta/delta.xml\"},", "+                     new String[] {\"\", \"alpha/beta\", \"alpha/beta/gamma\", \"delta\"});", "+"]}]}