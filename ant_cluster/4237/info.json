{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3956c5619fe00c27c637bbd9681ef53", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137fb22f854cb5e9aad3d65651412ac2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void fireBuildFinished(ModelElement element,                                   Throwable cause)", "signatureAfterChange": "     public void fireBuildFinished(ModelElement element,                                   Throwable cause)", "diff": ["-        forwardEvent(event);", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.buildFinished(event);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45080780cdc54412100f43457a6b6300", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void fireTargetFinished(ModelElement element,                                    Throwable cause)", "signatureAfterChange": "     public void fireTargetFinished(ModelElement element,                                    Throwable cause)", "diff": ["-        forwardEvent(event);", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.targetFinished(event);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4746e5279c5b7a3ae382ddc526596bde", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void fireBuildStarted(ModelElement element)", "signatureAfterChange": "     public void fireBuildStarted(ModelElement element)", "diff": ["-        forwardEvent(event);", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.buildStarted(event);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d58d6169bb093cda77061858306c5d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void fireTaskStarted(ModelElement element)", "signatureAfterChange": "     public void fireTaskStarted(ModelElement element)", "diff": ["-        forwardEvent(event);", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.taskStarted(event);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a172591c4f2b9ca55a8cf43e8fc6970", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "76f5174e7c5e445a20eb0c1cbcb22f81e2c72503", "commitAfterChange": "c6d10f6ffcfc9ba5ebf41d7ea079047833f97642", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void endTest(Test test)", "signatureAfterChange": "     public void endTest(Test test)", "diff": ["+        Element currentTest = (Element) testElements.get(test);", "+        Long l = (Long) testStarts.get(test);", "-                                 \"\"+((System.currentTimeMillis()-lastTestStart)", "+                                 \"\"+((System.currentTimeMillis()-l.longValue())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f804b3345fd1d15a73db8e0ebe987e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void fireTaskFinished(ModelElement element,                                  Throwable cause)", "signatureAfterChange": "     public void fireTaskFinished(ModelElement element,                                  Throwable cause)", "diff": ["-        forwardEvent(event);", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.taskFinished(event);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9fbe66ee4a119a0613278d23fb01b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void fireTargetStarted(ModelElement element)", "signatureAfterChange": "     public void fireTargetStarted(ModelElement element)", "diff": ["-        forwardEvent(event);", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.targetStarted(event);", "+        }"]}]}