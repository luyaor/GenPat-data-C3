{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f767969f1fe8e103223fd24689002c0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211c8556af554c23371a50f0fccaeb6b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEncodingHelper.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     static final String decodeName(byte[] name, String encoding)", "signatureAfterChange": "     static final String decodeName(byte[] name, String encoding)         throws java.nio.charset.CharacterCodingException", "diff": ["-    static final String decodeName(byte[] name, String encoding) {", "+    static final String decodeName(byte[] name, String encoding)", "+        throws java.nio.charset.CharacterCodingException {", "-        return cs.decode(ByteBuffer.wrap(name)).toString();", "+        return cs.newDecoder()", "+            .onMalformedInput(CodingErrorAction.REPORT)", "+            .onUnmappableCharacter(CodingErrorAction.REPORT)", "+            .decode(ByteBuffer.wrap(name)).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fe5af6cbbc9dbbea388c4355ae9ae8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "9f5ab4ebed9aad38807cedd7f15248294c66fcf2", "commitAfterChange": "dfc1bee39414dbd90d79d067b7f20ad54c7dcfcc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "signatureAfterChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "diff": ["+                context.getProject().log(\"file=\" + file, Project.MSG_DEBUG);", "+            context.getProject().log(", "+                \"could not resolve systemId\", Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3f5b4353360ad04b7ed92316f4d6a46", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "fc0f7222fbba3f04ccb19afe7d7d3f305b6e76ea", "commitAfterChange": "81531e4ccc491acd422b705cfe427733b0c03834", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "signatureAfterChange": "     private void run(String[] args) throws LaunchException, MalformedURLException", "diff": ["+                t.printStackTrace();", "-                System.err.println(\"Instantiation Exception - root cause:\");", "-                ie.getCause().printStackTrace();", "+                if (ie.getCause() == null) {", "+                    System.err.println(\"Instantiation Exception - root cause: \"", "+                                       + ie.getCause());", "+                } else {", "+                     System.err.println(\"Instantiation Exception - root cause:\");", "+                     ie.getCause().printStackTrace();", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46ff203e483eca1c065018333f25a51", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "23b52c4827dff5266a9dde71049f545b1912d0b4", "commitAfterChange": "9fec95e95eb235218cb626468dd20a70aaca2ae8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     private static void doReportAntProperties(PrintStream out)", "signatureAfterChange": "     private static void doReportAntProperties(PrintStream out)", "diff": ["+        out.println(\"Is this the Kaffe VM? \"", "+                    + (JavaEnvUtils.isKaffe() ? \"yes\" : \"no\"));", "+        out.println(\"Is this gij/gcj? \"", "+                    + (JavaEnvUtils.isGij() ? \"yes\" : \"no\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f09c32324f6eabad8cf3e12099f189d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/MoveTest.java", "commitBeforeChange": "6349d0355599f611acde9234257aff085f862d66", "commitAfterChange": "48b5c5c2b5eb3eb13e0ce4d014a5649f7d989e33", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testDirectoryRetaining() throws IOException", "signatureAfterChange": "     public void testDirectoryRetaining() throws IOException", "diff": ["+        assertTrue(getProject().resolveFile(\"E/1\").exists());", "+        assertTrue(!getProject().resolveFile(\"A/1\").exists());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5d7847ff30f23bb05f86499c1c9202", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTPConfigurator.java", "commitBeforeChange": "4285e2be2ff5afd7100e624aab8d64feb06ec370", "commitAfterChange": "3885afdd77f0f1619377c813800780c711983ed8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     static FTPClient configure(FTPClient client, FTP task)", "signatureAfterChange": "     static FTPClient configure(FTPClient client, FTP task)", "diff": ["+        task.log(\"custom configuration\", Project.MSG_VERBOSE);", "-        if (systemTypeKey != null) {", "+        if (systemTypeKey != null && !\"\".equals(systemTypeKey)) {", "+            task.log(\"custom config: system key = default (UNIX)\", ", "+                    Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee3bba462e35751ca24ab09a39f4b6a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void executeTargetTasks(String targetName)          throws ExecutionException", "signatureAfterChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "diff": ["-    public void executeTargetTasks(String targetName)", "+    protected void executeTargetTasks(String targetName)", "+            System.out.println(\"Exception location is \" + e.getLocation());", "+            System.out.println(\"Exception location is now \" + e.getLocation());"]}]}