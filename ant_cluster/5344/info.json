{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10723efc2200381a7e7a72ce119516b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab1572791ec3fbffe522b6626de8bd60", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/embeddor/test/DefaultEmbeddorTest.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected Embeddor getEmbeddor() throws Exception", "signatureAfterChange": "     protected Embeddor getEmbeddor() throws Exception", "diff": ["-            final Parameters params = new Parameters();", "-            final File instDir = getInstallDirectory();", "-            params.setParameter( \"myrmidon.home\", instDir.getAbsolutePath() );", "-            m_embeddor.parameterize( params );", "+            final DefaultContext context = new DefaultContext();", "+            context.put( \"myrmidon.home\", getInstallDirectory() );", "+            m_embeddor.contextualize( context );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c55cf21d5a1eeb2facc16e60e371ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/EmbeddedAnt.java", "commitBeforeChange": "8cab56ee0ec0c658d0dec674d305630eb8e88bf4", "commitAfterChange": "f5ba55efa18fa862c2a4f5762198c2a9481f287e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private Embeddor prepareEmbeddor()         throws Exception", "signatureAfterChange": "     private Embeddor prepareEmbeddor( final Map parameters )         throws Exception", "diff": ["-    private Embeddor prepareEmbeddor()", "+    private Embeddor prepareEmbeddor( final Map parameters )", "-            if( m_embeddor instanceof Parameterizable )", "+            if( m_embeddor instanceof Contextualizable )", "-                ( (Parameterizable)m_embeddor ).parameterize( m_embeddorParameters );", "+                final Context context = new DefaultContext( parameters );", "+                ( (Contextualizable)m_embeddor ).contextualize( context );"]}]}