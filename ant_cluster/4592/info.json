{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "451a5f203cf4a58df6f10024c0be6189", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1de3df46624f68cf310355ed85f3b2cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "9ec9a279f5b0d54e1d1362475edc52717b2197ab", "commitAfterChange": "4d8702d1f414ef88110183568a3aa502d18e06f1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void loadLibs(Map librarySpecs, String libLocationString)          throws ExecutionException, MalformedURLException", "signatureAfterChange": "     public void loadLibs(Map librarySpecs, URL libLocationURL)          throws ExecutionException, MalformedURLException", "diff": ["+     */", "+    public void loadLibs(Map librarySpecs, URL libLocationURL)", "+         throws ExecutionException, MalformedURLException {", "+        if (!libLocationURL.getProtocol().equals(\"file\")", "+             && !remoteAllowed) {", "+            throw new ExecutionException(\"The config library \"", "+                 + \"location \\\"\" + libLocationURL", "+                 + \"\\\" cannot be used because config does \"", "+                 + \"not allow remote libraries\");", "+        }", "+        addAntLibraries(librarySpecs, libLocationURL);", "+    }", "-                URL libLocationURL = new URL(libLocationString);", "-                if (!libLocationURL.getProtocol().equals(\"file\")", "-                     && !remoteAllowed) {", "-                    throw new ExecutionException(\"The config library \"", "-                         + \"location \\\"\" + libLocationString", "-                         + \"\\\" cannot be used because config does \"", "-                         + \"not allow remote libraries\");", "-                }", "-                addAntLibraries(librarySpecs, libLocationURL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e357b9a1fc9b7c6654e14e6f01a804e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/InputTest.java", "commitBeforeChange": "6de0aa04319c4fb4fd6947f033da16f8efbe95e6", "commitAfterChange": "550607147fe6a0c89a1b6e6c85f5e69b334d31d7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void test3()", "signatureAfterChange": "      public void test3()", "diff": ["-        String log = \"All data is going to be deleted from DB continue (y/n)?\";", "-        String message = \"Invalid input please reenter.\";", "-        try {", "-            executeTarget(\"test3\");", "-        } catch (org.apache.tools.ant.BuildException e) {", "-            String realLog = getLog();", "-            assertEquals(log, realLog);", "-            assertEquals(message, e.getMessage());", "-        }", "+        expectSpecificBuildException(\"test3\", \"invalid input\",", "+                                     \"Found invalid input test for All data is\"", "+                                     + \" going to be deleted from DB\"", "+                                     + \" continue?\");"]}]}