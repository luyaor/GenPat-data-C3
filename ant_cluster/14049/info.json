{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51416152885bd0cbbd253d633cff944d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9466f6abd32bdd49b3bc28b6bd9d4d40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/testcases/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testTypedAdderAttribute()         throws Exception", "signatureAfterChange": "      private void configure( final Object test,                             final DefaultConfiguration config )         throws ConfigurationException", "diff": ["-     */", "-    public void testTypedAdderAttribute()", "-        throws Exception", "+    private void configure( final Object test,", "+                            final DefaultConfiguration config )", "+        throws ConfigurationException", "-        // Setup test data", "-        final DefaultConfiguration config = new DefaultConfiguration( \"test\", \"test\" );", "-        config.setAttribute( \"my-role1\", \"some value\" );", "-", "-        // Set up the converter and role", "-        registerRole( new RoleInfo( \"my-role1\", MyRole1.class ) );", "-        registerConverter( ObjectToMyRole1Converter.class, String.class, MyRole1.class );", "-", "-        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "-", "-        // Configure the object", "-        m_configurer.configure( test, config, m_context );", "-", "-        // Check result", "-        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "-        expected.add( new MyRole1Adaptor( \"some value\" ) );", "-        assertEquals( expected, test );", "+        try", "+        {", "+            m_configurer.configure( test, config, m_context );", "+        }", "+        catch( final ConfigurationException ce )", "+        {", "+            ExceptionUtil.printStackTrace( ce );", "+            throw ce;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7001e3eeca224d238be88b2bf9c423e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/myrmidon/components/configurer/DefaultConfigurerTest.java", "commitBeforeChange": "5c710a6a3823f6fb91218c5be5df77cd30b75db7", "commitAfterChange": "02a2cffe8f27603fdd8c7c83cc415170496a6fe1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void testTypedAdderAttribute()         throws Exception", "signatureAfterChange": "      private void configure( final Object test,                             final DefaultConfiguration config )         throws ConfigurationException", "diff": ["-     */", "-    public void testTypedAdderAttribute()", "-        throws Exception", "+    private void configure( final Object test,", "+                            final DefaultConfiguration config )", "+        throws ConfigurationException", "-        // Setup test data", "-        final DefaultConfiguration config = new DefaultConfiguration( \"test\", \"test\" );", "-        config.setAttribute( \"my-role1\", \"some value\" );", "-", "-        // Set up the converter and role", "-        registerRole( new RoleInfo( \"my-role1\", MyRole1.class ) );", "-        registerConverter( ObjectToMyRole1Converter.class, String.class, MyRole1.class );", "-", "-        final ConfigTestTypedProp test = new ConfigTestTypedProp();", "-", "-        // Configure the object", "-        m_configurer.configure( test, config, m_context );", "-", "-        // Check result", "-        final ConfigTestTypedProp expected = new ConfigTestTypedProp();", "-        expected.add( new MyRole1Adaptor( \"some value\" ) );", "-        assertEquals( expected, test );", "+        try", "+        {", "+            m_configurer.configure( test, config, m_context );", "+        }", "+        catch( final ConfigurationException ce )", "+        {", "+            ExceptionUtil.printStackTrace( ce );", "+            throw ce;", "+        }"]}]}