{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c0d3f28cdc6a8c95f94fedcc8b4d609", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be5d82366306292e38e739797f2f911", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"FTP connection failed: \" + ftp.getReplyString() );", "+                throw new TaskException( \"FTP connection failed: \" + ftp.getReplyString() );", "-                throw new BuildException( \"Could not login to FTP server\" );", "+                throw new TaskException( \"Could not login to FTP server\" );", "-                    throw new BuildException(", "+                    throw new TaskException(", "-                    throw new BuildException(", "+                    throw new TaskException(", "-                        throw new BuildException(", "+                        throw new TaskException(", "-                log( ACTION_STRS[action] + \" files\" );", "+                log( ACTION_STRS[ action ] + \" files\" );", "-            throw new BuildException( \"error during FTP transfer: \" + ex );", "+            throw new TaskException( \"error during FTP transfer: \" + ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ebbb9e2ba6a5bf0df6ddf403cb304e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"src attribute is required\" );", "+            throw new TaskException( \"src attribute is required\" );", "-            throw new BuildException( \"dest attribute is required\" );", "+            throw new TaskException( \"dest attribute is required\" );", "-            throw new BuildException( \"The specified destination is a directory\" );", "+            throw new TaskException( \"The specified destination is a directory\" );", "-            throw new BuildException( \"Can't write to \" + dest.getAbsolutePath() );", "+            throw new TaskException( \"Can't write to \" + dest.getAbsolutePath() );", "-                        ( sun.misc.BASE64Encoder )Class.forName( \"sun.misc.BASE64Encoder\" ).newInstance();", "+                        (sun.misc.BASE64Encoder)Class.forName( \"sun.misc.BASE64Encoder\" ).newInstance();", "-                HttpURLConnection httpConnection = ( HttpURLConnection )connection;", "+                HttpURLConnection httpConnection = (HttpURLConnection)connection;", "-                throw new BuildException( \"Can't get \" + source + \" to \" + dest );", "+                throw new TaskException( \"Can't get \" + source + \" to \" + dest );", "-            byte[] buffer = new byte[100 * 1024];", "+            byte[] buffer = new byte[ 100 * 1024 ];", "-            throw new BuildException( \"Error\", ioe);", "+            throw new TaskException( \"Error\", ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6cd22c523c45c7f083f0d961682a0e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void preconditions()         throws BuildException", "signatureAfterChange": "     private void preconditions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-            throw new BuildException( \"srcdir \\\"\" + srcDir.getPath() + \"\\\" does not exist!\");", "+            throw new TaskException( \"srcdir \\\"\" + srcDir.getPath() + \"\\\" does not exist!\" );", "-            throw new BuildException( \"instrumentdir attribute must be set!\");", "+            throw new TaskException( \"instrumentdir attribute must be set!\" );", "-            throw new BuildException( \"repositorydir attribute must be set!\" );", "+            throw new TaskException( \"repositorydir attribute must be set!\" );", "-            throw new BuildException( \"classdir attribute must be specified when updateicontrol=true!\" );", "+            throw new TaskException( \"classdir attribute must be specified when updateicontrol=true!\" );", "-            throw new BuildException( \"controlfile attribute must be specified when updateicontrol=true!\" );", "+            throw new TaskException( \"controlfile attribute must be specified when updateicontrol=true!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7025425c4e1649ace8ecea59433687fb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      JUnitResultFormatter createFormatter()         throws BuildException", "signatureAfterChange": "      JUnitResultFormatter createFormatter()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"you must specify type or classname\" );", "+            throw new TaskException( \"you must specify type or classname\" );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-            throw new BuildException( classname + \" is not a JUnitResultFormatter\" );", "+            throw new TaskException( classname + \" is not a JUnitResultFormatter\" );", "-        JUnitResultFormatter r = ( JUnitResultFormatter )o;", "+        JUnitResultFormatter r = (JUnitResultFormatter)o;", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db4ef9801bae65996a37145e2afa9ef", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/junit/FormatterElement.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      JUnitResultFormatter createFormatter()         throws BuildException", "signatureAfterChange": "      JUnitResultFormatter createFormatter()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"you must specify type or classname\" );", "+            throw new TaskException( \"you must specify type or classname\" );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );", "-            throw new BuildException( classname + \" is not a JUnitResultFormatter\" );", "+            throw new TaskException( classname + \" is not a JUnitResultFormatter\" );", "-        JUnitResultFormatter r = ( JUnitResultFormatter )o;", "+        JUnitResultFormatter r = (JUnitResultFormatter)o;", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "987e6c4f120d9ace4522e3e55c719b02", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"src attribute is required\" );", "+            throw new TaskException( \"src attribute is required\" );", "-            throw new BuildException( \"dest attribute is required\" );", "+            throw new TaskException( \"dest attribute is required\" );", "-            throw new BuildException( \"The specified destination is a directory\" );", "+            throw new TaskException( \"The specified destination is a directory\" );", "-            throw new BuildException( \"Can't write to \" + dest.getAbsolutePath() );", "+            throw new TaskException( \"Can't write to \" + dest.getAbsolutePath() );", "-                        ( sun.misc.BASE64Encoder )Class.forName( \"sun.misc.BASE64Encoder\" ).newInstance();", "+                        (sun.misc.BASE64Encoder)Class.forName( \"sun.misc.BASE64Encoder\" ).newInstance();", "-                HttpURLConnection httpConnection = ( HttpURLConnection )connection;", "+                HttpURLConnection httpConnection = (HttpURLConnection)connection;", "-                throw new BuildException( \"Can't get \" + source + \" to \" + dest );", "+                throw new TaskException( \"Can't get \" + source + \" to \" + dest );", "-            byte[] buffer = new byte[100 * 1024];", "+            byte[] buffer = new byte[ 100 * 1024 ];", "-            throw new BuildException( \"Error\", ioe);", "+            throw new TaskException( \"Error\", ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80e33be9896f94a9fe35b03e68fb296", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        TaskThread[] threads = new TaskThread[nestedTasks.size()];", "+        TaskThread[] threads = new TaskThread[ nestedTasks.size() ];", "-            Task nestedTask = ( Task )e.nextElement();", "-            threads[threadNumber] = new TaskThread( threadNumber, nestedTask );", "+            Task nestedTask = (Task)e.nextElement();", "+            threads[ threadNumber ] = new TaskThread( threadNumber, nestedTask );", "-            threads[i].start();", "+            threads[ i ].start();", "-                threads[i].join();", "+                threads[ i ].join();", "-            Throwable t = threads[i].getException();", "+            Throwable t = threads[ i ].getException();", "-                if( t instanceof BuildException &&", "+                if( t instanceof TaskException &&", "-                    firstLocation = ( ( BuildException )t ).getLocation();", "+                    firstLocation = ( (TaskException)t ).getLocation();", "-            if( firstException instanceof BuildException )", "+            if( firstException instanceof TaskException )", "-                throw ( BuildException )firstException;", "+                throw (TaskException)firstException;", "-                throw new BuildException( \"Error\", firstException );", "+                throw new TaskException( \"Error\", firstException );", "-            throw new BuildException( exceptionMessage.toString() );", "+            throw new TaskException( exceptionMessage.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d11b0423b157084187c683100933b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/IContract.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private void preconditions()         throws BuildException", "signatureAfterChange": "     private void preconditions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"srcdir attribute must be set!\" );", "+            throw new TaskException( \"srcdir attribute must be set!\" );", "-            throw new BuildException( \"srcdir \\\"\" + srcDir.getPath() + \"\\\" does not exist!\");", "+            throw new TaskException( \"srcdir \\\"\" + srcDir.getPath() + \"\\\" does not exist!\" );", "-            throw new BuildException( \"instrumentdir attribute must be set!\");", "+            throw new TaskException( \"instrumentdir attribute must be set!\" );", "-            throw new BuildException( \"repositorydir attribute must be set!\" );", "+            throw new TaskException( \"repositorydir attribute must be set!\" );", "-            throw new BuildException( \"classdir attribute must be specified when updateicontrol=true!\" );", "+            throw new TaskException( \"classdir attribute must be specified when updateicontrol=true!\" );", "-            throw new BuildException( \"controlfile attribute must be specified when updateicontrol=true!\" );", "+            throw new TaskException( \"controlfile attribute must be specified when updateicontrol=true!\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de47e42d904f1594574f39894e7d12b8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Parallel.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-        TaskThread[] threads = new TaskThread[nestedTasks.size()];", "+        TaskThread[] threads = new TaskThread[ nestedTasks.size() ];", "-            Task nestedTask = ( Task )e.nextElement();", "-            threads[threadNumber] = new TaskThread( threadNumber, nestedTask );", "+            Task nestedTask = (Task)e.nextElement();", "+            threads[ threadNumber ] = new TaskThread( threadNumber, nestedTask );", "-            threads[i].start();", "+            threads[ i ].start();", "-                threads[i].join();", "+                threads[ i ].join();", "-            Throwable t = threads[i].getException();", "+            Throwable t = threads[ i ].getException();", "-                if( t instanceof BuildException &&", "+                if( t instanceof TaskException &&", "-                    firstLocation = ( ( BuildException )t ).getLocation();", "+                    firstLocation = ( (TaskException)t ).getLocation();", "-            if( firstException instanceof BuildException )", "+            if( firstException instanceof TaskException )", "-                throw ( BuildException )firstException;", "+                throw (TaskException)firstException;", "-                throw new BuildException( \"Error\", firstException );", "+                throw new TaskException( \"Error\", firstException );", "-            throw new BuildException( exceptionMessage.toString() );", "+            throw new TaskException( exceptionMessage.toString() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e409fdc66bcdd295a997ad4517403213", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                throw new BuildException( \"FTP connection failed: \" + ftp.getReplyString() );", "+                throw new TaskException( \"FTP connection failed: \" + ftp.getReplyString() );", "-                throw new BuildException( \"Could not login to FTP server\" );", "+                throw new TaskException( \"Could not login to FTP server\" );", "-                    throw new BuildException(", "+                    throw new TaskException(", "-                    throw new BuildException(", "+                    throw new TaskException(", "-                        throw new BuildException(", "+                        throw new TaskException(", "-                log( ACTION_STRS[action] + \" files\" );", "+                log( ACTION_STRS[ action ] + \" files\" );", "-            throw new BuildException( \"error during FTP transfer: \" + ex );", "+            throw new TaskException( \"error during FTP transfer: \" + ex );"]}]}