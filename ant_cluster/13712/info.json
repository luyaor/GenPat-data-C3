{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79ee215f7723d0f9ac34c7c841ccdfe1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "263bb61d44a092dad9088dc7b4e7c0f2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bd7585adb01844d04d23a6b1707427f9f4a490ad", "commitAfterChange": "ea33301047ba2de74fa062155df4d6337e5d1392", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "signatureAfterChange": "     public static void copyResource(Resource source, Resource dest,                             FilterSetCollection filters, Vector filterChains,                             boolean overwrite, boolean preserveLastModified,                                     boolean append,                                     String inputEncoding, String outputEncoding,                                     Project project, boolean force)         throws IOException", "diff": ["-            destFile = ((FileProvider) dest.as(FileProvider.class)).getFile();", "+            destFile = dest.as(FileProvider.class).getFile();", "-                ((FileProvider) source.as(FileProvider.class)).getFile();", "+                source.as(FileProvider.class).getFile();", "-            Touchable t = (Touchable) dest.as(Touchable.class);", "+            Touchable t = dest.as(Touchable.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741f0c86c013d9b7b0774552ec71b88f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public void merge(Manifest other, boolean overwriteMain,                       boolean mergeClassPaths)          throws ManifestException", "signatureAfterChange": "     public void merge(Manifest other, boolean overwriteMain,                       boolean mergeClassPaths)          throws ManifestException", "diff": ["-             Enumeration e = other.getSectionNames();", "+             Enumeration<String> e = other.getSectionNames();", "-                 String sectionName = (String) e.nextElement();", "-                 Section ourSection = (Section) sections.get(sectionName);", "+                 String sectionName = e.nextElement();", "+                 Section ourSection = sections.get(sectionName);", "-                    = (Section) other.sections.get(sectionName);", "+                    = other.sections.get(sectionName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11e24047e7f8a9069c30abf967fe345", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTest.java", "commitBeforeChange": "32c1f6a73f867f491cfaeac14e2ca2aab167f1ec", "commitAfterChange": "8de81028e45c54b750a0024bf64eaa0ea9e369ea", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static String[] parseTestMethodNamesList(String methodNames)                                             throws IllegalArgumentException", "signatureAfterChange": "     public static String[] parseTestMethodNamesList(String methodNames)                                             throws IllegalArgumentException", "diff": ["-                        result[wordIndex++] = new String(methodNames.substring(wordStartIndex, i));", "+                        result[wordIndex++] = methodNames.substring(wordStartIndex, i);", "-                        result[wordIndex++] = new String(methodNames.substring(wordStartIndex, i));", "+                        result[wordIndex++] = methodNames.substring(wordStartIndex, i);", "-                result[wordIndex++] = new String(methodNames.substring(wordStartIndex, chars.length));", "+                result[wordIndex++] = methodNames.substring(wordStartIndex, chars.length);"]}]}