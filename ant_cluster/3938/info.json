{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62247babeb6a70a1369c10b39c019ab4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "100d4240e4a4a2d19172b051209396b7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No Server Specified\" );", "+            throw new TaskException( \"No Server Specified\" );", "-            throw new BuildException( \"No Userid Specified\" );", "+            throw new TaskException( \"No Userid Specified\" );", "-            throw new BuildException( \"No Password Specified\" );", "+            throw new TaskException( \"No Password Specified\" );", "-            throw new BuildException( \"Can't connect to \" + server );", "+            throw new TaskException( \"Can't connect to \" + server );", "-            TelnetSubTask task = ( TelnetSubTask )tasksToRun.nextElement();", "+            TelnetSubTask task = (TelnetSubTask)tasksToRun.nextElement();", "-                ( ( TelnetRead )task ).setDefaultTimeout( defaultTimeout );", "+                ( (TelnetRead)task ).setDefaultTimeout( defaultTimeout );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19806a1eb8037675591333f3b1d1ce22", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Regexp newRegexp( Project p )         throws BuildException", "signatureAfterChange": "     public Regexp newRegexp( Project p )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            systemDefault = ( String )p.getProperties().get( \"ant.regexp.regexpimpl\" );", "+            systemDefault = (String)p.getProperties().get( \"ant.regexp.regexpimpl\" );", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        throw new BuildException( \"No supported regular expression matcher found\" );", "+        throw new TaskException( \"No supported regular expression matcher found\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "242b38dcb9b578e62232df4500597b31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new BuildException( \"Specify at least one source - a file or a fileset.\" );", "+                new TaskException( \"Specify at least one source - a file or a fileset.\" );", "-            throw new BuildException( \"Use a fileset to touch directories.\" );", "+            throw new TaskException( \"Use a fileset to touch directories.\" );", "-                DateFormat.SHORT,", "-                Locale.US );", "+                                                            DateFormat.SHORT,", "+                                                            Locale.US );", "-                    throw new BuildException( \"Date of \" + dateTime", "-                         + \" results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\" );", "+                    throw new TaskException( \"Date of \" + dateTime", "+                                             + \" results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\" );", "-                throw new BuildException( pe.getMessage(), pe );", "+                throw new TaskException( pe.getMessage(), pe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32926a71a410507b902d748890b0d08d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public RegexpMatcher newRegexpMatcher( Project p )         throws BuildException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher( Project p )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            systemDefault = ( String )p.getProperties().get( \"ant.regexp.regexpimpl\" );", "+            systemDefault = (String)p.getProperties().get( \"ant.regexp.regexpimpl\" );", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        throw new BuildException( \"No supported regular expression matcher found\" );", "+        throw new TaskException( \"No supported regular expression matcher found\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3574a8bb0e5280a991ee8d147ef180c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         private void checkParameters()             throws BuildException", "signatureAfterChange": "         private void checkParameters()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( \"- is not suported for string properties (key:\" + m_key + \")\" );", "+                throw new TaskException( \"- is not suported for string properties (key:\" + m_key + \")\" );", "-                throw new BuildException( \"value and/or default must be specified (key:\" + m_key + \")\" );", "+                throw new TaskException( \"value and/or default must be specified (key:\" + m_key + \")\" );", "-                throw new BuildException( \"key is mandatory\" );", "+                throw new TaskException( \"key is mandatory\" );", "-                throw new BuildException( \"pattern is not suported for string properties (key:\" + m_key + \")\" );", "+                throw new TaskException( \"pattern is not suported for string properties (key:\" + m_key + \")\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4072dfec7dc6e91114b094dbe84dbd8e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"src attribute and/or filesets must be specified\" );", "+            throw new TaskException( \"src attribute and/or filesets must be specified\" );", "-            throw new BuildException(", "+            throw new TaskException(", "-            throw new BuildException( \"Dest must be a directory.\" );", "+            throw new TaskException( \"Dest must be a directory.\" );", "-                throw new BuildException( \"Src must not be a directory.\" +", "-                    \" Use nested filesets instead.\" );", "+                throw new TaskException( \"Src must not be a directory.\" +", "+                                         \" Use nested filesets instead.\" );", "-                FileSet fs = ( FileSet )filesets.elementAt( j );", "+                FileSet fs = (FileSet)filesets.elementAt( j );", "-                    File file = new File( fromDir, files[i] );", "+                    File file = new File( fromDir, files[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42a2ac9dc9aed41a3bac281ce94a808c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void validateAttributes()         throws BuildException", "signatureAfterChange": "     public void validateAttributes()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( message );", "+            throw new TaskException( message );", "-            throw new BuildException( message );", "+            throw new TaskException( message );", "-                 + \"must be specified\";", "-            throw new BuildException( message);", "+                + \"must be specified\";", "+            throw new TaskException( message );", "-            throw new BuildException( message );", "+            throw new TaskException( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438b91daa43ac055e5ece9196547f4aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"src attribute and/or filesets must be specified\" );", "+            throw new TaskException( \"src attribute and/or filesets must be specified\" );", "-            throw new BuildException(", "+            throw new TaskException(", "-            throw new BuildException( \"Dest must be a directory.\" );", "+            throw new TaskException( \"Dest must be a directory.\" );", "-                throw new BuildException( \"Src must not be a directory.\" +", "-                    \" Use nested filesets instead.\" );", "+                throw new TaskException( \"Src must not be a directory.\" +", "+                                         \" Use nested filesets instead.\" );", "-                FileSet fs = ( FileSet )filesets.elementAt( j );", "+                FileSet fs = (FileSet)filesets.elementAt( j );", "-                    File file = new File( fromDir, files[i] );", "+                    File file = new File( fromDir, files[ i ] );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebf9a5faceda9fb73be0dbe2a9ee1f8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public FileNameMapper getImplementation()         throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"one of the attributes type or classname is required\" );", "+            throw new TaskException( \"one of the attributes type or classname is required\" );", "-            throw new BuildException( \"must not specify both type and classname attribute\" );", "+            throw new TaskException( \"must not specify both type and classname attribute\" );", "-                    classpath );", "+                                                        classpath );", "-            FileNameMapper m = ( FileNameMapper )c.newInstance();", "+            FileNameMapper m = (FileNameMapper)c.newInstance();", "-        catch( BuildException be )", "+        catch( TaskException be )", "-            throw new BuildException( \"Error\", t );", "+            throw new TaskException( \"Error\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ae2cbe717fad114f3da0bdd44f5aa2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-             && !\"types\".equals( granularity ) )", "+            && !\"types\".equals( granularity ) )", "-            throw new BuildException( \"Metrics reporting granularity is invalid. Must be one of 'files', 'methods', 'types'\" );", "+            throw new TaskException( \"Metrics reporting granularity is invalid. Must be one of 'files', 'methods', 'types'\" );", "-            throw new BuildException( \"Output XML file must be set via 'tofile' attribute.\" );", "+            throw new TaskException( \"Output XML file must be set via 'tofile' attribute.\" );", "-            throw new BuildException( \"Must set either paths (path element) or files (fileset element)\" );", "+            throw new TaskException( \"Must set either paths (path element) or files (fileset element)\" );", "-            throw new BuildException( \"Cannot set paths (path element) and files (fileset element) at the same time\" );", "+            throw new TaskException( \"Cannot set paths (path element) and files (fileset element) at the same time\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55bcf00fd94c57d1e872509855a664ab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void writeJar( String baseName, File jarfile, Hashtable files,                              String publicId )         throws BuildException", "signatureAfterChange": "     protected void writeJar( String baseName, File jarfile, Hashtable files,                              String publicId )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                        throw new BuildException( \"Could not find manifest file: \" + config.manifest );", "+                        throw new TaskException( \"Could not find manifest file: \" + config.manifest );", "-                        throw new BuildException( \"Could not find default manifest: \" + defaultManifest );", "+                        throw new TaskException( \"Could not find default manifest: \" + defaultManifest );", "-                throw new BuildException( \"Unable to read manifest\", e );", "+                throw new TaskException( \"Unable to read manifest\", e );", "-            throw new BuildException( msg, ioe );", "+            throw new TaskException( msg, ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d6ce130ced0bb7926e593741667740", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/compilers/Kjc.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{String[].class} );", "-            Boolean ok = ( Boolean )compile.invoke( null,", "-                new Object[]{cmd.getArguments()} );", "+                                          new Class[]{String[].class} );", "+            Boolean ok = (Boolean)compile.invoke( null,", "+                                                  new Object[]{cmd.getArguments()} );", "-            throw new BuildException( \"Cannot use kjc compiler, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" CLASSPATH to your kjc archive (kjc.jar).\" );", "+            throw new TaskException( \"Cannot use kjc compiler, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" CLASSPATH to your kjc archive (kjc.jar).\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting kjc compiler: \", ex );", "+                throw new TaskException( \"Error starting kjc compiler: \", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eca9fe2bab940a0296514a3041dda3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         private void checkParameters()             throws BuildException", "signatureAfterChange": "         private void checkParameters()             throws TaskException", "diff": ["-            throws BuildException", "+            throws TaskException", "-                throw new BuildException( \"- is not suported for string properties (key:\" + m_key + \")\" );", "+                throw new TaskException( \"- is not suported for string properties (key:\" + m_key + \")\" );", "-                throw new BuildException( \"value and/or default must be specified (key:\" + m_key + \")\" );", "+                throw new TaskException( \"value and/or default must be specified (key:\" + m_key + \")\" );", "-                throw new BuildException( \"key is mandatory\" );", "+                throw new TaskException( \"key is mandatory\" );", "-                throw new BuildException( \"pattern is not suported for string properties (key:\" + m_key + \")\" );", "+                throw new TaskException( \"pattern is not suported for string properties (key:\" + m_key + \")\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626832a73a914e16a32b51a056e688e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/util/regexp/RegexpFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Regexp newRegexp( Project p )         throws BuildException", "signatureAfterChange": "     public Regexp newRegexp( Project p )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            systemDefault = ( String )p.getProperties().get( \"ant.regexp.regexpimpl\" );", "+            systemDefault = (String)p.getProperties().get( \"ant.regexp.regexpimpl\" );", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        throw new BuildException( \"No supported regular expression matcher found\" );", "+        throw new TaskException( \"No supported regular expression matcher found\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6903116dd2d21a16667a4bba686e620f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public RegexpMatcher newRegexpMatcher( Project p )         throws BuildException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher( Project p )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            systemDefault = ( String )p.getProperties().get( \"ant.regexp.regexpimpl\" );", "+            systemDefault = (String)p.getProperties().get( \"ant.regexp.regexpimpl\" );", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        catch( BuildException be )", "-        {}", "+        catch( TaskException be )", "+        {", "+        }", "-        throw new BuildException( \"No supported regular expression matcher found\" );", "+        throw new TaskException( \"No supported regular expression matcher found\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "728dd3c6b77f153850098bdba06b1557", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/metamata/MMetrics.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-             && !\"types\".equals( granularity ) )", "+            && !\"types\".equals( granularity ) )", "-            throw new BuildException( \"Metrics reporting granularity is invalid. Must be one of 'files', 'methods', 'types'\" );", "+            throw new TaskException( \"Metrics reporting granularity is invalid. Must be one of 'files', 'methods', 'types'\" );", "-            throw new BuildException( \"Output XML file must be set via 'tofile' attribute.\" );", "+            throw new TaskException( \"Output XML file must be set via 'tofile' attribute.\" );", "-            throw new BuildException( \"Must set either paths (path element) or files (fileset element)\" );", "+            throw new TaskException( \"Must set either paths (path element) or files (fileset element)\" );", "-            throw new BuildException( \"Cannot set paths (path element) and files (fileset element) at the same time\" );", "+            throw new TaskException( \"Cannot set paths (path element) and files (fileset element) at the same time\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743b9310fd27453cfb00bfde771ebf32", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/WLRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{String[].class} );", "+                                         new Class[]{String[].class} );", "-            throw new BuildException( \"Cannot use WebLogic rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use WebLogic rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting WebLogic rmic: \", ex );", "+                throw new TaskException( \"Error starting WebLogic rmic: \", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4d3d35bb31b9d1dfb34e6094dd2fe7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute( Project project )         throws BuildException", "signatureAfterChange": "      public void execute( Project project )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Could not find main() method in \" + classname );", "+            throw new TaskException( \"Could not find main() method in \" + classname );", "-            throw new BuildException( \"Could not find \" + classname + \". Make sure you have it in your classpath\" );", "+            throw new TaskException( \"Could not find \" + classname + \". Make sure you have it in your classpath\" );", "-                throw new BuildException( \"Error\", t );", "+                throw new TaskException( \"Error\", t );", "-                throw ( SecurityException )t;", "+                throw (SecurityException)t;", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a0c942da89d9fe51390348c97c7fdb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/CovReport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'tofile' attribute must be set.\" );", "+            throw new TaskException( \"'tofile' attribute must be set.\" );", "-            throw new BuildException( \"'snapshot' attribute must be set.\" );", "+            throw new TaskException( \"'snapshot' attribute must be set.\" );", "-            throw new BuildException( \"'home' attribute must be set to JProbe home directory\" );", "+            throw new TaskException( \"'home' attribute must be set to JProbe home directory\" );", "-            throw new BuildException( \"Cannot find Coverage directory: \" + home );", "+            throw new TaskException( \"Cannot find Coverage directory: \" + home );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc6e3c4db21c1963353be3947890654", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/WLRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{String[].class} );", "+                                         new Class[]{String[].class} );", "-            throw new BuildException( \"Cannot use WebLogic rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use WebLogic rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting WebLogic rmic: \", ex );", "+                throw new TaskException( \"Error starting WebLogic rmic: \", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae147a2cd5a7a304b0151a028178b61e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/net/TelnetTask.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"No Server Specified\" );", "+            throw new TaskException( \"No Server Specified\" );", "-            throw new BuildException( \"No Userid Specified\" );", "+            throw new TaskException( \"No Userid Specified\" );", "-            throw new BuildException( \"No Password Specified\" );", "+            throw new TaskException( \"No Password Specified\" );", "-            throw new BuildException( \"Can't connect to \" + server );", "+            throw new TaskException( \"Can't connect to \" + server );", "-            TelnetSubTask task = ( TelnetSubTask )tasksToRun.nextElement();", "+            TelnetSubTask task = (TelnetSubTask)tasksToRun.nextElement();", "-                ( ( TelnetRead )task ).setDefaultTimeout( defaultTimeout );", "+                ( (TelnetRead)task ).setDefaultTimeout( defaultTimeout );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b28b076f95397406f1c629a71d67d88c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/KaffeRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Boolean ok = ( Boolean )doRmic.invoke( rmic, null );", "+            Boolean ok = (Boolean)doRmic.invoke( rmic, null );", "-            throw new BuildException( \"Cannot use Kaffe rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME or CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use Kaffe rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME or CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting Kaffe rmic: \", ex );", "+                throw new TaskException( \"Error starting Kaffe rmic: \", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18c72e56bf33715a2e848ab2acafd3b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ejb/Ejbc.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"descriptors directory \" + descriptorDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"descriptors directory \" + descriptorDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"dest directory \" + generatedFilesDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"dest directory \" + generatedFilesDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"src directory \" + sourceDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"src directory \" + sourceDirectory.getPath() +", "+                                     \" is not valid\" );", "-            \":\" + generatedFilesDirectory );", "+                                                      \":\" + generatedFilesDirectory );", "-        Java helperTask = ( Java )project.createTask( \"java\" );", "+        Java helperTask = (Java)project.createTask( \"java\" );", "-            args += \" \" + files[i];", "+            args += \" \" + files[ i ];", "-            throw new BuildException( \"Execution of ejbc helper failed\" );", "+            throw new TaskException( \"Execution of ejbc helper failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c46d024102558cd5702f21d74303a244", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new BuildException( \"Specify at least one source - a file or a fileset.\" );", "+                new TaskException( \"Specify at least one source - a file or a fileset.\" );", "-            throw new BuildException( \"Use a fileset to touch directories.\" );", "+            throw new TaskException( \"Use a fileset to touch directories.\" );", "-                DateFormat.SHORT,", "-                Locale.US );", "+                                                            DateFormat.SHORT,", "+                                                            Locale.US );", "-                    throw new BuildException( \"Date of \" + dateTime", "-                         + \" results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\" );", "+                    throw new TaskException( \"Date of \" + dateTime", "+                                             + \" results in negative milliseconds value relative to epoch (January 1, 1970, 00:00:00 GMT).\" );", "-                throw new BuildException( pe.getMessage(), pe );", "+                throw new TaskException( pe.getMessage(), pe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc75e8a1ea4d73e3d78e2482eef690f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public FileNameMapper getImplementation()         throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"one of the attributes type or classname is required\" );", "+            throw new TaskException( \"one of the attributes type or classname is required\" );", "-            throw new BuildException( \"must not specify both type and classname attribute\" );", "+            throw new TaskException( \"must not specify both type and classname attribute\" );", "-                    classpath );", "+                                                        classpath );", "-            FileNameMapper m = ( FileNameMapper )c.newInstance();", "+            FileNameMapper m = (FileNameMapper)c.newInstance();", "-        catch( BuildException be )", "+        catch( TaskException be )", "-            throw new BuildException( \"Error\", t );", "+            throw new TaskException( \"Error\", t );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce71258d0d550558fb479fab7ca05d1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void writeJar( String baseName, File jarfile, Hashtable files,                              String publicId )         throws BuildException", "signatureAfterChange": "     protected void writeJar( String baseName, File jarfile, Hashtable files,                              String publicId )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                        throw new BuildException( \"Could not find manifest file: \" + config.manifest );", "+                        throw new TaskException( \"Could not find manifest file: \" + config.manifest );", "-                        throw new BuildException( \"Could not find default manifest: \" + defaultManifest );", "+                        throw new TaskException( \"Could not find default manifest: \" + defaultManifest );", "-                throw new BuildException( \"Unable to read manifest\", e );", "+                throw new TaskException( \"Unable to read manifest\", e );", "-            throw new BuildException( msg, ioe );", "+            throw new TaskException( msg, ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d84c2afb96bc874cdbfa49f35f7506bf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                     + getTaskName() + \" element \"", "-                     + \"are undefined\";", "-                throw new BuildException( msg );", "+                    + getTaskName() + \" element \"", "+                    + \"are undefined\";", "+                throw new TaskException( msg );", "-                         + \"together with file or resource.\";", "-                    throw new BuildException( msg );", "+                        + \"together with file or resource.\";", "+                    throw new TaskException( msg );", "-                    throw new BuildException( msg );", "+                    throw new TaskException( msg );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                            Project.MSG_WARN );", "+                             Project.MSG_WARN );", "-                        String n = ( String )keys.nextElement();", "+                        String n = (String)keys.nextElement();", "-                throw new BuildException( \"Error\", ex);", "+                throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac349922b7868a9961d7cc6b7ad942f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Definer.java", "commitBeforeChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "commitAfterChange": "b3cc9d80b2398ace0096a303b714bd13b791d9fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                     + getTaskName() + \" element \"", "-                     + \"are undefined\";", "-                throw new BuildException( msg );", "+                    + getTaskName() + \" element \"", "+                    + \"are undefined\";", "+                throw new TaskException( msg );", "-                         + \"together with file or resource.\";", "-                    throw new BuildException( msg );", "+                        + \"together with file or resource.\";", "+                    throw new TaskException( msg );", "-                    throw new BuildException( msg );", "+                    throw new TaskException( msg );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                        Project.MSG_VERBOSE );", "+                         Project.MSG_VERBOSE );", "-                            Project.MSG_WARN );", "+                             Project.MSG_WARN );", "-                        String n = ( String )keys.nextElement();", "+                        String n = (String)keys.nextElement();", "-                throw new BuildException( \"Error\", ex);", "+                throw new TaskException( \"Error\", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db37d5ed6d7d652205fd373070cb823c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ejb/Ejbc.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"descriptors directory \" + descriptorDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"descriptors directory \" + descriptorDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"dest directory \" + generatedFilesDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"dest directory \" + generatedFilesDirectory.getPath() +", "+                                     \" is not valid\" );", "-            throw new BuildException( \"src directory \" + sourceDirectory.getPath() +", "-                \" is not valid\" );", "+            throw new TaskException( \"src directory \" + sourceDirectory.getPath() +", "+                                     \" is not valid\" );", "-            \":\" + generatedFilesDirectory );", "+                                                      \":\" + generatedFilesDirectory );", "-        Java helperTask = ( Java )project.createTask( \"java\" );", "+        Java helperTask = (Java)project.createTask( \"java\" );", "-            args += \" \" + files[i];", "+            args += \" \" + files[ i ];", "-            throw new BuildException( \"Execution of ejbc helper failed\" );", "+            throw new TaskException( \"Execution of ejbc helper failed\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db3d5aaccf4a04c5203ee6f779e1fb40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute( Project project )         throws BuildException", "signatureAfterChange": "      public void execute( Project project )         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"Could not find main() method in \" + classname );", "+            throw new TaskException( \"Could not find main() method in \" + classname );", "-            throw new BuildException( \"Could not find \" + classname + \". Make sure you have it in your classpath\" );", "+            throw new TaskException( \"Could not find \" + classname + \". Make sure you have it in your classpath\" );", "-                throw new BuildException( \"Error\", t );", "+                throw new TaskException( \"Error\", t );", "-                throw ( SecurityException )t;", "+                throw (SecurityException)t;", "-            throw new BuildException( \"Error\", e );", "+            throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e291ca0f37346418832f80ba9d40a80a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/KaffeRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            Boolean ok = ( Boolean )doRmic.invoke( rmic, null );", "+            Boolean ok = (Boolean)doRmic.invoke( rmic, null );", "-            throw new BuildException( \"Cannot use Kaffe rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME or CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use Kaffe rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME or CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting Kaffe rmic: \", ex );", "+                throw new TaskException( \"Error starting Kaffe rmic: \", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f5e0dde8b7dc85b5c02569f1c44a41", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/compilers/Kjc.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                new Class[]{String[].class} );", "-            Boolean ok = ( Boolean )compile.invoke( null,", "-                new Object[]{cmd.getArguments()} );", "+                                          new Class[]{String[].class} );", "+            Boolean ok = (Boolean)compile.invoke( null,", "+                                                  new Object[]{cmd.getArguments()} );", "-            throw new BuildException( \"Cannot use kjc compiler, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" CLASSPATH to your kjc archive (kjc.jar).\" );", "+            throw new TaskException( \"Cannot use kjc compiler, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" CLASSPATH to your kjc archive (kjc.jar).\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting kjc compiler: \", ex );", "+                throw new TaskException( \"Error starting kjc compiler: \", ex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e68872c7a7ce87ab5faab5b3a5c66529", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/sitraka/CovReport.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void checkOptions()         throws BuildException", "signatureAfterChange": "     protected void checkOptions()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( \"'tofile' attribute must be set.\" );", "+            throw new TaskException( \"'tofile' attribute must be set.\" );", "-            throw new BuildException( \"'snapshot' attribute must be set.\" );", "+            throw new TaskException( \"'snapshot' attribute must be set.\" );", "-            throw new BuildException( \"'home' attribute must be set to JProbe home directory\" );", "+            throw new TaskException( \"'home' attribute must be set to JProbe home directory\" );", "-            throw new BuildException( \"Cannot find Coverage directory: \" + home );", "+            throw new TaskException( \"Cannot find Coverage directory: \" + home );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f234432b554f67fc57c8f49d0e56cf93", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void validateAttributes()         throws BuildException", "signatureAfterChange": "     public void validateAttributes()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-            throw new BuildException( message );", "+            throw new TaskException( message );", "-            throw new BuildException( message );", "+            throw new TaskException( message );", "-                 + \"must be specified\";", "-            throw new BuildException( message);", "+                + \"must be specified\";", "+            throw new TaskException( message );", "-            throw new BuildException( message );", "+            throw new TaskException( message );"]}]}