{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "398135b70011625b03d1014c3ca64553", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2271e3e275fd5685a2afbfe9fc17e65a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/UpToDate.java", "commitBeforeChange": "36e5ac64fd1e76c49877ce8bb5596589a2c55ddf", "commitAfterChange": "d99445bb67a0feecbc78238c54ff468fc72d2315", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean eval()", "signatureAfterChange": "     public boolean eval()", "diff": ["-        if (sourceFileSets.size() == 0 && sourceFile == null) {", "+        if (sourceFileSets.size() == 0 && sourceResources.size() == 0", "+            && sourceFile == null) {", "-                                     + \"<srcfiles> element must be set.\");", "+                                     + \"<srcfiles> or <srcresources> element \"", "+                                     + \"must be set.\");", "-        if (sourceFileSets.size() > 0 && sourceFile != null) {", "+        if ((sourceFileSets.size() > 0 || sourceResources.size() > 0)", "+            && sourceFile != null) {", "-                                     + \"element.\");", "+                                     + \"or <srcresources> element.\");", "-        Enumeration e = sourceFileSets.elements();", "-        while (upToDate && e.hasMoreElements()) {", "-            FileSet fs = (FileSet) e.nextElement();", "-            DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-            upToDate = upToDate && scanDir(fs.getDir(getProject()),", "-                                           ds.getIncludedFiles());", "-        }", "-", "+", "+        // filesets are separate from the rest for performance", "+        // reasons.  If we use the code for union below, we'll always", "+        // scan all filesets, even if we know the target is out of", "+        // date after the first test.", "+        Enumeration e = sourceFileSets.elements();", "+        while (upToDate && e.hasMoreElements()) {", "+            FileSet fs = (FileSet) e.nextElement();", "+            DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "+            upToDate = upToDate && scanDir(fs.getDir(getProject()),", "+                                           ds.getIncludedFiles());", "+        }", "+", "+        if (upToDate) {", "+            Resource[] r = sourceResources.listResources();", "+            upToDate = upToDate &&", "+                (ResourceUtils.selectOutOfDateSources(this, r, getMapper(),", "+                                                      getProject()).length", "+                 == 0);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7475a6c1ed16935ca297b8999af050bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "7627a966ee4283bebb43ff4f0b6eeb84236a6019", "commitAfterChange": "c0649769e0063616ae46a2e58a57203bb42a7f8e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "signatureAfterChange": "     protected boolean renameFile(File sourceFile, File destFile, boolean filtering,                                  boolean overwrite) throws IOException, BuildException", "diff": ["-        // ensure that parent dir of dest file exists!", "+        // identical logic lives in FileUtils.rename():", "-        } else if (destFile.isFile() && !getFileUtils().fileNameEquals(sourceFile, destFile)", "-                && !destFile.delete()) {", "-            throw new BuildException(\"Unable to remove existing file \" + destFile);", "+        } else if (destFile.isFile()) {", "+            sourceFile = getFileUtils().normalize(sourceFile.getAbsolutePath()).getCanonicalFile();", "+            destFile = getFileUtils().normalize(destFile.getAbsolutePath());", "+            if (destFile.equals(sourceFile)) {", "+                //no point in renaming a file to its own canonical version...", "+                return true;", "+            }", "+            if (!(sourceFile.equals(destFile.getCanonicalFile()) || destFile.delete())) {", "+                throw new BuildException(\"Unable to remove existing file \" + destFile);", "+            }"]}]}