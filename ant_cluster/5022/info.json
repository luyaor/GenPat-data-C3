{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "921797c99c078d6bd8d188043f363ef0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054f369942b0e0d440ca87810a71261f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/TryCatchTask.java", "commitBeforeChange": "3921f5f07ceaaac3e31db6595f65f7eae357c46c", "commitAfterChange": "16a1e94b65dc7485304a4f5d0f2f14baf6a56c3e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        final ExecutionFrame frame = (ExecutionFrame)getService( ExecutionFrame.class );", "-        final Executor executor = (Executor)getService( Executor.class );", "-", "-            executeTasks( executor, frame, tasks );", "+            executeTasks( tasks );", "-                executeTasks( executor, frame, tasks );", "+                executeTasks( tasks );", "-                executeTasks( executor, frame, tasks );", "+                executeTasks( tasks );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e1b896f309cd208e61c06542fe5580", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/core/IfTask.java", "commitBeforeChange": "3921f5f07ceaaac3e31db6595f65f7eae357c46c", "commitAfterChange": "16a1e94b65dc7485304a4f5d0f2f14baf6a56c3e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        if( ! m_condition.evaluate( getContext() ) )", "+        if( !m_condition.evaluate( getContext() ) )", "-        // TODO - don't use getService()", "-        final ExecutionFrame frame = (ExecutionFrame)getService( ExecutionFrame.class );", "-        final Executor executor = (Executor)getService( Executor.class );", "-", "-        for( int i = 0; i < tasks.length; i++ )", "-        {", "-            final Configuration task = tasks[ i ];", "-            executor.execute( task, frame );", "-        }", "+        executeTasks( tasks );"]}]}