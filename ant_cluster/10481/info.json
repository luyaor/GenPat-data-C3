{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a52b76e1984b1ce0959bbc9ba137d229", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4a4dbe072878a8693b4b1cf8bfb1567", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelperImpl.java", "commitBeforeChange": "092cd9e58fc782bb605411cddc161bb7cec549b8", "commitAfterChange": "6b5c48061a0409b564f51bcf0717e946a0a41556", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "signatureAfterChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "diff": ["-                String path = systemId.substring(5);", "-                int index = path.indexOf(\"file:\");", "-", "-                // we only have to handle these for backward compatibility", "-                // since they are in the FAQ.", "-                while (index != -1) {", "-                    path = path.substring(0, index) + path.substring(index + 5);", "-                    index = path.indexOf(\"file:\");", "-                }", "-", "-                String entitySystemId = path;", "-                index = path.indexOf(\"%23\");", "-                // convert these to #", "-                while (index != -1) {", "-                    path = path.substring(0, index) + \"#\" + path.substring(index + 3);", "-                    index = path.indexOf(\"%23\");", "-                }", "+                String path = fu.fromURI(systemId);", "-                    file = new File(helperImpl.buildFileParent, path);", "+                    file = fu.resolveFile(helperImpl.buildFileParent, path);", "-", "-                    inputSource.setSystemId(\"file:\" + entitySystemId);", "+                    inputSource.setSystemId(fu.toURI(file.getAbsolutePath()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2aa67e6ee9de84b57d49c243c73d9aa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/embed/src/java/org/apache/tools/ant/helper/ProjectHelperImpl2.java", "commitBeforeChange": "c663d8ce457893e7a2c681c44d4cb9c4979f11a2", "commitAfterChange": "c1d3483c0d6e5cc6fe0ee92f613f6e0bee6630e0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "signatureAfterChange": "         public InputSource resolveEntity(String publicId,                                          String systemId)", "diff": ["-                String path = systemId.substring(5);", "-                int index = path.indexOf(\"file:\");", "-                ", "-                // we only have to handle these for backward compatibility", "-                // since they are in the FAQ.", "-                while (index != -1) {", "-                    path = path.substring(0, index) + path.substring(index + 5);", "-                    index = path.indexOf(\"file:\");", "-                }", "-                ", "-                String entitySystemId = path;", "-                index = path.indexOf(\"%23\");", "-                // convert these to #", "-                while (index != -1) {", "-                    path = path.substring(0, index) + \"#\" + path.substring(index + 3);", "-                    index = path.indexOf(\"%23\");", "-                }", "+                String path = ProjectHelperImpl2.fromURI(systemId);", "-                    file = new File(context.buildFileParent, path);", "+                    file = fu.resolveFile(context.buildFileParent, path);", "-                ", "-                    inputSource.setSystemId(\"file:\" + entitySystemId);", "+                    inputSource.setSystemId(ProjectHelperImpl2.toURI(file.getAbsolutePath()));", "-                    context.getProject().log(file.getAbsolutePath()+\" could not be found\", ", "-                                        Project.MSG_WARN);", "+                    context.project.log(file.getAbsolutePath() + \" could not be found\",", "+                            Project.MSG_WARN);", "+"]}]}