{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea0d742560db35250a99692ea560ca05", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8bbfbd88d078633489c3b1a2319348", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/api/DefaultTaskContext.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void putValue( final Object key, final Object value  )         throws AntException", "signatureAfterChange": "     public void putValue( final Object key, final Object value  )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-                throw new AntException( \"Can not set baseDirectory to a non-file value.\",", "+                throw new TaskException( \"Can not set baseDirectory to a non-file value.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52021660b198a8e554053c6a0800e282", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Property.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setValue( final Object value )         throws AntException", "signatureAfterChange": "      public void setValue( final Object value )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Value can not be set multiple times\" );", "+            throw new TaskException( \"Value can not be set multiple times\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52cfaa1c5934e8d35aa6bb485b5b9c7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected ProjectListener createListener( final String listenerName )         throws AntException", "signatureAfterChange": "     protected ProjectListener createListener( final String listenerName )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Error creating the listener \" + listenerName +", "+            throw new TaskException( \"Error creating the listener \" + listenerName +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5366929a1d36b7839ba4bfc8f27300b1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/manager/DefaultProjectManager.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void execute( final Project project,                           final String targetName,                           final TaskContext context,                           final ArrayList done )         throws AntException", "signatureAfterChange": "     private void execute( final Project project,                           final String targetName,                           final TaskContext context,                           final ArrayList done )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Unable to find target \" + targetName );", "+            throw new TaskException( \"Unable to find target \" + targetName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b0abcf8d1a48d3f51ff45fe4dfe4ee4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/RegisterConverter.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          protected URL getURL( final String libName )         throws AntException", "signatureAfterChange": "          protected URL getURL( final String libName )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-                throw new AntException( \"Malformed task-lib parameter \" + m_lib, mue );", "+                throw new TaskException( \"Malformed task-lib parameter \" + m_lib, mue );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80816d5f9d521171d337a533ce2e3701", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/api/DefaultTaskContext.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object resolveValue( final String property )         throws AntException", "signatureAfterChange": "     public Object resolveValue( final String property )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Error resolving \" + property + \" due to \" + pe.getMessage(),", "+            throw new TaskException( \"Error resolving \" + property + \" due to \" + pe.getMessage(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf11a4a465fa4c69d6eabae4aa86fdb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/util/Condition.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public boolean evaluate( final Context context )         throws AntException", "signatureAfterChange": "          public boolean evaluate( final Context context )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Error resolving \" + m_condition, pe );", "+            throw new TaskException( \"Error resolving \" + m_condition, pe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba8560a001054653e789057f08b1eb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/AbstractResourceRegisterer.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected URL getURL( final String libName )         throws AntException", "signatureAfterChange": "      protected URL getURL( final String libName )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-                throw new AntException( \"Malformed task-lib parameter \" + m_lib, mue );", "+                throw new TaskException( \"Malformed task-lib parameter \" + m_lib, mue );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9a862b7c58051558939c9599d3415a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/AntCall.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws AntException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Target attribute must be specified\" );", "+            throw new TaskException( \"Target attribute must be specified\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfcd789ee61f20e4b2c79362072a3d5c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected void execute( final String[] args )         throws Exception", "signatureAfterChange": "      protected void execute( final String[] args )         throws Exception", "diff": ["-            throw new AntException( \"ant-home (\" + m_homeDir + \") is not a directory\" );", "+            throw new TaskException( \"ant-home (\" + m_homeDir + \") is not a directory\" );", "-            throw new AntException( \"File \" + buildFile + \" is not a file or doesn't exist\" );", "+            throw new TaskException( \"File \" + buildFile + \" is not a file or doesn't exist\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c277f444822ac9ff84a5c128849adbc1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/RegisterTasklet.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected void registerResource( final String name,                                       final String classname,                                       final URL url )         throws AntException, RegistryException", "signatureAfterChange": "     protected void registerResource( final String name,                                       final String classname,                                       final URL url )         throws TaskException, RegistryException", "diff": ["-        throws AntException, RegistryException ", "+        throws TaskException, RegistryException ", "-                throw new AntException( \"Failed deploying \" + name + \" from \" + url, de );", "+                throw new TaskException( \"Failed deploying \" + name + \" from \" + url, de );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd89bc0a7a1d921b46c51d502d998ca2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Pattern.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void verifyConditionNull()         throws AntException", "signatureAfterChange": "     protected void verifyConditionNull()         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Can only set one of if/else for pattern data type\" );", "+            throw new TaskException( \"Can only set one of if/else for pattern data type\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64a9a2079af3a57e3f424cd60aec018", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/core/RegisterDataType.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected void registerResource( final String name,                                       final String classname,                                       final URL url )         throws AntException, RegistryException", "signatureAfterChange": "     protected void registerResource( final String name,                                      final String classname,                                      final URL url )         throws TaskException, RegistryException", "diff": ["-    protected void registerResource( final String name, ", "-                                     final String classname, ", "+    protected void registerResource( final String name,", "+                                     final String classname,", "-        throws AntException, RegistryException ", "+        throws TaskException, RegistryException", "-                throw new AntException( \"Failed deploying \" + name + \" from \" + url, de );", "+                throw new TaskException( \"Failed deploying \" + name + \" from \" + url, de );", "-            m_dataTypeEngine.getRegistry().register( name, locator ); ", "+            m_dataTypeEngine.getRegistry().register( name, locator );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f371beef2ce0c5bfda0a6f2af3b37946", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "6f3f9cca3e46d9b295f612635ddc47d887d760ce", "commitAfterChange": "d32c26fc168f32a03444486b5b2b23b19564bb9b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected Logger createLogger( final String logLevel )         throws AntException", "signatureAfterChange": "     protected Logger createLogger( final String logLevel )         throws TaskException", "diff": ["-        throws AntException", "+        throws TaskException", "-            throw new AntException( \"Unknown log level - \" + logLevel );", "+            throw new TaskException( \"Unknown log level - \" + logLevel );"]}]}