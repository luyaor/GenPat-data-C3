{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d248bafeb44b3a8c8a3cac8fda1fe828", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a1bf7662660d03cd76e204685ddf1e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "4d706d4ad41dedc3f62d65ff72e93d05345d9a70", "commitAfterChange": "028ba47c8246f510012ef061d879d05240b90c71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["+        return fromURIJava13(uri);", "-        String result = null;", "-        //result = fromUriJava14(uri);", "-        if (result == null) {", "-            result = fromURIJava13(uri);", "-        }", "-        return result;", "+        // XXX should use java.net.URI now that we can rely on 1.4...", "+        // but check for UNC-related regressions, e.g. #42275", "+        // (and remember that \\\\server\\share\\file -> file:////server/share/file", "+        // rather than -> file://server/share/file as it should;", "+        // fixed only in JDK 7's java.nio.file.Path.toUri)", "+        // return fromUriJava14(uri);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7641633d0eb480d5380ceaf22c4328", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "d6ec4ccf3cb256b133215abe7db08131c4b58a4d", "commitAfterChange": "1f0bd8f40148f09a029ba4a4d61a9c1293199b53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static String fromURI(String uri)", "signatureAfterChange": "     public static String fromURI(String uri)", "diff": ["-        // #8031: first try Java 1.4.", "+        // #buzilla8031: first try Java 1.4.", "+        String result = null;", "+        //result = fromUriJava14(uri);", "+        if (result == null) {", "+            result = fromURIJava13(uri);", "+        }", "+        return result;", "+    }", "-                    = uriClazz.getMethod(\"create\", new Class[] {String.class});", "-                Object uriObj = createMethod.invoke(null, new Object[] {encodeURI(uri)});", "-                    = File.class.getConstructor(new Class[] {uriClazz});", "-                File f = (File) fileConst.newInstance(new Object[] {uriObj});", "-                    throw new IllegalArgumentException(\"Bad URI \"+uri+ \":\"+e2.getMessage(),e2);", "-        return fromURIJava13(uri);"]}]}