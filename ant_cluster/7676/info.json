{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02c24193a030bae0fe26d2b443ec79f8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0813cc37c6c5bd4040c89a585b731298", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      protected void loadEnvironment( String prefix )         throws TaskException", "signatureAfterChange": "      protected void loadEnvironment( String prefix )         throws TaskException", "diff": ["-        Vector osEnv = Execute.getProcEnvironment();", "-        for( Enumeration e = osEnv.elements(); e.hasMoreElements(); )", "+        ArrayList osEnv = Execute.getProcEnvironment();", "+        for( Iterator e = osEnv.iterator(); e.hasNext(); )", "-            String entry = (String)e.nextElement();", "+            String entry = (String)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50a0d5034263a7f1db9763f4c7135188", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJLocalUtil.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void logFiles( Vector fileNames, String fileType )", "signatureAfterChange": "     private void logFiles( ArrayList fileNames, String fileType )", "diff": ["-    private void logFiles( Vector fileNames, String fileType )", "+    private void logFiles( ArrayList fileNames, String fileType )", "-        for( Enumeration e = fileNames.elements(); e.hasMoreElements(); )", "+        for( Iterator e = fileNames.iterator(); e.hasNext(); )", "-            log( \"    \" + e.nextElement(), MSG_VERBOSE );", "+            log( \"    \" + e.next(), MSG_VERBOSE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598abb1c056cfff0db6718479cfb1634", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJWorkspaceScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void scan()", "signatureAfterChange": "     public void scan()", "diff": ["-        Vector matchingProjects = findMatchingProjects();", "-        for( Enumeration e = matchingProjects.elements(); e.hasMoreElements(); )", "+        ArrayList matchingProjects = findMatchingProjects();", "+        for( Iterator e = matchingProjects.iterator(); e.hasNext(); )", "-            Project project = (Project)e.nextElement();", "+            Project project = (Project)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76a88d7684e10077ec4a1d17d486140d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJLocalUtil.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void logFiles( Vector fileNames, String fileType )", "signatureAfterChange": "     private void logFiles( ArrayList fileNames, String fileType )", "diff": ["-    private void logFiles( Vector fileNames, String fileType )", "+    private void logFiles( ArrayList fileNames, String fileType )", "-        for( Enumeration e = fileNames.elements(); e.hasMoreElements(); )", "+        for( Iterator e = fileNames.iterator(); e.hasNext(); )", "-            log( \"    \" + e.nextElement(), MSG_VERBOSE );", "+            log( \"    \" + e.next(), MSG_VERBOSE );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd3c159a4d55c23f86b81af698cf916", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        Vector files = getFileList();", "+        ArrayList files = getFileList();", "-            Enumeration fileEnum = files.elements();", "+            Iterator fileEnum = files.iterator();", "-            while( fileEnum.hasMoreElements() )", "+            while( fileEnum.hasNext() )", "-                sb.append( fileEnum.nextElement() ).append( \"\\n\" );", "+                sb.append( fileEnum.next() ).append( \"\\n\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae943ab5367a88ba2899512ce5f3eaa3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/Cab.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        Vector files = getFileList();", "+        ArrayList files = getFileList();", "-            Enumeration fileEnum = files.elements();", "+            Iterator fileEnum = files.iterator();", "-            while( fileEnum.hasMoreElements() )", "+            while( fileEnum.hasNext() )", "-                sb.append( fileEnum.nextElement() ).append( \"\\n\" );", "+                sb.append( fileEnum.next() ).append( \"\\n\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87e39982e3e94527614449a98a98238", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      protected void loadEnvironment( String prefix )         throws TaskException", "signatureAfterChange": "      protected void loadEnvironment( String prefix )         throws TaskException", "diff": ["-        Vector osEnv = Execute.getProcEnvironment();", "-        for( Enumeration e = osEnv.elements(); e.hasMoreElements(); )", "+        ArrayList osEnv = Execute.getProcEnvironment();", "+        for( Iterator e = osEnv.iterator(); e.hasNext(); )", "-            String entry = (String)e.nextElement();", "+            String entry = (String)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2911c9a398075ed086f9e35cf7c7693", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJWorkspaceScanner.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void scan()", "signatureAfterChange": "     public void scan()", "diff": ["-        Vector matchingProjects = findMatchingProjects();", "-        for( Enumeration e = matchingProjects.elements(); e.hasMoreElements(); )", "+        ArrayList matchingProjects = findMatchingProjects();", "+        for( Iterator e = matchingProjects.iterator(); e.hasNext(); )", "-            Project project = (Project)e.nextElement();", "+            Project project = (Project)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e2f32908e4be010e442e0d178dd711", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJRemoteUtil.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void loadProjects( Vector projectDescriptions )", "signatureAfterChange": "     public void loadProjects( ArrayList projectDescriptions )", "diff": ["-    public void loadProjects( Vector projectDescriptions )", "+    public void loadProjects( ArrayList projectDescriptions )", "-            for( Enumeration e = projectDescriptions.elements(); e.hasMoreElements(); )", "+            for( Iterator e = projectDescriptions.iterator(); e.hasNext(); )", "-                VAJProjectDescription pd = (VAJProjectDescription)e.nextElement();", "+                VAJProjectDescription pd = (VAJProjectDescription)e.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf6ed7ed1f648056d0b356f9a109340", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/ide/VAJRemoteUtil.java", "commitBeforeChange": "1ea766b31d257946420ddd2a56581f7a21d3c2cd", "commitAfterChange": "5f6832bd82418c0d62e243e5d6ae5dcdb95b7446", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void loadProjects( Vector projectDescriptions )", "signatureAfterChange": "     public void loadProjects( ArrayList projectDescriptions )", "diff": ["-    public void loadProjects( Vector projectDescriptions )", "+    public void loadProjects( ArrayList projectDescriptions )", "-            for( Enumeration e = projectDescriptions.elements(); e.hasMoreElements(); )", "+            for( Iterator e = projectDescriptions.iterator(); e.hasNext(); )", "-                VAJProjectDescription pd = (VAJProjectDescription)e.nextElement();", "+                VAJProjectDescription pd = (VAJProjectDescription)e.next();"]}]}