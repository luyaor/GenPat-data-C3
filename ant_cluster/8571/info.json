{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2db6dc3c69f793a881004def8fd7c6fb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4018755b0e824ad90f6aac087fc4bdf6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a252eb85435070911a166bc108952067a9a2d061", "commitAfterChange": "e2a75898e88825b87310be19070b68f967ae000c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     private void scandir(File dir, String vpath, boolean fast)", "diff": ["+", "+        if (newfiles == null) {", "+            /*", "+             * two reasons are mentioned in the API docs for File.list", "+             * (1) dir is not a directory. This is impossible as", "+             *     we wouldn't get here in this case.", "+             * (2) an IO error occurred (why doesn't it throw an exception ", "+             *     then???)", "+             */", "+            throw new BuildException(\"IO error scanning directory\"", "+                                     + dir.getAbsolutePath());", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "555cd46ebafb56d169089bd0d3d475dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/filters/ReplaceTokens.java", "commitBeforeChange": "d67398ecca6c48d849fb8ce9cd1e2d1dd2b16d6c", "commitAfterChange": "17f083129774fe6e3bdda92133fd1d0adda7a48d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private final void initialize()", "signatureAfterChange": "     private final void initialize()", "diff": ["+                        String value = params[i].getValue();", "+                            if (value.length() == 0) {", "+                                throw new BuildException(\"Begin token cannot \" ", "+                                    + \"be empty\");", "+                            }", "+                            if (value.length() == 0) {", "+                                throw new BuildException(\"End token cannot \" ", "+                                    + \"be empty\");", "+                            }"]}]}