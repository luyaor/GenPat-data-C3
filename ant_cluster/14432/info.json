{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17d63aaf16fc075961575a2ea364999a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487aac0ec8b5779a7be53b7cac74aacf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SubAntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testMultipleTargets()", "signatureAfterChange": "          @Test     public void testMultipleTargets()", "diff": ["+    @Test", "-        executeTarget(\"multipleTargets\");", "-        assertLogContaining(\"test1-one\");", "-        assertLogContaining(\"test1-two\");", "-        assertLogContaining(\"test2-one\");", "-        assertLogContaining(\"test2-two\");", "+        buildRule.executeTarget(\"multipleTargets\");", "+        assertContains(\"test1-one\", buildRule.getLog());", "+        assertContains(\"test1-two\", buildRule.getLog());", "+        assertContains(\"test2-one\", buildRule.getLog());", "+        assertContains(\"test2-two\", buildRule.getLog());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af823c89d94e9fbc82851ed6b417880", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void testPropertySet()", "signatureAfterChange": "      @Test     public void testPropertySet()", "diff": ["+    @Test", "-        executeTarget(\"test-propertyset\");", "-        assertTrue(getLog().indexOf(\"test1 is ${test1}\") > -1);", "-        assertTrue(getLog().indexOf(\"test2 is ${test2}\") > -1);", "-        assertTrue(getLog().indexOf(\"test1.x is 1\") > -1);", "+        buildRule.executeTarget(\"test-propertyset\");", "+        assertTrue(buildRule.getLog().indexOf(\"test1 is ${test1}\") > -1);", "+        assertTrue(buildRule.getLog().indexOf(\"test2 is ${test2}\") > -1);", "+        assertTrue(buildRule.getLog().indexOf(\"test1.x is 1\") > -1);"]}]}