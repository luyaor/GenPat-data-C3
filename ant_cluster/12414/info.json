{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00713b372f5914cabfbd551b4e080903", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8996eea43e9c3158bb951670e73d3cf6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/EventToActionMapper.java", "commitBeforeChange": "37b3d25cc8c65444ab2cbb5c0ff153dccf56c789", "commitAfterChange": "2d4bfedfb63f054542debd85410e53916fa502f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void applyEvent(EventObject event)", "signatureAfterChange": "     public void applyEvent(EventObject event)", "diff": ["+", "+        vals = (List) _checkedTrueOn.get(event.getClass());", "+        changeChecked(vals, true);", "+", "+        vals = (List) _checkedFalseOn.get(event.getClass());", "+        changeChecked(vals, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9385caa8dbfee79af1b4b278e7f1ad87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/depend/AntAnalyzer.java", "commitBeforeChange": "270394a09fddda0ea9ffa2330956c5f399ab840f", "commitAfterChange": "6bd8d6e938a45868902ecd1092858e8372933c7c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void determineDependencies(Vector files, Vector classes)", "signatureAfterChange": "     protected void determineDependencies(Vector files, Vector classes)", "diff": ["-        int maxCount = isClosureRequired() ? MAX_LOOPS : 2;", "+        int maxCount = isClosureRequired() ? MAX_LOOPS : 1;", "+        Hashtable analyzedDeps = null;", "-            Hashtable analyzedDeps = new Hashtable();", "+            analyzedDeps = new Hashtable();", "-                            String entryName ", "+                            String entryName", "-                            ZipEntry entry = new ZipEntry(entryName);                                ", "-                            inStream ", "-                                = zipFile.getInputStream(entry);                                 ", "+                            ZipEntry entry = new ZipEntry(entryName);", "+                            inStream", "+                                = zipFile.getInputStream(entry);", "+        // pick up the last round of dependencies that were determined", "+        Enumeration depsEnum = analyzedDeps.elements();", "+        while (depsEnum.hasMoreElements()) {", "+            String className = (String) depsEnum.nextElement();", "+            dependencies.put(className, className);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94577a3227d5ca4d1cb04a4a94c320da", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tstamp.java", "commitBeforeChange": "ea39aec3104fb601050257534c54eba3f4d765b5", "commitAfterChange": "aa9e0c2342b992df94941da524d8b8f13a1df840", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+            ", "+            Enumeration i = customFormats.elements();", "+            while(i.hasMoreElements())", "+            {", "+                CustomFormat cts = (CustomFormat)i.nextElement();", "+                cts.execute(project,d);", "+            }", "+            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de779e59c04ea40571c1ba20cd1f33e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ManifestTask.java", "commitBeforeChange": "781433259a76bc117f5a824e95b5be1de64eac7f", "commitAfterChange": "4462d806089e69c25b2a09fa31060915d3fef1da", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addConfiguredSection(Manifest.Section section)          throws ManifestException", "signatureAfterChange": "     public void addConfiguredSection(Manifest.Section section)          throws ManifestException", "diff": ["+        Enumeration attributeKeys = section.getAttributeKeys();", "+        while (attributeKeys.hasMoreElements()) {", "+            Attribute attribute = section.getAttribute((String)attributeKeys.nextElement());", "+            checkAttribute(attribute);", "+        }"]}]}