{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a92a637fb15a17274da18c1f9296d02", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b757774ce5e25529bd779bc51eb407", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "b17f72b88269697a5ebe0731a49a37ca3f1d18ba", "commitAfterChange": "d754a20c3fb29379494a2411bbd69ed876fb9e7a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     public String toURI(String path)", "signatureAfterChange": "     public String toURI(String path)", "diff": ["-        // #8031: first try Java 1.4.", "-        Class uriClazz = null;", "-        try {", "-            uriClazz = Class.forName(\"java.net.URI\");", "-        } catch (ClassNotFoundException e) {", "-            // OK, Java 1.3.", "-        }", "-        if (uriClazz != null) {", "-            try {", "-                File f = new File(path).getAbsoluteFile();", "-                java.lang.reflect.Method toURIMethod = File.class.getMethod(\"toURI\", new Class[0]);", "-                Object uriObj = toURIMethod.invoke(f, new Object[] {});", "-                java.lang.reflect.Method toASCIIStringMethod", "-                        = uriClazz.getMethod(\"toASCIIString\", new Class[0]);", "-                return (String) toASCIIStringMethod.invoke(uriObj, new Object[] {});", "-            } catch (Exception e) {", "-                // Reflection problems? Should not happen, debug.", "-                e.printStackTrace();", "-            }", "-        }", "-        boolean isDir = new File(path).isDirectory();", "-", "-        StringBuffer sb = new StringBuffer(\"file:\");", "-", "-        path = resolveFile(null, path).getPath();", "-        sb.append(\"//\");", "-        // add an extra slash for filesystems with drive-specifiers", "-        if (!path.startsWith(File.separator)) {", "-            sb.append(\"/\");", "-        }", "-        path = path.replace('\\\\', '/');", "-        try {", "-            sb.append(Locator.encodeURI(path));", "-        } catch (UnsupportedEncodingException exc) {", "-            throw new BuildException(exc);", "-        }", "-        if (isDir && !path.endsWith(\"/\")) {", "-            sb.append('/');", "-        }", "-        return sb.toString();", "+        return new File(path).getAbsoluteFile().toURI().toASCIIString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fddeb19094365e083112185dcc1c4975", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "6b3d8a02956aad55938df6c7a1b2994a4acc5f6a", "commitAfterChange": "fe4a5cb02940376fddc661302141394be20d1f02", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static void configureProject(Project project, File buildFile)         throws BuildException", "signatureAfterChange": "     public static void configureProject(Project project, File buildFile) throws BuildException", "diff": ["-    public static void configureProject(Project project, File buildFile)", "-        throws BuildException", "-    {", "-        // XXX", "-        // need to get rid of the DOM layer and use SAX", "-        Document doc;", "-", "-        try {", "-            doc=Parser.getParser(project).parse(buildFile);", "-        } catch (IOException ioe) {", "-            String msg = \"Can't open config file: \" + buildFile +", "-                \" due to: \" + ioe;", "-            throw new BuildException(msg);", "-        } catch (SAXException se) {", "-            String msg = \"Can't open config file: \" + buildFile +", "-                \" due to: \" + se;", "-            throw new BuildException(msg);", "-        }", "-", "-        Element root = doc.getDocumentElement();", "-", "-        // sanity check, make sure that we have the right element", "-        // as we aren't validating the input", "-", "-        if (!root.getTagName().equals(\"project\")) {", "-            String msg = \"Config file is not of expected XML type\";", "-            throw new BuildException(msg);", "-        }", "-", "-        project.setDefaultTarget(root.getAttribute(\"default\"));", "-", "-        String name = root.getAttribute(\"name\");", "-        project.setName(name);", "-        if (name != null) project.addReference(name, project);", "-", "-        String id = root.getAttribute(\"id\");", "-        if (id != null) project.addReference(id, project);", "-", "-        String baseDir = project.getProperty(\"basedir\");", "-        if (baseDir == null) {", "-            baseDir = root.getAttribute(\"basedir\");", "-            if (baseDir.equals(\"\")) {", "-                // Using clunky JDK1.1 methods here", "-                baseDir = new File(buildFile.getAbsolutePath()).getParent();", "-            }", "-        }", "-        project.setBasedir(baseDir);", "-", "-        // set up any properties that may be in the config file", "-", "-        //      configureProperties(project, root);", "-", "-        // set up any task defs that may be in the config file", "-", "-        //      configureTaskDefs(project, root);", "-", "-        // set up the taskdefs, properties, and targets into the project", "-        configureProject(project, root);", "+     */", "+    public static void configureProject(Project project, File buildFile) throws BuildException {", "+        new ProjectHelper(project, buildFile).parse();"]}]}