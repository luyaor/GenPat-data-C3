{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "164da0c6e1b7a0a52b73cd9a745c3b17", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1968637af62aaa3552bd4d1578ed225d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Launcher.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private URL[] getLibPathURLs(String cpString, List<String> libPaths)         throws MalformedURLException", "signatureAfterChange": "     private URL[] getLibPathURLs(final String cpString, final List<String> libPaths)         throws MalformedURLException", "diff": ["-    private URL[] getLibPathURLs(String cpString, List<String> libPaths)", "+    private URL[] getLibPathURLs(final String cpString, final List<String> libPaths)", "-        List<URL> libPathURLs = new ArrayList<URL>();", "+        final List<URL> libPathURLs = new ArrayList<URL>();", "-        for (String libPath : libPaths) {", "+        for (final String libPath : libPaths) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1cf602d9db18af2c7e07280951c166", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/config/AntConfig.java", "commitBeforeChange": "58257e4ff6cc42fbd00bdf71cb1ecce4b1e117cc", "commitAfterChange": "cba254e641320b3864c7d81345b5c1d1f8fe79dc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List getLibraryPathList(String libraryId)", "signatureAfterChange": "     public void addTask(BuildElement task)", "diff": ["-    public List getLibraryPathList(String libraryId) {", "-        List libraryPathList = (List) libPaths.get(libraryId);", "-        if (libraryPathList == null) {", "-            libraryPathList = new ArrayList();", "-            libPaths.put(libraryId, libraryPathList);", "-        }", "-        return libraryPathList;", "-    }", "+    public void addTask(BuildElement task) {", "+        tasks.add(task);"]}]}