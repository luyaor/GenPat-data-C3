{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2199c39f13fb51df83ff72fbad2d66c0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "444d106fd054fcb606954e0cb9a9dbd8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/antlib/AntLibManager.java", "commitBeforeChange": "c0ddb311373dc9fe32a78a15a68c4587bbb7566d", "commitAfterChange": "69d9b9a49622889f44d6792faf00f886857828d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "signatureAfterChange": "     public Map configLibraries(InitConfig initConfig, Map librarySpecs,                                 Map libraries, Map libPathsMap)          throws ExecutionException", "diff": ["-    public void configLibraries(InitConfig initConfig, Map librarySpecs,", "+    public Map configLibraries(InitConfig initConfig, Map librarySpecs,", "+        Map newLibraries = new HashMap();", "-                    configuring, libraries, libPathsMap);", "+                    configuring, libraries, newLibraries, libPathsMap);", "+        ", "+        return newLibraries;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea59a33585f76194297e69ccdb1359d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/build/Patch.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void buildCommand( final Commandline cmd )", "signatureAfterChange": "      private Execute buildCommand(  )", "diff": ["-    private void buildCommand( final Commandline cmd )", "+    private Execute buildCommand(  )", "+        final Execute cmd = new Execute();", "+        return cmd;"]}]}