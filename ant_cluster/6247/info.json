{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa784c6e8cbf7b052805df517c5d434a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c0bf77147aea3529cdd315da18f62b9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XSLTProcess.java", "commitBeforeChange": "5800b026fac0179cb373c1c85261c04bf2b54e8e", "commitAfterChange": "88f1be2d0462de59e99bf085522756a647195248", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void processResources(File stylesheet)", "signatureAfterChange": "     private void processResources(Resource stylesheet)", "diff": ["-    private void processResources(File stylesheet) {", "-\tIterator iter = resources.iterator();", "-\twhile (iter.hasNext()) {", "-\t    Resource r = (Resource) iter.next();", "-\t    if (!r.isExists()) {", "-\t\tcontinue;", "-\t    }", "-\t    File base = baseDir;", "-\t    String name = r.getName();", "-\t    if (r instanceof FileResource) {", "-\t\tFileResource f = (FileResource) r;", "-\t\tbase = f.getBaseDir();", "-\t\tif (base == null) {", "-\t\t    name = f.getFile().getAbsolutePath();", "-\t\t}", "-\t    }", "-\t    process(base, name, destDir, stylesheet);", "-\t}", "+    private void processResources(Resource stylesheet) {", "+        Iterator iter = resources.iterator();", "+        while (iter.hasNext()) {", "+            Resource r = (Resource) iter.next();", "+            if (!r.isExists()) {", "+                continue;", "+            }", "+            File base = baseDir;", "+            String name = r.getName();", "+            if (r instanceof FileResource) {", "+                FileResource f = (FileResource) r;", "+                base = f.getBaseDir();", "+                if (base == null) {", "+                    name = f.getFile().getAbsolutePath();", "+                }", "+            }", "+            process(base, name, destDir, stylesheet);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6e8b7f610e1199901be818debed1b2b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jar.java", "commitBeforeChange": "39734fdcece949c4acffdb69416c2407b959ffaf", "commitAfterChange": "a17032a42a83e78686c38db27276919022833c2c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private Manifest createManifest()         throws BuildException", "signatureAfterChange": "      private Manifest createManifest()         throws BuildException", "diff": ["-            Manifest finalManifest = Manifest.getDefaultManifest();", "-", "+            }", "+", "+            // fileset manifest must come even before the default", "+            // manifest if mergewithoutmain is selected and there is", "+            // no explicit manifest specified - otherwise the Main", "+            // section of the fileset manifest is still merged to the", "+            // final manifest.", "+            boolean mergeFileSetFirst = !mergeManifestsMain", "+                && filesetManifest != null", "+                && configuredManifest == null && manifest == null;", "+", "+            Manifest finalManifest;", "+            if (mergeFileSetFirst) {", "+                finalManifest = new Manifest();", "+                finalManifest.merge(filesetManifest, false, mergeClassPaths);", "+                finalManifest.merge(Manifest.getDefaultManifest(),", "+                                    true, mergeClassPaths);", "+            } else {", "+                finalManifest = Manifest.getDefaultManifest();", "-            finalManifest.merge(filesetManifest, false, mergeClassPaths);", "+            if (!mergeFileSetFirst) {", "+                finalManifest.merge(filesetManifest, false, mergeClassPaths);", "+            }"]}]}