{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c537bb2782be860da9f6f7da192afbd9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a8f817fa34444fe79bbff5f06085c3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelper.java", "commitBeforeChange": "84db1e8e167c210eea1b9e08118965c9cfbbe50a", "commitAfterChange": "54d745c6c2eedbfbecc0e14610f786f16c2bc996", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static void parsePropertyString(String value, Vector fragments,                                             Vector propertyRefs)         throws BuildException", "signatureAfterChange": "     public static void parsePropertyString(String value, Vector fragments,                                             Vector propertyRefs)         throws BuildException", "diff": ["-            //TODO, this check could me modified to go if pos>prev;", "+            //TODO, this check could be modified to go if pos>prev;", "+                /*", "+                */", "+                if(value.charAt(pos + 1) == '$') {", "+                    //backwards compatibility two $ map to one mode", "+                    fragments.addElement(\"$\");", "+                    prev = pos + 2;", "+                } else {", "+                    //new behaviour: $X maps to $X for all values of X!='$'", "+                    fragments.addElement(value.substring(pos, pos + 2));", "+                    prev = pos + 2;", "+                }", "+                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a862075cf230224ea294f80ef427607", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "52b0cf00a3282c079c433c3fbf8675be7277c85c", "commitAfterChange": "04c60dbd61cbc88bc7ae0ef7feb2907664d6ebb5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "+                DirectoryScanner ds = null;", "+                try {", "+                    ds = fs.getDirectoryScanner(getProject());", "+                } catch (BuildException e) {", "+                    if (failonerror ", "+                        || !e.getMessage().endsWith(\" not found.\")) {", "+                        throw e;", "+                    } else {", "+                        log(\"Warning: \" + e.getMessage());", "+                        continue;", "+                    }", "+                }", "+                "]}]}