{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "564d3e0aac2a5c6ee1339d15ad80f190", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe69d2cc16737dc08e998028567d057", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHExec.java", "commitBeforeChange": "c873f165a416016928b2a63d1300520e7821920e", "commitAfterChange": "fdae4b3eaec0822c0ab1138b9ef8c4de28b2b0b8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (command == null) {", "-            throw new BuildException(\"Command is required.\");", "+        if (command == null && commandResource == null) {", "+            throw new BuildException(\"Command or commandFile is required.\");", "+        /* called once */", "+        if (command != null) {", "+            executeCommand(command);", "+        } else { // read command resource and execute for each command", "+            try {", "+                BufferedReader br = new BufferedReader(new InputStreamReader(commandResource.getInputStream()));", "+                String cmd;", "+                while((cmd = br.readLine()) != null) {", "+                    log(\"cmd : \"+cmd, Project.MSG_INFO);", "+                    executeCommand(cmd);", "+                }", "+                FileUtils.close(br);", "+            } catch (IOException e) {", "+                throw new BuildException(e);", "+            }", "+        }", "+    }", "-            // execute the command", "-            final ChannelExec channel = (ChannelExec) session.openChannel(\"exec\");", "-            channel.setCommand(command);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be48926ea7146f5669af5ecf51b8b1fd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "a9aa3e7efe1a4e4437f575079a89f915936b95dd", "commitAfterChange": "c341e8606d84afbac9fbe08b9814bbb0bf826e3b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     protected final void addResources(FileSet fileset, Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "signatureAfterChange": "     protected final void addResources(FileSet fileset, Resource[] resources,                                       ZipOutputStream zOut)         throws IOException", "diff": ["-                if (resources[i].isDirectory() && !name.endsWith(\"/\")) {", "-                    name = name + \"/\";", "-                }", "-                if (!doFilesonly && !dealingWithFiles", "-                    && resources[i].isDirectory()", "-                    && !zfs.hasDirModeBeenSet()) {", "-                    int nextToLastSlash = name.lastIndexOf(\"/\",", "-                                                           name.length() - 2);", "-                    if (nextToLastSlash != -1) {", "-                        addParentDirs(base, name.substring(0,", "-                                                           nextToLastSlash + 1),", "-                                      zOut, prefix, dirMode);", "+                if (resources[i].isDirectory()) {", "+                    if (doFilesonly) {", "+                        continue;", "-                    if (zf != null) {", "-                        ZipEntry ze = zf.getEntry(resources[i].getName());", "-                        int unixMode = ze.getUnixMode();", "-                        if ((unixMode == 0 || unixMode == UnixStat.DIR_FLAG)", "-                            && !preserve0Permissions) {", "-                            unixMode = dirMode;", "-                        }", "-                        addParentDirs(base, name, zOut, prefix,", "-                                      unixMode);", "-                    } else {", "-                        ArchiveResource tr = (ArchiveResource) resources[i];", "-                        addParentDirs(base, name, zOut, prefix,", "-                                      tr.getMode());", "-                    }", "+                    int thisDirMode = zfs != null && zfs.hasDirModeBeenSet()", "+                        ? dirMode : getUnixMode(resources[i], zf, dirMode);", "+                    addDirectoryResource(resources[i], name, prefix,", "+                                         base, zOut,", "+                                         dirMode, thisDirMode);", "-                } else {", "+                } else { // !isDirectory", "+", "-                }", "-                if (!resources[i].isDirectory() && dealingWithFiles) {", "-                    File f = FILE_UTILS.resolveFile(base,", "-                                                   resources[i].getName());", "-                    zipFile(f, zOut, prefix + name, fileMode);", "-                } else if (!resources[i].isDirectory()) {", "-                    if (zf != null) {", "-                    ZipEntry ze = zf.getEntry(resources[i].getName());", "-", "-                    if (ze != null) {", "-                        boolean oldCompress = doCompress;", "-                        if (keepCompression) {", "-                            doCompress = (ze.getMethod() == ZipEntry.DEFLATED);", "-                        }", "-                        InputStream is = null;", "-                        try {", "-                            is = zf.getInputStream(ze);", "-                            int unixMode = ze.getUnixMode();", "-                            if (zfs.hasFileModeBeenSet()", "-                                || ((unixMode == 0", "-                                     || unixMode == UnixStat.FILE_FLAG)", "-                                    && !preserve0Permissions)) {", "-                                unixMode = fileMode;", "-                            }", "-                            zipFile(is, zOut, prefix + name,", "-                                    ze.getTime(), zfs.getSrc(getProject()),", "-                                    unixMode);", "-                        } finally {", "-                            doCompress = oldCompress;", "-                            FileUtils.close(is);", "-                        }", "-                    }", "+                    if (dealingWithFiles) {", "+                        File f = FILE_UTILS.resolveFile(base,", "+                                                        resources[i].getName());", "+                        zipFile(f, zOut, prefix + name, fileMode);", "-                        ArchiveResource tr = (ArchiveResource) resources[i];", "-                        InputStream is = null;", "-                        try {", "-                            is = tr.getInputStream();", "-                            zipFile(is, zOut, prefix + name,", "-                                    resources[i].getLastModified(),", "-                                    zfs.getSrc(getProject()),", "-                                    zfs.hasFileModeBeenSet() ? fileMode", "-                                    : tr.getMode());", "-                        } finally {", "-                            FileUtils.close(is);", "-                        }", "+                        int thisFileMode =", "+                            zfs != null && zfs.hasFileModeBeenSet()", "+                            ? fileMode : getUnixMode(resources[i], zf,", "+                                                     fileMode);", "+                        addResource(resources[i], name, prefix,", "+                                    zOut, thisFileMode,", "+                                    zf, zfs.getSrc(getProject()));", "+            }", "+        }", "+    }"]}]}