{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ee38b5f88dd8ef660cf98a66f90a6de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b719158deee8206e21b12d3bb060ff", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute( Project project )         throws TaskException", "signatureAfterChange": "      public void execute( Project project )         throws TaskException", "diff": ["-        final String classname = javaCommand.getExecutable();", "-        final Object[] argument = {javaCommand.getArguments()};", "+        final String classname = m_javaCommand.getExecutable();", "+        final Object[] argument = {m_javaCommand.getArguments()};", "-        AntClassLoader loader = null;", "-            if( sysProperties != null )", "+            if( m_sysProperties != null )", "-                sysProperties.setSystem();", "+                m_sysProperties.setSystem();", "-            if( classpath == null )", "+            if( m_classpath == null )", "-                loader = new AntClassLoader( Project.class.getClassLoader(), project, classpath, false );", "-                loader.setIsolated( true );", "-                loader.setThreadContextLoader();", "-                target = loader.forceLoadClass( classname );", "-                AntClassLoader.initializeClass( target );", "+                final URL[] urls = m_classpath.toURLs();", "+                final URLClassLoader classLoader = new URLClassLoader( urls );", "+                target = classLoader.loadClass( classname );", "-            if( loader != null )", "+            if( m_sysProperties != null )", "-                loader.resetThreadContextLoader();", "-                loader.cleanup();", "-            }", "-            if( sysProperties != null )", "-            {", "-                sysProperties.restoreSystem();", "+                m_sysProperties.restoreSystem();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5cadb550726def15a13f3475331a5b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "bab80bf968716d4230c3c4461a8dfbc6343f6a6b", "commitAfterChange": "093967db0e29ab675eef29fbe21d840f3467c5a7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void execute( Project project )         throws TaskException", "signatureAfterChange": "      public void execute( Project project )         throws TaskException", "diff": ["-        final String classname = javaCommand.getExecutable();", "-        final Object[] argument = {javaCommand.getArguments()};", "+        final String classname = m_javaCommand.getExecutable();", "+        final Object[] argument = {m_javaCommand.getArguments()};", "-        AntClassLoader loader = null;", "-            if( sysProperties != null )", "+            if( m_sysProperties != null )", "-                sysProperties.setSystem();", "+                m_sysProperties.setSystem();", "-            if( classpath == null )", "+            if( m_classpath == null )", "-                loader = new AntClassLoader( Project.class.getClassLoader(), project, classpath, false );", "-                loader.setIsolated( true );", "-                loader.setThreadContextLoader();", "-                target = loader.forceLoadClass( classname );", "-                AntClassLoader.initializeClass( target );", "+                final URL[] urls = m_classpath.toURLs();", "+                final URLClassLoader classLoader = new URLClassLoader( urls );", "+                target = classLoader.loadClass( classname );", "-            if( loader != null )", "+            if( m_sysProperties != null )", "-                loader.resetThreadContextLoader();", "-                loader.cleanup();", "-            }", "-            if( sysProperties != null )", "-            {", "-                sysProperties.restoreSystem();", "+                m_sysProperties.restoreSystem();"]}]}