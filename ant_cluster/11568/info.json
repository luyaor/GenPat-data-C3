{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "861ea510806708f12089e09f318b268b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf336718acb19f947a4c583effbfa9c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "867ec77b0d9efa8819be2ebf82cace4600b929ee", "commitAfterChange": "5337488612953eb072e38cb99e6b5d60999297da", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["+", "+\t\t\tVector excludePackages = new Vector();", "+\t\t\tif ((excludePackageNames != null) && (excludePackageNames.length() > 0)) {", "+\t\t\t\tStringTokenizer exTok = new StringTokenizer(excludePackageNames, \",\", false);", "+\t\t\t\twhile (exTok.hasMoreTokens()) {", "+\t\t\t\t\texcludePackages.addElement(exTok.nextToken().trim());", "+\t\t\t\t}", "+\t\t\t}", "-                evaluatePackages(toExecute, sourcePath, packages);", "+                evaluatePackages(toExecute, sourcePath, packages, excludePackages);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65abd5cc5477dbcd79f9ef59c0c5aa40", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/input/src/main/org/apache/tools/ant/taskdefs/Input.java", "commitBeforeChange": "7820c64af8cfa6122b1afe00622c3118ce935a36", "commitAfterChange": "88557a131bd0b0700462a61a7f3bd108dc15cf31", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void execute () throws BuildException", "signatureAfterChange": "     public void execute () throws BuildException", "diff": ["-            Vector accept = new Vector();", "-            StringTokenizer stok = new StringTokenizer(validargs, \",\", false);", "-            while (stok.hasMoreTokens()) {", "-                accept.addElement(stok.nextToken());", "-            }", "+            Vector accept = StringUtils.split(validargs, ',');", "-                project.setProperty(addproperty, request.getInput());", "+                project.setNewProperty(addproperty, request.getInput());"]}]}