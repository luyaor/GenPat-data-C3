{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bd0134cbfe76eb11026f00cb75d232b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce8156323c44efa755228d4aa0fe97e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "443bf819ed21ca24bcdf71d48e0c2fbc8cd1be3d", "commitAfterChange": "84b6f69d71494069683bc7d041c31e471fc697cf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public boolean equals(Object obj)", "signatureAfterChange": "     public boolean equals(Object obj)", "diff": ["-        if (uri == null || uri.equals(\"\")", "-            || uri.equals(ProjectHelper.ANT_CORE_URI)) {", "-            return other.uri == null || other.uri.equals(\"\")", "-                || other.uri.equals(ProjectHelper.ANT_CORE_URI);", "-        }", "-        if (!uri.equals(other.uri)) {", "-            return false;", "+        if (getURI() == null || getURI().equals(\"\")", "+            || getURI().equals(ProjectHelper.ANT_CORE_URI)) {", "+            if (!(other.getURI() == null || other.getURI().equals(\"\")", "+                  || other.getURI().equals(ProjectHelper.ANT_CORE_URI))) {", "+                return false;", "+            }", "+        } else {", "+            if (!getURI().equals(other.getURI())) {", "+                return false;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83f5e2b6c4e290ac7848c8fa5e881e37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "71815438035567f1cc3e6ba2b21dbfa2cc28a615", "commitAfterChange": "b471ac5e8ccc7bef2a5249dc325ad577740307f7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 43, "signatureBeforeChange": "         public boolean equals(Object obj)", "signatureAfterChange": "         public boolean equals(Object obj)", "diff": ["-         */", "-        public boolean equals(Object obj) {", "-            if (obj == this) {", "-              return true;", "-            }", "-            if (obj != null && obj.getClass().equals(getClass())) {", "-              return equals((Member) obj);", "-            }", "-            return false;", "-        }", "+         */", "+        public boolean equals(Object obj) {", "+            if (obj == this) {", "+              return true;", "+            }", "+            if (obj == null || !obj.getClass().equals(getClass())) {", "+                return false;", "+            }", "+            TemplateElement t = (TemplateElement) obj;", "+            return", "+                (name == null ? t.name == null : name.equals(t.name))", "+                && optional == t.optional", "+                && implicit == t.implicit;"]}]}