{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "315695d081248d83be6f7d2253278d7b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd240d50865704c47e830d7919ca5c59", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2b925503d71972d8b782eedd6cdf75711377d7b0", "commitAfterChange": "2c4faa154f069f3f69d6c3c95629409a7b8b0cc4", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 44, "signatureBeforeChange": "     private boolean contentsExcluded(String name)", "signatureAfterChange": "     private boolean contentsExcluded(TokenizedPath path)", "diff": ["-    private boolean contentsExcluded(String name) {", "-        name = (name.endsWith(File.separator)) ? name : name + File.separator;", "-        for (int i = 0; i < excludes.length; i++) {", "-            String e = excludes[i];", "-            if (e.endsWith(SelectorUtils.DEEP_TREE_MATCH)", "-                && SelectorUtils.matchPath(e.substring(0, e.length() - 2),", "-                                           name, isCaseSensitive())) {", "+    private boolean contentsExcluded(TokenizedPath path) {", "+        for (int i = 0; i < excludePatterns.length; i++) {", "+            if (excludePatterns[i].endsWith(SelectorUtils.DEEP_TREE_MATCH)", "+                && excludePatterns[i].withoutLastToken()", "+                   .matchPath(path, isCaseSensitive())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5bff31798a47e66839b5721275a1225", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/AbstractFileSet.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = selectors.iterator(); i.hasNext(); ) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectors) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);", "-            for (Iterator i = additionalPatterns.iterator(); i.hasNext(); ) {", "-                PatternSet ps = (PatternSet) i.next();", "+            for (PatternSet ps : additionalPatterns) {"]}]}