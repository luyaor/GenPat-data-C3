{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f1d3c035214873d5a52ce6f73b4dd89", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb22599b4ba5a160d95701e6b81f6ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/XMLJUnitResultFormatter.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private void formatError(String type, Test test, Throwable t)", "signatureAfterChange": "      private void formatError(String type, Test test, Throwable t)", "diff": ["+    private void formatError(String type, Test test, Throwable t) {", "+        if (test != null) {", "+            endTest(test);", "+        }", "+", "+        Element nested = doc.createElement(type);", "+        if (test != null) {", "+            currentTest.appendChild(nested);", "+        } else {", "+            rootElement.appendChild(nested);", "+        }", "+", "+        String message = t.getMessage();", "+        if (message != null && message.length() > 0) {", "+            nested.setAttribute(\"message\", xmlEscape(t.getMessage()));", "+        }", "+        nested.setAttribute(\"type\", xmlEscape(t.getClass().getName()));", "+", "+        StringWriter swr = new StringWriter();", "+        t.printStackTrace(new PrintWriter(swr, true));", "+        Text trace = doc.createTextNode(swr.toString());", "+        nested.appendChild(trace);", "+    }", "-", "-    private void formatError(String type, Test test, Throwable t) {", "-        formatTestCaseOpenTag(test);", "-        results.append(\"    <\");", "-        results.append(type);", "-        results.append(\" message=\\\"\");", "-        results.append(xmlEscape(t.getMessage()));", "-        results.append(\"\\\" type=\\\"\");", "-        results.append(t.getClass().getName());", "-        results.append(\"\\\">\");", "-        results.append(newLine);", "-", "-        results.append(\"<![CDATA[\");", "-        results.append(newLine);", "-        StringWriter swr = new StringWriter();", "-        t.printStackTrace(new PrintWriter(swr, true));", "-        results.append(swr.toString());", "-        results.append(\"]]>\");", "-        results.append(newLine);", "-", "-        results.append(\"    </\");", "-        results.append(type);", "-        results.append(\">\");", "-        results.append(newLine);", "-", "-        results.append(\"  </testcase>\");", "-        results.append(newLine);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebbb2521670913413ba6ee656a76ef9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/types/selectors/ModifiedSelectorTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public void testSeldirs()", "signatureAfterChange": "     @Test     public void testSeldirs()", "diff": ["+    @Test", "-        ModifiedSelector s = (ModifiedSelector)getSelector();", "-        try {", "-            makeBed();", "-", "-            StringBuffer sbTrue  = new StringBuffer();", "-            StringBuffer sbFalse = new StringBuffer();", "-            for (int i=0; i<filenames.length; i++) {", "-                if (files[i].isDirectory()) {", "-                    sbTrue.append(\"T\");", "-                    sbFalse.append(\"F\");", "-                } else {", "-                    sbTrue.append(\"T\");", "-                    sbFalse.append(\"T\");", "-                }", "+        ModifiedSelector s = new ModifiedSelector();", "+        StringBuffer sbTrue  = new StringBuffer();", "+        StringBuffer sbFalse = new StringBuffer();", "+        for (int i=0; i<selectorRule.getFiles().length; i++) {", "+            if (selectorRule.getFiles()[i].isDirectory()) {", "+                sbTrue.append(\"T\");", "+                sbFalse.append(\"F\");", "+            } else {", "+                sbTrue.append(\"T\");", "+                sbFalse.append(\"T\");", "-", "-            s.setSeldirs(true);", "-            performTests(s, sbTrue.toString());", "-            s.getCache().delete();", "-", "-            s.setSeldirs(false);", "-            performTests(s, sbFalse.toString());", "-            s.getCache().delete();", "-", "-        } finally {", "-            cleanupBed();", "-            if (s!=null) s.getCache().delete();", "+", "+        s.setSeldirs(true);", "+        performTests(s, sbTrue.toString());", "+        s.getCache().delete();", "+", "+        s.setSeldirs(false);", "+        performTests(s, sbFalse.toString());", "+        s.getCache().delete();", "+", "+        s.getCache().delete();"]}]}