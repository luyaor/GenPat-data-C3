{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0a2ca9c5e9506cceb4f512e2cd248ad", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c21721156b9dc2ca99ecf92c5445e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReaderTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testTestRunStopped() throws Exception", "signatureAfterChange": "      public void testTestRunStopped() throws Exception", "diff": ["-        writer.notifyTestRunStopped(999999);", "-        reader.process( new ByteArrayInputStream(out.toByteArray()) );", "-        assertEquals(new Long(999999), recorder.runStopped.elementAt(0));", "+        TestRunEvent evt = new TestRunEvent(new Integer(99), TestRunEvent.RUN_STOPPED);", "+        dispatcher.fireRunStopped( evt );", "+        assertEquals(evt, recorder.runStopped.elementAt(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ddfa8d6ba140beb6e393f14bd75d6e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/testcases/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReaderTest.java", "commitBeforeChange": "982958016ac6a886b86aa9dadbc183e64845fa0e", "commitAfterChange": "b71d8a9255c62ff621a672cc60d2691cff99b960", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testTestRunStarted() throws Exception", "signatureAfterChange": "      public void testTestRunStarted() throws Exception", "diff": ["-        writer.notifyTestRunStarted(9999);", "-        reader.process( new ByteArrayInputStream(out.toByteArray()) );", "-        assertEquals(new Integer(9999), recorder.runStarted.elementAt(0));", "+        TestRunEvent evt = new TestRunEvent(new Integer(99), TestRunEvent.RUN_STARTED);", "+        dispatcher.fireRunStarted( evt );", "+        assertEquals(evt, recorder.runStarted.elementAt(0));"]}]}