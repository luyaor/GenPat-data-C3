{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17a880bd2bfc9ed213748de6ab0e250c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d75746bce2cd56f4a931bd04b92cab", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "e11e04dc6e6d6dcabe531346f60b597a8a58c453", "commitAfterChange": "fffe72edb5a6a6deb6222d79841a42c1663ccd36", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-        ", "+", "-            ", "+", "-            ", "+", "-            ", "+", "-            if (remotedir != null)", "-            {", "-                log(\"changing the remote directory\", Project.MSG_VERBOSE);", "-                ftp.changeWorkingDirectory(remotedir);", "-                if (!FTPReply.isPositiveCompletion(ftp.getReplyCode()))", "+            // If the action is MK_DIR, then the specified remote directory is the", "+            // directory to create.", "+", "+            if( action == MK_DIR ) {", "+", "+                makeRemoteDir( ftp, remotedir );", "+", "+            } else {", "+                if (remotedir != null)", "-                    throw new BuildException(", "-                                             \"could not change remote directory: \" +", "-                                             ftp.getReplyString());", "+                    log(\"changing the remote directory\", Project.MSG_VERBOSE);", "+                    ftp.changeWorkingDirectory(remotedir);", "+                    if (!FTPReply.isPositiveCompletion(ftp.getReplyCode()))", "+                    {", "+                        throw new BuildException(", "+                                                 \"could not change remote directory: \" +", "+                                                 ftp.getReplyString());", "+                    }", "+", "+                    log(ACTION_STRS[action] + \" files\");", "+                    transferFiles(ftp);", "-", "-            log(ACTION_STRS[action] + \" files\");", "-            transferFiles(ftp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c068fe08f4bd58d283fae1832348c684", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "e0c04a3b27b8a6637bb1af562df9b38644ee89b2", "commitAfterChange": "1f2eea24cabc5464b0d95392996cfd997cd8a2bc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void processFile(File file)", "signatureAfterChange": "     public void processFile(File file)", "diff": ["-            FileOutputStream stream = new FileOutputStream(file);", "+", "+", "-            String file_ext = str_encoding.toLowerCase();", "-                file_ext = \"jpg\";", "-                file_ext = \"tif\";", "+", "+            if (destDir == null){", "+              destDir = srcDir;", "+            }", "+", "+            File new_file = new File(destDir.getAbsolutePath() + File.separator + file.getName());", "+", "+            if ((overwrite && new_file.exists()) && (!new_file.equals(file))) {", "+                new_file.delete();", "+            }", "+            else if (!overwrite && new_file.exists()){", "+              return;", "+            }", "+", "+            FileOutputStream stream = new FileOutputStream(new_file);", "-            String old_name = file.getAbsolutePath();", "-            int t_loc = old_name.lastIndexOf(\".\");", "-            String t_name = old_name.substring(0, t_loc + 1) + file_ext;", "-            File new_file = new File(t_name);", "-            if ((overwrite && new_file.exists()) && (!new_file.equals(file))) {", "-                new_file.delete();", "-            }", "-            file.renameTo(new_file);", "+", "-            log(\"Error processing file:  \" + err);", "+           if (!failonerror) {", "+             log(\"Error processing file:  \" + err);", "+           } else {", "+             throw new BuildException(err);", "+           }", "+", "+        catch (java.lang.RuntimeException rerr) {", "+           if (!failonerror) {", "+             log(\"Error processing file:  \" + rerr);", "+           } else {", "+             throw new BuildException(rerr);", "+           }", "+        }", "+"]}]}