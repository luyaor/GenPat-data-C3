{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "326add25fc07de311747f0af934bde61", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cce437f96769d49689c814a9d6e91c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "5909b77dc45210c94075bceb1f5fda411213d50f", "commitAfterChange": "14ea08b49e98e020cde9265cc199b40a42990337", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public Iterator iterator()", "signatureAfterChange": "     public Iterator iterator()", "diff": ["-        final Enumeration e = getProperties().propertyNames();", "+        Hashtable props = getEffectiveProperties();", "+        Set names = getPropertyNames(props);", "+", "+        Mapper myMapper = getMapper();", "+        final FileNameMapper m = myMapper == null ? null : myMapper.getImplementation();", "+        final Iterator iter = names.iterator();", "+", "-                return e.hasMoreElements();", "+                return iter.hasNext();", "-                return new PropertyResource(getProject(), (String) e.nextElement());", "+                PropertyResource p = new PropertyResource(getProject(), (String) iter.next());", "+                return m == null ? (Resource) p : new MappedResource(p, m);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ff9f34a7b07f964540d8e78a303668", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 4, "signatureBeforeChange": "          protected ConverterEngine createConverterEngine()", "signatureAfterChange": "     public void compose( final ComponentManager componentManager )         throws ComponentManagerException", "diff": ["+     */", "+    public void compose( final ComponentManager componentManager )", "+        throws ComponentManagerException", "+        //cache CM so it can be used while executing tasks", "+        m_componentManager = componentManager;", "-    ", "-    protected ConverterEngine createConverterEngine()", "-    {", "-        //this is done so that the loaders are shared", "-        //which results in much less overhead", "-        final TaskletConverterEngine engine = new TaskletConverterEngine();", "-        engine.setFactory( m_factory );", "-        return engine;", "+        m_factory = (Factory)componentManager.lookup( \"org.apache.avalon.camelot.Factory\" );", "+        m_tskDeployer = ", "+            (TskDeployer)componentManager.lookup( \"org.apache.ant.tasklet.engine.TskDeployer\" );", "+        m_configurer = ", "+            (Configurer)componentManager.lookup( \"org.apache.ant.configuration.Configurer\" );", "+        m_dataTypeEngine =", "+            (DataTypeEngine)componentManager.lookup( \"org.apache.ant.datatypes.DataTypeEngine\" );", "+        m_converterEngine =", "+            (ConverterEngine)componentManager.lookup( \"org.apache.ant.convert.ConverterEngine\" );"]}]}