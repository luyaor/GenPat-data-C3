{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b6bc5833cae578d3b55dfe3e31b4212", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "232d3b1fd00e5a2e10c0bf88f9128e11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testRunFailFoe()", "signatureAfterChange": "      @Test     public void testRunFailFoe()", "diff": ["+    @Test", "-        if(runFatalTests) {", "-            expectBuildExceptionContaining(\"testRunFailFoe\",", "-                \"java failures being propagated\",", "-                \"Java returned:\");", "+        Assume.assumeTrue(\"Fatal tests have not been set to run\", runFatalTests);", "+        try {", "+            buildRule.executeTarget(\"testRunFailFoe\");", "+            fail(\"Build exception should have been thrown - \" + \"java failures being propagated\");", "+        } catch (BuildException ex) {", "+            assertContains(\"Java returned:\", ex.getMessage());", "-}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809aeb8d8b2e83054b10d02fc4ba00a9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SignJarTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void testTsaLocalhost()", "signatureAfterChange": "      @Test     public void testTsaLocalhost()", "diff": ["+    @Test", "-        //only test on java1.5+", "-        if(JavaEnvUtils.getJavaVersionNumber()>=15) {", "-            expectBuildException(\"testTsaLocalhost\",", "-                \"no TSA at localhost:0\");", "-            assertLogContaining(\"java.net.ConnectException\");", "+        Assume.assumeTrue(\"Only runs on Java 1.5+\", JavaEnvUtils.getJavaVersionNumber()>=15);", "+        try {", "+            buildRule.executeTarget(\"testTsaLocalhost\");", "+            fail(\"Should have thrown exception - no TSA at localhost:0\");", "+        } catch(BuildException ex) {", "+            assertEquals(\"jarsigner returned: 1\", ex.getMessage());"]}]}