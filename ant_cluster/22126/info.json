{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad525b068bfeebdddb336d26d286218d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03249ea799418fd10c02a1ef36b44e97", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "93db46be115205107729104e728d45687d885295", "commitAfterChange": "20ab59bff57796a67e1cdfefbc29826c7d55edba", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "      private void randomiseBlock()", "signatureAfterChange": "      private void randomiseBlock()", "diff": ["-        for( i = 0; i <= last; i++ )", "+        for( i = 0; i <= m_last; i++ )", "-            block[ i + 1 ] ^= ( ( rNToGo == 1 ) ? 1 : 0 );", "+            m_block[ i + 1 ] ^= ( ( rNToGo == 1 ) ? 1 : 0 );", "-            block[ i + 1 ] &= 0xFF;", "+            m_block[ i + 1 ] &= 0xFF;", "-            m_inUse[ block[ i + 1 ] ] = true;", "+            m_inUse[ m_block[ i + 1 ] ] = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b603a167e3d5d81e38a4bf73950fbc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/image/Image.java", "commitBeforeChange": "017b808e7f615b3a1673108885337c3f0639a555", "commitAfterChange": "b1885e4435e6c00b780f8182b2d03f7978f87940", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void processFile(File file)", "signatureAfterChange": "     public void processFile(File file)", "diff": ["-            File new_file = new File(destDir, file.getName());", "+            File newFile = new File(destDir, file.getName());", "-            if ((overwrite && new_file.exists()) && (!new_file.equals(file))) {", "-                new_file.delete();", "+            if ((overwrite && newFile.exists()) && (!newFile.equals(file))) {", "+                newFile.delete();", "-            FileOutputStream stream = new FileOutputStream(new_file);", "+            FileOutputStream stream = new FileOutputStream(newFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af2f61d79d8c75ab20731da78e53de5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Available.java", "commitBeforeChange": "4a15cb13d4e52b8c383790778703a2496f23b29e", "commitAfterChange": "a41723ab30aa5c6a234b0480b5613eec9f7f94b0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void setFile(String filename)", "signatureAfterChange": "      public void setFile(File file)", "diff": ["-    public void setFile(String filename) {", "-        this.file = filename;", "+    public void setFile(File file) {", "+        this.file = file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c3e8b21b9b31d9afafd6ed5f6f633e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "4783bc46159826bc33858cfc9145c4be93dfe755", "commitAfterChange": "2a291dca9249d6a4958d9898282fa67343bf59b7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public void setTarget(String s)", "signatureAfterChange": "     public void setTarget(String targetToAdd)", "diff": ["-    public void setTarget(String s) {", "-        if (s.equals(\"\")) {", "+    public void setTarget(String targetToAdd) {", "+        if (targetToAdd.equals(\"\")) {", "-        targets.add(s);", "+        targets.add(targetToAdd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66d298877031bca6ae8de6ba0df22874", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a98a49253bd792fec570f11f310d61dc9370f67a", "commitAfterChange": "5d1320e99cabb7dad880799accea519ce575d492", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected boolean couldHoldIncluded(String name)", "signatureAfterChange": "     protected boolean couldHoldIncluded(String name)", "diff": ["-        final PathPattern tokenizedName = new PathPattern(name);", "+        final TokenizedPath tokenizedName = new TokenizedPath(name);", "-            PathPattern tokenizedInclude = new PathPattern(includes[i]);", "-            if (tokenizedName.matchPatternStartOf(tokenizedInclude,", "-                                                  isCaseSensitive())", "+            TokenizedPattern tokenizedInclude =", "+                new TokenizedPattern(includes[i]);", "+            if (tokenizedInclude.matchStartOf(tokenizedName, isCaseSensitive())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78672e7f01860cfbc5f6da655972fe01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "a98a49253bd792fec570f11f310d61dc9370f67a", "commitAfterChange": "5d1320e99cabb7dad880799accea519ce575d492", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "     private PathPattern[] fillNonPatternSet(Set set, String[] patterns)", "signatureAfterChange": "     private TokenizedPattern[] fillNonPatternSet(Set set, String[] patterns)", "diff": ["-    private PathPattern[] fillNonPatternSet(Set set, String[] patterns) {", "+    private TokenizedPattern[] fillNonPatternSet(Set set, String[] patterns) {", "-                al.add(new PathPattern(patterns[i]));", "+                al.add(new TokenizedPattern(patterns[i]));", "-        return (PathPattern[]) al.toArray(new PathPattern[al.size()]);", "+        return (TokenizedPattern[]) al.toArray(new TokenizedPattern[al.size()]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cccfbc5822169ac57b9d18359dddfa0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/test/org/apache/aut/vfs/test/AbstractFileSystemTestCase.java", "commitBeforeChange": "f382fa32eec7260111db0d67ae9c90dee2d6de0b", "commitAfterChange": "dfa0c6e159416ba22df942ba98e496d99d53d07f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void assertSameStructure( final FileObject folder,                                         final FileInfo expected )         throws Exception", "signatureAfterChange": "     protected void assertSameStructure( final FileObject folder,                                         final FileInfo expected )         throws Exception", "diff": ["-            assertSame( file.getType(), info._type );", "+            assertSame( file.getType(), info.m_type );", "-            if( info._type == FileType.FILE )", "+            if( info.m_type == FileType.FILE )", "-            assertEquals( \"count children of \\\"\" + file.getName() + \"\\\"\", info._children.size(), children.length );", "+            assertEquals( \"count children of \\\"\" + file.getName() + \"\\\"\", info.m_children.size(), children.length );", "-                final FileInfo childInfo = (FileInfo)info._children.get( child.getName().getBaseName() );", "+                final FileInfo childInfo = (FileInfo)info.m_children.get( child.getName().getBaseName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a099b3cc5afd09af10697750e9b69c09", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/execution/TaskContainer.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     void addExecutionTask(ExecutionTask executionTask) throws ExecutionException;", "signatureAfterChange": "     void addTask(Task task) throws ExecutionException;", "diff": ["-    void addExecutionTask(ExecutionTask executionTask) throws ExecutionException;", "+    void addTask(Task task) throws ExecutionException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5e79b1a94428d98a592fb48c7c2ca86", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/resolvers/AntResolver.java", "commitBeforeChange": "0833007731e08c468319eebcda0ef776a7fefdc1", "commitAfterChange": "64f7d86fe1e4c58eb2bd35977e2fd3b05e9647ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public File resolve(final Extension extension,                          final Project project)         throws BuildException", "signatureAfterChange": "     public File resolve(final Extension extension,                          final Project project) throws BuildException", "diff": ["+     */", "-                         final Project project)", "-        throws BuildException {", "+                         final Project project) throws BuildException {", "-        ant.setAntfile(m_antfile.getName());", "+        ant.setAntfile(antfile.getName());", "-                m_antfile.getParentFile().getCanonicalFile();", "+                antfile.getParentFile().getCanonicalFile();", "-        if (null != m_target) {", "-            ant.setTarget(m_target);", "+        if (null != target) {", "+            ant.setTarget(target);", "-        return m_destfile;", "+        return destfile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7f812e34780dd28ab3f2f0efa747afc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "94e7786f36caa2224635477133814e8e77d5fd37", "commitAfterChange": "3f31dc8f7a3bfbca7fc1b633742521ce5e4cb6c4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Properties getProperties(File propertyFile) throws BuildException", "signatureAfterChange": "     public Properties getProperties(File propertyFile) throws BuildException", "diff": ["-        Properties properties = new Properties();", "+        Properties props = new Properties();", "-            properties.load(in);", "+            props.load(in);", "-        return properties;", "+        return props;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e433955f0f018ac7f56d0c3089bf8edd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/metamata/MParse.java", "commitBeforeChange": "565182860415c92ba3e9032561ea64fbad563d38", "commitAfterChange": "25d72a26d4775b7aa4a06054b1a8edf2bbc83579", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected void checkOptions() throws BuildException", "signatureAfterChange": "     protected void checkOptions() throws BuildException", "diff": ["-    protected void checkOptions() throws BuildException {       ", "+    protected void checkOptions() throws BuildException {", "-        if (metahome == null || !metahome.exists()){", "+        if (metamataHome == null || !metamataHome.exists()){", "-        metahome = project.resolveFile(metahome.getPath());", "-        ", "+        metamataHome = project.resolveFile(metamataHome.getPath());", "+", "-                throw new BuildException(jars[i] ", "+                throw new BuildException(jars[i]", "-            }           ", "+            }", "-        ", "+", "-        if (target == null || !target.isFile() ", "+        if (target == null || !target.isFile()", "-    }    ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d944ec33dc853d77ae330735b79494", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "commitAfterChange": "6caf36ea18f59884feefc17b5bd3c77f88677268", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          protected Tasklet createTasklet( final String name )         throws AntException", "signatureAfterChange": "          protected Task createTask( final String name )         throws AntException", "diff": ["-    protected Tasklet createTasklet( final String name )", "+    protected Task createTask( final String name )", "-            return (Tasklet)m_factory.create( locator, Tasklet.class );", "+            return (Task)m_factory.create( locator, Task.class );"]}]}