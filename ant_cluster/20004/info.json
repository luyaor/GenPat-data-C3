{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b825d9daca5d7a8cbeaccce13835722c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b25c849977c57bbe09fdfcddb6fe009", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void testSpawn()", "signatureAfterChange": "      @Test     public void testSpawn() throws InterruptedException", "diff": ["-    public void testSpawn() {", "-        File logFile = FILE_UTILS.createTempFile(\"spawn\",\"log\", getOutputDir(), false, false);", "+    @Test", "+    public void testSpawn() throws InterruptedException {", "+        File logFile = FILE_UTILS.createTempFile(\"spawn\", \"log\",", "+                new File(buildRule.getProject().getProperty(\"output\")), false, false);", "-        project.setProperty(\"logFile\", logFile.getAbsolutePath());", "-        project.setProperty(\"timeToWait\", Long.toString(TIME_TO_WAIT));", "-        project.executeTarget(\"testSpawn\");", "-        try {", "-            Thread.sleep(TIME_TO_WAIT * 1000 + SECURITY_MARGIN);", "-        } catch (Exception ex) {", "-            System.out.println(\"my sleep was interrupted\");", "-        }", "+        buildRule.getProject().setProperty(\"logFile\", logFile.getAbsolutePath());", "+        buildRule.getProject().setProperty(\"timeToWait\", Long.toString(TIME_TO_WAIT));", "+        buildRule.getProject().executeTarget(\"testSpawn\");", "+", "+        Thread.sleep(TIME_TO_WAIT * 1000 + SECURITY_MARGIN);", "+", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4094abc8fd14bbc356c94c8b93a318c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ExecTaskTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testspawn()", "signatureAfterChange": "      @Test     public void testspawn() throws InterruptedException", "diff": ["-    public void testspawn() {", "-        project.executeTarget(\"setUp\");", "-        if (project.getProperty(\"test.can.run\") == null) {", "-            return;", "-        }", "+    @Test", "+    public void testspawn() throws InterruptedException {", "+        buildRule.getProject().executeTarget(\"setUp\");", "+        Assume.assumeNotNull(buildRule.getProject().getProperty(\"test.can.run\"));", "-        logFile = FILE_UTILS.createTempFile(\"spawn\", \"log\", getOutputDir(), false, false);", "+        logFile = FILE_UTILS.createTempFile(\"spawn\", \"log\", new File(buildRule.getProject().getProperty(\"output\")),", "+                false, false);", "-            try {", "-                Thread.sleep(10);", "-            } catch (InterruptedException e) {", "-                System.out.println(\"my sleep was interrupted\");", "-            }", "+            Thread.sleep(10);", "-        try {", "-            Thread.sleep((TIME_TO_WAIT) * 1000 + SECURITY_MARGIN);", "-        } catch (InterruptedException e) {", "-            System.out.println(\"my sleep was interrupted\");", "-        }", "+        Thread.sleep((TIME_TO_WAIT) * 1000 + SECURITY_MARGIN);"]}]}