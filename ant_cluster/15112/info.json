{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d07184a8faece302885cc7a755fd390", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293e9536b1ff3211bb6bb6968da559a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Redirector.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      private OutputStream foldFiles(File[] file, String logHead, int loglevel,             boolean append, boolean createEmptyFiles)", "signatureAfterChange": "      private OutputStream foldFiles(final File[] file, final String logHead, final int loglevel,             final boolean append, final boolean createEmptyFiles)", "diff": ["-    private OutputStream foldFiles(File[] file, String logHead, int loglevel,", "-            boolean append, boolean createEmptyFiles) {", "-        OutputStream result = new LazyFileOutputStream(file[0], append,", "+    private OutputStream foldFiles(final File[] file, final String logHead, final int loglevel,", "+            final boolean append, final boolean createEmptyFiles) {", "+        final OutputStream result = new LazyFileOutputStream(file[0], append,", "-        char[] c = new char[logHead.length()];", "+        final char[] c = new char[logHead.length()];", "-        String indent = new String(c);", "+        final String indent = new String(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c678a34143165bb3be66da3e45c61ef9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupJavacCommandlineSwitches(Commandline cmd,                                                         boolean useDebugLevel)", "signatureAfterChange": "     protected Commandline setupJavacCommandlineSwitches(final Commandline cmd,                                                         final boolean useDebugLevel)", "diff": ["-    protected Commandline setupJavacCommandlineSwitches(Commandline cmd,", "-                                                        boolean useDebugLevel) {", "-        Path classpath = getCompileClasspath();", "+    protected Commandline setupJavacCommandlineSwitches(final Commandline cmd,", "+                                                        final boolean useDebugLevel) {", "+        final Path classpath = getCompileClasspath();", "-        String memoryParameterPrefix = assumeJava11() ? \"-J-\" : \"-J-X\";", "+        final String memoryParameterPrefix = assumeJava11() ? \"-J-\" : \"-J-X\";", "-            Path cp = new Path(project);", "+            final Path cp = new Path(project);", "-            Path bp = getBootClassPath();", "+            final Path bp = getBootClassPath();", "-            Path bp = getBootClassPath();", "+            final Path bp = getBootClassPath();", "-                String debugLevel = attributes.getDebugLevel();", "+                final String debugLevel = attributes.getDebugLevel();"]}]}