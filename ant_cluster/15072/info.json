{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f19581dfe969b85867b3d34bcf5c5637", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "090176b0200fbe1399629b3a038b4096", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/XmlValidateTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public XmlValidateTest(String name)", "signatureAfterChange": "      @Test     public void testPropertySchemaForInvalidXML()", "diff": ["-     */", "-    public XmlValidateTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"testProperty.invalidXML\");", "+            fail(\"XML file does not satisfy schema\");", "+        } catch(BuildException ex) {", "+            //TODO assert exception message", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13508a865a52b60c437ed6cb4f29a2a1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FilterTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public FilterTest(String name)", "signatureAfterChange": "      @Test     public void test3()", "diff": ["-    public FilterTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"test3\");", "+            fail(\"required argument missing\");", "+        } catch (BuildException ex) {", "+            //TODO assert value", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31dd1817167b24c830a065794a61435e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntStructureTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public AntStructureTest(String name)", "signatureAfterChange": "      @Test     public void test1()", "diff": ["-    public AntStructureTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"test1\");", "+            fail(\"required argument not specified\");", "+        } catch (BuildException ex) {", "+            //TODO assert exception message", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1071a2d83db8dc2bac0bc17564e51f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/AntTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 32, "signatureBeforeChange": "      public AntTest(String name)", "signatureAfterChange": "      @Test     public void testBlankTarget()", "diff": ["-    public AntTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"blank-target\");", "+            fail(\"target name must not be empty\");", "+        } catch(BuildException ex) {", "+            //TODO assert exception message", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439895f7168023911db89233c165f126", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/HttpTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public HttpTest(String name)", "signatureAfterChange": "      @Test     public void testBadRequestMethod()", "diff": ["-    public HttpTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"bad-request-method\");", "+            fail(\"Exception should have been thrown as invalid HTTP request method specified\");", "+        } catch (BuildException ex) {", "+            //TODO we should assert the correct build exception was thrown", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aae8ca54e2c4dedaabaab61f0b1f1d0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/SleepTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t     public SleepTest(String name)", "signatureAfterChange": "      @Test     public void test5()", "diff": ["-    public SleepTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"test5\");", "+            fail(\"Negative sleep periods are not supported\");", "+        } catch (BuildException ex) {", "+            //TODO assert value", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80cd94906ab03f73f8f15bb872fc6f2f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/BasenameTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public BasenameTest(String name)", "signatureAfterChange": "      @Test     public void test3()", "diff": ["-    public BasenameTest(String name) {", "-        super(name);", "-    }", "+    @Test", "+        try {", "+            buildRule.executeTarget(\"test3\");", "+            fail(\"Required attribute missing\");", "+        } catch (BuildException ex) {", "+            //TODO assert exception message", "+        }"]}]}