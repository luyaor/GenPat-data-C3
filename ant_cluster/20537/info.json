{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c7f0be62c4e3e88b52739c73137db7c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb94183ea20c64aef72fa15a461a46bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/listener/AnsiColorLogger.java", "commitBeforeChange": "2fd822fcf2691ab9a83271f83c2818634410c01e", "commitAfterChange": "5df6412cd6bd05b4fc9392d4fd6e7ac6369604bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected final void printMessage(final String message,                                       final PrintStream stream,                                       final int priority)", "signatureAfterChange": "      protected final void printMessage(final String message,                                       final PrintStream stream,                                       final int priority)", "diff": ["-        if (!colorsSet) {", "-            setColors();", "-            colorsSet = true;", "-        }", "+        if (message != null && stream != null) {", "+            if (!colorsSet) {", "+                setColors();", "+                colorsSet = true;", "+            }", "-        final StringBuffer msg = new StringBuffer(message);", "-        switch (priority) {", "-            case Project.MSG_ERR:", "-                msg.insert(0, errColor);", "-                msg.append(END_COLOR);", "-                break;", "-            case Project.MSG_WARN:", "-                msg.insert(0, warnColor);", "-                msg.append(END_COLOR);", "-                break;", "-            case Project.MSG_INFO:", "-                msg.insert(0, infoColor);", "-                msg.append(END_COLOR);", "-                break;", "-            case Project.MSG_VERBOSE:", "-                msg.insert(0, verboseColor);", "-                msg.append(END_COLOR);", "-                break;", "-            case Project.MSG_DEBUG:", "-                msg.insert(0, debugColor);", "-                msg.append(END_COLOR);", "-                break;", "+            final StringBuffer msg = new StringBuffer(message);", "+            switch (priority) {", "+                case Project.MSG_ERR:", "+                    msg.insert(0, errColor);", "+                    msg.append(END_COLOR);", "+                    break;", "+                case Project.MSG_WARN:", "+                    msg.insert(0, warnColor);", "+                    msg.append(END_COLOR);", "+                    break;", "+                case Project.MSG_INFO:", "+                    msg.insert(0, infoColor);", "+                    msg.append(END_COLOR);", "+                    break;", "+                case Project.MSG_VERBOSE:", "+                    msg.insert(0, verboseColor);", "+                    msg.append(END_COLOR);", "+                    break;", "+                case Project.MSG_DEBUG:", "+                    msg.insert(0, debugColor);", "+                    msg.append(END_COLOR);", "+                    break;", "+            }", "+            final String strmessage = msg.toString();", "+            stream.println(strmessage);", "-        final String strmessage = msg.toString();", "-        stream.println(strmessage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beeda2f6f42ef3590a0ad2e2f7a8df2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "8f70bc2a919459c49c1977d91551f43819063954", "commitAfterChange": "1e8307708de490453db28c89f777eb4a9c08767b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void logError(TransformerException e, String type)", "signatureAfterChange": "      private void logError(TransformerException e, String type)", "diff": ["-", "-    private void logError(TransformerException e, String type) {", "-        if (logger == null) {", "-            return;", "-", "-        StringBuffer msg = new StringBuffer();", "-        if (e.getLocator() != null) {", "-            if (e.getLocator().getSystemId() != null) {", "-                String url = e.getLocator().getSystemId();", "-                if (url.startsWith(\"file:///\")) {", "-                  url = url.substring(8);", "-                }", "-                msg.append(url);", "-            } else {", "-                msg.append(\"Unknown file\");", "-            }", "-            if (e.getLocator().getLineNumber() != -1) {", "-                msg.append(\":\" + e.getLocator().getLineNumber());", "-                if (e.getLocator().getColumnNumber() != -1) {", "-                    msg.append(\":\" + e.getLocator().getColumnNumber());", "-                }", "-        msg.append(\": \" + type + \"! \");", "-        msg.append(e.getMessage());", "-        if (e.getCause() != null) {", "-            msg.append(\" Cause: \" + e.getCause());", "-        }", "-        logger.log(msg.toString());", "+", "+    private void logError(TransformerException e, String type) {", "+        if (logger == null) {", "+            return;", "+        }", "+", "+        StringBuffer msg = new StringBuffer();", "+        SourceLocator locator = e.getLocator();", "+        if (locator != null) {", "+            String systemid = locator.getSystemId();", "+            if (systemid != null) {", "+                String url = systemid;", "+                if (url.startsWith(\"file:///\")) {", "+                    url = url.substring(8);", "+                }", "+                msg.append(url);", "+            } else {", "+                msg.append(\"Unknown file\");", "+            }", "+            int line = locator.getLineNumber();", "+            if (line != -1) {", "+                msg.append(\":\" + line);", "+                int column = locator.getColumnNumber();", "+                if (column != -1) {", "+                    msg.append(\":\" + column);", "+                }", "+            }", "+        }", "+        msg.append(\": \" + type + \"! \");", "+        msg.append(e.getMessage());", "+        if (e.getCause() != null) {", "+            msg.append(\" Cause: \" + e.getCause());", "+        }", "+", "+        logger.log(msg.toString());", "+    }"]}]}