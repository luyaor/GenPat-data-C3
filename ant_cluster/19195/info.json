{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "670f7a0fb94143cfd989ac2ab46ff7ab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4509fd5987076fb564beefc966467525", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "4b364736eef7f9740caba2130df3113462b1b612", "commitAfterChange": "32c6ef39e4527cdcaeb6a702be90203ca8ced940", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDepends(String depS)", "signatureAfterChange": "     public void setDepends(String depS)", "diff": ["-        if (depS.length() > 0) {", "+        for (Iterator iter = parseDepends(depS, getName()).iterator();", "+             iter.hasNext(); ) {", "+            addDependency((String) iter.next());", "+        }", "+    }", "-                new StringTokenizer(depS, \",\", true);", "-                    throw new BuildException(\"Syntax Error: depends \" + \"attribute of target \\\"\"", "-                            + getName() + \"\\\" has an empty string as dependency.\");", "-                addDependency(token);", "-                                + \"attribute for target \\\"\" + getName()", "-                                + \"\\\" ends with a , character\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757d5ffb93f414234a3c0e53b366baf8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "2f59f52b6308d1fa1c39b2d16d66c6f0e749718c", "commitAfterChange": "7f18b8f61106667917fa5bdd33b885344f2f5221", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "       private void processFile(String file) throws BuildException", "signatureAfterChange": "       private void processFile(String file) throws BuildException", "diff": ["+            boolean destIsWrong = true;", "-                    if (!destFile.delete()) {", "-                        throw new BuildException(\"Unable to delete \"", "-                                                 + destFile);", "-                    }", "-                    if (!tmpFile.renameTo(destFile)) {", "-                        throw new BuildException(", "-                                \"Failed to transform \" + srcFile", "-                                + \" to \" + destFile", "-                                + \". Couldn't rename temporary file: \"", "-                                + tmpFile);", "-                    }", "-", "-                } else { // destination is equal to temp file", "+                } else {", "-                    if (!tmpFile.delete()) {", "-                        throw new BuildException(\"Unable to delete \"", "-                                                 + tmpFile);", "-                    }", "-                }", "-            } else { // destFile does not exist - write the temp file", "-                log(\"destFile does not exist\", Project.MSG_DEBUG);", "-", "-                File parent = fileUtils.getParentFile(destFile);", "-                if (!parent.exists()) {", "-                    parent.mkdirs();", "-                }", "-", "-                if (!tmpFile.renameTo(destFile)) {", "-                    throw new BuildException(", "-                            \"Failed to transform \" + srcFile", "-                            + \" to \" + destFile", "-                            + \". Couldn't rename temporary file: \"", "-                            + tmpFile);", "+                    destIsWrong = false;", "-            tmpFile = null;", "+            if (destIsWrong) {", "+                fileUtils.rename(tmpFile, destFile);", "+                tmpFile = null;", "+            }"]}]}