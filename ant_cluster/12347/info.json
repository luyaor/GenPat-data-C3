{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bc584f4879758e5134ab3f9c0d56e2e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a77f9f15c55776debd8db6772394db0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "8ceff1b470d117265bbe4dd7d982e448c213bb4f", "commitAfterChange": "c35619ac8a554bebec2008a08b8084993b3837f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void merge(Section section) throws ManifestException", "signatureAfterChange": "         public void merge(Section section) throws ManifestException", "diff": ["-                // the merge file always wins", "-                attributes.put(attributeName, section.attributes.get(attributeName));", "+                if (attributeName.equals(ATTRIBUTE_CLASSPATH) && ", "+                        attributes.containsKey(attributeName)) {", "+                    // classpath entries are vetors which are merged", "+                    Vector classpathAttrs = (Vector)section.attributes.get(attributeName);", "+                    Vector ourClasspathAttrs = (Vector)attributes.get(attributeName);", "+                    for (Enumeration e2 = classpathAttrs.elements(); e2.hasMoreElements();) {", "+                        ourClasspathAttrs.addElement(e2.nextElement());", "+                    }", "+                }", "+                else {        ", "+                    // the merge file always wins", "+                    attributes.put(attributeName, section.attributes.get(attributeName));", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6218e9ada701186e1f6b0cba346d6f9f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected Map getAntLibraries()", "signatureAfterChange": "     protected void setInitialProperties(Map properties)          throws ExecutionException", "diff": ["-    protected Map getAntLibraries() {", "-        return antLibraries;", "+    protected void setInitialProperties(Map properties)", "+         throws ExecutionException {", "+        if (properties == null) {", "+            return;", "+        }", "+        for (Iterator i = properties.keySet().iterator(); i.hasNext(); ) {", "+            String name = (String)i.next();", "+            Object value = properties.get(name);", "+            setDataValue(name, value, false);", "+        }", "+    }"]}]}