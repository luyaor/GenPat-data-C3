{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f102ffcacefdafe44e7cfd68840552fd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0882a5c1bac9ef8f4d5386ba84999ff7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/PvcsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void test6()", "signatureAfterChange": "      @Test     public void test6()", "diff": ["+    @Test", "-        expectBuildException(\"test6\", \"Failed executing: /never/heard/of/a/directory/structure/like/this/pcli lvf -z -aw -pr//ct4serv2/pvcs/monitor /. Exception: /never/heard/of/a/directory/structure/like/this/pcli: not found\");", "+        try {", "+            buildRule.executeTarget(\"test6\");", "+            fail(\"Failed executing: /never/heard/of/a/directory/structure/like/this/pcli lvf -z \" +", "+                    \"-aw -pr//ct4serv2/pvcs/monitor /. Exception: /never/heard/of/a/directory/structure/like/this/pcli: not found\");", "+        } catch(BuildException ex) {", "+            //TODO assert exception message", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2b4f4f10b9439adcb09919a35f6cacc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testExceptingFoe()", "signatureAfterChange": "      @Test     public void testExceptingFoe()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testExceptingFoe\",", "-            \"passes exception through\",", "-            \"Exception raised inside called program\");", "+        try {", "+            buildRule.executeTarget(\"testExceptingFoe\");", "+            fail(\"Build exception should have been thrown - \" + \"passes exception through\");", "+        } catch (BuildException ex) {", "+            assertContains(\"Exception raised inside called program\", ex.getMessage());", "+        }"]}]}