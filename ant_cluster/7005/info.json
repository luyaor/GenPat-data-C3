{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfe9573777ce29d103ef22a64139ebe7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56591d01f649becbaa06c2dbca9a4260", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "e840fb5f86f0c9af5c2e2ad616f279c45fce62d8", "commitAfterChange": "ad91082694f9344ae3020e16cf9351e48b751b0b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void runCommand( final String[] cmdline )         throws TaskException", "signatureAfterChange": "      private void runCommand( final CommandlineJava cmdline )         throws TaskException", "diff": ["-    private void runCommand( final String[] cmdline )", "+    private void runCommand( final CommandlineJava cmdline )", "-            getLogger().debug( StringUtil.join( cmdline, \" \" ) );", "+            getLogger().debug( cmdline.toString() );", "-            exe.setCommandline( cmdline );", "+            final String[] commandline = cmdline.getCommandline();", "+            exe.setCommandline( new Commandline( commandline ) );", "-                throw new TaskException( cmdline[ 0 ] + \" failed with return code \" + retval );", "+                throw new TaskException( cmdline + \" failed with return code \" + retval );", "-            throw new TaskException( \"Could not launch \" + cmdline[ 0 ] + \": \" + ioe );", "+            throw new TaskException( \"Could not launch \" + cmdline + \": \" + ioe );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e92c0febd5753c56a046c90667a7475", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/perforce/P4Label.java", "commitBeforeChange": "d70c09779d8d334f65c69e302f2958e560c94554", "commitAfterChange": "3f1bc5559088b8b6df95c7b62acef5f425680243", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        } else {", "+            P4View = StringUtils.replace(P4View, \":\", \"\\n\\t\");", "+            P4View = StringUtils.replace(P4View, \";\", \"\\n\\t\");", "-            log(\"Label Description not set, assuming 'AntLabel'\", Project.MSG_WARN);", "+            log(\"Label Description not set, assuming 'AntLabel'\", ", "+                Project.MSG_WARN);", "-            SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy.MM.dd-hh:mm\");", "+            SimpleDateFormat formatter ", "+                = new SimpleDateFormat(\"yyyy.MM.dd-hh:mm\");", "-                \"Label: \" + name + \"\\n\" +", "-                \"Description: \" + desc + \"\\n\" +", "-                \"Options: unlocked\\n\" +", "-                \"View: \" + P4View + \"\\n\";", "+                \"Label: \" + name +", "+                \"\\nDescription: \" + desc +", "+                \"\\nOptions: unlocked\" +", "+                \"\\nView: \\n\\t\" + P4View;", "-        log(\"Created Label \" + name + \" (\" + desc + \")\", Project.MSG_INFO);", "+        log(\"Created Label \" + name + \" (\" + desc + \") with view:\\n\" + P4View, ", "+            Project.MSG_INFO);", "-", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f9c877916958fc62d8f82f9782695a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "e840fb5f86f0c9af5c2e2ad616f279c45fce62d8", "commitAfterChange": "ad91082694f9344ae3020e16cf9351e48b751b0b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void runCommand( final String[] cmdline )         throws TaskException", "signatureAfterChange": "      private void runCommand( final CommandlineJava cmdline )         throws TaskException", "diff": ["-    private void runCommand( final String[] cmdline )", "+    private void runCommand( final CommandlineJava cmdline )", "-            getLogger().debug( StringUtil.join( cmdline, \" \" ) );", "+            getLogger().debug( cmdline.toString() );", "-            exe.setCommandline( cmdline );", "+            final String[] commandline = cmdline.getCommandline();", "+            exe.setCommandline( new Commandline( commandline ) );", "-                throw new TaskException( cmdline[ 0 ] + \" failed with return code \" + retval );", "+                throw new TaskException( cmdline + \" failed with return code \" + retval );", "-            throw new TaskException( \"Could not launch \" + cmdline[ 0 ] + \": \" + ioe );", "+            throw new TaskException( \"Could not launch \" + cmdline + \": \" + ioe );"]}]}