{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32df1e8fb85f86fea00dc6e0902edd59", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ca086071b5b99361d4db8bcc7f65a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "7e1efb82231c7859c4b40e3aa70315d027a56ad3", "commitAfterChange": "0cdd9dd277f18f40339ab77c799f904a0b71b83b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean setValue( final Object object,                               Object value,                               final Method method,                               final Class sourceClass,                               final String source,                               final Context context )         throws ConfigurationException", "signatureAfterChange": "      private boolean setValue( final Object object,                               Object value,                               final Method method,                               final Class sourceClass,                               final String source,                               final Context context )         throws ConfigurationException", "diff": ["-            return false;", "+            throw new ConfigurationException( ce.getMessage(), ce );", "+        if( null == value )", "+        {", "+            return false;", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "416d43132b3536f313375635e75f5f0a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipFile.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void close() throws IOException", "signatureAfterChange": "     public void close() throws IOException", "diff": ["+        // this flag is only written here and read in finalize() which", "+        // can never be run in parallel.", "+        // no synchronization needed.", "+        closed = true;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dab85d14967538e6ec921394b962a50", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "0e91a587da5d9a38fe7d49368aa8472c66dd3313", "commitAfterChange": "b85b78ce08a5823bce29a951899ac569dcd6591d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private boolean uptodate(ResourceCollection src, ResourceCollection target)", "signatureAfterChange": "      private boolean uptodate(ResourceCollection src, ResourceCollection target)", "diff": ["+        // don't whine because a file has changed during the last", "+        // second (or whathever our current granularity may be)", "+        datesel.setGranularity(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8478d46f9028e88631fe234d5c412bdb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "f58d3967f08c8cc033ce0af114bb1ed87ca08664", "commitAfterChange": "7254e769ce095cc4272d5f936dd2740e09db8a9e", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["+        // If using an external file, write the command line options to it", "+        if (useExternalFile && javadoc4) {", "+            writeExternalArgs(toExecute);", "+        }", "+"]}]}