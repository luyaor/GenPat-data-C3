{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b53e0e9b4d78b03218707322d7ea6850", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af4815f1c76cfbfe7f68b05dbdaeac4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/converter/lib/StringToIntegerConverter.java", "commitBeforeChange": "16dd6ada599a9ae871aa69f75fb7c4b1f9ca4b69", "commitAfterChange": "23e111153579370db526f6011e454011364f2206", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "diff": ["-            return new Integer( (String)object );", "+            final String value = (String)object;", "+            int result = 0;", "+            if( value.startsWith( \"0x\" ) )", "+            {", "+                result = Integer.parseInt( value.substring( 2 ), 16 );", "+            }", "+            else if( value.startsWith( \"0o\" ) )", "+            {", "+                result = Integer.parseInt( value.substring( 2 ), 8 );", "+            }", "+            else if( value.startsWith( \"0b\" ) )", "+            {", "+                result = Integer.parseInt( value.substring( 2 ), 2 );", "+            }", "+            else", "+            {", "+                result = Integer.parseInt( value );", "+            }", "+            return new Integer( result );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "522c295a3e0b529fbadbfbd1dc78db7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/converter/lib/StringToLongConverter.java", "commitBeforeChange": "16dd6ada599a9ae871aa69f75fb7c4b1f9ca4b69", "commitAfterChange": "23e111153579370db526f6011e454011364f2206", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "diff": ["-            return new Long( (String)object );", "+            final String value = (String)object;", "+            long result = 0;", "+            if( value.startsWith( \"0x\" ) )", "+            {", "+                result = Long.parseLong( value.substring( 2 ), 16 );", "+            }", "+            else if( value.startsWith( \"0o\" ) )", "+            {", "+                result = Long.parseLong( value.substring( 2 ), 8 );", "+            }", "+            else if( value.startsWith( \"0b\" ) )", "+            {", "+                result = Long.parseLong( value.substring( 2 ), 2 );", "+            }", "+            else", "+            {", "+                result = Long.parseLong( value );", "+            }", "+            return new Long( result );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b480c4aa935f2f58563aa9da01686c0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/converter/lib/StringToByteConverter.java", "commitBeforeChange": "16dd6ada599a9ae871aa69f75fb7c4b1f9ca4b69", "commitAfterChange": "23e111153579370db526f6011e454011364f2206", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "diff": ["-            return new Byte( (String)object );", "+            final String value = (String)object;", "+            byte result = 0;", "+            if( value.startsWith( \"0x\" ) )", "+            {", "+                result = Byte.parseByte( value.substring( 2 ), 16 );", "+            }", "+            else if( value.startsWith( \"0o\" ) )", "+            {", "+                result = Byte.parseByte( value.substring( 2 ), 8 );", "+            }", "+            else if( value.startsWith( \"0b\" ) )", "+            {", "+                result = Byte.parseByte( value.substring( 2 ), 2 );", "+            }", "+            else", "+            {", "+                result = Byte.parseByte( value );", "+            }", "+            return new Byte( result );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe40369b20f5e2080f59da6224859334", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/aut/converter/lib/StringToShortConverter.java", "commitBeforeChange": "16dd6ada599a9ae871aa69f75fb7c4b1f9ca4b69", "commitAfterChange": "23e111153579370db526f6011e454011364f2206", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Object context )         throws ConverterException", "diff": ["-            return new Short( (String)object );", "+            final String value = (String)object;", "+            short result = 0;", "+            if( value.startsWith( \"0x\" ) )", "+            {", "+                result = Short.parseShort( value.substring( 2 ), 16 );", "+            }", "+            else if( value.startsWith( \"0o\" ) )", "+            {", "+                result = Short.parseShort( value.substring( 2 ), 8 );", "+            }", "+            else if( value.startsWith( \"0b\" ) )", "+            {", "+                result = Short.parseShort( value.substring( 2 ), 2 );", "+            }", "+            else", "+            {", "+                result = Short.parseShort( value );", "+            }", "+            return new Short( result );"]}]}