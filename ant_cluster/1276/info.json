{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdffabeea6d8becf896b81af5fdf84d7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aff6537b65249aa456fc4c338afc980", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private String readLines(InputStream is) throws IOException", "signatureAfterChange": "     private String readLines(final InputStream is) throws IOException", "diff": ["-    private String readLines(InputStream is) throws IOException {", "-        InputStreamReader isr = new InputStreamReader(is, ResourceUtils.ISO_8859_1);", "-        PushbackReader pbr = new PushbackReader(isr, 1);", "+    private String readLines(final InputStream is) throws IOException {", "+        final InputStreamReader isr = new InputStreamReader(is, ResourceUtils.ISO_8859_1);", "+        final PushbackReader pbr = new PushbackReader(isr, 1);", "-        BufferedReader br = new BufferedReader(pbr);", "+        final BufferedReader br = new BufferedReader(pbr);", "-        StringBuffer fileBuffer = new StringBuffer();", "-        StringBuffer logicalLineBuffer = new StringBuffer();", "+        final StringBuffer fileBuffer = new StringBuffer();", "+        final StringBuffer logicalLineBuffer = new StringBuffer();", "-                    String key = unescape(((Pair)line).getName());", "+                    final String key = unescape(((Pair)line).getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d114a88caa81edb142d07f5810b7b5bb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private static void logFuture(ProjectComponent logTo,                                   ResourceCollection rc, long granularity)", "signatureAfterChange": "     private static void logFuture(final ProjectComponent logTo,                                   final ResourceCollection rc, final long granularity)", "diff": ["-    private static void logFuture(ProjectComponent logTo,", "-                                  ResourceCollection rc, long granularity) {", "-        long now = System.currentTimeMillis() + granularity;", "-        Date sel = new Date();", "+    private static void logFuture(final ProjectComponent logTo,", "+                                  final ResourceCollection rc, final long granularity) {", "+        final long now = System.currentTimeMillis() + granularity;", "+        final Date sel = new Date();", "-        Restrict future = new Restrict();", "+        final Restrict future = new Restrict();", "-        for (Resource r : future) {", "+        for (final Resource r : future) {"]}]}