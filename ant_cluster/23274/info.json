{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec57d5041b953783982089c02a710c1f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6464e6a831129cb3f135a7dee228edbd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Exit.java", "commitBeforeChange": "6f608f120c7888415f926a087c8154e790507824", "commitAfterChange": "64556cb1114e4667159d5941b5e0760ae24ed10f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (testIfCondition() && testUnlessCondition()) {", "+        boolean fail = (nestedConditionPresent()) ? testNestedCondition()", "+                     : (testIfCondition() && testUnlessCondition());", "+        if (fail) {", "-            if (message != null && message.length() > 0) {", "-                text = message;", "+            if (message != null && message.trim().length() > 0) {", "+                text = message.trim();", "-", "-                if (getProject().getProperty(ifCondition) != null) {", "+                if (ifCondition != null && ifCondition.length() > 0", "+                    && getProject().getProperty(ifCondition) != null) {", "-                        && getProject().getProperty(unlessCondition) == null) {", "+                    && getProject().getProperty(unlessCondition) == null) {", "+                }", "+                if (nestedConditionPresent()) {", "+                    text = \"condition satisfied\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "add4157a636b46c8361678850b3a1cb1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "d17115ff6db9c6c09d1b22ad4f573c26ff20da06", "commitAfterChange": "e76559e2f3bc99467718b186f5d5d89315b70777", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["-                throw new BuildException(\"Listener attempted to access \"", "-                    + (priority == MSG_ERR ? \"System.err\" : \"System.out\")", "-                    + \" with message [\" + message", "-                    + \"] - infinite loop terminated\");", "+                /* ", "+                 * One of the Listeners has attempted to access", "+                 * System.err or System.out.", "+                 *", "+                 * We used to throw an exception in this case, but", "+                 * sometimes Listeners can't prevent it(like our own", "+                 * Log4jListener which invokes getLogger() which in", "+                 * turn wants to write to the console).", "+                 *", "+                 * @see http://marc.theaimsgroup.com/?t=110538624200006&r=1&w=2", "+                 *", "+                 * We now (Ant 1.7 and 1.6.3) simply swallow the message.", "+                 */", "+                return;"]}]}