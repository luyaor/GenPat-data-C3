{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82fd914f61080e5e346da7f6cc605f07", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55bedae58fe4289f1c0011338eac6afc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private int getAndMoveToFrontDecode0(final int groupNo)         throws IOException", "signatureAfterChange": "      private int getAndMoveToFrontDecode0(final int groupNo)         throws IOException", "diff": ["-        final InputStream in  = this.in;", "-        final Data data       = this.data;", "-        final int zt          = data.selector[groupNo] & 0xff;", "-        final int[] limit_zt  = data.limit[zt];", "-        int zn = data.minLens[zt];", "+        final InputStream inShadow  = this.in;", "+        final Data dataShadow  = this.data;", "+        final int zt          = dataShadow.selector[groupNo] & 0xff;", "+        final int[] limit_zt  = dataShadow.limit[zt];", "+        int zn = dataShadow.minLens[zt];", "-        int bsLive = this.bsLive;", "-        int bsBuff = this.bsBuff;", "+        int bsLiveShadow = this.bsLive;", "+        int bsBuffShadow = this.bsBuff;", "-            while (bsLive < 1) {", "-                final int thech = in.read();", "+            while (bsLiveShadow < 1) {", "+                final int thech = inShadow.read();", "-                    bsBuff = (bsBuff << 8) | thech;", "-                    bsLive += 8;", "+                    bsBuffShadow = (bsBuffShadow << 8) | thech;", "+                    bsLiveShadow += 8;", "-            bsLive--;", "-            zvec = (zvec << 1) | ((bsBuff >> bsLive) & 1);", "+            bsLiveShadow--;", "+            zvec = (zvec << 1) | ((bsBuffShadow >> bsLiveShadow) & 1);", "-        this.bsLive = bsLive;", "-        this.bsBuff = bsBuff;", "+        this.bsLive = bsLiveShadow;", "+        this.bsBuff = bsBuffShadow;", "-        return data.perm[zt][zvec - data.base[zt][zn]];", "+        return dataShadow.perm[zt][zvec - dataShadow.base[zt][zn]];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89fe3ba31dead2880894e2bf2e131ddb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private void sendMTFValues7(final int nSelectors) throws IOException", "signatureAfterChange": "      private void sendMTFValues7(final int nSelectors) throws IOException", "diff": ["-        final Data data         = this.data;", "-        final byte[][] len      = data.sendMTFValues_len;", "-        final int[][] code      = data.sendMTFValues_code;", "-        final OutputStream out  = this.out;", "-        final byte[] selector   = data.selector;", "-        final char[] sfmap      = data.sfmap;", "-        final int nMTF          = this.nMTF;", "+        final Data dataShadow         = this.data;", "+        final byte[][] len      = dataShadow.sendMTFValues_len;", "+        final int[][] code      = dataShadow.sendMTFValues_code;", "+        final OutputStream outShadow  = this.out;", "+        final byte[] selector   = dataShadow.selector;", "+        final char[] sfmap      = dataShadow.sfmap;", "+        final int nMTFShadow          = this.nMTF;", "-        int bsLive = this.bsLive;", "-        int bsBuff = this.bsBuff;", "+        int bsLiveShadow = this.bsLive;", "+        int bsBuffShadow = this.bsBuff;", "-        for (int gs = 0; gs < nMTF;) {", "-            final int ge = Math.min(gs + G_SIZE - 1, nMTF - 1);", "+        for (int gs = 0; gs < nMTFShadow;) {", "+            final int ge = Math.min(gs + G_SIZE - 1, nMTFShadow - 1);", "-                while (bsLive >= 8) {", "-                    out.write(bsBuff >> 24);", "-                    bsBuff <<= 8;", "-                    bsLive -= 8;", "+                while (bsLiveShadow >= 8) {", "+                    outShadow.write(bsBuffShadow >> 24);", "+                    bsBuffShadow <<= 8;", "+                    bsLiveShadow -= 8;", "-                bsBuff |= code_selCtr[sfmap_i] << (32 - bsLive - n);", "-                bsLive += n;", "+                bsBuffShadow |= code_selCtr[sfmap_i] << (32 - bsLiveShadow - n);", "+                bsLiveShadow += n;", "-        this.bsBuff = bsBuff;", "-        this.bsLive = bsLive;", "+        this.bsBuff = bsBuffShadow;", "+        this.bsLive = bsLiveShadow;"]}]}