{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0679aa7d1a4d18487143500449232b2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f0323688857380c9cdd6a49927d391", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/jsp/compilers/JasperC.java", "commitBeforeChange": "bd92e4de44f659770bc30e39f352dcc8446a1e9a", "commitAfterChange": "248269dea49bf84d7f1a87d23906854c519b9f70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean execute()         throws TaskException", "signatureAfterChange": "     public boolean execute()         throws TaskException", "diff": ["-        Commandline cmd = setupJasperCommand();", "-        try", "+        final ExecuteJava exe = new ExecuteJava();", "+        exe.setClassName( \"org.apache.jasper.JspC\" );", "+        if( getJspc().getClasspath() != null )", "-            // Create an instance of the compiler, redirecting output to", "-            // the project log", "-            //FIXME", "-            JavaTask java = null;//(Java)( getJspc().getProject() ).createTask( \"java\" );", "-            if( getJspc().getClasspath() != null )", "-            {", "-                java.addClasspath( getJspc().getClasspath() );", "-            }", "-            java.setClassname( \"org.apache.jasper.JspC\" );", "-            String args[] = cmd.getArguments();", "-            for( int i = 0; i < args.length; i++ )", "-            {", "-                java.addArg( new Argument( args[ i ] ) );", "-            }", "-            java.execute();", "-            return true;", "+            exe.getClassPath().add( getJspc().getClasspath() );", "-        catch( Exception ex )", "-        {", "-            if( ex instanceof TaskException )", "-            {", "-                throw (TaskException)ex;", "-            }", "-            else", "-            {", "-                throw new TaskException( \"Error running jsp compiler: \",", "-                                         ex );", "-            }", "-        }", "+", "+        setupJasperCommand( exe.getArguments() );", "+", "+        // Create an instance of the compiler, redirecting output to", "+        // the project log", "+        exe.execute( getTaskContext() );", "+        return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b14a26c28999e7da7f4f63a37b6d7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/ZipScanner.java", "commitBeforeChange": "4af209f564ee4c3b8408f089a8f23723a99a6704", "commitAfterChange": "a96627738decba56e1c94e54fa23ecbd7bfdb9a2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private void scanme()", "signatureAfterChange": "     protected void fillMapsFromArchive(Resource src, String encoding,                                        Map fileEntries, Map matchFileEntries,                                        Map dirEntries, Map matchDirEntries)", "diff": ["-     */", "-    private void scanme() {", "-        //do not use a FileResource b/c it pulls File info from the filesystem:", "-        Resource thisresource = new Resource(srcFile.getAbsolutePath(),", "-                                             srcFile.exists(),", "-                                             srcFile.lastModified());", "-        // spare scanning again and again", "-        if (lastScannedResource != null", "-            && lastScannedResource.getName().equals(thisresource.getName())", "-            && lastScannedResource.getLastModified()", "-            == thisresource.getLastModified()) {", "-            return;", "-        }", "-        init();", "+    protected void fillMapsFromArchive(Resource src, String encoding,", "+                                       Map fileEntries, Map matchFileEntries,", "+                                       Map dirEntries, Map matchDirEntries) {", "-        fileEntries.clear();", "-        dirEntries.clear();", "-        matchFileEntries.clear();", "-        matchDirEntries.clear();", "+        File srcFile = null;", "+        if (src instanceof FileResource) {", "+            srcFile = ((FileResource) src).getFile();", "+        } else {", "+            throw new BuildException(\"only file resources are supported\");", "+        }", "-        // record data about the last scanned resource", "-        lastScannedResource = thisresource;"]}]}