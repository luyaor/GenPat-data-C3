{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70a3b0a8bee8d16dbee2ac74da5d8099", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "267bf84b1541609ac73823aabd0e3711", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2OutputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "      private void generateMTFValues()", "signatureAfterChange": "      private void generateMTFValues()", "diff": ["-        final int last          = this.last;", "-        final Data data         = this.data;", "-        final boolean[] inUse   = data.inUse;", "-        final byte[] block      = data.block;", "-        final int[] fmap        = data.fmap;", "-        final char[] sfmap      = data.sfmap;", "-        final int[] mtfFreq     = data.mtfFreq;", "-        final byte[] unseqToSeq = data.unseqToSeq;", "-        final byte[] yy         = data.generateMTFValues_yy;", "+        final int lastShadow          = this.last;", "+        final Data dataShadow         = this.data;", "+        final boolean[] inUse   = dataShadow.inUse;", "+        final byte[] block      = dataShadow.block;", "+        final int[] fmap        = dataShadow.fmap;", "+        final char[] sfmap      = dataShadow.sfmap;", "+        final int[] mtfFreq     = dataShadow.mtfFreq;", "+        final byte[] unseqToSeq = dataShadow.unseqToSeq;", "+        final byte[] yy         = dataShadow.generateMTFValues_yy;", "-        int nInUse = 0;", "+        int nInUseShadow = 0;", "-                unseqToSeq[i] = (byte) nInUse;", "-                nInUse++;", "+                unseqToSeq[i] = (byte) nInUseShadow;", "+                nInUseShadow++;", "-        this.nInUse = nInUse;", "+        this.nInUse = nInUseShadow;", "-        final int eob = nInUse + 1;", "+        final int eob = nInUseShadow + 1;", "-        for (int i = nInUse; --i >= 0;) {", "+        for (int i = nInUseShadow; --i >= 0;) {", "-        for (int i = 0; i <= last; i++) {", "+        for (int i = 0; i <= lastShadow; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55bedae58fe4289f1c0011338eac6afc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "84c1b5f0378a357ba9cf75317fa1fa108247bbdf", "commitAfterChange": "e98db2e5116b7e208157f8c8064deb39ae5b583f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private int getAndMoveToFrontDecode0(final int groupNo)         throws IOException", "signatureAfterChange": "      private int getAndMoveToFrontDecode0(final int groupNo)         throws IOException", "diff": ["-        final InputStream in  = this.in;", "-        final Data data       = this.data;", "-        final int zt          = data.selector[groupNo] & 0xff;", "-        final int[] limit_zt  = data.limit[zt];", "-        int zn = data.minLens[zt];", "+        final InputStream inShadow  = this.in;", "+        final Data dataShadow  = this.data;", "+        final int zt          = dataShadow.selector[groupNo] & 0xff;", "+        final int[] limit_zt  = dataShadow.limit[zt];", "+        int zn = dataShadow.minLens[zt];", "-        int bsLive = this.bsLive;", "-        int bsBuff = this.bsBuff;", "+        int bsLiveShadow = this.bsLive;", "+        int bsBuffShadow = this.bsBuff;", "-            while (bsLive < 1) {", "-                final int thech = in.read();", "+            while (bsLiveShadow < 1) {", "+                final int thech = inShadow.read();", "-                    bsBuff = (bsBuff << 8) | thech;", "-                    bsLive += 8;", "+                    bsBuffShadow = (bsBuffShadow << 8) | thech;", "+                    bsLiveShadow += 8;", "-            bsLive--;", "-            zvec = (zvec << 1) | ((bsBuff >> bsLive) & 1);", "+            bsLiveShadow--;", "+            zvec = (zvec << 1) | ((bsBuffShadow >> bsLiveShadow) & 1);", "-        this.bsLive = bsLive;", "-        this.bsBuff = bsBuff;", "+        this.bsLive = bsLiveShadow;", "+        this.bsBuff = bsBuffShadow;", "-        return data.perm[zt][zvec - data.base[zt][zn]];", "+        return dataShadow.perm[zt][zvec - dataShadow.base[zt][zn]];"]}]}