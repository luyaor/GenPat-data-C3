{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1880c7a52344ab3e10477e1f64963abb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a8de65d9a06aca8343a28be1e552e3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "c7e6b6c8d782d04c8f7a2406938567b36f29873d", "commitAfterChange": "f26fff422c8ac77a5ca16ca226529fbed7630621", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public ProjectManager getProjectManager()", "signatureAfterChange": "      public ProjectManager createProjectManager( final Project project,                                                  final Parameters parameters )         throws Exception", "diff": ["-     */", "-    public ProjectManager getProjectManager()", "+    public ProjectManager createProjectManager( final Project project, ", "+                                                final Parameters parameters )", "+        throws Exception", "-        return m_projectManager;", "+        final String component = getParameter( ProjectManager.ROLE );", "+        final ProjectManager projectManager = ", "+            (ProjectManager)createComponent( component, ProjectManager.class );", "+", "+        setupLogger( projectManager );", "+", "+        if( projectManager instanceof Composable )", "+        {", "+            final DefaultComponentManager componentManager =", "+                new DefaultComponentManager( m_componentManager );", "+            componentManager.put( Project.ROLE, project );", "+            ((Composable)projectManager).compose( componentManager );", "+        }", "+", "+        if( projectManager instanceof Parameterizable )", "+        {", "+            ((Parameterizable)projectManager).parameterize( parameters );", "+        }        ", "+", "+        if( projectManager instanceof Initializable )", "+        {", "+            ((Initializable)projectManager).initialize();", "+        }        ", "+", "+        return projectManager;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee0053466fa24938c04f77f67ad8aabb", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "06931fc27d82d9e50168a6e9496fbba5e4e8f66c", "commitAfterChange": "9243e2436d957b1b2ad1b4b17eeb4c99924ac247", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private ProjectBuilder getProjectBuilder( final String type )         throws Exception", "signatureAfterChange": "      private ProjectBuilder getProjectBuilder( final String type,                                                final Parameters parameters )         throws Exception", "diff": ["-    private ProjectBuilder getProjectBuilder( final String type )", "+    private ProjectBuilder getProjectBuilder( final String type, ", "+                                              final Parameters parameters )", "-        //FIXME: Should not be ignoring type", "-        return m_builder;", "+", "+        final TypeFactory factory = m_typeManager.getFactory( ProjectBuilder.ROLE );", "+        final ProjectBuilder builder = (ProjectBuilder)factory.create( type );", "+", "+        setupLogger( builder );", "+", "+        if( builder instanceof Composable )", "+        {", "+            ((Composable)builder).compose( m_componentManager );", "+        }", "+", "+        if( builder instanceof Parameterizable )", "+        {", "+            ((Parameterizable)builder).parameterize( parameters );", "+        }        ", "+", "+        if( builder instanceof Initializable )", "+        {", "+            ((Initializable)builder).initialize();", "+        }        ", "+", "+        return builder;"]}]}