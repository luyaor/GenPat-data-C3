{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a423fcd5ffe5bcc21d3c04cc62c295c5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d61838e9240acb8f1dc75d0e82f2702", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ManifestTask.java", "commitBeforeChange": "4462d806089e69c25b2a09fa31060915d3fef1da", "commitAfterChange": "b8bdf2149a8b9c12a3d97f5598bfa660b25950ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void checkAttribute(Manifest.Attribute attribute) throws ManifestException", "signatureAfterChange": "     private void checkAttribute(Manifest.Attribute attribute) throws ManifestException", "diff": ["+     */", "-        /*", "-         * Jar-Specification \"Name-Value pairs and Sections\":", "-         *   name:       alphanum *headerchar ", "-         *   alphanum:   {A-Z} | {a-z} | {0-9} ", "-         *   headerchar: alphanum | - | _", "-         * ", "-         * So the resulting regexp would be [A-Za-z0-9][A-Za-z0-9-_]*", "-         */", "-        String namePattern = \"[A-Za-z0-9][A-Za-z0-9-_]*\";", "-", "+        char ch = name.charAt(0);", "-        /* FIXME Does not work for me :-( ", "-        RegexpMatcherFactory factory = new RegexpMatcherFactory();", "-        RegexpMatcher regexpMatcher = factory.newRegexpMatcher(getProject());", "-        regexpMatcher.setPattern(namePattern);", "-        if (!regexpMatcher.matches(name)) {", "-            throw new ManifestException(", "-                  \"Attribute name is not valid according to the specification. \"", "-                + \"(which means regexp: \" + namePattern + \")\" ", "-            );", "+        if (ch == '-' || ch == '_') {", "+            throw new ManifestException(\"Manifest attribute names must not contain '\" + ch + \"'\");", "-        */", "-        /* Works, but not JDK 1.2 compliant ", "-        if (!name.matches(namePattern)) {", "-            throw new ManifestException(\"Attribute name is not valid according to the specification.\");", "+        for (int i = 0; i < name.length(); i++) {", "+            ch = name.charAt(i);", "+            if (VALID_ATTRIBUTE_CHARS.indexOf(ch) < 0) {", "+                throw new ManifestException(\"Manifest attribute names must not contain '\" + ch + \"'\");", "+            }", "-        */", "-        /* */", "-        if (attribute.getName().indexOf(' ') >- 1) {", "-            throw new ManifestException(\"Manifest attribute name must not contain spaces.\");", "-        }", "-        /* */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce970a1a8651ed15601720ab7b036dc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "9016f410697a0d613609a17549fdb69a482caaab", "commitAfterChange": "40e298139fafbe0b8a5694c0175d6e43b254acf8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "diff": ["-                // added with JDK 1.4.2 - and isn't present in 1.5.0", "-                // or 1.6.0 either", "+                // added with JDK 1.4.2 - and isn't present in 1.5.0+", "-        } else if ((assumeJava15() || assumeJava16())", "+        } else if ((assumeJava15() || assumeJava16() || assumeJava17())", "-                attributes.log(\"\", Project.MSG_WARN);", "-                attributes.log(\"          WARNING\", Project.MSG_WARN);", "-                attributes.log(\"\", Project.MSG_WARN);", "-                attributes.log(\"The -source switch defaults to 1.5 in JDK 1.5 and 1.6.\",", "-                               Project.MSG_WARN);", "-                attributes.log(\"If you specify -target \" + t", "-                               + \" you now must also specify -source \" + s", "-                               + \".\", Project.MSG_WARN);", "-                attributes.log(\"Ant will implicitly add -source \" + s", "-                               + \" for you.  Please change your build file.\",", "-                               Project.MSG_WARN);", "-                cmd.createArgument().setValue(\"-source\");", "-                cmd.createArgument().setValue(s);", "+                setImplicitSourceSwitch((assumeJava15() || assumeJava16())", "+                                        ? \"1.5 in JDK 1.5 and 1.6\"", "+                                        : \"1.7 in JDK 1.7\",", "+                                        cmd, s, t);", "+            } else if (assumeJava17() && (t.equals(\"1.5\") || t.equals(\"1.6\"))) {", "+                setImplicitSourceSwitch(\"1.7 in JDK 1.7\", cmd, t, t);"]}]}