{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "105cda6a60b7952873ed9dd3a1ab0b52", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b6cb6a411093ca39d3dd474cad835c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "22d3473e8e322ed72558e92c17cdf5c6366613a9", "commitAfterChange": "c8e91147e37e34c4024c33ecf454e7c46639baa2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "     protected Class defineClassFromData(File container, byte[] classData, String classname)             throws IOException", "signatureAfterChange": "     protected Class defineClassFromData(File container, byte[] classData, String classname)             throws IOException", "diff": ["-        // XXX should instead make a new ProtectionDomain with a CodeSource", "-        // corresponding to container.toURI().toURL() and the same", "-        // PermissionCollection as Project.class.protectionDomain had", "-        return defineClass(classname, classData, 0, classData.length, Project.class", "-                .getProtectionDomain());", "+        ProtectionDomain currentPd = Project.class.getProtectionDomain();", "+        String classResource = getClassFilename(classname);", "+        CodeSource src = new CodeSource(FILE_UTILS.getFileURL(container),", "+                                        getCertificates(container,", "+                                                        classResource));", "+        ProtectionDomain classesPd =", "+            new ProtectionDomain(src, currentPd.getPermissions(),", "+                                 this,", "+                                 currentPd.getPrincipals());", "+        return defineClass(classname, classData, 0, classData.length,", "+                           classesPd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d48f66e40ed1e24395633601edd4c27b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "56250d886e6efcfa207e9c1f2cd4b00985e259fd", "commitAfterChange": "be938b1e8fe6d68aec358cb6982c7d70fe827886", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void deployType( final Deployment deployment,                             final TypeDefinition typeDef )         throws Exception", "signatureAfterChange": "     public void deployType( final Deployment deployment,                             final TypeDefinition typeDef )         throws Exception", "diff": ["-            handleType( deployment, roleShorthand, typeName, className );", "+            final String role = getRoleForName( roleShorthand );", "+            final Class roleType = deployment.getClassLoader().loadClass( role );", "+            handleType( deployment, roleType, typeName, className );", "+", "+            if( getLogger().isDebugEnabled() )", "+            {", "+                final String message =", "+                    REZ.getString( \"register-type.notice\", roleShorthand, typeName );", "+                getLogger().debug( message );", "+            }"]}]}