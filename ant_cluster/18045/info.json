{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4bb56fa12c66752381072bdb6a9afa1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b5e9231e79a385b8e5a17d9f63bbf30", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToShortConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Short( (String)original ); }", "+        try { return new Short( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-short.error\", object );", "+            throw new ConverterException( message, nfe );", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e349b633f1e288c985a08e15f0262f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/core/StringToIntegerConverter.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Object convert( final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "      public Object convert( final Object object, final Context context )         throws ConverterException", "diff": ["-    public Object convert( final Object original, final Context context )", "+    public Object convert( final Object object, final Context context )", "-        try { return new Integer( (String)original ); }", "+        try { return new Integer( (String)object ); }", "-            throw new ConverterException( \"Error formatting object\", nfe );", "+            final String message = REZ.getString( \"convert.bad-integer.error\", object );", "+            throw new ConverterException( message, nfe );"]}]}