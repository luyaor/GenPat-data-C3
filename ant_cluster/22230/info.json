{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1999ed15fe4c792b2bbc3649e60caf56", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26c58be57224a6fb3790199c71314916", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ManifestTest.java", "commitBeforeChange": "af875267edf7dbe63c07caa71132aa9f07c66a8f", "commitAfterChange": "4965535328781e63aacbf211d2e96a8462ea133a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     @Test     public void testLongLine() throws IOException, ManifestException", "signatureAfterChange": "     @Test     public void testLongLine() throws IOException, ManifestException", "diff": ["-        BufferedReader in = new BufferedReader(new FileReader(expandedManifest));", "-        ", "+        FileReader fin = new FileReader(expandedManifest);", "+        try {", "+        BufferedReader in = new BufferedReader(fin);", "+        ", "-        ", "+            in.close();", "+        } finally {", "+            fin.close();", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79588f6c8026bdd7f81afe57a9c66da3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Property.java", "commitBeforeChange": "33107ab10098823c23924741100a6c3faf9fd267", "commitAfterChange": "ccea996681f5f6e770cd8a4a204c383ece7e14f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void loadFile (File file) throws BuildException", "signatureAfterChange": "      protected void loadFile (File file) throws BuildException", "diff": ["-    private void loadFile (File file) throws BuildException {", "+    protected void loadFile (File file) throws BuildException {", "-            if (file.exists()) {", "-                props.load(new FileInputStream(file));", "+            if (file.exists()) { ", "+                FileInputStream fis = new FileInputStream(file);", "+                try { ", "+                    props.load(fis);", "+                } finally {", "+                    if (fis != null) { ", "+                        fis.close();", "+                    }", "+                }"]}]}