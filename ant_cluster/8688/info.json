{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6232ae898e832a190a10b7ca3a6f729b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b6b1ce2506cd949760d505d9ac6548a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "f83f5c68c975f31a384cc24e94be4e5ebfa2da4d", "commitAfterChange": "f463bd2cab8b132695d8bf60c889212628eba281", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkExtension( final File file )", "signatureAfterChange": "     private void checkExtension(final File file)", "diff": ["-    private void checkExtension( final File file )", "-    {", "-        if( !file.exists() )", "-        {", "+    private void checkExtension(final File file) {", "+        if (!file.exists()) {", "-            throw new BuildException( message );", "+            throw new BuildException(message);", "-        if( !file.isFile() )", "-        {", "+        if (!file.isFile()) {", "-            throw new BuildException( message );", "+            throw new BuildException(message);", "-        if( !m_checkExtension )", "-        {", "-            final String message = \"Setting property to \" +", "-                file + \" without verifying library satisfies extension\";", "-            getProject().log( message, Project.MSG_VERBOSE );", "-            setLibraryProperty( file );", "-        }", "-        else", "-        {", "-            getProject().log( \"Checking file \" + file +", "-                              \" to see if it satisfies extension\",", "-                              Project.MSG_VERBOSE );", "+        if (!checkExtension) {", "+            final String message = \"Setting property to \" + file", "+                + \" without verifying library satisfies extension\";", "+            getProject().log(message, Project.MSG_VERBOSE);", "+            setLibraryProperty(file);", "+        } else {", "+            getProject().log(\"Checking file \" + file", "+                + \" to see if it satisfies extension\", Project.MSG_VERBOSE);", "-                ExtensionUtil.getManifest( file );", "+                ExtensionUtil.getManifest(file);", "-                Extension.getAvailable( manifest );", "-            for( int i = 0; i < extensions.length; i++ )", "-            {", "+                Extension.getAvailable(manifest);", "+            for (int i = 0; i < extensions.length; i++) {", "-                if( extension.isCompatibleWith( m_extension ) )", "-                {", "-                    setLibraryProperty( file );", "+                if (extension.isCompatibleWith(requiredExtension)) {", "+                    setLibraryProperty(file);", "-            getProject().log( \"File \" + file + \" skipped as it \" +", "-                              \"does not satisfy extension\",", "-                              Project.MSG_VERBOSE );", "+            getProject().log(\"File \" + file + \" skipped as it \"", "+                + \"does not satisfy extension\", Project.MSG_VERBOSE);", "-            throw new BuildException( message );", "+            throw new BuildException(message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af7d3ca002aba6621e46e89852359a7d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/JarLibResolveTask.java", "commitBeforeChange": "7da091a46f02f686fb6c2f960b2f6c261a7fbdf2", "commitAfterChange": "4a827ff185932f529e5ef867256e54f5aab798e3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void checkExtension(final File file)", "signatureAfterChange": "     private void checkExtension(final File file)", "diff": ["-            final String message =", "-                \"File \" + file + \" does not exist\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"File \" + file + \" does not exist\");", "-            final String message =", "-                \"File \" + file + \" is not a file\";", "-            throw new BuildException(message);", "+            throw new BuildException(\"File \" + file + \" is not a file\");", "-", "-            final String message = \"Setting property to \" + file", "-                + \" without verifying library satisfies extension\";", "-            getProject().log(message, Project.MSG_VERBOSE);", "+            getProject().log(\"Setting property to \" + file", "+                    + \" without verifying library satisfies extension\", Project.MSG_VERBOSE);", "-            getProject().log(\"Checking file \" + file", "-                + \" to see if it satisfies extension\", Project.MSG_VERBOSE);", "-            final Manifest manifest =", "-                ExtensionUtil.getManifest(file);", "-            final Extension[] extensions =", "-                Extension.getAvailable(manifest);", "+            getProject().log(\"Checking file \" + file + \" to see if it satisfies extension\",", "+                    Project.MSG_VERBOSE);", "+            final Manifest manifest = ExtensionUtil.getManifest(file);", "+            final Extension[] extensions = Extension.getAvailable(manifest);", "-", "-            getProject().log(\"File \" + file + \" skipped as it \"", "-                + \"does not satisfy extension\", Project.MSG_VERBOSE);", "-", "-            final String message =", "-                \"File \" + file + \" does not satisfy extension\";", "+            final String message = \"File \" + file + \" skipped as it \" + \"does not satisfy extension\";", "+            getProject().log(message, Project.MSG_VERBOSE);"]}]}