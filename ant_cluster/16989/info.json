{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d73a65ca20b4556d46050a921560572", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c39446f1762d258c137991791b4148", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "fd0da1440ca6e87774f1aa42277c55f5d708ecea", "commitAfterChange": "523f5d39aad823b0144d6daa7ff43f6fa1fb5e55", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["+            final String message = REZ.getString( \"configuring-object.notice\", object );", "+                final String message = REZ.getString( \"configurable.notice\" );", "-                getLogger().debug( \"Configuring object via Configurable reflection\" );", "+                final String message = REZ.getString( \"reflection.notice\" );", "+                getLogger().debug( message );", "-                    getLogger().debug( \"Configuring attribute name=\" + name +", "-                                       \" value=\" + value );", "+                    final String message = REZ.getString( \"configure-attribute.notice\", name, value );", "+                    getLogger().debug( message );", "-                    getLogger().debug( \"Configuring subelement name=\" + child.getName() );", "+                    final String message =", "+                        REZ.getString( \"configure-subelement.notice\", child.getName() );", "+                    getLogger().debug( message );", "-                        getLogger().debug( \"Configuring content \" + content );", "+                        final String message =", "+                            REZ.getString( \"configure-content.notice\", content );", "+                        getLogger().debug( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a773da16fd5e5749d06f45128edf65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "a3bafc4dc65a60091a09c190752987fa491412e1", "commitAfterChange": "c748e33dc59acb6c057543af70964487dedf97c3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     private Object createComponent( final String component, final Class clazz )         throws Exception", "signatureAfterChange": "     private Object createComponent( final String component, final Class clazz )         throws Exception", "diff": ["-                throw new Exception( \"Object \" + component + \" is not an instance of \" +", "-                                     clazz );", "+                final String message = REZ.getString( \"bad-type.error\", component, clazz.getName() );", "+                throw new Exception( message );", "-            throw new Exception( \"Non-public constructor for \" + clazz + \" \" + component );", "+            final String message = REZ.getString( \"bad-ctor.error\", clazz.getName(), component );", "+            throw new Exception( message );", "-            throw new Exception( \"Error instantiating class for \" + clazz + \" \" + component );", "+            final String message =", "+                REZ.getString( \"no-instantiate.error\", clazz.getName(), component );", "+            throw new Exception( message );", "-            throw new Exception( \"Could not find the class for \" + clazz +", "-                                 \" (\" + component + \")\" );", "+            final String message =", "+                REZ.getString( \"no-class.error\", clazz.getName(), component );", "+            throw new Exception( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90831cec603c5ba11a746c004f5ef1d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/frontends/CLIMain.java", "commitBeforeChange": "f91f776468c676f75f26ceedd0bfec27d8502da3", "commitAfterChange": "b30c144309f56e380bbc34897b8ab7ff29c40f17", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void execute( final String[] args )         throws Exception", "signatureAfterChange": "      private void execute( final String[] args )         throws Exception", "diff": ["-            throw new Exception( \"myrmidon-home (\" + homeDir + \") is not a directory\" );", "+            final String message = REZ.getString( \"home-not-dir.error\", homeDir );", "+            throw new Exception( message );", "-            throw new Exception( \"File \" + buildFile + \" is not a file or doesn't exist\" );", "+            final String message = REZ.getString( \"bad-file.error\", buildFile );", "+            throw new Exception( message );", "-        getLogger().warn( \"Ant Build File: \" + buildFile );", "-        getLogger().info( \"Ant Home Directory: \" + homeDir );", "+        if( getLogger().isInfoEnabled() )", "+        {", "+            final String message = REZ.getString( \"buildfile.notice\", buildFile );", "+            getLogger().warn( message );", "+        }", "+", "+        if( getLogger().isInfoEnabled() )", "+        {", "+            final String message = REZ.getString( \"homedir.notice\", homeDir );", "+            getLogger().info( message );", "+        }", "-            System.out.println( \"Continue ? (Enter no to stop)\" );", "+            final String message = REZ.getString( \"repeat.notice\" );", "+            System.out.println( message );"]}]}