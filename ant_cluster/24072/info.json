{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e78dbd3778f8f5efaba387bff586e9ca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "086b8dfcd78e435e7e55950f8ac625d7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private Object createTypeInstance(Class typeClass, AntLibFactory libFactory,                                       BuildElement model, String localName)          throws ExecutionException", "diff": ["-                                      BuildElement model)", "+                                      BuildElement model, String localName)", "-            Object typeInstance = libFactory.createTypeInstance(typeClass);", "+            Object typeInstance", "+                 = libFactory.createTypeInstance(typeClass, localName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b07fcb3027542e6397a2c533131796", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "1523b24a93d8e4b849afd938ab7eaffcb6031969", "commitAfterChange": "ce1af4647df3f1fab5344250d1751b334e774d77", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void addNestedElement(Reflector reflector, Object element,                                   BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void addNestedElement(AntLibFactory factory, Reflector reflector,                                   Object element, BuildElement model)          throws ExecutionException", "diff": ["-    private void addNestedElement(Reflector reflector, Object element,", "-                                  BuildElement model)", "+    private void addNestedElement(AntLibFactory factory, Reflector reflector,", "+                                  Object element, BuildElement model)", "-            typeInstance = createTypeInstance(nestedType, null, model);", "+            typeInstance = createTypeInstance(nestedType, factory, model);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6bd6fbdf69797769b8e94f53a6aa44c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionFrame.java", "commitBeforeChange": "7499c443d67445ea8fd0b8f4bd56c72251b18bf4", "commitAfterChange": "b7e43ad8c5906ae2b6d6b42f8b2715dc7d2e7a16", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 37, "signatureBeforeChange": "     private Object configureType(String typeName, BuildElement model)          throws ExecutionException, TaskException", "signatureAfterChange": "     private Object configureType(String typeName, BuildElement model)          throws ExecutionException", "diff": ["-         throws ExecutionException, TaskException {", "+         throws ExecutionException {", "-            Object typeInstance = createTypeInstance(typeClass, model);", "+            AntLibFactory libFactory = getLibFactory(antLibrary);", "+            Object typeInstance", "+                 = createTypeInstance(typeClass, libFactory, model);"]}]}