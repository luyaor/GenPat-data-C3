{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "827065640ff28815ace1be825be0b42d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0032258757fbfc3d1d9c0339330d3cc9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "10c41029aeaba31241f1a85f9b02591b357e20b6", "commitAfterChange": "818cb969adef1df0f5918ba62f80f62502d5e53e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "       public static int runTest(JUnitTest test)", "signatureAfterChange": "      private static void createAndStoreFormatter(String line)          throws BuildException", "diff": ["+    private static void createAndStoreFormatter(String line) ", "+        throws BuildException {", "-    public static int runTest(JUnitTest test) {", "-        final JUnitTestRunner runner = new JUnitTestRunner(test);", "-        runner.run();", "-        return runner.getRetCode();", "+        FormatterElement fe = new FormatterElement();", "+        StringTokenizer tok = new StringTokenizer(line, \",\");", "+        fe.setClassname(tok.nextToken());", "+        if (tok.hasMoreTokens()) {", "+            fe.setOutfile(new java.io.File(tok.nextToken()));", "+        }", "+        fromCmdLine.addElement(fe.createFormatter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df946744d691803aa18a74c0b4f5dbc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "90380952be94be5a64070fbd671ded36d87f1d9f", "commitAfterChange": "da10e54de9442a412e0bd1ccf9cf235f49e6c2b7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private static void createAndStoreFormatter(String line)          throws BuildException", "signatureAfterChange": "     private static void createAndStoreFormatter(String line)         throws BuildException", "diff": ["-    private static void createAndStoreFormatter(String line) ", "+     */", "+    private static void createAndStoreFormatter(String line)", "-", "-        StringTokenizer tok = new StringTokenizer(line, \",\");", "-        fe.setClassname(tok.nextToken());", "-        if (tok.hasMoreTokens()) {", "-            fe.setOutfile(new java.io.File(tok.nextToken()));", "+        int pos = line.indexOf(',');", "+        if (pos == -1) {", "+            fe.setClassname(line);", "+        } else {", "+            fe.setClassname(line.substring(0, pos));", "+            fe.setOutfile( new File(line.substring(pos + 1)) );"]}]}