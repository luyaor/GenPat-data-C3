{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5874e1cc796cb0d90bcc427aad4d4305", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5168f10f91a5ce515eb3442ff81807", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "4db248f63f4583aff79dc9d43cb64d84d4e33eb9", "commitAfterChange": "150b0c8bbac0cf9dae143bfebcf5772a6efa99a0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile(File src) throws BuildException", "signatureAfterChange": "     private void processFile(File src) throws BuildException", "diff": ["-        File temp = new File(src.getPath() + \".temp\");", "+        File temp = fileUtils.createTempFile(\"rep\", \".tmp\", ", "+                                             fileUtils.getParentFile(src));", "-        if (temp.exists()) {", "-            throw new BuildException(\"Replace: temporary file \" + temp.getPath() + \" already exists\", location);", "-        }", "-", "+        Reader reader = null;", "+        Writer writer = null;", "-            Reader fileReader = encoding == null ? new FileReader(src)", "-                                                 : new InputStreamReader(new FileInputStream(src), encoding);", "-            Writer fileWriter = encoding == null ? new FileWriter(temp)", "-                                                 : new OutputStreamWriter(new FileOutputStream(temp), encoding);", "+            reader = encoding == null ? new FileReader(src)", "+                : new InputStreamReader(new FileInputStream(src), encoding);", "+            writer = encoding == null ? new FileWriter(temp)", "+                : new OutputStreamWriter(new FileOutputStream(temp), encoding);", "-            BufferedReader br = new BufferedReader(fileReader);", "-            BufferedWriter bw = new BufferedWriter(fileWriter);", "+            BufferedReader br = new BufferedReader(reader);", "+            BufferedWriter bw = new BufferedWriter(writer);", "+            writer = null;", "+            reader = null;", "-            } else {", "-                temp.delete();", "+                temp = null;", "+        } finally {", "+            if (reader != null) {", "+                try {", "+                    reader.close();", "+                } catch (IOException e) {}", "+            }", "+            if (writer != null) {", "+                try {", "+                    writer.close();", "+                } catch (IOException e) {}", "+            }", "+            if (temp != null) {", "+                temp.delete();", "+            }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ac6548c79ff90e713f8777342efd35", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/BZip2Test.java", "commitBeforeChange": "3477bbf6474cdd2b70b12eb638e64415a4f1c2ec", "commitAfterChange": "134d95afef9b42cf08f2eccb077b97525ac38034", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testRealTest() throws IOException", "signatureAfterChange": "      public void testRealTest() throws IOException", "diff": ["-        assertTrue(\"File content mismatch\",", "-            FILE_UTILS.contentEquals(project.resolveFile(\"expected/asf-logo-huge.tar.bz2\"),", "-                                    project.resolveFile(\"asf-logo-huge.tar.bz2\")));", "+", "+        // doesn't work: Depending on the compression engine used,", "+        // compressed bytes may differ. False errors would be", "+        // reported.", "+        // assertTrue(\"File content mismatch\",", "+        // FILE_UTILS.contentEquals(project.resolveFile(\"expected/asf-logo-huge.tar.bz2\"),", "+        // project.resolveFile(\"asf-logo-huge.tar.bz2\")));", "+", "+        // We have to compare the decompressed content instead:", "+", "+        File originalFile =", "+            project.resolveFile(\"expected/asf-logo-huge.tar.bz2\");", "+        File actualFile   = project.resolveFile(\"asf-logo-huge.tar.bz2\");", "+", "+        InputStream originalIn =", "+            new BufferedInputStream(new FileInputStream(originalFile));", "+        assertEquals((byte) 'B', originalIn.read());", "+        assertEquals((byte) 'Z', originalIn.read());", "+", "+        InputStream actualIn =", "+            new BufferedInputStream(new FileInputStream(actualFile));", "+        assertEquals((byte) 'B', actualIn.read());", "+        assertEquals((byte) 'Z', actualIn.read());", "+", "+        originalIn = new CBZip2InputStream(originalIn);", "+        actualIn   = new CBZip2InputStream(actualIn);", "+", "+        while (true) {", "+            int expected = originalIn.read();", "+            int actual   = actualIn.read();", "+            if (expected >= 0) {", "+                if (expected != actual) {", "+                    fail(\"File content mismatch\");", "+                }", "+            } else {", "+                if (actual >= 0) {", "+                    fail(\"File content mismatch\");", "+                }", "+                break;", "+            }", "+        }", "+", "+        originalIn.close();", "+        actualIn.close();"]}]}