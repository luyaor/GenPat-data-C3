{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "210727650d2c6f94ed3a14ae5f305483", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dbf8dfa949cf5a314db630f1bff24fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "c4385b7b1baf768791391474a0f58441bbcd6261", "commitAfterChange": "07382b400af7ecebc64eff5c55b4f562efd156d5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected RecorderEntry getRecorder( String name, Project proj )         throws TaskException", "signatureAfterChange": "     protected RecorderEntry getRecorder( final String name )         throws TaskException", "diff": ["-    protected RecorderEntry getRecorder( String name, Project proj )", "+    protected RecorderEntry getRecorder( final String name )", "-        Object o = recorderEntries.get( name );", "-        RecorderEntry entry;", "-        if( o == null )", "+        final Object o = c_recorderEntries.get( name );", "+        if( null == o )", "-            // create a recorder entry", "-            try", "-            {", "-                entry = new RecorderEntry( name );", "-                PrintStream out = null;", "-                if( append == null )", "-                {", "-                    out = new PrintStream(", "-                        new FileOutputStream( name ) );", "-                }", "-                else", "-                {", "-                    out = new PrintStream(", "-                        new FileOutputStream( name, append.booleanValue() ) );", "-                }", "-                entry.setErrorPrintStream( out );", "-                entry.setOutputPrintStream( out );", "-            }", "-            catch( IOException ioe )", "-            {", "-                throw new TaskException( \"Problems creating a recorder entry\",", "-                                         ioe );", "-            }", "-            proj.addBuildListener( entry );", "-            recorderEntries.put( name, entry );", "+            return (RecorderEntry)o;", "+        }", "+", "+        // create a recorder entry", "+        try", "+        {", "+            final PrintStream output = createOutput( name );", "+            final RecorderEntry entry = new RecorderEntry( output );", "+            c_recorderEntries.put( name, entry );", "+            return entry;", "+        }", "+        catch( final IOException ioe )", "+        {", "+            throw new TaskException( \"Problems creating a recorder entry\",", "+                                     ioe );", "+        }", "+    }", "-            entry = (RecorderEntry)o;", "-        return entry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c47b7073a9c43ef7ee4d895725e934db", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Recorder.java", "commitBeforeChange": "c4385b7b1baf768791391474a0f58441bbcd6261", "commitAfterChange": "07382b400af7ecebc64eff5c55b4f562efd156d5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected RecorderEntry getRecorder( String name, Project proj )         throws TaskException", "signatureAfterChange": "     protected RecorderEntry getRecorder( final String name )         throws TaskException", "diff": ["-    protected RecorderEntry getRecorder( String name, Project proj )", "+    protected RecorderEntry getRecorder( final String name )", "-        Object o = recorderEntries.get( name );", "-        RecorderEntry entry;", "-        if( o == null )", "+        final Object o = c_recorderEntries.get( name );", "+        if( null == o )", "-            // create a recorder entry", "-            try", "-            {", "-                entry = new RecorderEntry( name );", "-                PrintStream out = null;", "-                if( append == null )", "-                {", "-                    out = new PrintStream(", "-                        new FileOutputStream( name ) );", "-                }", "-                else", "-                {", "-                    out = new PrintStream(", "-                        new FileOutputStream( name, append.booleanValue() ) );", "-                }", "-                entry.setErrorPrintStream( out );", "-                entry.setOutputPrintStream( out );", "-            }", "-            catch( IOException ioe )", "-            {", "-                throw new TaskException( \"Problems creating a recorder entry\",", "-                                         ioe );", "-            }", "-            proj.addBuildListener( entry );", "-            recorderEntries.put( name, entry );", "+            return (RecorderEntry)o;", "+        }", "+", "+        // create a recorder entry", "+        try", "+        {", "+            final PrintStream output = createOutput( name );", "+            final RecorderEntry entry = new RecorderEntry( output );", "+            c_recorderEntries.put( name, entry );", "+            return entry;", "+        }", "+        catch( final IOException ioe )", "+        {", "+            throw new TaskException( \"Problems creating a recorder entry\",", "+                                     ioe );", "+        }", "+    }", "-            entry = (RecorderEntry)o;", "-        return entry;"]}]}