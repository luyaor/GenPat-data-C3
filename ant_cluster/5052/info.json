{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "832f3bfca33c3e0775955c1308f6abe6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05141884c9c63481c8713e0064693744", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "commitAfterChange": "eca5133693881d72fbd157619b03647e7e255789", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 23, "signatureBeforeChange": "         public String getAttributeValue(String attributeName)", "signatureAfterChange": "         public String getAttributeValue(String attributeName)", "diff": ["-            Object attribute = attributes.get(attributeName.toLowerCase());", "+            Attribute attribute = getAttribute(attributeName.toLowerCase());", "-            if (attribute instanceof Attribute) {", "-                return ((Attribute)attribute).getValue();", "-            }", "-            else {", "-                String value = \"\";", "-                for (Enumeration e = ((Vector)attribute).elements(); e.hasMoreElements();) {", "-                    Attribute classpathAttribute = (Attribute)e.nextElement();", "-                    value += classpathAttribute.getValue() + \" \";", "-                }", "-                return value.trim();", "-            }", "+            return attribute.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bc19bad8ba18b95ddabc2189330a6fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/Property.java", "commitBeforeChange": "5872737ff5d0006fffd509da87f4bc9115cb5a39", "commitAfterChange": "2a9f49ba6cde3f1bdf4a1234a4e4f14773c34736", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-        final TaskContext context = getContext();", "-", "-        Object value = m_value;", "-", "-        if( value instanceof String )", "-        {", "-            value = context.resolveValue( (String)value );", "-        }", "-", "-        while( null != value && value instanceof Resolvable )", "-        {", "-            value = ((Resolvable)value).resolve( context );", "-        }", "-", "-            context.setProperty( m_name, value );", "+            getContext().setProperty( m_name, m_value );", "-            context.setProperty( m_name, value, TaskContext.PARENT );", "+            getContext().setProperty( m_name, m_value, TaskContext.PARENT );"]}]}