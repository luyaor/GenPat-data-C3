{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5aa60b6bdd9e5e51472d5260f64bf42", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "638f263023ffd1fb91ad01a6c4d95db7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "6fd0ddc8b843c2f0348fc51f680d465b89046fe7", "commitAfterChange": "d0fe01180db02cdd89d8e1baac7fac3f54041348", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "signatureAfterChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "diff": ["-                nc = new NestedCreator() {", "-                    public boolean isPolyMorphic() {", "-                        return false;", "-                    }", "-                    public Class getElementClass() {", "-                        return null;", "-                    }", "-", "-                    public Object getRealObject() {", "-                        return null;", "-                    }", "-", "-                    public Object create(", "+                nc = new NestedCreator(null) {", "+                    Object create(", "-                    }", "-                    public void store(Object parent, Object child) {", "-                nc = new NestedCreator() {", "-                    public boolean isPolyMorphic() {", "-                        return false;", "-                    }", "-                    public Class getElementClass() {", "-                        return null;", "-                    }", "-", "-                    public Object getRealObject() {", "-                        return null;", "-                    }", "-", "-                    public Object create(", "+                nc = new NestedCreator(null) {", "+                    Object create(", "-                    }", "-                    public void store(Object parent, Object child) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e1096b9fba02451af9cc57fede3f4e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "6fd0ddc8b843c2f0348fc51f680d465b89046fe7", "commitAfterChange": "d0fe01180db02cdd89d8e1baac7fac3f54041348", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private IntrospectionHelper(final Class bean)", "signatureAfterChange": "     private IntrospectionHelper(final Class bean)", "diff": ["-            if (org.apache.tools.ant.TaskContainer.class.isAssignableFrom(bean)", "-                && args.length == 1 && \"addTask\".equals(name)", "+            if (isContainer() && args.length == 1 && \"addTask\".equals(name)", "-                    nestedCreators.put(propName, new NestedCreator() {", "-                        public boolean isPolyMorphic() {", "-                            return false;", "-                        }", "-", "-                        public Object getRealObject() {", "-                            return null;", "-                        }", "-", "-                        public Class getElementClass() {", "-                            return null;", "-                        }", "-", "-                        public Object create(", "+                    nestedCreators.put(propName, new NestedCreator(m) {", "+                        Object create(", "-                        }", "-", "-                        public void store(Object parent, Object child) {", "-                    nestedCreators.put(propName, new NestedCreator() {", "-", "-                            public boolean isPolyMorphic() {", "+                    nestedCreators.put(propName, new NestedCreator(m) {", "+                            boolean isPolyMorphic() {", "-                            public Object getRealObject() {", "-                                return null;", "-                            }", "-", "-                            public Class getElementClass() {", "+                            Class getElementClass() {", "-                            public Object create(", "+                            Object create(", "-                            public void store(Object parent, Object child)", "+                            void store(Object parent, Object child)", "-                    nestedCreators.put(propName, new NestedCreator() {", "-", "-                            public boolean isPolyMorphic() {", "+                    nestedCreators.put(propName, new NestedCreator(m) {", "+                            boolean isPolyMorphic() {", "-                            public Object getRealObject() {", "-                                return null;", "-                            }", "-", "-                            public Class getElementClass() {", "+                            Class getElementClass() {", "-                            public Object create(", "+                            Object create(", "-                            public void store(Object parent, Object child)", "-                                throws InvocationTargetException,", "-                                       IllegalAccessException, InstantiationException {", "-", "-                            }", "-"]}]}