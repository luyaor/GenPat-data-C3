{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "567f0b2784c6e0480be3cc7b7690c756", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b2037dd00edc34e6fc2b28c0cbd35ca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/JavaResource.java", "commitBeforeChange": "0d89047e67e3e5d4c8354b2a6a4421532a8a7d4c", "commitAfterChange": "437d53cbd2bf3d9dbaea55981914f59b772a71cf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public InputStream getInputStream() throws IOException", "signatureAfterChange": "     protected InputStream openInputStream(ClassLoader cl) throws IOException", "diff": ["-    public InputStream getInputStream() throws IOException {", "-        if (isReference()) {", "-            return ((Resource) getCheckedRef()).getInputStream();", "-        }", "-        ClassLoader cl = null;", "-        if (loader != null) {", "-            cl = (ClassLoader) loader.getReferencedObject();", "-        }", "-        if (cl == null) {", "-            if (getClasspath() != null) {", "-                cl = getProject().createClassLoader(classpath);", "-            } else {", "-                cl = JavaResource.class.getClassLoader();", "-            }", "-            if (loader != null && cl != null) {", "-                getProject().addReference(loader.getRefId(), cl);", "-            }", "-        }", "-", "+    protected InputStream openInputStream(ClassLoader cl) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8135935a3f0645b7293f1ca3dff10aad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 34, "signatureBeforeChange": "     protected static byte[] toDosTime(long t)", "signatureAfterChange": "     protected static byte[] toDosTime(long t)", "diff": ["-        Date time = new Date(t);", "-        // CheckStyle:MagicNumberCheck OFF - I do not think that using constants", "-        //                                   here will improve the readablity", "-        int year = time.getYear() + 1900;", "-        if (year < 1980) {", "-            return DOS_TIME_MIN;", "-        }", "-        int month = time.getMonth() + 1;", "-        long value =  ((year - 1980) << 25)", "-            |         (month << 21)", "-            |         (time.getDate() << 16)", "-            |         (time.getHours() << 11)", "-            |         (time.getMinutes() << 5)", "-            |         (time.getSeconds() >> 1);", "-        return ZipLong.getBytes(value);", "-        // CheckStyle:MagicNumberCheck ON", "+        return ZipUtil.toDosTime(t);"]}]}