{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23231f3e8ed43a3a1bff165534b927b2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b01123d0cb095f904149f34e28e9d90", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "83d2993be57cdbbb53670a94d780ef50656ed4a0", "commitAfterChange": "c5d14d94cfe09a85e17f258080355e39c5a75a8a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["+            boolean changes = false;", "+", "-", "-            boolean changes = false;", "+                } finally {", "+                    os.close();", "+                }", "+            } finally {", "+                is.close();", "+            }", "-            }", "-                } finally {", "-                    os.close();", "-                }", "-            } finally {", "-                is.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39aa3ceae2d3b5bdbddc271056861e65", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "a61676acdd758d4c811839866def7d8b3cec2682", "commitAfterChange": "1dc954f3a51bf0c5adff222d717d04c08f4bed4e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "          public Object nextElement()             throws NoSuchElementException", "signatureAfterChange": "          public Object nextElement()             throws NoSuchElementException", "diff": ["-            BufferLine tmpLine =", "-                new BufferLine( line.toString(), eolStr.toString() );", "+", "+                BufferLine tmpLine =", "+                    new BufferLine( line.toString(), eolStr.toString() );", "+                return tmpLine;", "-            return tmpLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb6eb23a7051895fd1ff2e00dd3bda8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "13eb95ae4d6f35ee540b77b1d8eef2e44c7b2720", "commitAfterChange": "f0282fd8b18b09bbd18ee4b82fed883f872a802a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void reinit()", "signatureAfterChange": "      private void reinit()", "diff": ["-            } else if (p.getFile() != null) {", "+            }", "+            if (p.getFile() != null) {", "-            } else if (p.getResource() != null) {", "+            } ", "+            if (p.getResource() != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "692a3790a9c09dd6046020961ceeeabf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "c64fafb60c841a1c7f014340167a84b32c0d19e3", "commitAfterChange": "adb161cdc40c45f6f563cdd7816973bc91a75178", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "     public long getFileTimestampGranularity()", "signatureAfterChange": "     public long getFileTimestampGranularity()", "diff": ["-        } else if (onWindows) {", "+        }", "+        if (onWindows) {", "-        } else if (onDos) {", "+        }", "+        if (onDos) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "745803074a4213cb9712218d7a82e3d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "0551fff52443b2cf17815268fd55e810975682a7", "commitAfterChange": "cd1fb767982f2edccacada9cde5fcce18e05355b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public void execute()         throws BuildException", "signatureAfterChange": "     public void execute()         throws BuildException", "diff": ["-", "-                    log(ACTION_STRS[action] + \" files\");", "-                    transferFiles(ftp);", "+                log(ACTION_STRS[action] + \" files\");", "+                transferFiles(ftp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f0b1ea359b57c16ea29a24ddcc5111a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "27f9f065c82441f9e1f902ebcecb1b3249a0412e", "commitAfterChange": "a855a6dbfa1e5c8973fc8897cee409708e61175c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void runExec(Execute exe) throws BuildException", "signatureAfterChange": "     protected void runExec(Execute exe) throws BuildException", "diff": ["-            Iterator iter = resources.iterator();", "-            while (iter.hasNext()) {", "-                Resource res = (Resource) iter.next();", "+                Iterator iter = resources.iterator();", "+                while (iter.hasNext()) {", "+                    Resource res = (Resource) iter.next();", "-                if (!res.isExists() && ignoreMissing) {", "-                    continue;", "-                }", "-", "-                File base = null;", "-                String name = res.getName();", "-                if (res instanceof FileResource) {", "-                    FileResource fr = (FileResource) res;", "-                    base = fr.getBaseDir();", "-                    if (base == null) {", "-                        name = fr.getFile().getAbsolutePath();", "+                    if (!res.isExists() && ignoreMissing) {", "+                        continue;", "-                }", "-                if (restrict(new String[] {name}, base).length == 0) {", "-                    continue;", "-                }", "-", "-                if ((!res.isDirectory() || !res.isExists())", "-                    && !FileDirBoth.DIR.equals(type)) {", "-                    totalFiles++;", "-                } else if (res.isDirectory() && !FileDirBoth.FILE.equals(type)) {", "-                    totalDirs++;", "-                } else {", "-                    continue;", "-                }", "-", "-                baseDirs.add(base);", "-                fileNames.add(name);", "-", "-                if (!parallel) {", "-                    String[] command = getCommandline(name, base);", "-                    log(Commandline.describeCommand(command),", "-                        Project.MSG_VERBOSE);", "-                    exe.setCommandline(command);", "-", "-                    if (redirectorElement != null) {", "-                        setupRedirector();", "-                        redirectorElement.configure(redirector, name);", "+                    File base = null;", "+                    String name = res.getName();", "+                    if (res instanceof FileResource) {", "+                        FileResource fr = (FileResource) res;", "+                        base = fr.getBaseDir();", "+                        if (base == null) {", "+                            name = fr.getFile().getAbsolutePath();", "+                        }", "-                    if (redirectorElement != null || haveExecuted) {", "-                        // need to reset the stream handler to restart", "-                        // reading of pipes;", "-                        // go ahead and do it always w/ nested redirectors", "-                        exe.setStreamHandler(redirector.createHandler());", "+", "+                    if (restrict(new String[] {name}, base).length == 0) {", "+                        continue;", "-                    runExecute(exe);", "-                    haveExecuted = true;", "-                    fileNames.removeAllElements();", "-                    baseDirs.removeAllElements();", "+", "+                    if ((!res.isDirectory() || !res.isExists())", "+                        && !FileDirBoth.DIR.equals(type)) {", "+                        totalFiles++;", "+                    } else if (res.isDirectory()", "+                               && !FileDirBoth.FILE.equals(type)) {", "+                        totalDirs++;", "+                    } else {", "+                        continue;", "+                    }", "+", "+                    baseDirs.add(base);", "+                    fileNames.add(name);", "+", "+                    if (!parallel) {", "+                        String[] command = getCommandline(name, base);", "+                        log(Commandline.describeCommand(command),", "+                            Project.MSG_VERBOSE);", "+                        exe.setCommandline(command);", "+", "+                        if (redirectorElement != null) {", "+                            setupRedirector();", "+                            redirectorElement.configure(redirector, name);", "+                        }", "+                        if (redirectorElement != null || haveExecuted) {", "+                            // need to reset the stream handler to restart", "+                            // reading of pipes;", "+                            // go ahead and do it always w/ nested redirectors", "+                            exe.setStreamHandler(redirector.createHandler());", "+                        }", "+                        runExecute(exe);", "+                        haveExecuted = true;", "+                        fileNames.removeAllElements();", "+                        baseDirs.removeAllElements();", "+                    }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab74a092951bc33f882a2d10fc574477", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "a61676acdd758d4c811839866def7d8b3cec2682", "commitAfterChange": "1dc954f3a51bf0c5adff222d717d04c08f4bed4e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "          public Object nextElement()             throws NoSuchElementException", "signatureAfterChange": "          public Object nextElement()             throws NoSuchElementException", "diff": ["-            BufferLine tmpLine =", "-                new BufferLine( line.toString(), eolStr.toString() );", "+", "+                BufferLine tmpLine =", "+                    new BufferLine( line.toString(), eolStr.toString() );", "+                return tmpLine;", "-            return tmpLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e861898894f3bc317c1376a7527876e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "5fc021b758b1e224795db6b6abb850efcb4d51fd", "commitAfterChange": "f25950bbace30c496ad787d6b50863f039c9a8af", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void runBuild() throws BuildException", "signatureAfterChange": "      private void runBuild() throws BuildException", "diff": ["-        addBuildListeners(project);", "-        project.fireBuildStarted();", "+            addBuildListeners(project);", "+            project.fireBuildStarted();", "+            "]}]}