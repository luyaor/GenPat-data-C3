{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2baa609903bc466e32ac3c205177daed", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22a463c7c70bf6e8c30489e5b93a774c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws BuildException", "diff": ["-            throw new BuildException( \"tarfile attribute must be set!\",", "-                location );", "+            throw new BuildException( \"tarfile attribute must be set!\" );", "-            throw new BuildException( \"tarfile is a directory!\",", "-                location );", "+            throw new BuildException( \"tarfile is a directory!\" );", "-            throw new BuildException( \"Can not write to the specified tarfile!\",", "-                location );", "+            throw new BuildException( \"Can not write to the specified tarfile!\" );", "-                throw new BuildException( \"basedir does not exist!\", location );", "+                throw new BuildException( \"basedir does not exist!\" );", "-            throw new BuildException( \"You must supply either a basdir attribute or some nested filesets.\",", "-                location );", "+            throw new BuildException( \"You must supply either a basdir attribute or some nested filesets.\" );", "-        for( Enumeration e = filesets.elements(); e.hasMoreElements();  )", "+        for( Enumeration e = filesets.elements(); e.hasMoreElements(); )", "-            TarFileSet fs = ( TarFileSet )e.nextElement();", "+            TarFileSet fs = (TarFileSet)e.nextElement();", "-                if( tarFile.equals( new File( fs.getDir( project ), files[i] ) ) )", "+                if( tarFile.equals( new File( fs.getDir( project ), files[ i ] ) ) )", "-                    throw new BuildException( \"A tar file cannot include itself\", location );", "+                    throw new BuildException( \"A tar file cannot include itself\" );", "-                Project.MSG_INFO );", "+                 Project.MSG_INFO );", "-            for( Enumeration e = filesets.elements(); e.hasMoreElements();  )", "+            for( Enumeration e = filesets.elements(); e.hasMoreElements(); )", "-                TarFileSet fs = ( TarFileSet )e.nextElement();", "+                TarFileSet fs = (TarFileSet)e.nextElement();", "-                    File f = new File( fs.getDir( project ), files[i] );", "-                    String name = files[i].replace( File.separatorChar, '/' );", "+                    File f = new File( fs.getDir( project ), files[ i ] );", "+                    String name = files[ i ].replace( File.separatorChar, '/' );", "-            throw new BuildException( msg, ioe, location );", "+            throw new BuildException( msg, ioe );", "-                {}", "+                {", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9203b83dc6eb3b94b44d57f6dd96db13", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "e854f481c9a76b41680eb0f605de524556b059ad", "commitAfterChange": "7a3448dcea316f454dd0ba470f8b0825504ae309", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute()         throws BuildException", "signatureAfterChange": "      public void execute()         throws BuildException", "diff": ["-            throw new BuildException( \"tarfile attribute must be set!\",", "-                location );", "+            throw new BuildException( \"tarfile attribute must be set!\" );", "-            throw new BuildException( \"tarfile is a directory!\",", "-                location );", "+            throw new BuildException( \"tarfile is a directory!\" );", "-            throw new BuildException( \"Can not write to the specified tarfile!\",", "-                location );", "+            throw new BuildException( \"Can not write to the specified tarfile!\" );", "-                throw new BuildException( \"basedir does not exist!\", location );", "+                throw new BuildException( \"basedir does not exist!\" );", "-            throw new BuildException( \"You must supply either a basdir attribute or some nested filesets.\",", "-                location );", "+            throw new BuildException( \"You must supply either a basdir attribute or some nested filesets.\" );", "-        for( Enumeration e = filesets.elements(); e.hasMoreElements();  )", "+        for( Enumeration e = filesets.elements(); e.hasMoreElements(); )", "-            TarFileSet fs = ( TarFileSet )e.nextElement();", "+            TarFileSet fs = (TarFileSet)e.nextElement();", "-                if( tarFile.equals( new File( fs.getDir( project ), files[i] ) ) )", "+                if( tarFile.equals( new File( fs.getDir( project ), files[ i ] ) ) )", "-                    throw new BuildException( \"A tar file cannot include itself\", location );", "+                    throw new BuildException( \"A tar file cannot include itself\" );", "-                Project.MSG_INFO );", "+                 Project.MSG_INFO );", "-            for( Enumeration e = filesets.elements(); e.hasMoreElements();  )", "+            for( Enumeration e = filesets.elements(); e.hasMoreElements(); )", "-                TarFileSet fs = ( TarFileSet )e.nextElement();", "+                TarFileSet fs = (TarFileSet)e.nextElement();", "-                    File f = new File( fs.getDir( project ), files[i] );", "-                    String name = files[i].replace( File.separatorChar, '/' );", "+                    File f = new File( fs.getDir( project ), files[ i ] );", "+                    String name = files[ i ].replace( File.separatorChar, '/' );", "-            throw new BuildException( msg, ioe, location );", "+            throw new BuildException( msg, ioe );", "-                {}", "+                {", "+                }"]}]}