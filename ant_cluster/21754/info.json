{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa6b2cd29b6a19031be56add0f87e802", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f0084d5cd9cb07460f8eaa92afb2e1c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "fddadc930e92238d00cad244733d3f6f2e5b9941", "commitAfterChange": "02307f7dea1fb0177a13e50d7037c0f6286de1e7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName,                                Date entryDate, boolean isDirectory)                                throws IOException", "diff": ["-            String name = entryName;", "+            String name = entryName.replace('/', File.separatorChar)", "+                .replace('\\\\', File.separatorChar);", "-                    included = DirectoryScanner.match(incls[w], name);", "+                    String pattern = incls[w].replace('/', File.separatorChar)", "+                        .replace('\\\\', File.separatorChar);", "+                    if (pattern.endsWith(File.separator)) {", "+                        pattern += \"**\";", "+                    }", "+                    ", "+                    included = SelectorUtils.matchPath(pattern, name);", "-                        included = !(DirectoryScanner.match(excls[w], name));", "+                        String pattern = excls[w]", "+                            .replace('/', File.separatorChar)", "+                            .replace('\\\\', File.separatorChar);", "+                        if (pattern.endsWith(File.separator)) {", "+                            pattern += \"**\";", "+                        }", "+                        included = !(SelectorUtils.matchPath(pattern, name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8e4423072fd8914bd7182f52f0175a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "5d443a11d97d54eac05047e20fccc3a6e8427a74", "commitAfterChange": "62fd696d56d92477fa0a069762b64073fafe390c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "signatureAfterChange": "     protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, Date entryDate,                                boolean isDirectory, FileNameMapper mapper)                                throws IOException", "diff": ["+            Set includePatterns = new HashSet();", "+            Set excludePatterns = new HashSet();", "-", "-                    included = SelectorUtils.matchPath(pattern, name);", "-                    if (included) {", "-                        break;", "-                    }", "+                    includePatterns.add(pattern);", "-", "-                if (!included) {", "-                    break;", "-                }", "-", "-                        included = !(SelectorUtils.matchPath(pattern, name));", "-                        if (!included) {", "-                            break;", "-                        }", "+                        excludePatterns.add(pattern);", "+", "+            for (Iterator iter = includePatterns.iterator();", "+                 !included && iter.hasNext();) {", "+                String pattern = (String) iter.next();", "+                included = SelectorUtils.matchPath(pattern, name);", "+            }", "+", "+            for (Iterator iter = excludePatterns.iterator();", "+                 included && iter.hasNext();) {", "+                String pattern = (String) iter.next();", "+                included = !SelectorUtils.matchPath(pattern, name);", "+            }", "+"]}]}