{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34f12ca61a89eab33b12916120837ad0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73de41911e356b220f3ef191cb1ae207", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/Main.java", "commitBeforeChange": "685af27ceefe23e6cbaf8e8212805d3850765bdc", "commitAfterChange": "157d8f04d2c676ac93a8cda891f804bddf6f7836", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected ProjectListener createListener( final String listenerName )         throws TaskException", "signatureAfterChange": "     protected ProjectListener createListener( final String listener )         throws TaskException", "diff": ["-    protected ProjectListener createListener( final String listenerName )", "+    protected ProjectListener createListener( final String listener )", "-        ProjectListener result = null;", "-", "-        try { result = (ProjectListener)Class.forName( listenerName ).newInstance(); }", "+        try { return (ProjectListener)Class.forName( listener ).newInstance(); }", "-            throw new TaskException( \"Error creating the listener \" + listenerName +", "-                                    \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ),", "-                                    t );", "+            throw new TaskException( \"Error creating the listener \" + listener +", "+                                     \" due to \" + ExceptionUtil.printStackTrace( t, 5, true ),", "+                                     t );", "-", "-        final LogTarget target = new LogTargetToListenerAdapter( result );", "-", "-        getLogger().setLogTargets( new LogTarget[] { target } );", "-", "-        return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6890c9c6497e923d635a0e0c21dccd2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "58f8db35ee5db94294191fc2599cb02a8086b881", "commitAfterChange": "8c97911720b40557d78672245bc2e7f724917297", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void doCompose( final Tasklet tasklet,                                final Configuration task,                               final ComponentManager componentManager )         throws AntException", "signatureAfterChange": "          protected void doCompose( final Tasklet tasklet, final Configuration task )         throws AntException", "diff": ["-    protected void doCompose( final Tasklet tasklet, ", "-                              final Configuration task,", "-                              final ComponentManager componentManager )", "+    protected void doCompose( final Tasklet tasklet, final Configuration task )", "-", "-        final DefaultComponentManager subComponentManager = ", "-            new DefaultComponentManager( componentManager );", "-", "-        subComponentManager.put( \"org.apache.ant.configuration.Configurer\", m_configurer );", "-", "-            try { ((Composer)tasklet).compose( subComponentManager ); }", "+            try { ((Composer)tasklet).compose( m_componentManager ); }"]}]}