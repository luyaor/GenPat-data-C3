{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9568e147599a85bdbc8feaf567198bf0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dd0d3a1ff7f942a61146f04173e4dc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/ContainsSelector.java", "commitBeforeChange": "edad691d59acabb7c361ab72665ea4afdf77fb01", "commitAfterChange": "76cfa5be6880fe04efad01f9b9acbeb2e41825cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        buf.append(contains);", "+        buf.append('\"').append(contains).append('\"');", "-        if (casesensitive) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "-        }", "+        buf.append(casesensitive ? \"true\" : \"false\");", "-        if (ignorewhitespace) {", "-            buf.append(\"true\");", "-        } else {", "-            buf.append(\"false\");", "-        }", "+        buf.append(ignorewhitespace ? \"true\" : \"false\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7de540cedf7acf9c679f2399dc5b489", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarUtils.java", "commitBeforeChange": "0e9021fe5fa6e5db953921c85ccc68bd25327b28", "commitAfterChange": "38f4bc677b4265c9b0a21b929be067514afd3d5d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static long parseOctal(final byte[] buffer, final int offset, final int length)", "signatureAfterChange": "     public static long parseOctal(final byte[] buffer, final int offset, final int length)", "diff": ["-        // Must have trailing NUL or space", "-        byte trailer;", "-        trailer = buffer[end-1];", "-        if (trailer == 0 || trailer == ' '){", "+        // Trim all trailing NULs and spaces.", "+        // The ustar and POSIX tar specs require a trailing NUL or", "+        // space but some implementations use the extra digit for big", "+        // sizes/uids/gids ...", "+        byte trailer = buffer[end - 1];", "+        while (start < end && (trailer == 0 || trailer == ' ')) {", "-        } else {", "-            throw new IllegalArgumentException(", "-                    exceptionMessage(buffer, offset, length, end-1, trailer));", "+            trailer = buffer[end - 1];", "-        // May have additional NUL or space", "-        trailer = buffer[end-1];", "-        if (trailer == 0 || trailer == ' '){", "-            end--;", "+        if (start == end) {", "+            throw new IllegalArgumentException(", "+                    exceptionMessage(buffer, offset, length, start, trailer));"]}]}