{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b41f4a1ba2905e92e13fc7bdc0058581", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09958fd49f1b55d74c25b62942386068", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "bb05312e66a2403d2405988dbaf0830cde65df7c", "commitAfterChange": "da5f3bfd256e383926c6ece58dba15a7d4bd5761", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected void dieOnCircularReference(Stack stk, Project p)", "+    protected void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = getNested().iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (ResourceCollection resourceCollection : getNested()) {", "+                if (resourceCollection instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) resourceCollection, stk, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538b4e5d71b5ee1c3466ab69937364ce", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/BaseSelectorContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = selectorsList.iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectorsList) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "599beda402f2ee28403c5655e88eada5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/VectorSet.java", "commitBeforeChange": "d25488cbbb28cf25e1f91f714c70999fd105432d", "commitAfterChange": "3d706ab8188a674936880b6f4530b0cf3991758b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public synchronized boolean addAll(int index, Collection c)", "signatureAfterChange": "     public synchronized boolean addAll(int index, Collection<? extends E> c)", "diff": ["-    public synchronized boolean addAll(int index, Collection c) {", "+    public synchronized boolean addAll(int index, Collection<? extends E> c) {", "-        for (Iterator i = c.iterator(); i.hasNext(); ) {", "-            Object o = i.next();", "-            if (!set.contains(o)) {", "-                doAdd(index++, o);", "+        for (E e : c) {", "+            if (!set.contains(e)) {", "+                doAdd(index++, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19a5ae6f0766c052ca46fe10c8dcf50", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/AbstractSelectorContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "      protected synchronized void dieOnCircularReference(Stack stk, Project p)", "signatureAfterChange": "      protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p) {", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p) {", "-            for (Iterator i = selectorsList.iterator(); i.hasNext(); ) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (FileSelector fileSelector : selectorsList) {", "+                if (fileSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) fileSelector, stk, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde526956891b5f642210e48f60f3c25", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/selectors/ResourceSelectorContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected void dieOnCircularReference(Stack stk, Project p)", "+    protected void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = v.iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (ResourceSelector resourceSelector : resourceSelectors) {", "+                if (resourceSelector instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) resourceSelector, stk, p);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f417d16b548273956a38ae1e5f9b69", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/BaseResourceCollectionContainer.java", "commitBeforeChange": "7829faf36a6f4bc565e0e8b92aa85cc948718176", "commitAfterChange": "9caeed5081071d6a2de28844d0a724918f8c6d86", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected synchronized void dieOnCircularReference(Stack stk, Project p)         throws BuildException", "signatureAfterChange": "     protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)         throws BuildException", "diff": ["-    protected synchronized void dieOnCircularReference(Stack stk, Project p)", "+    protected synchronized void dieOnCircularReference(Stack<Object> stk, Project p)", "-            for (Iterator i = rc.iterator(); i.hasNext();) {", "-                Object o = i.next();", "-                if (o instanceof DataType) {", "-                    pushAndInvokeCircularReferenceCheck((DataType) o, stk, p);", "+            for (ResourceCollection resourceCollection : rc) {", "+                if (resourceCollection instanceof DataType) {", "+                    pushAndInvokeCircularReferenceCheck((DataType) resourceCollection, stk, p);"]}]}