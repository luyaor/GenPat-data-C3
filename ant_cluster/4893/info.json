{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f58a2a542463164ea9bc1ac85821966", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7a40ffc1931f7a00cc53956f0fdb24", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/email/MimeMailer.java", "commitBeforeChange": "de47901582d1675358fd4b55e68c0fdc241dfd53", "commitAfterChange": "b5b99c769a21d3602ee35948cf004925f03464ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void send()", "signatureAfterChange": "     public void send()", "diff": ["-            //Aside, the JDK is clearly unaware of the scottish 'session', which", "-            //involves excessive quantities of alcohol :-)", "+            // Aside, the JDK is clearly unaware of the scottish", "+            // 'session', which //involves excessive quantities of", "+            // alcohol :-)", "-                msg.setFrom( new InternetAddress( from.getAddress(), from.getName() ) );", "+                msg.setFrom( new InternetAddress( from.getAddress(), ", "+                                                  from.getName() ) );", "-            msg.setRecipients( Message.RecipientType.TO, internetAddresses( toList ) );", "-            msg.setRecipients( Message.RecipientType.CC, internetAddresses( ccList ) );", "-            msg.setRecipients( Message.RecipientType.BCC, internetAddresses( bccList ) );", "+            msg.setRecipients( Message.RecipientType.TO, ", "+                               internetAddresses( toList ) );", "+            msg.setRecipients( Message.RecipientType.CC, ", "+                               internetAddresses( ccList ) );", "+            msg.setRecipients( Message.RecipientType.BCC, ", "+                               internetAddresses( bccList ) );", "-                                              + \"\\\" does not exist or is not readable.\" );", "+                                              + \"\\\" does not exist or is not \"", "+                                              + \"readable.\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d260f61d06047c42778cccdbc364ddfc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "778b198fb8709154142ead6d74bd5da3216eb76c", "commitAfterChange": "246b80980fe1ecee037440b49137b3203cd3095f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-", "-        Reader r = null;", "-        Writer w = null;", "-        BufferedWriter bw = null;", "-", "-            if (encoding == null) {", "-                r = new FileReader(f);", "-                w = new FileWriter(temp);", "-            } else {", "-                r = new InputStreamReader(new FileInputStream(f), encoding);", "-                w = new OutputStreamWriter(new FileOutputStream(temp),", "-                                           encoding);", "-            }", "+            InputStream is = new FileInputStream(f);", "+            try {", "+                Reader r = encoding != null ? new InputStreamReader(is, encoding) : new InputStreamReader(is);", "+                OutputStream os = new FileOutputStream(temp);", "+                try {", "+                    Writer w = encoding != null ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os);", "-            BufferedReader br = new BufferedReader(r);", "-            bw = new BufferedWriter(w);", "+                    BufferedReader br = new BufferedReader(r);", "+                    BufferedWriter bw = new BufferedWriter(w);", "-            r.close();", "-            r = null;", "-            w.close();", "-            w = null;", "-", "+                } finally {", "+                    os.close();", "+                }", "+            } finally {", "+                is.close();", "+            }", "-            FileUtils.close(r);", "-            FileUtils.close(bw);", "-            FileUtils.close(w);"]}]}