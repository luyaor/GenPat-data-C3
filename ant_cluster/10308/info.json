{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb398d57d5335a0b617b813fdddee758", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db192c43c8d07213806dcf36a021207", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SignJar.java", "commitBeforeChange": "81d29e52f1d4715920d593792f56adf5e71faf03", "commitAfterChange": "0adae3872fabb89ded584e82546ed9b6f357e18c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected boolean isSigned(File file)", "signatureAfterChange": "     protected boolean isSigned(File file)", "diff": ["-        final String SIG_START = \"META-INF/\";", "-        final String SIG_END = \".SF\";", "-", "-        if (!file.exists()) {", "-            return false;", "-        }", "-        ZipFile jarFile = null;", "-            jarFile = new ZipFile(file);", "-            if (null == alias) {", "-                Enumeration entries = jarFile.entries();", "-                while (entries.hasMoreElements()) {", "-                    String name = ((ZipEntry) entries.nextElement()).getName();", "-                    if (name.startsWith(SIG_START) && name.endsWith(SIG_END)) {", "-                        return true;", "-                    }", "-                }", "-                return false;", "-            } else {", "-                return jarFile.getEntry(SIG_START + alias.toUpperCase()", "-                                        + SIG_END) != null;", "-            }", "+            return IsSigned.isSigned(file, alias);", "-        } finally {", "-            if (jarFile != null) {", "-                try {", "-                    jarFile.close();", "-                } catch (IOException e) {", "-                }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c506cda450f8efdc9563e91199779786", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/IsSigned.java", "commitBeforeChange": "81d29e52f1d4715920d593792f56adf5e71faf03", "commitAfterChange": "0adae3872fabb89ded584e82546ed9b6f357e18c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean eval()", "signatureAfterChange": "     public boolean eval()", "diff": ["-    public boolean eval() {", "-        if (file == null) {", "-            throw new BuildException(\"The file attribute must be set.\");", "-        }", "-        if (file != null && !file.exists()) {", "-            log(\"The file \\\"\" + file.getAbsolutePath()", "-                    + \"\\\" does not exist.\", Project.MSG_VERBOSE);", "-            return false;", "-        }", "-", "-            jarFile = new ZipFile(file);", "-                    String name = ((ZipEntry) entries.nextElement()).getName();", "-                    if (name.startsWith(SIG_START) && name.endsWith(SIG_END)) {", "-                        log(\"File \\\"\" + file.getAbsolutePath()", "-                            + \"\\\" is signed.\", Project.MSG_VERBOSE);", "-                                    + name.toUpperCase()", "-                                    + SIG_END) != null;", "-                boolean longSig  = jarFile.getEntry(SIG_START", "-                                    + name.substring(0, 8).toUpperCase()", "-                                    + SIG_END) != null;", "-                if (shortSig || longSig) {", "-                    log(\"File \\\"\" + file.getAbsolutePath()", "-                        + \"\\\" is signed.\", Project.MSG_VERBOSE);", "-                    return true;", "-                } else {", "-                    return false;", "-        } catch (IOException e) {", "-            log(\"Got IOException reading file \\\"\" + file.getAbsolutePath()", "-                + \"\\\"\" + e, Project.MSG_VERBOSE);", "-            return false;", "+     */", "+    public boolean eval() {", "+        if (file == null) {", "+            throw new BuildException(\"The file attribute must be set.\");", "+        }", "+        if (file != null && !file.exists()) {", "+            log(\"The file \\\"\" + file.getAbsolutePath()", "+                + \"\\\" does not exist.\", Project.MSG_VERBOSE);", "+            return false;", "+        }", "+", "+        boolean r = false;", "+        try {", "+            r = isSigned(file, name);", "+        } catch (IOException e) {", "+            log(\"Got IOException reading file \\\"\" + file.getAbsolutePath()", "+                + \"\\\"\" + e, Project.MSG_WARN);", "+        }", "+", "+        if (r) {", "+            log(\"File \\\"\" + file.getAbsolutePath() + \"\\\" is signed.\",", "+                Project.MSG_VERBOSE);", "+        }", "+        return r;", "+    }"]}]}