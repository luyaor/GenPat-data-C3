{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c0b0b6c31be2748f1f2c11d3107f119", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848b1a2cc9ffaee7836eda79044a005f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "065256f579a3681862b7dc61cce5a6fb45a0244e", "commitAfterChange": "671dff9a1cfe74859b9ec4356974b22840953989", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-                    BufferedReader br = new BufferedReader(r);", "-                    BufferedWriter bw = new BufferedWriter(w);", "-", "+                        r = new BufferedReader(r);", "+                        w = new BufferedWriter(w);", "+", "-                            c = br.read();", "+                            c = r.read();", "-                                    bw.write(res);", "-                                    bw.write('\\r');", "+                                    w.write(res);", "+                                    w.write('\\r');", "-                                bw.write(res);", "+                                w.write(res);", "-                                    bw.write('\\r');", "+                                    w.write('\\r');", "-                                bw.write('\\n');", "+                                w.write('\\n');", "-                                    bw.write(res);", "+                                    w.write(res);", "-                                        bw.write('\\r');", "+                                        w.write('\\r');", "-                        String buf = FileUtils.safeReadFully(br);", "-", "-                        String res = doReplace(regex, subs, buf, options);", "-", "-                        if (!res.equals(buf)) {", "-                            changes = true;", "-                        }", "-", "-                        bw.write(res);", "+                        changes = multilineReplace(r, w, options);", "-                    bw.flush();", "+                    r.close();", "+                    w.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0adf34d86f5fb2506cd962f5464775a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "671dff9a1cfe74859b9ec4356974b22840953989", "commitAfterChange": "0faf6e94d6bd5911035e07913286d1ff0c75524b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void doReplace(File f, int options)          throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)          throws IOException", "diff": ["-                        String line = null;", "-                        String res = null;", "-                                    line = linebuf.toString();", "-                                    res  = doReplace(regex, subs, line, options);", "-", "-                                    if (!res.equals(line)) {", "-                                        changes = true;", "-                                    }", "-", "-                                    w.write(res);", "+                                    changes |= replaceAndWrite(linebuf.toString(),", "+                                                               w, options);", "-                                line = linebuf.toString();", "-                                res  = doReplace(regex, subs, line, options);", "-", "-                                if (!res.equals(line)) {", "-                                    changes = true;", "-                                }", "-", "-                                w.write(res);", "+                                changes |= replaceAndWrite(linebuf.toString(),", "+                                                           w, options);", "-                                    line = linebuf.toString();", "-                                    res  = doReplace(regex, subs, line, options);", "-", "-                                    if (!res.equals(line)) {", "-                                        changes = true;", "-                                    }", "-", "-                                    w.write(res);", "+                                    changes |= replaceAndWrite(linebuf.toString(),", "+                                                               w, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec13cae74c1a3ad19e97ab6ed8554b4b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Checksum.java", "commitBeforeChange": "6c2201f3094a0733e3e2caa7998cf260b61a3eb3", "commitAfterChange": "0f723fa82a38431c93baa7b8f102a79200b7f620", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean generateChecksums() throws BuildException", "signatureAfterChange": "     private boolean generateChecksums() throws BuildException", "diff": ["-                            fis = new FileInputStream(existingFile);", "-                            InputStreamReader isr = new InputStreamReader(fis);", "-                            BufferedReader br = new BufferedReader(isr);", "-                            String suppliedChecksum = br.readLine();", "-                            fis.close();", "-                            fis = null;", "-                            br.close();", "-                            isr.close();", "-                            checksumMatches = checksumMatches", "-                                && checksum.equals(suppliedChecksum);", "+                            try {", "+                                String suppliedChecksum = ", "+                                    readChecksum(existingFile);", "+                                checksumMatches = checksumMatches", "+                                    && checksum.equals(suppliedChecksum);", "+                            } catch (BuildException be) {", "+                                // file is on wrong format, swallow", "+                                checksumMatches = false;", "+                            }", "-                        fos.write(checksum.getBytes());", "+                        fos.write(format.format(new Object[] {", "+                                                    checksum,", "+                                                    src.getName(),", "+                                                }).getBytes());", "+                        fos.write(StringUtils.LINE_SEP.getBytes());"]}]}