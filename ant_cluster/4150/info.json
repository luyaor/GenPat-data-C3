{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f80a6cde1f5e5fd0eb4bc3f254640d11", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a64e300685af92da360db4d5060aa78", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Path.java", "commitBeforeChange": "0a41a60d0fece26541adf1cb8cfd22a5f8a3f5a7", "commitAfterChange": "157e6f3305b448bee38aae65e6fcfaff4c7e11d0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected Collection getCollection()", "signatureAfterChange": "     public String toString()", "diff": ["-    protected Collection getCollection() {", "-        for (Iterator i = getResourceCollections().iterator(); i.hasNext();) {", "-            ResourceCollection rc = (ResourceCollection) i.next();", "-            if (!(rc.isFilesystemOnly())) {", "-                throw new BuildException(getDataTypeName()", "-                    + \" allows only filesystem resources.\");", "-            }", "-            if (rc instanceof PathElement", "-                && ((PathElement) rc).getParts() == null) {", "-                throw new BuildException(", "-                    \"Either location or path must be set on a pathelement.\");", "-            } else if (rc instanceof Path) {", "-                Path p = (Path) rc;", "-                if (p.getProject() == null) {", "-                    p.setProject(getProject());", "-                }", "-            }", "-        return super.getCollection();", "+     */", "+    public String toString() {", "+        return isReference() ? getCheckedRef().toString() :", "+            union == null ? \"\" : union.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29561932ae1788a9444bc3f51f8b06b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Restrict.java", "commitBeforeChange": "cf12b9b863b658fec3fa94eecd4c0e7df3b8e986", "commitAfterChange": "05988f712e1b2011194e635b8ffe5b57aebd8bf1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected Collection getCollection()", "signatureAfterChange": "         protected Collection getCollection()", "diff": ["+         */", "+        protected Collection getCollection() {", "+            ArrayList result = new ArrayList();", "+outer:      for (Iterator ri = w.getResourceCollection().iterator(); ri.hasNext();) {", "+                Resource r = (Resource) ri.next();", "+                for (Iterator i = getSelectors(); i.hasNext();) {", "+                    if (!((ResourceSelector) (i.next())).isSelected(r)) {", "+                        continue outer;", "+                    }", "+                }", "+                result.add(r);", "+            }", "+            return result;", "+        }", "-     */", "-    protected Collection getCollection() {", "-        ArrayList result = new ArrayList();", "-outer:  for (Iterator ri = rc.iterator(); ri.hasNext();) {", "-            Resource r = (Resource) ri.next();", "-            for (Iterator i = getSelectors(); i.hasNext();) {", "-                if (!((ResourceSelector) (i.next())).isSelected(r)) {", "-                    continue outer;", "-                }", "-            }", "-            result.add(r);", "-        }", "-        return result;", "-    }"]}]}