{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63eeb95826f6587ad0646f218ea3f4a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "064a9767e818e92da0e4a187f25429a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/bzip2/CBZip2InputStream.java", "commitBeforeChange": "d1c81b1a62ed4ba76e27dfc92a63e80fb3ac6019", "commitAfterChange": "88799e0669076c9b0cc114a1e191bf3370820984", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private int bsR(int n)", "signatureAfterChange": "      private int bsR(int n)", "diff": ["-        {", "-            while (bsLive < n) {", "-                int zzi;", "-                char thech = 0;", "-                try {", "-                    thech = (char) bsStream.read();", "-                } catch (IOException e) {", "-                    compressedStreamEOF();", "-                }", "-                if (thech == -1) {", "-                    compressedStreamEOF();", "-                }", "-                zzi = thech;", "-                bsBuff = (bsBuff << 8) | (zzi & 0xff);", "-                bsLive += 8;", "+        while (bsLive < n) {", "+            int zzi;", "+            char thech = 0;", "+            try {", "+                thech = (char) bsStream.read();", "+            } catch (IOException e) {", "+                compressedStreamEOF();", "+            if (thech == -1) {", "+                compressedStreamEOF();", "+            }", "+            zzi = thech;", "+            bsBuff = (bsBuff << 8) | (zzi & 0xff);", "+            bsLive += 8;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99f83b3e29abcb828e7b3be3c62566e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/StreamPumper.java", "commitBeforeChange": "ce5e4129647f8418d1ffb870f3bf8031664519bc", "commitAfterChange": "e505c281d0bf63acd3bfc5a10c730d79057605d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["-        finish = false;", "-                if (length <= 0 || finish || Thread.interrupted()) {", "+                if (length <= 0 || Thread.interrupted()) {", "+                }", "+                if (finish) {", "+                \tbreak;", "+                }", "+            }", "+            // On completion, drain any available data (which might be the first data available for quick executions)", "+            if (finish) {", "+                while((length = is.available()) > 0) {", "+                \tif (Thread.interrupted()) {", "+                \t\tbreak;", "+                \t}", "+                    length = is.read(buf, 0, Math.min(length, buf.length));", "+                    if (length <= 0) {", "+                        break;", "+                    }", "+                    os.write(buf, 0, length);", "+            finish = false;"]}]}