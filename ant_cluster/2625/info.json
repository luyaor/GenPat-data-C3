{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99a71fc8d01c17920995258914a2f298", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01597d4066adbf00d5f30bf800e7644e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "584538b2d51bc33323178552ca508b0ee109fc33", "commitAfterChange": "165b7dfa13d2cc15ed344294540b2ff3d68bca98", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void write(int cc) throws IOException", "signatureAfterChange": "     public void write(int cc) throws IOException", "diff": ["+", "+        BufferInfo bufferInfo = getBufferInfo();", "-            if (!skip) {", "-                processBuffer();", "+            if (!bufferInfo.skip) {", "+                processBuffer(bufferInfo.buffer);", "-            ByteArrayOutputStream buffer = getBuffer();", "-            buffer.write(cc);", "-            if (buffer.size() > MAX_SIZE) {", "-                processBuffer();", "+            bufferInfo.buffer.write(cc);", "+            if (bufferInfo.buffer.size() > MAX_SIZE) {", "+                processBuffer(bufferInfo.buffer);", "-       // XXX: This isn't threadsafe. Consider two threads logging", "-       // Hello\\r\\n", "-       // and", "-       // There\\r\\n", "-       // at the same time, with the two '\\r's both being sent before", "-       // either '\\n', and the '\\n's coming in the opposite order (thread-wise)", "-       // to the '\\r's - one buffer will be processed twice, and the other won't", "-       // be processed at all.", "-       skip = (c == '\\r');", "+        bufferInfo.skip = (c == '\\r');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148241ebb142f6707c654cd3ca2ca26c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl.java", "commitBeforeChange": "f9bcdd7713370a79393e749e0e55fada438faa4a", "commitAfterChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public void init(String tag, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void init(String tag, AttributeList attrs) throws SAXParseException", "diff": ["-                task = project.createTask(tag);", "+                task = helperImpl.project.createTask(tag);", "-                task.setProject(project);", "+                task.setProject(helperImpl.project);", "-            task.setLocation(new Location(buildFile.toString(), locator.getLineNumber(), locator.getColumnNumber()));", "-            configureId(task, attrs);", "+            task.setLocation(new Location(helperImpl.buildFile.toString(), helperImpl.locator.getLineNumber(),", "+                                          helperImpl.locator.getColumnNumber()));", "+            helperImpl.configureId(task, attrs);", "-                configure(task, attrs, project);", "+                configure(task, attrs, helperImpl.project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7243ac6f93698e6f9dcd7f5091acc29f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/embed/ProjectHelperImpl.java", "commitBeforeChange": "f9bcdd7713370a79393e749e0e55fada438faa4a", "commitAfterChange": "f2d8ae34069b455a64a46431bd44a3b2a208e9d7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public void init(String tag, AttributeList attrs) throws SAXParseException", "signatureAfterChange": "         public void init(String tag, AttributeList attrs) throws SAXParseException", "diff": ["-                    throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\", locator);", "+                    throw new SAXParseException(\"Unexpected attribute \\\"\" + key + \"\\\"\", helperImpl.locator);", "-                throw new SAXParseException(\"target element appears without a name attribute\", locator);", "+                throw new SAXParseException(\"target element appears without a name attribute\",", "+                                            helperImpl.locator);", "-            project.addTarget(name, target);", "+            helperImpl.project.addTarget(name, target);", "-                project.addReference(id, target);", "+                helperImpl.project.addReference(id, target);"]}]}