{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a2777222771538cea2ba608af848a94", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80843946a200fd3d3c6b8db638f0a52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "7e7fa2f905e691ba00568bc670cc80060c224fd4", "commitAfterChange": "590936af269c77bda5fb410fd81e19958062efe6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "                  public void addAttribute(Attribute attribute) throws IOException", "signatureAfterChange": "         public String addAttribute(Attribute attribute) throws ManifestException", "diff": ["-        public void addAttribute(Attribute attribute) throws IOException {", "-            if (attributes.containsKey(attribute.getName().toLowerCase())) {", "-                throw new IOException(\"The attribute \\\"\" + attribute.getName() + \"\\\" may not occur more than\" +", "-                                      \" once in the same section\");", "+         */", "+        public String addAttribute(Attribute attribute) throws ManifestException {", "+            if (attribute.getName().equalsIgnoreCase(ATTRIBUTE_NAME)) {", "+                warnings.addElement(\"\\\"\" + ATTRIBUTE_NAME + \"\\\" attributes should not occur in the \" +", "+                                    \"main section and must be the first element in all \" + ", "+                                    \"other sections: \\\"\" +attribute.getName() + \": \" + attribute.getValue() + \"\\\"\");  ", "+                return attribute.getValue();", "-            attributes.put(attribute.getName().toLowerCase(), attribute);", "+            ", "+            if (attribute.getName().toLowerCase().startsWith(ATTRIBUTE_FROM.toLowerCase())) {", "+                warnings.addElement(\"Manifest attributes should not start with \\\"\" +", "+                                    ATTRIBUTE_FROM + \"\\\" in \\\"\" +attribute.getName() + \": \" + attribute.getValue() + \"\\\"\");  ", "+            }", "+            else if (attributes.containsKey(attribute.getName().toLowerCase())) {", "+                throw new ManifestException(\"The attribute \\\"\" + attribute.getName() + \"\\\" may not \" + ", "+                                            \"occur more than once in the same section\");", "+            }", "+            else {", "+                attributes.put(attribute.getName().toLowerCase(), attribute);", "+            }", "+            return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2fcd63d5ce15f76532a1259681639a2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/IPlanetEjbc.java", "commitBeforeChange": "aa2742957752bcb4e6511924b16f1704446178b4", "commitAfterChange": "41bb266266921a6fbc381b7b22b788f54797afb3", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 56, "signatureBeforeChange": "         private long sourceClassesModified(File buildDir)", "signatureAfterChange": "         private long sourceClassesModified(File buildDir)", "diff": ["+            File pkFile;         // File for the EJB primary key class", "+", "+            /* Check the timestamp of the primary key class */", "+            if (primaryKey != null) {", "+                pkFile = primaryKey.getClassFile(buildDir);", "+                modified = pkFile.lastModified();", "+                if (modified == -1) {", "+                    System.out.println(\"The class \"", "+                                    + primaryKey.getQualifiedClassName() + \"couldn't be \"", "+                                    + \"found on the classpath\");", "+                    return -1;", "+                }", "+                latestModified = Math.max(latestModified, modified);", "+            }", "+            else {", "+                pkFile = null;", "+            }", "+", "+            if (pkFile != null) {", "+                pathToFile = primaryKey.getQualifiedClassName();", "+                pathToFile = pathToFile.replace('.', File.separatorChar) + \".class\";", "+                ejbFiles.put(pathToFile, pkFile);", "+            }"]}]}