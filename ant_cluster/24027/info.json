{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dff7a0a139789bfbb85e92a1da25a37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb02ea4e6f51527b53c203c374b87fc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/MyrmidonEmbeddor.java", "commitBeforeChange": "685af27ceefe23e6cbaf8e8212805d3850765bdc", "commitAfterChange": "157d8f04d2c676ac93a8cda891f804bddf6f7836", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void setupFiles()         throws Exception", "signatureAfterChange": "     private void setupFiles()         throws Exception", "diff": ["-        filepath = getParameter( \"ant.home\" );", "+        filepath = getParameter( \"myrmidon.home\" );", "-        checkDirectory( m_homeDir, \"ant-home\" );", "+        checkDirectory( m_homeDir, \"home\" );", "-        filepath = getParameter( \"ant.path.bin\" );", "+        filepath = getParameter( \"myrmidon.bin.path\" );", "-        filepath = getParameter( \"ant.path.lib\" );", "-        m_libDir = resolveDirectory( filepath, \"lib-dir\" );", "-", "-        filepath = getParameter( \"ant.path.task-lib\" );", "+        filepath = getParameter( \"myrmidon.lib.path\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7401ccf8606cd41ec21c820a6faa992", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Move.java", "commitBeforeChange": "9fb2961443b0e15a6fd0be0aceed9d78e8c9cad7", "commitAfterChange": "f613801836c18d2ed1d7da7deab40f0867b99620", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected void doFileOperations()", "signatureAfterChange": "      protected void doFileOperations()", "diff": ["-        filterSets = getFilterSets();", "-        filterChains = getFilterChains();", "-", "-                            log(\"Moving \" + fromFile + \" to \" + toFile, verbosity);", "+                            log(\"Moving \" + fromFile + \" to \" + toFile, ", "+                                verbosity);", "-                            FilterSetCollection executionFilters = new FilterSetCollection();", "+                            FilterSetCollection executionFilters = ", "+                                new FilterSetCollection();", "-                                executionFilters.addFilterSet(project.getGlobalFilterSet());", "+                                executionFilters", "+                                    .addFilterSet(project.getGlobalFilterSet());", "-                            for (Enumeration filterEnum = getFilterSets().elements(); filterEnum.hasMoreElements();) {", "-                                executionFilters.addFilterSet((FilterSet)filterEnum.nextElement());", "+                            for (Enumeration filterEnum = ", "+                                     getFilterSets().elements(); ", "+                                 filterEnum.hasMoreElements();) {", "+                                executionFilters", "+                                    .addFilterSet((FilterSet)filterEnum", "+                                                  .nextElement());", "-                            getFileUtils().copyFile(f, d, executionFilters, filterChains,", "+                            getFileUtils().copyFile(f, d, executionFilters, ", "+                                                    getFilterChains(), ", "-                                throw new BuildException(\"Unable to delete file \"", "+                                throw new BuildException(\"Unable to delete \"", "+                                                         + \"file \"", "-                        log(\"Unable to create directory \" + d.getAbsolutePath(), Project.MSG_ERR);", "+                        log(\"Unable to create directory \" ", "+                            + d.getAbsolutePath(), Project.MSG_ERR);", "-                log(\"Moved \" + count + \" empty directories to \" + destDir.getAbsolutePath());", "+                log(\"Moved \" + count + \" empty directories to \" ", "+                    + destDir.getAbsolutePath());"]}]}