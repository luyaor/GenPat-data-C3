{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0aab88167832ee48cac08ef0f4487d91", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c39446f1762d258c137991791b4148", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "fd0da1440ca6e87774f1aa42277c55f5d708ecea", "commitAfterChange": "523f5d39aad823b0144d6daa7ff43f6fa1fb5e55", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["+            final String message = REZ.getString( \"configuring-object.notice\", object );", "+                final String message = REZ.getString( \"configurable.notice\" );", "-                getLogger().debug( \"Configuring object via Configurable reflection\" );", "+                final String message = REZ.getString( \"reflection.notice\" );", "+                getLogger().debug( message );", "-                    getLogger().debug( \"Configuring attribute name=\" + name +", "-                                       \" value=\" + value );", "+                    final String message = REZ.getString( \"configure-attribute.notice\", name, value );", "+                    getLogger().debug( message );", "-                    getLogger().debug( \"Configuring subelement name=\" + child.getName() );", "+                    final String message =", "+                        REZ.getString( \"configure-subelement.notice\", child.getName() );", "+                    getLogger().debug( message );", "-                        getLogger().debug( \"Configuring content \" + content );", "+                        final String message =", "+                            REZ.getString( \"configure-content.notice\", content );", "+                        getLogger().debug( message );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376052349f85d22fdabd22eb4b2080f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "c4dee0afafcc57ede3e3d1e81d2d4a1455c484a4", "commitAfterChange": "f52a170159f6dc5beebe07bfb945cb5b3fa5290b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-        if( DEBUG )", "+        try", "-            final String message = REZ.getString( \"configuring-object.notice\", object );", "-            getLogger().debug( message );", "+            configureObject( object, configuration, context );", "+        catch( InvocationTargetException ite )", "+        {", "+            // A configuration exception thrown from a nested object.  Unpack", "+            // and re-throw", "+            throw (ConfigurationException)ite.getTargetException();", "+        }", "+    }", "-            if( DEBUG )", "-            {", "-                final String message = REZ.getString( \"configurable.notice\" );", "-                getLogger().debug( message );", "-            }", "-", "-            if( DEBUG )", "-            {", "-                final String message = REZ.getString( \"reflection.notice\" );", "-                getLogger().debug( message );", "-            }", "-                final String value = configuration.getAttribute( name );", "-", "-                // Set the attribute", "-                setAttribute( configurer, object, name, value, context );", "-                setContent( configurer, object, content, context );", "-                configureElement( configurer, object, childConfig, context );"]}]}