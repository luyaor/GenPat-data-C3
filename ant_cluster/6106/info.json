{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cff7af8020d1c30664095224abc70ef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46c079928a136fc2dd6166e850fc7e3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "ade21771915833553836d3270350c7439be95575", "commitAfterChange": "614648dc6fe40728d9b502fbdec711668fb9e946", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "signatureAfterChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "diff": ["-//        if (nc == null && parent instanceof DynamicConfiguratorNS) {", "-//            DynamicConfiguratorNS dc = (DynamicConfiguratorNS) parent;", "-//            String qName = (child == null ? name : child.getQName());", "-//            final Object nestedElement =", "-//                dc.createDynamicElement(", "-//                    (child == null ? \"\" : child.getNamespace()),", "-//                    name, qName);", "-//            if (nestedElement != null) {", "-//                nc = new NestedCreator() {", "-//                    public boolean isPolyMorphic() {", "-//                        return false;", "-//                    }", "-//                    public Class getElementClass() {", "-//                        return null;", "-//                    }", "-//", "-//                    public Object getRealObject() {", "-//                        return null;", "-//                    }", "-//", "-//                    public Object create(", "-//                        Project project, Object parent, Object ignore) {", "-//                        return nestedElement;", "-//                    }", "-//                    public void store(Object parent, Object child) {", "-//                    }", "-//                };", "-//            }", "-//        }", "+        if (nc == null && parent instanceof DynamicConfiguratorNS) {", "+            DynamicConfiguratorNS dc = (DynamicConfiguratorNS) parent;", "+            String qName = (child == null ? name : child.getQName());", "+            final Object nestedElement =", "+                dc.createDynamicElement(", "+                    (child == null ? \"\" : child.getNamespace()),", "+                    name, qName);", "+            if (nestedElement != null) {", "+                nc = new NestedCreator() {", "+                    public boolean isPolyMorphic() {", "+                        return false;", "+                    }", "+                    public Class getElementClass() {", "+                        return null;", "+                    }", "+", "+                    public Object getRealObject() {", "+                        return null;", "+                    }", "+", "+                    public Object create(", "+                        Project project, Object parent, Object ignore) {", "+                        return nestedElement;", "+                    }", "+                    public void store(Object parent, Object child) {", "+                    }", "+                };", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df316ebcecbeb7bdca05cf6b81eff810", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "476678d4a660bd6077ae4a8389cc29f42fbde0c9", "commitAfterChange": "69cd05e0f91f554bc045a9f9d6549c70dd5f27c1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "signatureAfterChange": "      private NestedCreator getNestedCreator(         Project project, String parentUri, Object parent,         String elementName, UnknownElement child) throws BuildException", "diff": ["-        if (nc == null && parent instanceof DynamicConfiguratorNS) {", "-            DynamicConfiguratorNS dc = (DynamicConfiguratorNS) parent;", "-            String qName = (child == null ? name : child.getQName());", "-            final Object nestedElement =", "-                dc.createDynamicElement(", "-                    (child == null ? \"\" : child.getNamespace()),", "-                    name, qName);", "-            if (nestedElement != null) {", "-                nc = new NestedCreator() {", "-                    public boolean isPolyMorphic() {", "-                        return false;", "-                    }", "-                    public Class getElementClass() {", "-                        return null;", "-                    }", "-", "-                    public Object getRealObject() {", "-                        return null;", "-                    }", "-", "-                    public Object create(", "-                        Project project, Object parent, Object ignore) {", "-                        return nestedElement;", "-                    }", "-                    public void store(Object parent, Object child) {", "-                    }", "-                };", "-            }", "-        }", "+//        if (nc == null && parent instanceof DynamicConfiguratorNS) {", "+//            DynamicConfiguratorNS dc = (DynamicConfiguratorNS) parent;", "+//            String qName = (child == null ? name : child.getQName());", "+//            final Object nestedElement =", "+//                dc.createDynamicElement(", "+//                    (child == null ? \"\" : child.getNamespace()),", "+//                    name, qName);", "+//            if (nestedElement != null) {", "+//                nc = new NestedCreator() {", "+//                    public boolean isPolyMorphic() {", "+//                        return false;", "+//                    }", "+//                    public Class getElementClass() {", "+//                        return null;", "+//                    }", "+//", "+//                    public Object getRealObject() {", "+//                        return null;", "+//                    }", "+//", "+//                    public Object create(", "+//                        Project project, Object parent, Object ignore) {", "+//                        return nestedElement;", "+//                    }", "+//                    public void store(Object parent, Object child) {", "+//                    }", "+//                };", "+//            }", "+//        }"]}]}