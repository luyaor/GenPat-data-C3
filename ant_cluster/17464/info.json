{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da64df956613c4bd35c9cca62eca07fe", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da979f0b9b04a8c3c6e57a39fa6d860", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void forwardEvent(BuildEvent event)", "signatureAfterChange": "     public void fireMessageLogged(ModelElement element,                                   String message, int priority)", "diff": ["-     */", "-    public void forwardEvent(BuildEvent event) {", "-        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "-            BuildListener listener = (BuildListener)i.next();", "-", "-            listener.processBuildEvent(event);", "-        }", "-    }", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.messageLogged(event);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d656e6659bd0dce0d912e77ec9d71d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/rjunit/remote/TestRunner.java", "commitBeforeChange": "b07408a415c2be0594dfe88062177fc4cc571d05", "commitAfterChange": "c2b10718db2516942cbceeae8a89d1032393a55f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private final int countTests(Test[] tests)", "signatureAfterChange": "     private final int countTests(Collection tests)", "diff": ["-    /** count the number of test methods in all tests */", "-    private final int countTests(Test[] tests) {", "+     */", "+    private final int countTests(Collection tests) {", "-        for (int i = 0; i < tests.length; i++) {", "-            count = count + tests[i].countTestCases();", "+        for (Iterator it = tests.iterator(); it.hasNext(); ) {", "+            Test test = (Test)it.next();", "+            count = count + test.countTestCases();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15e629910724d62001d295b454c5d42", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ComponentManager.java", "commitBeforeChange": "408a4c09b05e9710ce19870d99a5ef79ea9c82a7", "commitAfterChange": "8e684f3e6e608fb3d36212faea4c1c7ad80f4323", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void importLibrary(String libraryId) throws ExecutionException", "signatureAfterChange": "     protected void importLibrary(String libraryId) throws ExecutionException", "diff": ["-        Map libDefs = library.getDefinitions();", "-        for (Iterator i = libDefs.keySet().iterator(); i.hasNext(); ) {", "+        for (Iterator i = library.getDefinitionNames(); i.hasNext(); ) {", "-            AntLibDefinition libdef", "-                 = (AntLibDefinition)libDefs.get(defName);", "-            definitions.put(defName, new ImportInfo(library, libdef));", "+            importLibraryDef(library, defName, null);"]}]}