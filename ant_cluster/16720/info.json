{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99f4d310fc6098b5be42726240170870", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "242ed1bcb6715e42953c402cdd32ab28", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Diagnostics.java", "commitBeforeChange": "296f7cecd0347b79f837be45c671e0fa9054f402", "commitAfterChange": "9e260d7fa31b28b41ef6061745860550eefb965b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static String getImplementationVersion(Class clazz)", "signatureAfterChange": "     private static String getImplementationVersion(Class clazz)", "diff": ["-        try {", "-          // Package pkg = clazz.getPackage();", "-          Method method = Class.class.getMethod(\"getPackage\", new Class[0]);", "-          Object pkg = method.invoke(clazz, (Object[]) null);", "-          if (pkg != null) {", "-              // pkg.getImplementationVersion();", "-              method = pkg.getClass().getMethod(\"getImplementationVersion\", new Class[0]);", "-              Object version = method.invoke(pkg, (Object[]) null);", "-              return (String) version;", "-          }", "-        } catch (Exception e) {", "-          // JDK < 1.2 should land here because the methods above don't exist.", "-          return \"?.?\";", "-        }", "-        return null;", "+        Package pkg = clazz.getPackage();", "+        return pkg.getImplementationVersion();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6715125ed650fc08a603142793a162", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitVersionHelper.java", "commitBeforeChange": "c5257beb082a74197e95fdd9cb6a7fb6d6d97534", "commitAfterChange": "e1ef86cb256ac33de7283fc7a368ffa0b0b76892", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static String getTestCaseName(Test t)", "signatureAfterChange": "     public static String getTestCaseName(Test t)", "diff": ["-                Method getNameMethod = ", "-                    t.getClass().getMethod(\"getName\", new Class [0]);", "-                if (getNameMethod.getReturnType() == String.class) {", "+                Method getNameMethod = null;", "+                try {", "+                    getNameMethod = ", "+                        t.getClass().getMethod(\"getName\", new Class [0]);", "+                } catch (NoSuchMethodException e) {", "+                    getNameMethod = t.getClass().getMethod(\"name\", ", "+                                                           new Class [0]);", "+                }", "+                if (getNameMethod != null &&", "+                    getNameMethod.getReturnType() == String.class) {"]}]}