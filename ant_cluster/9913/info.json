{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0836aa0202fdfe1c57e0a1e0062a6734", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87440963818d2e1d23613558e154854b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "523f5d39aad823b0144d6daa7ff43f6fa1fb5e55", "commitAfterChange": "a71d6f91adaf42aed1f7ba2e894cbb6a2ec1929a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( Class destination, final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "     public Object convert( Class destination, final Object original, final Context context )         throws ConverterException", "diff": ["-            getLogger().debug( \"Looking for converter from \" + originalClass.getName() +", "-                               \" to \" + destination.getName() );", "+            final String message = ", "+                REZ.getString( \"converter-lookup.notice\", ", "+                               originalClass.getName(), ", "+                               destination.getName() );", "+            getLogger().debug( message );", "-            throw new ConverterException( \"Unable to find converter for \" +", "-                                          originalClass.getName() + \" to \" +", "-                                          destination.getName() + \" conversion\" );", "+            final String message = ", "+                REZ.getString( \"no-converter.notice\", ", "+                               originalClass.getName(), ", "+                               destination.getName() );", "+            throw new ConverterException( message );", "-", "-                getLogger().debug( \"Found Converter: \" + converter );", "+                final String message = REZ.getString( \"found-converter.notice\", converter );", "+                getLogger().debug( message );", "-            throw new ConverterException( \"Badly configured TypeManager missing \" +", "-                                          \"converter definition\", te );", "+            final String message = REZ.getString( \"bad-typemanager.error\" );", "+            throw new ConverterException( message, te );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf43b3345bcc4d13287740b41076b94c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "fd0da1440ca6e87774f1aa42277c55f5d708ecea", "commitAfterChange": "523f5d39aad823b0144d6daa7ff43f6fa1fb5e55", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean setValue( final Object object,                               Object value,                               final Method method,                               final Class sourceClass,                               final String source,                               final Context context )         throws ConfigurationException", "signatureAfterChange": "      private boolean setValue( final Object object,                               Object value,                               final Method method,                               final Class sourceClass,                               final String source,                               final Context context )         throws ConfigurationException", "diff": ["-                getLogger().debug( \"Failed to find converter \", ce );", "+                final String message = REZ.getString( \"no-converter.error\" );", "+                getLogger().debug( message, ce );", "-            throw new ConfigurationException( \"Error converting attribute for \" +", "-                                              method.getName(),", "-                                              e );", "+            final String message =", "+                REZ.getString( \"bad-convert-for-attribute.error\", method.getName() );", "+            throw new ConfigurationException( message, e );", "-            throw new ConfigurationException( \"Error retrieving methods with \" +", "-                                              \"correct access specifiers\",", "-                                              iae );", "+            final String message = REZ.getString( \"illegal-access.error\" );", "+            throw new ConfigurationException( message, iae );", "-            throw new ConfigurationException( \"Error calling method attribute \" +", "-                                              method.getName(),", "-                                              ite );", "+            final String message = REZ.getString( \"invoke-target.error\", method.getName() );", "+            throw new ConfigurationException( message, ite );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3841ba39538de5f0990a75cea1f7691", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/libs/runtime/ConverterDef.java", "commitBeforeChange": "f9224257bdf1d2512c9c72f3c8e1276c67ed3cad", "commitAfterChange": "e982760c849aca983252efb5f9cf66534a7d3253", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute()         throws TaskException", "signatureAfterChange": "      public void execute()         throws TaskException", "diff": ["-            throw new TaskException( \"Must specify classname parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-classname.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the source-type parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-source.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the destination-type parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-destination.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Must specify the lib parameter\" );", "+            final String message = REZ.getString( \"converterdef.no-lib.error\" );", "+            throw new TaskException( message );", "-            throw new TaskException( \"Failed to register converter \" + m_classname, e );", "+            final String message = REZ.getString( \"converterdef.no-register.error\", m_classname );", "+            throw new TaskException( message, e );"]}]}