{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c414007d59276f5e5cebdf787cde2be0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5827fda2fa251c4295db28336d38a4d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "9ff2d6a1ab17e51f25cadf8de2a1b7ada8c15490", "commitAfterChange": "eefa2aba55ad71e6c5ee6e54748b1dc76025c7ac", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected String[] getDirs(File basedir, DirectoryScanner ds)", "signatureAfterChange": "     protected String[] getDirs(File baseDir, DirectoryScanner ds)", "diff": ["-    protected String[] getDirs(File basedir, DirectoryScanner ds) {", "-        return ds.getIncludedDirectories();", "+    protected String[] getDirs(File baseDir, DirectoryScanner ds) {", "+        if (mapper != null) {", "+            SourceFileScanner sfs = new SourceFileScanner(this);", "+            return sfs.restrict(ds.getIncludedDirectories(), baseDir, destDir, ", "+                                mapper);", "+        } else {", "+            return ds.getIncludedDirectories();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a11f520734cd04e0e068106324b1461e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "9ff2d6a1ab17e51f25cadf8de2a1b7ada8c15490", "commitAfterChange": "eefa2aba55ad71e6c5ee6e54748b1dc76025c7ac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected String[] getFiles(File basedir, DirectoryScanner ds)", "signatureAfterChange": "     protected String[] getFiles(File baseDir, DirectoryScanner ds)", "diff": ["-    protected String[] getFiles(File basedir, DirectoryScanner ds) {", "-        return ds.getIncludedFiles();", "+    protected String[] getFiles(File baseDir, DirectoryScanner ds) {", "+        if (mapper != null) {", "+            SourceFileScanner sfs = new SourceFileScanner(this);", "+            return sfs.restrict(ds.getIncludedFiles(), baseDir, destDir, ", "+                                mapper);", "+        } else {", "+            return ds.getIncludedFiles();", "+        }"]}]}