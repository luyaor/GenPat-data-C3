{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fd0270eceb039b7a4953a6110fb1d1e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36fcbffa62ae81aa7a691a048eba43c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasklet/engine/DefaultTaskletEngine.java", "commitBeforeChange": "48c54a521235f746024ae8facc272e049d0e1cf5", "commitAfterChange": "6caf36ea18f59884feefc17b5bd3c77f88677268", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void execute( final Configuration task, final TaskletContext context )         throws AntException", "signatureAfterChange": "      public void execute( final Configuration taskData, final TaskContext context )         throws AntException", "diff": ["-    public void execute( final Configuration task, final TaskletContext context )", "+    public void execute( final Configuration taskData, final TaskContext context )", "-        final Tasklet tasklet = createTasklet( task.getName() );", "-        setupLogger( tasklet );", "+        final Task task = createTask( taskData.getName() );", "+        setupLogger( task );", "-        doContextualize( tasklet, task, context );", "+        doContextualize( task, taskData, context );", "-        doCompose( tasklet, task );", "+        doCompose( task, taskData );", "-        doConfigure( tasklet, task, context );", "+        doConfigure( task, taskData, context );", "-        doInitialize( tasklet, task );", "+        doInitialize( task, taskData );", "-        try { tasklet.execute(); }", "+", "+        try { task.execute(); }", "-        doDispose( tasklet, task );", "+        doDispose( task, taskData );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3dae542bab8f578cb7553684b7ae930", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "8fc57a55d3662cc74427b9b8af0fb375e809acff", "commitAfterChange": "794a883964c3cd6022bd166dbe6f9cda2360222d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void execute( final Configuration taskData, final TaskContext context )         throws TaskException", "signatureAfterChange": "      public void execute( final Configuration taskModel, final TaskContext context )         throws TaskException", "diff": ["-    public void execute( final Configuration taskData, final TaskContext context )", "+    public void execute( final Configuration taskModel, final TaskContext context )", "-        final Task task = createTask( taskData.getName() );", "+        final Task task = createTask( taskModel.getName() );", "-        doContextualize( task, taskData, context );", "+        doContextualize( task, taskModel, context );", "-        doCompose( task, taskData );", "+        doCompose( task, taskModel );", "-        doConfigure( task, taskData, context );", "+        doConfigure( task, taskModel, context );", "-        doInitialize( task, taskData );", "+        doInitialize( task, taskModel );", "-        doDispose( task, taskData );", "+        doDispose( task, taskModel );"]}]}