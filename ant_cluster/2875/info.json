{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fe627e6ebe51ad0f1eb2f279dbea6a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66b503db40cb9999e34e6daaf4a50844", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/StringResource.java", "commitBeforeChange": "98b17accfd073616b2d8be14d455e90362786e94", "commitAfterChange": "de1642bdb74c54168ca4b9d1f76249a6748dc058", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public synchronized InputStream getInputStream() throws IOException", "signatureAfterChange": "     public synchronized InputStream getInputStream() throws IOException", "diff": ["-        //I can't get my head around this; is encoding treatment needed here?", "-        return", "-            //new oata.util.ReaderInputStream(new InputStreamReader(", "-            new ByteArrayInputStream(getContent().getBytes());", "-            //, encoding), encoding);", "+        String content = getContent();", "+        if (content == null) {", "+            throw new IllegalStateException(\"unset string value\");", "+        }", "+        return new ByteArrayInputStream(encoding == null", "+                ? content.getBytes() : content.getBytes(encoding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "733fbf3f88ff6e976eec7db732d9dfe5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/DirectoryScannerTest.java", "commitBeforeChange": "e5235423ccd494cb7516a1df6e3e13a74a22b767", "commitAfterChange": "da5a13f8e4e0e4475f942b5ae5670271b711d423", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testSetFollowLinks()", "signatureAfterChange": "      public void testSetFollowLinks()", "diff": ["-                    Thread.sleep(1000);    ", "+                    Thread.sleep(1000);", "-                ", "+", "-                ", "+", "-            ", "+", "-                ", "+", "-                assertTrue(\"(1) taskdefs package included\", ", "+                assertTrue(\"(1) taskdefs package included\",", "-            ", "+", "-                ", "+", "-            ", "+", "-                assertTrue(\"(2) taskdefs package not included\", ", "+                assertTrue(\"(2) taskdefs package not included\",", "-                ", "+", "-                (new File(\"src/main/org/apache/tools/ThisIsALink\")).delete();", "-            } ", "+                File f = new File(\"src/main/org/apache/tools/ThisIsALink\");", "+                if (!f.delete()) {", "+                    throw new RuntimeException(\"Failed to delete \"+f);", "+                }", "+            }"]}]}