{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3701efd1d475f128ac5850ffafcf7b6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "709184ea90453187f8dd96388f3450f7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/types/AntFilterReader.java", "commitBeforeChange": "7265fdb8a846802089831647891b0218858fdc7b", "commitAfterChange": "8aa365e5d7d7f14ac4e0002be30968df77b08b56", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public final Hashtable getParams()", "signatureAfterChange": "      public final Parameter[] getParams()", "diff": ["-    public final Hashtable getParams() {", "-        final int size = parameters.size();", "-        final Hashtable params = new Hashtable();", "-        for (int i = 0; i < size; i++) {", "-            final Parameter param = (Parameter) parameters.elementAt(i);", "-            final String name = param.getName();", "-            final String value = param.getValue();", "-            if (name != null && value != null) {", "-                params.put(name, value);", "-            }", "-        }", "+    public final Parameter[] getParams() {", "+        Parameter[] params = new Parameter[parameters.size()];", "+        parameters.copyInto(params);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b94a3db9a72e5a458148602814963f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultWorkspace.java", "commitBeforeChange": "6638f2ac2b2d797fe2789ea7cbcf235b7cf4ea5a", "commitAfterChange": "7eb8a34e54e5c7ff3241f4414e04cf3b623c3e07", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws Exception", "signatureAfterChange": "     private ExecutionFrame createExecutionFrame( final Project project )         throws Exception", "diff": ["-        // TODO - Add child role manager", "+        // TODO - Add child role manager and configurer", "+        // TODO - add project to properties, not services", "-", "-        final String[] names = project.getProjectNames();", "-        for( int i = 0; i < names.length; i++ )", "-        {", "-            final String name = names[ i ];", "-            final Project other = project.getProject( name );", "-            serviceManager.put( Project.ROLE + \"/\" + name, other );", "-        }", "-        //TODO: Put this in Execution Frame", "+        // Properties", "-", "-       // Create and configure the context", "-        final DefaultTaskContext context =", "-            new DefaultTaskContext( serviceManager, logger, store );", "-        context.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "+        store.setProperty( TaskContext.BASE_DIRECTORY, project.getBaseDirectory() );", "-            new DefaultExecutionFrame( logger, context, typeManager );", "+            new DefaultExecutionFrame( logger, store, serviceManager );"]}]}