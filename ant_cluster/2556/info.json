{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f80e13c645f3e697650048de12f58266", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef4c73a02adf978d5f9fad5813c7931", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "     protected void execute(List testList, int thread) throws BuildException", "signatureAfterChange": "     protected void execute(final List testList, final int thread) throws BuildException", "diff": ["-    protected void execute(List testList, int thread) throws BuildException {", "+    protected void execute(final List testList, final int thread) throws BuildException {", "-        File casesFile = createTempPropertiesFile(\"junittestcases\");", "+        final File casesFile = createTempPropertiesFile(\"junittestcases\");", "-            PrintStream logWriter =", "+            final PrintStream logWriter =", "-            Iterator iter = testList.iterator();", "+            final Iterator iter = testList.iterator();", "-            ExecuteWatchdog watchdog = createWatchdog();", "-            TestResultHolder result =", "+            final ExecuteWatchdog watchdog = createWatchdog();", "+            final TestResultHolder result =", "-        } catch (IOException e) {", "+        } catch (final IOException e) {", "-            } catch (Exception e) {", "+            } catch (final Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ee5a1b2026a8819bd6d08cd5cb3152", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static void copyResource(Resource source, Resource dest,                              FilterSetCollection filters, Vector filterChains,                              boolean overwrite, boolean preserveLastModified,                              String inputEncoding, String outputEncoding,                              Project project)         throws IOException", "signatureAfterChange": "     public static void copyResource(final Resource source, final Resource dest,                              final FilterSetCollection filters, final Vector filterChains,                              final boolean overwrite, final boolean preserveLastModified,                              final String inputEncoding, final String outputEncoding,                              final Project project)         throws IOException", "diff": ["-    public static void copyResource(Resource source, Resource dest,", "-                             FilterSetCollection filters, Vector filterChains,", "-                             boolean overwrite, boolean preserveLastModified,", "-                             String inputEncoding, String outputEncoding,", "-                             Project project)", "+    public static void copyResource(final Resource source, final Resource dest,", "+                             final FilterSetCollection filters, final Vector filterChains,", "+                             final boolean overwrite, final boolean preserveLastModified,", "+                             final String inputEncoding, final String outputEncoding,", "+                             final Project project)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a22ae16c4d78bc66a5cc5b3fe5f7af6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected void buildMap(File fromDir, File toDir, String[] names,                             FileNameMapper mapper, Hashtable<String, String[]> map)", "signatureAfterChange": "     protected void buildMap(final File fromDir, final File toDir, final String[] names,                             final FileNameMapper mapper, final Hashtable<String, String[]> map)", "diff": ["-    protected void buildMap(File fromDir, File toDir, String[] names,", "-                            FileNameMapper mapper, Hashtable<String, String[]> map) {", "+    protected void buildMap(final File fromDir, final File toDir, final String[] names,", "+                            final FileNameMapper mapper, final Hashtable<String, String[]> map) {", "-            Vector<String> v = new Vector<String>();", "+            final Vector<String> v = new Vector<String>();", "-            SourceFileScanner ds = new SourceFileScanner(this);", "+            final SourceFileScanner ds = new SourceFileScanner(this);", "-            File src = new File(fromDir, toCopy[i]);", "-            String[] mappedFiles = mapper.mapFileName(toCopy[i]);", "+            final File src = new File(fromDir, toCopy[i]);", "+            final String[] mappedFiles = mapper.mapFileName(toCopy[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b516896f06f8023b3f8067c9a527204", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "     protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,                                              File zipFile,                                              boolean needsUpdate)         throws BuildException", "signatureAfterChange": "     protected ArchiveState getResourcesToAdd(final ResourceCollection[] rcs,                                              final File zipFile,                                              final boolean needsUpdate)         throws BuildException", "diff": ["-    protected ArchiveState getResourcesToAdd(ResourceCollection[] rcs,", "-                                             File zipFile,", "-                                             boolean needsUpdate)", "+    protected ArchiveState getResourcesToAdd(final ResourceCollection[] rcs,", "+                                             final File zipFile,", "+                                             final boolean needsUpdate)", "-        ArrayList<ResourceCollection> filesets = new ArrayList<ResourceCollection>();", "-        ArrayList<ResourceCollection> rest = new ArrayList<ResourceCollection>();", "+        final ArrayList<ResourceCollection> filesets = new ArrayList<ResourceCollection>();", "+        final ArrayList<ResourceCollection> rest = new ArrayList<ResourceCollection>();", "-        ResourceCollection[] rc =", "+        final ResourceCollection[] rc =", "-        FileSet[] fs = filesets.toArray(new FileSet[filesets", "+        final FileSet[] fs = filesets.toArray(new FileSet[filesets", "-        ArchiveState as2 = getResourcesToAdd(fs, zipFile, as.isOutOfDate());", "+        final ArchiveState as2 = getResourcesToAdd(fs, zipFile, as.isOutOfDate());", "-        Resource[][] toAdd = new Resource[rcs.length][];", "+        final Resource[][] toAdd = new Resource[rcs.length][];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b9826abb3e59f30f0a8c9566f3b322", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/SSHSession.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override \tpublic void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-            for (Iterator i = localTunnels.iterator(); i.hasNext();) {", "-                LocalTunnel tunnel = (LocalTunnel) i.next();", "+            for (final Iterator i = localTunnels.iterator(); i.hasNext();) {", "+                final LocalTunnel tunnel = (LocalTunnel) i.next();", "-            for (Iterator i = remoteTunnels.iterator(); i.hasNext();) {", "-                RemoteTunnel tunnel = (RemoteTunnel) i.next();", "+            for (final Iterator i = remoteTunnels.iterator(); i.hasNext();) {", "+                final RemoteTunnel tunnel = (RemoteTunnel) i.next();", "-            for (Iterator i = nestedSequential.getNested().iterator();", "+            for (final Iterator i = nestedSequential.getNested().iterator();", "-                Task nestedTask = (Task) i.next();", "+                final Task nestedTask = (Task) i.next();", "-        } catch (JSchException e) {", "+        } catch (final JSchException e) {", "-        } catch (BuildException e) {", "+        } catch (final BuildException e) {", "-        } catch (Exception e) {", "+        } catch (final Exception e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89984fd7b9920140983cb215b225262a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "     private void addResource(Resource r, String name, String prefix,                              ZipOutputStream zOut, int mode,                              ZipFile zf, File fromArchive)         throws IOException", "signatureAfterChange": "     private void addResource(final Resource r, final String name, final String prefix,                              final ZipOutputStream zOut, final int mode,                              final ZipFile zf, final File fromArchive)         throws IOException", "diff": ["-    private void addResource(Resource r, String name, String prefix,", "-                             ZipOutputStream zOut, int mode,", "-                             ZipFile zf, File fromArchive)", "+    private void addResource(final Resource r, final String name, final String prefix,", "+                             final ZipOutputStream zOut, final int mode,", "+                             final ZipFile zf, final File fromArchive)", "-            ZipEntry ze = zf.getEntry(r.getName());", "+            final ZipEntry ze = zf.getEntry(r.getName());", "-                boolean oldCompress = doCompress;", "+                final boolean oldCompress = doCompress;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57e84029b29a724d1230992d2c3a92c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpFromMessageBySftp.java", "commitBeforeChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "commitAfterChange": "789422e131b6c2c003d94f394169a64297e986c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void getFile(ChannelSftp channel,                          ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "signatureAfterChange": "      private void getFile(final ChannelSftp channel,                          final ChannelSftp.LsEntry le,                          File localFile) throws IOException, SftpException", "diff": ["-    private void getFile(ChannelSftp channel,", "-                         ChannelSftp.LsEntry le,", "+    private void getFile(final ChannelSftp channel,", "+                         final ChannelSftp.LsEntry le,", "-        String remoteFile = le.getFilename();", "+        final String remoteFile = le.getFilename();", "-            String path = localFile.getAbsolutePath();", "-            int i = path.lastIndexOf(File.pathSeparator);", "+            final String path = localFile.getAbsolutePath();", "+            final int i = path.lastIndexOf(File.pathSeparator);", "-        long startTime = System.currentTimeMillis();", "-        long totalLength = le.getAttrs().getSize();", "+        final long startTime = System.currentTimeMillis();", "+        final long totalLength = le.getAttrs().getSize();", "-        boolean trackProgress = getVerbose() && totalLength > HUNDRED_KILOBYTES;", "+        final boolean trackProgress = getVerbose() && totalLength > HUNDRED_KILOBYTES;", "-            long endTime = System.currentTimeMillis();", "+            final long endTime = System.currentTimeMillis();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9a9d11e3c76168c74ec074d334b331", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "     private void generateMissingPackageInfoClasses(File dest) throws IOException", "signatureAfterChange": "     private void generateMissingPackageInfoClasses(final File dest) throws IOException", "diff": ["-    private void generateMissingPackageInfoClasses(File dest) throws IOException {", "-        for (Entry<String, Long> entry : packageInfos.entrySet()) {", "-            String pkg = entry.getKey();", "-            Long sourceLastMod = entry.getValue();", "-            File pkgBinDir = new File(dest, pkg.replace('/', File.separatorChar));", "+    private void generateMissingPackageInfoClasses(final File dest) throws IOException {", "+        for (final Entry<String, Long> entry : packageInfos.entrySet()) {", "+            final String pkg = entry.getKey();", "+            final Long sourceLastMod = entry.getValue();", "+            final File pkgBinDir = new File(dest, pkg.replace('/', File.separatorChar));", "-            File pkgInfoClass = new File(pkgBinDir, \"package-info.class\");", "+            final File pkgInfoClass = new File(pkgBinDir, \"package-info.class\");", "-            OutputStream os = new FileOutputStream(pkgInfoClass);", "+            final OutputStream os = new FileOutputStream(pkgInfoClass);", "-                byte[] name = pkg.getBytes(\"UTF-8\");", "-                int length = name.length + /* \"/package-info\" */ 13;", "+                final byte[] name = pkg.getBytes(\"UTF-8\");", "+                final int length = name.length + /* \"/package-info\" */ 13;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60adffede5b901a2a51ee935d1e6cbf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "      private void doSourceAndPackageNames(         Commandline toExecute,         Vector<String> packagesToDoc,         Vector<SourceFile> sourceFilesToDoc,         boolean useExternalFile,         File    tmpList,         BufferedWriter srcListWriter)         throws IOException", "signatureAfterChange": "      private void doSourceAndPackageNames(         final Commandline toExecute,         final Vector<String> packagesToDoc,         final Vector<SourceFile> sourceFilesToDoc,         final boolean useExternalFile,         final File    tmpList,         final BufferedWriter srcListWriter)         throws IOException", "diff": ["-        Commandline toExecute,", "-        Vector<String> packagesToDoc,", "-        Vector<SourceFile> sourceFilesToDoc,", "-        boolean useExternalFile,", "-        File    tmpList,", "-        BufferedWriter srcListWriter)", "+        final Commandline toExecute,", "+        final Vector<String> packagesToDoc,", "+        final Vector<SourceFile> sourceFilesToDoc,", "+        final boolean useExternalFile,", "+        final File    tmpList,", "+        final BufferedWriter srcListWriter)", "-        for (String packageName : packagesToDoc) {", "+        for (final String packageName : packagesToDoc) {", "-        for (SourceFile sf : sourceFilesToDoc) {", "-            String sourceFileName = sf.getFile().getAbsolutePath();", "+        for (final SourceFile sf : sourceFilesToDoc) {", "+            final String sourceFileName = sf.getFile().getAbsolutePath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d836a3f2c3024ee66e7d84bc47e43559", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "     private static int launch(JUnitTest t, String[] methods, boolean haltError,                               boolean stackfilter, boolean haltFail,                               boolean showOut, boolean outputToFormat,                               boolean logTestListenerEvents)", "signatureAfterChange": "     private static int launch(final JUnitTest t, final String[] methods, final boolean haltError,                               final boolean stackfilter, final boolean haltFail,                               final boolean showOut, final boolean outputToFormat,                               final boolean logTestListenerEvents)", "diff": ["-    private static int launch(JUnitTest t, String[] methods, boolean haltError,", "-                              boolean stackfilter, boolean haltFail,", "-                              boolean showOut, boolean outputToFormat,", "-                              boolean logTestListenerEvents) {", "-        JUnitTestRunner runner =", "+    private static int launch(final JUnitTest t, final String[] methods, final boolean haltError,", "+                              final boolean stackfilter, final boolean haltFail,", "+                              final boolean showOut, final boolean outputToFormat,", "+                              final boolean logTestListenerEvents) {", "+        final JUnitTestRunner runner ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eab12bfc9bd623a28afcff9884776819", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Main.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private static void printTargets(Project project, Vector<String> names,                                      Vector<String> descriptions, Vector<Enumeration<String>> dependencies,                                      String heading,                                      int maxlen)", "signatureAfterChange": "     private static void printTargets(final Project project, final Vector<String> names,                                      final Vector<String> descriptions, final Vector<Enumeration<String>> dependencies,                                      final String heading,                                      final int maxlen)", "diff": ["-    private static void printTargets(Project project, Vector<String> names,", "-                                     Vector<String> descriptions, Vector<Enumeration<String>> dependencies,", "-                                     String heading,", "-                                     int maxlen) {", "+    private static void printTargets(final Project project, final Vector<String> names,", "+                                     final Vector<String> descriptions, final Vector<Enumeration<String>> dependencies,", "+                                     final String heading,", "+                                     final int maxlen) {", "-        String lSep = System.getProperty(\"line.separator\");", "+        final String lSep = System.getProperty(\"line.separator\");", "-        StringBuilder msg = new StringBuilder();", "+        final StringBuilder msg = new StringBuilder();", "-                Enumeration<String> deps = dependencies.elementAt(i);", "+                final Enumeration<String> deps = dependencies.elementAt(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef525a90c745662d6536df2fce96b174", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/filterreaders/src/main/org/apache/tools/ant/filters/ClassConstants.java", "commitBeforeChange": "741e2cbbd7529bd6fd62a8885e4fe2ba91a55ee7", "commitAfterChange": "4f2c7ee53989389d3c8d85f259b811ed962a46f1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final int read() throws IOException", "signatureAfterChange": "     public final int read() throws IOException", "diff": ["-            String clazz = readFully();", "+            final String clazz = readFully();", "-                byte[] bytes = clazz.getBytes();", "-                StringBuffer sb = new StringBuffer();", "-                ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "-                ClassParser parser = new ClassParser(bis, \"\");", "-                JavaClass javaClass = parser.parse();", "-                Field[] fields = javaClass.getFields();", "+                final byte[] bytes = clazz.getBytes();", "+                final StringBuffer sb = new StringBuffer();", "+                final ByteArrayInputStream bis = new ByteArrayInputStream(bytes);", "+                final ClassParser parser = new ClassParser(bis, \"\");", "+                final JavaClass javaClass = parser.parse();", "+                final Field[] fields = javaClass.getFields();", "-                    Field field = fields[i];", "+                    final Field field = fields[i];", "-                        ConstantValue cv = field.getConstantValue();", "+                        final ConstantValue cv = field.getConstantValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6276beb3f4736c3b509e7fa507ae6a0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void tarResource(Resource r, TarOutputStream tOut, String vPath,                                TarFileSet tarFileSet)         throws IOException", "signatureAfterChange": "     protected void tarResource(final Resource r, final TarOutputStream tOut, String vPath,                                final TarFileSet tarFileSet)         throws IOException", "diff": ["-    protected void tarResource(Resource r, TarOutputStream tOut, String vPath,", "-                               TarFileSet tarFileSet)", "+    protected void tarResource(final Resource r, final TarOutputStream tOut, String vPath,", "+                               final TarFileSet tarFileSet)", "-            String fullpath = tarFileSet.getFullpath(this.getProject());", "+            final String fullpath = tarFileSet.getFullpath(this.getProject());", "-                int l = vPath.length();", "+                final int l = vPath.length();", "-        TarEntry te = new TarEntry(vPath, preserveLeadingSlashes);", "+        final TarEntry te = new TarEntry(vPath, preserveLeadingSlashes);", "-            ArchiveResource ar = (ArchiveResource) r;", "+            final ArchiveResource ar = (ArchiveResource) r;", "-                TarResource tr = (TarResource) r;", "+                final TarResource tr = (TarResource) r;", "-                byte[] buffer = new byte[BUFFER_SIZE];", "+                final byte[] buffer = new byte[BUFFER_SIZE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7b45970d840fb6c7fa53372e1b34392", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "     private void logVmExit(FormatterElement[] feArray, JUnitTest test,                            String message, String testCase)", "signatureAfterChange": "     private void logVmExit(final FormatterElement[] feArray, final JUnitTest test,                            final String message, final String testCase)", "diff": ["-    private void logVmExit(FormatterElement[] feArray, JUnitTest test,", "-                           String message, String testCase) {", "+    private void logVmExit(final FormatterElement[] feArray, final JUnitTest test,", "+                           final String message, final String testCase) {", "-                FormatterElement fe = feArray[i];", "+                final FormatterElement fe = feArray[i];", "-                    JUnitTaskMirror.JUnitResultFormatterMirror formatter =", "+                    final JUnitTaskMirror.JUnitResultFormatterMirror formatter =", "-                        File outFile = getOutput(fe, test);", "+                        final File outFile = getOutput(fe, test);", "-                            } catch (IOException e) {", "+                            } catch (final IOException e) {", "-                JUnitTaskMirror.SummaryJUnitResultFormatterMirror f =", "+                final JUnitTaskMirror.SummaryJUnitResultFormatterMirror f ="]}]}