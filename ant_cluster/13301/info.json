{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d212eca1975ba30faa4ec2689d900655", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30562ee7cc83abd3684b8c80b6d0177e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/role/DefaultRoleManager.java", "commitBeforeChange": "a14b034437745cfc4066f88bfcaa7923c574ae1d", "commitAfterChange": "bf5d72445b3750fb9e34c150abb7b6372324b85d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void addNameRoleMapping( final String name, final String role )         throws IllegalArgumentException", "signatureAfterChange": "     public void addRole( final RoleInfo role ) throws RoleException", "diff": ["-    public void addNameRoleMapping( final String name, final String role )", "-        throws IllegalArgumentException", "-        final String oldRole = (String)m_names.get( name );", "+     */", "+    public void addRole( final RoleInfo role ) throws RoleException", "+    {", "+        // Check for duplicate role names", "+        final String roleName = role.getName();", "+        RoleInfo oldRole = (RoleInfo)m_nameMap.get( roleName );", "-            final String message = REZ.getString( \"duplicate-name.error\", oldRole );", "-            throw new IllegalArgumentException( message );", "+            final String message = REZ.getString( \"duplicate-role.error\", roleName );", "+            throw new RoleException( message );", "-        final String oldName = (String)m_roles.get( role );", "-        if( null != oldName && !oldName.equals( name ) )", "+        // Check for duplicate shorthand names", "+        final String shorthand = role.getShorthand();", "+        if( shorthand != null )", "-            final String message = REZ.getString( \"duplicate-role.error\", oldName );", "-            throw new IllegalArgumentException( message );", "+            oldRole = (RoleInfo)m_shorthandMap.get( shorthand );", "+            if( null != oldRole && !oldRole.equals( role ) )", "+            {", "+                final String message = REZ.getString( \"duplicate-shorthand.error\", shorthand );", "+                throw new RoleException( message );", "+            }", "-        m_names.put( name, role );", "-        m_roles.put( role, name );", "+        // Check for duplicate types", "+        final Class roleType = role.getType();", "+        if( roleType != null )", "+        {", "+            oldRole = (RoleInfo)m_typeMap.get( roleType );", "+            if( null != oldRole && !oldRole.equals( role ) )", "+            {", "+                final String message = REZ.getString( \"duplicate-type.error\", roleType.getName() );", "+                throw new RoleException( message );", "+            }", "+        }", "+", "+        // Add the role to the maps", "+        m_nameMap.put( roleName, role );", "+        if( shorthand != null )", "+        {", "+            m_shorthandMap.put( shorthand, role );", "+        }", "+        if( roleType != null )", "+        {", "+            m_typeMap.put( roleType, role );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310f454443e25eb215289ebe2f216f4c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/deployer/DefaultDeployer.java", "commitBeforeChange": "e7ab62bc9179b392804835d02155e43d3d2cf5d6", "commitAfterChange": "2e6e170fb375181f4438e1de44808c7adab508a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public DefaultDeployer()", "signatureAfterChange": "     public void handleType( final Deployment deployment,                             final TypeDefinition typeDef )         throws Exception", "diff": ["-     */", "-    public DefaultDeployer()", "-    {", "-        m_fileDeployers = new HashMap();", "-    }", "+    public void handleType( final Deployment deployment,", "+                            final TypeDefinition typeDef )", "+        throws Exception", "+        final String typeName = typeDef.getName();", "+        final String roleShorthand = typeDef.getRole();", "+", "+        final String className = typeDef.getClassname();", "+        if( null == className )", "+            final String message = REZ.getString( \"typedef.no-classname.error\" );", "+        if( typeDef instanceof ConverterDefinition )", "+            // Validate the definition", "+            final ConverterDefinition converterDef = (ConverterDefinition)typeDef;", "+            final String srcClass = converterDef.getSourceType();", "+            final String destClass = converterDef.getDestinationType();", "+            if( null == srcClass )", "+            {", "+                final String message = REZ.getString( \"converterdef.no-source.error\" );", "+                throw new DeploymentException( message );", "+            }", "+            if( null == destClass )", "+            {", "+                final String message = REZ.getString( \"converterdef.no-destination.error\" );", "+                throw new DeploymentException( message );", "+            }", "+", "+            // Deploy the converter", "+            handleConverter( deployment, className, srcClass, destClass );", "+        }", "+        else", "+        {", "+            // Validate the definition", "+            if( null == roleShorthand )", "+            {", "+                final String message = REZ.getString( \"typedef.no-role.error\" );", "+                throw new DeploymentException( message );", "+            }", "+            else if( null == typeName )", "+            {", "+                final String message = REZ.getString( \"typedef.no-name.error\" );", "+                throw new DeploymentException( message );", "+            }", "+", "+            // Deploy general-purpose type", "+            handleType( deployment, roleShorthand, typeName, className );", "+        }", "+    }"]}]}