{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d607633fcc8ab081a299ba20c96e891a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "025d664646aeda89935e4e27232448e6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/main/org/apache/ant/core/xml/XMLProjectParser.java", "commitBeforeChange": "a48208f6cf8cf80ef1e144305ff8dfe0958599d5", "commitAfterChange": "c2e518039b65dc5b8c9c31f9f78b2d72ea8db2d1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public void startElement(String uri, String localName, String qualifiedName,                                  Attributes attributes) throws SAXParseException", "signatureAfterChange": "         public void startElement(String uri, String localName, String qualifiedName,                                  Attributes attributes) throws SAXParseException", "diff": ["-         */", "-        public void startElement(String uri, String localName, String qualifiedName,", "-                                 Attributes attributes) throws SAXParseException {", "-            // everything within a task is a task element", "-            TaskElementHandler taskElementHandler ", "-                = new TaskElementHandler(getXMLReader(), this, getLocator(), ", "-                                         attributes, qualifiedName);", "-            task.addTaskElement(taskElementHandler.getTaskElement());                                         ", "-        }", "+            TaskElementHandler nestedHandler ", "+                                                 attributes, qualifiedName);", "+            taskElement.addTaskElement(nestedHandler.getTaskElement());                                         "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "542aa0f9ab147af1278bfc3f8e449d3a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "cd8ef18058976a150028b5f88a409cdfaf279dc2", "commitAfterChange": "e2ca50cce1c1d277d17d23a0d4682e48310ded10", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        char fromDirSep = onWindows ? '\\\\' : '/';", "-        char toDirSep   = dirSep.charAt(0);", "+//        char fromDirSep = onWindows ? '\\\\' : '/';", "+//        char toDirSep   = dirSep.charAt(0);", "+", "+        String fromDirSep = onWindows ? \"\\\\\" : \"/\";", "+", "-            elem = elem.replace( fromDirSep, toDirSep );", "+//            elem = elem.replace( fromDirSep, toDirSep );", "-            rslt.append( elem );", "+//            rslt.append( elem );", "+", "+            StringTokenizer stDirectory = new StringTokenizer(elem, fromDirSep, true);", "+            String token = null;", "+", "+            while ( stDirectory.hasMoreTokens() ) {", "+              token = stDirectory.nextToken();", "+", "+              if (fromDirSep.equals(token)) {", "+                rslt.append( dirSep ); ", "+              }", "+              else {", "+                rslt.append( token );", "+              }", "+            }"]}]}