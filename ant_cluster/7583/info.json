{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed7bd024adced79abc391143e2278de6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f8b6f03dcc210a13623dfdf34c2a201", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/ANTLR.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private int run( final Commandline command )         throws TaskException", "signatureAfterChange": "     private void run( final Commandline command )         throws TaskException", "diff": ["-    private int run( final Commandline command )", "+    private void run( final Commandline command )", "-        if( workingdir != null )", "-        {", "-            exe.setWorkingDirectory( workingdir );", "-        }", "+        exe.setWorkingDirectory( workingdir );", "-        try", "-        {", "-            return exe.execute( getContext() );", "-        }", "-        catch( IOException e )", "-        {", "-            throw new TaskException( \"Error\", e );", "-        }", "+        exe.execute( getContext() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a2d84f64cec5fa9232731eff381490", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/taskdefs/Java.java", "commitBeforeChange": "c0573282fdd6a28d444aa7036647b81bcd848e8d", "commitAfterChange": "77333ba49f11effbaa8d033e3bdce55b9eb35cf7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private int run( final Commandline command )         throws TaskException", "signatureAfterChange": "     private void run( final Commandline command )         throws TaskException", "diff": ["-    private int run( final Commandline command )", "+    private void run( final Commandline command )", "-", "-        if( m_dir == null )", "-        {", "-            m_dir = getBaseDirectory();", "-        }", "-        else if( !m_dir.exists() || !m_dir.isDirectory() )", "-        {", "-            final String message = m_dir.getAbsolutePath() + \" is not a valid directory\";", "-            throw new TaskException( message );", "-        }", "-", "-        return exe.execute( getContext() );", "+        exe.execute( getContext() );"]}]}