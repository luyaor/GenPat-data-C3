{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fc40c8309f10cd8a0fcd012def21725", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d4e0c8a85f49a6b74dbc548e681e560", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/command/NewElementDlg.java", "commitBeforeChange": "53ddc59eccb9ca398bcc74db1fc1577bde5b7d45", "commitAfterChange": "4c0c12c0f70aab990d7aefae3ab82d92d24c7cef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setList(String[] list)", "signatureAfterChange": "     public void setLists(String[] coreElements, String[] optionalElements)", "diff": ["-    public void setList(String[] list) {", "-        if (list == null || list.length == 0) {", "+    public void setLists(String[] coreElements, String[] optionalElements) {", "+", "+        // Are there any items to display?", "+        if ( (coreElements == null || coreElements.length == 0) &&", "+             (optionalElements == null || optionalElements.length == 0 ) ) {", "+", "+            // Hide the list", "+            _optionalButton.setVisible(false);", "-            _elementList.setListData(list);", "+            ", "+            // Are there any core elements?", "+            if (coreElements == null) {", "+                _coreElements = new ArrayList();", "+                ", "+                // Display the optional elements", "+                _optionalButton.setSelected(true);", "+                _optionalButton.setVisible(false);", "+            } else {", "+                // Create a sorted list of the core elements", "+                List temp = Collections.fill(null, coreElements);", "+                java.util.Collections.sort(temp);", "+                _coreElements = temp;", "+            }", "+            ", "+            // Are there any optional elements?", "+            if (optionalElements == null) {", "+                _optionalElements = new ArrayList();", "+                ", "+                // Display the core elements", "+                _optionalButton.setSelected(false);", "+                _optionalButton.setVisible(false);", "+            } else {", "+                // Create a sorted list of the optional elements", "+                List temp = Collections.fill(null, optionalElements);", "+                java.util.Collections.sort(temp);", "+                _optionalElements = temp;", "+            }", "+            ", "+            // Are the lists the same?", "+            if (_optionalElements.containsAll(_coreElements) &&", "+                _coreElements.containsAll(_optionalElements) ) {", "+                    ", "+                // Hide the button", "+                _optionalButton.setVisible(false);", "+            }", "+        enableButtons();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babe61a278a7b186a25d86acdd12605c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javadoc.java", "commitBeforeChange": "2907030ab0cfd24783426d24bf06f7bbee19995f", "commitAfterChange": "b879b27c7274e2a54ad6a6e2a886311cb51ce771", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 68, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if (version)", "+        if (version && doclet == null)", "-        if (author)", "+        if (author && doclet == null)", "+            if (serialwarn)                     ", "+                argList.addElement(\"-serialwarn\");", "-                argList.addElement(\"-doclet\");", "-                argList.addElement(doclet);", "-            }", "-            if (docletpath != null) {", "-                argList.addElement(\"-docletpath\");", "-                argList.addElement(docletpath);", "-            }", "+                if (doclet.getName() == null) {", "+                    throw new BuildException(\"The doclet name must be specified.\");", "+                }", "+                else {                ", "+                    argList.addElement(\"-doclet\");", "+                    argList.addElement(doclet.getName());", "+                    if (doclet.getPath() != null) {", "+                        argList.addElement(\"-docletpath\");", "+                        argList.addElement(doclet.getPath());", "+                    }", "+                    for (Enumeration e = doclet.getParams(); e.hasMoreElements();) {", "+                        DocletParam param = (DocletParam)e.nextElement();", "+                        if (param.getName() == null) {", "+                            throw new BuildException(\"Doclet parameters must have a name\");", "+                        }", "+                        ", "+                        argList.addElement(param.getName());", "+                        if (param.getValue() != null) {", "+                            argList.addElement(param.getValue());", "+                        }", "+                    }                        ", "+                }", "+            } ", "+            if (charset != null) {", "+                argList.addElement(\"-charset\");", "+                argList.addElement(charset);", "+            }"]}]}