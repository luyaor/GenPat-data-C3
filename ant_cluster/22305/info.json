{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2c9ff756a4457670db1d9f3540ad2f4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c38ed4bd4566b197c35c4981b38ad43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/image/Scale.java", "commitBeforeChange": "b92ed0aefc86a7ccc53d5e2ce5724ba5fedf5fa7", "commitAfterChange": "a0406cafe6a8019f43e573018ad38f7095db879f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public PlanarImage performScale(PlanarImage image)", "signatureAfterChange": "      public PlanarImage performScale(PlanarImage image)", "diff": ["+", "-        if (keep_proportions) {", "+", "+        if(\"width\".equals(proportions)){", "+        else if(\"height\".equals(proportions)){", "+            x_fl = y_fl;", "+        }", "+        else if(\"fit\".equals(proportions)){", "+            x_fl = y_fl = Math.min(x_fl,y_fl);", "+        }", "+        else if(\"cover\".equals(proportions)){", "+            x_fl = y_fl = Math.max(x_fl,y_fl);", "+        }", "+", "-        log(\"\\tScaling to \" + x_fl + \"% x \" + y_fl + \"%\");", "+        log(\"\\tScaling to \" + (x_fl*100) + \"% x \" + (y_fl*100)+ \"%\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ce7e3c776d213c244dc9fea3f7e45c2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "32b8cce516421a912ced3f568167107df3332710", "commitAfterChange": "e3b6d1fe768d87352d3d0348638911045fc4668e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void doReplace(File f, int options)         throws IOException", "signatureAfterChange": "     protected void doReplace(File f, int options)         throws IOException", "diff": ["-                    if (! res.equals(line))", "+                    if (! res.equals(line)) {", "+                    }", "-                if (! res.equals(buf))", "+                if (! res.equals(buf)) {", "+                }", "-            try { if (r != null) r.close(); }", "+            try { if (r != null) {", "+                    r.close();", "+                  } }", "-            try { if (w != null) r.close(); }", "+            try { if (w != null) {", "+                    r.close();", "+                  } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e87d872a2a4e57ff819fef7c89234bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipOutputStream.java", "commitBeforeChange": "c35a248ef870c9f98b7eda39ba9e3653775aea82", "commitAfterChange": "4653e638dd921ac96a2e8583851b121e46477ae9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void write(byte[] b, int offset, int length) throws IOException", "signatureAfterChange": "     public void write(byte[] b, int offset, int length) throws IOException", "diff": ["-            super.write(b, offset, length);", "+            if (length > 0) {", "+                if (!def.finished()) {", "+                    def.setInput(b, offset, length);", "+                    while (!def.needsInput()) {", "+                        deflate();", "+                    }", "+                }", "+            }", "-            out.write(b, offset, length);", "+            writeOut(b, offset, length);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd08e272764171ecb3d52603d6a0f153", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jdepend/JDependTask.java", "commitBeforeChange": "32b8cce516421a912ced3f568167107df3332710", "commitAfterChange": "e3b6d1fe768d87352d3d0348638911045fc4668e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        if(\"text\".equals(format))", "+        if(\"text\".equals(format)) {", "-        else", "-        if(\"xml\".equals(format))", "+        } else", "+        if(\"xml\".equals(format)) {", "+        }", "-        if(_jvm!=null)", "+        if(_jvm!=null) {", "+        }", "-        if (getSourcespath() == null)", "+        if (getSourcespath() == null) {", "+        }", "-            if  (getHaltonerror())", "+            if  (getHaltonerror()) {", "-            else", "+            } else {", "+            }"]}]}