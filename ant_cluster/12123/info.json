{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0ef3b48b619cc0cf0b4001237ae5e87", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e2be6b04deaad4e253471ba00861fca", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/net/FTPTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setUp()", "signatureAfterChange": "       @Before     public void setUp()", "diff": ["-    }", "+", "+    @Before", "-        configureProject(\"src/etc/testcases/taskdefs/optional/net/ftp.xml\");", "-        getProject().executeTarget(\"setup\");", "-        tmpDir = getProject().getProperty(\"tmp.dir\");", "+        buildRule.configureProject(\"src/etc/testcases/taskdefs/optional/net/ftp.xml\");", "+        Project project = buildRule.getProject();", "+        project.executeTarget(\"setup\");", "+        tmpDir = project.getProperty(\"tmp.dir\");", "-        ftpFileSep = getProject().getProperty(\"ftp.filesep\");", "+        ftpFileSep = project.getProperty(\"ftp.filesep\");", "-        myFTPTask.setProject(getProject());", "+        myFTPTask.setProject(project);", "-        String remoteHost = getProject().getProperty(\"ftp.host\");", "-        int port = Integer.parseInt(getProject().getProperty(\"ftp.port\"));", "-        String remoteUser = getProject().getProperty(\"ftp.user\");", "-        String password = getProject().getProperty(\"ftp.password\");", "+        String remoteHost = project.getProperty(\"ftp.host\");", "+        int port = Integer.parseInt(project.getProperty(\"ftp.port\"));", "+        String remoteUser = project.getProperty(\"ftp.user\");", "+        String password = project.getProperty(\"ftp.password\");", "+        boolean connectionSucceeded = false;", "+            connectionSucceeded = true;", "-            connectionSucceeded = false;", "-            loginSuceeded = false;", "-            System.out.println(\"could not connect to host \" + remoteHost + \" on port \" + port);", "+            loginFailureMessage = \"could not connect to host \" + remoteHost + \" on port \" + port;", "+                loginSuceeded = true;", "-                loginSuceeded = false;", "-                System.out.println(\"could not log on to \" + remoteHost + \" as user \" + remoteUser);", "+                loginFailureMessage = \"could not log on to \" + remoteHost + \" as user \" + remoteUser;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c01955c562cab7898fc683a56de48a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Ant.java", "commitBeforeChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "commitAfterChange": "c09d386575d236bd32d3d4ce78f716e90b5bbdfa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void initializeProject()", "signatureAfterChange": "     private void initializeProject()", "diff": ["-        // set user-defined or all properties from calling project", "-        Hashtable prop1;", "-        if (inheritAll) {", "-           prop1 = project.getProperties();", "-        } else {", "-           prop1 = project.getUserProperties();", "+        // set user-defined", "+        Hashtable props = getProject().getUserProperties();", "+        e = props.keys();", "+        while (e.hasMoreElements()) {", "+            String arg = e.nextElement().toString();", "+            String value = props.get(arg).toString();", "+            newProject.setUserProperty(arg, value);", "+        }", "+        if (!inheritAll) {", "-        }", "-        e = prop1.keys();", "-        while (e.hasMoreElements()) {", "-            String arg = (String) e.nextElement();", "-            if (\"basedir\".equals(arg) || \"ant.file\".equals(arg)) {", "-                // basedir and ant.file get special treatment in execute()", "-                continue;", "-            }", "+        } else {", "+            // set all properties from calling project", "-            String value = (String) prop1.get(arg);", "-            if (inheritAll){", "-               newProject.setProperty(arg, value);", "-            } else {", "-               newProject.setUserProperty(arg, value);", "+            props = getProject().getProperties();", "+            e = props.keys();", "+            while (e.hasMoreElements()) {", "+                String arg = e.nextElement().toString();", "+                if (\"basedir\".equals(arg) || \"ant.file\".equals(arg)) {", "+                    // basedir and ant.file get special treatment in execute()", "+                    continue;", "+                }", "+", "+                String value = props.get(arg).toString();", "+                if (newProject.getProperty(arg) == null){", "+                    // no user property", "+                    newProject.setProperty(arg, value);", "+                }"]}]}