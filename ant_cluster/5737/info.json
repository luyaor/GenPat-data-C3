{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "149af0e76d00c2b9034dd9829a023442", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39699b1963a88209451031c155bfff2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "a376c57ae162bb14f507c677767dfd8e6b3e7139", "commitAfterChange": "ab9f91736afcdd65e4ca1da6c627f4df71f5289a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private static String[] getProcEnvCommand()", "signatureAfterChange": "      private static String[] getProcEnvCommand()", "diff": ["-        if ( (new Os(\"os/2\")).eval() ) {", "+        if ( Os.isFamily(\"os/2\") ) {", "-        else if ( (new Os(\"windows\")).eval() ) {", "+        else if ( Os.isFamily(\"windows\") ) {", "-        else if ( (new Os(\"unix\")).eval() ) {", "+        else if ( Os.isFamily(\"unix\") ) {", "+        } ", "+        else if ( Os.isFamily(\"netware\") ) {", "+            String[] cmd = {\"env\"};", "+            return cmd;", "-            // MAC OS 9 and previous, Netware", "+            // MAC OS 9 and previous"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbee2da1d02fb5260db0b5e64021638e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/core/ActionManager.java", "commitBeforeChange": "113069f80d96fff735116abb27b70951799106fc", "commitAfterChange": "9996345251656eb38c5326fa7e5f394bc5f43882", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Command getActionCommand(String actionID, AppContext context)", "signatureAfterChange": "     public Command getActionCommand(String actionID,                                     AppContext context,                                     EventObject event)", "diff": ["-    public Command getActionCommand(String actionID, AppContext context) {", "+    public Command getActionCommand(String actionID,", "+                                    AppContext context,", "+                                    EventObject event) {", "-                    Constructor ctor =", "+                    Constructor ctor = ", "-                    // XXX log me.", "-                    ex.printStackTrace();", "+                    try {", "+                        Constructor ctor = clazz.getConstructor(", "+                            COMMAND_CTOR_PARAMS_WITH_EVENT);", "+                        retval = (Command) ctor.newInstance(", "+                            new Object[] { context, event });", "+                    }", "+                    catch (Exception ex2) {", "+                        // XXX log me.", "+                        ex.printStackTrace();", "+                    }"]}]}