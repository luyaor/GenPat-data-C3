{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcc09e8c4ea08368fb9351c42a0d2d74", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "377cf046310788de025a9c29a988731e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/todo/types/SysProperties.java", "commitBeforeChange": "7513ab1efa12321b3e2014764bfb23d16b425caf", "commitAfterChange": "299ea801bc1031e308bfe07a22e51edd1b972872", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public String[] getJavaVariables()         throws TaskException", "signatureAfterChange": "     public static String[] getJavaVariables( final EnvironmentData environment )", "diff": ["-    public String[] getJavaVariables()", "-        String props[] = toNativeFormat( super.getVariables() );", "-        for( int i = 0; i < props.length; i++ )", "-        {", "-            props[ i ] = \"-D\" + props[ i ];", "-        }", "-        return props;", "+     */", "+    public static String[] getJavaVariables( final EnvironmentData environment )", "+        return getJavaVariables( environment.getVariables() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb82467e04c47b873791c46e5a4cbc1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 41, "signatureBeforeChange": "     private void mergeExtraFields(ZipExtraField[] f, boolean local)         throws ZipException", "signatureAfterChange": "     private void mergeExtraFields(ZipExtraField[] f, boolean local)         throws ZipException", "diff": ["-            for (int i = 0; i < f.length; i++) {", "+            for (ZipExtraField element : f) {", "-                if (f[i] instanceof UnparseableExtraFieldData) {", "+                if (element instanceof UnparseableExtraFieldData) {", "-                    existing = getExtraField(f[i].getHeaderId());", "+                    existing = getExtraField(element.getHeaderId());", "-                    addExtraField(f[i]);", "+                    addExtraField(element);", "-                        byte[] b = f[i].getLocalFileDataData();", "+                        byte[] b = element.getLocalFileDataData();", "-                        byte[] b = f[i].getCentralDirectoryData();", "+                        byte[] b = element.getCentralDirectoryData();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0ae2d6c0085b7988f9113981476ab08", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/ZipEntry.java", "commitBeforeChange": "aa43e37a025cdf54b8914b8283e57419a253ed59", "commitAfterChange": "dee95e3acc5154aee03ff5f91f9a56426ae79f3f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void setExtraFields(ZipExtraField[] fields)", "signatureAfterChange": "     public void setExtraFields(ZipExtraField[] fields)", "diff": ["-        extraFields = new LinkedHashMap();", "-        for (int i = 0; i < fields.length; i++) {", "-            if (fields[i] instanceof UnparseableExtraFieldData) {", "-                unparseableExtra = (UnparseableExtraFieldData) fields[i];", "+        extraFields = new LinkedHashMap<ZipShort, ZipExtraField>();", "+        for (ZipExtraField field : fields) {", "+            if (field instanceof UnparseableExtraFieldData) {", "+                unparseableExtra = (UnparseableExtraFieldData) field;", "-                extraFields.put(fields[i].getHeaderId(), fields[i]);", "+                extraFields.put(field.getHeaderId(), field);"]}]}