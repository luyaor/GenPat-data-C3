{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3593b40b195fd3f8e1e1d002b43ea49b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388c19c5c8c667a245e46c8a3f2ee2e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "commitAfterChange": "f3939727d9e11188d266beed7e9dfa8e2fd0bc9a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public String fromURI(String uri)", "signatureAfterChange": "     public String fromURI(String uri)", "diff": ["-        if (!uri.startsWith(\"file:\")) {", "-            throw new IllegalArgumentException(\"Can only handle file: URIs\");", "-        }", "-        if (uri.startsWith(\"file://\")) {", "-            uri = uri.substring(7);", "-        } else {", "-            uri = uri.substring(5);", "-        }", "+        String path = Locator.fromURI(uri);", "-        uri = uri.replace('/', File.separatorChar);", "-        if (Os.isFamily(\"dos\") && uri.startsWith(\"\\\\\") && uri.length() > 2", "-            && Character.isLetter(uri.charAt(1)) && uri.charAt(2) == ':') {", "-            uri = uri.substring(1);", "-        }", "-", "-        StringBuffer sb = new StringBuffer();", "-        CharacterIterator iter = new StringCharacterIterator(uri);", "-        for (char c = iter.first(); c != CharacterIterator.DONE;", "-             c = iter.next()) {", "-            if (c == '%') {", "-                char c1 = iter.next();", "-                if (c1 != CharacterIterator.DONE) {", "-                    int i1 = Character.digit(c1, 16);", "-                    char c2 = iter.next();", "-                    if (c2 != CharacterIterator.DONE) {", "-                        int i2 = Character.digit(c2, 16);", "-                        sb.append((char) ((i1 << 4) + i2));", "-                    }", "-                }", "-            } else {", "-                sb.append(c);", "-            }", "-        }", "-", "-        String path = sb.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d43433083d8edc21aff7b8a40c036b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "e22d7c50937ee1d155f91bfd635673bd41017e76", "commitAfterChange": "95fa304e14c4cc49d84e089ea13107a35b68f8d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (dest == null && outFile == null) {", "+        if (dest == null) {", "-                \"Dest and/or the OutFile attribute \" +", "-                \"must be specified\");", "+                \"Dest attribute must be specified\");", "-        if (dest != null && dest.exists() && !dest.isDirectory()) {", "+        if (dest.exists() && !dest.isDirectory()) {", "-        }", "-", "-        if (verbose && outFile == null) {", "-            throw new BuildException(", "-                \"Verbose can be set only when OutFile is \" +", "-                \"specified\");", "-        try {", "-            if (outFile != null) {", "-                if (outFile.isDirectory()) {", "-                    throw new BuildException(\"Outfile \" + outFile", "-                        + \" must not be a directory.\");", "-                }", "-                if (!outFile.exists()) {", "-                    File parent = new File(outFile.getParent());", "-                    if (!parent.exists()) {", "-                        if (!parent.mkdirs()) {", "-                            throw new BuildException(\"Unable to create \"", "-                                + outFile);", "-                        }", "-                    }", "-                }", "-                fw = new FileWriter(outFile);", "-                bw = new BufferedWriter(fw);", "-                pw = new PrintWriter(bw, true);", "-            }", "-        } catch (IOException ioe) {", "-            throw new BuildException(ioe.getMessage(), location);", "-        }", "-                // get all the files in the descriptor directory", "-                DirectoryScanner ds = super.getDirectoryScanner(source);", "-", "-                String[] files = ds.getIncludedFiles();", "-                for (int i = 0; i < files.length; ++i) {", "-                    File file = new File(source, files[i]);", "-                    expandFile(fileUtils, file, dest);", "-                }", "-            }", "-            else {", "+                throw new BuildException(\"Src must not be a directory.\" +", "+                    \" Use nested filesets instead.\", location);", "+            } else {", "-        if (pw != null) {", "-            pw.close();", "-        }", "-        if (bw != null) {", "-            try {", "-                bw.close();", "-            } catch (IOException ioe1) {}", "-        }", "-        if (fw != null) {", "-            try {", "-                fw.close();", "-            } catch (IOException ioe1) {", "-                //Oh, well!  We did our best", "-            }", "-        }"]}]}