{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa68749d11cddc5ed85604478ece28ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0505f91fea16d53c03800e53fcca1f91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "cbef49e344857a1cf7c35737b67d3c732f901710", "commitAfterChange": "b839a3ed0f3a0ad050579c33f2ede3e8b8542fea", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     private Class getClassFromStream(InputStream stream, String classname)                  throws IOException", "signatureAfterChange": "     private Class getClassFromStream(InputStream stream, String classname)                  throws IOException", "diff": ["-        byte[] buffer = new byte[1024];", "+        byte[] buffer = new byte[BUFFER_SIZE];", "-        while ((bytesRead = stream.read(buffer, 0, 1024)) != -1) {", "+        while ((bytesRead = stream.read(buffer, 0, BUFFER_SIZE)) != -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28304e9c8808e3c9146e90619f774fa3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroDef.java", "commitBeforeChange": "e211cf05f7df29b7531bd7d1525f7fe8bd8d33e0", "commitAfterChange": "c7ec7ad1a4aa4f52693b354d08914e07e0bcd2a8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public Object create(Project project)", "signatureAfterChange": "         public Object create(Project project)", "diff": ["-            ((MacroInstance) o).setTemplate(template);", "+            ((MacroInstance) o).setMacroDef(macroDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a31329474e9b034da5582939b5139e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/modules/basic/AntCall.java", "commitBeforeChange": "1ec0e4c4e6484e6f946b095227f11a77ccdc579d", "commitAfterChange": "620c60381636e5d33fe55e18b1e6165360a1f492", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "       public void compose( final ComponentManager componentManager )         throws ComponentException", "signatureAfterChange": "       public void compose( final ComponentManager componentManager )         throws ComponentException", "diff": ["-        m_projectEngine = (ProjectEngine)componentManager.", "-            lookup( \"org.apache.ant.project.ProjectEngine\" );", "+        m_projectEngine = (ProjectManager)componentManager.", "+            lookup( \"org.apache.myrmidon.components.manager.ProjectManager\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cb60cf54efb421462b182eea19eb81", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Length.java", "commitBeforeChange": "5676d56eef22ec56b5f237570ec26efe1b02691d", "commitAfterChange": "66adfb896ce70338b71ba466c356a32a668113f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void handleResources(Handler h)", "signatureAfterChange": "      private void handleResources(Handler h)", "diff": ["-                log(r + \" does not exist\", Project.MSG_ERR);", "-            } else if (r.isDirectory()) {", "-                log(r + \" is a directory; length unspecified\",", "-                    Project.MSG_ERR);", "-            } else {", "-                h.handle(r);", "+                log(r + \" does not exist\", Project.MSG_WARN);", "+            if (r.isDirectory()) {", "+                log(r + \" is a directory; length may not be meaningful\", Project.MSG_WARN);", "+            }", "+            h.handle(r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c23382c2697197438cdec1066d19930", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/launch/Locator.java", "commitBeforeChange": "22891078b14f9a248e413f7b310441bb0f60d192", "commitAfterChange": "27c1d843ca0b5f75261d97603772e77b36ce0bdd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static URL[] getLocationURLs(File location,                                         final String[] extensions)          throws MalformedURLException", "signatureAfterChange": "     public static URL[] getLocationURLs(File location,                                         final String[] extensions)          throws MalformedURLException", "diff": ["-                         * encodeUri converts characters like ' ' and '#' to %DD", "+                         * encodeURI converts characters like ' ' and '#' to %DD", "-                        urls[0] = new URL(encodeUri(location.toURL().toString()));", "+                        urls[0] = new URL(encodeURI(location.toURL().toString()));", "-                urls[i] = new URL(encodeUri(matches[i].toURL().toString()));", "+                urls[i] = new URL(encodeURI(matches[i].toURL().toString()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b756de3354b68ba047cb01bcae0f4f16", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/embeddor/DefaultEmbeddor.java", "commitBeforeChange": "4b271a99de084498864bf54271e7836bf47d828f", "commitAfterChange": "45fd8b03391ec3cccd1da7e67782e6c0f9317491", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private Parameters createDefaultParameters()", "signatureAfterChange": "     private Parameters createDefaultParameters()", "diff": ["-        defaults.setParameter( ProjectManager.ROLE,", "-                               \"org.apache.myrmidon.components.manager.DefaultProjectManager\" );", "+        defaults.setParameter( Workspace.ROLE,", "+                               \"org.apache.myrmidon.components.workspace.DefaultWorkspace\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2bb9fea1474b44a8a94e92603e55519", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java", "commitBeforeChange": "feb7ea550f616abf040604172390fa25b8046e4f", "commitAfterChange": "36d84a61dc70dd6bbc8ee25d5261de5f2874e837", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void sendFileToRemote( File localFile,                                    InputStream in,                                    OutputStream out ) throws IOException", "signatureAfterChange": "      private void sendFileToRemote(File localFile,                                    InputStream in,                                    OutputStream out) throws IOException", "diff": ["-    private void sendFileToRemote( File localFile,", "+    private void sendFileToRemote(File localFile,", "-                                   OutputStream out ) throws IOException {", "+                                   OutputStream out) throws IOException {", "-        out.write( command.getBytes() );", "+        out.write(command.getBytes());", "-        byte[] buf = new byte[1024];", "+        byte[] buf = new byte[BUFFER_SIZE];", "-            log( \"Sending: \" + localFile.getName() + \" : \" + ", "-                 localFile.length());", "+            log(\"Sending: \" + localFile.getName() + \" : \" + localFile.length());", "-                if (len <= 0) break;", "+                if (len <= 0) {", "+                    break;", "+                }", "-            logStats( startTime, endTime, totalLength );", "+            logStats(startTime, endTime, totalLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbebac9eed628d13bcddcf9c1bf3bfa4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/convert/DefaultConverterEngine.java", "commitBeforeChange": "c6a798ef68e969311121bbe219367ffcc01bc621", "commitAfterChange": "bba92ec2234c85ea1ff3ec3e4e2bb45adaaf3197", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public ConverterRegistry getConverterRegistry()", "signatureAfterChange": "      public ConverterRegistry getInfoRegistry()", "diff": ["-    public ConverterRegistry getConverterRegistry()", "+    public ConverterRegistry getInfoRegistry()", "-        return m_converterRegistry;", "+        return m_infoRegistry;"]}]}