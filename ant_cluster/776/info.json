{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f242d7207541a49cfb60e1cf72076a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f76639304d8f2de64ee0c34ba56fb14", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/main/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                {OutputStream.class, String.class} );", "+            {OutputStream.class, String.class} );", "-                new Class[]{String[].class} );", "-            Boolean ok = ( Boolean )doRmic.invoke( rmic,", "-                ( new Object[]{cmd.getArguments()} ) );", "+                                         new Class[]{String[].class} );", "+            Boolean ok = (Boolean)doRmic.invoke( rmic,", "+                                                 ( new Object[]{cmd.getArguments()} ) );", "-            throw new BuildException( \"Cannot use SUN rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME or CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use SUN rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME or CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting SUN rmic: \", ex );", "+                throw new TaskException( \"Error starting SUN rmic: \", ex );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3212cf0d6243c0f1d853a1927570b29", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/todo/org/apache/tools/ant/taskdefs/rmic/SunRmic.java", "commitBeforeChange": "f73917168fc78f993f09f5f3eccbc4d663018c40", "commitAfterChange": "b8c50342cacdaa5bc7e3e4e72eb8351da5824716", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public boolean execute()         throws BuildException", "signatureAfterChange": "      public boolean execute()         throws TaskException", "diff": ["-        throws BuildException", "+        throws TaskException", "-                {OutputStream.class, String.class} );", "+            {OutputStream.class, String.class} );", "-                new Class[]{String[].class} );", "-            Boolean ok = ( Boolean )doRmic.invoke( rmic,", "-                ( new Object[]{cmd.getArguments()} ) );", "+                                         new Class[]{String[].class} );", "+            Boolean ok = (Boolean)doRmic.invoke( rmic,", "+                                                 ( new Object[]{cmd.getArguments()} ) );", "-            throw new BuildException( \"Cannot use SUN rmic, as it is not available\" +", "-                \" A common solution is to set the environment variable\" +", "-                \" JAVA_HOME or CLASSPATH.\" );", "+            throw new TaskException( \"Cannot use SUN rmic, as it is not available\" +", "+                                     \" A common solution is to set the environment variable\" +", "+                                     \" JAVA_HOME or CLASSPATH.\" );", "-            if( ex instanceof BuildException )", "+            if( ex instanceof TaskException )", "-                throw ( BuildException )ex;", "+                throw (TaskException)ex;", "-                throw new BuildException( \"Error starting SUN rmic: \", ex );", "+                throw new TaskException( \"Error starting SUN rmic: \", ex );", "-                throw new BuildException( \"Error\", e );", "+                throw new TaskException( \"Error\", e );"]}]}