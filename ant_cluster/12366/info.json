{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0b1b456066438f1617429ad3b00af9b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36280be8f158843918e18013c9324b88", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "99a45aab1888ca73f7a2fc6fa97d7c76ee763fb0", "commitAfterChange": "70f7d48dbdb48256e509f99eac4b569046b255c9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected void handleChildren(Object parent,                                    RuntimeConfigurable parentWrapper)          throws BuildException", "signatureAfterChange": "      protected void handleChildren(Object parent,                                    RuntimeConfigurable parentWrapper)          throws BuildException", "diff": ["+", "-", "+        ", "-            UnknownElement child = (UnknownElement) children.elementAt(i);", "-            Object realChild = ih.createElement(project, parent, child.getTag());", "+            UnknownElement child = (UnknownElement) children.elementAt(i);", "+            Object realChild = null;", "+            if (parent instanceof TaskContainer) {", "+                realChild = makeTask(child, childWrapper);", "+                ((TaskContainer) parent).addTask((Task) realChild);", "+            } else {", "+                ih.createElement(project, parent, child.getTag());", "+            }", "+", "+            if (realChild instanceof Task) {", "+                ((Task) realChild).setRuntimeConfigurableWrapper(childWrapper);", "+            }", "+            if (realChild instanceof Task) {", "+                ((Task) realChild).maybeConfigure();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ab366ab8787a2a0431c28cd7d09692", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "7aaf095c51dcb4b22dd8a7aec2a63676a73ad8e0", "commitAfterChange": "6d54725ac9d2fc606d5b4d8ec6574b648399f68d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "signatureAfterChange": "     public Object createElement(Project project, Object parent,          String elementName) throws BuildException", "diff": ["+        if (nc == null && parent instanceof DynamicConfigurator) {", "+            DynamicConfigurator dc = (DynamicConfigurator) parent;", "+            Object nestedElement = dc.createDynamicElement(elementName);", "+            if (nestedElement != null) {", "+                if (nestedElement instanceof ProjectComponent) {", "+                    ((ProjectComponent) nestedElement).setProject(project);", "+                }", "+                return nestedElement;", "+            }", "+        }"]}]}