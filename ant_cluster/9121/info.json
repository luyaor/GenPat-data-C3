{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aeff03715d68c076037292f47faaee4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfac248054b2096fc6c4ee36cf9de4ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/frontend/org/apache/ant/cli/Commandline.java", "commitBeforeChange": "752f49d5b18f9743f8e4a6dbdc8065d240d9c97a", "commitAfterChange": "da4e1a3aa99899d6aecc6d14c2a7498fa51647aa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private void argBuildFile(String url) throws FrontendException", "signatureAfterChange": "     private void argBuild(String buildSource)", "diff": ["-    private void argBuildFile(String url) throws FrontendException {", "-        try {", "-            if (url.indexOf(\":\") == -1) {", "-                // We convert any hash characters to their URL escape.", "-                buildFileURL = InitUtils.getFileURL(new File(url));", "-            } else {", "-                buildFileURL = new URL(url);", "-            }", "-        } catch (MalformedURLException e) {", "-            throw new FrontendException(\"Build file is not valid\", e);", "-        }", "+    private void argBuild(String buildSource) {", "+        this.buildSource = buildSource;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7be90bb50fe588e30bb654bb4072b37", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/zip/AbstractUnicodeExtraField.java", "commitBeforeChange": "def28d00cf1f2f0bb0bd90b58e3786511355ee33", "commitAfterChange": "8a183a492de7fee445cada4a051a3d41a85bbdb4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected AbstractUnicodeExtraField(String name, String zipEncoding)", "signatureAfterChange": "     protected AbstractUnicodeExtraField(String text, String zipEncoding)", "diff": ["-    protected AbstractUnicodeExtraField(String name, String zipEncoding) {", "+    protected AbstractUnicodeExtraField(String text, String zipEncoding) {", "+        this(text, ZipEncodingHelper.encodeName(text, zipEncoding));", "+    }", "-        byte[] filename = ZipEncodingHelper.encodeName(name, zipEncoding);", "-", "-        crc32.update(filename);", "-            unicodeName = name.getBytes(\"UTF-8\");"]}]}