{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd2e25b95be9d4b156609df7c3a23ffd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "592c87f79ccc1dbc8f1e0b0ac87cd0a7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteJava.java", "commitBeforeChange": "39c3dd318a9c8ea27e44ee5bdd2db1d735f5c793", "commitAfterChange": "c234e7e18342b186b88cd7ddd65d3cc8c9946fd1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute(Project project) throws BuildException", "signatureAfterChange": "      public void execute(Project project) throws BuildException", "diff": ["+", "+        AntClassLoader loader = null; ", "-                AntClassLoader loader ", "-                    = new AntClassLoader(project.getSystemLoader(), project, classpath, false);", "+                loader = new AntClassLoader(project.getSystemLoader(), project, classpath, false);", "+                loader.setThreadContextLoader();", "+            if (loader != null) {", "+                loader.resetThreadContextLoader();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ed54e5ceb36b8149e56f39e9386782", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/antlib/src/main/org/apache/tools/ant/SymbolTable.java", "commitBeforeChange": "1d2784e6d5429505b3b420e342992c22cd5373a6", "commitAfterChange": "6252354506953777f5b921b8746a54e7d317475a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tRole(Class roleClz, Class adapterClz)", "signatureAfterChange": "         Role(Class roleClz, Class adapterClz)", "diff": ["-\t */", "-\tRole(Class roleClz, Class adapterClz) {", "-\t    interfaceMethod = validInterface(roleClz);", "-\t    adapterVerifier = validAdapter(adapterClz, interfaceMethod);", "-\t}", "+         */", "+        Role(Class roleClz, Class adapterClz) {", "+            interfaceMethod = validInterface(roleClz);", "+            adapterFactory = checkClass(adapterClz);", "+            adapterVerifier = validAdapter(adapterClz, interfaceMethod);", "+        }"]}]}