{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9e44bee05a7ced4262dba5547f35b65", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439ff568c157b1f0d3d131e69be22b91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReader.java", "commitBeforeChange": "48a9017850dc1a302304a057ad05640175a2dd15", "commitAfterChange": "626c685b1dd04334dcdebcdaa39f5f438a51be2e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void processMessage(String message)", "signatureAfterChange": "     protected void processMessage(String message)", "diff": ["-        if (message == null){", "+        if (message == null) {", "-        if (message.startsWith(MessageIds.PROPS_START)){", "+        if (message.startsWith(MessageIds.PROPS_START)) {", "-                ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));", "-                sysprops = (Properties)ois.readObject();", "-            } catch (Exception e){", "+                sysprops = (Properties) SocketUtil.deserialize(bytes);", "+                notifyTestSystemProperties(sysprops);", "+            } catch (Exception e) {", "-            notifyTestSystemProperties(sysprops);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9834d5009901b163c9bf784d8e250f4f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "e76559e2f3bc99467718b186f5d5d89315b70777", "commitAfterChange": "b2b649d12de2918643d1aa910f194df3be345df9", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": "          public LocalProperties copy()", "signatureAfterChange": "          public LocalProperties copy()", "diff": ["-            LocalPropertyStack copy = new LocalPropertyStack();", "+            LocalPropertyStack copy = new LocalPropertyStack(null);", "-            for (int i = 0; i < stack.size(); ++i) {", "-                copy.stack.add(((ArrayList) stack.get(i)).clone());", "+            for (int i = 0; i < getStack().size(); ++i) {", "+                copy.stack.add(((ArrayList) getStack().get(i)).clone());", "-            for (Iterator i = props.entrySet().iterator(); i.hasNext();) {", "+            for (Iterator i = getProps().entrySet().iterator(); i.hasNext();) {"]}]}