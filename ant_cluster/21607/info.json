{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f3e3243d4ae32fc1be77a5ec5d71847", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10daa395135f6d7f12bbef2f14a041a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ClasspathUtils.java", "commitBeforeChange": "052d19e952abee3ced0456b7412ec51fe8baa51b", "commitAfterChange": "b404a282b25f5b01eeb1646495eb2f36f675ebe9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static ClassLoader getUniqueClassLoaderForPath(Path path,                                                           boolean reverseLoader)", "signatureAfterChange": "     public static ClassLoader getUniqueClassLoaderForPath(         Project p,         Path path,         boolean reverseLoader)", "diff": ["-    public static ClassLoader getUniqueClassLoaderForPath(Path path,", "-                                                          boolean reverseLoader) {", "-        ClassLoader cl = null;", "-        Project p = path.getProject();", "+    public static ClassLoader getUniqueClassLoaderForPath(", "+        Project p,", "+        Path path,", "+        boolean reverseLoader) {", "-        AntClassLoader acl = p.createClassLoader(Path.systemClasspath);", "+        AntClassLoader acl = p.createClassLoader(path != null ", "+                                                 ? path : Path.systemClasspath);", "-        return cl;        ", "+        return acl;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ad4dfb4c3e15c63c9365d537e2c3e7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/FileUtils.java", "commitBeforeChange": "4c77f5ea1b6a6cc567e71244e1955e355dafb19e", "commitAfterChange": "3ca199cab8dfc0449835efa717423d54f1ee1ad6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "diff": ["-        File resolvedParent = new File(parent.getCanonicalPath());", "-        File toTest = new File(resolvedParent, name);", "+        File toTest = new File(((parent == null)", "+            ? null : parent.getCanonicalPath()), name);"]}]}