{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bd375080462dc45d967d994a7c6ab29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01597d4066adbf00d5f30bf800e7644e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "584538b2d51bc33323178552ca508b0ee109fc33", "commitAfterChange": "165b7dfa13d2cc15ed344294540b2ff3d68bca98", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void write(int cc) throws IOException", "signatureAfterChange": "     public void write(int cc) throws IOException", "diff": ["+", "+        BufferInfo bufferInfo = getBufferInfo();", "-            if (!skip) {", "-                processBuffer();", "+            if (!bufferInfo.skip) {", "+                processBuffer(bufferInfo.buffer);", "-            ByteArrayOutputStream buffer = getBuffer();", "-            buffer.write(cc);", "-            if (buffer.size() > MAX_SIZE) {", "-                processBuffer();", "+            bufferInfo.buffer.write(cc);", "+            if (bufferInfo.buffer.size() > MAX_SIZE) {", "+                processBuffer(bufferInfo.buffer);", "-       // XXX: This isn't threadsafe. Consider two threads logging", "-       // Hello\\r\\n", "-       // and", "-       // There\\r\\n", "-       // at the same time, with the two '\\r's both being sent before", "-       // either '\\n', and the '\\n's coming in the opposite order (thread-wise)", "-       // to the '\\r's - one buffer will be processed twice, and the other won't", "-       // be processed at all.", "-       skip = (c == '\\r');", "+        bufferInfo.skip = (c == '\\r');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af17f9b6c827b2cf5541aa385ddd7b5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DemuxOutputStream.java", "commitBeforeChange": "25e76768e8d8dcdc6c770d00c0659daf0c13003e", "commitAfterChange": "4ac04f30c2cdc4c0d31eaf13f797afe2aa72fea0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void write(int cc) throws IOException", "signatureAfterChange": "     public void write(int cc) throws IOException", "diff": ["-        if ((c == '\\n') || (c == '\\r')) {", "-            if (!bufferInfo.skip) {", "-                processBuffer(bufferInfo.buffer);", "-            }", "-        } else {", "+", "+        if (c == '\\n') {", "+            // LF is always end of line (i.e. CRLF or single LF)", "-            if (bufferInfo.buffer.size() > MAX_SIZE) {", "+            processBuffer(bufferInfo.buffer);", "+        } else {", "+            if (bufferInfo.crSeen) {", "+                // CR without LF - send buffer then add char", "+            // add into buffer", "+            bufferInfo.buffer.write(cc);", "-        bufferInfo.skip = (c == '\\r');", "+        bufferInfo.crSeen = (c == '\\r');", "+        if (!bufferInfo.crSeen && bufferInfo.buffer.size() > MAX_SIZE) {", "+            processBuffer(bufferInfo.buffer);", "+        }"]}]}