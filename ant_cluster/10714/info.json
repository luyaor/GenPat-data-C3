{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21575b37a7d7aa06fa66ea580a890fec", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c93928c92779fe2ee54e84ec6d37e01", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "4dbe4dd92b5ec3dad9b357bffba330ad79d3895b", "commitAfterChange": "7f3406304a21c4bd2424f7eaee3be60edbd2bcf1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     protected Map buildMap(Resource[] fromResources, final File toDir,                            FileNameMapper mapper)", "signatureAfterChange": "     protected Map buildMap(Resource[] fromResources, final File toDir,                            FileNameMapper mapper)", "diff": ["+            for (int j = 0; j < mappedFiles.length; j++) {", "+                if (mappedFiles[j] == null) {", "+                    throw new BuildException(\"Can't copy a resource without a\"", "+                                             + \" name if the mapper doesn't\"", "+                                             + \" provide one.\");", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "523483cc3d5f7575e76634f7a716fa20", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/ResourceUtils.java", "commitBeforeChange": "4dbe4dd92b5ec3dad9b357bffba330ad79d3895b", "commitAfterChange": "7f3406304a21c4bd2424f7eaee3be60edbd2bcf1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,                                                             ResourceCollection source,                                                             FileNameMapper mapper,                                                             ResourceFactory targets,                                                             final long granularity)", "signatureAfterChange": "     public static ResourceCollection selectOutOfDateSources(ProjectComponent logTo,                                                             ResourceCollection source,                                                             FileNameMapper mapper,                                                             ResourceFactory targets,                                                             final long granularity)", "diff": ["+            for (int i = 0; i < targetnames.length; i++) {", "+                if (targetnames[i] == null) {", "+                    targetnames[i] = \"(no name)\";", "+                }", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c7811669f048a354bfcf50f2bae7c6", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Tar.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-                break;", "+            }", "+            ", "+            for (int i = 0; i < files.length; ++i) {", "+                if (tarFile.equals(new File(fs.getDir(project), files[i]))) {", "+                    throw new BuildException(\"A tar file cannot include itself\", location);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4886386c427638da0352be5afd0fa57", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "7a06ef0e04703753fb1ff2134c4cd8323e8dc3b8", "commitAfterChange": "068f7348847e10c8deca027f67e7142c559cdfa0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected boolean isUpToDate(FileScanner[] scanners, File zipFile) throws BuildException", "signatureAfterChange": "     protected boolean isUpToDate(FileScanner[] scanners, File zipFile) throws BuildException", "diff": ["+            for (int i = 0; i < files.length; ++i) {", "+                if (files[i].equals(zipFile)) {", "+                    throw new BuildException(\"A zip file cannot include itself\", location);", "+                }", "+            }", "+"]}]}