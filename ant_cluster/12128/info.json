{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "349ae8fed4f2a084c873c27bf1e0f2f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18e152a4d6cf69cc924c6accce81010f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "7e9b213aeca0d5eb9af1c31222f9d40b94256ada", "commitAfterChange": "24179ae7ddddc2dbb4470a06c592398e184da325", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["-        Vector listeners = getBuildListeners();", "-                int size = listeners.size();", "-                for (int i = 0; i < size; i++) {", "-                    BuildListener listener = (BuildListener) listeners.elementAt(i);", "+                Iterator iter = listeners.iterator();", "+                while (iter.hasNext()) {", "+                    BuildListener listener = (BuildListener) iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da979f0b9b04a8c3c6e57a39fa6d860", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/BuildEventSupport.java", "commitBeforeChange": "e0fef5cf64773a98734998b9736ded96fc8be2c7", "commitAfterChange": "81c17b6164451315e24ae774f1bed668cbca99ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void forwardEvent(BuildEvent event)", "signatureAfterChange": "     public void fireMessageLogged(ModelElement element,                                   String message, int priority)", "diff": ["-     */", "-    public void forwardEvent(BuildEvent event) {", "-        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "-            BuildListener listener = (BuildListener)i.next();", "-", "-            listener.processBuildEvent(event);", "-        }", "-    }", "+        for (Iterator i = listeners.iterator(); i.hasNext(); ) {", "+            BuildListener listener = (BuildListener)i.next();", "+            listener.messageLogged(event);", "+        }"]}]}