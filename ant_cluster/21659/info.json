{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "281955e902b54d8a960e04e33899dce5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89447aa64b587f872bd1d3b16e205028", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java", "commitBeforeChange": "b810d36e3b9d446a9cfbd00f6e0a343499e636ed", "commitAfterChange": "e8768da3a986c29fb29298458a311093462dc5e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void execute() throws BuildException", "signatureAfterChange": "      public void execute() throws BuildException", "diff": ["-        log(\"Executing: \" + cmd.toString(), Project.MSG_VERBOSE);", "+        log(RES.getString(\"task.process-cmdline.log\", cmd.toString()), Project.MSG_VERBOSE);", "-            throw new BuildException(\"Process fork failed.\", e, location);", "+            String msg = RES.getString(\"task.process-failed.error\");", "+            throw new BuildException(msg, e, location);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c27082df08a589e7024b266944bf8c8d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Execute.java", "commitBeforeChange": "69cff8fa828c6ad507c770e5726aebe83668a722", "commitAfterChange": "b6410584b65289fce8b334f40163fa2b6203479d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private void checkReturnCode( final int returnCode )         throws TaskException", "signatureAfterChange": "     private void checkReturnCode( final int returnCode )         throws TaskException", "diff": ["-            throw new TaskException( \"Unexpected return code \" + returnCode );", "-        }", "-    }", "+            final String message = REZ.getString( \"execute.bad-resultcode.error\",", "+                                                  m_command.getExecutable(),", "+                                                  new Integer(returnCode) );", "+            throw new TaskException( message );"]}]}