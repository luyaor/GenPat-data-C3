{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "792489b91a1bac71b8ccf588afca713c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "006f6958aa440c1c5dfc7e19f59e24d2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private Object createdTypedObject( final String name,                                        final Class type )         throws ConfigurationException", "signatureAfterChange": "     private Object createdTypedObject( final String name,                                        final Class type )         throws ConfigurationException", "diff": ["-        final TypeFactory factory = getTypeFactory( type );", "+        // Attempt to create the object", "+        final Object obj;", "-            return factory.create( name );", "+            final TypeFactory factory = getTypeFactory( DataType.class );", "+            obj = factory.create( name );", "+", "+        // Check the types", "+        if( ! type.isInstance( obj ) )", "+        {", "+            final String message =", "+                REZ.getString( \"mismatched-typed-object.error\", name, type.getName() );", "+            throw new ConfigurationException( message );", "+        }", "+", "+        return obj;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52504a71f5b93b50143cb7461496b404", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/AbstractContainerTask.java", "commitBeforeChange": "bcd2dfcf11671f2c237daf0b2c7dd240d62d829a", "commitAfterChange": "28a812e0cfaba7e946d865eee09dc9a35bfdbb63", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected final Object newInstance( final Class roleType, final String typeName )         throws TaskException", "signatureAfterChange": "     protected final Object newInstance( final Class roleType, final String typeName )         throws TaskException", "diff": ["-        final TypeFactory typeFactory = getTypeFactory( roleType );", "+            final RoleInfo role = getRoleByType( roleType );", "+            final TypeFactory typeFactory = getTypeFactory( role.getName() );", "-        catch( final TypeException te )", "+        catch( Exception e )", "-                REZ.getString( \"container.no-create-type.error\",", "-                               roleType.getName(),", "-                               typeName );", "-            throw new TaskException( message, te );", "+                REZ.getString( \"container.no-create-type-for-type.error\", roleType.getName(), typeName );", "+            throw new TaskException( message, e );", "+    }"]}]}