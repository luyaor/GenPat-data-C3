{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bb621ebd42eee518ad32c70092df18f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a862075cf230224ea294f80ef427607", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "52b0cf00a3282c079c433c3fbf8675be7277c85c", "commitAfterChange": "04c60dbd61cbc88bc7ae0ef7feb2907664d6ebb5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "+                DirectoryScanner ds = null;", "+                try {", "+                    ds = fs.getDirectoryScanner(getProject());", "+                } catch (BuildException e) {", "+                    if (failonerror ", "+                        || !e.getMessage().endsWith(\" not found.\")) {", "+                        throw e;", "+                    } else {", "+                        log(\"Warning: \" + e.getMessage());", "+                        continue;", "+                    }", "+                }", "+                "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "711c1e2678c6f7b56f54f6a2f858fb31", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "43f3df1bca1b297ad7db39237ae8978c0ceee182", "commitAfterChange": "c35f045b9055bb478a9ccdb8189af883adce0ee8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        // make sure we don't have an illegal set of options", "-        validateAttributes();", "+        // make sure we don't have an illegal set of options", "+            try {", "+        validateAttributes();", "+            } catch (BuildException e) {", "+                if (failonerror", "+                    || !getMessage(e)", "+                    .equals(MSG_WHEN_COPYING_EMPTY_RC_TO_FILE)) {", "+                    throw e;", "+                } else {", "+                    log(\"Warning: \" + getMessage(e), Project.MSG_ERR);", "+                    return;", "+                }", "+            }", "+"]}]}