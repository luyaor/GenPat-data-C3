{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bc277b86e2187e03e8745aa5b1aaaee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a38922e347e30b0c514114ff86260868", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "39cc83c340b7843e7b5ae98b0ba3cd48cb8690af", "commitAfterChange": "f18d3adfa8305e32fe9af31480247eec7e73e857", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-            for (int taskPosition = 0;", "-                 taskPosition < children.size();", "-                 ++taskPosition) {", "+            for (int taskPosition = 0; taskPosition < children.size(); ++taskPosition) {", "-                    RuntimeConfigurable r = (RuntimeConfigurable) o;", "-                    r.maybeConfigure(project);", "+                    ((RuntimeConfigurable) o).maybeConfigure(project);", "-            project.log(this, \"Skipped because property '\"", "-                        + project.replaceProperties(ifCondition)", "-                        + \"' not set.\", Project.MSG_VERBOSE);", "+            project.log(this, \"Skipped because property '\" + project.replaceProperties(ifCondition)", "+                    + \"' not set.\", Project.MSG_VERBOSE);", "-                        + project.replaceProperties(unlessCondition)", "-                        + \"' set.\", Project.MSG_VERBOSE);", "+                    + project.replaceProperties(unlessCondition) + \"' set.\", Project.MSG_VERBOSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb3511d43381b2d43f36df3816e4d867", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/JavacTest.java", "commitBeforeChange": "8e410f0f18af59a1726e34166b0633dc97723c41", "commitAfterChange": "763ad7ae9b53d425515a9222f04dfc7d08ce6acf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testCompilerAttribute()", "signatureAfterChange": "     public void testCompilerAttribute()", "diff": ["-        assertTrue(\"default value\",", "-                   \"javac1.1\".equals(compiler)", "-                   || \"javac1.2\".equals(compiler)", "-                   || \"javac1.3\".equals(compiler)", "-                   || \"javac1.4\".equals(compiler)", "-                   || \"javac1.5\".equals(compiler)", "-                   || \"classic\".equals(compiler));", "+        if (System.getProperty(\"build.compiler\") != null) {", "+            assertEquals(System.getProperty(\"build.compiler\"),", "+                         compiler);", "+        } else {", "+            assertTrue(\"default value\",", "+                       \"javac1.1\".equals(compiler)", "+                       || \"javac1.2\".equals(compiler)", "+                       || \"javac1.3\".equals(compiler)", "+                       || \"javac1.4\".equals(compiler)", "+                       || \"javac1.5\".equals(compiler)", "+                       || \"classic\".equals(compiler));", "+        }", "-        project.setNewProperty(\"build.compiler\", \"jikes\");", "+        // setUserProperty to override system properties", "+        project.setUserProperty(\"build.compiler\", \"jikes\");"]}]}