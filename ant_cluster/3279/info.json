{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5226a4d886aa86a73e491b6375ec3505", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52fe15474f8875302564adf38d484b27", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/converter/DefaultMasterConverter.java", "commitBeforeChange": "165ec8163b70ab6415e2ca549bd5d2a621a8e39b", "commitAfterChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object convert( Class destination, final Object original, final Context context )         throws ConverterException", "signatureAfterChange": "     public Object convert( Class destination, final Object original, final Context context )         throws ConverterException", "diff": ["-            final Converter converter = (Converter)m_selector.select( name );", "+            final Converter converter = (Converter)m_factory.create( name );", "-        catch( final ComponentException ce )", "+        catch( final TypeException te )", "-                                          \"converter definition\" );", "+                                          \"converter definition\", te );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8edb9fd836c29a1f8f7de42aa8fb5305", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/executor/DefaultExecutor.java", "commitBeforeChange": "165ec8163b70ab6415e2ca549bd5d2a621a8e39b", "commitAfterChange": "d23b08a302496937c4d1d08e31431ece313de2b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private Task createTask( final String name )         throws TaskException", "signatureAfterChange": "      private Task createTask( final String name )         throws TaskException", "diff": ["-            return (Task)m_selector.select( name );", "+            return (Task)m_factory.create( name );", "-        catch( final ComponentException ce )", "+        catch( final TypeException te )", "-            throw new TaskException( \"Unable to create task \" + name, ce );", "+            throw new TaskException( \"Unable to create task \" + name, te );"]}]}