{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b994dd732f95ac0cc1feb1427946b2eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a61d00387415778c3746c3c811c682f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/condition/AntVersion.java", "commitBeforeChange": "11eb66160fc05b622bc3b8b68926b7e1fb5bc089", "commitAfterChange": "55ada84e847507662f8e884bca47fe2354d1f42f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          private DeweyDecimal getVersion()", "signatureAfterChange": "              private DeweyDecimal getVersion()", "diff": ["-    ", "+        ", "-        String versionString = p.getProperty(\"ant.version\");", "-        String v = versionString.substring(versionString.indexOf(\"Ant version\")+12, ", "-                versionString.indexOf(\"Ant version\")+17);", "-        char[] cs = v.toCharArray();", "-        int end = cs.length;", "-        for (int i = cs.length; i > 0; i--) {", "-            if (!Character.isLetter(cs[i-1])) {", "-                end = i;", "+        char[] versionString = p.getProperty(\"ant.version\").toCharArray();", "+        StringBuffer sb = new StringBuffer();", "+        boolean foundFirstDigit = false;", "+        for (int i=0; i<versionString.length; i++) {", "+            if (Character.isDigit(versionString[i])) {", "+                sb.append(versionString[i]);", "+                foundFirstDigit = true;", "+            }", "+            if  (versionString[i]=='.' && foundFirstDigit) {", "+                sb.append(versionString[i]);", "+            }", "+            if (Character.isLetter(versionString[i]) && foundFirstDigit) {", "-        v = v.substring(0, end);", "-        return new DeweyDecimal(v);", "+        return new DeweyDecimal(sb.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34db0115dbdeafa5a7030498d0369647", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/FixCRLF.java", "commitBeforeChange": "7e8bb3f17d5621a4aaa176ff4eb8f1aa9d1777af", "commitAfterChange": "286537d1f81a29fff0b913229d7750604265ea71", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          protected void nextLine()             throws BuildException", "signatureAfterChange": "          protected void nextLine()             throws BuildException", "diff": ["-            int ch;", "+            int ch = -1;", "+            line.setLength(0);", "-                int linelen;", "-", "-                reader.mark(INBUFLEN);", "-                line = reader.readLine();", "-                if (line == null) {", "-                    // Eof has been reached", "-                    linelen = 0;", "-                }", "-                else {", "-                    linelen = line.length();", "-                }", "-                ", "-                ", "-                // Find the EOL character(s)", "-", "-                reader.reset();", "-", "-                // an IOException will be thrown", "-                reader.skip((long)linelen);", "-                reader.mark(INBUFLEN);", "+                while (ch != -1 && ch != '\\r' && ch != '\\n') {", "+                    line.append((char) ch);", "+                    ch = reader.read();", "+                }", "+                ", "+                if (ch == -1 && line.length() == 0) {", "+                    // Eof has been reached", "+                    reachedEof = true;", "+                    return;", "+                }", "+                ", "-                // Reset the position of the file reader", "-                reader.reset();", "-                reader.skip((long)eolcount);", "-", "-                if (line != null && eolcount == 0) {", "-                    int i = linelen;", "-                    while (--i >= 0 && line.charAt(i) == CTRLZ) {}", "-                    if (i < linelen - 1) {", "+                if (eolcount == 0) {", "+                    int i = line.length();", "+                    while (--i >= 0 && line.charAt(i) == CTRLZ) {", "+                        // keep searching for the first ^Z", "+                    }", "+                    if (i < line.length() - 1) {", "-                        line = i < 0 ? null : line.substring(0, i + 1);", "+                        if (i < 0) {", "+                            line.setLength(0);", "+                            reachedEof = true;", "+                        } else {", "+                            line.setLength(i + 1);", "+                        }"]}]}