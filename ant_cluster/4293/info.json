{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06e36564e1c75fd67c08f4aadec534de", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf5e1f02bd900e5778c45bb4bf353d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Jikes.java", "commitBeforeChange": "5a75c735358493a5eba4c56fcd696dfeda47e8df", "commitAfterChange": "82e6aad2041eedda98525856f6ab515986772593", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected void compile(String[] args)", "signatureAfterChange": "     protected void compile(String[] args)", "diff": ["-                Process jikes = Runtime.getRuntime().exec(commandArray);", "-                BufferedReader reader = new BufferedReader(new InputStreamReader(jikes.getInputStream()));", "-                jop.parseOutput(reader);", "+                Execute exe = new Execute(jop);", "+                exe.setAntRun(project);", "+                exe.setWorkingDirectory(project.getBaseDir());", "+                exe.setCommandline(commandArray);", "+                exe.execute();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66b503db40cb9999e34e6daaf4a50844", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/StringResource.java", "commitBeforeChange": "98b17accfd073616b2d8be14d455e90362786e94", "commitAfterChange": "de1642bdb74c54168ca4b9d1f76249a6748dc058", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public synchronized InputStream getInputStream() throws IOException", "signatureAfterChange": "     public synchronized InputStream getInputStream() throws IOException", "diff": ["-        //I can't get my head around this; is encoding treatment needed here?", "-        return", "-            //new oata.util.ReaderInputStream(new InputStreamReader(", "-            new ByteArrayInputStream(getContent().getBytes());", "-            //, encoding), encoding);", "+        String content = getContent();", "+        if (content == null) {", "+            throw new IllegalStateException(\"unset string value\");", "+        }", "+        return new ByteArrayInputStream(encoding == null", "+                ? content.getBytes() : content.getBytes(encoding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a1c2c1abadb1292eb7e3ae34413d74", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/input/DefaultInputHandler.java", "commitBeforeChange": "50b046504d483f70f07b3627ef4259a24a655931", "commitAfterChange": "ea98aac2fa3f7a6b7bae5d66dc179f438cc235ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void handleInput(InputRequest request) throws BuildException", "signatureAfterChange": "     public void handleInput(InputRequest request) throws BuildException", "diff": ["-        DataInputStream in = null;", "+        BufferedReader r = null;", "-            in =", "-                new DataInputStream(new KeepAliveInputStream(getInputStream()));", "+            r = new BufferedReader(new InputStreamReader(getInputStream()));", "-                    String input = in.readLine();", "+                    String input = r.readLine();", "-            if (in != null) {", "+            if (r != null) {", "-                    in.close();", "+                    r.close();"]}]}