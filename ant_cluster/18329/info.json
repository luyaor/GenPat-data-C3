{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8ab26f375ab7aa2e9456c3d64a88576", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d324ad2c34c187347218a85c3772d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/PathConvert.java", "commitBeforeChange": "6956c66566157fff1f9a95e15aaae1a6949e76eb", "commitAfterChange": "eb442aa3a45fbd7af68adce9a326a0ff34817fa8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-", "-                    FileSet fs = (FileSet) obj;", "-", "-                    path.addFileset(fs);", "+                    path.addFileset((FileSet) obj);", "-                    DirSet ds = (DirSet) obj;", "-", "-                    path.addDirset(ds);", "+                    path.addDirset((DirSet) obj);", "-                    FileList fl = (FileList) obj;", "-", "-                    path.addFilelist(fl);", "-", "+                    path.addFilelist((FileList) obj);", "-                         + \"path, fileset, dirset, or \"", "-                         + \"filelist.\");", "+                         + \"path, fileset, dirset, or filelist.\");", "-", "-", "-                String elem = elems[i];", "-", "-                elem = mapElement(elem); // Apply the path prefix map", "+                String elem = mapElement(elems[i]); // Apply the path prefix map", "-", "-                String token = null;", "-                    token = stDirectory.nextToken();", "-", "-                    if (fromDirSep.equals(token)) {", "-                        rslt.append(dirSep);", "-                    } else {", "-                        rslt.append(token);", "-                    }", "+                    String token = stDirectory.nextToken();", "+                    rslt.append(fromDirSep.equals(token) ? dirSep : token);", "-", "-            String value = rslt.toString();", "-            if (setonempty) {", "+            if (setonempty || rslt.length() > 0) {", "+                String value = rslt.toString();", "-            } else {", "-                if (rslt.length() > 0) {", "-                    log(\"Set property \" + property + \" = \" + value,", "-                        Project.MSG_VERBOSE);", "-                    getProject().setNewProperty(property, value);", "-                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd91d9b608e62c084fcba6f0eef9257", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/XmlProperty.java", "commitBeforeChange": "0b3cd9d4fe4d689c6d71ab504414d6ac12b1cbca", "commitAfterChange": "422f63ab870fc467aebc0746cb87df8d7691d440", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       void addNodeRecursively(org.w3c.dom.Node node, String prefix, int index)", "signatureAfterChange": "       void addNodeRecursively(org.w3c.dom.Node node, String prefix)", "diff": ["-    void addNodeRecursively(org.w3c.dom.Node node, String prefix, int index) {", "+    void addNodeRecursively(org.w3c.dom.Node node, String prefix) {", "-                String attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \"(\" + attributeNode.getNodeName() + \")\";", "+                String attributeName;", "+                ", "+                if(collapseAttributes){", "+                  attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \".\" + attributeNode.getNodeName();", "+                }", "+                else{", "+                  attributeName = prefix + (prefix.trim().equals(\"\")?\"\":\".\") + node.getNodeName() + \"(\" + attributeNode.getNodeName() + \")\";", "+\t\t}              ", "+\t\t  ", "-                if (index == 0) {", "-                    project.setNewProperty(prefix, nodeText);", "-                }", "-", "-                project.setNewProperty(prefix + \"[\" + String.valueOf(index) + \"]\", nodeText);", "+                 project.setNewProperty(prefix, nodeText);", "-            org.w3c.dom.NodeList nodeChildren = node.getChildNodes();", "+            org.w3c.dom.NodeList nodeChildren = node.getChildNodes();", "-            StringBuffer childList = new StringBuffer();", "-", "-                if (i != 0) {", "-                    childList.append(\",\");", "-                }", "-                childList.append(node.getNodeName() + \"[\" + String.valueOf(index) + \"]\");", "-                addNodeRecursively(nodeChildren.item(i), prefix, i);", "+                addNodeRecursively(nodeChildren.item(i), prefix);", "-", "-            project.setNewProperty(prefix + \"[]\", childList.toString());", "-"]}]}