{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d1444b35a7a60a71aa95c654052218a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4c113f5623122c469ebfeac2c97b5f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecuteWatchdogTest.java", "commitBeforeChange": "54f065d579b85ed81f57595b811ad11cfd10d4e8", "commitAfterChange": "0c3b95004dbd3f77079acf3701d18029cc05daeb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testTimeOut() throws Exception", "signatureAfterChange": " \tpublic void testTimeOut() throws Exception", "diff": ["-\t\tassertTrue(\"elapse time is less than timeout value\", elapsed > TIME_OUT);", "-\t\tassertTrue(\"elapse time is greater than run value\", elapsed < TIME_OUT*2);", "+\t\tassertTrue(\"elapse time of \"+elapsed+\" ms is less than timeout value of \"+TIME_OUT_TEST+\" ms\", elapsed >= TIME_OUT_TEST);", "+\t\tassertTrue(\"elapse time of \"+elapsed+\" ms is greater than run value of \"+(TIME_OUT*2)+\" ms\", elapsed < TIME_OUT*2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0486fae7a1bdd78f7227a72a75c65f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/CompilerAdapterFactory.java", "commitBeforeChange": "6a2d05b7a8541f09b4ac41d92d54ce3cc80e2036", "commitAfterChange": "55811ba73b5aed3169e1d003a069a4f83f161d1d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "signatureAfterChange": "     public static CompilerAdapter getCompiler(String compilerType, Task task)          throws BuildException", "diff": ["-            if (Project.getJavaVersion() == Project.JAVA_1_4) {", "-                 isClassicCompilerSupported = false;", "+            if (JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_4)) {", "+                isClassicCompilerSupported = false;", "-                    compilerType.equalsIgnoreCase(\"javac1.1\") ||", "-                    compilerType.equalsIgnoreCase(\"javac1.2\")) {", "+                compilerType.equalsIgnoreCase(\"javac1.1\") ||", "+                compilerType.equalsIgnoreCase(\"javac1.2\")) {", "-                        + \"not support the classic compiler\");", "+                                             + \"not support the classic \"", "+                                             + \"compiler\");", "-                    compilerType.equalsIgnoreCase(\"javac1.3\") ||", "-                    compilerType.equalsIgnoreCase(\"javac1.4\")) {", "+                compilerType.equalsIgnoreCase(\"javac1.3\") ||", "+                compilerType.equalsIgnoreCase(\"javac1.4\")) {", "-                                + \"classic compiler\", Project.MSG_WARN);", "+                                 + \"classic compiler\", Project.MSG_WARN);", "-                            + \"compiler;\\n\"", "-                            + \"com.sun.tools.javac.Main is not on the \" ", "-                            + \"classpath.\\n\"", "-                            + \"Perhaps JAVA_HOME does not point to the JDK\");", "+                                                 + \"compiler;\\n\"", "+                                                 + \"com.sun.tools.javac.Main \"", "+                                                 + \"is not on the \" ", "+                                                 + \"classpath.\\n\"", "+                                                 + \"Perhaps JAVA_HOME does not\"", "+                                                 + \" point to the JDK\");", "-                ", "+", "-                    compilerType.equalsIgnoreCase(\"microsoft\")) {", "+                compilerType.equalsIgnoreCase(\"microsoft\")) {", "-                    compilerType.equalsIgnoreCase(\"symantec\")) {", "+                compilerType.equalsIgnoreCase(\"symantec\")) {"]}]}