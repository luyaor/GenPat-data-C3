{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3d78d2c72f6318cb5b1754e6d2c643b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80019577c0732c85da7abfb8191f795a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/RegexpMatcherFactory.java", "commitBeforeChange": "188671d57151d360b0ecbedc38a03489c308e986", "commitAfterChange": "136c2556ccb76f1c72452d7b1318e25251455c6a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public RegexpMatcher newRegexpMatcher(Project p)         throws BuildException", "signatureAfterChange": "     public RegexpMatcher newRegexpMatcher(Project p)         throws BuildException", "diff": ["+        Throwable cause = null;", "+", "-            // ignore", "+            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);", "-            // ignore", "+            cause = orCause(cause, be, true);", "-            // ignore", "+            cause = orCause(cause, be, true);", "-        throw new BuildException(\"No supported regular expression matcher found\");", "+        throw new BuildException(\"No supported regular expression matcher found\" +", "+                (cause != null ? \": \" + cause : \"\"), cause);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa30696b68104469437cfaa9c8a9d50", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/regexp/RegexpFactory.java", "commitBeforeChange": "188671d57151d360b0ecbedc38a03489c308e986", "commitAfterChange": "136c2556ccb76f1c72452d7b1318e25251455c6a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Regexp newRegexp(Project p) throws BuildException", "signatureAfterChange": "     public Regexp newRegexp(Project p) throws BuildException", "diff": ["+        Throwable cause = null;", "+", "-            // ignore", "+            cause = orCause(cause, be, JavaEnvUtils.getJavaVersionNumber() < 14);", "-            // ignore", "+            cause = orCause(cause, be, true);", "-            // ignore", "+            cause = orCause(cause, be, true);", "-        throw new BuildException(\"No supported regular expression matcher found\");", "+        throw new BuildException(\"No supported regular expression matcher found\" +", "+                (cause != null ? \": \" + cause : \"\"), cause);"]}]}