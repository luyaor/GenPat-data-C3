{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3870b9d9cc2010ccd9d1d4908b09fad1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe8078fc97b4e42843082a774f41a7e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecTaskTest.java", "commitBeforeChange": "f0724e7b098588dd0742d5dd4adef7fef13e7eb2", "commitAfterChange": "7aff2d5b921ab730204dba2e47d936ce53c0c129", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void buildFinished(BuildEvent event)", "signatureAfterChange": "          public void buildFinished(BuildEvent event)", "diff": ["-            try {", "-                Thread.sleep((TIME_TO_WAIT) * 1000 + SECURITY_MARGIN);", "-            } catch (InterruptedException e) {", "-                System.out.println(\"my sleep was interrupted\");", "-            }", "-            // time of the build in milli seconds", "-            long elapsed = myBuild.getTimeElapsed();", "-            assertTrue(\"we waited more than the process lasted\", TIME_TO_WAIT * 1000 > elapsed);", "-            logFile = new File(logFile.getAbsolutePath());", "-            System.out.println(\"log file exists \"+ logFile.exists());", "-            assertTrue(\"log file found after spawn\", logFile.exists());", "+            buildFinished = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a046f71ed8eb40663caa6e3cc6b336bc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ExecTaskTest.java", "commitBeforeChange": "f0724e7b098588dd0742d5dd4adef7fef13e7eb2", "commitAfterChange": "7aff2d5b921ab730204dba2e47d936ce53c0c129", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testspawn()", "signatureAfterChange": "      public void testspawn()", "diff": ["+        GregorianCalendar startwait = new GregorianCalendar();", "+        while (!buildFinished) {", "+            try {", "+                Thread.sleep(10);", "+            } catch (InterruptedException e) {", "+                System.out.println(\"my sleep was interrupted\");", "+            }", "+            GregorianCalendar now = new GregorianCalendar();", "+            // security", "+            if (now.getTimeInMillis() - startwait.getTimeInMillis() > MAX_BUILD_TIME) {", "+                break;", "+            }", "+        }", "+        try {", "+            Thread.sleep((TIME_TO_WAIT) * 1000 + SECURITY_MARGIN);", "+        } catch (InterruptedException e) {", "+            System.out.println(\"my sleep was interrupted\");", "+        }", "+        // time of the build in milli seconds", "+        long elapsed = myBuild.getTimeElapsed();", "+        assertTrue(\"we waited more than the process lasted\", TIME_TO_WAIT * 1000 > elapsed);", "+        logFile = new File(logFile.getAbsolutePath());", "+        System.out.println(\"log file exists \"+ logFile.exists());", "+        assertTrue(\"log file found after spawn\", logFile.exists());"]}]}