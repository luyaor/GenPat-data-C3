{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11d9204ebb18db7dac3cc13af4b5e1b6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1e03915d525e1b337bf6f99aba91fa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "2b925503d71972d8b782eedd6cdf75711377d7b0", "commitAfterChange": "2c4faa154f069f3f69d6c3c95629409a7b8b0cc4", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      private void scandir(File dir, String vpath, boolean fast,                          String[] newfiles, LinkedList directoryNamesFollowed)", "signatureAfterChange": "     private void scandir(File dir, TokenizedPath path, boolean fast)", "diff": ["+     */", "+    private void scandir(File dir, TokenizedPath path, boolean fast) {", "+        scandir(dir, path, fast, newfiles, new LinkedList());", "-    private void scandir(File dir, String vpath, boolean fast,", "-                if (isIncluded(name)) {", "-                    accountForIncludedFile(name, file);", "-                if (isIncluded(name)) {", "-                    accountForIncludedDir(name, file, fast, children,", "-                    if (fast && couldHoldIncluded(name)) {", "-                        scandir(file, name + File.separator, fast, children,", "-                    scandir(file, name + File.separator, fast, children,", "-                            directoryNamesFollowed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0241cccf2abfed58e6ec7b4bbdb1e2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "48c3492303350febdfc637a4c4a2e681f15f1867", "commitAfterChange": "cafa34ca0878175f8c8ab1bf7fcfaba70c2b1368", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["-        } else if (!dir.exists()) {", "-            throw new BuildException(dir + \" doesn't exist.\");", "-        } else if (!dir.isDirectory()) {", "-            throw new BuildException(dir + \" is not a directory.\");", "+        String[] newfiles = dir.list();", "+        if (newfiles == null) {", "+            if (!dir.exists()) {", "+                throw new BuildException(dir + \" doesn't exist.\");", "+            } else if (!dir.isDirectory()) {", "+                throw new BuildException(dir + \" is not a directory.\");", "+            } else {", "+                throw new BuildException(\"IO error scanning directory '\"", "+                                         + dir.getAbsolutePath() + \"'\");", "+            }", "+        }", "+        scandir(dir, vpath, fast, newfiles);", "+    }", "-        }", "-        String[] newfiles = dir.list();", "-", "-        if (newfiles == null) {", "-            /*", "-             * two reasons are mentioned in the API docs for File.list", "-             * (1) dir is not a directory. This is impossible as", "-             *     we wouldn't get here in this case.", "-             * (2) an IO error occurred (why doesn't it throw an exception", "-             *     then???)", "-             */", "-            throw new BuildException(\"IO error scanning directory '\"", "-                                     + dir.getAbsolutePath() + \"'\");", "-            if (file.isDirectory()) {", "-                if (isIncluded(name)) {", "-                    accountForIncludedDir(name, file, fast);", "-                } else {", "-                    everythingIncluded = false;", "-                    dirsNotIncluded.addElement(name);", "-                    if (fast && couldHoldIncluded(name)) {", "-                        scandir(file, name + File.separator, fast);", "-                    }", "-                }", "-                if (!fast) {", "-                    scandir(file, name + File.separator, fast);", "-                }", "-            } else if (file.isFile()) {"]}]}