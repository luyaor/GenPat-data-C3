{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dbb6390836f84d553a6c943438dbed9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c6b0eb9251000d3b19fde9aab02050", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void addNestedElement(AntLibFactory factory, Reflector reflector,                                   Object element, BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void addNestedElement(AntLibFactory factory, Setter setter,                                   Object element, BuildElement model)          throws ExecutionException", "diff": ["-    private void addNestedElement(AntLibFactory factory, Reflector reflector,", "+    private void addNestedElement(AntLibFactory factory, Setter setter,", "-        Class nestedType = reflector.getType(nestedElementName);", "+        Class nestedType = setter.getType(nestedElementName);", "-            typeInstance = createTypeInstance(nestedType, factory, model);", "+            typeInstance = createTypeInstance(nestedType, factory, model, null);", "-        reflector.addElement(element, nestedElementName, typeInstance);", "+        setter.addElement(element, nestedElementName, typeInstance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "284e0ba1a75c4964220398255246c626", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/extensions/JarLibManifestTask.java", "commitBeforeChange": "d7c5961f02b7d8488333b41adcee334d540fb2cb", "commitAfterChange": "bd92e4de44f659770bc30e39f352dcc8446a1e9a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void appendLibraryList( final Attributes attributes,                                     final String listPrefix,                                     final ArrayList librarys )         throws TaskException", "signatureAfterChange": "     private void appendLibraryList( final Attributes attributes,                                     final String listPrefix,                                     final ArrayList extensions )         throws TaskException", "diff": ["-                                    final ArrayList librarys )", "+                                    final ArrayList extensions )", "-        final int size = librarys.size();", "-", "+        final int size = extensions.size();", "-            final Extension extension = (Extension)librarys.get( i );", "+            final Extension extension = (Extension)extensions.get( i );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f27df1b24609a1cf8de1f39accd71be", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/SelectSelector.java", "commitBeforeChange": "b71fd5ddcba8aff698e5ab8df375f60f232ac899", "commitAfterChange": "73c0030ac60560e2e1fb64d94396c5e630028141", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-            if (ifProperty != null) {", "+            if (ifCondition != null) {", "-                buf.append(ifProperty);", "+                buf.append(ifCondition);", "-            if (unlessProperty != null) {", "+            if (unlessCondition != null) {", "-                buf.append(unlessProperty);", "+                buf.append(unlessCondition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b26b0afba4b7a1147ccca20cae6a1e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/cvslib/ChangeLogParser.java", "commitBeforeChange": "6c310a371f0d7bfd4dbf4eee70693689164e9b74", "commitAfterChange": "a0ba302efe9a84e4735f08c631e01209496fe522", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processGetPreviousRevision(final String line)", "signatureAfterChange": "     private void processGetPreviousRevision(final String line)", "diff": ["-        m_previousRevision = line.substring(9);", "+        previousRevision = line.substring(9);", "-        m_revision = m_previousRevision;", "-        m_status = GET_DATE;", "+        revision = previousRevision;", "+        status = GET_DATE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53647c13b21f1c7c87a7d03e5abc73af", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jlink/jlink.java", "commitBeforeChange": "ddb6b066ca67886651efc055dcda9f328e78d5a2", "commitAfterChange": "3739ec9f837b93a123032ea69438db14c75b2564", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void addAddFile(String addfile)", "signatureAfterChange": "     public void addAddFile(String fileToAdd)", "diff": ["-    /** Adds a file to be added into the output.  */", "-    public void addAddFile(String addfile) {", "-        if (addfile == null) {", "+     */", "+    public void addAddFile(String fileToAdd) {", "+        if (fileToAdd == null) {", "-        addfiles.addElement(addfile);", "+        addfiles.addElement(fileToAdd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6f42189605d6a7cb9a5a8af37e0755", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Rmic.java", "commitBeforeChange": "18aa085b70f966d82f90709bbe6ab276617057e6", "commitAfterChange": "85f05e8b8d719e03559e6b07e480b6c0812dfd56", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "     protected void scanDir(File baseDir, String[] files,                            FileNameMapper mapper)", "signatureAfterChange": "     protected void scanDir(File baseDir, String[] files,                            FileNameMapper mapper)", "diff": ["-            String classname = newFiles[i].replace(File.separatorChar, '.');", "-            classname = classname.substring(0, classname.lastIndexOf(\".class\"));", "-            compileList.addElement(classname);", "+            String name = newFiles[i].replace(File.separatorChar, '.');", "+            name = name.substring(0, name.lastIndexOf(\".class\"));", "+            compileList.addElement(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9eaddab83f9bbc1bae17cc44b868a76", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultConfigurer.java", "commitBeforeChange": "99a9f194032b4185fc017d9bfe31e0419cc51f02", "commitAfterChange": "ced321c00be004a78c335295701169edf0dcb55f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void setContent( final ObjectConfigurer configurer,                              final Object object,                              final String content,                              final Context context )         throws ConfigurationException", "signatureAfterChange": "     private void setContent( final ObjectConfigurer configurer,                              final Object object,                              final String content,                              final Context context )         throws ConfigurationException", "diff": ["-     */", "-    private void setContent( final ObjectConfigurer configurer,", "-                             final Object object,", "-                             final String content,", "-                             final Context context )", "-        throws ConfigurationException", "-    {", "-        if( DEBUG )", "-        {", "-            final String message =", "-                REZ.getString( \"configure-content.notice\", content );", "-            getLogger().debug( message );", "-        }", "-", "-        // Set the content", "-        final AttributeSetter setter = configurer.getContentSetter();", "-        if( null == setter )", "-        {", "-            final String message = REZ.getString( \"content-not-supported.error\" );", "-            throw new ConfigurationException( message );", "-        }", "-        try", "-        {", "-            setValue( setter, object, content, context );", "-        }", "-        catch( final Exception e )", "-        {", "-            final String message = REZ.getString( \"bad-set-content.error\" );", "-            throw new ConfigurationException( message, e );", "-        }", "-    }", "+     */", "+    private void setContent( final ObjectConfigurer configurer,", "+                             final Object object,", "+                             final String content,", "+                             final Context context )", "+        throws ConfigurationException", "+    {", "+        if( DEBUG )", "+        {", "+            final String message =", "+                REZ.getString( \"configure-content.notice\", content );", "+            getLogger().debug( message );", "+        }", "+", "+        // Set the content", "+        final PropertyConfigurer contentConfigurer = configurer.getContentConfigurer();", "+        if( null == contentConfigurer )", "+        {", "+            final String message = REZ.getString( \"content-not-supported.error\" );", "+            throw new ConfigurationException( message );", "+        }", "+", "+        try", "+        {", "+            setValue( contentConfigurer, object, content, context );", "+        }", "+        catch( final Exception e )", "+        {", "+            final String message = REZ.getString( \"bad-set-content.error\" );", "+            throw new ConfigurationException( message, e );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc963875c6b7b7ee4ec35b64b0c09d8", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "     private void createNestedElement(AntLibFactory factory, Reflector reflector,                                      Object element, BuildElement model)          throws ExecutionException", "signatureAfterChange": "     private void createNestedElement(AntLibFactory factory, Setter setter,                                      Object element, BuildElement model)          throws ExecutionException", "diff": ["-    private void createNestedElement(AntLibFactory factory, Reflector reflector,", "+    private void createNestedElement(AntLibFactory factory, Setter setter,", "-                 = reflector.createElement(element, nestedElementName);", "+                 = setter.createElement(element, nestedElementName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d090fa7cbce4add8324751266e54cd", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "cdef1ea2fdf8e56abad143b32c8f8593714af19b", "commitAfterChange": "4f46532c945a4fe13670cbbeda0a0c817bcaef9f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setInputfile(File inputFile)", "signatureAfterChange": "     public void setSrc(File srcFile)", "diff": ["-    public void setInputfile(File inputFile) {", "-        this.inputFile = inputFile;", "+    public void setSrc(File srcFile) {", "+        this.srcFile = srcFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ce56243e556cb35ca585eec6120f3e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/CVSPass.java", "commitBeforeChange": "8c9b85883e0e2b18b0aa443e4b23484fbc70ebbc", "commitAfterChange": "5bb8fb7da8d0b21d8de014f71ee52a9f4ca8f393", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final void execute() throws BuildException", "signatureAfterChange": "     public final void execute() throws BuildException", "diff": ["-        log(\"cvsRoot: \" + cvsRoot, project.MSG_DEBUG);", "-        log(\"password: \" + password, project.MSG_DEBUG);", "-        log(\"passFile: \" + passFile, project.MSG_DEBUG);", "+        log(\"cvsRoot: \" + cvsRoot, Project.MSG_DEBUG);", "+        log(\"password: \" + password, Project.MSG_DEBUG);", "+        log(\"passFile: \" + passFile, Project.MSG_DEBUG);", "-            log(\"Writing -> \" + pwdfile , project.MSG_DEBUG);", "+            log(\"Writing -> \" + pwdfile , Project.MSG_DEBUG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd97f391409d111ef479f7fc871c684b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/PropertySet.java", "commitBeforeChange": "ab0d0f78f4e8ddc0b9f708c7b32576a0926be129", "commitAfterChange": "2f6f27f4272a9d4c69cebcb5b23e2f8ceee35a52", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Properties getProperties()", "signatureAfterChange": "     public Properties getProperties()", "diff": ["-        FileNameMapper mapper = null;", "+        FileNameMapper m = null;", "-            mapper = myMapper.getImplementation();", "+            m = myMapper.getImplementation();", "-            if (mapper != null) {", "+            if (m != null) {", "-                String[] newname = mapper.mapFileName(name);", "+                String[] newname = m.mapFileName(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e0f5b6b3f040717cb455ac3b2d3e04", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Expand.java", "commitBeforeChange": "470a4695e947c43343806a5a8ec79f1e4b4a9321", "commitAfterChange": "29c20176679062f1345b7edc0aa3fe1b5810c858", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void extractFile(Touch touch, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, long entrySize,                                Date entryDate, boolean isDirectory)                                throws IOException", "signatureAfterChange": "      protected void extractFile(FileUtils fileUtils, File srcF, File dir,                                InputStream compressedInputStream,                                String entryName, long entrySize,                                Date entryDate, boolean isDirectory)                                throws IOException", "diff": ["-    protected void extractFile(Touch touch, File srcF, File dir,", "+    protected void extractFile(FileUtils fileUtils, File srcF, File dir,", "-        extractFile(touch, srcF, dir, compressedInputStream,", "+        extractFile(fileUtils, srcF, dir, compressedInputStream,"]}]}