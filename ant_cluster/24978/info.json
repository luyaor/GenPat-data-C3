{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77fe3df7ce4ed05fe20efc6ca2030616", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "236c9640b256008dbdadebc06887b945", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Replace.java", "commitBeforeChange": "822028744ff977b3588dcc54bafdc1e9e8f98375", "commitAfterChange": "b641968fade3f4f16c1676f2b5f06c6b4344ab08", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void processFile(File src) throws BuildException", "signatureAfterChange": "     private void processFile(File src) throws BuildException", "diff": ["-        if (!src.exists()) { ", "+        if (!src.exists()) {", "-            // line separators in values and tokens are \"\\n\"", "-            // in order to compare with the file contents, replace them", "-            // as needed", "-            String linesep = System.getProperty(\"line.separator\");", "-            String val = stringReplace(value.getText(), \"\\n\", linesep);", "-            String tok = stringReplace(token.getText(), \"\\n\", linesep);", "+            //Preserve original string (buf) so we can compare the result", "+            String newString = new String(buf);", "-            // for each found token, replace with value", "-            String  newString = stringReplace(buf, tok, val);", "-            boolean changes   = !newString.equals(buf);", "+            if (token != null)", "+            {", "+                // line separators in values and tokens are \"\\n\"", "+                // in order to compare with the file contents, replace them", "+                // as needed", "+                String linesep = System.getProperty(\"line.separator\");", "+                String val = stringReplace(value.getText(), \"\\n\", linesep);", "+                String tok = stringReplace(token.getText(), \"\\n\", linesep);", "+                // for each found token, replace with value", "+                log(\"Replacing in \" + src.getPath() + \": \" + token.getText() + \" --> \" + value.getText(), Project.MSG_VERBOSE);", "+                newString = stringReplace(newString, tok, val);", "+            }", "+", "+            if (replacefilters.size() > 0) {", "+                newString = processReplacefilters(newString, src.getPath());", "+            }", "+", "+            boolean changes = !newString.equals(buf);", "-            ", "+", "-            // If there were changes, move the new one to the old one, otherwise, delete the new one", "+            // If there were changes, move the new one to the old one;", "+            // otherwise, delete the new one", "-        }       ", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e73f9058ccb34afb7eb5036a8f7ce2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ssh/ScpToMessage.java", "commitBeforeChange": "9de4ec709caa882bbeceacf4f6868646869ccbf1", "commitAfterChange": "881a0ff79e095227ce00c7deefc8054f60fefa2f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void sendFileToRemote(final File localFile,                                    final InputStream in,                                    final OutputStream out) throws IOException", "signatureAfterChange": "      private void sendFileToRemote(final File localFile,                                    final InputStream in,                                    final OutputStream out) throws IOException", "diff": ["+", "+        if (getPreserveLastModified()) {", "+            String command = \"T\" + (localFile.lastModified() / 1000) + \" 0\";", "+            command += \" \" + (localFile.lastModified() / 1000) + \" 0\\n\";", "+            out.write(command.getBytes());", "+            out.flush();", "+", "+            waitForAck(in);", "+        }", "+"]}]}