{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "addef8079a533520b80839b856c9d152", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10dc257cf7ce9d6d640efcba52d8097a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Get.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "          private URLConnection openConnection(URL aSource) throws IOException", "signatureAfterChange": "          private URLConnection openConnection(final URL aSource) throws IOException", "diff": ["-        private URLConnection openConnection(URL aSource) throws IOException {", "+        private URLConnection openConnection(final URL aSource) throws IOException {", "-            URLConnection connection = aSource.openConnection();", "+            final URLConnection connection = aSource.openConnection();", "-                String up = uname + \":\" + pword;", "+                final String up = uname + \":\" + pword;", "-                Base64Converter encoder = new Base64Converter();", "+                final Base64Converter encoder = new Base64Converter();", "-            } catch (NullPointerException e) {", "+            } catch (final NullPointerException e) {", "-                HttpURLConnection httpConnection = (HttpURLConnection) connection;", "-                int responseCode = httpConnection.getResponseCode();", "+                final HttpURLConnection httpConnection = (HttpURLConnection) connection;", "+                final int responseCode = httpConnection.getResponseCode();", "-                    String newLocation = httpConnection.getHeaderField(\"Location\");", "-                    String message = aSource", "+                    final String newLocation = httpConnection.getHeaderField(\"Location\");", "+                    final String message = aSource", "-                    URL newURL = new URL(aSource, newLocation);", "+                    final URL newURL = new URL(aSource, newLocation);", "-                long lastModified = httpConnection.getLastModified();", "+                final long lastModified = httpConnection.getLastModified();", "-                    String message = \"HTTP Authorization failure\";", "+                    final String message = \"HTTP Authorization failure\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae86385ee817b60c64d0de38e9e4d175", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "commitAfterChange": "13f6d98c9de38c6c53d4d855157c3fad620c3303", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "     protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,                            long lastModified, File fromArchive, int mode)         throws IOException", "signatureAfterChange": "     protected void zipFile(InputStream in, final ZipOutputStream zOut, final String vPath,                            final long lastModified, final File fromArchive, final int mode)         throws IOException", "diff": ["-    protected void zipFile(InputStream in, ZipOutputStream zOut, String vPath,", "-                           long lastModified, File fromArchive, int mode)", "+    protected void zipFile(InputStream in, final ZipOutputStream zOut, final String vPath,", "+                           final long lastModified, final File fromArchive, final int mode)", "-            ZipEntry ze = new ZipEntry(vPath);", "+            final ZipEntry ze = new ZipEntry(vPath);", "-                CRC32 cal = new CRC32();", "+                final CRC32 cal = new CRC32();", "-                    ByteArrayOutputStream bos = new ByteArrayOutputStream();", "+                    final ByteArrayOutputStream bos = new ByteArrayOutputStream();", "-                    byte[] buffer = new byte[BUFFER_SIZE];", "+                    final byte[] buffer = new byte[BUFFER_SIZE];", "-                    byte[] buffer = new byte[BUFFER_SIZE];", "+                    final byte[] buffer = new byte[BUFFER_SIZE];", "-            ZipExtraField[] extra = getCurrentExtraFields();", "+            final ZipExtraField[] extra = getCurrentExtraFields();", "-            byte[] buffer = new byte[BUFFER_SIZE];", "+            final byte[] buffer = new byte[BUFFER_SIZE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca11ed057794e1f3212baa0c1199aefa", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "     private void tsort(String root, Hashtable<String, Target> targetTable,                              Hashtable<String, String> state, Stack<String> visiting,                              Vector<Target> ret)         throws BuildException", "signatureAfterChange": "     private void tsort(final String root, final Hashtable<String, Target> targetTable,                              final Hashtable<String, String> state, final Stack<String> visiting,                              final Vector<Target> ret)         throws BuildException", "diff": ["-    private void tsort(String root, Hashtable<String, Target> targetTable,", "-                             Hashtable<String, String> state, Stack<String> visiting,", "-                             Vector<Target> ret)", "+    private void tsort(final String root, final Hashtable<String, Target> targetTable,", "+                             final Hashtable<String, String> state, final Stack<String> visiting,", "+                             final Vector<Target> ret)", "-        Target target = targetTable.get(root);", "+        final Target target = targetTable.get(root);", "-            StringBuilder sb = new StringBuilder(\"Target \\\"\");", "+            final StringBuilder sb = new StringBuilder(\"Target \\\"\");", "-                String parent = visiting.peek();", "+                final String parent = visiting.peek();", "-        for (Enumeration<String> en = target.getDependencies(); en.hasMoreElements();) {", "-            String cur = en.nextElement();", "-            String m = state.get(cur);", "+        for (final Enumeration<String> en = target.getDependencies(); en.hasMoreElements();) {", "+            final String cur = en.nextElement();", "+            final String m = state.get(cur);", "-        String p = visiting.pop();", "+        final String p = visiting.pop();"]}]}