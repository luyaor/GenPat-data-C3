{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f01ca0d6daafb4ac2d7b4171225891d7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09b4f3157092f50a44a460cfc20e3de7", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/ClassicConfigurer.java", "commitBeforeChange": "b20531c93c277088ee73f7410025051b383d302e", "commitAfterChange": "7edeb4e678f61ddb643d348cfd8fede79b1cfbe5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "signatureAfterChange": "     public void configure( final Object object,                            final Configuration configuration,                            final Context context )         throws ConfigurationException", "diff": ["-            ( (Configurable)object ).configure( configuration );", "+            final Configurable configurable = (Configurable)object;", "+            configurable.configure( configuration );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ec113dffbb4b0ad6eb981d935ac961c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PropertyHelper.java", "commitBeforeChange": "695ce2ed1c7ffb7ce113fcdc05d12cd70abad525", "commitAfterChange": "1c7138c4dfbc65b68862f53d156cfaaed4415788", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "     protected List getDelegates(Class type)", "signatureAfterChange": "     protected List getDelegates(Class type)", "diff": ["-        return delegates.containsKey(type)", "-                ? (List) new ArrayList((List) delegates.get(type)) : Collections.EMPTY_LIST;", "+        Hashtable curDelegates = delegates;", "+        return curDelegates.containsKey(type)", "+                ? (List) new ArrayList((List) curDelegates.get(type)) : Collections.EMPTY_LIST;"]}]}