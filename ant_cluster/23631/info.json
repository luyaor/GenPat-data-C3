{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "875b9072feb67dc143a3072abe910d7d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994dfbb957dc6598e39a6291e549f456", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/FixCrLfTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": "      public void testFixFileExclusive() throws Exception", "signatureAfterChange": "      @Test     public void testFixFileExclusive() throws Exception", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testFixFileExclusive\",", "-                FixCRLF.ERROR_FILE_AND_SRCDIR, FixCRLF.ERROR_FILE_AND_SRCDIR);", "+        try {", "+            buildRule.executeTarget(\"testFixFileExclusive\");", "+            fail(FixCRLF.ERROR_FILE_AND_SRCDIR);", "+        } catch (BuildException ex) {", "+            AntAssert.assertContains(FixCRLF.ERROR_FILE_AND_SRCDIR, ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa075cd4c2a5d804c41d826656679b1e", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/optional/script/ScriptDefTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNoLang()", "signatureAfterChange": "      @Test     public void testNoLang()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"nolang\",", "-            \"Absence of language attribute not detected\",", "-            \"requires a language attribute\");", "+        try {", "+            buildRule.executeTarget(\"nolang\");", "+            fail(\"Absence of language attribute not detected\");", "+        } catch(BuildException ex) {", "+            AntAssert.assertContains(\"requires a language attribute\", ex.getMessage());", "+        }"]}]}