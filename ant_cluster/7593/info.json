{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38f40615cc96bd61659b6af785cfc14f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ccaa65d67d2528fac3daa36ff95e372", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/ant/tasks/core/RegisterTasklet.java", "commitBeforeChange": "51af2a4c2d329b40f25ab33d770f2a5885b008ad", "commitAfterChange": "ab5d2d667652fc27a6965c50a9d0bc5d06035497", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void run()         throws AntException", "signatureAfterChange": "      public void run()         throws AntException", "diff": ["+/*", "-", "+*/", "-            throw new AntException( \"Must specify taskname parameter\" );            ", "+            throw new AntException( \"Must specify taskname parameter\" );", "+        }", "+", "+        if( null == m_tasklib && null == m_classname )", "+        {", "+            throw new AntException( \"Must specify classname if don't specify \" + ", "+                                    \"tasklib parameter\" );", "-            final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "-            final URL url = tasklib.toURL();", "+            URL url = null;", "+", "+            if( null != m_tasklib )", "+            {", "+                final File tasklib = new File( getContext().resolveFilename( m_tasklib ) );", "+                url = tasklib.toURL();", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb168bf323c466abf444abefc20ffec9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/Mapper.java", "commitBeforeChange": "d2d785c408ae380f80e33800ce63959f221576f9", "commitAfterChange": "47ba7d22e2e132bef06c232ee6b5ac4ec8fcbebd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public FileNameMapper getImplementation() throws BuildException", "signatureAfterChange": "     public FileNameMapper getImplementation() throws BuildException", "diff": ["-        if (type == null) {", "-            throw new BuildException(\"type attribute is required\");", "+        if (type == null && classname == null) {", "+            throw new BuildException(\"one of the attributes type or classname is required\");", "+        }", "+", "+        if (type != null && classname != null) {", "+            throw new BuildException(\"must not specify both type and classname attribute\");", "-            Class c = Class.forName(type.getImplementation());", "+            if (type != null) {", "+                classname = type.getImplementation();", "+            }", "+", "+            Class c = null;", "+            if (classpath == null) {", "+                c = Class.forName(classname);", "+            } else {", "+                AntClassLoader al = new AntClassLoader(p, classpath);", "+                c = al.loadClass(classname);", "+            }", "+            "]}]}