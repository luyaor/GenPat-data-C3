{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55e1df7b1484a77e41fac889a5419f24", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b2349730345a246662ae176a539538", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/jsp/JspC.java", "commitBeforeChange": "3e35ab334b7e5ecd691960f61b58069130c4a2b0", "commitAfterChange": "6acb5be183f9d189628089d186ede0caf887cf0c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 32, "signatureBeforeChange": "     protected void scanDir(File srcDir, File destDir, String files[])", "signatureAfterChange": "     protected void scanDir(File srcDir, File destDir, String files[])", "diff": ["-            File srcFile = new File(srcDir, files[i]);", "-            if (files[i].endsWith(\".jsp\")) {", "-                // drop leading path (if any)", "-                int fileStart =", "-                    files[i].lastIndexOf(File.separatorChar) + 1;", "-                File javaFile = new File(destDir, files[i].substring(fileStart,", "-                                                                     files[i].indexOf(\".jsp\")) + \".java\");", "+            String filename=files[i];", "+            File srcFile = new File(srcDir, filename);", "+            File javaFile=mapToJavaFile(srcFile);", "-                if (srcFile.lastModified() > now) {", "-                    log(\"Warning: file modified in the future: \" +", "-                        files[i], Project.MSG_WARN);", "-                }", "+            if (srcFile.lastModified() > now) {", "+                    log(\"Warning: file modified in the future: \" +filename,", "+                            Project.MSG_WARN);", "+            }", "+            boolean shouldCompile=false;", "-                if (!javaFile.exists() ||", "-                    srcFile.lastModified() > javaFile.lastModified())", "-                    {", "-                        if (!javaFile.exists()) {", "-                            log(\"Compiling \" + srcFile.getPath() +", "-                                \" because java file \"", "-                                + javaFile.getPath() + \" does not exist\",", "-                                Project.MSG_DEBUG);", "-                        } else {", "-                            log(\"Compiling \" + srcFile.getPath() +", "-                                \" because it is out of date with respect to \"", "-                                + javaFile.getPath(), Project.MSG_DEBUG);", "-                        }", "-                        compileList.addElement(srcFile.getAbsolutePath());", "+            if (!javaFile.exists()) {", "+                shouldCompile=true;", "+                log(\"Compiling \" + srcFile.getPath() +", "+                        \" because java file \"+ javaFile.getPath() + \" does not exist\",", "+                        Project.MSG_DEBUG);", "+                } else {", "+                    if( srcFile.lastModified() > javaFile.lastModified()) {", "+                        shouldCompile=true;", "+                        log(\"Compiling \" + srcFile.getPath() +", "+                            \" because it is out of date with respect to \" + javaFile.getPath(),", "+                            Project.MSG_DEBUG);", "+            }", "+            if(shouldCompile) {", "+                compileList.addElement(srcFile.getAbsolutePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beeda2f6f42ef3590a0ad2e2f7a8df2d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/TraXLiaison.java", "commitBeforeChange": "8f70bc2a919459c49c1977d91551f43819063954", "commitAfterChange": "1e8307708de490453db28c89f777eb4a9c08767b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void logError(TransformerException e, String type)", "signatureAfterChange": "      private void logError(TransformerException e, String type)", "diff": ["-", "-    private void logError(TransformerException e, String type) {", "-        if (logger == null) {", "-            return;", "-", "-        StringBuffer msg = new StringBuffer();", "-        if (e.getLocator() != null) {", "-            if (e.getLocator().getSystemId() != null) {", "-                String url = e.getLocator().getSystemId();", "-                if (url.startsWith(\"file:///\")) {", "-                  url = url.substring(8);", "-                }", "-                msg.append(url);", "-            } else {", "-                msg.append(\"Unknown file\");", "-            }", "-            if (e.getLocator().getLineNumber() != -1) {", "-                msg.append(\":\" + e.getLocator().getLineNumber());", "-                if (e.getLocator().getColumnNumber() != -1) {", "-                    msg.append(\":\" + e.getLocator().getColumnNumber());", "-                }", "-        msg.append(\": \" + type + \"! \");", "-        msg.append(e.getMessage());", "-        if (e.getCause() != null) {", "-            msg.append(\" Cause: \" + e.getCause());", "-        }", "-        logger.log(msg.toString());", "+", "+    private void logError(TransformerException e, String type) {", "+        if (logger == null) {", "+            return;", "+        }", "+", "+        StringBuffer msg = new StringBuffer();", "+        SourceLocator locator = e.getLocator();", "+        if (locator != null) {", "+            String systemid = locator.getSystemId();", "+            if (systemid != null) {", "+                String url = systemid;", "+                if (url.startsWith(\"file:///\")) {", "+                    url = url.substring(8);", "+                }", "+                msg.append(url);", "+            } else {", "+                msg.append(\"Unknown file\");", "+            }", "+            int line = locator.getLineNumber();", "+            if (line != -1) {", "+                msg.append(\":\" + line);", "+                int column = locator.getColumnNumber();", "+                if (column != -1) {", "+                    msg.append(\":\" + column);", "+                }", "+            }", "+        }", "+        msg.append(\": \" + type + \"! \");", "+        msg.append(e.getMessage());", "+        if (e.getCause() != null) {", "+            msg.append(\" Cause: \" + e.getCause());", "+        }", "+", "+        logger.log(msg.toString());", "+    }"]}]}