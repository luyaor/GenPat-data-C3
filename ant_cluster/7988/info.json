{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cc120cc3a46bc89f862caf438bf43c9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7245b6aefb2a1e25f9aee78786501d8c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/DynamicTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testSimple()", "signatureAfterChange": "      @Test     public void testSimple()", "diff": ["+    @Test", "-        executeTarget(\"simple\");", "-        assertEquals(\"1\", project.getProperty(\"prop1\"));", "-        assertEquals(\"2\", project.getProperty(\"prop2\"));", "-        assertEquals(\"3\", project.getProperty(\"prop3\"));", "-        assertEquals(\"4\", project.getProperty(\"prop4\"));", "+        buildRule.executeTarget(\"simple\");", "+        assertEquals(\"1\", buildRule.getProject().getProperty(\"prop1\"));", "+        assertEquals(\"2\", buildRule.getProject().getProperty(\"prop2\"));", "+        assertEquals(\"3\", buildRule.getProject().getProperty(\"prop3\"));", "+        assertEquals(\"4\", buildRule.getProject().getProperty(\"prop4\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d32e87ff0d1d402a47eae4d37c0a8e1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReferenceTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testType()", "signatureAfterChange": "      @Test     public void testType()", "diff": ["+    @Test", "-       expectPropertySet(\"type\", \"global-path\");", "-       assertPropertyUnset(\"global-path-as-fileset\");", "-       assertPropertyUnset(\"global-path-as-foo\");", "-       assertPropertySet(\"global-echo\");", "+        buildRule.executeTarget(\"type\");", "+        assertEquals(\"true\", buildRule.getProject().getProperty(\"global-path\"));", "+        assertNull(buildRule.getProject().getProperty(\"global-path-as-fileset\"));", "+        assertNull(buildRule.getProject().getProperty(\"global-path-as-foo\"));", "+        assertEquals(\"true\", buildRule.getProject().getProperty(\"global-echo\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69be69ca4df6ac808162f80a5d3924f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/ImportTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testSymlinkedImports() throws Exception", "signatureAfterChange": "      @Test     public void testSymlinkedImports() throws Exception", "diff": ["+    @Test", "-        if (!new File(ln).exists()) {", "-            // Running on Windows or something, so skip it.", "-            return;", "-        }", "+        Assume.assumeTrue(\"Current system does not support Symlinks\", new File(ln).exists());", "-            configureProject(", "+            buildRule.configureProject(", "-            assertPropertyEquals(", "-                \"ant.file.p2\",", "+            assertEquals(", "+                buildRule.getProject().getProperty(\"ant.file.p2\"),", "-            assertPropertyEquals(", "-                \"ant.file.p3\",", "+            assertEquals(", "+                buildRule.getProject().getProperty(\"ant.file.p3\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b608b7396154bc54791c597a72482147", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/util/JavaEnvUtilsTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testGetExecutableNetware()", "signatureAfterChange": "       @Test     public void testGetExecutableNetware()", "diff": ["+    @Test", "-        if (Os.isName(\"netware\")) {", "-            assertEquals(\"java\", JavaEnvUtils.getJreExecutable(\"java\"));", "-            assertEquals(\"javac\", JavaEnvUtils.getJdkExecutable(\"javac\"));", "-            assertEquals(\"foo\", JavaEnvUtils.getJreExecutable(\"foo\"));", "-            assertEquals(\"foo\", JavaEnvUtils.getJdkExecutable(\"foo\"));", "-        }", "+        Assume.assumeTrue(\"Test only runs on netware\", Os.isName(\"netware\"));", "+        assertEquals(\"java\", JavaEnvUtils.getJreExecutable(\"java\"));", "+        assertEquals(\"javac\", JavaEnvUtils.getJdkExecutable(\"javac\"));", "+        assertEquals(\"foo\", JavaEnvUtils.getJreExecutable(\"foo\"));", "+        assertEquals(\"foo\", JavaEnvUtils.getJdkExecutable(\"foo\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ef636358343dd4ff0009ba9524d17a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/testcases/org/apache/tools/ant/taskdefs/ChecksumTest.java", "commitBeforeChange": "16a5d1b56ceb8dca9875b074ebb36c626ce06763", "commitAfterChange": "931a037496b3bc1c55734fd221a3ef773dc8cabb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void testVerify(String target)", "signatureAfterChange": "      private void testVerify(String target)", "diff": ["-        assertNull(project.getProperty(\"logo.md5\"));", "-        assertNull(project.getProperty(\"no.logo.md5\"));", "+        assertNull(project.getProperty(\"logo.MD5\"));", "+        assertNull(project.getProperty(\"no.logo.MD5\"));", "-        assertNotNull(project.getProperty(\"logo.md5\"));", "-        assertEquals(\"true\", project.getProperty(\"logo.md5\"));", "+        assertNotNull(project.getProperty(\"logo.MD5\"));", "+        assertEquals(\"true\", project.getProperty(\"logo.MD5\"));"]}]}