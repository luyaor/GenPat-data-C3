{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d06db4bd8bc4ba35603bf5afb093dbd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "531f14730160ca248fa20b243bcf7cc2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java", "commitBeforeChange": "7171341fc60cfd4d7cd4f92bda0778bf98c17094", "commitAfterChange": "1bae2089f57cca232ec1e2d96473391c6ad1385b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (file != null && filesets.size() > 0) {", "+        if (file != null && resources != null) {", "-                                     + \"and filesets at the same time.\");", "+                                     + \"and resource collections at the same \"", "+                                     + \"time.\");", "-        int sz = filesets.size();", "-", "-        for (int i = 0; i < sz; i++) {", "-            FileSet fs = (FileSet) (filesets.elementAt(i));", "-            DirectoryScanner ds = fs.getDirectoryScanner(getProject());", "-", "-            String[] files = ds.getIncludedFiles();", "-", "-            for (int j = 0; j < files.length; j++) {", "-                File f = new File(fs.getDir(getProject()), files[j]);", "+        if (resources != null) {", "+            for (Iterator i = resources.iterator(); i.hasNext(); ) {", "+                FileProvider fp =", "+                    (FileProvider) ((Resource) i.next()).as(FileProvider.class);", "+                File f = fp.getFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d75a8f2e985e1ef73c54050ed0a2225", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/antlib/vfile/ListFileSetTask.java", "commitBeforeChange": "5b87919be6a8db15efe30f2de6e617aba31ef619", "commitAfterChange": "52926715b4f4f53da4b63cf660a14f357d7a9b6e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void execute()         throws TaskException", "signatureAfterChange": "     public void execute()         throws TaskException", "diff": ["-        FileSetResult result = m_fileSet.getResult( getContext() );", "-        final FileObject[] files = result.getFiles();", "-        final String[] paths = result.getPaths();", "-        for( int i = 0; i < files.length; i++ )", "+        final int count = m_fileSets.size();", "+        for( int i = 0; i < count; i++ )", "-            final FileObject file = files[ i ];", "-            final String path = paths[ i ];", "-            getLogger().info( path + \" = \" + file );", "+            final FileSet fileSet = (FileSet)m_fileSets.get(i );", "+            FileSetResult result = fileSet.getResult( getContext() );", "+            final FileObject[] files = result.getFiles();", "+            final String[] paths = result.getPaths();", "+            for( int j = 0; j < files.length; j++ )", "+            {", "+                final FileObject file = files[ j ];", "+                final String path = paths[ j ];", "+                getLogger().info( path + \" = \" + file );", "+            }"]}]}