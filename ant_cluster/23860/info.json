{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "844f3345897bf9adce42e732e3edade2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7784efb1bb6551f53095ecdb80e8ff5a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/configurer/DefaultObjectConfigurer.java", "commitBeforeChange": "8af1905a98b1e04a63ab7473d64a41bfda91f15e", "commitAfterChange": "7a5c30f33c46dec3fb201dac6878a09c4cfcaf2c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Map findAdders()         throws ConfigurationException", "signatureAfterChange": "     private Map findAdders()         throws ConfigurationException", "diff": ["-            final boolean isTypedAdder = methodName.equals( \"add\" );", "-", "-            final Class paramType = method.getParameterTypes()[ 0 ];", "-            if( isTypedAdder && !paramType.isInterface() )", "-            {", "-                final String message =", "-                    REZ.getString( \"typed-adder-non-interface.error\",", "-                                   m_class.getName(),", "-                                   paramType.getName() );", "-                throw new ConfigurationException( message );", "-            }", "-", "-            // TODO - un-hard-code this", "+            // Skip the text content method", "-", "-            final Class type = paramType;", "+            final Class type = method.getParameterTypes()[0];", "-                if( isTypedAdder )", "-                {", "-                    // Both are string, or both are not string", "-                    final String message =", "-                        REZ.getString( \"multiple-typed-adder-methods-for-element.error\",", "-                                       m_class.getName() );", "-                    throw new ConfigurationException( message );", "-                }", "-                else if( currentType != String.class && type == String.class )", "+                if( currentType != String.class && type == String.class )", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce7a10e7c72dc1fca543898aa3028fe3", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/extension/ExtensionSet.java", "commitBeforeChange": "aa373b9f5e7548bf96a51588c9e67b8de6c05404", "commitAfterChange": "cbe9978c14108b0ce3235e6c695b21efd9c2937e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setRefid(final Reference reference)         throws BuildException", "signatureAfterChange": "     public void setRefid(final Reference reference)         throws BuildException", "diff": ["-        // change this to get the objects from the other reference", "-        final Object object =", "-            reference.getReferencedObject(getProject());", "-        if (object instanceof ExtensionSet) {", "-            final ExtensionSet other = (ExtensionSet) object;", "-            extensions.addAll(other.extensions);", "-            extensionsFilesets.addAll(other.extensionsFilesets);", "-        } else {", "-            final String message =", "-                reference.getRefId() + \" doesn\\'t refer to a ExtensionSet\";", "-            throw new BuildException(message);", "-        }", "-"]}]}