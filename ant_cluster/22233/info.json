{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9cb0c4f189f65bca1a4f65b5e8308f5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "439ff568c157b1f0d3d131e69be22b91", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/sandbox/junit/src/main/org/apache/tools/ant/taskdefs/optional/junit/remote/MessageReader.java", "commitBeforeChange": "48a9017850dc1a302304a057ad05640175a2dd15", "commitAfterChange": "626c685b1dd04334dcdebcdaa39f5f438a51be2e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void processMessage(String message)", "signatureAfterChange": "     protected void processMessage(String message)", "diff": ["-        if (message == null){", "+        if (message == null) {", "-        if (message.startsWith(MessageIds.PROPS_START)){", "+        if (message.startsWith(MessageIds.PROPS_START)) {", "-                ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));", "-                sysprops = (Properties)ois.readObject();", "-            } catch (Exception e){", "+                sysprops = (Properties) SocketUtil.deserialize(bytes);", "+                notifyTestSystemProperties(sysprops);", "+            } catch (Exception e) {", "-            notifyTestSystemProperties(sysprops);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be42821887abde0b69a12dc06ae6feb9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/components/workspace/DefaultTaskContext.java", "commitBeforeChange": "4b3e0ee2041826e51ec60af99e7bcca7024bf676", "commitAfterChange": "ed3fafb887fef0afbcd90eef7f263fef3bde95d9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object resolveValue( final String value )         throws TaskException", "signatureAfterChange": "     public Object resolveValue( final String value )         throws TaskException", "diff": ["-            final TaskContextAdapter context = new TaskContextAdapter( this );", "-", "-                PropertyUtil.resolveProperty( value, context, false );", "+                PropertyUtil.resolveProperty( value, this, false );", "-        catch( final PropertyException pe )", "+        catch( final TaskException te )", "-            throw new TaskException( message, pe );", "+            throw new TaskException( message, te );"]}]}