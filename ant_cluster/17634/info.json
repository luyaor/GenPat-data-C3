{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e15916f4ef76629a9769b12712663363", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32b5a0d1d572942acea695754616112a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/myrmidon/src/java/org/apache/myrmidon/framework/Execute.java", "commitBeforeChange": "b0bf9dddde85cb1e6723303338ed03432acfcf2e", "commitAfterChange": "9f496d1b2a1bcf4a5ac32e2e890a695eb163d81e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Commandline getCommandline()", "signatureAfterChange": "     private String[] getCommandLine()", "diff": ["-     */", "-    public Commandline getCommandline()", "-    {", "-        if( null == m_command )", "-        {", "-            m_command = new Commandline();", "-        }", "-        return m_command;", "+     */", "+    private String[] getCommandLine()", "+    {", "+        final String[] args = getArguments();", "+        final String[] result = new String[ args.length + 1 ];", "+        result[ 0 ] = getExecutable().replace( '/', File.separatorChar ).replace( '\\\\', File.separatorChar );", "+        System.arraycopy( args, 0, result, 1, args.length );", "+        return result;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c91069e201a88e74c31f29fe6568318", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "9e2e9dbcf9aec4f84d7a550d1af75655dec79b40", "commitAfterChange": "2295e485c44b8e984eb77f353a888ccffa1ed1df", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected static String[][] grabFileNames(FileScanner[] scanners)", "signatureAfterChange": "      protected static String[][] grabFileNames(FileScanner[] scanners)", "diff": ["-            result[i] = scanners[i].getIncludedFiles();", "+            String[] files = scanners[i].getIncludedFiles();", "+            String[] dirs = scanners[i].getIncludedDirectories();", "+            result[i] = new String[files.length + dirs.length];", "+            System.arraycopy(files, 0, result[i], 0, files.length);", "+            System.arraycopy(dirs, 0, result[i], files.length, dirs.length);"]}]}