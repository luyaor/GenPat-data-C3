{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ceb88d69cb8fef885d680e444129182", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0100e0feff50dec0cb80eee089be8bae", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/StreamPumper.java", "commitBeforeChange": "d3cd72efd0bcc53e93dc30234f1793d9c44b3093", "commitAfterChange": "2737393e9f982e62dcd84f35a5f342ae9fa07cd7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void run()", "signatureAfterChange": "     public void run()", "diff": ["+        synchronized(this) {", "+            // Just in case this object is reused in the future", "+            finished = false;", "+        }", "+", "-        } catch(IOException e) {}", "+        } catch(IOException e) {", "+        } finally {", "+            synchronized(this) {", "+                finished = true;", "+                notify();", "+            }", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05a22276aaf9d265222e7a1dbf7994f9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "809dcaf2876c3362c38151af140a9d6225baaeb8", "commitAfterChange": "44bbe5b1395e8cb74fc90cfb4f688c890c941024", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void scandir(File dir, String vpath, boolean fast)", "signatureAfterChange": "     protected void scandir(File dir, String vpath, boolean fast)", "diff": ["-             * (2) an IO error occurred (why doesn't it throw an exception ", "+             * (2) an IO error occurred (why doesn't it throw an exception", "+                        everythingIncluded = false;", "+                    everythingIncluded = false;", "+                        everythingIncluded = false;", "+                    everythingIncluded = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c56535e2cd5251d3e8c75eb733980a4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/PathTokenizer.java", "commitBeforeChange": "769fac83235a4c2fac00097cd26f201aa7eae534", "commitAfterChange": "a91adaf451abf4857fd8ce133757dfc3b433bf3f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public PathTokenizer(String path)", "signatureAfterChange": "     public PathTokenizer(String path)", "diff": ["-       tokenizer = new StringTokenizer(path, \":;\", false);", "-       dosStyleFilesystem = File.pathSeparatorChar == ';'; ", "+        if (onNetWare) {", "+            // For NetWare, use the boolean=true mode, so we can use delimiter ", "+            // information to make a better decision later.", "+            tokenizer = new StringTokenizer(path, \":;\", true);", "+        }", "+        else {", "+            // on Windows and Unix, we can ignore delimiters and still have", "+            // enough information to tokenize correctly.", "+            tokenizer = new StringTokenizer(path, \":;\", false);", "+        }", "+        dosStyleFilesystem = File.pathSeparatorChar == ';'; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f5c54611c7d8486a7f2ef154047c12", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "582bc0f7f6adc7d9dc188b2b853e81be7e9fac4a", "commitAfterChange": "c6a2ce5a054f4985d68689f9dff61e43a65a1c23", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void add(ResourceCollection rc)", "signatureAfterChange": "     public void add(ResourceCollection rc)", "diff": ["+        if (resources == null) {", "+            resources = new Union();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12564aed1d4788952466d416dbf5a958", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/SymbolicLinkUtils.java", "commitBeforeChange": "f70ce7b08a54dc6fea51c96a3ee883164e60d47c", "commitAfterChange": "a2ab860629780bad667de39114aa335ffdc3d323", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "signatureAfterChange": "     public boolean isSymbolicLink(File parent, String name)         throws IOException", "diff": ["-        File toTest = new File(parent.getCanonicalPath(), name);", "+        File toTest = parent != null", "+            ? new File(parent.getCanonicalPath(), name)", "+            : new File(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15cbefd5acb68c8143a2036bdef8a8ac", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/MacroInstance.java", "commitBeforeChange": "3a1cfecdbaf260255be4fecd86ca0eff26e52893", "commitAfterChange": "0cb3ae74e24cfd9bac991dc46ef9e761d8bb6563", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void execute()", "signatureAfterChange": "     public void execute()", "diff": ["+        presentElements = new HashMap();", "+        presentElements = null;", "+        localProperties = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1667bcec18be0c295f4535db3b59141f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "45660d1b2d543689a2f6fbdc2f794263e7e7b85d", "commitAfterChange": "67fd3299e351531ef36c1678c191ccc2eaebb2c4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "signatureAfterChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "diff": ["-                        String name = (new File(destDir, subTargets[j])).getAbsolutePath();", "+                        String name = null;", "+                        if (!relative) {", "+                            name =", "+                                (new File(destDir, subTargets[j])).getAbsolutePath();", "+                        } else {", "+                            name = subTargets[j];", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2020dce61fde185f18c169a75bbdabdc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/UnknownElement.java", "commitBeforeChange": "1c3f4b1664951bb5e4c28de46b01dc50b0ee74bd", "commitAfterChange": "348ff7bdea3d7ca9373a0bc64f2da194a97c2aa6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void addChild(UnknownElement child)", "signatureAfterChange": "     public void addChild(UnknownElement child)", "diff": ["-        children.addElement(child);", "+        if (children == null) {", "+            children = new ArrayList();", "+        }", "+        children.add(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b2696f981ab8caefb7b71fdbc526050", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Delete.java", "commitBeforeChange": "dbf40e84c3662111689611818c57483f16b60c59", "commitAfterChange": "dd6d777fec28c68e88af5345564f70a1f515cc1c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void add(ResourceCollection rc)", "signatureAfterChange": "     public void add(ResourceCollection rc)", "diff": ["+        if (rc == null) {", "+            return;", "+        }", "+        rcs = (rcs == null) ? new Resources() : rcs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db84211f53c5df1b0133f909824407f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Manifest.java", "commitBeforeChange": "c2cfb84865b9315ee41695c59dd02dfe5f94ba0c", "commitAfterChange": "d1d47e9813e74c308be031e92d2b0b4f479e9c28", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public String read(BufferedReader reader) throws ManifestException, IOException", "signatureAfterChange": "         public String read(BufferedReader reader) throws ManifestException, IOException", "diff": ["-                        throw new ManifestException(\"Can't start an attribute with a continuation line \" + line);", "+                        if (name != null) {", "+                            // a continuation on the first line is a continuation of the name - concatenate", "+                            // this line and the name", "+                            name += line.substring(1);", "+                        }", "+                        else {", "+                            throw new ManifestException(\"Can't start an attribute with a continuation line \" + line);", "+                        }", "-                    attribute.addContinuation(line);", "+                    else {", "+                        attribute.addContinuation(line);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e591b5c7043bb25d2134b65c30a9314", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "e9d1a31709215862e50e8d95225bf2e46db7aa0d", "commitAfterChange": "771dd677203f6aea1bd040f604f3dac9e90a198b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public void add(ResourceCollection rc)", "signatureAfterChange": "     public synchronized void add(ResourceCollection rc)", "diff": ["-    public void add(ResourceCollection rc) {", "+    public synchronized void add(ResourceCollection rc) {", "+        resources = resources == null ? new Union() : resources;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33422210f658811669feff0a7be5f7f0", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/TypeSelector.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["-                if (TYPE_KEY.equalsIgnoreCase(paramname)) {", "+                if (paramname != null) {", "+                    paramname = paramname.toLowerCase(Locale.ENGLISH);", "+                }", "+                if (TYPE_KEY.equals(paramname)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "411423011e7b7d266ad9f3e96fe28ec2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "c007edc9da8892674744c1142401c5db41dd655f", "commitAfterChange": "d2eddd7e4d3a7509fbebf87e11c1186073316be6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected void addParentDirs(File baseDir, String entry,                                  ZipOutputStream zOut, String prefix)         throws IOException", "signatureAfterChange": "     protected void addParentDirs(File baseDir, String entry,                                  ZipOutputStream zOut, String prefix)         throws IOException", "diff": ["-            File f = new File(baseDir, dir);", "+            File f = null;", "+            if (baseDir != null) {", "+                f = new File(baseDir, dir);", "+            } else {", "+                f = new File(dir);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5706d4c24254d4bd9f9fa9ea648212cc", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Project.java", "commitBeforeChange": "37d7a6b6798a55e87f08273bb3b451939bb0dcb1", "commitAfterChange": "f00dea8ea73472d2a123aba0bce7b7886462775d", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "signatureAfterChange": "     private void fireMessageLoggedEvent(BuildEvent event, String message,                                         int priority)", "diff": ["+        if (message == null) {", "+            message = String.valueOf(message);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "581011ba95b432079c7baab6037b1195", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ide/VAJBuildInfo.java", "commitBeforeChange": "6cf09d26ffb60c6d9c780b92203ceb6b98b4182c", "commitAfterChange": "fcd6548344aa3f590435beff55530cfdb6983588", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 16, "signatureBeforeChange": " private Project getProject()", "signatureAfterChange": "     private Project getProject()", "diff": ["- */", "-private Project getProject() {", "-\treturn project;", "-}", "+     */", "+    private Project getProject() {", "+        if ( project == null ) {", "+            project = new Project();", "+        }", "+        return project;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "583b878150e70d6c40d70b1d29cf5f11", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ExecuteOn.java", "commitBeforeChange": "7c913046ab65cbb3d5a850408f779c0ef8f24cb4", "commitAfterChange": "45660d1b2d543689a2f6fbdc2f794263e7e7b85d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "signatureAfterChange": "     protected String[] getCommandline(String[] srcFiles, File[] baseDirs)", "diff": ["-            result[srcIndex+i] = ", "-                (new File(baseDirs[i], srcFiles[i])).getAbsolutePath();", "+            if (!relative) {", "+                result[srcIndex+i] = ", "+                    (new File(baseDirs[i], srcFiles[i])).getAbsolutePath();", "+            } else {", "+                result[srcIndex+i] = srcFiles[i];", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5929db6dfa99b3e8e7c04fb9368ff4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/antidote/org/apache/tools/ant/gui/customizer/DynamicCustomizer.java", "commitBeforeChange": "c87973d59c91244a8656cdc2ac5c1d84f9d47f34", "commitAfterChange": "dba8c836d0d1bd4f625deb9fb22aaa457410e4ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private PropertyEditor getEditorForProperty(PropertyDescriptor prop)", "signatureAfterChange": "     private PropertyEditor getEditorForProperty(PropertyDescriptor prop)", "diff": ["+        // In the worse case we resort to the generic editor for Object types.", "+        if(retval == null) {", "+            retval = PropertyEditorManager.findEditor(Object.class);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c970c4f9a9bfe4ed070e4ac0d28b48c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/PropertyFile.java", "commitBeforeChange": "db76442a872429c953236bd13ae59e4a51b10996", "commitAfterChange": "75899750abfdfbdcb60c2aba9f86e2f12364a867", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void readFile() throws BuildException", "signatureAfterChange": "      private void readFile() throws BuildException", "diff": ["-        // Create the PropertyFile", "-        properties = new Properties();", "+        if (useJDKProperties) {", "+            // user chose to use standard Java properties, which loose comments and layout", "+            properties = new Properties();", "+        } else {", "+            properties = new LayoutPreservingProperties();", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dfae4cf62dc0e3c38e68f6f224d2573", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/javacc/JavaCC.java", "commitBeforeChange": "9b79c03c8acbd5b4cd2940b8f44b3f4d4ce13bba", "commitAfterChange": "abd5987913a0a10ee5c1fbbe6232c468986d889b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Path createUserclasspath()", "signatureAfterChange": "      public Path createUserclasspath()", "diff": ["+        if (userclasspath == null) {", "+            userclasspath = new Path(project);", "+        }", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79cefdc93618daff83334d4f2ac4adde", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/tar/TarEntry.java", "commitBeforeChange": "cf4eecfe049df0083f246c278bddc1f540d394ad", "commitAfterChange": "a4445df98812dd1a266fa8bd8d835d92678f1049", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public TarEntry(String name, byte linkFlag)", "signatureAfterChange": "     public TarEntry(String name, byte linkFlag)", "diff": ["+        if (linkFlag == LF_GNUTYPE_LONGNAME) {", "+            magic = new StringBuffer(GNU_TMAGIC);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa3c7516fe072bd5a9ca54d01d2fedf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/net/FTP.java", "commitBeforeChange": "24fe82e4334d79bd0b4a683110ca036f56bc8125", "commitAfterChange": "2ca342fb2a9191f8e22abfc8fee9aaab94ea8496", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "     protected boolean isUpToDate(FTPClient ftp, File localFile,                                  String remoteFile)         throws IOException, BuildException", "signatureAfterChange": "     protected boolean isUpToDate(FTPClient ftp, File localFile,                                  String remoteFile)         throws IOException, BuildException", "diff": ["-        StringBuffer msg = new StringBuffer(\"   [\")", "-            .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))", "-            .append(\"] local\");", "+        StringBuffer msg;", "+        synchronized(TIMESTAMP_LOGGING_SDF) {", "+            msg = new StringBuffer(\"   [\")", "+                .append(TIMESTAMP_LOGGING_SDF.format(new Date(localTimestamp)))", "+                .append(\"] local\");", "+        }", "-        msg = new StringBuffer(\"   [\")", "-            .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))", "-            .append(\"] remote\");", "+        synchronized(TIMESTAMP_LOGGING_SDF) {", "+            msg = new StringBuffer(\"   [\")", "+                .append(TIMESTAMP_LOGGING_SDF.format(new Date(adjustedRemoteTimestamp)))", "+                .append(\"] remote\");", "+        }", "-            msg.append(\" - (raw: \")", "-                .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))", "-                .append(\")\");", "+            synchronized(TIMESTAMP_LOGGING_SDF) {", "+                msg.append(\" - (raw: \")", "+                    .append(TIMESTAMP_LOGGING_SDF.format(new Date(remoteTimestamp)))", "+                    .append(\")\");", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f703a9a72a4c46089304df74cbbd33a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/optional/AbstractScriptComponent.java", "commitBeforeChange": "14805c9fcdf4b354aed1f746c7076d49cb6634f8", "commitAfterChange": "a757f30ad3e2467dfebaa5b535a50108f810fd4b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void initScriptRunner()", "signatureAfterChange": "     protected void initScriptRunner()", "diff": ["-        getRunner().bindToComponent(this);", "+        if (runner != null) {", "+            return;", "+        }", "+        helper.setProjectComponent(this);", "+        runner = helper.getScriptRunner();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7a1c25b591f3ed46c3206d249f6985", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/helper/ProjectHelper2.java", "commitBeforeChange": "6aa8641eafee512136fd140957f859be03b10950", "commitAfterChange": "594d2dd6c891e638a4a9ce006a8167594b0cabf6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "signatureAfterChange": "         public void onStartElement(String uri, String tag, String qname,                                    Attributes attrs,                                    AntXmlContext context)             throws SAXParseException", "diff": ["+            Object parent=null;", "+            if( parentWrapper!=null ) {", "+                parent=parentWrapper.getProxy();", "+            }", "+", "+            if( parent != null ) {", "+                // nested elements. Backward compatibilitiy - only nested elements", "+                // are lower cased in the original processor", "+                qname=qname.toLowerCase( Locale.US );", "+                // XXX What about nested elements that are inside TaskContainers ?", "+                // We can't know that that we need lowercase until we know", "+                // parent is not a TaskContainer. Maybe this test should", "+                // be done in UnknownElement.", "+", "+                // Note: the original code seems to have a similar problem: the lowercase", "+                // conversion happens only inside ProjectHelper, if we know that the", "+                // parent is not TaskContainer. If the parent is not known - UE are used", "+                // and AFAIK there is no code to deal with that, so the conversion will be", "+                // different based on context ( if the enclosing task is taskdefed in target", "+                // or known at top level ).", "+            }", "+            ", "-", "-            Object parent=null;", "-            if( parentWrapper!=null ) {", "-                parent=parentWrapper.getProxy();", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb3fc2ac3fe958b46cd9c99f312e06b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Copy.java", "commitBeforeChange": "d0bbd2ece446e54bfc372e718a9d5c5a0f1640d6", "commitAfterChange": "b40d79d60a437f163f28f709c54ef95778a89b5f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected void scan(File fromDir, File toDir, String[] files, String[] dirs)", "signatureAfterChange": "     protected void scan(File fromDir, File toDir, String[] files, String[] dirs)", "diff": ["-        if (flatten) {", "+        if (mapperElement != null) {", "+            mapper = mapperElement.getImplementation();", "+        } else if (flatten) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c2e0013222890af2a25ec1c4ed36e5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "f6aee884e9c95d8d096315c7f0098ce264b04f8a", "commitAfterChange": "f0c61ad2f516641eca642c99ca35fe2ac7c58746", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "signatureAfterChange": "     protected int executeExternalCompile(String[] args, int firstFileName,                                          boolean quoteFiles)", "diff": ["-                    String userDirName = System.getProperty(\"user.dir\");", "-                    File userDir = new File(userDirName);", "+                    File userDir = getJavac().getTempdir();", "+                    if (userDir == null) {", "+                        String userDirName = System.getProperty(\"user.dir\");", "+                        userDir = new File(userDirName);", "+                    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9794572794b05c405327157ef5915612", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/ProjectHelperRepository.java", "commitBeforeChange": "8dd8b1bb02f9992909c7bd08f8922eb9f35a5052", "commitAfterChange": "fdc711e2e2805a41b766e9d1e07d83512d97f658", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public Object next()", "signatureAfterChange": "          public Object next()", "diff": ["-            Constructor c = (Constructor) nested.next();", "+            Constructor c;", "+            if (nested.hasNext()) {", "+                c = (Constructor) nested.next();", "+            } else {", "+                // last but not least, ant default project helper", "+                empty = true;", "+                c = PROJECTHELPER2_CONSTRUCTOR;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca1c8c49dcb225757bed16537bf30e4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/DependSet.java", "commitBeforeChange": "3fd5d9ba323b0d4cf83368085be5c9103d97f7f5", "commitAfterChange": "d8a41c88bee05a818356bf6f4f16f31ccc43940e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public DependSet()", "signatureAfterChange": "     public synchronized Union createSources()", "diff": ["-     **/", "-    public DependSet() {", "-    } //-- DependSet", "+     */", "+    public synchronized Union createSources() {", "+        sources = (sources == null) ? new Union() : sources;", "+        return sources;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba26d01e68e86979087409777506e56c", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Touch.java", "commitBeforeChange": "e119ca284ecf6289cfcec321ad389ca64bd49616", "commitAfterChange": "2ffd04693bce9c88c58f044cdab8dd0ca59f5ef9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected void touch() throws BuildException", "signatureAfterChange": "     protected void touch() throws BuildException", "diff": ["-            touch(file);", "+        } else {", "+            millis = System.currentTimeMillis();", "+        }", "+", "+        if (file != null) {", "+            touch(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71aa85e3c0ebf40cba8b4340538f03d", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/resources/Resources.java", "commitBeforeChange": "0f3a4ae2e2f52ddb7ea22dc8da6fd1b9e4ccbb20", "commitAfterChange": "ac27a40d3fd155a39880ed7bc9b1dfa044000e7f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public synchronized void add(ResourceCollection c)", "signatureAfterChange": "     public synchronized void add(ResourceCollection c)", "diff": ["+        }", "+        if (rc == null) {", "+            rc = new Vector();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cddbacfa4a3b81c46e61dd2c85054abf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/types/selectors/DepthSelector.java", "commitBeforeChange": "d58f4d380b325e8802b1fdf22bd87ead365d1397", "commitAfterChange": "58f0bb04db9c5c8a858d7a3be7719608f25f2f49", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setParameters(Parameter[] parameters)", "signatureAfterChange": "     public void setParameters(Parameter[] parameters)", "diff": ["-                if (MIN_KEY.equalsIgnoreCase(paramname)) {", "+                if (paramname != null) {", "+                    paramname = paramname.toLowerCase(Locale.ENGLISH);", "+                }", "+                if (MIN_KEY.equals(paramname)) {", "-                } else if (MAX_KEY.equalsIgnoreCase(paramname)) {", "+                } else if (MAX_KEY.equals(paramname)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf95f13e2cdd54c48ee968ad74baae52", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/DirectoryScanner.java", "commitBeforeChange": "37e97ef42d47f59a277025d51b1d13719a9e616a", "commitAfterChange": "b92e6b644f97b87083602a8ce4029cce01725674", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setBasedir(String basedir)", "signatureAfterChange": "     public void setBasedir(String basedir)", "diff": ["-        setBasedir(new File(basedir.replace('/', File.separatorChar).replace(", "-                '\\\\', File.separatorChar)));", "+        setBasedir(basedir == null ? (File) null", "+            : new File(basedir.replace('/', File.separatorChar).replace(", "+            '\\\\', File.separatorChar)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddacb5f039402ba4333a68c2cf291b25", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/ManifestTask.java", "commitBeforeChange": "7f78161f39c51c9315e11295014030b0debdef4a", "commitAfterChange": "709e8bb7a2132b80b51b7d2a9ec33c9df8c5db4f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-                isr = new InputStreamReader(fis, \"UTF-8\");", "+                if (encoding == null) {", "+                    isr = new InputStreamReader(fis, \"UTF-8\");", "+                } else {", "+                    isr = new InputStreamReader(fis, encoding);", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9467ee6dca893f2d94e9a3da2a19c7b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Zip.java", "commitBeforeChange": "e5fcb123200cbdf1faccaf2a57fdf8c1e272d8bb", "commitAfterChange": "ec2d68aa71e1dfc8503b4a74f04d8ebd9bc02561", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "     protected void cleanUp()", "signatureAfterChange": "     protected void cleanUp()", "diff": ["-    protected void cleanUp() {}", "+    protected void cleanUp() {", "+        addedDirs = new Hashtable();", "+        addedFiles = new Vector();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47e10e018a1a423de3a0a8651bced6f", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionContext.java", "commitBeforeChange": "ec9816997d704ba18f8209a3b8330275e5a61325", "commitAfterChange": "30b81779b563d12a1e28bebf934d5a5626da57ce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void log(String message, int level)", "signatureAfterChange": "     public void log(String message, int level)", "diff": ["-        ModelElement source = modelElement;", "-        if (modelElement == null) {", "+        Object source = modelElement;", "+        if (source == null) {", "+            if (source == null) {", "+                source = frame;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc45ddf5812e53a8deaf037cac8eef87", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/Frame.java", "commitBeforeChange": "65b70febb53b077317c4d678291f9af547c3d116", "commitAfterChange": "f9d1c1691c7e9d80b793f5178f6113c949fc2441", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 44, "signatureBeforeChange": "     protected void executeTargetTasks(String targetName)          throws ExecutionException", "signatureAfterChange": "     protected void executeTargetTasks(String targetName)          throws AntException", "diff": ["-         throws ExecutionException {", "+         throws AntException {", "+        checkRecursion(targetName);", "+        currentTarget = targetName;", "+", "+            currentTarget = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc9886f09fb175a273bf39d4498858b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/XmlLogger.java", "commitBeforeChange": "28d74d523882583b890c4929ac484d9e41c47dfc", "commitAfterChange": "244877e68b0cf5d4e6a6d7850c463bdd4d4cc373", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void buildFinished(BuildEvent event)", "signatureAfterChange": "     public void buildFinished(BuildEvent event)", "diff": ["-            FileOutputStream fos = new FileOutputStream(outFilename);", "-            out = new OutputStreamWriter(fos, \"UTF8\");", "+            OutputStream stream = outStream;", "+            if (stream == null) {", "+                stream = new FileOutputStream(outFilename);", "+            }", "+            out = new OutputStreamWriter(stream, \"UTF8\");"]}]}