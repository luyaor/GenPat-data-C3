{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "864186155a4c03450a5dec00481b165b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68d47cb495fe627222d78423272d8a43", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/condition/IsReferenceTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNotEnoughArgs()", "signatureAfterChange": "      @Test     public void testNotEnoughArgs()", "diff": ["+    @Test", "-        expectSpecificBuildException(\"isreference-incomplete\",", "-                                     \"refid attribute has been omitted\",", "-                                     \"No reference specified for isreference \"", "-                                     + \"condition\");", "+        try {", "+            buildRule.executeTarget(\"isreference-incomplete\");", "+            fail(\"Build exception expected: refid attirbute has been omitted\");", "+        } catch(BuildException ex) {", "+            assertEquals(\"No reference specified for isreference condition\", ex.getMessage());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8de9f1a8694879e2e1b0ee3813cd08d1", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/tests/junit/org/apache/tools/ant/taskdefs/JavaTest.java", "commitBeforeChange": "7eab7687db21f8a0c35b66dd9fae9e7c1178d5d5", "commitAfterChange": "b61c80746dd5df73899390826e197d2656784f91", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testJarNoFork()", "signatureAfterChange": "      @Test     public void testJarNoFork()", "diff": ["+    @Test", "-        expectBuildExceptionContaining(\"testJarNoFork\",", "-            \"parameter validation\",", "-            \"Cannot execute a jar in non-forked mode. \"", "-                + \"Please set fork='true'. \");", "+        try {", "+            buildRule.executeTarget(\"testJarNoFork\");", "+            fail(\"Build exception should have been thrown - parameter validation\");", "+        } catch (BuildException ex) {", "+            assertContains(\"Cannot execute a jar in non-forked mode. Please set fork='true'. \", ex.getMessage());", "+        }"]}]}