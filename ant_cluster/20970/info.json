{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ede1e242467591bcf27dea2e96a67022", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d759917e2ad0d7fdb061576226880a", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/HostInfo.java", "commitBeforeChange": "b4877ac5ef09c63fc1055c96b761da4282a17856", "commitAfterChange": "ff51ff34125ef0dcfe67905aecd83de7ee9a615a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private InetAddress selectBestAddress(InetAddress bestSoFar,             InetAddress current)", "signatureAfterChange": "      private InetAddress selectBestAddress(InetAddress bestSoFar,             InetAddress current)", "diff": ["-            if (current.isLoopbackAddress()) {", "+            if (current == null || current.isLoopbackAddress()) {", "-                if (best.isLoopbackAddress() || best.isLinkLocalAddress()) {", "+                // address with hostname resolved considered better than", "+                // address without hostname", "+                if (best.isLoopbackAddress()", "+                        || best.isLinkLocalAddress()", "+                        || !hasHostName(best)) {", "-                // current is a global address, and therefore best (at least", "-                // equally well)", "-                best = current;", "+                // current is a \"Global address\", considered better than ", "+                // site local (and better than link local, loopback)", "+                // address with hostname resolved considered better than", "+                // address without hostname", "+                if (best.isLoopbackAddress()", "+                        || best.isLinkLocalAddress()", "+                        || best.isSiteLocalAddress()", "+                        || !hasHostName(best)) {", "+                    best = current;", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23174d11391181fad48c73c83c3757ad", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java", "commitBeforeChange": "43430b54130b76767f98236e0681ba9a8582d35f", "commitAfterChange": "132fb32522052091d672208e63b418926e297bb2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "signatureAfterChange": "     protected Commandline setupModernJavacCommandlineSwitches(Commandline cmd)", "diff": ["-        } else if ((assumeJava15() || assumeJava16() || assumeJava17())", "+        } else if ((assumeJava15() || assumeJava16() || assumeJava17() || assumeJava18())", "-                                        : \"1.7 in JDK 1.7\",", "+                                        : (assumeJava17()", "+                                           ? \"1.7 in JDK 1.7\"", "+                                           : \"1.8 in JDK 1.8\"),", "+            } else if (assumeJava18() &&", "+                       (t.equals(\"1.5\") || t.equals(\"1.6\") || t.equals(\"1.7\"))) {", "+                setImplicitSourceSwitch(\"1.8 in JDK 1.8\", cmd, t, t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f069c80bab1951a187ef1c5a9e8c5d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/SQLExec.java", "commitBeforeChange": "30cf43949ad6bab8bc7e0ce87a543cbcf754ad7e", "commitAfterChange": "9de84f88c72bdead3bf9fbd09b581a11be839dd9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "      protected void runStatements(Reader reader, PrintStream out) throws SQLException, IOException", "signatureAfterChange": "      protected void runStatements(Reader reader, PrintStream out) throws SQLException, IOException", "diff": ["-                if ( line.length() > 2 ) {", "-                  if (line.substring(0,3).equalsIgnoreCase(\"REM\")) continue;", "-                }", "+                if (line.length() > 2 &&", "+                    line.substring(0,3).equalsIgnoreCase(\"REM\")) continue;", "-                if (sql.endsWith(delimiter)){", "+                if (delimiterType.equals(DelimiterType.NORMAL) && sql.endsWith(delimiter) ||", "+                    delimiterType.equals(DelimiterType.ROW) && line.equals(delimiter)) {", "-                    execSQL(sql.substring(0, sql.length()-1), out);", "+                    execSQL(sql.substring(0, sql.length() - delimiter.length()), out);"]}]}