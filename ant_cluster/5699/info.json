{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9a4b0d22ca18b2549e10a9671de5bb2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb9b066ee4422f504fd4e943daa855e2", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/optional/ejb/GenericDeploymentTool.java", "commitBeforeChange": "3a35c7d914d8b5a1f203561ae6f89afb5d2b80ec", "commitAfterChange": "24eb5693d6b7363262ea941cac63d15230aa1aab", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "signatureAfterChange": "     protected void writeJar(String baseName, File jarfile, Hashtable files,                             String publicId) throws BuildException", "diff": ["-                        throw new BuildException(\"Could not find default manifest: \" + defaultManifest,", "-                                                  getLocation());", "+                        throw new BuildException(\"Could not find \"", "+                            + \"default manifest: \" + defaultManifest);", "-                            entryName = entryName.substring(0, entryIndex) + File.separatorChar + innerfiles[i];", "+                            entryName = entryName.substring(0, entryIndex)", "+                                + File.separatorChar + innerfiles[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4f280c5bf00f2fa694fff0f071155c5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/IntrospectionHelper.java", "commitBeforeChange": "0e11c9965dbe23b0eec2b28babdec1b709398a37", "commitAfterChange": "2276012218ca9834464d9c52dffce0145fcbaa7f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "         void setObject(Project p, Object parent, Object value)                 throws InvocationTargetException, IllegalAccessException, BuildException", "signatureAfterChange": "         void setObject(Project p, Object parent, Object value)                 throws InvocationTargetException, IllegalAccessException, BuildException", "diff": ["-                        throw new BuildException(\"Attempt to set primitive \"", "-                                + method.getName().substring(4) + \" to null on \" + parent);", "+                        throw new BuildException(", "+                            \"Attempt to set primitive \"", "+                            + getPropertyName(method.getName(), \"set\")", "+                            + \" to null on \" + parent);", "-                    method.invoke(parent, new Object[] { value });", "+                    method.invoke(parent, new Object[] {value});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff02eb01dac811813cfdd24d4ea2cb9b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "proposal/mutant/src/java/antcore/org/apache/ant/antcore/execution/ExecutionDataService.java", "commitBeforeChange": "06ea1d271a3c3557c120e36c2df913050317cb53", "commitAfterChange": "42d4199104ee00135db43ba0d7b320244c666a3f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public String replacePropertyRefs(String value)          throws ExecutionException", "signatureAfterChange": "     public String replacePropertyRefs(String value)          throws ExecutionException", "diff": ["-                    throw new ExecutionException(\"Property \\\"\" + propertyName", "-                         + \"\\\" has not been set\");", "+                    if (!allowUnsetProperties) {", "+                        throw new ExecutionException(\"Property \\\"\"", "+                             + propertyName + \"\\\" has not been set\");", "+                    }", "+                    fragment = \"${\" + propertyName + \"}\";", "+                } else {", "+                    fragment = getDataValue(propertyName).toString();", "-                fragment = getDataValue(propertyName).toString();"]}]}