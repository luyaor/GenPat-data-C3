{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00650f9ef24c3508af235314e920664b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314996d5de7295d3e617851d9d7b3daf", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Execute.java", "commitBeforeChange": "ee344eb12509b4a69af0d52f285bbd7230f2c556", "commitAfterChange": "29cf33f78f16638f62f3471816c1879e0a8190f2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "       protected Process exec() throws IOException", "signatureAfterChange": "       protected Process exec() throws IOException", "diff": ["-        return Runtime.getRuntime().exec(getCommandline(), getEnvironment());", "+        String userDir = System.getProperty(\"user.dir\");", "+        try {", "+            if (myos.equals(\"Mac OS\") && workingDirectory != null) {", "+                System.getProperties().put(\"user.dir\", ", "+                                           workingDirectory.getAbsolutePath());", "+            }", "+", "+            return Runtime.getRuntime().exec(getCommandline(), getEnvironment());", "+        } finally {", "+            if (myos.equals(\"Mac OS\") && workingDirectory != null) {", "+                System.getProperties().put(\"user.dir\", userDir);", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a03259f4b56bab392a24c7f9b9f68d9", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/Target.java", "commitBeforeChange": "1885612e5d6666e09a655fbe4f1ee888e2e26f69", "commitAfterChange": "9585ec663a4244b8b75bdfe173c115189cbd08c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     public void execute() throws BuildException", "diff": ["-        if (!testIfAllows()) {", "-            project.log(this, \"Skipped because property '\" + project.replaceProperties(ifCondition)", "+        if (ifCondition != null && !ifCondition.eval()) {", "+            project.log(this, \"Skipped because property '\" + project.replaceProperties(ifString)", "-        if (!testUnlessAllows()) {", "+        if (unlessCondition != null && unlessCondition.eval()) {", "-                    + project.replaceProperties(unlessCondition) + \"' set.\", Project.MSG_VERBOSE);", "+                    + project.replaceProperties(unlessString) + \"' set.\", Project.MSG_VERBOSE);"]}]}