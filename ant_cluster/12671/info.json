{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa5275bb63c8efa8279059dd7dd1f744", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b21c0459c7f6f53007c5cb930f4ad48", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/Javac.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "+    @Override", "+\tpublic void execute() throws BuildException {", "-        String[] list = src.list();", "+        final String[] list = src.list();", "-            File srcDir = getProject().resolveFile(list[i]);", "+            final File srcDir = getProject().resolveFile(list[i]);", "-            DirectoryScanner ds = this.getDirectoryScanner(srcDir);", "-            String[] files = ds.getIncludedFiles();", "+            final DirectoryScanner ds = this.getDirectoryScanner(srcDir);", "+            final String[] files = ds.getIncludedFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ed992d8b882ad98c48d77783547b8a5", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void execute() throws BuildException", "signatureAfterChange": "     @Override \tpublic void execute() throws BuildException", "diff": ["-    public void execute() throws BuildException {", "+    @Override", "+\tpublic void execute() throws BuildException {", "-            } catch (UnsupportedEncodingException ue) {", "+            } catch (final UnsupportedEncodingException ue) {", "-            for (String typeName : getProject().getCopyOfDataTypeDefinitions()", "+            for (final String typeName : getProject().getCopyOfDataTypeDefinitions()", "-            for (String tName : getProject().getCopyOfTaskDefinitions().keySet()) {", "+            for (final String tName : getProject().getCopyOfTaskDefinitions().keySet()) {", "-        } catch (IOException ioe) {", "+        } catch (final IOException ioe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a06142d1a19b768f4ed723eb3853705b", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/AntClassLoader.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "     protected synchronized Class<?> loadClass(String classname, boolean resolve)             throws ClassNotFoundException", "signatureAfterChange": "     @Override \tprotected synchronized Class<?> loadClass(final String classname, final boolean resolve)             throws ClassNotFoundException", "diff": ["-    protected synchronized Class<?> loadClass(String classname, boolean resolve)", "+    @Override", "+\tprotected synchronized Class<?> loadClass(final String classname, final boolean resolve)", "-            } catch (ClassNotFoundException cnfe) {", "+            } catch (final ClassNotFoundException cnfe) {", "-            } catch (ClassNotFoundException cnfe) {", "+            } catch (final ClassNotFoundException cnfe) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e05c9bf535521b59285c8fd8ff174d17", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/taskdefs/AntStructure.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          public void printHead(PrintWriter out, Project p, Hashtable<String, Class<?>> tasks,                 Hashtable<String, Class<?>> types)", "signatureAfterChange": "          @Override \t\tpublic void printHead(final PrintWriter out, final Project p, final Hashtable<String, Class<?>> tasks,                 final Hashtable<String, Class<?>> types)", "diff": ["-        public void printHead(PrintWriter out, Project p, Hashtable<String, Class<?>> tasks,", "-                Hashtable<String, Class<?>> types) {", "+        @Override", "+\t\tpublic void printHead(final PrintWriter out, final Project p, final Hashtable<String, Class<?>> tasks,", "+                final Hashtable<String, Class<?>> types) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25580511dc23e63789de58e30ada2d4", "repository": "https://git-wip-us.apache.org/repos/asf/ant.git", "fileName": "src/main/org/apache/tools/ant/util/LayoutPreservingProperties.java", "commitBeforeChange": "bf6026a147e879837eaad2a16348ae2162829867", "commitAfterChange": "1b76f1b6dae88a7a158e50222bb19f6f5ca26d70", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void load(InputStream inStream) throws IOException", "signatureAfterChange": "      @Override \tpublic void load(final InputStream inStream) throws IOException", "diff": ["-    public void load(InputStream inStream) throws IOException {", "-        String s = readLines(inStream);", "-        byte[] ba = s.getBytes(ResourceUtils.ISO_8859_1);", "-        ByteArrayInputStream bais = new ByteArrayInputStream(ba);", "+    @Override", "+\tpublic void load(final InputStream inStream) throws IOException {", "+        final String s = readLines(inStream);", "+        final byte[] ba = s.getBytes(ResourceUtils.ISO_8859_1);", "+        final ByteArrayInputStream bais = new ByteArrayInputStream(ba);"]}]}