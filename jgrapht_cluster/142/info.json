{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fca3cd1a89c72cb9f9492de69aebfd28", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bf0a98ea648c857eba59a694c9c749d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/FloydWarshallShortestPathsTest.java", "commitBeforeChange": "c10692c8825bd6a23a80be695fc74f32cb5058c3", "commitAfterChange": "c164d5ff2c90e3264f68d1cabaf47b148cefd48c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testCompareWithDijkstra()", "signatureAfterChange": "      public void testCompareWithDijkstra()", "diff": ["-            SimpleDirectedGraph<Integer, DefaultWeightedEdge> directed =", "-                new SimpleDirectedGraph<Integer, DefaultWeightedEdge>(", "-                    DefaultWeightedEdge.class);", "-", "+            //Generate directed graph", "+            SimpleDirectedGraph<Integer, DefaultWeightedEdge> directed =new SimpleDirectedGraph<Integer, DefaultWeightedEdge>(DefaultWeightedEdge.class);", "-            FloydWarshallShortestPaths<Integer, DefaultWeightedEdge> fw =", "-                new FloydWarshallShortestPaths<Integer, DefaultWeightedEdge>(", "-                    directed);", "+            FloydWarshallShortestPaths<Integer, DefaultWeightedEdge> fw =new FloydWarshallShortestPaths<Integer, DefaultWeightedEdge>(directed);", "-                    assertTrue(", "-                        (Math.abs(dijSp - fwSp) < .01)", "-                        || (Double.isInfinite(fwSp)", "-                            && Double.isInfinite(dijSp)));", "+                    assertTrue( (Math.abs(dijSp - fwSp) < .01) || (Double.isInfinite(fwSp) && Double.isInfinite(dijSp)));", "+                    GraphPath<Integer, DefaultWeightedEdge> path=fw.getShortestPath(v1, v2);", "+                    if(path != null)", "+                        this.verifyPath(directed, path, fw.shortestDistance(v1, v2));", "-            SimpleGraph<Integer, DefaultWeightedEdge> undirected =", "-                new SimpleGraph<Integer, DefaultWeightedEdge>(", "-                    DefaultWeightedEdge.class);", "-", "+            //Generate Undirected graph", "+            SimpleGraph<Integer, DefaultWeightedEdge> undirected =new SimpleGraph<Integer, DefaultWeightedEdge>(DefaultWeightedEdge.class);", "-                    assertTrue(", "-                        (Math.abs(dijSp - fwSp) < .01)", "-                        || (Double.isInfinite(fwSp)", "-                            && Double.isInfinite(dijSp)));", "+                    assertTrue((Math.abs(dijSp - fwSp) < .01) || (Double.isInfinite(fwSp) && Double.isInfinite(dijSp)));", "+                    GraphPath<Integer, DefaultWeightedEdge> path=fw.getShortestPath(v1, v2);", "+                    if(path != null)", "+                        this.verifyPath(undirected, path, fw.shortestDistance(v1, v2));", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6cc73e364ba7ff23c3d42dd79d68c71", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/FloydWarshallShortestPathsTest.java", "commitBeforeChange": "c10692c8825bd6a23a80be695fc74f32cb5058c3", "commitAfterChange": "c164d5ff2c90e3264f68d1cabaf47b148cefd48c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void testWeightedEdges()", "signatureAfterChange": "          public void testWeightedEdges()", "diff": ["-    \tSimpleGraph<String, DefaultWeightedEdge> weighted = ", "-    \t\tnew SimpleGraph<String, DefaultWeightedEdge>(DefaultWeightedEdge.class);", "+    \tSimpleDirectedGraph<String, DefaultWeightedEdge> weighted =", "+    \t\tnew SimpleDirectedGraph<String, DefaultWeightedEdge>(DefaultWeightedEdge.class);", "-    \tweighted.setEdgeWeight(weighted.addEdge(\"a\", \"b\"), 5.0);", "-    \tFloydWarshallShortestPaths<String, DefaultWeightedEdge> fw =", "-                new FloydWarshallShortestPaths<String, DefaultWeightedEdge>(weighted);", "+        DefaultWeightedEdge edge=weighted.addEdge(\"a\", \"b\");", "+    \tweighted.setEdgeWeight(edge, 5.0);", "+    \tFloydWarshallShortestPaths<String, DefaultWeightedEdge> fw =new FloydWarshallShortestPaths<String, DefaultWeightedEdge>(weighted);", "+        GraphPath<String, DefaultWeightedEdge> path=fw.getShortestPath(\"a\", \"b\");", "+        assertNotNull(path);", "+        assertEquals(Arrays.asList(edge), path.getEdgeList());", "+        assertEquals(\"a\", path.getStartVertex());", "+        assertEquals(\"b\", path.getEndVertex());", "+        assertEquals(5.0, path.getWeight());", "+        assertEquals(weighted, path.getGraph());", "+        assertNull(fw.getShortestPath(\"b\", \"a\"));"]}]}