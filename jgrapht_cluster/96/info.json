{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5edb2eabe665e3727cd089ce347bca53", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa7ecac442a33e2e3d089cdee3f25ec", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/heap/AbstractHeap.java", "commitBeforeChange": "ede00ba6ca48a7a81231a62519a30fabb26ae338", "commitAfterChange": "f63e1142cae73862c9c4f7b6ce46225b40f3ef86", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected final boolean isSmaller(Object x, Object y)", "signatureAfterChange": "     protected final boolean isSmaller( Object x, Object y )", "diff": ["-    protected final boolean isSmaller(Object x, Object y) {", "-        if (_comp != null) return _comp.compare(x, y) * _compareFactor < 0;", "-        return ((Comparable)x).compareTo(y) * _compareFactor < 0;", "+     */", "+    protected final boolean isSmaller( Object x, Object y ) {", "+        if( _comp != null ) {", "+            return _comp.compare( x, y ) * _compareFactor < 0;", "+        }", "+", "+        return ( (Comparable) x ).compareTo( y ) * _compareFactor < 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e5c50dced429f37c8c89046dfee9cf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "b338dc522beb4643906288a4c91571a7ab1b1795", "commitAfterChange": "8b53e2969b312c1e6f35e85a43bc0437bf413b79", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r     public boolean isChordal()", "signatureAfterChange": "     public boolean isChordal()", "diff": ["-     */\r", "-    public boolean isChordal()\r", "-    {\r", "-        if (chordalGraph == null)\r", "-            computeMinimalTriangulation();\r", "-\r", "-        return (chordalGraph.edgeSet().size() == graph.edgeSet().size());\r", "-    }\r", "+     */", "+    public boolean isChordal()", "+    {", "+        if (chordalGraph == null) {", "+            computeMinimalTriangulation();", "+        }", "+", "+        return (chordalGraph.edgeSet().size() == graph.edgeSet().size());", "+    }"]}]}