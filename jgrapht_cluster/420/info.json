{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6424f919d463f9d01e08947a5ead923", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d466bce012a65ab2ccd7dd00409fcd9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     void handleJGraphInsertedEdge(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     void handleJGraphInsertedEdge(org.jgraph.graph.Edge jEdge)", "diff": ["-            E jtEdge =", "-                m_jtGraph.getEdgeFactory().createEdge(jtSource, jtTarget);", "+            E jtEdge = m_jtGraph.addEdge(jtSource, jtTarget);", "-            boolean added = m_jtGraph.addEdge(jtEdge);", "-", "-            if (added) {", "+            if (jtEdge != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0fe8bef130e868fc81aa16b4b810290", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean removeJGraphEdge( org.jgraph.graph.Edge jEdge )", "signatureAfterChange": "     void handleJGraphRemovedEdge( org.jgraph.graph.Edge jEdge )", "diff": ["-    protected boolean removeJGraphEdge( org.jgraph.graph.Edge jEdge ) {", "-        if( !m_cellToEdge.containsKey( jEdge ) ) {", "-            return false;", "+    void handleJGraphRemovedEdge( org.jgraph.graph.Edge jEdge ) {", "+        if( m_cellToEdge.containsKey( jEdge ) ) {", "+            org._3pq.jgrapht.Edge jtEdge =", "+                (org._3pq.jgrapht.Edge) m_cellToEdge.get( jEdge );", "+    ", "+            m_jtGraph.removeEdge( jtEdge );", "+    ", "+            m_cellToEdge.remove( jEdge );", "+            m_edgeToCell.remove( jtEdge );", "-", "-        org._3pq.jgrapht.Edge jtEdge =", "-            (org._3pq.jgrapht.Edge) m_cellToEdge.get( jEdge );", "-", "-        m_jtEdgesBeingRemoved.add( jtEdge );", "-", "-        boolean result = m_jtGraph.removeEdge( jtEdge );", "-", "-        m_cellToEdge.remove( jEdge );", "-        m_edgeToCell.remove( jtEdge );", "-", "-        return result;"]}]}