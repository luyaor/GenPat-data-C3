{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1dc3717f382f643d948e468bc207b13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad9f1edcfa898a271431c9df515144a9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/RankingPathElementList.java", "commitBeforeChange": "94e0b9cdbd464a6b60ddbb8cd6d473a32e102eaf", "commitAfterChange": "90d794caa7b37ed092890eb859473902af3157bc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean isAlreadyAdded(RankingPathElement<V, E> pathElement)", "signatureAfterChange": "      private boolean isNotValidPath(         RankingPathElement<V, E> prevPathElement,         E edge)", "diff": ["-", "-    private boolean isAlreadyAdded(RankingPathElement<V, E> pathElement)", "-    {", "-        for (int i = 0; i <= (size() - 1); i++) {", "-            RankingPathElement<V, E> yPathElement = get(i);", "-            RankingPathElement<V, E> pathElementToTest = pathElement;", "-            if (!isDifferent(yPathElement, pathElementToTest)) {", "-                return true;", "-            }", "-        }", "-        return false;", "-    }", "+", "+    private boolean isNotValidPath(", "+        RankingPathElement<V, E> prevPathElement,", "+        E edge)", "+    {", "+        return !isSimplePath(prevPathElement, edge)", "+            || isGuardVertexDisconnected(prevPathElement);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99a132d0635f3e845df3657a89c7d72", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void breadthFirstSearch()", "signatureAfterChange": "      private void breadthFirstSearch()", "diff": ["-            vertexExtended0(v).visited  = false;", "-            vertexExtended0(v).lastArcs = null;", "+            extendedVertex(v).visited  = false;", "+            extendedVertex(v).lastArcs = null;", "-            for (int i = 0; i < ux.outgoing.size(); ++i) {", "-                EdgeExtension ex = (EdgeExtension) ux.outgoing.get(i);", "+            for (EdgeExtension ex : ux.<EdgeExtension>getOutgoing()) {", "-                    VertexExtension vx = (VertexExtension) ex.target;", "+                    VertexExtension vx = ex.getTarget();"]}]}