{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fae42f9f58a59ef78d47049a675390b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119de4c40ec6153201f7f8b266d7d7d6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathCostTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testKShortestPathCompleteGraph4()", "signatureAfterChange": "      public void testKShortestPathCompleteGraph4()", "diff": ["-        List pathElements = pathFinder.getPathElements(\"v3\");", "+        List pathElements = pathFinder.getPaths(\"v3\");", "-        RankingPathElement pathElement =", "-            (RankingPathElement) pathElements.get(0);", "+        GraphPath pathElement =", "+            (GraphPath) pathElements.get(0);", "-            pathElement.createEdgeListPath());", "+            pathElement.getEdgeList());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f9252c8b1be06011f62e5a05cfb957", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathCostTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testKShortestPathCosts(Graph graph)", "signatureAfterChange": "      public void testKShortestPathCosts(Graph graph)", "diff": ["-                        pathFinder.getPathElements(targetVertex);", "-                    RankingPathElement pathElement =", "-                        (RankingPathElement) pathElements.get(0);", "+                        pathFinder.getPaths(targetVertex);", "+                    GraphPath pathElement =", "+                        (GraphPath) pathElements.get(0);", "-                        pathElement = (RankingPathElement) pathElements.get(i);", "+                        pathElement = (GraphPath) pathElements.get(i);"]}]}