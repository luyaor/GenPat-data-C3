{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9877dd772188e317afa3352877e255dc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f50a792b78eda54e525e23c2aef970", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "9f066dbc1c0acfa6b6a5b9aac03e377da0f7b3c9", "commitAfterChange": "fff8ac9b636ecbd13c858f89d317b12b4d45b6c5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Deque<Object> getStack()", "signatureAfterChange": "     public Deque<Object> getStack()", "diff": ["-    protected Deque<Object> getStack()", "+    public Deque<Object> getStack()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065e1be61b981a2d2aeb3ed3b28eb0f5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-                + \" org._3pq.jgrapht.generate.RandomGraphGenerator.DefaultEdgeTopologyFactory\");", "+                + \" org.jgrapht.generate.RandomGraphGenerator.DefaultEdgeTopologyFactory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a14997b5ef1a17eabedc0bca84d5502", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/util/AllUtilTests.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        TestSuite suite = new TestSuite(\"Test for org._3pq.jgrapht.util\");", "+        TestSuite suite = new TestSuite(\"Test for org.jgrapht.util\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a1ebb2847861eecdabe6a3534f844a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e2ce52f97231f04450d01642e3c9f2b5b20a6513", "commitAfterChange": "2835384ec18863262b057367862a0d2ada26d97b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractBaseGraph(         EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "signatureAfterChange": "     protected AbstractBaseGraph(         EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "diff": ["-    public AbstractBaseGraph(", "+    protected AbstractBaseGraph("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17090ab03cd96844c9c21efbaf4755b6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "5ad133ca974bee3f583f3037c1c5c902d0c89ecf", "commitAfterChange": "674a0a942965578d6c9d23a87f5c2c2d55185248", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "     @Test     public void testHugeGraph()", "signatureAfterChange": "     @Test     public void testHugeGraph()", "diff": ["-        int n = 1000;", "+        int n = 800;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29050cc57331d6dd0eb8c4c6204df9aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "9d6fedc5ffc354b2230877ddc85b0e6834412bd1", "commitAfterChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private SubgraphIsomorphismRelation<V, E> matchAndCheck()", "signatureAfterChange": "      protected SubgraphIsomorphismRelation<V, E> matchAndCheck()", "diff": ["-    private SubgraphIsomorphismRelation<V, E> matchAndCheck() {", "+    protected SubgraphIsomorphismRelation<V, E> matchAndCheck() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322b3a22e1052a5dda6e1f9779f0b828", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "9d6fedc5ffc354b2230877ddc85b0e6834412bd1", "commitAfterChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void showLog(String method, String str)", "signatureAfterChange": "     protected void showLog(String method, String str)", "diff": ["-    private void showLog(String method, String str)    {", "+    protected void showLog(String method, String str)    {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f27a08256ea9e20341d52496b0fce59", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/util/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "commitAfterChange": "73e96190e730d809ebfbbdace077df28c1f013ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testOddEvenGroup()", "signatureAfterChange": "          public void testOddEvenGroup()", "diff": ["+    ", "+        //\" expecting two seperate groups , one with odd , one with even nubmers\");", "-            2,", "-            \" expecting two seperate groups , one with odd , one with even nubmers\");", "+            2);", "+        //  \" expecting 3 seperate groups , one for each mod3\");  ", "-            3,", "-            \" expecting 3 seperate groups , one for each mod3\");", "+            3);", "+          "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b4fc253d145af60dffb89c6c608280", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "e2ce52f97231f04450d01642e3c9f2b5b20a6513", "commitAfterChange": "2835384ec18863262b057367862a0d2ada26d97b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractGraph()", "signatureAfterChange": "     protected AbstractGraph()", "diff": ["-    public AbstractGraph()", "+    protected AbstractGraph()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b2336621f2e33fdf823c7a236c3f76", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "472f0bb505c636e46190385389321591507b03a6", "commitAfterChange": "c7e255b134eb3074adca695ec600547ec97bf100", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public EdmondsKarpMaximumFlow(DirectedGraph<V, E> network,         double epsilon)", "signatureAfterChange": "     public EdmondsKarpMaximumFlow(DirectedGraph<V, E> network,         double epsilon)", "diff": ["-                    \"capacities must be non-negative\");", "+                    \"invalid capacity (must be non-negative)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4661b2f35913588a2bde5653f60b0ea5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/generate/AllGenerateTests.java", "commitBeforeChange": "95850a4f2cb7019c760f98041693444cd6d1d6ad", "commitAfterChange": "995fc6ee6a3ac87f11f9e1fe3e4d96f30f7c308a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite =", "-            new TestSuite( \"Tests for org._3pq.jgrapht.generate.\" );", "+        TestSuite suite = new TestSuite(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "515458af03607e772b3bf0e477f4e641", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "22927827f36ad9b2cef7c5f5670c4d2598840023", "commitAfterChange": "0c62b9bea6ac0caeb6bc520d87708bceca0054dc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      protected Graph<V, E> getGraph()", "signatureAfterChange": "     public Graph<V, E> getGraph()", "diff": ["-    protected Graph<V, E> getGraph()", "+     */", "+    public Graph<V, E> getGraph()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53396e7aff0bd1c0218cdc5d3f15f6fd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testGarbageStringInvalidFirstLine()", "signatureAfterChange": "     public void testGarbageStringInvalidFirstLine()", "diff": ["-      testGarbage(input, \"not enough parts on first line\");", "+      testGarbage(input, \"Invalid Header\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b95f823660b0301495b37d2ebd5482", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testGarbageStringEnoughLines()", "signatureAfterChange": "     public void testGarbageStringEnoughLines()", "diff": ["-      testGarbage(input, \"unknown graph type\");", "+      testGarbage(input, \"Invalid Header\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722f38aebac36e056a23e90ab86619dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/edge/AllEdgeTests.java", "commitBeforeChange": "2a809e716ca8dd50187f8762d1fe3518ca90c92f", "commitAfterChange": "095b52b78534275d3325ac858e02c325eca0b2e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite = new TestSuite( \"TestSuite for all edge test\" );", "+        TestSuite suite = new TestSuite( \"TestSuite for all edge tests\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a373afd4f0c63b02cf70dcbbc54d1a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/edge/AllEdgeTests.java", "commitBeforeChange": "95850a4f2cb7019c760f98041693444cd6d1d6ad", "commitAfterChange": "995fc6ee6a3ac87f11f9e1fe3e4d96f30f7c308a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite = new TestSuite( \"TestSuite for all edge tests\" );", "+        TestSuite suite = new TestSuite(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "753ef59fbe154eb2673500b97b0f6e1f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/StringNameProvider.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "      protected StringNameProvider()", "signatureAfterChange": "      public StringNameProvider()", "diff": ["-    protected StringNameProvider()", "+    public StringNameProvider()", "-        // obtain singleton instance through factory method"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a6c6c953d44ec392013b59cf9973789", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "9d6fedc5ffc354b2230877ddc85b0e6834412bd1", "commitAfterChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private boolean areCompatibleEdges(int v1, int v2, int u1, int u2)", "signatureAfterChange": "     protected boolean areCompatibleEdges(int v1, int v2, int u1, int u2)", "diff": ["-    private boolean areCompatibleEdges(int v1, int v2, int u1, int u2) {", "+    protected boolean areCompatibleEdges(int v1, int v2, int u1, int u2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e705a1a362b9ba1f6cb74655543018", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/SimpleGraphPathTest.java", "commitBeforeChange": "f6aa0f82d152c39f6790bc8a988d199ddf8d6d5b", "commitAfterChange": "263cf8512df3d55c8ea6cb1ee1ce3007847d0416", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          public void testPathWeight()", "signatureAfterChange": "          public void testPathWeight()", "diff": ["-        assertEquals(2.0, path.getWeight());", "+        assertEquals(1.0, path.getWeight());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f665316540b974949595db2bb305f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "1df4f6ec05a16b739e7739b1310c6980095dbcdd", "commitAfterChange": "938dd84db7cb09a097ad013d99329fa660a0391c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          @Override         public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["-            return prototype.toString() + String.format(\" { F/CAP: %d / %d } \", flow, capacity);", "+            return prototype.toString() + String.format(\" { F/CAP: %f / %f } \", flow, capacity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9915f4440f3e4666403d8d822a1e4861", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "b417c7bfb816527977f131839428e669645f0a3a", "commitAfterChange": "4f6ca6e1104d843a5cf0e8ce6dc342557c12545a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public WeightedGraph create(  )", "signatureAfterChange": "       private WeightedGraph create(  )", "diff": ["-    public WeightedGraph create(  ) {", "+", "+    private WeightedGraph create(  ) {", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5ffe8fedbf809ce996c4998836a5f3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/demo/PerformanceDemo.java", "commitBeforeChange": "a1f23a3100510ec39002be3afaff305ba3ad818a", "commitAfterChange": "b76ad743469fbc5f4b71d3a57c1c2abdaeec2142", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String [] args)", "signatureAfterChange": "     public static void main(String [] args)", "diff": ["-        System.out.print(\"press any key to free memory and finish...\");", "+        System.out.print(\"press enter to free memory and finish...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a819a17c5ea7e05416bb5ced78ddbf2b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/IgnoreDirectionTest.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      String getExpectedStr1()", "signatureAfterChange": "      String getExpectedStr1()", "diff": ["-        return \"4,9,7,8,5,6,1,3,2\";", "+        return \"4,9,7,8,2,1,3,6,5\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8fc6285e148f5e72c0c96b3a64a9fe7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "915acf67bde336fce1aee298fe506b6a9a961b70", "commitAfterChange": "1765efbe26afab29ef36b63b040e3f3e76836c78", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testNonConfiguredUpdate()", "signatureAfterChange": "     public void testNonConfiguredUpdate()", "diff": ["-                     + \"a -- b;\\n\"", "+                     + \"a -- b // this is before the attributes for this test\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb9fb37e96125290f74a451e185074e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/AllAlgTests.java", "commitBeforeChange": "95850a4f2cb7019c760f98041693444cd6d1d6ad", "commitAfterChange": "995fc6ee6a3ac87f11f9e1fe3e4d96f30f7c308a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite = new TestSuite( \"Test for org._3pq.jgrapht\" );", "+        TestSuite suite = new TestSuite(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b7059ad951eb112f054d439b39e87f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/IgnoreDirectionTest.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      String getExpectedStr2()", "signatureAfterChange": "      String getExpectedStr2()", "diff": ["-        return \"4,9,7,8,5,6,1,3,2,orphan\";", "+        return \"4,9,7,8,2,1,3,6,5,orphan\";", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3eead1f2356ead580ba3b4609a17200", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testGarbageStringNotEnoughLines()", "signatureAfterChange": "     public void testGarbageStringNotEnoughLines()", "diff": ["-      testGarbage(input, \"Dot string was invalid\");", "+      testGarbage(input, \"Invalid Header\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c580eceb23c8337d13cf7f7d978c3400", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void performanceTestOnRandomGraphs()         throws Exception", "signatureAfterChange": "     public void performanceTestOnRandomGraphs()         throws Exception", "diff": ["-            new String [] { // \"org._3pq.jgrapht.graph.SimpleGraph\" ,", "-                \"org._3pq.jgrapht.graph.SimpleDirectedGraph\",", "-                \"org._3pq.jgrapht.graph.DefaultDirectedGraph\",", "-                // \"org._3pq.jgrapht.graph.Multigraph\",", "-                // \"org._3pq.jgrapht.graph.Pseudograph\"", "+            new String [] { // \"org.jgrapht.graph.SimpleGraph\" ,", "+                \"org.jgrapht.graph.SimpleDirectedGraph\",", "+                \"org.jgrapht.graph.DefaultDirectedGraph\",", "+                // \"org.jgrapht.graph.Multigraph\",", "+                // \"org.jgrapht.graph.Pseudograph\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d620a362f786ac1c64b1e9b99a5a7c35", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "9d6fedc5ffc354b2230877ddc85b0e6834412bd1", "commitAfterChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private SubgraphIsomorphismRelation<V, E> match()", "signatureAfterChange": "     protected SubgraphIsomorphismRelation<V, E> match()", "diff": ["-    private SubgraphIsomorphismRelation<V, E> match() {", "+    protected SubgraphIsomorphismRelation<V, E> match() {", "-", "-        // s.resetAddVertexes();", "+        "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70f639861cdaef5fe683d03d911c40d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/AllGraphTests.java", "commitBeforeChange": "95850a4f2cb7019c760f98041693444cd6d1d6ad", "commitAfterChange": "995fc6ee6a3ac87f11f9e1fe3e4d96f30f7c308a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite = new TestSuite( \"TestSuite for all graph tests\" );", "+        TestSuite suite = new TestSuite(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8ec4fbf0ac53fc0fc50d4fbde4fdfe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/GenericGraphsTest.java", "commitBeforeChange": "797bb93ca261451d93f28b9bb8848ce95b78d1c9", "commitAfterChange": "4c5b6aab4b3adff5cfc76ea4a4e59eeac27854b9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testAlissaHacker()", "signatureAfterChange": "      public void testAlissaHacker()", "diff": ["-        assertEquals(\"Alissa P. Hacker\", s);", "+        assertEquals(\"Alissa P. Hacker approves the edge from a to b\", s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0309ed3be096388cfedcc0b2c0f66e0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "54d7e11e1ecaccdb80a1aeb9ea081aac7e5d3e46", "commitAfterChange": "7acd462dd9b27baaee05cd7cb1743331738444cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void buildInternal()", "signatureAfterChange": "      private void buildInternal()", "diff": ["-    protected void buildInternal()", "+    private void buildInternal()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4513f82740298c1d47a17b61b6dfc74", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/util/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "commitAfterChange": "73e96190e730d809ebfbbdace077df28c1f013ae", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testComparatorChain()", "signatureAfterChange": "     public void testComparatorChain()", "diff": ["+        // expecting six seperate groups , with the different mod6 values\");", "-            6,", "-            \" expecting six seperate groups , with the different mod6 values\");", "+            6);", "+            ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6914a73c966a9f5a231a43bbdd75966", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "9d6fedc5ffc354b2230877ddc85b0e6834412bd1", "commitAfterChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean areCompatibleVertexes(int v1, int v2)", "signatureAfterChange": "     protected boolean areCompatibleVertexes(int v1, int v2)", "diff": ["-    private boolean areCompatibleVertexes(int v1, int v2) {", "+    protected boolean areCompatibleVertexes(int v1, int v2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed64b6f7d7606178ec7f1742312a5683", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AllTraverseTests.java", "commitBeforeChange": "95850a4f2cb7019c760f98041693444cd6d1d6ad", "commitAfterChange": "995fc6ee6a3ac87f11f9e1fe3e4d96f30f7c308a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite = new TestSuite( \"Test for org._3pq.jgrapht\" );", "+        TestSuite suite = new TestSuite(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f16645c4ef2a68d6eca962f55fbd3dd7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "9d6fedc5ffc354b2230877ddc85b0e6834412bd1", "commitAfterChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public SubgraphIsomorphismRelation<V, E> getCurrentMatching()", "signatureAfterChange": "      protected SubgraphIsomorphismRelation<V, E> getCurrentMatching()", "diff": ["-    public SubgraphIsomorphismRelation<V, E> getCurrentMatching() {", "+    protected SubgraphIsomorphismRelation<V, E> getCurrentMatching() {"]}]}