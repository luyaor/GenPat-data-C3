{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0851f6fb6358473c329a51fb32828618", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4e34a42e08626f75326bce290a9518", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "5b6751e5494b66b49d141500678db426b216fcf2", "commitAfterChange": "1d2ab4b12a8998ab9a349df2fc357a5c0053816f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["-        // empty queue would indicate presence of cycles (no roots found)", "-        assert (!queue.isEmpty());", "+        if (!dg.vertexSet().isEmpty()) {", "+            // empty queue for non-empty graph would indicate presence of", "+            // cycles (no roots found)", "+            assert (!queue.isEmpty());", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d7299bff1da10941bb00b2e7a8bbd6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "b7ec9c8cf1ee99b3f7f4494555f5785da1d21313", "commitAfterChange": "08b08c0b2822724e2601b4cdd3ab551e67b1d9bc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["-        if (!dg.vertexSet().isEmpty()) {", "-            // empty queue for non-empty graph would indicate presence of", "-            // cycles (no roots found)", "-            assert (!queue.isEmpty());", "-        }", "+        // empty queue for non-empty graph would indicate presence of", "+        // cycles (no roots found)", "+        assert dg.vertexSet().isEmpty() || !queue.isEmpty();"]}]}