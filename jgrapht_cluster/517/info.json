{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16fd216fea6a8dca2e606355b0ad3219", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bcd086cbbe962f83bbf386694e8fa91", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphTests.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static <V, E extends Edge<V>> boolean isTree(Graph<V,E> g)", "signatureAfterChange": "      public static <V, E> boolean isTree(Graph<V,E> g)", "diff": ["-    public static <V, E extends Edge<V>> boolean isTree(Graph<V,E> g)", "+    public static <V, E> boolean isTree(Graph<V,E> g)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6ee61d606882ede3a808e0049d8c9d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspectorByType(         int type,         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "signatureAfterChange": "     public static <V,E> GraphIsomorphismInspector createIsomorphismInspectorByType(         int type,         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "diff": ["-    public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspectorByType(", "+    public static <V,E> GraphIsomorphismInspector createIsomorphismInspectorByType("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a805fe919f6534cc8f69846843afde1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected static <V,E extends Edge<V>> GraphIsomorphismInspector         createTopologicalExhaustiveInspector(                 Graph<V,E> graph1,                 Graph<V,E> graph2,                 EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,                 EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "signatureAfterChange": "     protected static <V,E> GraphIsomorphismInspector         createTopologicalExhaustiveInspector(                 Graph<V,E> graph1,                 Graph<V,E> graph2,                 EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,                 EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "diff": ["-    protected static <V,E extends Edge<V>> GraphIsomorphismInspector", "+    protected static <V,E> GraphIsomorphismInspector"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45eeb815a139b17a130e4b60425895e0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\"     static <V, E extends Edge<V>> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\"     static <V, E> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "diff": ["-    static <V, E extends Edge<V>> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "+    static <V, E> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "569abd52de324253cc05b83b08879585", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/VertexCovers.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static <V, E extends Edge<V>> Set<V> findGreedyCover(UndirectedGraph<V, E> g)", "signatureAfterChange": "     public static <V, E> Set<V> findGreedyCover(UndirectedGraph<V, E> g)", "diff": ["-    public static <V, E extends Edge<V>> Set<V> findGreedyCover(UndirectedGraph<V, E> g)", "+    public static <V, E> Set<V> findGreedyCover(UndirectedGraph<V, E> g)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7f588c3e98a5a3b811d82c0132b81d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "signatureAfterChange": "     public static <V,E> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "diff": ["-    public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspector(", "+    public static <V,E> GraphIsomorphismInspector createIsomorphismInspector("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f0bd739e3e6e28891cb290cab2f04e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected static <V,E extends Edge<V>> GraphIsomorphismInspector     createAppropriateConcreteInspector(         int graphType,         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "signatureAfterChange": "     protected static <V,E> GraphIsomorphismInspector     createAppropriateConcreteInspector(         int graphType,         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "diff": ["-    protected static <V,E extends Edge<V>> GraphIsomorphismInspector", "+    protected static <V,E> GraphIsomorphismInspector"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a48ea3cf8a9f7803cead48025428d4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V,E> graph1,         Graph<V,E> graph2)", "signatureAfterChange": "     public static <V,E> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V,E> graph1,         Graph<V,E> graph2)", "diff": ["-    public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspector(", "+    public static <V,E> GraphIsomorphismInspector createIsomorphismInspector("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9723356cdfbc0ffaad28499877201899", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphTests.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static <V, E extends Edge<V>> boolean isEmpty(Graph<V,E> g)", "signatureAfterChange": "      public static <V, E> boolean isEmpty(Graph<V,E> g)", "diff": ["-    public static <V, E extends Edge<V>> boolean isEmpty(Graph<V,E> g)", "+    public static <V, E> boolean isEmpty(Graph<V,E> g)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f124e904727292b029af150dbdb64e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static <V, E extends Edge<V>> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "signatureAfterChange": "     public static <V, E> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "diff": ["-    public static <V, E extends Edge<V>> List<E> findPathBetween(", "+    public static <V, E> List<E> findPathBetween("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a975ed0396b66cd466325a0ca309d6c3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspectorByType(         int type,         Graph<V,E> graph1,         Graph<V,E> graph2)", "signatureAfterChange": "     public static <V,E> GraphIsomorphismInspector createIsomorphismInspectorByType(         int type,         Graph<V,E> graph1,         Graph<V,E> graph2)", "diff": ["-    public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspectorByType(", "+    public static <V,E> GraphIsomorphismInspector createIsomorphismInspectorByType("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b0359aa56da312738cf4bd75b4e56a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BellmanFordShortestPath.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static <V, E extends Edge<V>> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "signatureAfterChange": "     public static <V, E> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "diff": ["-    public static <V, E extends Edge<V>> List<E> findPathBetween(", "+    public static <V, E> List<E> findPathBetween("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9180a5a2e934831a61cd652b9281d6a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public static <V, E extends Edge<V>> AttributeMap createDefaultEdgeAttributes(         Graph<V, E> jGraphTGraph)", "signatureAfterChange": "     public static <V, E> AttributeMap createDefaultEdgeAttributes(         Graph<V, E> jGraphTGraph)", "diff": ["-    public static <V, E extends Edge<V>> AttributeMap createDefaultEdgeAttributes(", "+    public static <V, E> AttributeMap createDefaultEdgeAttributes("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb99f26e93367b27465c062b84b8a8bc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphTests.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public static <V, E extends Edge<V>> boolean isComplete(Graph<V,E> g)", "signatureAfterChange": "      public static <V, E> boolean isComplete(Graph<V,E> g)", "diff": ["-    public static <V, E extends Edge<V>> boolean isComplete(Graph<V,E> g)", "+    public static <V, E> boolean isComplete(Graph<V,E> g)"]}]}