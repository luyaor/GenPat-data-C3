{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f2e47d4a0ea5f344418c207d05a5be9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014fda320265117edd60e3e6fd28cd30", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\" \tprivate void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "diff": ["-    private void dfsVisit(DirectedGraph<V, E> graph,", "+\t@SuppressWarnings(\"unchecked\")\t// FIXME hb 28-nov-05: See FIXME's below", "+\tprivate void dfsVisit(DirectedGraph<V, E> graph,", "-        Stack<VertexData> stack = new Stack();", "+        Stack<VertexData> stack = new Stack<VertexData>();", "+                \t// FIXME hb 28-Nov-05: Clean after the fixme in VertexData below is solved", "+                // TODO: until only vertices are used as 1st parameter, type-saftey is difficult to realize (i.e, VertexData<V>", "-                Iterator<E> iter =", "+            \t// FIXME hb 28-Nov-05: Clean after the fixme in VertexData below is solved", "+                Iterator<? extends E> iter =", "-                    DirectedEdge edge = iter.next();", "+                    Edge<V> edge = iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64cbb01665a34db283aa52088dee7d5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/Graph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public List getAllEdges( Object sourceVertex, Object targetVertex );", "signatureAfterChange": "     public List<E> getAllEdges( V sourceVertex, V targetVertex );", "diff": ["-    public List getAllEdges( Object sourceVertex, Object targetVertex );", "+    public List<E> getAllEdges( V sourceVertex, V targetVertex );"]}]}