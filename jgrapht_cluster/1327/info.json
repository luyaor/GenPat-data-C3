{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aeebcb54504447217cc416a6aee83c2b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c2fb8f40ae72a0ac4299c90f8f926aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "signatureAfterChange": "      private DirectedGraph<String, DefaultEdge> createMultiTriangleWithMultiLoop()", "diff": ["-    private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "+    private DirectedGraph<String, DefaultEdge> createMultiTriangleWithMultiLoop()", "-        DirectedGraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "+        DirectedGraph<String, DefaultEdge> g =", "+            new DirectedMultigraph<String, DefaultEdge>(", "+                DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0157187cfddaa3c14251c0c15d506fb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void exportAdjacencyMatrixVertex(PrintWriter out,             VertexNameProvider nameProvider, Object from, List neighbors)", "signatureAfterChange": "      private void exportAdjacencyMatrixVertex(PrintWriter out,         VertexNameProvider<V> nameProvider, V from, List<V> neighbors)", "diff": ["-            VertexNameProvider nameProvider, Object from, List neighbors)", "+        VertexNameProvider<V> nameProvider, V from, List<V> neighbors)", "-        Map<String,ModifiableInteger> counts = new LinkedHashMap<String,ModifiableInteger>();", "-        for (Object to : neighbors) {", "+        Map<String,ModifiableInteger> counts =", "+            new LinkedHashMap<String,ModifiableInteger>();", "+        for (V to : neighbors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d5ded3fd9ecbbdae829a7ef398094e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/CycleDetectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void runTest( DirectedGraph<String,DirEdge<String>> g,                           Set<String> cyclicSet,                           Set<String> acyclicSet )", "signatureAfterChange": "      private void runTest( DirectedGraph<String,DefaultEdge> g,                           Set<String> cyclicSet,                           Set<String> acyclicSet )", "diff": ["-    private void runTest( DirectedGraph<String,DirEdge<String>> g,", "+    private void runTest( DirectedGraph<String,DefaultEdge> g,", "-        CycleDetector<String,DirEdge<String>> detector =", "-            new CycleDetector<String,DirEdge<String>>(g);", "+        CycleDetector<String,DefaultEdge> detector =", "+            new CycleDetector<String,DefaultEdge>(g);"]}]}