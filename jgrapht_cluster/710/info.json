{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "836037c2be8acf1d93accca1e81beca3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04066f7b92589153b23ad6fa8d6d3dd1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter(         Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory cellFactory)", "signatureAfterChange": "     public JGraphModelAdapter(         Graph<V, E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory<V,E> cellFactory)", "diff": ["-        Graph jGraphTGraph,", "+        Graph<V, E> jGraphTGraph,", "-        CellFactory cellFactory)", "+        CellFactory<V,E> cellFactory)", "-            ListenableGraph g = (ListenableGraph) jGraphTGraph;", "+            ListenableGraph<V, E> g = (ListenableGraph<V, E>) jGraphTGraph;", "-        for (Iterator i = jGraphTGraph.vertexSet().iterator(); i.hasNext();) {", "+        for (Iterator<V> i = jGraphTGraph.vertexSet().iterator(); i.hasNext();) {", "-        for (Iterator i = jGraphTGraph.edgeSet().iterator(); i.hasNext();) {", "-            handleJGraphTAddedEdge((org._3pq.jgrapht.Edge) i.next());", "+        for (Iterator<E> i = jGraphTGraph.edgeSet().iterator(); i.hasNext();) {", "+            handleJGraphTAddedEdge(i.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1549f97d0a4be78b20dfa4fe4359c50a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/IgnoreDirectionTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      AbstractGraphIterator createIterator(DirectedGraph g, Object vertex)", "signatureAfterChange": "      AbstractGraphIterator<String, DirectedEdge<String>> createIterator(DirectedGraph<String, DirectedEdge<String>> g, String vertex)", "diff": ["-    AbstractGraphIterator createIterator(DirectedGraph g, Object vertex)", "+    AbstractGraphIterator<String, DirectedEdge<String>> createIterator(DirectedGraph<String, DirectedEdge<String>> g, String vertex)", "-        UndirectedGraph undirectedView = new AsUndirectedGraph(g);", "-        AbstractGraphIterator i = new DepthFirstIterator(undirectedView, \"4\");", "+        UndirectedGraph<String, DirectedEdge<String>> undirectedView =", "+        \tnew AsUndirectedGraph<String, DirectedEdge<String>>(g);", "+        AbstractGraphIterator<String, DirectedEdge<String>> i = new DepthFirstIterator<String, DirectedEdge<String>,Object>(undirectedView, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ad0154df5cca03ba578e67cecdac7d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphSquare(final Graph g, final boolean createLoops)", "signatureAfterChange": "     public GraphSquare(final Graph<V,E> g, final boolean createLoops)", "diff": ["-    public GraphSquare(final Graph g, final boolean createLoops)", "+    public GraphSquare(final Graph<V,E> g, final boolean createLoops)", "-            ((ListenableGraph) g).addGraphListener(new GraphListener() {", "-                    public void edgeAdded(GraphEdgeChangeEvent e)", "+            ((ListenableGraph<V,E>) g).addGraphListener(new GraphListener<V,E>() {", "+                    public void edgeAdded(GraphEdgeChangeEvent<V,E> e)", "-                        Edge edge = e.getEdge();", "+                        E edge = e.getEdge();", "-                    public void edgeRemoved(GraphEdgeChangeEvent e)", "+                    public void edgeRemoved(GraphEdgeChangeEvent<V,E> e)", "-                    public void vertexAdded(GraphVertexChangeEvent e)", "+                    public void vertexAdded(GraphVertexChangeEvent<V> e)", "-                    public void vertexRemoved(GraphVertexChangeEvent e)", "+                    public void vertexRemoved(GraphVertexChangeEvent<V> e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7a4f169480258d8f63dc5edb0d3068f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/VertexDegreeEquivalenceComparator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected InOutDegrees getInOutDegrees(         Graph aContextGraph,         Object vertex)", "signatureAfterChange": "     protected InOutDegrees getInOutDegrees(         Graph<V,E> aContextGraph,         V vertex)", "diff": ["-        Graph aContextGraph,", "-        Object vertex)", "+        Graph<V,E> aContextGraph,", "+        V vertex)", "-        int uniqueId = -1;", "-            UndirectedGraph undirectedGraph = (UndirectedGraph) aContextGraph;", "+            UndirectedGraph<V,E> undirectedGraph = (UndirectedGraph<V,E>) aContextGraph;", "-            DirectedGraph directedGraph = (DirectedGraph) aContextGraph;", "+            DirectedGraph<V,? extends E> directedGraph = (DirectedGraph<V,? extends E>) aContextGraph;"]}]}