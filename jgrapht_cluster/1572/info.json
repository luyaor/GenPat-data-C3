{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a01017ebb7a90819d04bdae40ae17fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7457618dc1d96ac61d8df5d0a4743051", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["-                m_pathLength = iter.getShortestPathLength(endVertex);", "+                pathLength = iter.getShortestPathLength(endVertex);", "-        m_edgeList = null;", "-        m_pathLength = Double.POSITIVE_INFINITY;", "+        edgeList = null;", "+        pathLength = Double.POSITIVE_INFINITY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5818bd47b4683cb6983966f907ed7eb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "2ceefe9200145eb7ccb4779e5535bb11c08686cf", "commitAfterChange": "ade4c3e7f85eb300837fc2abe82dbccf087859d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["-                createEdgeList(graph, iter, endVertex);", "-                pathLength = iter.getShortestPathLength(endVertex);", "-", "+                createEdgeList(graph, iter, startVertex, endVertex);", "-        edgeList = null;", "-        pathLength = Double.POSITIVE_INFINITY;", "+        path = null;"]}]}