{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "230bff222684d697bff7f5fc54f8d7e3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29506fd6201a368ef5ae90f6119ee853", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/dag/DirectedAcyclicGraph.java", "commitBeforeChange": "adaca642347b80042a0673a76d5c684c0cd29f4a", "commitAfterChange": "bfd68dc5cac3c6660f66170c69193fd7d58dd38b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public E addDagEdge(V fromVertex, V toVertex)         throws CycleFoundException", "signatureAfterChange": "     public E addDagEdge(V fromVertex, V toVertex)         throws CycleFoundException", "diff": ["-        Integer lb = topoOrderMap.getTopologicalIndex(toVertex);", "-        Integer ub = topoOrderMap.getTopologicalIndex(fromVertex);", "-", "-        if ((lb == null) || (ub == null)) {", "-            throw new IllegalArgumentException(", "-                \"vertices must be in the graph already!\");", "-        }", "-", "-        if (lb < ub) {", "-            Set<V> df = new HashSet<V>();", "-            Set<V> db = new HashSet<V>();", "-", "-            // Discovery", "-            Region affectedRegion = new Region(lb, ub);", "-            Visited visited = visitedFactory.getInstance(affectedRegion);", "-", "-            // throws CycleFoundException if there is a cycle", "-            dfsF(toVertex, df, visited, affectedRegion);", "-", "-            dfsB(fromVertex, db, visited, affectedRegion);", "-            reorder(df, db, visited);", "-            ++topologyUpdateCount; // if we do a reorder, than the topology has", "-                                   // been updated", "-        }", "+        updateDag(fromVertex, toVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bf67a713a46429cc928c765a171aa2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/dag/DirectedAcyclicGraph.java", "commitBeforeChange": "adaca642347b80042a0673a76d5c684c0cd29f4a", "commitAfterChange": "bfd68dc5cac3c6660f66170c69193fd7d58dd38b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addDagEdge(V fromVertex, V toVertex, E e)         throws CycleFoundException", "signatureAfterChange": "     public boolean addDagEdge(V fromVertex, V toVertex, E e)         throws CycleFoundException", "diff": ["-        Integer lb = topoOrderMap.getTopologicalIndex(toVertex);", "+        updateDag(fromVertex, toVertex);", "+", "+        return super.addEdge(fromVertex, toVertex, e);", "+    }", "-        if ((lb == null) || (ub == null)) {", "-        return super.addEdge(fromVertex, toVertex, e);", "-    }"]}]}