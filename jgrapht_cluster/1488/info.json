{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9963d7ea7505cdca5bbd68f023e735b4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e8c4c0b586891d639538db741bf4f5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "      private void addEdgesUsingFilter(Set<E> edgeSet, Set<E> filter)", "signatureAfterChange": "      private void addEdgesUsingFilter(Set<E> edgeSet, Set<E> filter)", "diff": ["+", "+            V sourceVertex = m_base.getEdgeSource(e);", "+            V targetVertex = m_base.getEdgeTarget(e);", "-                containsVertex(e.getSource())", "-                && containsVertex(e.getTarget());", "+                containsVertex(sourceVertex)", "+                && containsVertex(targetVertex);", "-                addEdge(e);", "+                addEdge(sourceVertex, targetVertex, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45db40daba353f12fa772595d3cc0a54", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addEdge(E e)", "signatureAfterChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "diff": ["-    public boolean addEdge(E e)", "+    public boolean addEdge(V sourceVertex, V targetVertex, E e)", "-        assertVertexExist(e.getSource());", "-        assertVertexExist(e.getTarget());", "+        assertVertexExist(sourceVertex);", "+        assertVertexExist(targetVertex);", "+", "+        assert(m_base.getEdgeSource(e) == sourceVertex);", "+        assert(m_base.getEdgeTarget(e) == targetVertex);"]}]}