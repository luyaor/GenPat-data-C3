{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2550ee42e6bb2e5491028c1576e7ebbd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e7b1ea8ea7f0297f101b755532db7e1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2SubgraphMappingIterator.java", "commitBeforeChange": "6245588ef354746c5c3ae9a477b956068a878121", "commitAfterChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "       @Override     protected IsomorphicGraphMapping<V, E> match()", "signatureAfterChange": "            @Override protected IsomorphicGraphMapping<V, E> match()", "diff": ["-    @Override", "-    protected IsomorphicGraphMapping<V, E> match() {", "+    @Override protected IsomorphicGraphMapping<V, E> match()", "+    {", "-            Graph<V,E> g1 = ordering1.getGraph(),", "-                       g2 = ordering2.getGraph();", "+            Graph<V, E> g1 = ordering1.getGraph(), g2 = ordering2.getGraph();", "-            if (g1.vertexSet().size() < g2.vertexSet().size() ||", "-                            g1.edgeSet().size() < g2.edgeSet().size())", "+            if ((g1.vertexSet().size() < g2.vertexSet().size())", "+                || (g1.edgeSet().size() < g2.edgeSet().size()))", "+            {", "+            }", "-            s = new VF2SubgraphIsomorphismState<V, E>(ordering1, ordering2,", "-                            vertexComparator, edgeComparator);", "+            s = new VF2SubgraphIsomorphismState<V, E>(", "+                ordering1,", "+                ordering2,", "+                vertexComparator,", "+                edgeComparator);", "-            if (g2.vertexSet().isEmpty())", "-                return hadOneMapping != null ? null : s.getCurrentMapping();", "+            if (g2.vertexSet().isEmpty()) {", "+                return (hadOneMapping != null) ? null : s.getCurrentMapping();", "+            }", "-", "-                    s = new VF2SubgraphIsomorphismState<V,E>(s);", "+                    s = new VF2SubgraphIsomorphismState<V, E>(s);", "-            if (stateStack.isEmpty())", "+            if (stateStack.isEmpty()) {", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817891ae4de944b18769824ad353e212", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2GraphMappingIterator.java", "commitBeforeChange": "6245588ef354746c5c3ae9a477b956068a878121", "commitAfterChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "       @Override     protected IsomorphicGraphMapping<V, E> match()", "signatureAfterChange": "            @Override protected IsomorphicGraphMapping<V, E> match()", "diff": ["-    @Override", "-    protected IsomorphicGraphMapping<V, E> match() {", "+    @Override protected IsomorphicGraphMapping<V, E> match()", "+    {", "-            Graph<V,E> g1 = ordering1.getGraph(),", "-                       g2 = ordering2.getGraph();", "+            Graph<V, E> g1 = ordering1.getGraph(), g2 = ordering2.getGraph();", "-            if (g1.vertexSet().size() != g2.vertexSet().size() ||", "-                            g1.edgeSet().size() != g2.edgeSet().size())", "+            if ((g1.vertexSet().size() != g2.vertexSet().size())", "+                || (g1.edgeSet().size() != g2.edgeSet().size()))", "+            {", "+            }", "-            s = new VF2GraphIsomorphismState<V, E>(ordering1, ordering2,", "-                            vertexComparator, edgeComparator);", "+            s = new VF2GraphIsomorphismState<V, E>(", "+                ordering1,", "+                ordering2,", "+                vertexComparator,", "+                edgeComparator);", "-            if (g2.vertexSet().isEmpty())", "-                return hadOneMapping != null ? null : s.getCurrentMapping();", "+            if (g2.vertexSet().isEmpty()) {", "+                return (hadOneMapping != null) ? null : s.getCurrentMapping();", "+            }", "-", "-                    s = new VF2GraphIsomorphismState<V,E>(s);", "+                    s = new VF2GraphIsomorphismState<V, E>(s);", "-            if (stateStack.isEmpty())", "+            if (stateStack.isEmpty()) {", "+            }"]}]}