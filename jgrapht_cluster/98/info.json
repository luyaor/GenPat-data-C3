{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46b8b9a11e4746a03eca997f4505e36d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b7dc92bc61c65421f4958a17a5fc18", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/touchgraph/TouchgraphPanel.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void initialize()", "signatureAfterChange": "     public void initialize()", "diff": ["-                TouchgraphConverter converter = new TouchgraphConverter();", "+                TouchgraphConverter<V,E> converter = new TouchgraphConverter<V,E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072bdf9f2e1f2878852fbdbebe1fabaf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private Neighbors getNeighbors(V v)", "signatureAfterChange": "      private Neighbors<V,E> getNeighbors(V v)", "diff": ["-    private Neighbors getNeighbors(V v)", "+    private Neighbors<V,E> getNeighbors(V v)", "-        Neighbors neighbors = m_neighborMap.get(v);", "+        Neighbors<V,E> neighbors = m_neighborMap.get(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f0cdb5aceedd536bde2e98b8f811b25", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/touchgraph/SimpleTouchgraphApplet.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public static void main(String [] args)", "signatureAfterChange": "          public static void main(String [] args)", "diff": ["-        Graph g = createSamplegraph();", "+        Graph<String,DefaultEdge> g = createSamplegraph();", "-            new TouchgraphPanel(g,selfReferencesAllowed));", "+            new TouchgraphPanel<String,DefaultEdge>(g,selfReferencesAllowed));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "116c4d62ea4336dc39bddd0388e1bcc4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/ext/MatrixExporterTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testAdjacencyUndirected()", "signatureAfterChange": "      public void testAdjacencyUndirected()", "diff": ["-        UndirectedGraph g = new Pseudograph(DefaultEdge.class);", "+        UndirectedGraph<String,DefaultEdge> g =", "+            new Pseudograph<String,DefaultEdge>(DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18699853a53b69d6e3de6f7a16c9e363", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JGraphModelAdapter(         Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes)", "signatureAfterChange": "     public JGraphModelAdapter(         Graph<V,E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes)", "diff": ["-        Graph jGraphTGraph,", "+        Graph<V,E> jGraphTGraph,", "-            new DefaultCellFactory());", "+            new DefaultCellFactory<V,E>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a34b176e87fbedc06cf54c0242bc4b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/VertexDegreeEquivalenceComparator.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected InOutDegrees getInOutDegrees(Graph<V, E> aContextGraph,         V vertex)", "signatureAfterChange": "     protected InOutDegrees getInOutDegrees(Graph<V, E> aContextGraph,         V vertex)", "diff": ["-        if (aContextGraph instanceof UndirectedGraph) {", "+        if (aContextGraph instanceof UndirectedGraph<?,?>) {", "-        } else if (aContextGraph instanceof DirectedGraph) {", "+        } else if (aContextGraph instanceof DirectedGraph<?,?>) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20b6561f647c8463aff267e1507fff16", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UndirectedSubgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public UndirectedSubgraph( UndirectedGraph base, Set vertexSubset,         Set edgeSubset )", "signatureAfterChange": "     public UndirectedSubgraph( UndirectedGraph<V, E> base, Set<V> vertexSubset,         Set<E> edgeSubset )", "diff": ["-    public UndirectedSubgraph( UndirectedGraph base, Set vertexSubset,", "-        Set edgeSubset ) {", "+    public UndirectedSubgraph( UndirectedGraph<V, E> base, Set<V> vertexSubset,", "+        Set<E> edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23cc1af274e15eddea8636997a20aaee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Set<V> connectedSetOf(V vertex)", "signatureAfterChange": "     public Set<V> connectedSetOf(V vertex)", "diff": ["-            connectedSet = new HashSet();", "+            connectedSet = new HashSet<V>();", "-                new BreadthFirstIterator(m_graph, vertex);", "+                new BreadthFirstIterator<V, E, Object>(m_graph, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272db95bc144786e281054e452b0357f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DirectedWeightedSubgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DirectedWeightedSubgraph( WeightedGraph base, Set vertexSubset,         Set edgeSubset )", "signatureAfterChange": "     public DirectedWeightedSubgraph( WeightedGraph<V, E> base, Set<V> vertexSubset,         Set<E> edgeSubset )", "diff": ["-    public DirectedWeightedSubgraph( WeightedGraph base, Set vertexSubset,", "-        Set edgeSubset ) {", "+    public DirectedWeightedSubgraph( WeightedGraph<V, E> base, Set<V> vertexSubset,", "+        Set<E> edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aa44cb61e07e97eabac9e2391f6c429", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void setUp()", "signatureAfterChange": "     protected void setUp()", "diff": ["-        m_directed = new DefaultDirectedGraph();", "-        m_undirected = new AsUndirectedGraph(m_directed);", "+        m_directed = new DefaultDirectedGraph<String, DirEdge<String>>();", "+        m_undirected = new AsUndirectedGraph<String, Edge<String>>(m_directed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430d0e1113e1b1def2ca25efa375a746", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/demo/HelloJGraphT.java", "commitBeforeChange": "69fa667631f5d0cc79dd9c5dec2c4ebc9355f077", "commitAfterChange": "ccdfe091f1358c9be65e5963b4cd6ff9295861c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String [] args)", "signatureAfterChange": "     public static void main(String [] args)", "diff": ["-        UndirectedGraph stringGraph = createStringGraph();", "+        UndirectedGraph<String,DefaultEdge> stringGraph = createStringGraph();", "-        DirectedGraph hrefGraph = createHrefGraph();", "+        DirectedGraph<URL,DefaultEdge> hrefGraph = createHrefGraph();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5565ea1c1c187751a3dc73f49797ef28", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/EquivalenceIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public EquivalenceIsomorphismInspector(Graph graph1, Graph graph2)", "signatureAfterChange": "     public EquivalenceIsomorphismInspector(Graph<V,E> graph1, Graph<V,E> graph2)", "diff": ["-    public EquivalenceIsomorphismInspector(Graph graph1, Graph graph2)", "+    public EquivalenceIsomorphismInspector(Graph<V,E> graph1, Graph<V,E> graph2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7962155fb7b3c81e9cd660e594ecc1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static <V, E extends Edge<V>> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "signatureAfterChange": "     public static <V, E extends Edge<V>> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "diff": ["-        DijkstraShortestPath alg =", "-            new DijkstraShortestPath(", "+        DijkstraShortestPath<V, E> alg =", "+            new DijkstraShortestPath<V, E>("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c0418ed818bea6ac6a66bbe6db10af", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UndirectedWeightedSubgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public UndirectedWeightedSubgraph( WeightedGraph base, Set vertexSubset,         Set edgeSubset )", "signatureAfterChange": "     public UndirectedWeightedSubgraph( WeightedGraph<V, E> base, Set<V> vertexSubset,         Set<E> edgeSubset )", "diff": ["-    public UndirectedWeightedSubgraph( WeightedGraph base, Set vertexSubset,", "-        Set edgeSubset ) {", "+    public UndirectedWeightedSubgraph( WeightedGraph<V, E> base, Set<V> vertexSubset,", "+        Set<E> edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c157d97d963fdc022bb4479d12a993", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public static <V, E> UndirectedGraph<V, E> undirectedGraph(Graph<V, E> g)", "signatureAfterChange": "     public static <V, E> UndirectedGraph<V, E> undirectedGraph(Graph<V, E> g)", "diff": ["-        if (g instanceof DirectedGraph) {", "+        if (g instanceof DirectedGraph<?,?>) {", "-        } else if (g instanceof UndirectedGraph) {", "+        } else if (g instanceof UndirectedGraph<?,?>) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b19e6aef8ce66d1f1590af929dbe2bf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      private Specifics createSpecifics()", "signatureAfterChange": "      private Specifics createSpecifics()", "diff": ["-        if (this instanceof DirectedGraph) {", "+        if (this instanceof DirectedGraph<?,?>) {", "-        } else if (this instanceof UndirectedGraph) {", "+        } else if (this instanceof UndirectedGraph<?,?>) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c85169ab3688dd3b1d8c57c3ad80d55", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private EdgeTraversalEvent createEdgeTraversalEvent(E edge)", "signatureAfterChange": "      private EdgeTraversalEvent<V, E> createEdgeTraversalEvent(E edge)", "diff": ["-    private EdgeTraversalEvent createEdgeTraversalEvent(E edge)", "+    private EdgeTraversalEvent<V, E> createEdgeTraversalEvent(E edge)", "-            return new EdgeTraversalEvent(this, edge);", "+            return new EdgeTraversalEvent<V, E>(this, edge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4fab4f959a220e3462837e769be2a4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void export(OutputStream output, Graph g)", "signatureAfterChange": "     public void export(OutputStream output, Graph<V,E> g)", "diff": ["-    public void export(OutputStream output, Graph g)", "+    public void export(OutputStream output, Graph<V,E> g)", "-        for (Iterator i = g.vertexSet().iterator(); i.hasNext();) {", "+        for (Iterator<V> i = g.vertexSet().iterator(); i.hasNext();) {", "-        for (Iterator i = g.edgeSet().iterator(); i.hasNext();) {", "+        for (Iterator<E> i = g.edgeSet().iterator(); i.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "812d63bc597ea0f41bfc9264da06ce20", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Set<V>> stronglyConnectedSets()", "signatureAfterChange": "     public List<Set<V>> stronglyConnectedSets()", "diff": ["-            m_orderedVertices = new LinkedList<VertexData>();", "+            m_orderedVertices = new LinkedList<VertexData<V>>();", "-            Iterator<VertexData> iter =", "+            Iterator<VertexData<V>> iter =", "-                VertexData data = iter.next();", "+                VertexData<V> data = iter.next();", "-                VertexData data = iter.next();", "+                VertexData<V> data = iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "894174a3ce953c52cccc3bb3504ec48f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/PermutationIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected CollectionPermutationIter createPermutationIterator(         Set vertexSet1,         Set vertexSet2)", "signatureAfterChange": "     protected CollectionPermutationIter<V> createPermutationIterator(         Set<V> vertexSet1,         Set<V> vertexSet2)", "diff": ["-    protected CollectionPermutationIter createPermutationIterator(", "-        Set vertexSet1,", "-        Set vertexSet2)", "+    protected CollectionPermutationIter<V> createPermutationIterator(", "+        Set<V> vertexSet1,", "+        Set<V> vertexSet2)", "-        return new CollectionPermutationIter(vertexSet2);", "+        return new CollectionPermutationIter<V>(vertexSet2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7d967637205e3041f06d7b731ecac7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/ext/MatrixExporterTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testLaplacian()", "signatureAfterChange": "      public void testLaplacian()", "diff": ["-        UndirectedGraph g = new SimpleGraph(DefaultEdge.class);", "+        UndirectedGraph<String,DefaultEdge> g =", "+            new SimpleGraph<String,DefaultEdge>(DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92176761c42da90963809d364e2f35d0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/util/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testComparatorChain()", "signatureAfterChange": "     public void testComparatorChain()", "diff": ["-        EquivalenceComparatorChain comparatorChain =", "-            new EquivalenceComparatorChainBase(new OddEvenGroupComparator());", "+        EquivalenceComparatorChain<Integer,Object> comparatorChain =", "+            new EquivalenceComparatorChainBase<Integer,Object>(new OddEvenGroupComparator());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f2f473cb66ec3f5ac1c93a2d284d96", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/touchgraph/SimpleTouchgraphApplet.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void init()", "signatureAfterChange": "     public void init()", "diff": ["-        Graph g = createSamplegraph();", "+        Graph<String,DefaultEdge> g = createSamplegraph();", "-        add(new TouchgraphPanel(g,selfReferencesAllowed), BorderLayout.CENTER);", "+        add(new TouchgraphPanel<String,DefaultEdge>(g,selfReferencesAllowed), BorderLayout.CENTER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafa18c0a4755c7faddc2b0aabd443bb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public AbstractExhaustiveIsomorphismInspector(Graph graph1, Graph graph2)", "signatureAfterChange": "     public AbstractExhaustiveIsomorphismInspector(Graph<V,E> graph1, Graph<V,E> graph2)", "diff": ["-    public AbstractExhaustiveIsomorphismInspector(Graph graph1, Graph graph2)", "+    public AbstractExhaustiveIsomorphismInspector(Graph<V,E> graph1, Graph<V,E> graph2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c7582bb0855224f9b565e45fa9afd6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private Neighbors getSuccessors(V v)", "signatureAfterChange": "      private Neighbors<V,E> getSuccessors(V v)", "diff": ["-    private Neighbors getSuccessors(V v)", "+    private Neighbors<V,E> getSuccessors(V v)", "-        Neighbors neighbors = m_successorMap.get(v);", "+        Neighbors<V,E> neighbors = m_successorMap.get(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b464b73366e2b100636ac16d90913fa0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private Neighbors getPredecessors(V v)", "signatureAfterChange": "      private Neighbors<V,E> getPredecessors(V v)", "diff": ["-    private Neighbors getPredecessors(V v)", "+    private Neighbors<V,E> getPredecessors(V v)", "-        Neighbors neighbors = m_predecessorMap.get(v);", "+        Neighbors<V,E> neighbors = m_predecessorMap.get(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f902ac57b0b8883af2d094493ef7f7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphOrdering(Graph regularGraph)", "signatureAfterChange": "     public GraphOrdering(Graph<V,E> regularGraph)", "diff": ["-    public GraphOrdering(Graph regularGraph)", "+    public GraphOrdering(Graph<V,E> regularGraph)", "-        Set vertexSet = regularGraph.vertexSet();", "-        Set edgeSet = regularGraph.edgeSet();", "+        Set<V> vertexSet = regularGraph.vertexSet();", "+        Set<E> edgeSet = regularGraph.edgeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f758092ea4a0a7817a92d3321a7415f1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/PermutationIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public PermutationIsomorphismInspector(Graph graph1, Graph graph2)", "signatureAfterChange": "     public PermutationIsomorphismInspector(Graph<V,E> graph1, Graph<V,E> graph2)", "diff": ["-    public PermutationIsomorphismInspector(Graph graph1, Graph graph2)", "+    public PermutationIsomorphismInspector(Graph<V,E> graph1, Graph<V,E> graph2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa864169873e5fc6294d25c656dface1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DirectedSubgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DirectedSubgraph( DirectedGraph base, Set vertexSubset,         Set edgeSubset )", "signatureAfterChange": "     public DirectedSubgraph( DirectedGraph<V, E> base, Set<V> vertexSubset,         Set<E> edgeSubset )", "diff": ["-    public DirectedSubgraph( DirectedGraph base, Set vertexSubset,", "-        Set edgeSubset ) {", "+    public DirectedSubgraph( DirectedGraph<V, E> base, Set<V> vertexSubset,", "+        Set<E> edgeSubset ) {"]}]}