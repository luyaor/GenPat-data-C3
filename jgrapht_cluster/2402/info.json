{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fd361429c22763356b129e359dd7c6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36d3e8b37969d47ee2136f426c26ff94", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean areAllEdgesEquivalent(         IsomorphismRelation resultRelation,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeComparator)", "signatureAfterChange": "     protected boolean areAllEdgesEquivalent(         IsomorphismRelation<V,E> resultRelation,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeComparator)", "diff": ["-        IsomorphismRelation resultRelation,", "+        IsomorphismRelation<V,E> resultRelation,", "-                    // XXX hb 060128: Waiting for GraphMapping to go generic", "-                    (E) resultRelation.getCorrespondence(currEdge, true);", "+                    resultRelation.getEdgeCorrespondence(currEdge, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "671f1b5ac758135cfd29a75c78a0bc57", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/SubgraphIsomorphismTestUtils.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static boolean containsAllMatchings(             VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf2,             Graph<Integer, DefaultEdge> g1,             Graph<Integer, DefaultEdge> g2)", "signatureAfterChange": "     public static boolean containsAllMatchings(             VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf2,             Graph<Integer, DefaultEdge> g1,             Graph<Integer, DefaultEdge> g2)", "diff": ["-        loop:for(Iterator<IsomorphicGraphMapping<Integer, DefaultEdge>>", "+        loop:for(Iterator<GraphMapping<Integer, DefaultEdge>>", "-            IsomorphicGraphMapping<Integer, DefaultEdge> rel1 = mappings.next();", "+            IsomorphicGraphMapping<Integer, DefaultEdge> rel1 =", "+                (IsomorphicGraphMapping<Integer, DefaultEdge>) mappings.next();", "-                if (rel1.equals(rel2))  {", "+                if (rel1.isEqualMapping(rel2))  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "add85e03f577cd755a09e61e71611239", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected Object provideNextVertex(  )", "signatureAfterChange": "     protected V provideNextVertex(  )", "diff": ["-    protected Object provideNextVertex(  ) {", "-        QueueEntry entry = (QueueEntry) m_heap.removeMin(  );", "+    protected V provideNextVertex(  ) {", "+        QueueEntry<V,E> entry = (QueueEntry) m_heap.removeMin(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1bab2906eb4a706a5e58c89a7423f3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void fireVertexTraversed( VertexTraversalEvent e )", "signatureAfterChange": "     protected void fireVertexTraversed( VertexTraversalEvent<V> e )", "diff": ["-    protected void fireVertexTraversed( VertexTraversalEvent e ) {", "+    protected void fireVertexTraversed( VertexTraversalEvent<V> e ) {", "-                (TraversalListener) m_traversalListeners.get( i );", "+                m_traversalListeners.get( i );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb9e907c38745e93c5e486f0f2a00cd6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       private GraphEdgeChangeEvent createGraphEdgeChangeEvent( int eventType,         Edge edge )", "signatureAfterChange": "       private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent( int eventType,         E edge )", "diff": ["-    private GraphEdgeChangeEvent createGraphEdgeChangeEvent( int eventType,", "-        Edge edge ) {", "+    private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent( int eventType,", "+        E edge ) {"]}]}