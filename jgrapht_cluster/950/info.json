{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dffbd6306f6e5b6108050262ea86ecc7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "891749e04b0ba83f792461b3a1ca8be7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "1bc1049002c0faf13c343af60ab2fcc79bbade17", "commitAfterChange": "e3d152c903d64a55a394899016d3b983c6acef7f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void exportAdjacencyMatrixVertex(PrintWriter out,             VertexNameProvider nameProvider, Object from, List neighbors)", "signatureAfterChange": "      private void exportAdjacencyMatrixVertex(PrintWriter out,             VertexNameProvider nameProvider, Object from, List neighbors)", "diff": ["-        Map<String,Integer> counts = new LinkedHashMap<String,Integer>();", "+        Map<String,ModifiableInteger> counts = new LinkedHashMap<String,ModifiableInteger>();", "-            Integer count = counts.get(toName);", "+            ModifiableInteger count = counts.get(toName);", "-                count = 0;", "+                count = new ModifiableInteger(0);", "+                counts.put(toName, count);", "-            // count loops twice", "-            count += from.equals(to) ? 2 : 1;", "-            counts.put(toName, count);", "+", "+            count.increment();", "+            if (from.equals(to) ) {", "+                // count loops twice, once for each end", "+                count.increment();", "+            }", "-        for (Map.Entry<String,Integer> entry : counts.entrySet()) {", "+        for (Map.Entry<String,ModifiableInteger> entry : counts.entrySet()) {", "-            Integer count = entry.getValue();", "+            ModifiableInteger count = entry.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e01d9c1655d4066001a9655747b2b501", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/ext/DOTExporterTest.java", "commitBeforeChange": "58ffe75d7011b97e5d82e9b962f083efeda5131c", "commitAfterChange": "e161419b51eb823c1e9daf9244639d8ff587282c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testUndirected()", "signatureAfterChange": "      public void testUndirected()", "diff": ["+        ComponentAttributeProvider<String> vertexAttributeProvider =", "+            new ComponentAttributeProvider<String>() ", "+            {", "+                public Map<String, String> getComponentAttributes(String v)", "+                {", "+                    Map<String, String> map =", "+                        new LinkedHashMap<String, String>();", "+                    if (v.equals(V1)) {", "+                        map.put(\"label\", \"a\");", "+                    } else if (v.equals(V2)) {", "+                        map.put(\"x\", \"y\");", "+                    } else {", "+                        map = null;", "+                    }", "+                    return map;", "+                }", "+            };", "+        DOTExporter<String, DefaultEdge> exporter =", "+            new DOTExporter<String, DefaultEdge>(", "+                new IntegerNameProvider<String>(),", "+                null,", "+                null,", "+                vertexAttributeProvider,", "+                null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f439469e3ea5b8bc61894fe25b07b5a7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/DOTExporter.java", "commitBeforeChange": "58ffe75d7011b97e5d82e9b962f083efeda5131c", "commitAfterChange": "e161419b51eb823c1e9daf9244639d8ff587282c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void export(Writer writer, Graph<V, E> g)", "signatureAfterChange": "     public void export(Writer writer, Graph<V, E> g)", "diff": ["+            String labelName = null;", "-                out.print(", "-                    \" [label = \\\"\" + vertexLabelProvider.getVertexName(v)", "-                    + \"\\\"]\");", "+                labelName = vertexLabelProvider.getVertexName(v);", "+            Map<String, String> attributes = null;", "+            if (vertexAttributeProvider != null) {", "+                attributes = vertexAttributeProvider.getComponentAttributes(v);", "+            }", "+            renderAttributes(out, labelName, attributes);", "+            String labelName = null;", "-                out.print(", "-                    \" [label = \\\"\" + edgeLabelProvider.getEdgeName(e) + \"\\\"]\");", "+                labelName = edgeLabelProvider.getEdgeName(e);", "+            Map<String, String> attributes = null;", "+            if (edgeAttributeProvider != null) {", "+                attributes = edgeAttributeProvider.getComponentAttributes(e);", "+            }", "+            renderAttributes(out, labelName, attributes);"]}]}