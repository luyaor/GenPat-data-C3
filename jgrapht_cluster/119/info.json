{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77da4e0294776723828a8993bab398a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9113776d8eed56dbf3b4a1362039abd8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testGetEdge()", "signatureAfterChange": "     public void testGetEdge()", "diff": ["-            m_directed.getEdge(m_v1, m_v2),", "-            m_undirected.getEdge(m_v1, m_v2));", "+            directed.getEdge(v1, v2),", "+            undirected.getEdge(v1, v2));", "-            m_directed.getEdge(m_v1, m_v2),", "-            m_undirected.getEdge(m_v2, m_v1));", "+            directed.getEdge(v1, v2),", "+            undirected.getEdge(v2, v1));", "-            m_directed.getEdge(m_v4, m_v4),", "-            m_undirected.getEdge(m_v4, m_v4));", "+            directed.getEdge(v4, v4),", "+            undirected.getEdge(v4, v4));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97639a70f607a05127799b084b8e028d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void setUp()", "signatureAfterChange": "     protected void setUp()", "diff": ["-        m_directed = new DefaultDirectedGraph<String, DefaultEdge>(", "+        directed = new DefaultDirectedGraph<String, DefaultEdge>(", "-        m_undirected = new AsUndirectedGraph<String, DefaultEdge>(m_directed);", "+        undirected = new AsUndirectedGraph<String, DefaultEdge>(directed);", "-        m_directed.addVertex(m_v1);", "-        m_directed.addVertex(m_v2);", "-        m_directed.addVertex(m_v3);", "-        m_directed.addVertex(m_v4);", "-        m_directed.addEdge(m_v1, m_v2);", "-        m_directed.addEdge(m_v2, m_v3);", "-        m_directed.addEdge(m_v2, m_v4);", "-        m_loop = m_directed.addEdge(m_v4, m_v4);", "+        directed.addVertex(v1);", "+        directed.addVertex(v2);", "+        directed.addVertex(v3);", "+        directed.addVertex(v4);", "+        directed.addEdge(v1, v2);", "+        directed.addEdge(v2, v3);", "+        directed.addEdge(v2, v4);", "+        loop = directed.addEdge(v4, v4);"]}]}