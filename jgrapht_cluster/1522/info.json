{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1174bc510fecdce02b55e9096f03b86f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77311c2488866b8110f67f33303000ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "28d3779d4da499741844a8a1c70731e545d11081", "commitAfterChange": "30d14da4bec00a639c045bfbd68becc95dcaa92c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( Object v )", "diff": ["-        boolean modified = super.removeVertex( v );", "+        if( containsVertex( v ) ) {", "+            List touchingEdgesList = edgesOf( v );", "-        if( modified ) {", "+            // cannot iterate over list - will cause ConcurrentModificationException", "+            Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "+            touchingEdgesList.toArray( touchingEdges );", "+", "+            removeAllEdges( touchingEdges );", "+", "+            super.removeVertex( v ); // remove the vertex itself", "+", "+            ", "+            return true;", "-", "-        return modified;", "+        else {", "+            return false;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82cf17dd6c74f30e69c09c36de1369d6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-            List<E> touchingEdgesList = edgesOf(v);", "+            Set<E> touchingEdgesList = edgesOf(v);", "-            // cannot iterate over list - will cause", "-            // ConcurrentModificationException", "-            // Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "-            // touchingEdgesList.toArray( touchingEdges );", "-", "+            // copy set to avoid ConcurrentModificationException"]}]}