{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "545ce98e81884c72976006e10e25af49", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25b0aa43f2fe48b93e121b95eb480897", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "863926a00bf4e3994775ae79f69187320b0efdf2", "commitAfterChange": "013f82ef9340f881e4393a0079889bf535149b94", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Set<E> findMatch(final UndirectedGraph<V, E> g)", "signatureAfterChange": "     private Set<E> findMatch()", "diff": ["-    public Set<E> findMatch(final UndirectedGraph<V, E> g)", "+    private Set<E> findMatch()", "-        for (V i : g.vertexSet()) {", "+        for (V i : graph.vertexSet()) {", "-                V v = findPath(g, i);", "+                V v = findPath(i);", "-        for (V v : g.vertexSet()) {", "+        for (V v : graph.vertexSet()) {", "-                result.add(g.getEdge(v, match.get(v)));", "+                result.add(graph.getEdge(v, match.get(v)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c4ed1da0d5fe5cf80be1f67417a081", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "09f8c42369e19bad56b44493e9da23f84c9f33d0", "commitAfterChange": "8eb48033f951ffcc0a59543e123e6881cda6c1db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void markPath(V v, V b, V child)", "signatureAfterChange": "      private void markPath(V v, V child, V stem, Set<V> blossom)", "diff": ["-    private void markPath(V v, V b, V child)", "+    private void markPath(V v, V child, V stem, Set<V> blossom)", "-        while (base.get(v) != b) {", "-            blossom.add(base.get(v));", "-            blossom.add(base.get(match.get(v)));", "-            p.put(v, child);", "+        while (contracted.get(v) != stem) {", "+            blossom.add(contracted.get(v));", "+            blossom.add(contracted.get(match.get(v)));", "+            path.put(v, child);", "-            v = p.get(match.get(v));", "+            v = path.get(match.get(v));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd34699524f329c69ec173723b52d4d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "92515499ec252d47a5d2a61121b91fd95f3bb5b8", "commitAfterChange": "47f303bdc02e63a084eea6bbef2195eb7a2ef15c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 0, "signatureBeforeChange": "     private Set<E> findMatch()", "signatureAfterChange": "     public Set<E> findMatch(final UndirectedGraph<V, E> g)", "diff": ["-    private Set<E> findMatch()", "+    public Set<E> findMatch(final UndirectedGraph<V, E> g)", "-        for (V i : graph.vertexSet()) {", "+        for (V i : g.vertexSet()) {", "-                V v = findPath(i);", "+                V v = findPath(g, i);", "-        for (V v : graph.vertexSet()) {", "+        for (V v : g.vertexSet()) {", "-                result.add(graph.getEdge(v, match.get(v)));", "+                result.add(g.getEdge(v, match.get(v)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a62d13f1d0c07ef329ebfd65e792b88d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "9681504586e103d7dc5a4670b6f76ddb37e3977b", "commitAfterChange": "544318759e8ef143a1f7ce54d385b8bb1d1e42ef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Set<E> findMatch(final UndirectedGraph<V, E> g)", "signatureAfterChange": "     private Set<E> findMatch()", "diff": ["-    public Set<E> findMatch(final UndirectedGraph<V, E> g)", "+    private Set<E> findMatch()", "-        for (V i : g.vertexSet()) {", "+        for (V i : graph.vertexSet()) {", "-                V v = findPath(g, i);", "+                V v = findPath(i);", "-        for (V v : g.vertexSet()) {", "+        for (V v : graph.vertexSet()) {", "-                result.add(g.getEdge(v, match.get(v)));", "+                result.add(graph.getEdge(v, match.get(v)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb611ce54cc41f76aaec5e221e99b508", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "09f8c42369e19bad56b44493e9da23f84c9f33d0", "commitAfterChange": "8eb48033f951ffcc0a59543e123e6881cda6c1db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private V lca(UndirectedGraph<V, E> g, V a, V b)", "signatureAfterChange": "      private V lca(V a, V b)", "diff": ["-    private V lca(UndirectedGraph<V, E> g, V a, V b)", "+    private V lca(V a, V b)", "-            a = base.get(a);", "+            a = contracted.get(a);", "-            a = p.get(match.get(a));", "+            a = path.get(match.get(a));", "-            b = base.get(b);", "+            b = contracted.get(b);", "-            b = p.get(match.get(b));", "+            b = path.get(match.get(b));"]}]}