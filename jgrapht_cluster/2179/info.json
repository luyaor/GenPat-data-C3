{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71c051c4cbeb7b098b5c4272baf68b4f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dfeeaac648c8365ed96af285e87ef69", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter( Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes, CellFactory cellFactory )", "signatureAfterChange": "     public JGraphModelAdapter( Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes, CellFactory cellFactory )", "diff": ["-        m_jtGraph = jGraphTGraph;", "+        m_jtGraph = new ShieldedGraph( jGraphTGraph );", "-            addJGraphTVertex( i.next(  ) );", "+            handleJGraphTAddedVertex( i.next(  ) );", "-            addJGraphTEdge( (org._3pq.jgrapht.Edge) i.next(  ) );", "+            handleJGraphTAddedEdge( (org._3pq.jgrapht.Edge) i.next(  ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f136ebdd3ba5198f92422631accadf11", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Set<V>> stronglyConnectedSets()", "signatureAfterChange": "     public List<Set<V>> stronglyConnectedSets()", "diff": ["-            DirectedGraph<V, E> inverseGraph = new DefaultDirectedGraph<V, E>();", "-            GraphHelper.addGraphReversed(inverseGraph, m_graph);", "+            DirectedGraph<V, E> inverseGraph =", "+                new DefaultDirectedGraph<V, E>(m_graph.getEdgeFactory());", "+            Graphs.addGraphReversed(inverseGraph, m_graph);"]}]}