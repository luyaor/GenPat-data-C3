{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3b3343577f61972b8401aae12395ab7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f3f252eaa26e44f21c93817bb6fe26e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "215e752a693cedd4e948342c99e93722b6fbe26a", "commitAfterChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "         private void filterEdgesAndVertices( Object[] allCells, Set jEdges,             Set jVertices )", "signatureAfterChange": "         private void filterEdgesAndVertices( Object[] allCells, Set jEdges,             Set jVertices )", "diff": ["-                else if( !( current instanceof Port ) ) {", "-                    if( current instanceof DefaultGraphCell ) {", "-                        DefaultGraphCell graphCell = (DefaultGraphCell) current;", "+                else if( current instanceof Port ) {", "+                    // ignore it -- we don't care about ports.", "+                }", "+                else if( current instanceof DefaultGraphCell ) {", "+                    DefaultGraphCell graphCell = (DefaultGraphCell) current;", "-                        if( graphCell.isLeaf(  ) // Note: do not change the order", "-                                || ", "-                            // of these conditions; the code uses the short-cutting of ||.", "-                            ( graphCell.getFirstChild(  ) instanceof Port ) ) {", "-                            jVertices.add( current );", "-                        }", "-", "-                        // If a DefaultGraphCell has a Port as a child, it is a", "-                    }", "-                    else if( current instanceof GraphCell ) {", "-                        // If it is not a DefaultGraphCell, it doesn't have", "-                        // children.", "+                    if( graphCell.isLeaf(  ) // Note: do not change the order", "+                            || ", "+                        // of these conditions; the code uses the short-cutting of ||.", "+                        ( graphCell.getFirstChild(  ) instanceof Port ) ) {", "-                    // Otherwise, this is neither an Edge nor a GraphCell; then we", "-                    // don't know what to do with it. So ignore.", "+                    // If a DefaultGraphCell has a Port as a child, it is a", "+                }", "+                else if( current instanceof GraphCell ) {", "+                    // If it is not a DefaultGraphCell, it doesn't have", "+                    // children.", "+                    jVertices.add( current );", "+                }", "+                else {", "+                    // Otherwise, this is neither an Edge nor a GraphCell; ", "+                    // we don't have any use for it -- ignore."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14af198f4831670ffdefa5b14ac6bdf0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 35, "signatureBeforeChange": "         private void filterEdgesAndVertices( Object[] allCells, Set jEdges,             Set jVertices )", "signatureAfterChange": "         private List filterVertices( Object[] cells )", "diff": ["-         */", "-        private void filterEdgesAndVertices( Object[] allCells, Set jEdges,", "-            Set jVertices ) {", "-            for( int i = 0; i < allCells.length; i++ ) {", "-                Object current = allCells[ i ];", "-                if( current instanceof org.jgraph.graph.Edge ) {", "-                    jEdges.add( current );", "-                }", "-                else if( current instanceof Port ) {", "-                    // ignore it -- we don't care about ports.", "-                }", "-                else if( current instanceof DefaultGraphCell ) {", "-                    DefaultGraphCell graphCell = (DefaultGraphCell) current;", "-", "-                    if( graphCell.isLeaf(  ) // Note: do not change the order", "-                            || ", "-                        // of these conditions; the code uses the short-cutting of ||.", "-                        ( graphCell.getFirstChild(  ) instanceof Port ) ) {", "-                        jVertices.add( current );", "-                    }", "-", "-                    // If a DefaultGraphCell has a Port as a child, it is a", "-                }", "-                else if( current instanceof GraphCell ) {", "-                    // If it is not a DefaultGraphCell, it doesn't have", "-                    // children.", "-                    jVertices.add( current );", "-                }", "-                else {", "-                    // Otherwise, this is neither an Edge nor a GraphCell; ", "-                    // we don't have any use for it -- ignore.", "+         */", "+        private List filterVertices( Object[] cells ) {", "+            List jVertices = new ArrayList();", "+            ", "+            for( int i = 0; i < cells.length; i++ ) {", "+                Object cell = cells[ i ];", "+", "+                if( cell instanceof org.jgraph.graph.Edge ) {", "+                    // ignore -- we don't care about edges.", "+                }", "+                else if( cell instanceof Port ) {", "+                    // ignore -- we don't care about ports.", "+                }", "+                else if( cell instanceof DefaultGraphCell ) {", "+                    DefaultGraphCell graphCell = (DefaultGraphCell) cell;", "+", "+                    // If a DefaultGraphCell has a Port as a child, it is a vertex.", "+                    // Note: do not change the order of following conditions; ", "+                    // the code uses the short-circuit evaluation of ||.", "+                    if( graphCell.isLeaf(  ) ", "+                            || graphCell.getFirstChild(  ) instanceof Port ) {", "+                        jVertices.add( cell );", "+                    }", "+                }", "+                else if( cell instanceof GraphCell ) {", "+                    // If it is not a DefaultGraphCell, it doesn't have", "+                    // children.", "+                    jVertices.add( cell );", "+                }", "+            }", "+            ", "+            return jVertices;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796cedf98b7911be13c2dc07461b4a8b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "a4491f801ff4eba32d8029dda18c582844b268e3", "commitAfterChange": "dca8f0b0b2b997b3562b349da681aa495eb852bf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public void insert( Object[] theRoots, Map attributes, ConnectionSet cs,         ParentMap pm, UndoableEdit[] edits )", "signatureAfterChange": "         private void filterEdgesAndVertices( Object[] allCells, Set jEdges,             Set jVertices )", "diff": ["-    public void insert( Object[] theRoots, Map attributes, ConnectionSet cs,", "-        ParentMap pm, UndoableEdit[] edits ) {", "-        throw new UnsupportedOperationException( ", "-            \"Insert only via the JGraphT graph.\" );", "+         */", "+        private void filterEdgesAndVertices( Object[] allCells, Set jEdges,", "+            Set jVertices ) {", "+            for( int i = 0; i < allCells.length; i++ ) {", "+                Object current = allCells[ i ];", "+", "+                if( current instanceof org.jgraph.graph.Edge ) {", "+                    jEdges.add( current );", "+                }", "+                else if( !( current instanceof Port ) ) {", "+                    if( current instanceof DefaultGraphCell ) {", "+                        DefaultGraphCell graphCell = (DefaultGraphCell) current;", "+", "+                        if( graphCell.isLeaf(  ) // Note: do not change the order", "+                                || ", "+                            // of these conditions; the code uses the short-cutting of ||.", "+                            ( graphCell.getFirstChild(  ) instanceof Port ) ) {", "+                            jVertices.add( current );", "+                        }", "+", "+                        // If a DefaultGraphCell has a Port as a child, it is a", "+                    }", "+                    else if( current instanceof GraphCell ) {", "+                        // If it is not a DefaultGraphCell, it doesn't have", "+                        // children.", "+                        jVertices.add( current );", "+                    }", "+", "+                    // Otherwise, this is neither an Edge nor a GraphCell; then we", "+                    // don't know what to do with it. So ignore.", "+                }", "+            }"]}]}