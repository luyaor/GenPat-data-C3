{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04cde8f904426f428d7445ee9df8633a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f49a9db9309591ed6ad821c02a6b38c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "c105c53aeb7d2471227c61d2a14c86cbc14dfc04", "commitAfterChange": "41540d6069074864616a1b8145b5f82327c8ca30", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private void verifyReversal(         DirectedGraph<String, DefaultEdge> g,         DirectedGraph<String, DefaultEdge> r,         DefaultEdge e)", "signatureAfterChange": "      private void verifyReversal(         DirectedGraph<String, DefaultEdge> g,         DirectedGraph<String, DefaultEdge> r,         DefaultEdge e)", "diff": ["+        Set<DefaultEdge> s = r.getAllEdges(v1, v2);", "+        assertEquals(0, s.size());", "+", "+        s = r.getAllEdges(v2, v1);", "+        assertEquals(1, s.size());", "+        assertSame(e, s.iterator().next());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a8739621c236434565dc7c1d97ac76", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/NeighborIndexTest.java", "commitBeforeChange": "9aa77050b482cd35622f2b052f283cbdea563cf6", "commitAfterChange": "71029068583c81632b4d5180b7465932b933e753", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testNeighborSet()", "signatureAfterChange": "      public void testNeighborSet()", "diff": ["-        Set neighbors = index.neighborsOf(V1);", "+        Set neighbors1 = index.neighborsOf(V1);", "-        assertEquals(1, neighbors.size());", "-        assertEquals(true, neighbors.contains(V2));", "+        assertEquals(1, neighbors1.size());", "+        assertEquals(true, neighbors1.contains(V2));", "-        assertEquals(2, neighbors.size());", "-        assertEquals(true, neighbors.contains(V3));", "+        Set neighbors3 = index.neighborsOf(V3);", "+        ", "+        assertEquals(2, neighbors1.size());", "+        assertEquals(true, neighbors1.contains(V3));", "+", "+        assertEquals(1, neighbors3.size());", "+        assertEquals(true, neighbors3.contains(V1));", "-        assertEquals(1, neighbors.size());", "-        assertEquals(false, neighbors.contains(V3));", "+        assertEquals(1, neighbors1.size());", "+        assertEquals(false, neighbors1.contains(V3));", "+        assertEquals(0, neighbors3.size());", "+        ", "-        assertEquals(0, neighbors.size());", "+        assertEquals(0, neighbors1.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe243997991ab08716055fcc3ec20f10", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/NeighborIndexTest.java", "commitBeforeChange": "9aa77050b482cd35622f2b052f283cbdea563cf6", "commitAfterChange": "71029068583c81632b4d5180b7465932b933e753", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDirectedNeighborSet()", "signatureAfterChange": "      public void testDirectedNeighborSet()", "diff": ["+        Set q = index.successorsOf(V3);", "+        ", "+        assertEquals(1, q.size());", "+        assertEquals(true, q.contains(V1));", "+        ", "+        assertEquals(0, q.size());"]}]}