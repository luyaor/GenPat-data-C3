{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19bbd62bff92dbb11be87d05e582a0fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758f4c9a7c82ad3996350cd5d50c2ef4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "031459d6e58bfab7227c1f29575f466935e4a228", "commitAfterChange": "4f70257bd051e3e96df9996dad40065743a630ec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testComplexDag()", "signatureAfterChange": "           @Test     public void testOneNode()", "diff": ["+    ", "-    public void testComplexDag() {", "+    public void testOneNode() {", "-\tg.addVertex(\"b\");", "-\tg.addVertex(\"c\");", "-\tg.addVertex(\"d\");", "-\tg.addVertex(\"e\");", "-\tg.addVertex(\"f\");", "-\tg.addVertex(\"g\");", "-\tg.addEdge(\"a\", \"b\");", "-\tg.addEdge(\"b\", \"c\");", "-\tg.addEdge(\"c\", \"d\");", "-\tg.addEdge(\"d\", \"f\");", "-\tg.addEdge(\"b\", \"e\");", "-\tg.addEdge(\"e\", \"f\");", "-\tg.addEdge(\"f\", \"g\");", "-\tg.addEdge(\"a\", \"f\");", "-", "-\tAssert.assertEquals(\"b\", new TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", \"e\", \"c\"));", "+\tAssert.assertEquals(\"a\", new TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", \"a\", \"a\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adf334855782de8d65ed45f3b946c406", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/AsWeightedGraphTest.java", "commitBeforeChange": "5fd52feef7dfccbb0b591fde0bda240336fc10d1", "commitAfterChange": "c47aefcfe74648da036d5e9f46b58264738e055c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void setUp()", "signatureAfterChange": "      @Override     public void setUp()", "diff": ["-        weightedGraph =", "-            new SimpleWeightedGraph<String, DefaultWeightedEdge>(", "-                DefaultWeightedEdge.class);", "-        unweightedGraph =", "-            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);", "+        // Create a weighted, undirected graph", "+        weightedGraph = new SimpleWeightedGraph<String, DefaultWeightedEdge>(DefaultWeightedEdge.class);", "+        this.createdWeightedGraph(weightedGraph);", "-        // Create a very simple graph", "-        weightedGraph.addVertex(\"v1\");", "-        weightedGraph.addVertex(\"v2\");", "-        weightedGraph.addVertex(\"v3\");", "+        //Create an undirected graph without weights", "+        unweightedGraph = new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);", "+        this.createdUnweightedGraph(unweightedGraph);", "-        unweightedGraph.addVertex(\"v1\");", "-        unweightedGraph.addVertex(\"v2\");", "-        unweightedGraph.addVertex(\"v3\");", "+        //Create a weighted, directed graph", "+        directedWeightedGraph=new SimpleDirectedWeightedGraph<String, DefaultWeightedEdge>(DefaultWeightedEdge.class);", "+        this.createdWeightedGraph(directedWeightedGraph);", "-        weightedGraph.setEdgeWeight(weightedGraph.addEdge(\"v1\", \"v2\"), 1.);", "-        weightedGraph.setEdgeWeight(weightedGraph.addEdge(\"v2\", \"v3\"), 2.);", "-        weightedGraph.setEdgeWeight(weightedGraph.addEdge(\"v3\", \"v1\"), 3.);", "-", "-        unweightedGraph.addEdge(\"v1\", \"v2\");", "-        unweightedGraph.addEdge(\"v2\", \"v3\");", "-        unweightedGraph.addEdge(\"v3\", \"v1\");", "+        //Create a directed graph without weights", "+        directedUnweightedGraph =new SimpleDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+        this.createdUnweightedGraph(directedUnweightedGraph);"]}]}