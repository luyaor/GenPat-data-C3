{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2091de7342b316f2d374599e0ca1e8fd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df8a1be2f879263423eb86718de6814", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "e34958c59f3372942389846e0b479969a40b8361", "commitAfterChange": "84c1df97f9cbf88f4c715bce1371505ec0e166a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> graph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-        DirectedGraph<V, E> graph,", "+        DirectedGraph<V, E> visitedGraph,", "-                    graph.outgoingEdgesOf(data.vertex).iterator();", "+                    visitedGraph.outgoingEdgesOf(data.vertex).iterator();", "-                        vertexToVertexData.get(graph.getEdgeTarget(edge));", "+                        vertexToVertexData.get(visitedGraph.getEdgeTarget(edge));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75297f46ac14a2f8e3fcc1536b3f37fc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-        FibonacciHeapNode<QueueEntry<V, E>> node = m_heap.removeMin();", "-        node.getData().m_frozen = true;", "+        FibonacciHeapNode<QueueEntry<V, E>> node = heap.removeMin();", "+        node.getData().frozen = true;", "-        return node.getData().m_vertex;", "+        return node.getData().vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a6b506620f27ae071c5380142889605", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void handleJGraphTAddedVertex(V jtVertex)", "signatureAfterChange": "     void handleJGraphTAddedVertex(V jtVertex)", "diff": ["-        DefaultGraphCell vertexCell = m_cellFactory.createVertexCell(jtVertex);", "+        DefaultGraphCell vertexCell = cellFactory.createVertexCell(jtVertex);", "-        m_vertexToCell.put(jtVertex, vertexCell);", "-        m_cellToVertex.put(vertexCell, jtVertex);", "+        vertexToCell.put(jtVertex, vertexCell);", "+        cellToVertex.put(vertexCell, jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93188bea3654dbdb62432d68957d5893", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "4d7b735198ee2f6b968179206989dbb86fc679e1", "commitAfterChange": "78884be0de3af7915e782067f1b82ecce38ca128", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static <V, E> V initialize(         DirectedGraph<V, E> dg,         LinkedList<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private static <V, E> V initialize(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["-        LinkedList<V> queue,", "+        Queue<V> queue,", "-                queue.add(vertex);", "+                queue.offer(vertex);", "-            return queue.getFirst();", "+            return queue.peek();", "+        }", "+    }"]}]}