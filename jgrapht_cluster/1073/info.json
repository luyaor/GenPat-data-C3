{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45f1f56eaa7221648c006fb285f38669", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "294d9c20c4547516245e0740084c3b14", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphHelper.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static <V, E extends Edge<V>> UndirectedGraph<V, E> undirectedGraph(         Graph<V, E> g)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\") \tpublic static <V, E extends DirEdge<V>> UndirectedGraph<V, Edge<V>> undirectedGraph(         Graph<V, E> g)", "diff": ["-    public static <V, E extends Edge<V>> UndirectedGraph<V, E> undirectedGraph(", "+    @SuppressWarnings(\"unchecked\")", "+\tpublic static <V, E extends DirEdge<V>> UndirectedGraph<V, Edge<V>> undirectedGraph(", "-            return new AsUndirectedGraph((DirectedGraph) g);", "+            return new AsUndirectedGraph<V,Edge<V>>((DirectedGraph)g);", "-            return (UndirectedGraph) g;", "+            return (UndirectedGraph<V,Edge<V>>) g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f931512538ac02706d38004506fa6e3c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSet.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean equals(Object other)", "signatureAfterChange": "          @SuppressWarnings(\"unchecked\")     public boolean equals(Object other)", "diff": ["+    ", "+    @SuppressWarnings(\"unchecked\")", "-        Object otherRepresentative = null;", "-        Object otherContext = null;", "+        E otherRepresentative = null;", "+        C otherContext = null;", "-            otherRepresentative = ((EquivalenceSet) other).getRepresentative();", "-            otherContext = ((EquivalenceSet) other).getContext();", "+            otherRepresentative = ((EquivalenceSet<E,C>) other).getRepresentative();", "+            otherContext = ((EquivalenceSet<E,C>) other).getContext();"]}]}