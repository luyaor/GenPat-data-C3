{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbdb81fc7cfe4fd3ff308807fcbd8920", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdc31ff814ade3295b3aa6609423959", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static <V, E> GraphIsomorphismInspector     createIsomorphismInspectorByType(         int type,         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,         EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "signatureAfterChange": "     public static <V, E> GraphIsomorphismInspector     createIsomorphismInspectorByType(         int type,         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<V, Graph<V, E>> vertexChecker,         EquivalenceComparator<E, Graph<V, E>> edgeChecker)", "diff": ["-        EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,", "-        EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "+        EquivalenceComparator<V, Graph<V, E>> vertexChecker,", "+        EquivalenceComparator<E, Graph<V, E>> edgeChecker)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a80e0d320f099a011609d74aa5f2247", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static <V, E> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,         EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "signatureAfterChange": "     public static <V, E> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<V, Graph<V, E>> vertexChecker,         EquivalenceComparator<E, Graph<V, E>> edgeChecker)", "diff": ["-        EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,", "-        EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "+        EquivalenceComparator<V, Graph<V, E>> vertexChecker,", "+        EquivalenceComparator<E, Graph<V, E>> edgeChecker)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c402d1513e1c526aa404fd821b423be", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     protected static <V, E> GraphIsomorphismInspector     createTopologicalExhaustiveInspector(         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,         EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     protected static <V, E> GraphIsomorphismInspector     createTopologicalExhaustiveInspector(         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<V, Graph<V, E>> vertexChecker,         EquivalenceComparator<E, Graph<V, E>> edgeChecker)", "diff": ["-        EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,", "-        EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "+        EquivalenceComparator<V, Graph<V, E>> vertexChecker,", "+        EquivalenceComparator<E, Graph<V, E>> edgeChecker)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92176761c42da90963809d364e2f35d0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/util/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testComparatorChain()", "signatureAfterChange": "     public void testComparatorChain()", "diff": ["-        EquivalenceComparatorChain comparatorChain =", "-            new EquivalenceComparatorChainBase(new OddEvenGroupComparator());", "+        EquivalenceComparatorChain<Integer,Object> comparatorChain =", "+            new EquivalenceComparatorChainBase<Integer,Object>(new OddEvenGroupComparator());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "958d300b7ce71e016036997ac3201a87", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected static <V, E> GraphIsomorphismInspector     createAppropriateConcreteInspector(         int graphType,         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,         EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "signatureAfterChange": "     protected static <V, E> GraphIsomorphismInspector     createAppropriateConcreteInspector(         int graphType,         Graph<V, E> graph1,         Graph<V, E> graph2,         EquivalenceComparator<V, Graph<V, E>> vertexChecker,         EquivalenceComparator<E, Graph<V, E>> edgeChecker)", "diff": ["-        EquivalenceComparator<? super V, ? super Graph<V, E>> vertexChecker,", "-        EquivalenceComparator<? super E, ? super Graph<V, E>> edgeChecker)", "+        EquivalenceComparator<V, Graph<V, E>> vertexChecker,", "+        EquivalenceComparator<E, Graph<V, E>> edgeChecker)"]}]}