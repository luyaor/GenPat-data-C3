{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5d803dddcd75cf3a9387dc324fbf4b1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb41db33992dc4992cbc619a7dabd26", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles.java", "commitBeforeChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "commitAfterChange": "4d87df49257bc31c259b3dfd0ef0ddc6431d52d9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override public List<List<V>> findSimpleCycles()", "signatureAfterChange": "     @Override public List<List<V>> findSimpleCycles()", "diff": ["-        StrongConnectivityInspector<V, E> inspector =", "-            new StrongConnectivityInspector<V, E>(graph);", "+        KosarajuStrongConnectivityInspector<V, E> inspector =", "+            new KosarajuStrongConnectivityInspector<V, E>(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dafe615e74072d9b064de3bc02c173", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public boolean removeEdge(E e)", "signatureAfterChange": "     public boolean removeEdge(E e)", "diff": ["-            m_specifics.removeEdgeFromTouchingVertices(e);", "-            m_edgeMap.remove(e);", "+            specifics.removeEdgeFromTouchingVertices(e);", "+            edgeMap.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e84cdac7889beeb9c75bd3a11ae9457", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "diff": ["-            m_specifics.removeEdgeFromTouchingVertices(e);", "-            m_edgeMap.remove(e);", "+            specifics.removeEdgeFromTouchingVertices(e);", "+            edgeMap.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81bb531e277a9f2325b8cabfb52ec80a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "commitAfterChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object clone(  )", "signatureAfterChange": "     public Object clone(  )", "diff": ["-            newGraph.m_vertexMap                 = new HashMap(  );", "-            newGraph.m_edgeSet                   = new HashSet(  );", "+            newGraph.m_vertexMap                 = new LinkedHashMap(  );", "+            newGraph.m_edgeSet                   = new LinkedHashSet(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d61465b2463782b8d1b9dded642973", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "commitAfterChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractBaseGraph( EdgeFactory ef, boolean allowMultipleEdges,         boolean allowLoops )", "signatureAfterChange": "     public AbstractBaseGraph( EdgeFactory ef, boolean allowMultipleEdges,         boolean allowLoops )", "diff": ["-        m_vertexMap                 = new HashMap(  );", "-        m_edgeSet                   = new HashSet(  );", "+        m_vertexMap                 = new LinkedHashMap(  );", "+        m_edgeSet                   = new LinkedHashSet(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb6a9bd949e92c9875ad07204f03aa3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "commitAfterChange": "4d87df49257bc31c259b3dfd0ef0ddc6431d52d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Set<V> findCycles()", "signatureAfterChange": "     public Set<V> findCycles()", "diff": ["-        StrongConnectivityInspector<V, E> inspector =", "-            new StrongConnectivityInspector<V, E>(graph);", "+        KosarajuStrongConnectivityInspector<V, E> inspector =", "+            new KosarajuStrongConnectivityInspector<V, E>(graph);"]}]}