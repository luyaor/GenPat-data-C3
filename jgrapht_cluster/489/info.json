{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65a2780fa646cf3fc57901868f54747d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d345573d0079e8c0ccb29c9c09a8daf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          ProbeIterator(Set<V> cycleSet, V startVertex)", "signatureAfterChange": "          ProbeIterator(Set<V> cycleSet, V startVertex)", "diff": ["-            super(m_graph, startVertex);", "-            m_cycleSet = cycleSet;", "-            m_path = new ArrayList<V>();", "+            super(graph, startVertex);", "+            this.cycleSet = cycleSet;", "+            path = new ArrayList<V>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a45a5c21d61a0301fd391a3eac9e94", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/UndirectedGraphUnion.java", "commitBeforeChange": "5e0bf7775da2a8b27b449fcc33833f6ca59aa433", "commitAfterChange": "c1b18555a2f28acb0ec5c4b00226afe9c678f1ef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     public int degreeOf(V vertex)", "signatureAfterChange": "\r \r     public int degreeOf(V vertex)", "diff": ["-        Set<E> r = edgeSet();\r", "+        Set<E> r = edgesOf(vertex);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dfeeaac648c8365ed96af285e87ef69", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter( Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes, CellFactory cellFactory )", "signatureAfterChange": "     public JGraphModelAdapter( Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes, CellFactory cellFactory )", "diff": ["-        m_jtGraph = jGraphTGraph;", "+        m_jtGraph = new ShieldedGraph( jGraphTGraph );", "-            addJGraphTVertex( i.next(  ) );", "+            handleJGraphTAddedVertex( i.next(  ) );", "-            addJGraphTEdge( (org._3pq.jgrapht.Edge) i.next(  ) );", "+            handleJGraphTAddedEdge( (org._3pq.jgrapht.Edge) i.next(  ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94fec17f50050de119da43fbdf67b562", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/VertexDegreeComparator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public VertexDegreeComparator(UndirectedGraph<V, E> g,         boolean ascendingOrder)", "signatureAfterChange": "     public VertexDegreeComparator(UndirectedGraph<V, E> g,         boolean ascendingOrder)", "diff": ["-        m_graph = g;", "-        m_ascendingOrder = ascendingOrder;", "+        graph = g;", "+        this.ascendingOrder = ascendingOrder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e047d84f3554328ce8afbc0da1b2f7d4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultListenableGraph(Graph<V, E> g, boolean reuseEvents)", "signatureAfterChange": "     public DefaultListenableGraph(Graph<V, E> g, boolean reuseEvents)", "diff": ["-        m_reuseEvents = reuseEvents;", "-        m_reuseableEdgeEvent = new FlyweightEdgeEvent<V,E>(this, -1, null);", "-        m_reuseableVertexEvent = new FlyweightVertexEvent<V>(this, -1, null);", "+        this.reuseEvents = reuseEvents;", "+        reuseableEdgeEvent = new FlyweightEdgeEvent<V,E>(this, -1, null);", "+        reuseableVertexEvent = new FlyweightVertexEvent<V>(this, -1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed79edbc28f2f2314fbb74c66e8dad8c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter(         Graph<V, E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory<V,E> cellFactory)", "signatureAfterChange": "     public JGraphModelAdapter(         Graph<V, E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory<V,E> cellFactory)", "diff": ["-        m_jtGraph = new ShieldedGraph(jGraphTGraph);", "+        jtGraph = new ShieldedGraph(jGraphTGraph);", "-        m_cellFactory = cellFactory;", "+        this.cellFactory = cellFactory;"]}]}