{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18ab52a53e205830bb5520e12c8af034", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c661501e01420315d33c4f771915270", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/ProximityIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final Edge getSpanningTreeEdge(Object vertex)", "signatureAfterChange": "     public final E getSpanningTreeEdge(V vertex)", "diff": ["-    public final Edge getSpanningTreeEdge(Object vertex)", "+    public final E getSpanningTreeEdge(V vertex)", "-        return (Edge) getHeapVertex(vertex).getAdditional();", "+        return getHeapVertex(vertex).getAdditional();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a638874d90e5bbaa56b5ad191275550c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public List removeAllEdges( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public List removeAllEdges( V sourceVertex, V targetVertex )", "diff": ["-    public List removeAllEdges( Object sourceVertex, Object targetVertex ) {", "-        List removed = getAllEdges( sourceVertex, targetVertex );", "+    public List removeAllEdges( V sourceVertex, V targetVertex ) {", "+        List<E> removed = getAllEdges( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d547c9e4fd9339b500938f6984cd1dba", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/VertexDegreeEquivalenceComparator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int equivalenceHashcode(Object vertex, Object context)", "signatureAfterChange": "     public int equivalenceHashcode(V vertex, Graph<V,E> context)", "diff": ["-    public int equivalenceHashcode(Object vertex, Object context)", "+    public int equivalenceHashcode(V vertex, Graph<V,E> context)", "-        InOutDegrees inOut = getInOutDegrees((Graph) context, vertex);", "+        InOutDegrees inOut = getInOutDegrees(context, vertex);"]}]}