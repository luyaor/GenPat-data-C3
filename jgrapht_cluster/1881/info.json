{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "076bfd87330623115243032d5f1ee054", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f01001741940e0d4fd748cc750f9b6d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String [] args)         throws Exception", "signatureAfterChange": "     public static void main(String [] args)         throws Exception", "diff": ["-                    org._3pq.jgrapht.experimental.heap.FibonacciHeap", "+                    org.jgrapht.experimental.heap.FibonacciHeap", "-                    org._3pq.jgrapht.experimental.heap.FibonacciHeap", "+                    org.jgrapht.experimental.heap.FibonacciHeap", "-                org._3pq.jgrapht.experimental.heap.FibonacciHeap.getFactory());", "+                org.jgrapht.experimental.heap.FibonacciHeap.getFactory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a603269e30f90bbb91fbcbf3d1442d8d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "signatureAfterChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "diff": ["-                    if (m_graph.containsEdge(candidate, new_candidate)) {", "+                    if (graph.containsEdge(candidate, new_candidate)) {", "-                    if (m_graph.containsEdge(candidate, new_found)) {", "+                    if (graph.containsEdge(candidate, new_found)) {", "-                    m_cliques.add(new HashSet<V>(potential_clique));", "+                    cliques.add(new HashSet<V>(potential_clique));"]}]}