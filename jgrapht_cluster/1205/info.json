{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7de662dab0f93360e91b1bb68be68a40", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a40f824bd1c35b0a71ae96fb19cb39", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BellmanFordShortestPathTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testConstructor()", "signatureAfterChange": "     public void testConstructor()", "diff": ["-        BellmanFordShortestPath path;", "-        Graph g = create();", "+        BellmanFordShortestPath<String,DefaultWeightedEdge> path;", "+        Graph<String,DefaultWeightedEdge> g = create();", "-        path = new BellmanFordShortestPath(g, V3);", "+        path = new BellmanFordShortestPath<String,DefaultWeightedEdge>(g, V3);", "-        path = new BellmanFordShortestPath(g, V3, 2);", "+        path = new BellmanFordShortestPath<String,DefaultWeightedEdge>(", "+            g, V3, 2);", "-        path = new BellmanFordShortestPath(g, V3, 1);", "+        path = new BellmanFordShortestPath<String,DefaultWeightedEdge>(", "+            g, V3, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cd228ac1d95c1d15c601c061b502952", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/DijkstraShortestPathTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testConstructor()", "signatureAfterChange": "     public void testConstructor()", "diff": ["-        DijkstraShortestPath path;", "-        Graph g = create();", "+        DijkstraShortestPath<String,DefaultWeightedEdge> path;", "+        Graph<String,DefaultWeightedEdge> g = create();", "-        path = new DijkstraShortestPath(g, V3, V4, Double.POSITIVE_INFINITY);", "+        path = new DijkstraShortestPath<String,DefaultWeightedEdge>(", "+            g, V3, V4, Double.POSITIVE_INFINITY);", "-        path = new DijkstraShortestPath(g, V3, V4, 7);", "+        path = new DijkstraShortestPath<String,DefaultWeightedEdge>(", "+            g, V3, V4, 7);"]}]}