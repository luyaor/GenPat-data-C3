{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "377df8b0712aefaf2120b3cec33534f0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291e2160d80d54059d80160dbf46439b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void println(         PrintWriter out, String fromName, String toName, String value)", "signatureAfterChange": "      private void println(         PrintWriter out, String fromName, String toName, String value)", "diff": ["-        out.println(m_prefix + fromName + m_suffix + m_delimiter", "-                + m_prefix + toName + m_suffix + m_delimiter", "-                + m_prefix + value + m_suffix);", "+        out.println(prefix + fromName + suffix + delimiter", "+                + prefix + toName + suffix + delimiter", "+                + prefix + value + suffix);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33fade926bf2d73923d27be9062d4df9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "025405bd96caf64041d629592cdf353967e57edb", "commitAfterChange": "0eec89d7d76077b485851c80e8f4e78e2d1e8cbf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 23, "signatureBeforeChange": "           private void addUnseenChildrenOf( Object vertex )", "signatureAfterChange": "           private void addUnseenChildrenOf( Object vertex )", "diff": ["+", "-                if( !m_seen.contains( v ) ) {", "-                    m_seen.add( v );", "-                    m_pending.add( v );", "+                if( !m_seen.containsKey( v ) ) {", "+                    encounterVertex( v, e );", "+                }", "+                else {", "+                    encounterVertexAgain( v, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb11992badd26a11585df1a668191c9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "5f0104ac684044809cb315b79d4a999c5e1da731", "commitAfterChange": "a35680f67c56e8fcc81e697983a084c86d356dae", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void calculateMaximumFlow(         V source,         V sink)", "signatureAfterChange": "     public void calculateMaximumFlow(         V source,         V sink)", "diff": ["+                maximumFlowValue = 0.0;", "+                        if (currentArc.head == currentSink)", "+                            maximumFlowValue += currentArc.flow;", "+", "+", "+                            // _DBG", "+                            //System.out.println(currentArc.prototype + \" : \" + currentArc.capacity + \" : \" + currentArc.flow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dc2a9af47abdca011542e9656ee9f6a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "           private void addUnseenChildrenOf( Object vertex )", "signatureAfterChange": "           private void addUnseenChildrenOf( Object vertex )", "diff": ["-                if( !m_seen.containsKey( v ) ) {", "-                    encounterVertex( v, e );", "+                if( m_seen.containsKey( v ) ) {", "+                    encounterVertexAgain( v, e );", "-                    encounterVertexAgain( v, e );", "+                    encounterVertex( v, e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548adc38de7fdaf13d8fde51cd95b3a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted()", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted()", "diff": ["-        if (m_heap.size() == 0) {", "+        if (heap.size() == 0) {", "-            if (m_heap.min().getKey() > m_radius) {", "-                m_heap.clear();", "+            if (heap.min().getKey() > radius) {", "+                heap.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776d4eb7595001f7e734e4f48ed25441", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "025405bd96caf64041d629592cdf353967e57edb", "commitAfterChange": "0eec89d7d76077b485851c80e8f4e78e2d1e8cbf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public boolean hasNext(  )", "signatureAfterChange": "         public boolean hasNext(  )", "diff": ["-                        if( !m_seen.contains( v ) ) {", "-                            m_seen.add( v );", "-                            m_pending.add( v );", "+                        if( !m_seen.containsKey( v ) ) {", "+                            encounterVertex( v, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824811e1241278213018c9fefedeb0a3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void cascadingCut(FibonacciHeapNode<T> y)", "signatureAfterChange": "     protected void cascadingCut(FibonacciHeapNode<T> y)", "diff": ["-        FibonacciHeapNode<T> z = y.m_parent;", "+        FibonacciHeapNode<T> z = y.parent;", "-            if (!y.m_mark) {", "-                y.m_mark = true;", "+            if (!y.mark) {", "+                y.mark = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837af4816da4b8b824d882707475e0c3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "commitAfterChange": "0fa22166c3bce2b4318de51e3645ef9910304701", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted(  )", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted(  )", "diff": ["-        return m_heap.size(  ) == 0;", "+        if( m_heap.size(  ) == 0 ) {", "+            return true;", "+        }", "+        else {", "+            if( m_heap.min(  ).getKey(  ) > m_radius ) {", "+                m_heap.clear(  );", "+", "+                return true;", "+            }", "+            else {", "+                return false;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c46d5ab3f4c1ed3bec23cd05fe37e6a0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/VertexPair.java", "commitBeforeChange": "b261cb99c92126b64c9129dbe772684f0da5e234", "commitAfterChange": "22927827f36ad9b2cef7c5f5670c4d2598840023", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public V getOther(V one)", "signatureAfterChange": "      public V getOther(V one)", "diff": ["-    public V getOther(V one) {", "-        if (one.equals(n1))", "+    public V getOther(V one)", "+    {", "+        if (one.equals(n1)) {", "-        else if (one.equals(n2))", "+        } else if (one.equals(n2)) {", "-        else", "+        } else {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98fe7bd9765b3a9b3435ee71e5fe165", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "a1f23a3100510ec39002be3afaff305ba3ad818a", "commitAfterChange": "b76ad743469fbc5f4b71d3a57c1c2abdaeec2142", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-            v = popStack();", "-            if (v == null) {", "+            Object o = stack.removeLast();", "+            if (o == SENTINEL) {", "+                v = TypeUtil.uncheckedCast(o, vertexTypeDecl);", "-        stack.add(v);", "-        stack.add(null);", "+        stack.addLast(v);", "+        stack.addLast(SENTINEL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da55e7eb58a814d00655bfb7df37b7a4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "025405bd96caf64041d629592cdf353967e57edb", "commitAfterChange": "0eec89d7d76077b485851c80e8f4e78e2d1e8cbf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "         public XXFirstIterator( Graph g, Object startVertex,             SimpleContainer pendingVerticesContainer )", "signatureAfterChange": "         public XXFirstIterator( Graph g, Object startVertex,             SimpleContainer pendingVerticesContainer )", "diff": ["-                    m_seen.add( vStart );", "-                    m_pending.add( vStart );", "+                    encounterVertex( vStart, null );", "-                m_seen.add( startVertex );", "-                m_pending.add( startVertex );", "+                encounterVertex( startVertex, null );"]}]}