{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b59d6bf60353e4fbd86733d5d3e0942c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c7bbf4d460f89a44b1dc1ee7c1a6d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/KShortestPathsIterator.java", "commitBeforeChange": "d11cabd1aabdc954107d901bc835dd46e2c5b915", "commitAfterChange": "695a606157d7ef974075682ce4ecc3e1dfdc85a4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public KShortestPathsIterator(Graph<V, E> graph, V startVertex, int maxSize)", "signatureAfterChange": "     public KShortestPathsIterator(Graph<V, E> graph, V startVertex,             V endVertex, int maxSize)", "diff": ["-    public KShortestPathsIterator(Graph<V, E> graph, V startVertex, int maxSize)", "-    {", "+    public KShortestPathsIterator(Graph<V, E> graph, V startVertex,", "+            V endVertex, int maxSize) {", "+        this.endVertex = endVertex;", "-        this.k = maxSize;", "-        this.prevSeenDataContainer =", "-            new HashMap<V, RankingPathElementList<V, E>>();", "+        this.prevSeenDataContainer = new HashMap<V, RankingPathElementList<V, E>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d547c9e4fd9339b500938f6984cd1dba", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/VertexDegreeEquivalenceComparator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int equivalenceHashcode(Object vertex, Object context)", "signatureAfterChange": "     public int equivalenceHashcode(V vertex, Graph<V,E> context)", "diff": ["-    public int equivalenceHashcode(Object vertex, Object context)", "+    public int equivalenceHashcode(V vertex, Graph<V,E> context)", "-        InOutDegrees inOut = getInOutDegrees((Graph) context, vertex);", "+        InOutDegrees inOut = getInOutDegrees(context, vertex);"]}]}