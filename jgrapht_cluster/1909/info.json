{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cb3fdea2cfb068bbbaaf68492f0d5c0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c76c424a5189e146e938af5fb437896", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph create(  )", "signatureAfterChange": "     public Pseudograph create(  )", "diff": ["-        g.addVertex( m_v1 );", "+        g.addVertex( V1 );", "-        g.addVertex( m_v2 );", "+        g.addVertex( V2 );", "-        g.addVertex( m_v3 );", "+        g.addVertex( V3 );", "-        g.addVertex( m_v4 );", "+        g.addVertex( V4 );", "-        m_e1 = g.addEdge( m_v1, m_v2 );", "+        m_e1 = g.addEdge( V1, V2 );", "-        m_e2 = g.addEdge( m_v2, m_v3 );", "+        m_e2 = g.addEdge( V2, V3 );", "-        m_e3 = g.addEdge( m_v3, m_v1 );", "+        m_e3 = g.addEdge( V3, V1 );", "-        m_e3_b = g.addEdge( m_v3, m_v1 );", "+        m_e3_b = g.addEdge( V3, V1 );", "-        m_u = g.addEdge( m_v1, m_v1 );", "+        m_u = g.addEdge( V1, V1 );", "-        m_u = g.addEdge( m_v1, m_v1 );", "+        m_u = g.addEdge( V1, V1 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e2840ca83eaa05a021396983d624a99", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public WeightedGraph create()", "signatureAfterChange": "     public WeightedGraph create(  )", "diff": ["-    public WeightedGraph create() {", "-        WeightedGraph g = new WeightedPseudograph();", "+    public WeightedGraph create(  ) {", "+        WeightedGraph g = new WeightedPseudograph(  );", "-        g.addVertex(m_v1);", "-        g.addVertex(m_v2);", "-        g.addVertex(m_v3);", "-        g.addVertex(m_v4);", "-        m_e1 = GraphHelper.addEdge(g, m_v1, m_v2, 1);", "-        m_e2 = GraphHelper.addEdge(g, m_v2, m_v3, 2);", "-        m_e3 = GraphHelper.addEdge(g, m_v3, m_v1, 4);", "-        m_e4 = GraphHelper.addEdge(g, m_v3, m_v4, 10);", "-        m_u = GraphHelper.addEdge(g, m_v3, m_v3, 5);", "+        g.addVertex( V1 );", "+        g.addVertex( V2 );", "+        g.addVertex( V3 );", "+        g.addVertex( V4 );", "+        m_e1     = GraphHelper.addEdge( g, V1, V2, 1 );", "+        m_e2     = GraphHelper.addEdge( g, V2, V3, 2 );", "+        m_e3     = GraphHelper.addEdge( g, V3, V1, 4 );", "+        m_e4     = GraphHelper.addEdge( g, V3, V4, 10 );", "+        m_u      = GraphHelper.addEdge( g, V3, V3, 5 );", "+"]}]}