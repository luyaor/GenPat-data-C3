{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ca316dcab54c5ed466f63357bf5bf6d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54757608e133485852e89d160762626e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/CycleDetectorTest.java", "commitBeforeChange": "2003496a80f483b98d40a459268e93d0fdaec76c", "commitAfterChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void createGraph(Graph<String, DefaultEdge> g)", "signatureAfterChange": "     public void createGraph(Graph<String, DefaultEdge> g)", "diff": ["+        g.addVertex(V7);", "+", "+        // test an edge which leads into a cycle, but where the source", "+        // is not itself part of a cycle", "+        g.addEdge(V7, V1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed75eff5c93c5d70ebed62b9c0d1767d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "814806a526ac5cd0ec6456873087c2436693094e", "commitAfterChange": "ee669eeadb218d4615d2eaa8082ec262a58b20ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["+        if (!graph.containsVertex(endVertex)) {", "+            throw new IllegalArgumentException(", "+                \"graph must contain the end vertex\");", "+        }", "+        "]}]}