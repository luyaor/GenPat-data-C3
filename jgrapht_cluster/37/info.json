{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f80709ab44153106748365fca960ddf6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c074a443654fe155173a5cb6a92f11e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public CrossComponentIterator(Graph<V, E> g, V startVertex)", "signatureAfterChange": "     public CrossComponentIterator(Graph<V, E> g, V startVertex)", "diff": ["-        m_graph = g;", "+        graph = g;", "-        m_specifics = createGraphSpecifics(g);", "-        m_vertexIterator = g.vertexSet().iterator();", "+        specifics = createGraphSpecifics(g);", "+        vertexIterator = g.vertexSet().iterator();", "-        m_reusableEdgeEvent = new FlyweightEdgeEvent<V, E>(this, null);", "-        m_reusableVertexEvent = new FlyweightVertexEvent<V>(this, null);", "+        reusableEdgeEvent = new FlyweightEdgeEvent<V, E>(this, null);", "+        reusableVertexEvent = new FlyweightVertexEvent<V>(this, null);", "-            if (m_vertexIterator.hasNext()) {", "-                m_startVertex = m_vertexIterator.next();", "+            if (vertexIterator.hasNext()) {", "+                this.startVertex = vertexIterator.next();", "-                m_startVertex = null;", "+                this.startVertex = null;", "-            m_startVertex = startVertex;", "+            this.startVertex = startVertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eecfea562c04880e7194818181cd51b2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "          private VertexData(             VertexData<V> finishedData,             V vertex,             boolean discovered,             boolean finished)", "signatureAfterChange": "          private VertexData(             VertexData<V> finishedData,             V vertex,             boolean discovered,             boolean finished)", "diff": ["-            m_finishedData = finishedData;", "-            m_vertex = vertex;", "-            m_discovered = discovered;", "-            m_finished = finished;", "+            this.finishedData = finishedData;", "+            this.vertex = vertex;", "+            this.discovered = discovered;", "+            this.finished = finished;"]}]}