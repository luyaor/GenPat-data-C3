{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9375b68830c514ac0a635b5229943d1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b6ce1f064a2cb43860eafcd3bf41f8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TransitiveReductionTest.java", "commitBeforeChange": "011f1e4ed007e20ef02e12c898f369abbf15f340", "commitAfterChange": "67db11694f065b26fa72ab0bf7b3e7d5624c591c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void test()", "signatureAfterChange": "          @Test     public void testInternals()", "diff": ["+    ", "-    public void test() {", "+    public void testInternals() {", "-        final int[][] matrix = new int[][] {", "-            {0, 1, 1, 0, 0},", "-            {0, 0, 0, 0, 0},", "-            {0, 0, 0, 1, 1},", "-            {0, 0, 0, 0, 1},", "-            {0, 1, 0, 0, 0}", "-        };", "-        ", "-        final int[][] expected_transitively_reduced_matrix = new int[][] {", "-            {0, 0, 1, 0, 0},", "-            {0, 0, 0, 0, 0},", "-            {0, 0, 0, 1, 0},", "-            {0, 0, 0, 0, 1},", "-            {0, 1, 0, 0, 0}", "-        };", "-                        matrix.length);", "+                        path_matrix.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cdecc93eb19dcbeadbdf3dc1ac42f2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/alg/color/GreedyColoring.java", "commitBeforeChange": "a043534b3d73e2cf2e0d7d6b6cb13f5ab1cc6d36", "commitAfterChange": "58ffe75d7011b97e5d82e9b962f083efeda5131c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      int [] largestSaturationFirstOrder()", "signatureAfterChange": "      int [] largestSaturationFirstOrder()", "diff": ["-        final int [] order = new int[_neighbors.length]; // could be removed", "-                                                         // since buckets", "-                                                         // contains order", "-                                                         // reversed", "-            order[index++] = v;", "+            index++;"]}]}