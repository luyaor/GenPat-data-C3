{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a304571832fd39941ec25f6364f6ce6a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014fda320265117edd60e3e6fd28cd30", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\" \tprivate void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "diff": ["-    private void dfsVisit(DirectedGraph<V, E> graph,", "+\t@SuppressWarnings(\"unchecked\")\t// FIXME hb 28-nov-05: See FIXME's below", "+\tprivate void dfsVisit(DirectedGraph<V, E> graph,", "-        Stack<VertexData> stack = new Stack();", "+        Stack<VertexData> stack = new Stack<VertexData>();", "+                \t// FIXME hb 28-Nov-05: Clean after the fixme in VertexData below is solved", "+                // TODO: until only vertices are used as 1st parameter, type-saftey is difficult to realize (i.e, VertexData<V>", "-                Iterator<E> iter =", "+            \t// FIXME hb 28-Nov-05: Clean after the fixme in VertexData below is solved", "+                Iterator<? extends E> iter =", "-                    DirectedEdge edge = iter.next();", "+                    Edge<V> edge = iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad242d5ce8eb546ff47865ba5f7c3ab3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\"     private void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(DirectedGraph<V, E> graph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-    @SuppressWarnings(\"unchecked\")    // FIXME hb 28-nov-05: See FIXME's below", "-        VertexData vertexData,", "+        VertexData<V> vertexData,", "-        Stack<VertexData> stack = new Stack<VertexData>();", "+        Stack<VertexData<V>> stack = new Stack<VertexData<V>>();", "-            VertexData data = stack.pop();", "+            VertexData<V> data = stack.pop();", "-                    // FIXME hb 28-Nov-05: Clean after the fixme in VertexData below is solved", "-                    vertices.add((V) data.m_vertex);", "+                    vertices.add(data.m_vertex);", "-                // TODO: other way to identify when this vertex is finished!?", "-                // TODO: until only vertices are used as 1st parameter, type-saftey is difficult to realize (i.e, VertexData<V>", "-                stack.push(new VertexData(data, true, true));", "+                stack.push(new VertexData<V>(data, null, true, true));", "-                // FIXME hb 28-Nov-05: Clean after the fixme in VertexData below is solved", "-                    graph.outgoingEdgesOf((V) data.m_vertex).iterator();", "+                    graph.outgoingEdgesOf(data.m_vertex).iterator();", "-                    VertexData targetData =", "+                    VertexData<V> targetData =", "-                    // see TODO above", "-                    m_orderedVertices.addFirst((VertexData) data.m_vertex);", "+                    m_orderedVertices.addFirst(data.m_finishedData);"]}]}