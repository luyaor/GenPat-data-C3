{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a706dc5fbe2302b2406e1ce99831e1f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dcc490a4294c863359f47c1a6f3100a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "commitAfterChange": "5b8b2def419b220aa57ca346f586e7cc6eacdd0e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private int readNodeCount()", "signatureAfterChange": "      private int readNodeCount()", "diff": ["-        List<String> cols = skipComments();", "-        if (cols.get(0).equals(\"p\")) {", "-            return Integer.parseInt(cols.get(1));", "+        final String[] cols = skipComments();", "+        if (cols[0].equals(\"p\")) {", "+            return Integer.parseInt(cols[1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912ee38430022fa124eb8772c94d298a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a1594c7a8cf14f3607828e0c2206c8cb46973c14", "commitAfterChange": "7c2fd4236ba8ec0b0b36e4596ee2ead1af54cf2d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void createVertexData()", "signatureAfterChange": "     private void createVertexData()", "diff": ["-        Iterator<V> iter = graph.vertexSet().iterator();", "-", "-        while (iter.hasNext()) {", "-            V vertex = iter.next();", "+        for (V vertex : graph.vertexSet()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b48db2ac326bb71fabd99a57d217e5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a1594c7a8cf14f3607828e0c2206c8cb46973c14", "commitAfterChange": "7c2fd4236ba8ec0b0b36e4596ee2ead1af54cf2d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-                Iterator<? extends E> iter =", "-                    visitedGraph.outgoingEdgesOf(data.vertex).iterator();", "-", "-                while (iter.hasNext()) {", "-                    E edge = iter.next();", "+                for (E edge : visitedGraph.outgoingEdgesOf(data.vertex)) {"]}]}