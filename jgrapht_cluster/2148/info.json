{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8bf97bffdd4ffdc57803f6e8f6150e4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2348ef42af957facbe628a10924296eb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private boolean augmentFlowAlongInternal(double deltaFlow, VertexExtension node, Set<VertexExtension> seen)", "signatureAfterChange": "      private boolean augmentFlowAlongInternal(double deltaFlow, VertexExtension node, Set<VertexExtension> seen)", "diff": ["-        if (augmentFlowAlongInternal(deltaFlow, (VertexExtension) prev.source, seen)) {", "-            prev.flow         += deltaFlow;", "-            prev.inverse.flow -= deltaFlow;", "+        if (augmentFlowAlongInternal(deltaFlow, prev.<VertexExtension>getSource(), seen)) {", "+            prev.flow               += deltaFlow;", "+            prev.getInverse().flow  -= deltaFlow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc221db70279803a27c26962bb7b0898", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void augmentFlow()", "signatureAfterChange": "      private void augmentFlow()", "diff": ["-                Math.min(ex.source.excess, ex.capacity - ex.flow);", "+                Math.min(ex.getSource().excess, ex.capacity - ex.flow);", "-            if (augmentFlowAlongInternal(deltaFlow, (VertexExtension) ex.source, seen)) {", "-                ex.flow         += deltaFlow;", "-                ex.inverse.flow -= deltaFlow;", "+            if (augmentFlowAlongInternal(deltaFlow, ex.<VertexExtension>getSource(), seen)) {", "+                ex.flow              += deltaFlow;", "+                ex.getInverse().flow -= deltaFlow;"]}]}