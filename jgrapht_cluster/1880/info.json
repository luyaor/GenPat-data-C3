{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "393dff6efdc125bbbaecdd4f65b5f3c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e93eb151da7724d0697f0e6c98cd014", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/GenericGraphsTest.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void testAlissaHacker()", "signatureAfterChange": "      public void testAlissaHacker()", "diff": ["-\tpublic void testAlissaHacker() {", "-\t\t", "-\t\tDirectedGraph<String,CustomEdge> g = ", "-\t\t\tnew DefaultDirectedGraph<String,CustomEdge>();", "-\t\tg.addVertex(\"a\");", "-\t\tg.addVertex(\"b\");", "-\t\tg.addEdge(\"a\", \"b\");", "-\t\tDirectedEdge custom = g.getEdge(\"a\", \"b\");", "-\t\tSystem.err.println(custom);", "-\t}", "+    public void testAlissaHacker() {", "+        ", "+        DirectedGraph<String,CustomEdge> g = ", "+            new DefaultDirectedGraph<String,CustomEdge>();", "+        g.addVertex(\"a\");", "+        g.addVertex(\"b\");", "+        g.addEdge(\"a\", \"b\");", "+        DirectedEdge custom = g.getEdge(\"a\", \"b\");", "+                String s = custom.toString();", "+                assertEquals(\"(a,b)\",s);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406c0c68b18f381d61c9778e69222f45", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/GenericGraphsTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testAlissaHacker()", "signatureAfterChange": "      public void testAlissaHacker()", "diff": ["-            new DefaultDirectedGraph<String,CustomEdge>();", "+            new DefaultDirectedGraph<String,CustomEdge>(CustomEdge.class);", "-        DirectedEdge custom = g.getEdge(\"a\", \"b\");", "-                String s = custom.toString();", "-                assertEquals(\"(a,b)\",s);", "+        CustomEdge custom = g.getEdge(\"a\", \"b\");", "+        String s = custom.toString();", "+        assertEquals(\"Alissa P. Hacker\",s);"]}]}