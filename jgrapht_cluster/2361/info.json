{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a0343dc3617cf151614370d8c9d96f5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e3a5d72b43bab7a83f57111b623477", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph<String,DefaultEdge> create()", "signatureAfterChange": "     public Pseudograph<String,DefaultEdge> create()", "diff": ["-        m_e1 = g.addEdge(V1, V2);", "+        e1 = g.addEdge(V1, V2);", "-        m_e2 = g.addEdge(V2, V3);", "+        e2 = g.addEdge(V2, V3);", "-        m_e3 = g.addEdge(V3, V1);", "+        e3 = g.addEdge(V3, V1);", "-        m_e3_b = g.addEdge(V3, V1);", "+        e3_b = g.addEdge(V3, V1);", "-        assertNotNull(m_e3_b);", "+        assertNotNull(e3_b);", "-        m_u = g.addEdge(V1, V1);", "+        u = g.addEdge(V1, V1);", "-        m_u = g.addEdge(V1, V1);", "+        u = g.addEdge(V1, V1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0d04b21a21eb2d2c2369868ae4d9d1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ShortestPathTestCase.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          protected Graph createWithBias(boolean negate)", "signatureAfterChange": "          protected Graph createWithBias(boolean negate)", "diff": ["-        m_e12 = Graphs.addEdge(g, V1, V2, bias * 2);", "+        e12 = Graphs.addEdge(g, V1, V2, bias * 2);", "-        m_e13 = Graphs.addEdge(g, V1, V3, bias * 3);", "+        e13 = Graphs.addEdge(g, V1, V3, bias * 3);", "-        m_e24 = Graphs.addEdge(g, V2, V4, bias * 5);", "+        e24 = Graphs.addEdge(g, V2, V4, bias * 5);", "-        m_e34 = Graphs.addEdge(g, V3, V4, bias * 20);", "+        e34 = Graphs.addEdge(g, V3, V4, bias * 20);", "-        m_e45 = Graphs.addEdge(g, V4, V5, bias * 5);", "+        e45 = Graphs.addEdge(g, V4, V5, bias * 5);", "-        m_e15 = Graphs.addEdge(g, V1, V5, bias * 100);", "+        e15 = Graphs.addEdge(g, V1, V5, bias * 100);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1578ca59f3b4a059de518e45328f7ea0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Graph<String, DefaultEdge> init(boolean listenable)", "signatureAfterChange": "      private Graph<String, DefaultEdge> init(boolean listenable)", "diff": ["-        g.addVertex(_v1);", "-        g.addVertex(_v2);", "-        g.addVertex(_v3);", "-        g.addVertex(_v4);", "-        g.addEdge(_v1, _v2);", "-        g.addEdge(_v2, _v3);", "-        g.addEdge(_v3, _v1);", "-        g.addEdge(_v1, _v4);", "+        g.addVertex(v1);", "+        g.addVertex(v2);", "+        g.addVertex(v3);", "+        g.addVertex(v4);", "+        g.addEdge(v1, v2);", "+        g.addEdge(v2, v3);", "+        g.addEdge(v3, v1);", "+        g.addEdge(v1, v4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c76c424a5189e146e938af5fb437896", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph create(  )", "signatureAfterChange": "     public Pseudograph create(  )", "diff": ["-        g.addVertex( m_v1 );", "+        g.addVertex( V1 );", "-        g.addVertex( m_v2 );", "+        g.addVertex( V2 );", "-        g.addVertex( m_v3 );", "+        g.addVertex( V3 );", "-        g.addVertex( m_v4 );", "+        g.addVertex( V4 );", "-        m_e1 = g.addEdge( m_v1, m_v2 );", "+        m_e1 = g.addEdge( V1, V2 );", "-        m_e2 = g.addEdge( m_v2, m_v3 );", "+        m_e2 = g.addEdge( V2, V3 );", "-        m_e3 = g.addEdge( m_v3, m_v1 );", "+        m_e3 = g.addEdge( V3, V1 );", "-        m_e3_b = g.addEdge( m_v3, m_v1 );", "+        m_e3_b = g.addEdge( V3, V1 );", "-        m_u = g.addEdge( m_v1, m_v1 );", "+        m_u = g.addEdge( V1, V1 );", "-        m_u = g.addEdge( m_v1, m_v1 );", "+        m_u = g.addEdge( V1, V1 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fcb7b5bbed74fd9f5e9d34c6d8c0f17", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testIsGraphConnected(  )", "signatureAfterChange": "     public void testIsGraphConnected(  )", "diff": ["-        g.removeVertex( m_v4 );", "+        g.removeVertex( V4 );", "-        g.removeVertex( m_v1 );", "+        g.removeVertex( V1 );", "-        g.addEdge( m_v2, m_v2 );", "+        g.addEdge( V2, V2 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab51f709089799074c25b7c3e3097f3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testSubgraph()", "signatureAfterChange": "     public void testSubgraph()", "diff": ["-        g.removeVertex(_v1);", "+        g.removeVertex(v1);", "-        vset.add(_v1);", "+        vset.add(v1);", "-        assertEquals(0, sub.degreeOf(_v1));", "+        assertEquals(0, sub.degreeOf(v1));", "-        vset.add(_v2);", "-        vset.add(_v3);", "-        sub = new Subgraph<String, DefaultEdge>(g, vset, new HashSet<DefaultEdge>(g.getAllEdges(_v1, _v2)));", "+        vset.add(v2);", "+        vset.add(v3);", "+        sub = new Subgraph<String, DefaultEdge>(g, vset, new HashSet<DefaultEdge>(g.getAllEdges(v1, v2)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8188f6e778264a678369a8919494d254", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void initMultiTriangleWithMultiLoop(DirectedGraph<String, DefaultEdge> g)", "signatureAfterChange": "      private void initMultiTriangleWithMultiLoop(DirectedGraph<String, DefaultEdge> g)", "diff": ["-        g.addVertex(m_v1);", "-        g.addVertex(m_v2);", "-        g.addVertex(m_v3);", "+        g.addVertex(v1);", "+        g.addVertex(v2);", "+        g.addVertex(v3);", "-        g.addEdge(m_v1, m_v1);", "-        g.addEdge(m_v1, m_v2);", "-        g.addEdge(m_v2, m_v3);", "-        g.addEdge(m_v3, m_v1);", "+        g.addEdge(v1, v1);", "+        g.addEdge(v1, v2);", "+        g.addEdge(v2, v3);", "+        g.addEdge(v3, v1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0ec65e26c7b00cdf8a4e5c2bd796c32", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDirectedGraph(  )", "signatureAfterChange": "     public void testDirectedGraph(  )", "diff": ["-        g.addVertex( m_v1 );", "-        g.addVertex( m_v2 );", "-        g.addVertex( m_v3 );", "+        g.addVertex( V1 );", "+        g.addVertex( V2 );", "+        g.addVertex( V3 );", "-        g.addEdge( m_v1, m_v2 );", "+        g.addEdge( V1, V2 );", "-        g.addEdge( m_v1, m_v3 );", "+        g.addEdge( V1, V3 );"]}]}