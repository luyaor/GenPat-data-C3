{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3456fbc06e1ba49d1dee0d3f1b753a71", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb65fdbc87eb2c1930ceff2b78eb5c1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "7910c0fd6d4728c82ef6f78d6eea6c5ee8b6c177", "commitAfterChange": "e77755f7679a04576cd7ee82a98454cd80040c2c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Map createDefaultEdgeAttributes( Graph jGraphTGraph )", "signatureAfterChange": "     public static AttributeMap createDefaultEdgeAttributes( Graph jGraphTGraph )", "diff": ["+     */", "+    public static AttributeMap createDefaultEdgeAttributes( Graph jGraphTGraph ) {", "+        AttributeMap map = new AttributeMap(  );", "+", "+        if( jGraphTGraph instanceof DirectedGraph ) {", "+            GraphConstants.setLineEnd( map, GraphConstants.ARROW_TECHNICAL );", "+            GraphConstants.setEndFill( map, true );", "+            GraphConstants.setEndSize( map, 10 );", "+        }", "+", "+        GraphConstants.setForeground( map, Color.decode( \"#25507C\" ) );", "+        GraphConstants.setFont( map,", "+            GraphConstants.DEFAULTFONT.deriveFont( Font.BOLD, 12 ) );", "+        GraphConstants.setLineColor( map, Color.decode( \"#7AA1E6\" ) );", "+", "+        return map;", "+    }", "-     */", "-    protected Map createDefaultEdgeAttributes( Graph jGraphTGraph ) {", "-        Map map = new HashMap(  );", "-", "-        if( jGraphTGraph instanceof DirectedGraph ) {", "-            GraphConstants.setLineEnd( map, GraphConstants.ARROW_TECHNICAL );", "-            GraphConstants.setEndFill( map, true );", "-            GraphConstants.setEndSize( map, 10 );", "-        }", "-", "-        GraphConstants.setForeground( map, Color.decode( \"#25507C\" ) );", "-        GraphConstants.setFont( map,", "-            GraphConstants.defaultFont.deriveFont( Font.BOLD, 12 ) );", "-        GraphConstants.setLineColor( map, Color.decode( \"#7AA1E6\" ) );", "-", "-        return map;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6126e8f022336fc2e8689b88039ef30e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "7910c0fd6d4728c82ef6f78d6eea6c5ee8b6c177", "commitAfterChange": "e77755f7679a04576cd7ee82a98454cd80040c2c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected Map createDefaultVertexAttributes(  )", "signatureAfterChange": "     public static AttributeMap createDefaultVertexAttributes(  )", "diff": ["+     */", "+    public static AttributeMap createDefaultVertexAttributes(  ) {", "+        AttributeMap map = new AttributeMap(  );", "+        Color        c = Color.decode( \"#FF9900\" );", "+", "+        GraphConstants.setBounds( map, new Rectangle2D.Double( 50, 50, 90, 30 ) );", "+        GraphConstants.setBorder( map, BorderFactory.createRaisedBevelBorder(  ) );", "+        GraphConstants.setBackground( map, c );", "+        GraphConstants.setForeground( map, Color.white );", "+        GraphConstants.setFont( map,", "+            GraphConstants.DEFAULTFONT.deriveFont( Font.BOLD, 12 ) );", "+        GraphConstants.setOpaque( map, true );", "+", "+        return map;", "-     */", "-    protected Map createDefaultVertexAttributes(  ) {", "-        Map   map = new HashMap(  );", "-        Color c = Color.decode( \"#FF9900\" );", "-", "-        GraphConstants.setBounds( map, new Rectangle2D.Double( 50, 50, 90, 30 ) );", "-        GraphConstants.setBorder( map, BorderFactory.createRaisedBevelBorder(  ) );", "-        GraphConstants.setBackground( map, c );", "-        GraphConstants.setForeground( map, Color.white );", "-        GraphConstants.setFont( map,", "-            GraphConstants.defaultFont.deriveFont( Font.BOLD, 12 ) );", "-        GraphConstants.setOpaque( map, true );", "-", "-        return map;"]}]}