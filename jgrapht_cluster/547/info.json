{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98ce63c3b353673d13ef4c51915ca2f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7049c6b2767c1ba1396377cf102ac605", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/BreadthFirstIteratorTest.java", "commitBeforeChange": "ff1ebdb36f5aac5cce46f7242b871040083ebf67", "commitAfterChange": "73253427f276081bfef69bf73e605e4036f4e58e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testDirectedGraph(  )", "signatureAfterChange": "       AbstractGraphIterator createIterator( Graph g, Object vertex,         boolean crossComponent )", "diff": ["-     */", "-    public void testDirectedGraph(  ) {", "-        DirectedGraph graph = new DefaultDirectedGraph(  );", "-        //", "-        String v1 = \"1\";", "-        String v2 = \"2\";", "-        String v3 = \"3\";", "-        String v4 = \"4\";", "-        String v5 = \"5\";", "-        String v6 = \"6\";", "-        String v7 = \"7\";", "-        String v8 = \"8\";", "-        String v9 = \"9\";", "-        graph.addVertex( v1 );", "-        graph.addVertex( v2 );", "-        graph.addVertex( \"3\" );", "-        graph.addVertex( \"4\" );", "-        graph.addVertex( \"5\" );", "-        graph.addVertex( \"6\" );", "-        graph.addVertex( \"7\" );", "-        graph.addVertex( \"8\" );", "-        graph.addVertex( \"9\" );", "-        graph.addVertex( \"orphan\" );", "-        graph.addEdge( v1, v2 );", "-        graph.addEdge( v1, v3 );", "-        graph.addEdge( v2, v4 );", "-        graph.addEdge( v3, v5 );", "-        graph.addEdge( v3, v6 );", "-        graph.addEdge( v5, v6 );", "-        graph.addEdge( v5, v7 );", "-        graph.addEdge( v6, v1 );", "-        graph.addEdge( v7, v8 );", "-        graph.addEdge( v7, v9 );", "-        graph.addEdge( v8, v2 );", "-        graph.addEdge( v9, v4 );", "-", "-        BreadthFirstIterator iterator =", "-            new BreadthFirstIterator( graph, v1, true );", "-        StringBuffer         result = new StringBuffer(  );", "-", "-        while( iterator.hasNext(  ) ) {", "-            result.append( (String) iterator.next(  ) );", "-", "-            if( iterator.hasNext(  ) ) {", "-                result.append( ',' );", "-            }", "-        }", "-", "-        String s = result.toString(  );", "-        assertEquals( \"1,2,3,4,5,6,7,8,9,orphan\", s );", "+    AbstractGraphIterator createIterator( Graph g, Object vertex,", "+        boolean crossComponent ) {", "+        return new BreadthFirstIterator( g, vertex, crossComponent );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba547b4556177c1b90ae994f71c34098", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/DepthFirstIteratorTest.java", "commitBeforeChange": "ff1ebdb36f5aac5cce46f7242b871040083ebf67", "commitAfterChange": "73253427f276081bfef69bf73e605e4036f4e58e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testDirectedGraph(  )", "signatureAfterChange": "       AbstractGraphIterator createIterator( Graph g, Object vertex,         boolean crossComponent )", "diff": ["-     */", "-    public void testDirectedGraph(  ) {", "-        DirectedGraph graph = new DefaultDirectedGraph(  );", "-        //        ", "-        String v1 = \"1\";", "-        String v2 = \"2\";", "-        String v3 = \"3\";", "-        String v4 = \"4\";", "-        String v5 = \"5\";", "-        String v6 = \"6\";", "-        String v7 = \"7\";", "-        String v8 = \"8\";", "-        String v9 = \"9\";", "-        graph.addVertex( v1 );", "-        graph.addVertex( v2 );", "-        graph.addVertex( \"3\" );", "-        graph.addVertex( \"4\" );", "-        graph.addVertex( \"5\" );", "-        graph.addVertex( \"6\" );", "-        graph.addVertex( \"7\" );", "-        graph.addVertex( \"8\" );", "-        graph.addVertex( \"9\" );", "-        graph.addVertex( \"orphan\" );", "-        graph.addEdge( v1, v2 );", "-        graph.addEdge( v1, v3 );", "-        graph.addEdge( v2, v4 );", "-        graph.addEdge( v3, v5 );", "-        graph.addEdge( v3, v6 );", "-        graph.addEdge( v5, v6 );", "-        graph.addEdge( v5, v7 );", "-        graph.addEdge( v6, v1 );", "-        graph.addEdge( v7, v8 );", "-        graph.addEdge( v7, v9 );", "-        graph.addEdge( v8, v2 );", "-        graph.addEdge( v9, v4 );", "-", "-        DepthFirstIterator iterator = new DepthFirstIterator( graph, v1, true );", "-        StringBuffer       result = new StringBuffer(  );", "-", "-        while( iterator.hasNext(  ) ) {", "-            result.append( (String) iterator.next(  ) );", "-", "-            if( iterator.hasNext(  ) ) {", "-                result.append( ',' );", "-            }", "-        }", "-", "-        String s = result.toString(  );", "-        assertEquals( \"1,3,6,5,7,9,4,8,2,orphan\", s );", "+    AbstractGraphIterator createIterator( Graph g, Object vertex,", "+        boolean crossComponent ) {", "+        return new DepthFirstIterator( g, vertex, crossComponent );"]}]}