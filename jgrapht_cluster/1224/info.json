{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26f68e4b0ec41b50baaef6b439ab2ed6", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1578ca59f3b4a059de518e45328f7ea0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Graph<String, DefaultEdge> init(boolean listenable)", "signatureAfterChange": "      private Graph<String, DefaultEdge> init(boolean listenable)", "diff": ["-        g.addVertex(_v1);", "-        g.addVertex(_v2);", "-        g.addVertex(_v3);", "-        g.addVertex(_v4);", "-        g.addEdge(_v1, _v2);", "-        g.addEdge(_v2, _v3);", "-        g.addEdge(_v3, _v1);", "-        g.addEdge(_v1, _v4);", "+        g.addVertex(v1);", "+        g.addVertex(v2);", "+        g.addVertex(v3);", "+        g.addVertex(v4);", "+        g.addEdge(v1, v2);", "+        g.addEdge(v2, v3);", "+        g.addEdge(v3, v1);", "+        g.addEdge(v1, v4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab51f709089799074c25b7c3e3097f3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testSubgraph()", "signatureAfterChange": "     public void testSubgraph()", "diff": ["-        g.removeVertex(_v1);", "+        g.removeVertex(v1);", "-        vset.add(_v1);", "+        vset.add(v1);", "-        assertEquals(0, sub.degreeOf(_v1));", "+        assertEquals(0, sub.degreeOf(v1));", "-        vset.add(_v2);", "-        vset.add(_v3);", "-        sub = new Subgraph<String, DefaultEdge>(g, vset, new HashSet<DefaultEdge>(g.getAllEdges(_v1, _v2)));", "+        vset.add(v2);", "+        vset.add(v3);", "+        sub = new Subgraph<String, DefaultEdge>(g, vset, new HashSet<DefaultEdge>(g.getAllEdges(v1, v2)));"]}]}