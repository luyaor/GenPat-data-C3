{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d31ec68b6b38afd45a4ca8336728e74", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87cd2adf7b2d226247824ea8608295b7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public List<E> incomingEdgesOf(V vertex)", "diff": ["-        ArrayList edges = new ArrayList();", "-        List<E> baseEdges =", "-            ((DirectedGraph<V, E>) m_base).incomingEdgesOf(vertex);", "+        ArrayList<E> edges = new ArrayList<E>();", "+        // XXX hb 27-Nov-05: I have no clue why this cast works without raising a warning", "+        List<? extends E> baseEdges =", "+            ((DirectedGraph<V, ? extends E>) m_base).incomingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e82cec904645e3832ebc882a90c188", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public List<E> outgoingEdgesOf(V vertex)", "diff": ["-        ArrayList edges = new ArrayList();", "-        List<E> baseEdges =", "-            ((DirectedGraph<V, E>) m_base).outgoingEdgesOf(vertex);", "+        ArrayList<E> edges = new ArrayList<E>();", "+        // XXX hb 27-Nov-05: I have no clue why this cast works without raising a warning", "+        List<? extends E> baseEdges =", "+            ((DirectedGraph<V, ? extends E>) m_base).outgoingEdgesOf(vertex);"]}]}