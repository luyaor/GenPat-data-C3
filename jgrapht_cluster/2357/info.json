{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f81d4d41f4b83466d840b73be269f2a2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079399b297cc1889ec2666aced4d7dc2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r     public void computeAtoms()", "signatureAfterChange": "\r     private void computeAtoms()", "diff": ["-    public void computeAtoms()\r", "+    private void computeAtoms()\r", "-        @SuppressWarnings(\"unchecked\")\r", "-        SimpleGraph<V, E> gprime = (SimpleGraph<V, E>) graph.clone();\r", "+        UndirectedGraph<V, E> gprime = copyAsSimpleGraph(graph);\r", "-        @SuppressWarnings(\"unchecked\")\r", "-        SimpleGraph<V, E> hprime = (SimpleGraph<V, E>) chordalGraph.clone();\r", "+        UndirectedGraph<V, E> hprime = copyAsSimpleGraph(chordalGraph);\r", "-                    @SuppressWarnings(\"unchecked\")\r", "-                    SimpleGraph<V, E> tmpGraph = \r", "-                        (SimpleGraph<V, E>) gprime.clone();\r", "+                    UndirectedGraph<V, E> tmpGraph = copyAsSimpleGraph(gprime);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815f98d2b2e4ac1f3f23087b3bb156ff", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     public static <V, E> boolean isClique(\r         SimpleGraph<V, E> graph,\r         Set<V> vertices)", "signatureAfterChange": "\r     private static <V, E> boolean isClique(\r         UndirectedGraph<V, E> graph,\r         Set<V> vertices)", "diff": ["-    public static <V, E> boolean isClique(\r", "-        SimpleGraph<V, E> graph,\r", "+    private static <V, E> boolean isClique(\r", "+        UndirectedGraph<V, E> graph,\r", "-        Subgraph<V, E, SimpleGraph<V, E>> sub = \r", "-            new Subgraph<V, E, SimpleGraph<V, E>>(graph, vertices);\r", "-        int n = vertices.size();\r", "-        if (sub.edgeSet().size() == n * (n - 1) / 2)\r", "-            return true;\r", "-        else\r", "-            return false;\r", "+        for (V v1 : vertices) {\r", "+            for (V v2 : vertices) {\r", "+                if (v1 != v2 && graph.getEdge(v1, v2) == null)\r", "+                    return false;\r", "+            }\r", "+        }\r", "+        return true;\r", "+    }\r"]}]}