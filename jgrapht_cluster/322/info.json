{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99a3197bd690cee7c9ba47fef06130cd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00aa706a538c2cebfc6f91529fc779cd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void init()", "signatureAfterChange": "      private void init()", "diff": ["-        m_gEmpty = new SimpleDirectedGraph();", "-        m_g1 = new SimpleDirectedGraph();", "-        m_g2 = new SimpleDirectedGraph();", "-        m_g3 = new SimpleDirectedGraph();", "-        m_g4 = new SimpleDirectedGraph();", "+        m_gEmpty = new SimpleDirectedGraph<String, DirectedEdge<String>>();", "+        m_g1 = new SimpleDirectedGraph<String, DirectedEdge<String>>();", "+        m_g2 = new SimpleDirectedGraph<String, DirectedEdge<String>>();", "+        m_g3 = new SimpleDirectedGraph<String, DirectedEdge<String>>();", "+        m_g4 = new SimpleDirectedGraph<String, DirectedEdge<String>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f0a9e5f8c17a84312e0bad3a957a013", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testIsGraphConnected()", "signatureAfterChange": "     public void testIsGraphConnected()", "diff": ["-        Pseudograph g = create();", "-        ConnectivityInspector inspector = new ConnectivityInspector(g);", "+        Pseudograph<String,Edge<String>> g = create();", "+        ConnectivityInspector<String,Edge<String>>", "+                inspector = new ConnectivityInspector<String,Edge<String>>(g);", "-        inspector = new ConnectivityInspector(g);", "+        inspector = new ConnectivityInspector<String,Edge<String>>(g);", "-        inspector = new ConnectivityInspector(g);", "+        inspector = new ConnectivityInspector<String,Edge<String>>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a40f824bd1c35b0a71ae96fb19cb39", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BellmanFordShortestPathTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testConstructor()", "signatureAfterChange": "     public void testConstructor()", "diff": ["-        BellmanFordShortestPath path;", "-        Graph g = create();", "+        BellmanFordShortestPath<String,DefaultWeightedEdge> path;", "+        Graph<String,DefaultWeightedEdge> g = create();", "-        path = new BellmanFordShortestPath(g, V3);", "+        path = new BellmanFordShortestPath<String,DefaultWeightedEdge>(g, V3);", "-        path = new BellmanFordShortestPath(g, V3, 2);", "+        path = new BellmanFordShortestPath<String,DefaultWeightedEdge>(", "+            g, V3, 2);", "-        path = new BellmanFordShortestPath(g, V3, 1);", "+        path = new BellmanFordShortestPath<String,DefaultWeightedEdge>(", "+            g, V3, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ddc8957839e059660c089ec35ce3df", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/PerformanceDemo.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String [] args)", "signatureAfterChange": "     public static void main(String [] args)", "diff": ["-        Graph g = new Pseudograph();", "+        Graph<Object,Edge<Object>> g = new Pseudograph<Object,Edge<Object>>();", "-        for (Iterator i = new BreadthFirstIterator(g); i.hasNext();) {", "+        for (Iterator i = new BreadthFirstIterator<Object,Edge<Object>,Object>(g); i.hasNext();) {", "-        for (Iterator i = new DepthFirstIterator(g); i.hasNext();) {", "+        for (Iterator i = new DepthFirstIterator<Object,Edge<Object>,Object>(g); i.hasNext();) {"]}]}