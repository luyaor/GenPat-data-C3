{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfb4cb63325d4ba3bc9724f87e146077", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e838479a1883e823c8cbc2bc652956c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void decreaseKey(FibonacciHeapNode<T> x, double k)", "signatureAfterChange": "     public void decreaseKey(FibonacciHeapNode<T> x, double k)", "diff": ["-        if (k > x.m_key) {", "+        if (k > x.key) {", "-        x.m_key = k;", "+        x.key = k;", "-        FibonacciHeapNode<T> y = x.m_parent;", "+        FibonacciHeapNode<T> y = x.parent;", "-        if ((y != null) && (x.m_key < y.m_key)) {", "+        if ((y != null) && (x.key < y.key)) {", "-        if (x.m_key < m_min.m_key) {", "-            m_min = x;", "+        if (x.key < minNode.key) {", "+            minNode = x;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac87228df7c6c3e457a885a3ac7f3385", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "bb3d0554d44bc9c9665912f8de77451452b3b6cf", "commitAfterChange": "8b23a5ff1277c7020e2ba7e733dafae09723a1b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public double getDiameter()", "signatureAfterChange": "     public double getDiameter()", "diff": ["+", "+        if (Double.isNaN(diameter)) {", "+            diameter = 0.0;", "+            int n = vertices.size();", "+            for (int i = 0; i < n; i++) {", "+                for (int j = 0; j < n; j++) {", "+                    if (!Double.isInfinite(d[i][j]) && d[i][j] > diameter) {", "+                        diameter = d[i][j];", "+                    }", "+                }", "+            }", "+        }"]}]}