{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c93217b35fd28a165ba13e2ace57f58a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae55eeb8e4805943ee4e4430c58be91", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/heap/AbstractHeap.java", "commitBeforeChange": "ede00ba6ca48a7a81231a62519a30fabb26ae338", "commitAfterChange": "f63e1142cae73862c9c4f7b6ce46225b40f3ef86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void update(Object x)", "signatureAfterChange": "     public void update( Object x )", "diff": ["-", "-    public void update(Object x) {", "-        if (x instanceof HeapElement) {", "-            ((HeapElement)x).getPeer().update();", "-        } else {", "-            Iterator it = peerIterator();", "-            while (it.hasNext()) {", "-                ElementPeer peer = (ElementPeer)it.next();", "-                if (peer.getObject() == x) {", "-                    peer.update();", "-                }", "+     */", "+    public void update( Object x ) {", "+        if( x instanceof HeapElement ) {", "+            ( (HeapElement) x ).getPeer(  ).update(  );", "+        }", "+        else {", "+            ( (ElementPeer) _peerMap.get( x ) ).update(  );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e51b4a80bbae6aacdd9d0a8377b6f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphHelper.java", "commitBeforeChange": "fccf6bb4d3e8a21a58d8a80528b6c0a5436cab7e", "commitAfterChange": "6cff807085947ff536ef7ed7db43a771a33aaea7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static boolean addGraph( Graph destination, Graph source )", "signatureAfterChange": "     public static boolean addGraph( Graph destination, Graph source )", "diff": ["-", "-        for( Iterator i = source.edgeSet(  ).iterator(  ); i.hasNext(  ); ) {", "-            Edge e = (Edge) i.next(  );", "-            modified |= destination.addEdge( (Edge) e.clone(  ) );", "-        }", "+        modified |= destination.addAllEdges( source.edgeSet(  ) );"]}]}