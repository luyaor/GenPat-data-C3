{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b71faf1e4497cf8a8b1aee281734b6e2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180d7bf415c0a5324f04481aa8634969", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     void handleJGraphInsertedVertex(GraphCell jVertex)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     void handleJGraphInsertedVertex(GraphCell jVertex)", "diff": ["-        if (m_vertexToCell.containsKey(jtVertex)) {", "+        if (vertexToCell.containsKey(jtVertex)) {", "-            m_jtGraph.addVertex(jtVertex);", "+            jtGraph.addVertex(jtVertex);", "-            m_cellToVertex.put(jVertex, jtVertex);", "-            m_vertexToCell.put(jtVertex, jVertex);", "+            cellToVertex.put(jVertex, jtVertex);", "+            vertexToCell.put(jtVertex, jVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f006944665200b3c710419d4d00273", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ShortestPathTestCase.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testPathBetween()", "signatureAfterChange": "     public void testPathBetween()", "diff": ["-        assertEquals(Arrays.asList(new Edge [] { m_e12 }), path);", "+        assertEquals(Arrays.asList(new DefaultEdge [] { m_e12 }), path);", "-        assertEquals(Arrays.asList(new Edge [] {", "+        assertEquals(Arrays.asList(new DefaultEdge [] {", "-        assertEquals(Arrays.asList(new Edge [] {", "+        assertEquals(Arrays.asList(new DefaultEdge [] {", "-        assertEquals(Arrays.asList(new Edge [] {", "+        assertEquals(Arrays.asList(new DefaultEdge [] {"]}]}