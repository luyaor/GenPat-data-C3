{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f457a304cf0396cd7af4496d7e73edd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "001178d366764b5b4ca78d19fb377770", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "diff": ["-        ClosestFirstQueueEntry entry =", "-            (ClosestFirstQueueEntry) getSeenData( vertex );", "+        QueueEntry entry = (QueueEntry) getSeenData( vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "002adac41f774624114de84466ca0c38", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted()", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted()", "diff": ["-        return m_queue.isEmpty();", "+        return queue.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d597bb8a79830e975ae8bbce46da5a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public void connectedComponentFinished(             ConnectedComponentTraversalEvent e)", "signatureAfterChange": "         public void connectedComponentFinished(             ConnectedComponentTraversalEvent e)", "diff": ["-            switch (m_componentNumber) {", "+            switch (componentNumber) {", "-                assertEquals(getExpectedStr1(), m_result.toString());", "-                assertEquals(9, m_numComponentVertices);", "+                assertEquals(getExpectedStr1(), result.toString());", "+                assertEquals(9, numComponentVertices);", "-                assertEquals(getExpectedStr2(), m_result.toString());", "-                assertEquals(1, m_numComponentVertices);", "+                assertEquals(getExpectedStr2(), result.toString());", "+                assertEquals(1, numComponentVertices);", "-            m_numComponentVertices = 0;", "+            numComponentVertices = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01308c8c86440cf58d2aeb9566788849", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "         public void addOutgoingEdge(E e)", "signatureAfterChange": "         public void addOutgoingEdge(EE e)", "diff": ["-        public void addOutgoingEdge(E e)", "+        public void addOutgoingEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016ebdb9e94a2ffa7d326ad441491e50", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         protected void setEdge( Edge e )", "signatureAfterChange": "         protected void setEdge( E e )", "diff": ["-        protected void setEdge( Edge e ) {", "+        protected void setEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a5f3c967a866dd2695ea2760cc6b87", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         protected void setVertex(VV vertex)", "signatureAfterChange": "         protected void setVertex(VV vertex)", "diff": ["-            m_vertex = vertex;", "+            this.vertex = vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ab8d1b5eeaffdfd33ea43eec8209dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "         public Set<EE> getUnmodifiableVertexEdges()", "signatureAfterChange": "         public Set<EE> getUnmodifiableVertexEdges()", "diff": ["-            if (m_unmodifiableVertexEdges == null) {", "-                m_unmodifiableVertexEdges =", "-                    Collections.unmodifiableSet(m_vertexEdges);", "+            if (unmodifiableVertexEdges == null) {", "+                unmodifiableVertexEdges =", "+                    Collections.unmodifiableSet(vertexEdges);", "-            return m_unmodifiableVertexEdges;", "+            return unmodifiableVertexEdges;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d47e782e53f2f01c4e17c7a24c00f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "signatureAfterChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "diff": ["-        if (!m_base.containsEdge(e)) {", "+        if (!base.containsEdge(e)) {", "-        assert(m_base.getEdgeSource(e) == sourceVertex);", "-        assert(m_base.getEdgeTarget(e) == targetVertex);", "+        assert(base.getEdgeSource(e) == sourceVertex);", "+        assert(base.getEdgeTarget(e) == targetVertex);", "-            m_edgeSet.add(e);", "+            edgeSet.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0227ba63967f335b2cec01a3e6b3f9ee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Set<E> edgesOf(V vertex)", "signatureAfterChange": "     public Set<E> edgesOf(V vertex)", "diff": ["-        return m_delegate.edgesOf(vertex);", "+        return delegate.edgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02abc21827b1b518741177afae18f888", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         protected void setVertex( Object vertex )", "signatureAfterChange": "         protected void setVertex( V vertex )", "diff": ["-        protected void setVertex( Object vertex ) {", "+        protected void setVertex( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "032d776d6bdbd468817b730abd2eae2f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "          public void addVertex(V v)", "signatureAfterChange": "          public void addVertex(V v)", "diff": ["-            m_vertexMapUndirected.put(v, null);", "+            vertexMapUndirected.put(v, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03fca9e381bee7c6179f18a6a9dedf13", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean addEdge(Edge e)", "signatureAfterChange": "     public boolean addEdge(E e)", "diff": ["-    public boolean addEdge(Edge e)", "+    public boolean addEdge(E e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04061992c0079a483e4361ea6900ccee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2GraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public VF2GraphIsomorphismInspector(                     Graph<V, E> graph1,                     Graph<V, E> graph2)", "signatureAfterChange": "      public VF2GraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2)", "diff": ["-                    Graph<V, E> graph1,", "-                    Graph<V, E> graph2)", "-        super(graph1, graph2);", "+", "+    public VF2GraphIsomorphismInspector(", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2)", "+    {", "+        super(graph1,", "+              graph2,", "+              true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049051bcb53d42f42c8cffb1949dd6cf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public AttributeMap getDefaultVertexAttributes()", "signatureAfterChange": "     public AttributeMap getDefaultVertexAttributes()", "diff": ["-        return m_defaultVertexAttributes;", "+        return defaultVertexAttributes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b84ad7f82ba2a5da352a0921c88b9c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isLoopsAllowed(  )", "signatureAfterChange": "     public boolean isAllowingLoops(  )", "diff": ["+     */", "+    public boolean isAllowingLoops(  ) {", "+        return m_allowingLoops;", "+    }", "-     */", "-    public boolean isLoopsAllowed(  ) {", "-        return m_loopsAllowed;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e0ba004e1c0d24bd22166ba4d71ab3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Set findCyclesContainingVertex( Object v )", "signatureAfterChange": "     public Set findCyclesContainingVertex( V v )", "diff": ["-    public Set findCyclesContainingVertex( Object v ) {", "+    public Set findCyclesContainingVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e5f3ea43923b9456f3387fb599f545", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public DefaultGraphCell getVertexCell(Object jGraphTVertex)", "signatureAfterChange": "     public DefaultGraphCell getVertexCell(Object jGraphTVertex)", "diff": ["-        return (DefaultGraphCell) m_vertexToCell.get(jGraphTVertex);", "+        return (DefaultGraphCell) vertexToCell.get(jGraphTVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0555c46a114c83be05c75f2f0d9cab85", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public boolean isEmpty(  )", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted(  )", "diff": ["+     */", "+    protected boolean isConnectedComponentExhausted(  ) {", "+        return m_heap.size(  ) == 0;", "+    }", "-         */", "-        public boolean isEmpty(  ) {", "-            return m_heap.size(  ) == 0;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059493abad9d2fb86ad04788cf2e306f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     void handleJGraphTAddedVertex(Object jtVertex)", "signatureAfterChange": "     void handleJGraphTAddedVertex(V jtVertex)", "diff": ["-    void handleJGraphTAddedVertex(Object jtVertex)", "+    void handleJGraphTAddedVertex(V jtVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0689eb77e7373d7b95c5e80e9e8fa3d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/SubgraphIsomorphismRelation.java", "commitBeforeChange": "ae864cab55715cbe3ee2fa1a05734b4fcd4f3411", "commitAfterChange": "aa92fe16c7852c9f9d1bf3a60c5718fcffd0ae0a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic E getEdgeCorrespondence(E e, boolean forward)", "signatureAfterChange": "  \t@Override \tpublic E getEdgeCorrespondence(E e, boolean forward)", "diff": ["-\t\treturn null;", "+\t\treturn e2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06a30ff010cdab6a6e7fc1269d9a455e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testEdgesOf()", "signatureAfterChange": "     public void testEdgesOf()", "diff": ["-        assertEquals(3, g.edgesOf(m_v1).size());", "-        assertEquals(2, g.edgesOf(m_v2).size());", "+        assertEquals(3, g.edgesOf(v1).size());", "+        assertEquals(2, g.edgesOf(v2).size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06cf36209c80d26cbf93bd6272b0fc4c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/VertexTraversalEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public V getVertex()", "signatureAfterChange": "     public V getVertex()", "diff": ["-        return m_vertex;", "+        return vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07202224d04a92da2be8b356b99a7124", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean containsVertex(V v)", "signatureAfterChange": "     public boolean containsVertex(V v)", "diff": ["-        return m_vertexSet.contains(v);", "+        return vertexSet.contains(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078c3f4c6d92970d53391e811c7e451b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "         public void removeOutgoingEdge(E e)", "signatureAfterChange": "         public void removeOutgoingEdge(EE e)", "diff": ["-        public void removeOutgoingEdge(E e)", "+        public void removeOutgoingEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e5c70c99238bedc877b72bcd92aaae", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean containsEdge( Edge e )", "signatureAfterChange": "     public boolean containsEdge( E e )", "diff": ["-    public boolean containsEdge( Edge e ) {", "+    public boolean containsEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080a84c636403bd35ea083693aeaf274", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "         public List<E> edgesOf(V vertex)", "signatureAfterChange": "         public Set<E> edgesOf(V vertex)", "diff": ["-        public List<E> edgesOf(V vertex)", "+        public Set<E> edgesOf(V vertex)", "-            ArrayList<E> inAndOut =", "-                new ArrayList<E>(getEdgeContainer(vertex).m_incoming);", "+            ArrayUnenforcedSet<E> inAndOut =", "+                new ArrayUnenforcedSet<E>(getEdgeContainer(vertex).m_incoming);", "-                List loops = getAllEdges(vertex, vertex);", "+                Set<E> loops = getAllEdges(vertex, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093d80406bbec650927037af26336c6b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public List<E> edgesOf(V vertex)", "signatureAfterChange": "         public List<? extends EE> edgesOf(VV vertex)", "diff": ["-        public List<E> edgesOf(V vertex)", "+        public List<? extends EE> edgesOf(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "097acc515cbe91dbd3126eb4b9164c7a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphHelper.java", "commitBeforeChange": "31acef0c10b04a4d9507bb33a011a766c870c766", "commitAfterChange": "28851ba6f18793b718275deebcab4e40c016a084", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean addEdgeWithVertics( Graph g, Edge e )", "signatureAfterChange": "     public static boolean addEdgeWithVertices( Graph g, Edge e )", "diff": ["-    public static boolean addEdgeWithVertics( Graph g, Edge e ) {", "+    public static boolean addEdgeWithVertices( Graph g, Edge e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0995fe1aa0d7d54bb6a2473e66221d63", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public void edgeRemoved(GraphEdgeChangeEvent<Object,DefaultEdge> e)", "signatureAfterChange": "         public void edgeRemoved(GraphEdgeChangeEvent<Object,DefaultEdge> e)", "diff": ["-            m_lastRemovedEdge = e.getEdge();", "+            lastRemovedEdge = e.getEdge();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09bf050c4bbc3f86e3e930cfdb12fd4f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/EdgeTraversalEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Edge getEdge(  )", "signatureAfterChange": "     public E getEdge(  )", "diff": ["-    public Edge getEdge(  ) {", "+    public E getEdge(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a030e7c8248e1653ada59bc684cbb6e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "          void removeVertex(V jtVertex)", "signatureAfterChange": "          void removeVertex(V jtVertex)", "diff": ["-            m_jtElementsBeingRemoved.add(jtVertex);", "-            m_graph.removeVertex(jtVertex);", "-            m_jtElementsBeingRemoved.remove(jtVertex);", "+            jtElementsBeingRemoved.add(jtVertex);", "+            graph.removeVertex(jtVertex);", "+            jtElementsBeingRemoved.remove(jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a1e44c797700e356c14a88d3b810e3d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void encounterVertex(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertex(V vertex, E edge)", "diff": ["-        m_heap.insert(node, node.getKey());", "+        heap.insert(node, node.getKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a3695542fc551db192ac501245e6a08", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public List<V> getNeighborList()", "signatureAfterChange": "          public List<V> getNeighborList()", "diff": ["-            for (Map.Entry<V,ModifiableInteger> entry : m_neighborCounts.entrySet()) {", "+            for (Map.Entry<V,ModifiableInteger> entry : neighborCounts.entrySet()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a50b56848ceaa35cf02bbd8218ea52d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/UndirectedWeightedEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public UndirectedWeightedEdge( Object sourceVertex, Object targetVertex,         double weight )", "signatureAfterChange": "     public UndirectedWeightedEdge( V sourceVertex, V targetVertex,         double weight )", "diff": ["-    public UndirectedWeightedEdge( Object sourceVertex, Object targetVertex,", "+    public UndirectedWeightedEdge( V sourceVertex, V targetVertex,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a5c7bede9fa581be8100917210ed44f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/MaximumWeightBipartiteMatching.java", "commitBeforeChange": "985760cbd642d0a5bdb9eca3c84e4565ecb8ceea", "commitAfterChange": "f79565a2a8d7f5186720bf4969b47a8431d60e9c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic MaximumWeightBipartiteMatching(final WeightedGraph<V,E> graph, Set<V> vertexPartition1, Set<V> vertexPartition2)", "signatureAfterChange": " \tpublic MaximumWeightBipartiteMatching(final WeightedGraph<V,E> graph, Set<V> vertexPartition1, Set<V> vertexPartition2)", "diff": ["+         */", "-\t\tinitializeVerticiesAndEdges();", "+\t\tinitializeVerticesAndEdges();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0afb091e95b4c693deba779037c5d40e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         Map getVerticesData(  )", "signatureAfterChange": "         Map getVerticesData(  )", "diff": ["-            return vertices;", "+            return m_vertices;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bbdcaa56bbe594a49453d464b8a068b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/LabeledElement.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getLabel(  );", "signatureAfterChange": "     public L getLabel(  );", "diff": ["-    public Object getLabel(  );", "+    public L getLabel(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c01ba0f47695d8327c22879c5ac7f4d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "          EdgeFactory<V, E> getEdgeFactory()", "signatureAfterChange": "          EdgeFactory<V, E> getEdgeFactory()", "diff": ["-            return m_graph.getEdgeFactory();", "+            return graph.getEdgeFactory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1b28706b5556e054a39794de5dfeab", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public V getEdgeTarget(E e)", "signatureAfterChange": "     public V getEdgeTarget(E e)", "diff": ["-        return m_delegate.getEdgeTarget(e);", "+        return delegate.getEdgeTarget(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c1bd27e9655b15549c562dc1cf0982b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "d73265ae32cb71eec23fd32b3138955f6da1febc", "commitAfterChange": "4b5287f6df61875e3abc14058220fd6831d6a98b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main( String[] args )", "signatureAfterChange": "     public static void main( String[] args )", "diff": ["-        frame.show(  );", "+        frame.setVisible( true );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c71d2a245c1be4ac51d3eae16917b40", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void testIncomingOutgoingEdgesOf()", "signatureAfterChange": "     public void testIncomingOutgoingEdgesOf()", "diff": ["-        Set<DefaultEdge> e1to2 = m_g2.outgoingEdgesOf(m_v1);", "-        Set<DefaultEdge> e2from1 = m_g2.incomingEdgesOf(m_v2);", "+        Set<DefaultEdge> e1to2 = g2.outgoingEdgesOf(v1);", "+        Set<DefaultEdge> e2from1 = g2.incomingEdgesOf(v2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d81fb3e6428fb5cd31b42270d36c883", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Set<V> connectedSetOf(V vertex)", "signatureAfterChange": "     public Set<V> connectedSetOf(V vertex)", "diff": ["-        Set<V> connectedSet = m_vertexToConnectedSet.get(vertex);", "+        Set<V> connectedSet = vertexToConnectedSet.get(vertex);", "-                new BreadthFirstIterator<V, E>(m_graph, vertex);", "+                new BreadthFirstIterator<V, E>(graph, vertex);", "-            m_vertexToConnectedSet.put(vertex, connectedSet);", "+            vertexToConnectedSet.put(vertex, connectedSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0defa9ea26d91d978ba98a8687bcd4cb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "7518fda5e34fbd0d30800f00a7bcae8e402c0396", "commitAfterChange": "b0ffaa521363d5faf1bf5b397f78265b9ab95ae6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic int[] getInEdges(int vertexOrder)", "signatureAfterChange": "     public int[] getInEdges(int vertexNumber)", "diff": ["-\t", "-\tpublic int[] getInEdges(int vertexOrder)\t{", "-\t\tif (incomingEdges[vertexOrder] != null)", "-\t\t\treturn incomingEdges[vertexOrder];", "-\t\t", "-\t\tV v            = getVertex(vertexOrder);", "-\t\tSet<E> edgeSet = null;", "-\t\t", "-\t\tif (graph instanceof DirectedGraph<?,?>)", "-\t\t\tedgeSet = ((DirectedGraph<V,E>) graph).incomingEdgesOf(v);", "-\t\telse", "-\t\t\tedgeSet = graph.edgesOf(v);", "-\t\t", "-\t\tint[] vertexArray = new int[edgeSet.size()];", "-\t\tint i = 0;", "-\t\t", "-\t\tfor(E edge : edgeSet)\t{", "-\t\t\tV source = graph.getEdgeSource(edge),", "-\t\t\t  target = graph.getEdgeTarget(edge);", "-\t\t\tvertexArray[i++] = mapVertexToOrder.get(", "-\t\t\t\t\tsource == v ? target : source);", "-\t\t}", "-\t\t", "-\t\treturn incomingEdges[vertexOrder] = vertexArray;", "-\t}", "+     */", "+    public int[] getInEdges(int vertexNumber) {", "+        if (incomingEdges[vertexNumber] != null)", "+            return incomingEdges[vertexNumber];", "+", "+        V v            = getVertex(vertexNumber);", "+        Set<E> edgeSet = null;", "+", "+        if (graph instanceof DirectedGraph<?, ?>)", "+            edgeSet = ((DirectedGraph<V, E>) graph).incomingEdgesOf(v);", "+        else", "+            edgeSet = graph.edgesOf(v);", "+", "+        int[] vertexArray = new int[edgeSet.size()];", "+        int i             = 0;", "+", "+        for (E edge : edgeSet) {", "+            V source = graph.getEdgeSource(edge),", "+              target = graph.getEdgeTarget(edge);", "+            vertexArray[i++] =", "+                mapVertexToOrder.get(source == v ? target : source);", "+        }", "+", "+        return incomingEdges[vertexNumber] = vertexArray;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df8a1be2f879263423eb86718de6814", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "e34958c59f3372942389846e0b479969a40b8361", "commitAfterChange": "84c1df97f9cbf88f4c715bce1371505ec0e166a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> graph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-        DirectedGraph<V, E> graph,", "+        DirectedGraph<V, E> visitedGraph,", "-                    graph.outgoingEdgesOf(data.vertex).iterator();", "+                    visitedGraph.outgoingEdgesOf(data.vertex).iterator();", "-                        vertexToVertexData.get(graph.getEdgeTarget(edge));", "+                        vertexToVertexData.get(visitedGraph.getEdgeTarget(edge));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9131444bfaa46eef4fdacc84db3a51", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "8fe299c38648acac55e40bd47498a08269e01f74", "commitAfterChange": "3cb0ce95d7f27940cd613dc6e124a83b3e4976e0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEdgeSetFactory()", "signatureAfterChange": "     public void testEdgeSetFactory()", "diff": ["-        initMultiTriangleWithMultiLoop(g);", "+        initMultiTriangle(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e9e777ffe0dbca93a47568797b4d605", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "a1f23a3100510ec39002be3afaff305ba3ad818a", "commitAfterChange": "b76ad743469fbc5f4b71d3a57c1c2abdaeec2142", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertex(V vertex, E edge)", "diff": ["-        stack.add(vertex);", "+        stack.addLast(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f1cc3efc139d211e6e75784312190de", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/BellmanFordPathElement.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean improve(         BellmanFordPathElement<V,E> candidatePrevPathElement,         Edge candidateEdge, double candidateCost)", "signatureAfterChange": "     protected boolean improve(         BellmanFordPathElement<V,E> candidatePrevPathElement,         E candidateEdge, double candidateCost)", "diff": ["-        Edge candidateEdge, double candidateCost) {", "+        E candidateEdge, double candidateCost) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f45c6b9ebbd8e9b12743a6f2e0f0575", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setReuseEvents(boolean reuseEvents)", "signatureAfterChange": "     public void setReuseEvents(boolean reuseEvents)", "diff": ["-        m_reuseEvents = reuseEvents;", "+        this.reuseEvents = reuseEvents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8175f6534e9e81962198c526fa73c9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean containsEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public boolean containsEdge( V sourceVertex, V targetVertex )", "diff": ["-    public boolean containsEdge( Object sourceVertex, Object targetVertex ) {", "+    public boolean containsEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa1e1f2ef00d0bc1fb82cb26eb3a8c8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "         public void addEdgeToTouchingVertices( Edge e )", "signatureAfterChange": "         public void addEdgeToTouchingVertices( E e )", "diff": ["-        public void addEdgeToTouchingVertices( Edge e ) {", "-            Object source = e.getSource(  );", "-            Object target = e.getTarget(  );", "+        public void addEdgeToTouchingVertices( E e ) {", "+            V source = e.getSource(  );", "+            V target = e.getTarget(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff4e3ea18e7a56253b13114092816f6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean hasNext()", "signatureAfterChange": "     public boolean hasNext()", "diff": ["-        if (m_startVertex != null) {", "+        if (startVertex != null) {", "-            if (m_state == CCS_WITHIN_COMPONENT) {", "-                m_state = CCS_AFTER_COMPONENT;", "-                fireConnectedComponentFinished(m_ccFinishedEvent);", "+            if (state == CCS_WITHIN_COMPONENT) {", "+                state = CCS_AFTER_COMPONENT;", "+                fireConnectedComponentFinished(ccFinishedEvent);", "-                while (m_vertexIterator.hasNext()) {", "-                    V v = m_vertexIterator.next();", "+                while (vertexIterator.hasNext()) {", "+                    V v = vertexIterator.next();", "-                        m_state = CCS_BEFORE_COMPONENT;", "+                        state = CCS_BEFORE_COMPONENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10110cc651d1714e6e75ecfdd9f9935e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public double getEdgeWeight(E e)", "signatureAfterChange": "     public double getEdgeWeight(E e)", "diff": ["-        return m_base.getEdgeWeight(e);", "+        return base.getEdgeWeight(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101cdfc4bae3b921b3eb75e173c2fb76", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/GraphChangeEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphChangeEvent(Object eventSource, int type)", "signatureAfterChange": "     public GraphChangeEvent(Object eventSource, int type)", "diff": ["-        m_type = type;", "+        this.type = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1060241eeb3f3ed5f5cedf52e2fbf4d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "         public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "         public Set<E> incomingEdgesOf(V vertex)", "diff": ["-        public List<E> incomingEdgesOf(V vertex)", "+        public Set<E> incomingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e6e6e9ac0ab032938aae32a5c2ff44", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/Edge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object oppositeVertex( Object v );", "signatureAfterChange": "     public V oppositeVertex( V v );", "diff": ["-    public Object oppositeVertex( Object v );", "+    public V oppositeVertex( V v );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1161d3f57b57a376ceac1fe9f014a804", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( E e )", "diff": ["-    public boolean addEdge( Edge e ) {", "+    public boolean addEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119de4c40ec6153201f7f8b266d7d7d6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathCostTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testKShortestPathCompleteGraph4()", "signatureAfterChange": "      public void testKShortestPathCompleteGraph4()", "diff": ["-        List pathElements = pathFinder.getPathElements(\"v3\");", "+        List pathElements = pathFinder.getPaths(\"v3\");", "-        RankingPathElement pathElement =", "-            (RankingPathElement) pathElements.get(0);", "+        GraphPath pathElement =", "+            (GraphPath) pathElements.get(0);", "-            pathElement.createEdgeListPath());", "+            pathElement.getEdgeList());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a5fefd7c6b1de1a0e7bcd76ad5976a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private Neighbors<V,E> getPredecessors(V v)", "signatureAfterChange": "      private Neighbors<V,E> getPredecessors(V v)", "diff": ["-        Neighbors<V,E> neighbors = m_predecessorMap.get(v);", "+        Neighbors<V,E> neighbors = predecessorMap.get(v);", "-                    Graphs.predecessorListOf(m_graph, v));", "-            m_predecessorMap.put(v, neighbors);", "+                    Graphs.predecessorListOf(graph, v));", "+            predecessorMap.put(v, neighbors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13368f53913b329bb7b606d5a61a8057", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/experimental/subgraphisomorphism/Presentation.java", "commitBeforeChange": "896719167544e845d0c05f24d4c6f4e7be2d6624", "commitAfterChange": "dcd52f7fb7eeeadf66a7b8d39b5c500257a852b0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void test()", "signatureAfterChange": "      @Test     public void test()", "diff": ["-        GraphSubgraphMapping<String, DefaultEdge> map = insp.next();", "+        GraphMapping<String, DefaultEdge> map = insp.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "134a9cdf5c8224ac40abe9e5a1ffaf5b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean containsEdge(Edge e)", "signatureAfterChange": "     public boolean containsEdge(E e)", "diff": ["-    public boolean containsEdge(Edge e)", "+    public boolean containsEdge(E e)", "-        return m_edgeSet.contains(e);", "+        return m_edgeMap.containsKey(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13622027d08d5605389f9a992353d67b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E addEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge addEdge( Object sourceVertex, Object targetVertex ) {", "+    public E addEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13959faca1055bab70a8fa1e10682c0e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public Object nextElement()             throws NoSuchElementException", "signatureAfterChange": "         public IsomorphismRelation nextElement()             throws NoSuchElementException", "diff": ["-        public Object nextElement()", "+        public IsomorphismRelation nextElement()", "-                // if it worked , even once , chage the flag to true", "-                wasIsomorphismFound = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a73edab652ffe966b4433074cbd2b4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "          void removeVertex(Object jtVertex)", "signatureAfterChange": "          void removeVertex(V jtVertex)", "diff": ["-        void removeVertex(Object jtVertex)", "+        void removeVertex(V jtVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bb1c2a21805495e3d1e3373563cb64", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathKValuesTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void verifyNbPathsForAllVertices(Graph graph)", "signatureAfterChange": "      private void verifyNbPathsForAllVertices(Graph graph)", "diff": ["-                        finder.getPathElements(targetVertex).size(),", "+                        finder.getPaths(targetVertex).size(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13c6fc02efdb44223a121aeae5c7dd45", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/ProximityIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final double getPrio(Object vertex)", "signatureAfterChange": "     public final double getPrio(V vertex)", "diff": ["-    public final double getPrio(Object vertex)", "+    public final double getPrio(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1482a09e6f8de0c5efb489c28b198ad9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public List<EE> edgesOf(VV vertex)", "signatureAfterChange": "         public Set<EE> edgesOf(VV vertex)", "diff": ["-        public List<EE> edgesOf(VV vertex)", "+        public Set<EE> edgesOf(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14a39de98246652fc021cbf35c35b3c6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/UnionFind.java", "commitBeforeChange": "f0163359559a0f813b9a9058b22762e5033d4ca9", "commitAfterChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public V find(V element)", "signatureAfterChange": "     public T find(T element)", "diff": ["-    public V find(V element)", "+    public T find(T element)", "-        V parent = parentMap.get(element);", "+        T parent = parentMap.get(element);", "-        V newParent = find(parent);", "+        T newParent = find(parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14c2ce10676ec29358220694a7854d3d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "         public void addEdge( Edge e )", "signatureAfterChange": "         public void addEdge( E e )", "diff": ["-        public void addEdge( Edge e ) {", "+        public void addEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15cd3360ceaac1dad21cc7a5973586e3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "signatureAfterChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "diff": ["-        return m_delegate.addEdge(sourceVertex, targetVertex, e);", "+        return delegate.addEdge(sourceVertex, targetVertex, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f8036f6518a32671dd2a90e58654dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeapNode.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public final T getData()", "signatureAfterChange": "     public final T getData()", "diff": ["-        return m_data;", "+        return data;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160bfe4644e2b753ed296d75829f33b4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "diff": ["-        return m_delegate.removeEdge(sourceVertex, targetVertex);", "+        return delegate.removeEdge(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "163eb9567f3f88a870227d1330676afd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/VertexTraversalEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getVertex(  )", "signatureAfterChange": "     public V getVertex(  )", "diff": ["-    public Object getVertex(  ) {", "+    public V getVertex(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16cb83d2ab8bf4bdab63403e1ddc274c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Object next()", "signatureAfterChange": "     public IsomorphismRelation next()", "diff": ["-    public Object next()", "+    public IsomorphismRelation next()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173118bfb9738c9af129f35bb4075521", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphismInspector.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Iterator<IsomorphicGraphMapping<V,E>> getMappings();", "signatureAfterChange": "      public Iterator<GraphMapping<V,E>> getMappings();", "diff": ["-    public Iterator<IsomorphicGraphMapping<V,E>> getMappings();", "+    public Iterator<GraphMapping<V,E>> getMappings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1747a6a3a6a9d14b6ca597be196d2c0a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertex(V vertex, E edge)", "diff": ["-        m_stack.add(vertex);", "+        stack.add(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "178f04533141a5b4331e4853eb4cf3ff", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "4d7b735198ee2f6b968179206989dbb86fc679e1", "commitAfterChange": "78884be0de3af7915e782067f1b82ecce38ca128", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private void decrementInDegree(V vertex)", "signatureAfterChange": "     private void decrementInDegree(V vertex)", "diff": ["-                queue.addLast(vertex);", "+                queue.offer(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17ad75a3e72477a1b81bafa6eb839b68", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "8fe299c38648acac55e40bd47498a08269e01f74", "commitAfterChange": "3cb0ce95d7f27940cd613dc6e124a83b3e4976e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private void initMultiTriangleWithMultiLoop(         DirectedGraph<String, DefaultEdge> g)", "signatureAfterChange": "      private void initMultiTriangle(         DirectedGraph<String, DefaultEdge> g)", "diff": ["-    private void initMultiTriangleWithMultiLoop(", "+    private void initMultiTriangle(", "-        g.addEdge(v1, v1);", "+        g.addEdge(v2, v1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180d7bf415c0a5324f04481aa8634969", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     void handleJGraphInsertedVertex(GraphCell jVertex)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     void handleJGraphInsertedVertex(GraphCell jVertex)", "diff": ["-        if (m_vertexToCell.containsKey(jtVertex)) {", "+        if (vertexToCell.containsKey(jtVertex)) {", "-            m_jtGraph.addVertex(jtVertex);", "+            jtGraph.addVertex(jtVertex);", "-            m_cellToVertex.put(jVertex, jtVertex);", "-            m_vertexToCell.put(jtVertex, jVertex);", "+            cellToVertex.put(jVertex, jtVertex);", "+            vertexToCell.put(jtVertex, jVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1811bff28ba02058464aef1cee40d936", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "          V getEdgeTarget(E e)", "signatureAfterChange": "          V getEdgeTarget(E e)", "diff": ["-            return m_graph.getEdgeTarget(e);", "+            return graph.getEdgeTarget(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "182162417f87593d26d39d6bd059890d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/EdgeListFactory.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public List<E> createEdgeList(V vertex);", "signatureAfterChange": "     public Set<E> createEdgeList(V vertex);", "diff": ["-    public List<E> createEdgeList(V vertex);", "+    public Set<E> createEdgeList(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18841a0cada434abcbced1021a3539f7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Set<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-            ((DirectedGraph<V, E>) m_base).incomingEdgesOf(vertex);", "+            ((DirectedGraph<V, E>) base).incomingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18844bc4826d10d6669ae3e2b0164fc6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public List<E> removeAllEdges(V sourceVertex, V targetVertex);", "signatureAfterChange": "     public Set<E> removeAllEdges(V sourceVertex, V targetVertex);", "diff": ["-    public List<E> removeAllEdges(V sourceVertex, V targetVertex);", "+    public Set<E> removeAllEdges(V sourceVertex, V targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1915f1960d6c85158808bfd7c41db8ac", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "         public void vertexAdded(GraphVertexChangeEvent<V> e)", "signatureAfterChange": "         public void vertexAdded(GraphVertexChangeEvent<V> e)", "diff": ["-            if (!m_jtElementsBeingAdded.remove(jtVertex)) {", "+            if (!jtElementsBeingAdded.remove(jtVertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19505028b850531d7b7622c536c1d7a2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/NaiveLcaFinderTest.java", "commitBeforeChange": "5468011a12459ca35fdd015d291c9a8f0553231c", "commitAfterChange": "c9c8e353be569f4618dadd178341a59e229f8476", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          @Test     public void testArrivalOrder()", "signatureAfterChange": "          @Test     public void testArrivalOrder()", "diff": ["-\tGraph<String, DefaultEdge> g = new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+\tDirectedGraph<String, DefaultEdge> g = new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ae410e49c492a4ad55da4565cecb09", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         protected void setEdge(localE edge)", "signatureAfterChange": "         protected void setEdge(localE edge)", "diff": ["-            m_edge = edge;", "+            this.edge = edge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ed44cedf45c1e909d1c7a2091366bc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "4d7b735198ee2f6b968179206989dbb86fc679e1", "commitAfterChange": "78884be0de3af7915e782067f1b82ecce38ca128", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         LinkedList<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["-        LinkedList<V> queue,", "+        Queue<V> queue,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aeb9c14f2d47d90a599c1fac0ddd9fb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected EdgeExtensionBase edgeExtended0(E e)", "signatureAfterChange": "     private EdgeExtensionBase   extendedEdge(E e)", "diff": ["-    // DIE, JAVA, DIE!", "-    protected EdgeExtensionBase edgeExtended0(E e) {", "+    private EdgeExtensionBase   extendedEdge(E e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af11e191f08b4826ff310745b1b6614", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "         public abstract List<E> incomingEdgesOf(V vertex);", "signatureAfterChange": "         public abstract Set<E> incomingEdgesOf(V vertex);", "diff": ["-        public abstract List<E> incomingEdgesOf(V vertex);", "+        public abstract Set<E> incomingEdgesOf(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b07d2af6ebbd0515ed918092fb3f348", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean containsEdge(E e)", "signatureAfterChange": "     public boolean containsEdge(E e)", "diff": ["-        return m_delegate.containsEdge(e);", "+        return delegate.containsEdge(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b76a0e94c9073eacba97cf8d27f623c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public int degreeOf( Object vertex )", "signatureAfterChange": "     public int degreeOf( V vertex )", "diff": ["-    public int degreeOf( Object vertex ) {", "+    public int degreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc035d3ec4f17f825a8b6c6c21b0a67", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getSource(  )", "signatureAfterChange": "     public V getSource(  )", "diff": ["-    public Object getSource(  ) {", "+    public V getSource(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be0da601a9083d310d0d2806c4d84a8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean isAllowingMultipleEdges()", "signatureAfterChange": "     public boolean isAllowingMultipleEdges()", "diff": ["-        return m_allowingMultipleEdges;", "+        return allowingMultipleEdges;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf024c921ab0b10aa94c1aadfc2e98e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public void edgeAdded( EdgeEvent e )", "signatureAfterChange": "         public void edgeAdded( GraphEdgeChangeEvent e )", "diff": ["-        public void edgeAdded( EdgeEvent e ) {", "+        public void edgeAdded( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c1017906c42a67c7ad77ebfb13439cd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSet.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public boolean equivalentTo(Object aOther, Object aOtherContext)", "signatureAfterChange": "      public boolean equivalentTo(E aOther, C aOtherContext)", "diff": ["-    public boolean equivalentTo(Object aOther, Object aOtherContext)", "+    public boolean equivalentTo(E aOther, C aOtherContext)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c59a79881d3fa04f37eb0e5b24639fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testRandomGraphs()", "signatureAfterChange": "     @Test     public void testRandomGraphs()", "diff": ["-            for (Iterator<IsomorphicGraphMapping<Integer, DefaultEdge>>", "+            for (Iterator<GraphMapping<Integer, DefaultEdge>>"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0b3b12f4c97c2c19877ecef8fde6aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public Edge addEdge(Object sourceVertex, Object targetVertex)", "signatureAfterChange": "     public E addEdge(V sourceVertex, V targetVertex)", "diff": ["-    public Edge addEdge(Object sourceVertex, Object targetVertex)", "+    public E addEdge(V sourceVertex, V targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d2d9e2e8d17d75a135e083aab040c90", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/TransitiveReduction.java", "commitBeforeChange": "011f1e4ed007e20ef02e12c898f369abbf15f340", "commitAfterChange": "67db11694f065b26fa72ab0bf7b3e7d5624c591c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void reduce(final DirectedGraph<V, E> directedGraph)", "signatureAfterChange": "     public <V, E> void reduce(final DirectedGraph<V, E> directedGraph)", "diff": ["-    public void reduce(final DirectedGraph<V, E> directedGraph) {", "+    public <V, E> void reduce(final DirectedGraph<V, E> directedGraph) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d345573d0079e8c0ccb29c9c09a8daf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "          ProbeIterator(Set<V> cycleSet, V startVertex)", "signatureAfterChange": "          ProbeIterator(Set<V> cycleSet, V startVertex)", "diff": ["-            super(m_graph, startVertex);", "-            m_cycleSet = cycleSet;", "-            m_path = new ArrayList<V>();", "+            super(graph, startVertex);", "+            this.cycleSet = cycleSet;", "+            path = new ArrayList<V>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dabe3c6a6eb27c6cb51cdef46bb6305", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean containsEdge( Edge e )", "signatureAfterChange": "     public boolean containsEdge( E e )", "diff": ["-    public boolean containsEdge( Edge e ) {", "+    public boolean containsEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dbae08eb02ef9d933786f135241e4f9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-    public List<E> outgoingEdgesOf(V vertex)", "+    public Set<E> outgoingEdgesOf(V vertex)", "-        ArrayList<E> edges = new ArrayList<E>();", "-        // XXX hb 27-Nov-05: I have no clue why this cast works without raising a warning", "-        List<? extends E> baseEdges =", "+        Set<E> edges = new ArrayUnenforcedSet<E>();", "+        Set<? extends E> baseEdges ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef93e7d4791945c7f69debcc7374386", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testSubgraphListener()", "signatureAfterChange": "     public void testSubgraphListener()", "diff": ["-        g.removeVertex(_v1);", "-        vset.remove(_v1);", "+        g.removeVertex(v1);", "+        vset.remove(v1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f18212d995d868cf23a35a0dc63743c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean isReuseEvents()", "signatureAfterChange": "     public boolean isReuseEvents()", "diff": ["-        return m_reuseEvents;", "+        return reuseEvents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f34a2f2514f95409e40bb5dac1d2cab", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void exportVertex(PrintStream out, Object vertex)", "signatureAfterChange": "      private void exportVertex(PrintStream out, V vertex)", "diff": ["-    private void exportVertex(PrintStream out, Object vertex)", "+    private void exportVertex(PrintStream out, V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb0cb4f0b37d4362e1a88cc9113c4d7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/EdgeTraversalEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public EdgeTraversalEvent( Object eventSource, Edge edge )", "signatureAfterChange": "     public EdgeTraversalEvent( Object eventSource, E edge )", "diff": ["-    public EdgeTraversalEvent( Object eventSource, Edge edge ) {", "+    public EdgeTraversalEvent( Object eventSource, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203f1523903b6b6a979fd915534c0127", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "         public void vertexRemoved(GraphVertexChangeEvent<V> e)", "signatureAfterChange": "         public void vertexRemoved(GraphVertexChangeEvent<V> e)", "diff": ["-            if (!m_jtElementsBeingRemoved.remove(jtVertex)) {", "+            if (!jtElementsBeingRemoved.remove(jtVertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2070cfd124b53a1b65281a369e4e1460", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public boolean removeEdge( Edge e )", "signatureAfterChange": "     public boolean removeEdge( E e )", "diff": ["-    public boolean removeEdge( Edge e ) {", "+    public boolean removeEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c4c89aa6d6ac4ce8106eac94c127f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "          void removeEdge(E jtEdge)", "signatureAfterChange": "          void removeEdge(E jtEdge)", "diff": ["-            m_jtElementsBeingRemoved.add(jtEdge);", "-            m_graph.removeEdge(jtEdge);", "-            m_jtElementsBeingRemoved.remove(jtEdge);", "+            jtElementsBeingRemoved.add(jtEdge);", "+            graph.removeEdge(jtEdge);", "+            jtElementsBeingRemoved.remove(jtEdge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217c6475c5fba95fb8cd488572e558a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DirectedNeighborIndex(DirectedGraph<V, E> g)", "signatureAfterChange": "     public DirectedNeighborIndex(DirectedGraph<V, E> g)", "diff": ["-        m_graph = g;", "+        graph = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217dd6a7981fc0d09e25a29a6e51c175", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public UndirectedSpecifics(Graph<VV, EE> g)", "signatureAfterChange": "         public UndirectedSpecifics(Graph<VV, EE> g)", "diff": ["-            m_graph = g;", "+            graph = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21dd52ee4cc379768b06ead626ed35ea", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public int inDegreeOf(V vertex)", "signatureAfterChange": "     public int inDegreeOf(V vertex)", "diff": ["-        return m_specifics.inDegreeOf(vertex);", "+        return specifics.inDegreeOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224ebd1bafc44db5f725da90a732e964", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public BronKerboschCliqueFinder(Graph<V,E> graph)", "signatureAfterChange": "     public BronKerboschCliqueFinder(Graph<V,E> graph)", "diff": ["-        m_graph = graph;", "+        this.graph = graph;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2340ac1d193a948bfec99be1c2199a93", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "       private EdgeEvent createEdgeEvent( int eventType, Edge edge )", "signatureAfterChange": "       private GraphEdgeChangeEvent createGraphEdgeChangeEvent( int eventType,         Edge edge )", "diff": ["-    private EdgeEvent createEdgeEvent( int eventType, Edge edge ) {", "+    private GraphEdgeChangeEvent createGraphEdgeChangeEvent( int eventType,", "+        Edge edge ) {", "-            return new EdgeEvent( this, eventType, edge );", "+            return new GraphEdgeChangeEvent( this, eventType, edge );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240116da91eb4e72b9db5e706b02c0e6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "          public void removeNeighbor(V v)", "signatureAfterChange": "          public void removeNeighbor(V v)", "diff": ["-            ModifiableInteger count = m_neighborCounts.get(v);", "+            ModifiableInteger count = neighborCounts.get(v);", "-                m_neighborCounts.remove(v);", "+                neighborCounts.remove(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248c21547bcc4ef202c063c6f740f4c1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "c2593980e98ffd3b0fd8713e1065362c591d271a", "commitAfterChange": "f67e9197d81c666622112a20391d80767fa4beb3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "                  GeneralVertexDegreeComparator(Graph<V,?> graph)", "signatureAfterChange": "                  GeneralVertexDegreeComparator(Graph<V2,?> graph)", "diff": ["-        GeneralVertexDegreeComparator(Graph<V,?> graph)  {", "+        GeneralVertexDegreeComparator(Graph<V2,?> graph)  {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2544462c575e9fb91af5b45739a8e8f1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "813f75565241c6a2b1109a8415fe2c264ac5efee", "commitAfterChange": "a284e8dcc35136857961275fe0592b53e02b6601", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private int compareFlowTo(double flow, double val)", "signatureAfterChange": "      private int compareFlowTo(double flow, double val)", "diff": ["-        if (Math.abs(diff) < EPSILON)", "+        if (Math.abs(diff) < DEFAULT_EPSILON)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2557aa262c522d7015fdd378c2d82a2b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "       private VertexEvent createVertexEvent( int eventType, Object vertex )", "signatureAfterChange": "       private GraphVertexChangeEvent createGraphVertexChangeEvent(          int eventType, Object vertex )", "diff": ["-    private VertexEvent createVertexEvent( int eventType, Object vertex ) {", "+    private GraphVertexChangeEvent createGraphVertexChangeEvent( ", "+        int eventType, Object vertex ) {", "-            return new VertexEvent( this, eventType, vertex );", "+            return new GraphVertexChangeEvent( this, eventType, vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d6c4fad3559d24832953625f9e52da", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public ConnectivityInspector(DirectedGraph<V, E> g)", "signatureAfterChange": "     public ConnectivityInspector(DirectedGraph<V, E> g)", "diff": ["-        m_graph = new AsUndirectedGraph<V,E>(g);", "+        this.graph = new AsUndirectedGraph<V,E>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d7bf0149380134f64ccd3a697c2bf5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/GraphVertexChangeEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getVertex(  )", "signatureAfterChange": "     public V getVertex(  )", "diff": ["-    public Object getVertex(  ) {", "+    public V getVertex(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25edc191d52822d45a92d1a70eb02df9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void addEdgesStartingAt(         final Graph<V,E> g,         final V v,         final V u,         boolean createLoops)", "signatureAfterChange": "      private void addEdgesStartingAt(         final Graph<V,E> g,         final V v,         final V u,         boolean createLoops)", "diff": ["-        final List<V> adjVertices = GraphHelper.neighborListOf(g, u);", "+        final List<V> adjVertices = Graphs.neighborListOf(g, u);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b7cb0a073635c7e947d9b357ade955", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public V next()", "signatureAfterChange": "     public V next()", "diff": ["-        if (m_startVertex != null) {", "+        if (startVertex != null) {", "-            if (m_state == CCS_BEFORE_COMPONENT) {", "-                m_state = CCS_WITHIN_COMPONENT;", "-                fireConnectedComponentStarted(m_ccStartedEvent);", "+            if (state == CCS_BEFORE_COMPONENT) {", "+                state = CCS_WITHIN_COMPONENT;", "+                fireConnectedComponentStarted(ccStartedEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "273f04c8a1ef6e176d66529973e71574", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/AllAlgTests.java", "commitBeforeChange": "d8ed8ef8b263bf17a983a68bd9bc937a457a5131", "commitAfterChange": "363b3697f0eb7c11af74750e9c6cd908c655d522", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite()", "signatureAfterChange": "     public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(MaxBipartiteMatchingTest.class));", "+        suite.addTest(new TestSuite(HopcroftKarpBipartiteMatchingTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276f3ce3df4586467297aadf14ba4c89", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void setDefaultVertexAttributes(         AttributeMap defaultVertexAttributes)", "signatureAfterChange": "     public void setDefaultVertexAttributes(         AttributeMap defaultVertexAttributes)", "diff": ["-        m_defaultVertexAttributes = defaultVertexAttributes;", "+        this.defaultVertexAttributes = defaultVertexAttributes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e6059c6dd62f543571e10597c86239", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void edgeRemoved( Edge e )", "signatureAfterChange": "     public void edgeRemoved( EdgeEvent e )", "diff": ["-    public void edgeRemoved( Edge e ) {", "+    public void edgeRemoved( EdgeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2809ffd2ea8f5542fe178c482fecf2ee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private EdgeTraversalEvent<V, E> createEdgeTraversalEvent(E edge)", "signatureAfterChange": "      private EdgeTraversalEvent<V, E> createEdgeTraversalEvent(E edge)", "diff": ["-            m_reusableEdgeEvent.setEdge(edge);", "+            reusableEdgeEvent.setEdge(edge);", "-            return m_reusableEdgeEvent;", "+            return reusableEdgeEvent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28478fae1737456e15203056978cdb18", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted()", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted()", "diff": ["-        return m_stack.isEmpty();", "+        return stack.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2898e3e93628e73908a758982bcd85ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\"     private void positionVertexAt(Object vertex, int x, int y)", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\"     private void positionVertexAt(Object vertex, int x, int y)", "diff": ["-        DefaultGraphCell cell = m_jgAdapter.getVertexCell(vertex);", "+        DefaultGraphCell cell = jgAdapter.getVertexCell(vertex);", "-        m_jgAdapter.edit(cellAttr, null, null, null);", "+        jgAdapter.edit(cellAttr, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c020449515811b4cc1d608c3a57fc6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/IntegerNameProvider.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getVertexName(Object vertex)", "signatureAfterChange": "     public String getVertexName(V vertex)", "diff": ["-    public String getVertexName(Object vertex)", "+    public String getVertexName(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28dbd50f1cd323e93c43c592dce141ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "7518fda5e34fbd0d30800f00a7bcae8e402c0396", "commitAfterChange": "b0ffaa521363d5faf1bf5b397f78265b9ab95ae6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic int getVertexOrder(V v)", "signatureAfterChange": "      public int getVertexNumber(V v)", "diff": ["-\t", "-\tpublic int getVertexOrder(V v)\t{", "-\t\treturn mapVertexToOrder.get(v).intValue();", "-\t}", "+", "+    public int getVertexNumber(V v) {", "+        return mapVertexToOrder.get(v).intValue();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2926a415138e2a6c8f729a18ca34a488", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         protected void encounterVertex( Object vertex, Edge edge )", "signatureAfterChange": "         protected void encounterVertex( Object vertex, Edge edge )", "diff": ["-            data.visit( time );", "-            time++;", "-            vertices.put( vertex, data );", "+            data.visit( m_time );", "+            m_time++;", "+            m_vertices.put( vertex, data );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29889615c4dcbd6698cff99596cbb4c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29b72de0a0371ad194d563948a5c9281", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean containsEdge(E e)", "signatureAfterChange": "     public boolean containsEdge(Edge e)", "diff": ["-    public boolean containsEdge(E e)", "+    public boolean containsEdge(Edge e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aa3543acb06d7ba32ac86b415fc2ead", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Edge getEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E getEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge getEdge( Object sourceVertex, Object targetVertex ) {", "+    public E getEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b1e88cc6416fa1d25a9123260b67087", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "         protected void encounterVertexAgain( Object vertex, Edge edge )", "diff": ["-            VertexData data = (VertexData) vertices.get( vertex );", "-            data.visit( time );", "-            time++;", "+            VertexData data = (VertexData) m_vertices.get( vertex );", "+            data.visit( m_time );", "+            m_time++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c3b31008e4ebdaed224fe395b496ce0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/permutation/CompoundPermutationIterTest.java", "commitBeforeChange": "acfe801335f16a87725836b305b3fe772d6f9b74", "commitAfterChange": "23231d0c46fcd2dad4257a1c2704491830fb115a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testGetNext()", "signatureAfterChange": "     public void testGetNext()", "diff": ["-                System.out.println(ArrayUtil.toString(resultArray));", "+                System.out.println(Arrays.toString(resultArray));", "-                System.out.println(ArrayUtil.toString(resultArray));", "+                System.out.println(Arrays.toString(resultArray));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c6b6601e3a9ac296aaa377c73a51f2b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public NeighborIndex(Graph<V, E> g)", "signatureAfterChange": "     public NeighborIndex(Graph<V, E> g)", "diff": ["-        m_graph = g;", "+        graph = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c858f397131a4b5b574be7f12408868", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Object getSeenData( Object vertex )", "signatureAfterChange": "     protected D getSeenData( V vertex )", "diff": ["-    protected Object getSeenData( Object vertex ) {", "+    protected D getSeenData( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1c3abaaa4fcabc22dbd087d76a6dac", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/PrefetchIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object nextElement()", "signatureAfterChange": "     public E nextElement()", "diff": ["-    public Object nextElement()", "+    public E nextElement()", "-        Object result = null;", "+        E result = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6615372ba79bbb94ec7a3709d2bc5b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "7bbdcf37663f36f80ef1f366555eafdbd618736a", "commitAfterChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected static int checkGraphsType(Graph graph1, Graph graph2)", "signatureAfterChange": "      protected static int checkGraphsType(Graph graph1, Graph graph2)", "diff": ["-        return GRAPH_TYPE_REGULAR;", "+        return GRAPH_TYPE_ARBITRARY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9d9b9e13d38d691e7e71cacccc9697", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "diff": ["-        if( !m_multipleEdgesAllowed", "+        if( !m_allowingMultipleEdges", "-        if( !m_loopsAllowed && sourceVertex.equals( targetVertex ) ) {", "+        if( !m_allowingLoops && sourceVertex.equals( targetVertex ) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd8aa1959e37e6dfd7a36acaaae267a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "          public Set<V> getVertexSet()", "signatureAfterChange": "          public Set<V> getVertexSet()", "diff": ["-            return m_vertexMapDirected.keySet();", "+            return vertexMapDirected.keySet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e5132fb5e2cc807cee38342ac2a7733", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public V getEdgeSource(E e)", "signatureAfterChange": "     public V getEdgeSource(E e)", "diff": ["-            m_vertexTypeDecl);", "+            vertexTypeDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e6d63d76367032488c99c48ea04c291", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Edge getSpanningTreeEdge( Object vertex )", "signatureAfterChange": "     public Edge getSpanningTreeEdge( Object vertex )", "diff": ["-        ClosestFirstQueueEntry entry =", "-            (ClosestFirstQueueEntry) getSeenData( vertex );", "+        QueueEntry entry = (QueueEntry) getSeenData( vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e7d2cb20506902c5375b67dbc046f5f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public int outDegreeOf(V vertex)", "signatureAfterChange": "     public int outDegreeOf(V vertex)", "diff": ["-        return ((DirectedGraph<V,? extends E>) m_delegate).outDegreeOf(vertex);", "+        return ((DirectedGraph<V,? extends E>) delegate).outDegreeOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f39394fd5db41f42f62689bf5baabf9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSet.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void add(Object element)", "signatureAfterChange": "     public void add(E element)", "diff": ["-    public void add(Object element)", "+    public void add(E element)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f4fbc1e0864c32307f3e8d9227b20ec", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private Neighbors<V,E> getSuccessors(V v)", "signatureAfterChange": "      private Neighbors<V,E> getSuccessors(V v)", "diff": ["-        Neighbors<V,E> neighbors = m_successorMap.get(v);", "+        Neighbors<V,E> neighbors = successorMap.get(v);", "-                    Graphs.successorListOf(m_graph, v));", "-            m_successorMap.put(v, neighbors);", "+                    Graphs.successorListOf(graph, v));", "+            successorMap.put(v, neighbors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f91ffb792bffbc79a0e62dbf2d64b30", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void addSquareEdges(Graph<V,E> g, boolean createLoops)", "signatureAfterChange": "      private void addSquareEdges(Graph<V,E> g, boolean createLoops)", "diff": ["-            List<V> adjVertices = GraphHelper.neighborListOf(g, v);", "+            List<V> adjVertices = Graphs.neighborListOf(g, v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30020a6c914110c9c659f3a84c23fddb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public abstract List<E> edgesOf(V vertex);", "signatureAfterChange": "         public abstract List<? extends EE> edgesOf(VV vertex);", "diff": ["-        public abstract List<E> edgesOf(V vertex);", "+        public abstract List<? extends EE> edgesOf(VV vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "306d939321c14350e3aee2ac947d960c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/generate/GraphGeneratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testLinearGraphGenerator()", "signatureAfterChange": "     public void testLinearGraphGenerator()", "diff": ["-        gen.generateGraph(g, m_vertexFactory, resultMap);", "+        gen.generateGraph(g, vertexFactory, resultMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a47cd889f02419417a9bb8d4c310c4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 39, "signatureBeforeChange": "         public void vertexRemoved( GraphVertexChangeEvent e )", "signatureAfterChange": "         public void vertexRemoved( GraphVertexChangeEvent e )", "diff": ["-            if( !m_jtVerticesBeingRemoved.remove( jtVertex ) ) {", "-                removeJGraphTVertex( jtVertex );", "+            if( !m_jtElementsBeingRemoved.remove( jtVertex ) ) {", "+                handleJGraphTRemoveVertex( jtVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3131536303b44988e94b909d8e26e70d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void vertexAdded( Object v )", "signatureAfterChange": "     public void vertexAdded( VertexEvent e )", "diff": ["-    public void vertexAdded( Object v ) {", "+    public void vertexAdded( VertexEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31559236ffe25f8c93b56ef548592360", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Edge removeEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E removeEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge removeEdge( Object sourceVertex, Object targetVertex ) {", "-        Edge e = super.removeEdge( sourceVertex, targetVertex );", "+    public E removeEdge( V sourceVertex, V targetVertex ) {", "+        E e = super.removeEdge( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317ff73bf717d78f418ba4ff1c0f604d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testRemoveEdge()", "signatureAfterChange": "     public void testRemoveEdge()", "diff": ["-        m_undirected.removeEdge(m_loop);", "-        assertEquals(false, m_undirected.containsEdge(m_loop));", "-        assertEquals(false, m_directed.containsEdge(m_loop));", "+        undirected.removeEdge(loop);", "+        assertEquals(false, undirected.containsEdge(loop));", "+        assertEquals(false, directed.containsEdge(loop));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31c6b02a946b69cfa682a418d2ce9cfa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "91e402189940321ae76ce3a4cf3b435ec3f2ecd3", "commitAfterChange": "813ec90d631939110c91842ccc585ff9d81ec46d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void calculateMaximumFlow(         V source,         V sink)", "signatureAfterChange": "     public void calculateMaximumFlow(         V source,         V sink)", "diff": ["-            if (!nodes.get(currentSink).was) {", "+            if (!nodes.get(currentSink).visited) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32236eaec317f47cf4450c82f6462675", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/GraphListener.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void edgeAdded( EdgeEvent e );", "signatureAfterChange": "     public void edgeAdded( GraphEdgeChangeEvent e );", "diff": ["-    public void edgeAdded( EdgeEvent e );", "+    public void edgeAdded( GraphEdgeChangeEvent e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3231801dbd68888597cbe34a94ede407", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DirectedWeightedEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DirectedWeightedEdge( Object sourceVertex, Object targetVertex,         double weight )", "signatureAfterChange": "     public DirectedWeightedEdge( V sourceVertex, V targetVertex,         double weight )", "diff": ["-    public DirectedWeightedEdge( Object sourceVertex, Object targetVertex,", "+    public DirectedWeightedEdge( V sourceVertex, V targetVertex,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ac9333b107ec46771d7c5e772fd3ed", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> removeAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> removeAllEdges(V sourceVertex, V targetVertex)", "-        List<E> removed = getAllEdges(sourceVertex, targetVertex);", "+        Set<E> removed = getAllEdges(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32bb245cb0fbe6f974f806613ad8d1f1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "signatureAfterChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "diff": ["-        if (!m_allowingMultipleEdges", "+        if (!allowingMultipleEdges", "-        if (!m_allowingLoops && sourceVertex.equals(targetVertex)) {", "+        if (!allowingLoops && sourceVertex.equals(targetVertex)) {", "-        m_edgeMap.put(e, intrusiveEdge);", "-        m_specifics.addEdgeToTouchingVertices(e);", "+        edgeMap.put(e, intrusiveEdge);", "+        specifics.addEdgeToTouchingVertices(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e10ebc43210979be68b85f71be34b1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-            m_specifics.getVertexSet().remove(v); // remove the vertex itself", "+            specifics.getVertexSet().remove(v); // remove the vertex itself"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33cfcd679158fc68db6b98a8f3e40564", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex);", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex);", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex);", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34111366aeff84b2aff7aa646f4e9018", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public List<E> edgesOf(V vertex);", "signatureAfterChange": "     public Set<E> edgesOf(V vertex);", "diff": ["-    public List<E> edgesOf(V vertex);", "+    public Set<E> edgesOf(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3503b70f7d286f3b29739f222274945a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     void handleJGraphTRemovedEdge(E jtEdge)", "signatureAfterChange": "     void handleJGraphTRemovedEdge(E jtEdge)", "diff": ["-        DefaultEdge edgeCell = (DefaultEdge) m_edgeToCell.remove(jtEdge);", "-        m_cellToEdge.remove(edgeCell);", "+        DefaultEdge edgeCell = (DefaultEdge) edgeToCell.remove(jtEdge);", "+        cellToEdge.remove(edgeCell);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35048bee57b3787915fc582afb7a1b3d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int degreeOf(V vertex)", "signatureAfterChange": "     public int degreeOf(V vertex)", "diff": ["-        return ((UndirectedGraph<V,E>) m_delegate).degreeOf(vertex);", "+        return ((UndirectedGraph<V,E>) delegate).degreeOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "350d6e4921260e95ae2ee8d22d42f58a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/ConnectedComponentTraversalEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ConnectedComponentTraversalEvent(Object eventSource, int type)", "signatureAfterChange": "     public ConnectedComponentTraversalEvent(Object eventSource, int type)", "diff": ["-        m_type = type;", "+        this.type = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "352ff78ba749f9ff9556ff3f4d5ece22", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "4d7b735198ee2f6b968179206989dbb86fc679e1", "commitAfterChange": "78884be0de3af7915e782067f1b82ecce38ca128", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-        return queue.removeFirst();", "+        return queue.remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357e8b847f6bfdbba356c0ea5c5f04d8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testAddVertex()", "signatureAfterChange": "     public void testAddVertex()", "diff": ["-        m_undirected.addVertex(v5);", "-        assertEquals(true, m_undirected.containsVertex(v5));", "-        assertEquals(true, m_directed.containsVertex(v5));", "+        undirected.addVertex(v5);", "+        assertEquals(true, undirected.containsVertex(v5));", "+        assertEquals(true, directed.containsVertex(v5));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "359cd032020ac4ddf868730cec07051e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "         public void addEdge(EE e)", "signatureAfterChange": "         public void addEdge(EE e)", "diff": ["-            m_vertexEdges.add(e);", "+            vertexEdges.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35e5289d26019fff95bf0be218707d82", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void exportAdjacencyMatrix(Writer output, UndirectedGraph  g)", "signatureAfterChange": "     public void exportAdjacencyMatrix(Writer output, UndirectedGraph  g)", "diff": ["-            // TODO modify GraphHelper to return neighbor sets", "+            // TODO modify Graphs to return neighbor sets", "-                    GraphHelper.neighborListOf(g, from));", "+                    Graphs.neighborListOf(g, from));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36ca9e586b3f686c58c8cabd9e16b007", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( V v )", "diff": ["-    public boolean removeVertex( Object v ) {", "+    public boolean removeVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3705527c97071cc483e760a57b1cbe95", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean pathExists( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public boolean pathExists( V sourceVertex, V targetVertex )", "diff": ["-    public boolean pathExists( Object sourceVertex, Object targetVertex ) {", "+    public boolean pathExists( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3785638d5bb963c89eb09db5046afe73", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setEdgeListFactory(EdgeListFactory<V,E> edgeListFactory)", "signatureAfterChange": "     public void setEdgeSetFactory(EdgeSetFactory<V,E> edgeListFactory)", "diff": ["-    public void setEdgeListFactory(EdgeListFactory<V,E> edgeListFactory)", "+    public void setEdgeSetFactory(EdgeSetFactory<V,E> edgeListFactory)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "379e6ca44825737205db057313617085", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "320f41319eefcc411b999151096f11d4608d80c3", "commitAfterChange": "94cd40aee7737a3929e0568a1e5623a7da828391", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertex( Object vertex, Edge edge )", "diff": ["-        m_queue.add( vertex );", "+        m_queue.addLast( vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a18c81b82a7ea37b3907c5d2cba138", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public int inDegreeOf(V vertex)", "signatureAfterChange": "     public int inDegreeOf(V vertex)", "diff": ["-        return ((DirectedGraph<V,? extends E>) m_delegate).inDegreeOf(vertex);", "+        return ((DirectedGraph<V,? extends E>) delegate).inDegreeOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38569cf3d8a10734830f8e927c838c3c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Set<V> vertexSet()", "signatureAfterChange": "     public Set<V> vertexSet()", "diff": ["-        if (m_unmodifiableVertexSet == null) {", "-            m_unmodifiableVertexSet = Collections.unmodifiableSet(m_vertexSet);", "+        if (unmodifiableVertexSet == null) {", "+            unmodifiableVertexSet = Collections.unmodifiableSet(vertexSet);", "-        return m_unmodifiableVertexSet;", "+        return unmodifiableVertexSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38713f003760acf1a3e19da79e1d45ab", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/GraphVertexChangeEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public V getVertex()", "signatureAfterChange": "     public V getVertex()", "diff": ["-        return m_vertex;", "+        return vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "389cd4fa7287b6aa1772f459018f9785", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean isMultipleEdgesAllowed(  )", "signatureAfterChange": "     public boolean isAllowingMultipleEdges(  )", "diff": ["+     */", "+    public boolean isAllowingMultipleEdges(  ) {", "+        return m_allowingMultipleEdges;", "-     */", "-    public boolean isMultipleEdgesAllowed(  ) {", "-        return m_multipleEdgesAllowed;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38ddc9e5a0124aa65d2729d255deed3d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Collection<Set<V>> getAllMaximalCliques()", "signatureAfterChange": "     public Collection<Set<V>> getAllMaximalCliques()", "diff": ["-        m_cliques = new ArrayList<Set<V>>();", "+        cliques = new ArrayList<Set<V>>();", "-        candidates.addAll(m_graph.vertexSet());", "+        candidates.addAll(graph.vertexSet());", "-        return m_cliques;", "+        return cliques;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "399dd41ae1b5f8c2265976c8e7bdb2e6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean isCrossComponentTraversal()", "signatureAfterChange": "     public boolean isCrossComponentTraversal()", "diff": ["-        return m_crossComponentTraversal;", "+        return crossComponentTraversal;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3adad198674af519da75bbde816d3319", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private Neighbors getNeighbors(V v)", "signatureAfterChange": "      private Neighbors getNeighbors(V v)", "diff": ["-                    GraphHelper.neighborListOf(m_graph, v));", "+                    Graphs.neighborListOf(m_graph, v));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ade5726c7d37c5f880ca8bf47a4fc78", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public UndirectedWeightedEdge createEdge( V source, V target )", "diff": ["-        public Edge createEdge( Object source, Object target ) {", "+        public UndirectedWeightedEdge createEdge( V source, V target ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b6b7871b45a091b147088411a8fe290", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public void edgeAdded( Edge e )", "signatureAfterChange": "         public void edgeAdded( EdgeEvent e )", "diff": ["-        public void edgeAdded( Edge e ) {", "+        public void edgeAdded( EdgeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b8e3776e9fdb80131ced81b8485f3b1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "dd9159de978ae75b36012188fd03f0f1795dca1e", "commitAfterChange": "b72e01143a1e17e6591292126844a7d79772633b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Set<V> findCycles()", "signatureAfterChange": "     public Set<V> findCycles()", "diff": ["-        // so use StrongConnectivityInspector instead.", "-        KosarajuStrongConnectivityInspector<V, E> inspector =", "+        // so use StrongConnectivityAlgorithm instead.", "+        StrongConnectivityAlgorithm<V, E> inspector ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c071e1f9a4f13b0a3f5c71e2f30597a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/GraphEdgeChangeEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphEdgeChangeEvent(Object eventSource, int type, E e)", "signatureAfterChange": "     public GraphEdgeChangeEvent(Object eventSource, int type, E e)", "diff": ["-        m_edge = e;", "+        edge = e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c971bc8a0115a95564b7ea4c5819ba8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Subgraph(Graph<V, E> base, Set<V> vertexSubset)", "signatureAfterChange": "     public Subgraph(Graph<V, E> base, Set<V> vertexSubset)", "diff": ["-        m_isInduced = true;", "+        isInduced = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cd2e059da9cb382d2d777ea600f3b63", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object getTarget(  )", "signatureAfterChange": "     public V getTarget(  )", "diff": ["-    public Object getTarget(  ) {", "+    public V getTarget(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cdcab189d146ee8584b2d8edf43f808", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void fireEdgeAdded( Edge edge )", "signatureAfterChange": "     protected void fireEdgeAdded( Edge edge )", "diff": ["-        EdgeEvent e   = createEdgeEvent( EdgeEvent.EDGE_ADDED, edge );", "-        int       len = m_graphListeners.size(  );", "+        GraphEdgeChangeEvent e =", "+            createGraphEdgeChangeEvent( GraphEdgeChangeEvent.EDGE_ADDED, edge );", "+        int                  len = m_graphListeners.size(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ceab623282fb290f31b5f29c4f3b0d4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/UniformEquivalenceComparator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public boolean equivalenceCompare(         Object arg1,         Object arg2,         Object context1,         Object context2)", "signatureAfterChange": "     public boolean equivalenceCompare(             E arg1,             E arg2,             C context1,             C context2)", "diff": ["-        Object arg1,", "-        Object arg2,", "-        Object context1,", "-        Object context2)", "+            E arg1,", "+            E arg2,", "+            C context1,", "+            C context2)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0ac4b58de2c0db62b1b0f95391bcba", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void encounterVertex( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertex( V vertex, E edge )", "diff": ["-    protected void encounterVertex( Object vertex, Edge edge ) {", "+    protected void encounterVertex( V vertex, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7e94c219cdd314651cdd5f6a5817d4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public V getEdgeTarget(E e)", "signatureAfterChange": "     public V getEdgeTarget(E e)", "diff": ["-            m_vertexTypeDecl);", "+            vertexTypeDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db5005c35f2009c04657db8e005a932", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "         public List<EE> getUnmodifiableOutgoingEdges()", "signatureAfterChange": "         public Set<EE> getUnmodifiableOutgoingEdges()", "diff": ["-        public List<EE> getUnmodifiableOutgoingEdges()", "+        public Set<EE> getUnmodifiableOutgoingEdges()", "-                    Collections.unmodifiableList(m_outgoing);", "+                    Collections.unmodifiableSet(m_outgoing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e80abb674eb90c31b87fd4edfffcc61", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void checkRadiusTraversal(boolean crossComponentTraversal)", "signatureAfterChange": "      private void checkRadiusTraversal(boolean crossComponentTraversal)", "diff": ["-        if (crossComponentTraversal && (m_radius != Double.POSITIVE_INFINITY)) {", "+        if (crossComponentTraversal && (radius != Double.POSITIVE_INFINITY)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e87c49fa86e044391d125b64cae8225", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "          DirectedEdgeContainer(EdgeListFactory<VV,EE> edgeListFactory, VV vertex)", "signatureAfterChange": "          DirectedEdgeContainer(EdgeSetFactory<VV,EE> edgeListFactory, VV vertex)", "diff": ["-        DirectedEdgeContainer(EdgeListFactory<VV,EE> edgeListFactory, VV vertex)", "+        DirectedEdgeContainer(EdgeSetFactory<VV,EE> edgeListFactory, VV vertex)", "-            m_incoming = edgeListFactory.createEdgeList(vertex);", "-            m_outgoing = edgeListFactory.createEdgeList(vertex);", "+            m_incoming = edgeListFactory.createEdgeSet(vertex);", "+            m_outgoing = edgeListFactory.createEdgeSet(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f31c98da61b18f5b73e29aa7402c48f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "          Set<E> edgesOf(V vertex)", "signatureAfterChange": "          Set<E> edgesOf(V vertex)", "diff": ["-            return m_graph.edgesOf(vertex);", "+            return graph.edgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f45237ceed99397514a69c772961e3c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean containsEdge(E e)", "signatureAfterChange": "     public boolean containsEdge(E e)", "diff": ["-        return m_edgeMap.containsKey(e);", "+        return edgeMap.containsKey(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fec8bc61d8e713ec43f257eabd81633", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-    public List<E> incomingEdgesOf(V vertex)", "+    public Set<E> incomingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403e4b04d24bcc9a6c956422a580784d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/SubgraphIsomorphismTestUtils.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static boolean allMatchingsCorrect(                     VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf2,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "signatureAfterChange": "      public static boolean allMatchingsCorrect(                     VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf2,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "diff": ["-        for (Iterator<IsomorphicGraphMapping<Integer, DefaultEdge>> mappings =", "+        for (Iterator<GraphMapping<Integer, DefaultEdge>> mappings ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "405dbfb1fe94916d3ddfa19b0248842a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "0997a58f5471f09bb9fdcb21da80e929c7b2bb23", "commitAfterChange": "9350cdef6b0d2c87575b39e1606fd2378047d04a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public UndirectedSpecifics( UndirectedGraph g )", "signatureAfterChange": "         public UndirectedSpecifics( Graph g )", "diff": ["-        public UndirectedSpecifics( UndirectedGraph g ) {", "+        public UndirectedSpecifics( Graph g ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407fbbb51ca3e326d17809c1fad30c91", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2GraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public VF2GraphIsomorphismInspector(                     Graph<V,E> graph1,                     Graph<V,E> graph2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "signatureAfterChange": "      public VF2GraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2,             Comparator<V> vertexComparator,             Comparator<E> edgeComparator)", "diff": ["-                    Graph<V,E> graph1,", "-                    Graph<V,E> graph2,", "-                    Comparator<V> vertexComparator,", "-                    Comparator<E> edgeComparator)", "-        super(graph1, graph2, vertexComparator, edgeComparator);", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2,", "+            Comparator<V> vertexComparator,", "+            Comparator<E> edgeComparator)", "+        super(graph1,", "+              graph2,", "+              vertexComparator,", "+              edgeComparator,", "+              true);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b7c4b1cb0c5fdee0ba33a297cf1572", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "2955193f2c773802cdf5e2830661d2b9bb1e4d77", "commitAfterChange": "e9a771f827ef970ca3f917379fbfaeea59db179e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       abstract AbstractGraphIterator createIterator( Graph g, Object startVertex );", "signatureAfterChange": "       abstract AbstractGraphIterator createIterator(         DirectedGraph g, Object startVertex );", "diff": ["-    abstract AbstractGraphIterator createIterator( Graph g, Object startVertex );", "+    abstract AbstractGraphIterator createIterator("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e987a5b02c0c876cb826cb90f9cdf7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public Object remove(  );", "signatureAfterChange": "         public T remove(  );", "diff": ["-        public Object remove(  );", "+        public T remove(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "410254c87809e8d123ceed5bb18280f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public abstract List<? extends EE> edgesOf(VV vertex);", "signatureAfterChange": "         public abstract Set<? extends EE> edgesOf(VV vertex);", "diff": ["-        public abstract List<? extends EE> edgesOf(VV vertex);", "+        public abstract Set<? extends EE> edgesOf(VV vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4127a7cc979d86d72a478e9ff594dd21", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ConnectivityInspector(UndirectedGraph<V, E> g)", "signatureAfterChange": "     public ConnectivityInspector(UndirectedGraph<V, E> g)", "diff": ["-        m_graph = g;", "+        this.graph = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4166fe661f51b52daefa374b074cbe37", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-        return m_stack.remove(m_stack.size() - 1);", "+        return stack.remove(stack.size() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "418b6c205e365927c3efa9dffd001cde", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VertexNameProvider.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public String getVertexName(Object vertex);", "signatureAfterChange": "     public String getVertexName(V vertex);", "diff": ["-    public String getVertexName(Object vertex);", "+    public String getVertexName(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "419eb1bf88898923e4434869281bebfc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "fb87419b8dc96e08a9a084847be43d0b4412606c", "commitAfterChange": "9c304d58c2a3ebb2444bab73d9552866b4440af5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void complexDagTest()", "signatureAfterChange": "      @Test     public void testComplexDag()", "diff": ["-    public void complexDagTest() {", "+    public void testComplexDag() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a45a5c21d61a0301fd391a3eac9e94", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/UndirectedGraphUnion.java", "commitBeforeChange": "5e0bf7775da2a8b27b449fcc33833f6ca59aa433", "commitAfterChange": "c1b18555a2f28acb0ec5c4b00226afe9c678f1ef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r     public int degreeOf(V vertex)", "signatureAfterChange": "\r \r     public int degreeOf(V vertex)", "diff": ["-        Set<E> r = edgeSet();\r", "+        Set<E> r = edgesOf(vertex);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a81932f2923a4579ecb7ef30ad1125", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "5cd7be5f3549baac8c43a42359f6c3e5d99bc72b", "commitAfterChange": "cc8ceb07c7632eeaab7327652bd6a8c8944a714f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public VisioExporter( VertexNameProvider vertexNameProvider )", "signatureAfterChange": "     public VisioExporter( VertexNameProvider vertexNameProvider )", "diff": ["-        m_vertexNamingPolicy = vertexNameProvider;", "+        m_vertexNameProvider = vertexNameProvider;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b733ea61a42495229843a594e23d37", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         public void vertexRemoved( VertexEvent e )", "signatureAfterChange": "         public void vertexRemoved( GraphVertexChangeEvent e )", "diff": ["-        public void vertexRemoved( VertexEvent e ) {", "+        public void vertexRemoved( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41c73ddb4dfe0aa9ff485b35ddb75b50", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public FlyweightEdgeEvent(Object eventSource, E edge)", "signatureAfterChange": "         public FlyweightEdgeEvent(Object eventSource, localE edge)", "diff": ["-        public FlyweightEdgeEvent(Object eventSource, E edge)", "+        public FlyweightEdgeEvent(Object eventSource, localE edge)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421e7742cad0f6f59c0c778e3e936e42", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/MandatedGraph.java", "commitBeforeChange": "b3a0ec34bfe9f80bbed01afff34b232f2ee0880b", "commitAfterChange": "7b2585b4d589a484a3adfe80951dab0b7cbb6ba0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public List removeAllEdges(Object sourceVertex, Object targetVertex)", "signatureAfterChange": "     public Set removeAllEdges(Object sourceVertex, Object targetVertex)", "diff": ["-    public List removeAllEdges(Object sourceVertex, Object targetVertex)", "+    public Set removeAllEdges(Object sourceVertex, Object targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42aaad55fbed1116ac3d74802e038e32", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void createVertexData()", "signatureAfterChange": "     private void createVertexData()", "diff": ["-        m_vertexToVertexData =", "-            new HashMap<V, VertexData<V>>(m_graph.vertexSet().size());", "+        vertexToVertexData =", "+            new HashMap<V, VertexData<V>>(graph.vertexSet().size());", "-        Iterator<V> iter = m_graph.vertexSet().iterator();", "+        Iterator<V> iter = graph.vertexSet().iterator();", "-            m_vertexToVertexData.put(", "+            vertexToVertexData.put("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42ec2f9dfb55fcc7cc7dd31c9f622261", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public XXFirstIterator( Graph g, Object startVertex,             SimpleContainer pendingVerticesContainer )", "signatureAfterChange": "         public XXFirstIterator( Graph g, Object startVertex,             SimpleContainer pendingVerticesContainer )", "diff": ["-            m_specifics          = TraverseUtils.createGraphSpecifics( g );", "+            m_specifics          = CrossComponentIterator.createGraphSpecifics( g );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4362423e1f5a0b4ce588198fb3dc9d03", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "          V getEdgeSource(E e)", "signatureAfterChange": "          V getEdgeSource(E e)", "diff": ["-            return m_graph.getEdgeSource(e);", "+            return graph.getEdgeSource(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ed5804168106a81f8a370a0565f0fc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "         public abstract void removeEdgeFromTouchingVertices( Edge e );", "signatureAfterChange": "         public abstract void removeEdgeFromTouchingVertices( E e );", "diff": ["-        public abstract void removeEdgeFromTouchingVertices( Edge e );", "+        public abstract void removeEdgeFromTouchingVertices( E e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4474c3adf7f76c0a208f12c8f1e6f279", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public E getEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E getEdge(V sourceVertex, V targetVertex)", "diff": ["-        return m_delegate.getEdge(sourceVertex, targetVertex);", "+        return delegate.getEdge(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447de0767fc0d14c135800428802b7fb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object next(  )", "signatureAfterChange": "     public V next(  )", "diff": ["-    public Object next(  ) {", "+    public V next(  ) {", "-            Object nextVertex = provideNextVertex(  );", "+            V nextVertex = provideNextVertex(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bd987e36ed550755c8e7be25160ff0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "         public void edgeAdded( EdgeEvent e )", "signatureAfterChange": "         public void edgeAdded( GraphEdgeChangeEvent e )", "diff": ["-        public void edgeAdded( EdgeEvent e ) {", "+        public void edgeAdded( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44d87982c47274067e2139a5c7fb1847", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceComparatorChain.java", "commitBeforeChange": "7bbdcf37663f36f80ef1f366555eafdbd618736a", "commitAfterChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void addComparatorAfter(EquivalenceComparator comparatorAfter);", "signatureAfterChange": "     public void appendComparator(EquivalenceComparator comparatorAfter);", "diff": ["-    public void addComparatorAfter(EquivalenceComparator comparatorAfter);", "+    public void appendComparator(EquivalenceComparator comparatorAfter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450a1308905994bb6f6f20dd65bd89dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public boolean removeEdge( Edge e )", "signatureAfterChange": "     public boolean removeEdge( E e )", "diff": ["-    public boolean removeEdge( Edge e ) {", "+    public boolean removeEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "457786a5ddd3f84a28cebf0734499dd5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean detectCyclesContainingVertex( Object v )", "signatureAfterChange": "     public boolean detectCyclesContainingVertex( V v )", "diff": ["-    public boolean detectCyclesContainingVertex( Object v ) {", "+    public boolean detectCyclesContainingVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45bb2f00ac4ca9f227ebc8e94e14222c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java", "commitBeforeChange": "60b7d019273a541fe1adce1909b0933596c136ca", "commitAfterChange": "3d8e60a330e5cbc114704b3e8df3088d958dfef8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean equals(GraphMapping<V, E> rel)", "signatureAfterChange": "     public boolean isEqualMapping(GraphMapping<V, E> rel)", "diff": ["-    public boolean equals(GraphMapping<V, E> rel) {", "+    public boolean isEqualMapping(GraphMapping<V, E> rel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e60dbd798471a160f9de51848ce125", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertex( V vertex, E edge )", "diff": ["-    protected void encounterVertex( Object vertex, Edge edge ) {", "+    protected void encounterVertex( V vertex, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460bc6e3ab5439aa9f87f9a66da4da99", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( E e )", "diff": ["-    public boolean addEdge( Edge e ) {", "+    public boolean addEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46263d21033f399572db300962525dcd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/util/ExtensionManager.java", "commitBeforeChange": "faecd2a1cf395d07d24e3aeae42190134681ff5f", "commitAfterChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private E createInstance() throws IllegalAccessException, InstantiationException", "signatureAfterChange": "      public E createInstance() throws IllegalAccessException, InstantiationException", "diff": ["-    private E createInstance() throws IllegalAccessException, InstantiationException {", "-        return extensionKlass.newInstance();", "+    public E createInstance() throws IllegalAccessException, InstantiationException {", "+        return extensionFactory.create();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4627fbaf9e423eac1e67ab44757476b4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "       private void assertNonNegativeEdge( Edge edge )", "signatureAfterChange": "       private void assertNonNegativeEdge( E edge )", "diff": ["-    private void assertNonNegativeEdge( Edge edge ) {", "+    private void assertNonNegativeEdge( E edge ) {", "-            throw new IllegalArgumentException( ", "+            throw new IllegalArgumentException("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46faa64d087cb2cd21d5e990ee805bdc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Set<E> edgeSet()", "signatureAfterChange": "     public Set<E> edgeSet()", "diff": ["-        return m_delegate.edgeSet();", "+        return delegate.edgeSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "474dbeb30a3cdbeed814bcf683988952", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         protected void setType(int type)", "signatureAfterChange": "         protected void setType(int type)", "diff": ["-            m_type = type;", "+            this.type = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e286b277f05dfb2db0d8cfda673a3b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void removeTraversalListener(TraversalListener<V, E> l)", "signatureAfterChange": "     public void removeTraversalListener(TraversalListener<V, E> l)", "diff": ["-        m_traversalListeners.remove(l);", "+        traversalListeners.remove(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48039f9298c3d45c246aba20e356cf4c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertexAgain( V vertex, E edge )", "diff": ["-    protected void encounterVertexAgain( Object vertex, Edge edge ) {}", "+    protected void encounterVertexAgain( V vertex, E edge ) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487ce551d79779902716c9c36a5ef230", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean containsEdge( Edge e )", "signatureAfterChange": "     public boolean containsEdge( E e )", "diff": ["-    public boolean containsEdge( Edge e ) {", "+    public boolean containsEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b9ed285a23cab7c0f9c0ba0f77ae37", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "         public void edgeRemoved( EdgeEvent e )", "signatureAfterChange": "         public void edgeRemoved( GraphEdgeChangeEvent e )", "diff": ["-        public void edgeRemoved( EdgeEvent e ) {", "+        public void edgeRemoved( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c000654f4dac92a236a07fbb11f586", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "          boolean removeAllEdges(Collection<E> edges)", "signatureAfterChange": "          boolean removeAllEdges(Collection<E> edges)", "diff": ["-            return m_graph.removeAllEdges(edges);", "+            return graph.removeAllEdges(edges);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490adb6e7b7fdd9e6009230caeb1415d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public void edgeRemoved( EdgeEvent e )", "signatureAfterChange": "         public void edgeRemoved( GraphEdgeChangeEvent e )", "diff": ["-        public void edgeRemoved( EdgeEvent e ) {", "+        public void edgeRemoved( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4923f41db176a3a5a243a9af0c6d8e4d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected void fireVertexTraversed(VertexTraversalEvent<V> e)", "signatureAfterChange": "     protected void fireVertexTraversed(VertexTraversalEvent<V> e)", "diff": ["-        int len = m_traversalListeners.size();", "+        int len = traversalListeners.size();", "-            TraversalListener<V, E> l = m_traversalListeners.get(i);", "+            TraversalListener<V, E> l = traversalListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4986d520c747812b04f06b23ea8d9156", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public FlyweightVertexEvent( Object eventSource, Object vertex )", "signatureAfterChange": "         public FlyweightVertexEvent( Object eventSource, V vertex )", "diff": ["-        public FlyweightVertexEvent( Object eventSource, Object vertex ) {", "+        public FlyweightVertexEvent( Object eventSource, V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49df811d8e34c6c16d37962a6d9c0c48", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "9d26a72317763d88cc7e757c947354e046d22725", "commitAfterChange": "f50fd6b0f3c434b5c61c7c28fc67bb2b87beea0b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Graph createSubgraph( Graph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public Graph createSubgraph( ListenableGraph base, Set vertexSubset,         Set edgeSubset )", "diff": ["-    public Graph createSubgraph( Graph base, Set vertexSubset, Set edgeSubset ) {", "+    public Graph createSubgraph( ListenableGraph base, Set vertexSubset,", "+        Set edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5f00672e38b85366aad133a08396c4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DirectedGraphUnion.java", "commitBeforeChange": "684d27d6ebc688dbf24e3f749dae38816b82f3e0", "commitAfterChange": "51364417691421b046a3518ca4b006f616254eda", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Set<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "      public Set<E> incomingEdgesOf(V vertex)", "diff": ["-        Set<E> r = new HashSet<E>();", "+        Set<E> res = new HashSet<E>();", "-            r.addAll(getG1().incomingEdgesOf(vertex));", "+            res.addAll(getG1().incomingEdgesOf(vertex));", "-            r.addAll(getG2().incomingEdgesOf(vertex));", "+            res.addAll(getG2().incomingEdgesOf(vertex));", "-        return Collections.unmodifiableSet(r);", "+        return Collections.unmodifiableSet(res);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac7deb03d712a57cdf069a58c366669", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean isReuseEvents()", "signatureAfterChange": "     public boolean isReuseEvents()", "diff": ["-        return m_reuseEvents;", "+        return reuseEvents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af01fa7b36c190605d4e2ecde696ca7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public List<E> edgesOf(V vertex)", "signatureAfterChange": "         public List<EE> edgesOf(VV vertex)", "diff": ["-        public List<E> edgesOf(V vertex)", "+        public List<EE> edgesOf(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b8ad0baf3f28d7d363699f3a707e7f7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( E e )", "diff": ["-    public boolean addEdge( Edge e ) {", "+    public boolean addEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bcca9e02c77db5f2c4afdfa44f02c9d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/edge/DefaultDirectedWeightedEdgeTest.java", "commitBeforeChange": "b1382aa25544721cf9f8cd8ebbac3a2da4113463", "commitAfterChange": "9451ac3a25b913de295a83110c5c80ef90861e2a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEqualsObject(  )", "signatureAfterChange": "     public void testEqualsObject(  )", "diff": ["-        e5.setWeight( DirectedWeightedEdge.DEFAULT_EDGE_WEIGHT );", "+        e5.setWeight( WeightedElement.DEFAULT_WEIGHT );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfd239e59491f3e81110a74104af692", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void edgeAdded(GraphEdgeChangeEvent<V, E> e)", "signatureAfterChange": "     public void edgeAdded(GraphEdgeChangeEvent<V, E> e)", "diff": ["-        V source = m_graph.getEdgeSource(edge);", "-        V target = m_graph.getEdgeTarget(edge);", "+        V source = graph.getEdgeSource(edge);", "+        V target = graph.getEdgeTarget(edge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c01faa1163b73c27fdef4142e330bc7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Graphs.java", "commitBeforeChange": "561cd891c2def49eb3edd19d7e032dbce3f41987", "commitAfterChange": "9fdc08e28dc51bf9bd452a20ddf6cf5cb91ab3d8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public PlainDirectedGraph( EdgeFactory ef )", "signatureAfterChange": "         public DefaultDirectedGraph( EdgeFactory ef )", "diff": ["+         */", "+        public DefaultDirectedGraph( EdgeFactory ef ) {", "+            super( ef, false, true );", "+        }", "-         */", "-        public PlainDirectedGraph( EdgeFactory ef ) {", "-            super( ef, false, true );", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c508d8f00dd7c3cffe2ea9e9cddf093", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean containsEdge(E e)", "signatureAfterChange": "     public boolean containsEdge(E e)", "diff": ["-        return m_edgeSet.contains(e);", "+        return edgeSet.contains(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb41227749c2eac5e039b1f6f79c939", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/RingGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        if (m_size < 1) {", "+        if (size < 1) {", "-            new LinearGraphGenerator<V,E>(m_size);", "+            new LinearGraphGenerator<V,E>(size);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc013552ebf3706fc56d10cb1d988b6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "0997a58f5471f09bb9fdcb21da80e929c7b2bb23", "commitAfterChange": "9350cdef6b0d2c87575b39e1606fd2378047d04a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public BreadthFirstIterator( Graph g, boolean crossComponentTraversal )", "signatureAfterChange": "     public BreadthFirstIterator( Graph g, boolean crossComponentTraversal )", "diff": ["-        this( g, null, crossComponentTraversal );", "+        this( g, null, crossComponentTraversal, false );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd7cc4d1b88a42c52de1c2d5042cef9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "         public FlyweightVertexEvent(Object eventSource, V vertex)", "signatureAfterChange": "         public FlyweightVertexEvent(Object eventSource, VV vertex)", "diff": ["-        public FlyweightVertexEvent(Object eventSource, V vertex)", "+        public FlyweightVertexEvent(Object eventSource, VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce7bc1822f4150b008259bf9dd4867d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "-        List<E> edges = null;", "+        Set<E> edges = null;", "-            edges = new ArrayList<E>();", "+            edges = new ArrayUnenforcedSet<E>();", "-            List<E> baseEdges = m_base.getAllEdges(sourceVertex, targetVertex);", "+            Set<E> baseEdges = m_base.getAllEdges(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d4fab9bd6a67bf3135f2f384e6b366e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/AStarShortestPath.java", "commitBeforeChange": "c10692c8825bd6a23a80be695fc74f32cb5058c3", "commitAfterChange": "c164d5ff2c90e3264f68d1cabaf47b148cefd48c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public AStarShortestPath(WeightedGraph<V, E> graph)", "signatureAfterChange": "       public AStarShortestPath(Graph<V, E> graph)", "diff": ["-    public AStarShortestPath(WeightedGraph<V, E> graph) {", "+    public AStarShortestPath(Graph<V, E> graph) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dfeeaac648c8365ed96af285e87ef69", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter( Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes, CellFactory cellFactory )", "signatureAfterChange": "     public JGraphModelAdapter( Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes, CellFactory cellFactory )", "diff": ["-        m_jtGraph = jGraphTGraph;", "+        m_jtGraph = new ShieldedGraph( jGraphTGraph );", "-            addJGraphTVertex( i.next(  ) );", "+            handleJGraphTAddedVertex( i.next(  ) );", "-            addJGraphTEdge( (org._3pq.jgrapht.Edge) i.next(  ) );", "+            handleJGraphTAddedEdge( (org._3pq.jgrapht.Edge) i.next(  ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e119e8d9bbed539d72f71cb7a9bfc63", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public V getEdgeSource(E e)", "signatureAfterChange": "     public V getEdgeSource(E e)", "diff": ["-        return m_base.getEdgeSource(e);", "+        return base.getEdgeSource(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e96e88c7bcfac655c2fbf963d08cd2f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public void edgeAdded(GraphEdgeChangeEvent<Object,DefaultEdge> e)", "signatureAfterChange": "         public void edgeAdded(GraphEdgeChangeEvent<Object,DefaultEdge> e)", "diff": ["-            m_lastAddedEdge = e.getEdge();", "+            lastAddedEdge = e.getEdge();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eeb84161ea35c3a9cd5560f7b5a0ca0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "d47a0acaa3f77f225b321ca08de8351005316219", "commitAfterChange": "e62c96c5580981a77f6afa9813afe19b2c717c56", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void add( Object o )", "signatureAfterChange": "         public void add( Object o )", "diff": ["-            m_elementList.addLast( o );", "+            m_elementList.add( o );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f4c22c82f55f80e4b6d04226fc8db05", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean addVertex(Object v)", "signatureAfterChange": "     public boolean addVertex(V v)", "diff": ["-    public boolean addVertex(Object v)", "+    public boolean addVertex(V v)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faf8342ee6c0c0b15722b3d2b5ea9d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void removeVertexSetListener(VertexSetListener<V> l)", "signatureAfterChange": "     public void removeVertexSetListener(VertexSetListener<V> l)", "diff": ["-        m_vertexSetListeners.remove(l);", "+        vertexSetListeners.remove(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fcb7b5bbed74fd9f5e9d34c6d8c0f17", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testIsGraphConnected(  )", "signatureAfterChange": "     public void testIsGraphConnected(  )", "diff": ["-        g.removeVertex( m_v4 );", "+        g.removeVertex( V4 );", "-        g.removeVertex( m_v1 );", "+        g.removeVertex( V1 );", "-        g.addEdge( m_v2, m_v2 );", "+        g.addEdge( V2, V2 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fefc43adbe306763211f3db3771e39a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "         public void add( Object o );", "signatureAfterChange": "         public void add( T o );", "diff": ["-        public void add( Object o );", "+        public void add( T o );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c2f28bfc3ef73b075781576dc1e8bc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/UnionFind.java", "commitBeforeChange": "f0163359559a0f813b9a9058b22762e5033d4ca9", "commitAfterChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public UnionFind(Set<V> elements)", "signatureAfterChange": "     public UnionFind(Set<T> elements)", "diff": ["-    public UnionFind(Set<V> elements)", "+    public UnionFind(Set<T> elements)", "-        parentMap = new HashMap<V, V>();", "-        rankMap = new HashMap<V, Integer>();", "-        for (V element : elements) {", "+        parentMap = new HashMap<T, T>();", "+        rankMap = new HashMap<T, Integer>();", "+        for (T element : elements) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50da8e9fdb3249fd21eed92661b8b675", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/VertexCoversTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testFindGreedyCover()", "signatureAfterChange": "     public void testFindGreedyCover()", "diff": ["-                    GraphHelper.undirectedGraph(g));", "+                    Graphs.undirectedGraph(g));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5112d3dc33a1e04e3d0435e471cd1645", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public ListenableDirectedGraph( Graph base )", "signatureAfterChange": "         public ListenableDirectedGraph( DirectedGraph base )", "diff": ["-        public ListenableDirectedGraph( Graph base ) {", "+        public ListenableDirectedGraph( DirectedGraph base ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "513c3a498b1312edafd7aa9a5eba3477", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "7518fda5e34fbd0d30800f00a7bcae8e402c0396", "commitAfterChange": "b0ffaa521363d5faf1bf5b397f78265b9ab95ae6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic V getVertex(int vertexOrder)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public V getVertex(int vertexNumber)", "diff": ["-\t// be careful: there's no check for NULL_NODE", "-\t@SuppressWarnings(\"unchecked\")", "-\tpublic V getVertex(int vertexOrder)\t{", "-\t\treturn (V) mapOrderToVertex[vertexOrder];", "-\t}", "+     */", "+    @SuppressWarnings(\"unchecked\")", "+    public V getVertex(int vertexNumber) {", "+        return (V) mapOrderToVertex[vertexNumber];", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51780073ba3f06f11ee59c7da36872a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DirectedGraph<V, E> getGraph()", "signatureAfterChange": "     public DirectedGraph<V, E> getGraph()", "diff": ["-        return m_graph;", "+        return graph;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51cfd0b3dd1a6342aa49ae48189dd01b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VisioExporter(VertexNameProvider<V> vertexNameProvider)", "signatureAfterChange": "     public VisioExporter(VertexNameProvider<V> vertexNameProvider)", "diff": ["-        m_vertexNameProvider = vertexNameProvider;", "+        this.vertexNameProvider = vertexNameProvider;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "523f423b86ee17bebed2024402ec6874", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/RankingPathElementList.java", "commitBeforeChange": "32e726693126564b2b12d598445f88f10331d28b", "commitAfterChange": "329f725d890bc8909ea0cc963e9073bf1a9f56aa", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private boolean isAlreadyImprovedBythisEdge(         E edge,         RankingPathElement<V, E> prevPathElement)", "signatureAfterChange": "      private boolean isAlreadyImprovedByThisEdge(         E edge,         RankingPathElement<V, E> prevPathElement)", "diff": ["-    private boolean isAlreadyImprovedBythisEdge(", "+    private boolean isAlreadyImprovedByThisEdge("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ccd2402eea12c848f4f4aa08af1251", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "         public E getEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public E getEdge(V sourceVertex, V targetVertex)", "diff": ["-                    getEdgeContainer(sourceVertex).m_vertexEdges.iterator();", "+                    getEdgeContainer(sourceVertex).vertexEdges.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ef69188a25207efa910ca64f985fe0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "         public void removeOutgoingEdge(EE e)", "signatureAfterChange": "         public void removeOutgoingEdge(EE e)", "diff": ["-            m_outgoing.remove(e);", "+            outgoing.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ffa335efd339df5ef352fe5bad6903", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDirectedGraph()", "signatureAfterChange": "     public void testDirectedGraph()", "diff": ["-        m_result = new StringBuffer();", "+        result = new StringBuffer();", "-            m_result.append(iterator.next());", "+            result.append(iterator.next());", "-                m_result.append(',');", "+                result.append(',');", "-        assertEquals(getExpectedStr2(), m_result.toString());", "+        assertEquals(getExpectedStr2(), result.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ba03919a0abda35c0c179d833aee2d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/NeighborIndexTest.java", "commitBeforeChange": "c87d12a818047704c2c8c107eb5f33acb7c6c713", "commitAfterChange": "266aaff86900229452724c5c419affe03a758648", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testNeighborSet()", "signatureAfterChange": "      public void testNeighborSet()", "diff": ["-        ListenableUndirectedGraph<String, DefaultEdge> g =", "-            new ListenableUndirectedGraph<String, DefaultEdge>(", "-                DefaultEdge.class);", "+        // We use Object instead of DefaultEdge for the edge type", "+        // in order to cover the case in", "+        // https://sourceforge.net/tracker/index.php?func=detail&aid=3486775&group_id=86459&atid=579687", "+        ListenableUndirectedGraph<String, Object> g =", "+            new ListenableUndirectedGraph<String, Object>(", "+                Object.class);", "-        NeighborIndex<String, DefaultEdge> index =", "-            new NeighborIndex<String, DefaultEdge>(g);", "+        NeighborIndex<String, Object> index =", "+            new NeighborIndex<String, Object>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5446e697b5a445b676fc3b5b1b34439e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/alg/VertexCoverAlgorithm.java", "commitBeforeChange": "a61c430f2ac7af9e4b0519b792fa90091fa0462d", "commitAfterChange": "3dfe7bd3c3baf72541946589aad20525c29233c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Collection vertexCover();", "signatureAfterChange": "     public Set findCover(  );", "diff": ["-\t */", "-\tpublic Collection vertexCover();", "+     */", "+    public Set findCover(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548adc38de7fdaf13d8fde51cd95b3a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted()", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted()", "diff": ["-        if (m_heap.size() == 0) {", "+        if (heap.size() == 0) {", "-            if (m_heap.min().getKey() > m_radius) {", "-                m_heap.clear();", "+            if (heap.min().getKey() > radius) {", "+                heap.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54be4d4d6c612af81f56ed7aac075589", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public VF2SubgraphIsomorphismInspector(                     Graph<V,E> graph1,                     Graph<V,E> graph2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "signatureAfterChange": "      public VF2SubgraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2,             Comparator<V> vertexComparator,             Comparator<E> edgeComparator)", "diff": ["-                    Graph<V,E> graph1,", "-                    Graph<V,E> graph2,", "-                    Comparator<V> vertexComparator,", "-                    Comparator<E> edgeComparator)", "-        super(graph1, graph2, vertexComparator, edgeComparator);", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2,", "+            Comparator<V> vertexComparator,", "+            Comparator<E> edgeComparator)", "+        super(graph1,", "+              graph2,", "+              vertexComparator,", "+              edgeComparator,", "+              true);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54ea2f30e80a6d7397ab014cdb0945de", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/LabeledElement.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setLabel( Object label );", "signatureAfterChange": "     public void setLabel( L label );", "diff": ["-    public void setLabel( Object label );", "+    public void setLabel( L label );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556712b76c399beb3dd518f002ceb463", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( V v )", "diff": ["-    public boolean removeVertex( Object v ) {", "+    public boolean removeVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55777078d095d92a90a008307ea1a214", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public FlyweightEdgeEvent(Object eventSource, int type, E e)", "signatureAfterChange": "         public FlyweightEdgeEvent(Object eventSource, int type, EE e)", "diff": ["-        public FlyweightEdgeEvent(Object eventSource, int type, E e)", "+        public FlyweightEdgeEvent(Object eventSource, int type, EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55baf2be7e502a36bfbbc8193b5a49a7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         public abstract List<E> edgesOf(V vertex);", "signatureAfterChange": "         public abstract Set<E> edgesOf(V vertex);", "diff": ["-        public abstract List<E> edgesOf(V vertex);", "+        public abstract Set<E> edgesOf(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55e6be9aa096a661bc97b9209647cb4f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private Neighbors<V,E> getNeighbors(V v)", "signatureAfterChange": "      private Neighbors<V,E> getNeighbors(V v)", "diff": ["-        Neighbors<V,E> neighbors = m_neighborMap.get(v);", "+        Neighbors<V,E> neighbors = neighborMap.get(v);", "-                    Graphs.neighborListOf(m_graph, v));", "-            m_neighborMap.put(v, neighbors);", "+                    Graphs.neighborListOf(graph, v));", "+            neighborMap.put(v, neighbors);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5661c48670e4b90e1f25d1fa2dc2de8c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "commitAfterChange": "4d87df49257bc31c259b3dfd0ef0ddc6431d52d9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testStronglyConnected4()", "signatureAfterChange": "      public void testStronglyConnected4()", "diff": ["-            new StrongConnectivityInspector<Integer, String>(", "+            new KosarajuStrongConnectivityInspector<Integer, String>("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57211c878fa24070326d9a2674fd47bf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public UndirectedEdge createEdge( V source, V target )", "diff": ["-        public Edge createEdge( Object source, Object target ) {", "+        public UndirectedEdge createEdge( V source, V target ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5733fc044572ab547385eff26a4ebd9d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     public Object clone()", "diff": ["-            g.m_graphListeners = new ArrayList<GraphListener<V, E>>();", "-            g.m_vertexSetListeners = new ArrayList<VertexSetListener<V>>();", "+            g.graphListeners = new ArrayList<GraphListener<V, E>>();", "+            g.vertexSetListeners = new ArrayList<VertexSetListener<V>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d0e704e9bab2d4f07437cc9412eaee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/IntegerNameProvider.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getVertexName(V vertex)", "signatureAfterChange": "     public String getVertexName(V vertex)", "diff": ["-        Integer id = m_idMap.get(vertex);", "+        Integer id = idMap.get(vertex);", "-            id = m_nextID++;", "-            m_idMap.put(vertex, id);", "+            id = nextID++;", "+            idMap.put(vertex, id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5830240fb0aca76d81662d337d16cb9f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/NeighborIndexTest.java", "commitBeforeChange": "c87d12a818047704c2c8c107eb5f33acb7c6c713", "commitAfterChange": "266aaff86900229452724c5c419affe03a758648", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testDirectedNeighborSet()", "signatureAfterChange": "      public void testDirectedNeighborSet()", "diff": ["-        ListenableDirectedGraph<String, DefaultEdge> g =", "-            new ListenableDirectedGraph<String, DefaultEdge>(", "-                DefaultEdge.class);", "+        ListenableDirectedGraph<String, Object> g =", "+            new ListenableDirectedGraph<String, Object>(", "+                Object.class);", "-        DirectedNeighborIndex<String, DefaultEdge> index =", "-            new DirectedNeighborIndex<String, DefaultEdge>(g);", "+        DirectedNeighborIndex<String, Object> index =", "+            new DirectedNeighborIndex<String, Object>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c62d37cc7aef94aa31cc8050e3f444", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         public void edgeRemoved( EdgeEvent e )", "signatureAfterChange": "         public void edgeRemoved( GraphEdgeChangeEvent e )", "diff": ["-        public void edgeRemoved( EdgeEvent e ) {", "+        public void edgeRemoved( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59414f4b8894299ed1b6550feb3d52c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertexAgain( V vertex, E edge )", "diff": ["-    protected void encounterVertexAgain( Object vertex, Edge edge ) {}", "+    protected void encounterVertexAgain( V vertex, E edge ) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a49a74d2905311c1afc7a6839ea9fdb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "0cf906f2ead527bf101e7c8df6243d3a2847d583", "commitAfterChange": "7910c0fd6d4728c82ef6f78d6eea6c5ee8b6c177", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       private void positionVertexAt( Object vertex, int x, int y )", "signatureAfterChange": "       private void positionVertexAt( Object vertex, int x, int y )", "diff": ["-        Map              attr   = cell.getAttributes(  );", "+        AttributeMap     attr   = cell.getAttributes(  );", "-        Map cellAttr = new HashMap(  );", "+        AttributeMap cellAttr = new AttributeMap(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b12e7dd41f0e4e3b4f250391fbaf875", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public void setEdgeWeight(E e, double weight)", "signatureAfterChange": "     public void setEdgeWeight(E e, double weight)", "diff": ["-        ((WeightedGraph<V, E>) m_delegate).setEdgeWeight(e, weight);", "+        ((WeightedGraph<V, E>) delegate).setEdgeWeight(e, weight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b851a384162e23651e160a87c6b2a33", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/StoerWagnerMinimumCut.java", "commitBeforeChange": "a8056d6aafd19ddde3f88a7357d27b280fbbac76", "commitAfterChange": "8786155732723df083d81ecffc66379e7847e52a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public double minCutWeight()", "signatureAfterChange": "     public double minCutWeight()", "diff": ["-        return bestcutweight;", "+        return bestCutWeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf832d27e8dd29e20d6d5246c19a815", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "         public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-        public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+        public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "-            List<E> edges = null;", "+            Set<E> edges = null;", "-                edges = new ArrayList<E>();", "+                edges = new ArrayUnenforcedSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d6f441dbe57bd05115d74cdc23701aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KSPExampleTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testTwoReturnedPathsJGraphT()", "signatureAfterChange": "      public void testTwoReturnedPathsJGraphT()", "diff": ["-        assertEquals(nbPaths, ksp.getPathElements(targetVertex).size());", "+        assertEquals(nbPaths, ksp.getPaths(targetVertex).size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ddc0deb9cdb4930a98f0c9b1e44bf22", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/UnionFind.java", "commitBeforeChange": "f0163359559a0f813b9a9058b22762e5033d4ca9", "commitAfterChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void union(V element1, V element2)", "signatureAfterChange": "     public void union(T element1, T element2)", "diff": ["-    public void union(V element1, V element2)", "+    public void union(T element1, T element2)", "-        V parent1 = find(element1);", "-        V parent2 = find(element2);", "+        T parent1 = find(element1);", "+        T parent2 = find(element2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ddffb8eab5a4668052c0e1b5c8f2077", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public abstract int outDegreeOf( Object vertex );", "signatureAfterChange": "         public abstract int outDegreeOf( V vertex );", "diff": ["-        public abstract int outDegreeOf( Object vertex );", "+        public abstract int outDegreeOf( V vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5deb2d54f57ae2b4b82c16b42d70041b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/VertexTraversalEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VertexTraversalEvent(Object eventSource, V vertex)", "signatureAfterChange": "     public VertexTraversalEvent(Object eventSource, V vertex)", "diff": ["-        m_vertex = vertex;", "+        this.vertex = vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e4eee355be684ae6b44596fcbce3d76", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/HamiltonianCycle.java", "commitBeforeChange": "40bf8c7c8736ae974ebda20b591cad2363132552", "commitAfterChange": "091e3a93111253d6f8a873c9ccbd9df0c1d9cfc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static <V, E> List<V> getApproximateOptimal(         SimpleWeightedGraph<V, E> g)", "signatureAfterChange": "     public static <V, E> List<V> getApproximateOptimalForCompleteGraph(         SimpleWeightedGraph<V, E> g)", "diff": ["-    public static <V, E> List<V> getApproximateOptimal(", "+    public static <V, E> List<V> getApproximateOptimalForCompleteGraph("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6c5fb71405235df4baff107136d9b6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "e34eae8f4301dab1040d53c72d503b349095137d", "commitAfterChange": "c041df483c96e939dc14aee1e0434914b456ddac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      <VE extends VertexExtensionBase, EE extends EdgeExtensionBase>     void init(ExtensionFactory<VE> vertexExtensionFactory, ExtensionFactory<EE> edgeExtensionFactory)", "signatureAfterChange": "      <VE extends VertexExtensionBase, EE extends EdgeExtensionBase>     void init(ExtensionFactory<VE> vertexExtensionFactory, ExtensionFactory<EE> edgeExtensionFactory)", "diff": ["-        vXs = new ExtensionManager<V, VE>(vertexExtensionFactory);", "-        eXs = new ExtensionManager<E, EE>(edgeExtensionFactory);", "+        vXs = new Extension<V, VE>(vertexExtensionFactory);", "+        eXs = new Extension<E, EE>(edgeExtensionFactory);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ecb9908a598306a81fe53d50dcaec05", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/IntegerNameProvider.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void clear()", "signatureAfterChange": "     public void clear()", "diff": ["-        m_nextID = 1;", "-        m_idMap.clear();", "+        nextID = 1;", "+        idMap.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f097e646cc76ef49279ff4d7a195621", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public boolean removeVertex(Object v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-    public boolean removeVertex(Object v)", "+    public boolean removeVertex(V v)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2ca8b16f4123731bcf8f247e6675ce", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KSPExampleTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testFourReturnedPathsJGraphT()", "signatureAfterChange": "      public void testFourReturnedPathsJGraphT()", "diff": ["-        assertEquals(3, ksp.getPathElements(targetVertex).size());", "+        assertEquals(3, ksp.getPaths(targetVertex).size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f39c08520099d514c095ad2fdf4f0d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-        return m_queue.removeFirst();", "+        return queue.removeFirst();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f9d5d6f852aad8dcbf3afb21621c069", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int inDegreeOf(V vertex)", "signatureAfterChange": "     public int inDegreeOf(V vertex)", "diff": ["-        for (E e : ((DirectedGraph<V,E>)m_base).incomingEdgesOf(vertex)) {", "+        for (E e : ((DirectedGraph<V,E>)base).incomingEdgesOf(vertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa268579ec7510198e9b64594e4f423", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "         public void removeEdgeFromTouchingVertices( Edge e )", "signatureAfterChange": "         public void removeEdgeFromTouchingVertices( E e )", "diff": ["-        public void removeEdgeFromTouchingVertices( Edge e ) {", "-            Object source = e.getSource(  );", "-            Object target = e.getTarget(  );", "+        public void removeEdgeFromTouchingVertices( E e ) {", "+            V source = e.getSource(  );", "+            V target = e.getTarget(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb41db33992dc4992cbc619a7dabd26", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/SzwarcfiterLauerSimpleCycles.java", "commitBeforeChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "commitAfterChange": "4d87df49257bc31c259b3dfd0ef0ddc6431d52d9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Override public List<List<V>> findSimpleCycles()", "signatureAfterChange": "     @Override public List<List<V>> findSimpleCycles()", "diff": ["-        StrongConnectivityInspector<V, E> inspector =", "-            new StrongConnectivityInspector<V, E>(graph);", "+        KosarajuStrongConnectivityInspector<V, E> inspector =", "+            new KosarajuStrongConnectivityInspector<V, E>(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc13f835795ae1f42b82ed31ae9e921", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected D getSeenData(V vertex)", "signatureAfterChange": "     protected D getSeenData(V vertex)", "diff": ["-        return m_seen.get(vertex);", "+        return seen.get(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6045c9c657fab6fb23c45497d62f6c78", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public int degreeOf( Object vertex )", "signatureAfterChange": "     public int degreeOf( V vertex )", "diff": ["-    public int degreeOf( Object vertex ) {", "+    public int degreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60464b2b39d7e279ddfcfa9e087d4fe3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public double getPathLength()", "signatureAfterChange": "     public double getPathLength()", "diff": ["-        return m_pathLength;", "+        return pathLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60678b10e4847bb33582585fe85708d1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "5aadf3cd155b79f9405f681d7ec0b787b3964151", "commitAfterChange": "5921a1c2d3cb908e116001564211ee62d5fdd263", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "signatureAfterChange": "      @Override     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "diff": ["-        return new VerbatimMaximumFlow<V, E>(maxFlowValue, maxFlow);", "+        return new MaximumFlow<V, E>(maxFlowValue, maxFlow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e2a98bc7983a015cc1f86e21d4a7b9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "de1e06fb92c9c98bdb0d71ff1dcb6ae1781bf7b1", "commitAfterChange": "5fd52feef7dfccbb0b591fde0bda240336fc10d1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Override public Set<E> edgeSet()", "signatureAfterChange": "      @Override public Set<E> edgeSet()", "diff": ["-        Set<E> res = new HashSet<E>();", "+        Set<E> res = new LinkedHashSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6103fe7a94799fc5df471dab688cd5f2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-            List<E> touchingEdgesList = edgesOf(v);", "+            Set<E> touchingEdgesList = edgesOf(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614f25ea50b648a1771ddab1a1d34d51", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean containsEdge(E e)", "signatureAfterChange": "     public boolean containsEdge(Edge e)", "diff": ["-    public boolean containsEdge(E e)", "+    public boolean containsEdge(Edge e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "615e320c5ec0aca0bb0c7b5c3d87edaa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         public void edgeAdded(GraphEdgeChangeEvent<V, E> e)", "signatureAfterChange": "         public void edgeAdded(GraphEdgeChangeEvent<V, E> e)", "diff": ["-            if (m_isInduced) {", "+            if (isInduced) {", "-                    m_base.getEdgeSource(edge),", "-                    m_base.getEdgeTarget(edge),", "+                    base.getEdgeSource(edge),", "+                    base.getEdgeTarget(edge),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6162c6d867f36e16f917fe7b64754eb4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean addVertex( Object v )", "signatureAfterChange": "     public boolean addVertex( V v )", "diff": ["-    public boolean addVertex( Object v ) {", "+    public boolean addVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ab6ff107e3aec625056aa301065f9f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public E addEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E addEdge(V sourceVertex, V targetVertex)", "diff": ["-        return m_delegate.addEdge(sourceVertex, targetVertex);", "+        return delegate.addEdge(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61dcac28ea39878a39b6dc5bf0e5961b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/heap/HeapVertex.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setAdditional(Object add)", "signatureAfterChange": "     public void setAdditional(T add)", "diff": ["-    public void setAdditional(Object add)", "+    public void setAdditional(T add)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ea3000519b8324d2c5be9163d7fb4d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "dd300cb93333841c9d7bccc3779659d567ff1612", "commitAfterChange": "a61c430f2ac7af9e4b0519b792fa90091fa0462d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Subgraph( ListenableGraph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public Subgraph( Graph base, Set vertexSubset, Set edgeSubset )", "diff": ["-    public Subgraph( ListenableGraph base, Set vertexSubset, Set edgeSubset ) {", "+    public Subgraph( Graph base, Set vertexSubset, Set edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629b5908ae5c18ba5f9226b2d19e8376", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean containsVertex(V v)", "signatureAfterChange": "     public boolean containsVertex(V v)", "diff": ["-        return m_delegate.containsVertex(v);", "+        return delegate.containsVertex(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62ca5c9d5df5cce6c1bce1dc7ebf3a01", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     void handleJGraphTRemoveVertex(Object jtVertex)", "signatureAfterChange": "     void handleJGraphTRemoveVertex(Object jtVertex)", "diff": ["-            (DefaultGraphCell) m_vertexToCell.remove(jtVertex);", "-        m_cellToVertex.remove(vertexCell);", "+            (DefaultGraphCell) vertexToCell.remove(jtVertex);", "+        cellToVertex.remove(vertexCell);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62efa40d5283ae9cbfcc0c78ac790edd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "          ShieldedGraph(Graph<V, E> graph)", "signatureAfterChange": "          ShieldedGraph(Graph<V, E> graph)", "diff": ["-            m_graph = graph;", "+            this.graph = graph;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640b6e19d985f4b69cc3509aaf7f45b5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "          UndirectedEdgeContainer(             EdgeListFactory<VV,EE> edgeListFactory,             VV vertex)", "signatureAfterChange": "          UndirectedEdgeContainer(             EdgeSetFactory<VV,EE> edgeListFactory,             VV vertex)", "diff": ["-            EdgeListFactory<VV,EE> edgeListFactory,", "+            EdgeSetFactory<VV,EE> edgeListFactory,", "-            m_vertexEdges = edgeListFactory.createEdgeList(vertex);", "+            m_vertexEdges = edgeListFactory.createEdgeSet(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643aa88c0da821548c808a3157879656", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public CellFactory<V,E> getCellFactory()", "signatureAfterChange": "     public CellFactory<V,E> getCellFactory()", "diff": ["-        return m_cellFactory;", "+        return cellFactory;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6572af83ed8135a4d94a827b89e72010", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public Set<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-        return ((DirectedGraph<V,E>) m_delegate).outgoingEdgesOf(vertex);", "+        return ((DirectedGraph<V,E>) delegate).outgoingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6581cee3557605ba5ec05ca4e187c5e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testGetAllEdges()", "signatureAfterChange": "     public void testGetAllEdges()", "diff": ["-        List<Edge<String>> edges = m_undirected.getAllEdges(m_v3, m_v2);", "+        Set<Edge<String>> edges = m_undirected.getAllEdges(m_v3, m_v2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f5765b3bd7d3f19be76b810eefdf60", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/NaiveLcaFinderTest.java", "commitBeforeChange": "5468011a12459ca35fdd015d291c9a8f0553231c", "commitAfterChange": "c9c8e353be569f4618dadd178341a59e229f8476", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          @Test     public void testLoops()", "signatureAfterChange": "          @Test     public void testLoops()", "diff": ["-\tGraph<String, DefaultEdge> g = new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+\tDirectedGraph<String, DefaultEdge> g = new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6619f39b6c217079c77f29dc0e33472a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected Object provideNextVertex(  )", "signatureAfterChange": "     protected V provideNextVertex(  )", "diff": ["-    protected Object provideNextVertex(  ) {", "+    protected V provideNextVertex(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c299240278a6639261f7aa25a1be3b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/EdgeSetFactory.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Set<E> createEdgeList(V vertex);", "signatureAfterChange": "     public Set<E> createEdgeSet(V vertex);", "diff": ["-    public Set<E> createEdgeList(V vertex);", "+    public Set<E> createEdgeSet(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e498110b0fef3f86a3eac9288dff36", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "         public void removeIncomingEdge( Edge e )", "signatureAfterChange": "         public void removeIncomingEdge( E e )", "diff": ["-        public void removeIncomingEdge( Edge e ) {", "+        public void removeIncomingEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f65961d477c632d0529560b3ff2359", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public AttributeMap getDefaultEdgeAttributes()", "signatureAfterChange": "     public AttributeMap getDefaultEdgeAttributes()", "diff": ["-        return m_defaultEdgeAttributes;", "+        return defaultEdgeAttributes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c2f62ad1c7cd52b3c6a2a6aa31e3c3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Set<E> edgeSet()", "signatureAfterChange": "     public Set<E> edgeSet()", "diff": ["-        if (m_unmodifiableEdgeSet == null) {", "-            m_unmodifiableEdgeSet = Collections.unmodifiableSet(m_edgeSet);", "+        if (unmodifiableEdgeSet == null) {", "+            unmodifiableEdgeSet = Collections.unmodifiableSet(edgeSet);", "-        return m_unmodifiableEdgeSet;", "+        return unmodifiableEdgeSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "682eadc67c0ad32818bd3abd9ca8acf7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected abstract Object provideNextVertex(  );", "signatureAfterChange": "     protected abstract V provideNextVertex(  );", "diff": ["-    protected abstract Object provideNextVertex(  );", "+    protected abstract V provideNextVertex(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "689ef76a0c7f20365d4fc4e6082805ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public FibonacciHeapNode<T> min()", "signatureAfterChange": "     public FibonacciHeapNode<T> min()", "diff": ["-        return m_min;", "+        return minNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c18060307f8703e79a0e3cef931462", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public V getEdgeSource(E e)", "signatureAfterChange": "     public V getEdgeSource(E e)", "diff": ["-        return m_delegate.getEdgeSource(e);", "+        return delegate.getEdgeSource(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68dd17b2f3a49e9b7e30040e88c0d85c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "5aadf3cd155b79f9405f681d7ec0b787b3964151", "commitAfterChange": "5921a1c2d3cb908e116001564211ee62d5fdd263", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "signatureAfterChange": "     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "diff": ["-        return new VerbatimMaximumFlow<V, E>(maxFlowValue, maxFlow);", "+        return new MaximumFlow<V, E>(maxFlowValue, maxFlow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68dd347f9b5b1edc0be533d0d5f05c97", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/DirectedGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex);", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex);", "diff": ["-    public List<E> incomingEdgesOf(V vertex);", "+    public Set<E> incomingEdgesOf(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6924412994b17cdcc852099774558544", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public Edge createEdge( Object source, Object target )", "diff": ["-            return new DefaultDirectedEdge( source, target );", "+            return new DirectedEdge( source, target );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69591f2bfc3551b1a82d95bfc1f0500e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "91e402189940321ae76ce3a4cf3b435ec3f2ecd3", "commitAfterChange": "813ec90d631939110c91842ccc585ff9d81ec46d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void breadthFirstSearch()", "signatureAfterChange": "      private void breadthFirstSearch()", "diff": ["-            nodes.get(i).was = false;", "+            nodes.get(i).visited = false;", "-        nodes.get(currentSource).was = true;", "+        nodes.get(currentSource).visited = true;", "-                    if (!nodes.get(currentArc.head).was) {", "-                        nodes.get(currentArc.head).was = true;", "+                    if (!nodes.get(currentArc.head).visited) {", "+                        nodes.get(currentArc.head).visited = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6979a3e705bf2ed5068681860c247133", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "9925a64dfac7ab322a635b1bf982c0481a3c1421", "commitAfterChange": "b807c0433e272bfef62ba41e0db8e4bd3d8200de", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static List findPathBetween( Graph searchGraph, Object startVertex,         Object endVertex )", "signatureAfterChange": "     public static List findPathBetween( Graph graph, Object startVertex,         Object endVertex )", "diff": ["-    public static List findPathBetween( Graph searchGraph, Object startVertex,", "+    public static List findPathBetween( Graph graph, Object startVertex,", "-            new ClosestFirstIterator( searchGraph, startVertex );", "+            new ClosestFirstIterator( graph, startVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69de537074799b31bb8e26660313cb41", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public E addEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E addEdge(V sourceVertex, V targetVertex)", "diff": ["-        if (!m_base.containsEdge(sourceVertex, targetVertex)) {", "+        if (!base.containsEdge(sourceVertex, targetVertex)) {", "-        Set<E> edges = m_base.getAllEdges(sourceVertex, targetVertex);", "+        Set<E> edges = base.getAllEdges(sourceVertex, targetVertex);", "-                m_edgeSet.add(e);", "+                edgeSet.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69e5f857859708d813c6b2331a9cc5b7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public void vertexAdded( VertexEvent e )", "signatureAfterChange": "         public void vertexAdded( GraphVertexChangeEvent e )", "diff": ["-        public void vertexAdded( VertexEvent e ) {", "+        public void vertexAdded( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f2d48f618e9b9ca6c6707b3d24c905", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testAddEdge()", "signatureAfterChange": "     public void testAddEdge()", "diff": ["-            m_undirected.addEdge(m_v3, m_v4);", "+            undirected.addEdge(v3, v4);", "-            m_undirected.toString());", "+            undirected.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1778cff4b0bc42e3b72ea5e57da9fd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private void internalInsertCell(         GraphCell cell,         AttributeMap attrs,         ConnectionSet cs)", "signatureAfterChange": "     private void internalInsertCell(         GraphCell cell,         AttributeMap attrs,         ConnectionSet cs)", "diff": ["-        m_jCellsBeingAdded.add(cell);", "+        jCellsBeingAdded.add(cell);", "-        m_jCellsBeingAdded.remove(cell);", "+        jCellsBeingAdded.remove(cell);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6afe8c679b84f0625e2edc24197287fd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Object oppositeVertex( Object v )", "signatureAfterChange": "     public V oppositeVertex( V v )", "diff": ["-    public Object oppositeVertex( Object v ) {", "+    public V oppositeVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b2052c48c98524c29dfc18acf1a441d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/util/VertexDegreeComparator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int compare( Object v1, Object v2 )", "signatureAfterChange": "     public int compare( V v1, V v2 )", "diff": ["-    public int compare( Object v1, Object v2 ) {", "+    public int compare( V v1, V v2 ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b2d5e3b8b545d241eaf339f8a171dda", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public UndirectedSpecifics(Graph<V, E> g)", "signatureAfterChange": "         public UndirectedSpecifics(Graph<VV, EE> g)", "diff": ["-        public UndirectedSpecifics(Graph<V, E> g)", "+        public UndirectedSpecifics(Graph<VV, EE> g)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b4e9fa29b6cf48145a04c52d8d260f1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "         public void addEdge(E e)", "signatureAfterChange": "         public void addEdge(EE e)", "diff": ["-        public void addEdge(E e)", "+        public void addEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b6a20cca7168fa1d20b6a7bf8887abe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void readGraph(Graph g)         throws IOException", "signatureAfterChange": "     public void readGraph(Graph g)         throws IOException", "diff": ["-                            GraphHelper.addEdgeWithVertices(", "+                            Graphs.addEdgeWithVertices(", "-                            GraphHelper.addEdgeWithVertices(", "+                            Graphs.addEdgeWithVertices("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bebb066f509cde6b3ac30a5f0be512b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public DirectedWeightedEdge createEdge( V source, V target )", "diff": ["-        public Edge createEdge( Object source, Object target ) {", "+        public DirectedWeightedEdge createEdge( V source, V target ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c48c579e85e706e316907bbddfecba3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/StringNameProvider.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public String getVertexName(Object vertex)", "signatureAfterChange": "     public String getVertexName(V vertex)", "diff": ["-    public String getVertexName(Object vertex)", "+    public String getVertexName(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4af8919b12fc0b8c1505be3ac466cf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/UniformEquivalenceComparator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int equivalenceHashcode(Object arg1, Object context)", "signatureAfterChange": "     public int equivalenceHashcode(E arg1, C context)", "diff": ["-    public int equivalenceHashcode(Object arg1, Object context)", "+    public int equivalenceHashcode(E arg1, C context)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7541c712335254ff8763b02cec4326", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "         public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "         public Set<E> incomingEdgesOf(V vertex)", "diff": ["-        public List<E> incomingEdgesOf(V vertex)", "+        public Set<E> incomingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd5d658b8cd0327ee8101c0dbf19efd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "         public void removeEdge(E e)", "signatureAfterChange": "         public void removeEdge(EE e)", "diff": ["-        public void removeEdge(E e)", "+        public void removeEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd7bcfb1a9924620079da5d0496d60e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "         public void removeEdgeFromTouchingVertices( Edge e )", "signatureAfterChange": "         public void removeEdgeFromTouchingVertices( E e )", "diff": ["-        public void removeEdgeFromTouchingVertices( Edge e ) {", "-            Object source = e.getSource(  );", "-            Object target = e.getTarget(  );", "+        public void removeEdgeFromTouchingVertices( E e ) {", "+            V source = e.getSource(  );", "+            V target = e.getTarget(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e427a51b391af9d705845a77ca9529e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public void vertexTraversed(VertexTraversalEvent<String> e)", "signatureAfterChange": "         public void vertexTraversed(VertexTraversalEvent<String> e)", "diff": ["-            m_numComponentVertices++;", "+            numComponentVertices++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4a4da5094a64e9a63d239709e03f7b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         public void add( Object obj )", "signatureAfterChange": "         public void add( Object obj )", "diff": ["-            ClosestFirstQueueEntry newEntry = (ClosestFirstQueueEntry) obj;", "+            QueueEntry newEntry = (QueueEntry) obj;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e73d4ecb5dc2352532c576b5cc80ab1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Edge getEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E getEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge getEdge( Object sourceVertex, Object targetVertex ) {", "-        Edge edge = super.getEdge( sourceVertex, targetVertex );", "+    public E getEdge( V sourceVertex, V targetVertex ) {", "+        E edge = super.getEdge( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebd361003292a103a73e07414e8adc1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void vertexTraversed(VertexTraversalEvent<V> e)", "signatureAfterChange": "         public void vertexTraversed(VertexTraversalEvent<V> e)", "diff": ["-            m_currentConnectedSet.add(v);", "-            m_vertexToConnectedSet.put(v, m_currentConnectedSet);", "+            currentConnectedSet.add(v);", "+            vertexToConnectedSet.put(v, currentConnectedSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ef78a36fac12e51029090a540419696", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void decrementInDegree(V vertex)", "signatureAfterChange": "     private void decrementInDegree(V vertex)", "diff": ["-        ModifiableInteger inDegree = m_inDegreeMap.get(vertex);", "+        ModifiableInteger inDegree = inDegreeMap.get(vertex);", "-                m_queue.addLast(vertex);", "+                queue.addLast(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa5092ee3760da29c4b3e949f9496ad", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E addEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge addEdge( Object sourceVertex, Object targetVertex ) {", "-        Edge e = super.addEdge( sourceVertex, targetVertex );", "+    public E addEdge( V sourceVertex, V targetVertex ) {", "+        E e = super.addEdge( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb6a5099bbafe9f60376399aedfaabf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSet.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Object getRepresentative()", "signatureAfterChange": "     public E getRepresentative()", "diff": ["-    public Object getRepresentative()", "+    public E getRepresentative()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ff67413bb6351035bcbeea535e0efac", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          ClosestFirstQueueEntry( double key )", "signatureAfterChange": "          QueueEntry( double key )", "diff": ["-        ClosestFirstQueueEntry( double key ) {", "+        QueueEntry( double key ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701047945a30cbd931d7511d084447ee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void createEdgeList(         Graph<V, E> graph,         ClosestFirstIterator<V, E> iter,         V endVertex)", "signatureAfterChange": "      private void createEdgeList(         Graph<V, E> graph,         ClosestFirstIterator<V, E> iter,         V endVertex)", "diff": ["-        m_edgeList = new ArrayList<E>();", "+        edgeList = new ArrayList<E>();", "-            m_edgeList.add(edge);", "+            edgeList.add(edge);", "-        Collections.reverse(m_edgeList);", "+        Collections.reverse(edgeList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "705c9b8e05a68eb32980b7c268c40cca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "         public int inDegreeOf( Object vertex )", "signatureAfterChange": "         public int inDegreeOf( V vertex )", "diff": ["-        public int inDegreeOf( Object vertex ) {", "+        public int inDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715640bc12dedfff8d706e1ed60d9096", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "         public FlyweightEdgeEvent( Object eventSource, Edge edge )", "signatureAfterChange": "         public FlyweightEdgeEvent( Object eventSource, E edge )", "diff": ["-        public FlyweightEdgeEvent( Object eventSource, Edge edge ) {", "+        public FlyweightEdgeEvent( Object eventSource, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717301430f38431c1e2043da5365c1ac", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void fireConnectedComponentFinished(         ConnectedComponentTraversalEvent e)", "signatureAfterChange": "     protected void fireConnectedComponentFinished(         ConnectedComponentTraversalEvent e)", "diff": ["-        int len = m_traversalListeners.size();", "+        int len = traversalListeners.size();", "-            TraversalListener l = m_traversalListeners.get(i);", "+            TraversalListener l = traversalListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71e44f96ee228e545c3f3113e483f52b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java", "commitBeforeChange": "dbb4c94dd90f17f43176b57c7b088fe49292bb14", "commitAfterChange": "c82eaa921828dd7925f5a02b09b36c91dcd6d525", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r \t@SuppressWarnings(\"unchecked\")\r \tprivate void initState(Operation o)", "signatureAfterChange": "\r \r \t@SuppressWarnings(\"unchecked\")\r \tprivate void initState(Operation o)", "diff": ["-\t\t\tB[i] = new ArrayList<Integer>(nVertices);\r", "+\t\t\t//B[i] = new ArrayList<Integer>(nVertices);\r", "+\t\t\tB[i] = new ArrayList<Integer>();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71fe25fd8f3fa268ab90ee12ef2c46b3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public FlyweightVertexEvent( Object eventSource, int type, Object vertex )", "signatureAfterChange": "         public FlyweightVertexEvent( Object eventSource, int type, V vertex )", "diff": ["-        public FlyweightVertexEvent( Object eventSource, int type, Object vertex ) {", "+        public FlyweightVertexEvent( Object eventSource, int type, V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72764e324ee9f8d8b2bea6efc4dd6e11", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public List<E> edgesOf(V vertex)", "signatureAfterChange": "     public Set<E> edgesOf(V vertex)", "diff": ["-    public List<E> edgesOf(V vertex)", "+    public Set<E> edgesOf(V vertex)", "-        ArrayList<E> edges = new ArrayList<E>();", "-        List<E> baseEdges = m_base.edgesOf(vertex);", "+        Set<E> edges = new ArrayUnenforcedSet<E>();", "+        Set<E> baseEdges = m_base.edgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e4b79551c7a58be3894adac4e6d046", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public void connectedComponentStarted(             ConnectedComponentTraversalEvent e)", "signatureAfterChange": "         public void connectedComponentStarted(             ConnectedComponentTraversalEvent e)", "diff": ["-            m_componentNumber++;", "+            componentNumber++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f789924a23183a4d622bb4b78c47ca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "         public int edgeCount()", "signatureAfterChange": "         public int edgeCount()", "diff": ["-            return m_vertexEdges.size();", "+            return vertexEdges.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73042cad9d7af00008080a957b80defe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected Object putSeenData( Object vertex, Object data )", "signatureAfterChange": "     protected D putSeenData( V vertex, D data )", "diff": ["-    protected Object putSeenData( Object vertex, Object data ) {", "+    protected D putSeenData( V vertex, D data ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734f4d45b5a8c4e159faab8cbdcb7c75", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public int outDegreeOf(V vertex)", "signatureAfterChange": "     public int outDegreeOf(V vertex)", "diff": ["-        return m_specifics.outDegreeOf(vertex);", "+        return specifics.outDegreeOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735daeea496bb6cbdb5ae985e4493b48", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "de1e06fb92c9c98bdb0d71ff1dcb6ae1781bf7b1", "commitAfterChange": "5fd52feef7dfccbb0b591fde0bda240336fc10d1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "            @Override public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "            @Override public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-        Set<E> res = new HashSet<E>();", "+        Set<E> res = new LinkedHashSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7457618dc1d96ac61d8df5d0a4743051", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["-                m_pathLength = iter.getShortestPathLength(endVertex);", "+                pathLength = iter.getShortestPathLength(endVertex);", "-        m_edgeList = null;", "-        m_pathLength = Double.POSITIVE_INFINITY;", "+        edgeList = null;", "+        pathLength = Double.POSITIVE_INFINITY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "748add2f0e05794c1e35eeed1ac40da6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         int getDiscoveyTime(  )", "signatureAfterChange": "         int getDiscoveyTime(  )", "diff": ["-            return discovered;", "+            return m_discovered;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "749d0593555afc043306651c0986c823", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/UndirectedWeightedEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public UndirectedWeightedEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public UndirectedWeightedEdge( V sourceVertex, V targetVertex )", "diff": ["-    public UndirectedWeightedEdge( Object sourceVertex, Object targetVertex ) {", "+    public UndirectedWeightedEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c053811239aa6011693000e6d770fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/PartiteRandomGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "signatureAfterChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "diff": ["-        Object [][] vertices = new Object [m_numVertices.length][];", "+        Object [][] vertices = new Object [numVertices.length][];", "-        for (int i = 0; i < m_numVertices.length; i++) {", "+        for (int i = 0; i < numVertices.length; i++) {", "-                    m_numVertices[i]);", "+                    numVertices[i]);", "-                    m_numEdges);", "+                    numEdges);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d1530579cd1fefffb8c542431b9385", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "          public void addVertex(V v)", "signatureAfterChange": "          public void addVertex(V v)", "diff": ["-            m_vertexMapDirected.put(v, null);", "+            vertexMapDirected.put(v, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e7b573ec792fa10f18f7c47d3b9753", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void init()", "signatureAfterChange": "      private void init()", "diff": ["-        m_connectedSets = null;", "-        m_vertexToConnectedSet = new HashMap<V, Set<V>>();", "+        connectedSets = null;", "+        vertexToConnectedSet = new HashMap<V, Set<V>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75297f46ac14a2f8e3fcc1536b3f37fc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-        FibonacciHeapNode<QueueEntry<V, E>> node = m_heap.removeMin();", "-        node.getData().m_frozen = true;", "+        FibonacciHeapNode<QueueEntry<V, E>> node = heap.removeMin();", "+        node.getData().frozen = true;", "-        return node.getData().m_vertex;", "+        return node.getData().vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757e1df8da33c84b3164a2f6ea0c84e1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setCrossComponentTraversal(boolean crossComponentTraversal)", "signatureAfterChange": "     public void setCrossComponentTraversal(boolean crossComponentTraversal)", "diff": ["-        m_crossComponentTraversal = crossComponentTraversal;", "+        this.crossComponentTraversal = crossComponentTraversal;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75905dc039e6ba59db37cd5f688c7df0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "5cd7be5f3549baac8c43a42359f6c3e5d99bc72b", "commitAfterChange": "cc8ceb07c7632eeaab7327652bd6a8c8944a714f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "       private void exportVertex( PrintStream out, Object vertex )", "signatureAfterChange": "       private void exportVertex( PrintStream out, Object vertex )", "diff": ["-        String name = m_vertexNamingPolicy.getVertexName( vertex );", "+        String name = m_vertexNameProvider.getVertexName( vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "763c00b5e137230b921bf4a5f2d4221c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void exportLaplacianMatrix(Writer output, UndirectedGraph g)", "signatureAfterChange": "     public void exportLaplacianMatrix(Writer output, UndirectedGraph g)", "diff": ["-            // TODO modify GraphHelper to return neighbor sets", "-            List neighbors = GraphHelper.neighborListOf(g, from);", "+            // TODO modify Graphs to return neighbor sets", "+            List neighbors = Graphs.neighborListOf(g, from);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76dafe615e74072d9b064de3bc02c173", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public boolean removeEdge(E e)", "signatureAfterChange": "     public boolean removeEdge(E e)", "diff": ["-            m_specifics.removeEdgeFromTouchingVertices(e);", "-            m_edgeMap.remove(e);", "+            specifics.removeEdgeFromTouchingVertices(e);", "+            edgeMap.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77328ba2a718ef01de82eab2c95627f5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void addTraversalListener(TraversalListener<V, E> l)", "signatureAfterChange": "     public void addTraversalListener(TraversalListener<V, E> l)", "diff": ["-        if (!m_traversalListeners.contains(l)) {", "-            m_traversalListeners.add(l);", "+        if (!traversalListeners.contains(l)) {", "+            traversalListeners.add(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7733fcbb9d1466f5e6bb38dcd8be9304", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     protected void fireEdgeRemoved(E edge)", "signatureAfterChange": "     protected void fireEdgeRemoved(E edge)", "diff": ["-        for (int i = 0; i < m_graphListeners.size(); i++) {", "-            GraphListener<V,E> l = m_graphListeners.get(i);", "+        for (int i = 0; i < graphListeners.size(); i++) {", "+            GraphListener<V,E> l = graphListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774f1063b2693b986b0afaa6eceb91ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected Object newSeenData( Object vertex, Edge edge )", "signatureAfterChange": "     private QueueEntry createSeenData( Object vertex, Edge edge )", "diff": ["-    protected Object newSeenData( Object vertex, Edge edge ) {", "-        double shortestPathLength;", "-        if( edge == null ) {", "-            shortestPathLength = 0;", "-        }", "-        else {", "-            shortestPathLength = calculatePathLength( vertex, edge );", "-        }", "-", "-        QueueEntry entry = new QueueEntry( shortestPathLength );", "-        entry.m_vertex               = vertex;", "-        entry.m_spanningTreeEdge     = edge;", "-", "-        return entry;", "+    private QueueEntry createSeenData( Object vertex, Edge edge ) {", "+        double shortestPathLength;", "+        if( edge == null ) {", "+            shortestPathLength = 0;", "+        }", "+        else {", "+            shortestPathLength = calculatePathLength( vertex, edge );", "+        QueueEntry entry = new QueueEntry( shortestPathLength );", "+        entry.m_vertex               = vertex;", "+        entry.m_spanningTreeEdge     = edge;", "+        return entry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f8afabf711877d07e5388a82a77203", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void addUnseenChildrenOf(V vertex)", "signatureAfterChange": "      private void addUnseenChildrenOf(V vertex)", "diff": ["-        for (E edge : m_specifics.edgesOf(vertex)) {", "+        for (E edge : specifics.edgesOf(vertex)) {", "-            V oppositeV = Graphs.getOppositeVertex(m_graph, edge, vertex);", "+            V oppositeV = Graphs.getOppositeVertex(graph, edge, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7834c527d61ba575d3f5ef68eb9d2b18", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "         public List<EE> getUnmodifiableIncomingEdges()", "signatureAfterChange": "         public Set<EE> getUnmodifiableIncomingEdges()", "diff": ["-        public List<EE> getUnmodifiableIncomingEdges()", "+        public Set<EE> getUnmodifiableIncomingEdges()", "-                    Collections.unmodifiableList(m_incoming);", "+                    Collections.unmodifiableSet(m_incoming);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78391d75ed405b71c3c43e5380dfe5f2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void fireEdgeTraversed(EdgeTraversalEvent<V, E> e)", "signatureAfterChange": "     protected void fireEdgeTraversed(EdgeTraversalEvent<V, E> e)", "diff": ["-        int len = m_traversalListeners.size();", "+        int len = traversalListeners.size();", "-            TraversalListener<V, E> l = m_traversalListeners.get(i);", "+            TraversalListener<V, E> l = traversalListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78549a0653e1be25db0518dfee5fa129", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "          private void handleInsertedVertices(List<Object> jVertices)", "signatureAfterChange": "          private void handleInsertedVertices(List<Object> jVertices)", "diff": ["-                if (!m_jCellsBeingAdded.remove(jVertex)) {", "+                if (!jCellsBeingAdded.remove(jVertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78affb1dd97115b4ef61a78d304b8b18", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-        return m_specifics.getAllEdges(sourceVertex, targetVertex);", "+        return specifics.getAllEdges(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79576e59932dbb163542179b95aeb990", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "         public ListenableDirectedWeightedGraph( Graph base )", "signatureAfterChange": "         public ListenableDirectedWeightedGraph( DirectedWeightedGraph base )", "diff": ["-        public ListenableDirectedWeightedGraph( Graph base ) {", "+        public ListenableDirectedWeightedGraph( DirectedWeightedGraph base ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c13b417f0746538d5c1ccff3a942bd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void fireEdgeRemoved( Edge edge )", "signatureAfterChange": "     protected void fireEdgeRemoved( Edge edge )", "diff": ["-        EdgeEvent e   = createEdgeEvent( EdgeEvent.EDGE_REMOVED, edge );", "-        int       len = m_graphListeners.size(  );", "+        GraphEdgeChangeEvent e =", "+            createGraphEdgeChangeEvent( GraphEdgeChangeEvent.EDGE_REMOVED, edge );", "+        int                  len = m_graphListeners.size(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a22089409d8a8c50788810783f3a273", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public DirectedSpecifics(DirectedGraph<VV, EE> g)", "signatureAfterChange": "         public DirectedSpecifics(DirectedGraph<VV, EE> g)", "diff": ["-            m_graph = g;", "+            graph = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a881cc03da3be25ef7cbd39f0ed7b5b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public DefaultGraphCell createVertexCell(Object jGraphTVertex)", "signatureAfterChange": "         public DefaultGraphCell createVertexCell(VV jGraphTVertex)", "diff": ["-        public DefaultGraphCell createVertexCell(Object jGraphTVertex)", "+        public DefaultGraphCell createVertexCell(VV jGraphTVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa19317f9d634d12e85d3d36b393fc8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public int inDegreeOf( Object vertex )", "signatureAfterChange": "     public int inDegreeOf( V vertex )", "diff": ["-    public int inDegreeOf( Object vertex ) {", "+    public int inDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aad24209290a05b0ec4bcb00c55091c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "7518fda5e34fbd0d30800f00a7bcae8e402c0396", "commitAfterChange": "b0ffaa521363d5faf1bf5b397f78265b9ab95ae6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic int[] getOutEdges(int vertexOrder)", "signatureAfterChange": "     public int[] getOutEdges(int vertexNumber)", "diff": ["-\t", "-\tpublic int[] getOutEdges(int vertexOrder)\t{", "-\t\tif (outgoingEdges[vertexOrder] != null)", "-\t\t\treturn outgoingEdges[vertexOrder];", "-\t\t", "-\t\tV v            = getVertex(vertexOrder);", "-\t\tSet<E> edgeSet = null;", "-\t\t", "-\t\tif (graph instanceof DirectedGraph<?,?>)", "-\t\t\tedgeSet = ((DirectedGraph<V,E>) graph).outgoingEdgesOf(v);", "-\t\telse", "-\t\t\tedgeSet = graph.edgesOf(v);", "-\t\t", "-\t\tint[] vertexArray = new int[edgeSet.size()];", "-\t\tint i = 0;", "-\t\t", "-\t\tfor(E edge : edgeSet)\t{", "-\t\t\tV source = graph.getEdgeSource(edge),", "-\t\t\t  target = graph.getEdgeTarget(edge);", "-\t\t\tvertexArray[i++] = mapVertexToOrder.get(", "-\t\t\t\t\tsource == v ? target : source);", "-\t\t}", "-\t\t", "-\t\treturn outgoingEdges[vertexOrder] = vertexArray;", "-\t}", "+     */", "+    public int[] getOutEdges(int vertexNumber) {", "+        if (outgoingEdges[vertexNumber] != null)", "+            return outgoingEdges[vertexNumber];", "+", "+        V v = getVertex(vertexNumber);", "+        Set<E> edgeSet = null;", "+", "+        if (graph instanceof DirectedGraph<?, ?>)", "+            edgeSet = ((DirectedGraph<V, E>) graph).outgoingEdgesOf(v);", "+        else", "+            edgeSet = graph.edgesOf(v);", "+", "+        int[] vertexArray = new int[edgeSet.size()];", "+        int i = 0;", "+", "+        for (E edge : edgeSet) {", "+            V source = graph.getEdgeSource(edge),", "+              target = graph.getEdgeTarget(edge);", "+            vertexArray[i++] =", "+                mapVertexToOrder.get(source == v ? target : source);", "+        }", "+", "+        return outgoingEdges[vertexNumber] = vertexArray;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad58784f590e54c58a8ec0f92171eef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "          E addEdge(V jtSource, V jtTarget)", "signatureAfterChange": "          E addEdge(V jtSource, V jtTarget)", "diff": ["-            E jtEdge = m_graph.getEdgeFactory().createEdge(jtSource, jtTarget);", "-            m_jtElementsBeingAdded.add(jtEdge);", "+            E jtEdge = graph.getEdgeFactory().createEdge(jtSource, jtTarget);", "+            jtElementsBeingAdded.add(jtEdge);", "-            boolean added = m_graph.addEdge(jtSource, jtTarget, jtEdge);", "-            m_jtElementsBeingAdded.remove(jtEdge);", "+            boolean added = graph.addEdge(jtSource, jtTarget, jtEdge);", "+            jtElementsBeingAdded.remove(jtEdge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7afe6d109a0f09db8677d896b93a6ee6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "2a0f47453a8e3a407b3be57607cf5f0c80a6f57f", "commitAfterChange": "2c075e11ca1ed09f6a93ffd1f5e415652cb448d7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected V provideNextVertex(  )", "signatureAfterChange": "     protected V provideNextVertex(  )", "diff": ["-        return m_queue.remove(  );", "+        return m_queue.removeFirst(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7afe87fafc5753e24d09b4cd93e03a50", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void fireVertexAdded( Object vertex )", "signatureAfterChange": "     protected void fireVertexAdded( Object vertex )", "diff": ["-        VertexEvent e   = createVertexEvent( VertexEvent.VERTEX_ADDED, vertex );", "-        int         len;", "+        GraphVertexChangeEvent e =", "+            createGraphVertexChangeEvent( GraphVertexChangeEvent.VERTEX_ADDED,", "+                vertex );", "+        int                    len;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b43ec0e8ae6074be5f6d9016b051305", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "         public SubgraphDirected( Graph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "         public SubgraphDirected( DirectedGraph base, Set vertexSubset,             Set edgeSubset )", "diff": ["-        public SubgraphDirected( Graph base, Set vertexSubset, Set edgeSubset ) {", "+        public SubgraphDirected( DirectedGraph base, Set vertexSubset,", "+            Set edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b8e6e634e4df7c5c797d48091b0bbef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/LinearGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        for (int i = 0; i < m_size; ++i) {", "+        for (int i = 0; i < size; ++i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfdd7f42ce3c347168967e560bb7562", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected EdgeExtension edgeExtended0(E e)", "signatureAfterChange": "      protected EdgeExtension extendedEdge(E e)", "diff": ["-    protected EdgeExtension edgeExtended0(E e) {", "+    protected EdgeExtension extendedEdge(E e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0450507ab60f65bb879f0f1543b685", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "4415679d62e7392826c454850d429845a11a41b2", "commitAfterChange": "7e355aab4948f18f6773fd808a3f18847ffa9f43", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public double getEdgeWeight(E e)", "signatureAfterChange": "      public double getEdgeWeight(E e)", "diff": ["-        // TODO what should I do then?", "-        throw new UnsupportedOperationException(\"not implemented yet\");", "+        throw new IllegalArgumentException(\"no such edge in the union\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c27049a28b2468c52b5a736c93452cf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "8fe299c38648acac55e40bd47498a08269e01f74", "commitAfterChange": "3cb0ce95d7f27940cd613dc6e124a83b3e4976e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testVertexOrderDeterminism()", "signatureAfterChange": "     public void testVertexOrderDeterminism()", "diff": ["-            createMultiTriangleWithMultiLoop();", "+            createMultiTriangle();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c4079e6d8039fd9ee37ecc5d14a3f71", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     void handleJGraphRemovedVertex(GraphCell jVertex)", "signatureAfterChange": "     void handleJGraphRemovedVertex(GraphCell jVertex)", "diff": ["-            List<E> jtIncidentEdges = m_jtGraph.edgesOf(jtVertex);", "+            Set<E> jtIncidentEdges = m_jtGraph.edgesOf(jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c480b950cfa4a6d27e6f00bce825660", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "         public void addOutgoingEdge( Edge e )", "signatureAfterChange": "         public void addOutgoingEdge( E e )", "diff": ["-        public void addOutgoingEdge( Edge e ) {", "+        public void addOutgoingEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d0f12b589a0375611664280e3e4370e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public List<E> createEdgeList(V vertex)", "signatureAfterChange": "         public Set<E> createEdgeList(V vertex)", "diff": ["-        public List<E> createEdgeList(V vertex)", "+        public Set<E> createEdgeList(V vertex)", "-            return new LinkedList<E>();", "+            return new LinkedHashSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d307d2ac679e1044240e38f26fc82da", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public EdgeFactory<V,E> getEdgeFactory()", "signatureAfterChange": "     public EdgeFactory<V,E> getEdgeFactory()", "diff": ["-        return m_edgeFactory;", "+        return edgeFactory;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dffc52c08adfe91be68d08a5b61fc0c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public DefaultEdge getEdgeCell(E jGraphTEdge)", "signatureAfterChange": "     public DefaultEdge getEdgeCell(E jGraphTEdge)", "diff": ["-        return (DefaultEdge) m_edgeToCell.get(jGraphTEdge);", "+        return (DefaultEdge) edgeToCell.get(jGraphTEdge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e0533bc27c2d6772fd1508c299d0475", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/RankingPathElementList.java", "commitBeforeChange": "32e726693126564b2b12d598445f88f10331d28b", "commitAfterChange": "329f725d890bc8909ea0cc963e9073bf1a9f56aa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public boolean addPathElements(         RankingPathElementList<V, E> elementList,         E edge)", "signatureAfterChange": "     public boolean addPathElements(         RankingPathElementList<V, E> elementList,         E edge)", "diff": ["-            if (isAlreadyImprovedBythisEdge(edge, prevPathElement)", "+            if (isAlreadyImprovedByThisEdge(edge, prevPathElement)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3abd75c68882cc33bf8ef4d75a3a5f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testGetAllEdges()", "signatureAfterChange": "     public void testGetAllEdges()", "diff": ["-        Set<DefaultEdge> loops = g.getAllEdges(m_v1, m_v1);", "+        Set<DefaultEdge> loops = g.getAllEdges(v1, v1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3b76ba40592a325a48d5ed47254f7f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Edge removeEdge(Object sourceVertex, Object targetVertex)", "signatureAfterChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "diff": ["-    public Edge removeEdge(Object sourceVertex, Object targetVertex)", "+    public E removeEdge(V sourceVertex, V targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e63da5ce842392e88e8f9a226a17806", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testVertexOrderDeterminism()", "signatureAfterChange": "     public void testVertexOrderDeterminism()", "diff": ["-        assertEquals(m_v1, iter.next());", "-        assertEquals(m_v2, iter.next());", "-        assertEquals(m_v3, iter.next());", "+        assertEquals(v1, iter.next());", "+        assertEquals(v2, iter.next());", "+        assertEquals(v3, iter.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e7a6ab1521e93ddf07d28571df0c5de", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "         public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "         public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-        public List<E> outgoingEdgesOf(V vertex)", "+        public Set<E> outgoingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e84cdac7889beeb9c75bd3a11ae9457", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "diff": ["-            m_specifics.removeEdgeFromTouchingVertices(e);", "-            m_edgeMap.remove(e);", "+            specifics.removeEdgeFromTouchingVertices(e);", "+            edgeMap.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea6cee25d299dd425ad2f3831eb4007", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private Neighbors getSuccessors(V v)", "signatureAfterChange": "      private Neighbors getSuccessors(V v)", "diff": ["-                    GraphHelper.successorListOf(m_graph, v));", "+                    Graphs.successorListOf(m_graph, v));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ec65fc966ac8bef7915c1233286ae9c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     protected void fireVertexRemoved( Object vertex )", "signatureAfterChange": "     protected void fireVertexRemoved( Object vertex )", "diff": ["-        VertexEvent e = createVertexEvent( VertexEvent.VERTEX_REMOVED, vertex );", "-        int         len;", "+        GraphVertexChangeEvent e =", "+            createGraphVertexChangeEvent( GraphVertexChangeEvent.VERTEX_REMOVED,", "+                vertex );", "+        int                    len;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd62fcbc06707ca2af519c6edc1998b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "215e752a693cedd4e948342c99e93722b6fbe26a", "commitAfterChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public JGraphModelAdapter( Graph jGraphTGraph, Map defaultVertexAttributes,         Map defaultEdgeAttributes )", "signatureAfterChange": "     public JGraphModelAdapter( Graph jGraphTGraph,              AttributeMap defaultVertexAttributes,              AttributeMap defaultEdgeAttributes )", "diff": ["-    public JGraphModelAdapter( Graph jGraphTGraph, Map defaultVertexAttributes,", "-        Map defaultEdgeAttributes ) {", "-        this( jGraphTGraph, defaultVertexAttributes, defaultEdgeAttributes, null );", "+    public JGraphModelAdapter( Graph jGraphTGraph, ", "+            AttributeMap defaultVertexAttributes, ", "+            AttributeMap defaultEdgeAttributes ) {", "+        this( jGraphTGraph, defaultVertexAttributes, defaultEdgeAttributes, ", "+            new DefaultCellFactory(  ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8022a1b494c7709875191d130f3f6cd5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/util/VertexDegreeComparator.java", "commitBeforeChange": "e7ee93188d586bd5ab1949179c701faba108c0b1", "commitAfterChange": "bebf827ee740e58a33cc631cc3a312208e3261b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VertexDegreeComparator( Graph g )", "signatureAfterChange": "     public VertexDegreeComparator( UndirectedGraph g )", "diff": ["-    public VertexDegreeComparator( Graph g ) {", "+    public VertexDegreeComparator( UndirectedGraph g ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8031795427380503be412e6ed8a22dae", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public void vertexVisited( Object vertex )", "signatureAfterChange": "         public void vertexTraversed( VertexTraversalEvent e )", "diff": ["-        public void vertexVisited( Object vertex ) {", "+        public void vertexTraversed( VertexTraversalEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "805b9b816198512254421cbf13c3254b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         protected void setVertex(VV vertex)", "signatureAfterChange": "         protected void setVertex(VV vertex)", "diff": ["-            m_vertex = vertex;", "+            this.vertex = vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8069f67316a57ca669c4bb3dd9b5a54d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public Set<V> vertexSet()", "signatureAfterChange": "     public Set<V> vertexSet()", "diff": ["-        if (m_unmodifiableVertexSet == null) {", "-            m_unmodifiableVertexSet =", "-                Collections.unmodifiableSet(m_specifics.getVertexSet());", "+        if (unmodifiableVertexSet == null) {", "+            unmodifiableVertexSet =", "+                Collections.unmodifiableSet(specifics.getVertexSet());", "-        return m_unmodifiableVertexSet;", "+        return unmodifiableVertexSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807f97dc9991e99a1a8be41bfef80230", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean addVertex(V v)", "signatureAfterChange": "     public boolean addVertex(V v)", "diff": ["-        if (!m_base.containsVertex(v)) {", "+        if (!base.containsVertex(v)) {", "-            m_vertexSet.add(v);", "+            vertexSet.add(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81bb531e277a9f2325b8cabfb52ec80a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "commitAfterChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object clone(  )", "signatureAfterChange": "     public Object clone(  )", "diff": ["-            newGraph.m_vertexMap                 = new HashMap(  );", "-            newGraph.m_edgeSet                   = new HashSet(  );", "+            newGraph.m_vertexMap                 = new LinkedHashMap(  );", "+            newGraph.m_edgeSet                   = new LinkedHashSet(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824544eeb3872684ce649e641c0025f6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertex(V vertex, E edge)", "diff": ["-        m_queue.add(vertex);", "+        queue.add(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824811e1241278213018c9fefedeb0a3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     protected void cascadingCut(FibonacciHeapNode<T> y)", "signatureAfterChange": "     protected void cascadingCut(FibonacciHeapNode<T> y)", "diff": ["-        FibonacciHeapNode<T> z = y.m_parent;", "+        FibonacciHeapNode<T> z = y.parent;", "-            if (!y.m_mark) {", "-                y.m_mark = true;", "+            if (!y.mark) {", "+                y.mark = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826573842e65020c5c29c64e4031add1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         protected void setType(int type)", "signatureAfterChange": "         protected void setType(int type)", "diff": ["-            m_type = type;", "+            this.type = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82899143936530032556b02bce72cb84", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/PrefetchIterator.java", "commitBeforeChange": "bea7d782b8443b1009ab243a16b637486e95e018", "commitAfterChange": "8a6b97b779f92b3caf3822956f0ec38829e5351f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Object next()", "signatureAfterChange": "      public Object next()", "diff": ["-        return this.hasNext();", "+        return this.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c739feac9c791d4c1ba3f900adc04e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "         public int outDegreeOf( Object vertex )", "signatureAfterChange": "         public int outDegreeOf( V vertex )", "diff": ["-        public int outDegreeOf( Object vertex ) {", "+        public int outDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82cf17dd6c74f30e69c09c36de1369d6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-            List<E> touchingEdgesList = edgesOf(v);", "+            Set<E> touchingEdgesList = edgesOf(v);", "-            // cannot iterate over list - will cause", "-            // ConcurrentModificationException", "-            // Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "-            // touchingEdgesList.toArray( touchingEdges );", "-", "+            // copy set to avoid ConcurrentModificationException"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82dd18286c088f768f025a2f0d3f81af", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-    public List<E> outgoingEdgesOf(V vertex)", "+    public Set<E> outgoingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82e8d4656892e63ffe3dd51cbe4a4cb1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/GraphHelper.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public static <V, E extends DirEdge<V>> List<V> successorListOf(DirectedGraph<V, E> g,         V vertex)", "signatureAfterChange": "     public static <V, E extends DirEdge<V>> List<V> successorListOf(DirectedGraph<V, E> g,         V vertex)", "diff": ["-        List<? extends E> edges = g.outgoingEdgesOf(vertex);", "+        Set<? extends E> edges = g.outgoingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83217a9aa3d9b182d00f0f76f3007db7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void fireVertexAdded(V vertex)", "signatureAfterChange": "     protected void fireVertexAdded(V vertex)", "diff": ["-        for (int i = 0; i < m_vertexSetListeners.size(); i++) {", "-            VertexSetListener<V> l = m_vertexSetListeners.get(i);", "+        for (int i = 0; i < vertexSetListeners.size(); i++) {", "+            VertexSetListener<V> l = vertexSetListeners.get(i);", "-        for (int i = 0; i < m_graphListeners.size(); i++) {", "-            GraphListener<V, E> l = m_graphListeners.get(i);", "+        for (int i = 0; i < graphListeners.size(); i++) {", "+            GraphListener<V, E> l = graphListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837d063c628e58ec9e4494060071dd95", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "de1e06fb92c9c98bdb0d71ff1dcb6ae1781bf7b1", "commitAfterChange": "5fd52feef7dfccbb0b591fde0bda240336fc10d1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      @Override public Set<E> edgesOf(V vertex)", "signatureAfterChange": "      @Override public Set<E> edgesOf(V vertex)", "diff": ["-        Set<E> res = new HashSet<E>();", "+        Set<E> res = new LinkedHashSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8479b936bb928684c2d21e639954f430", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/GraphHelper.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static <V, E extends DirEdge<V>> List<V> predecessorListOf(DirectedGraph<V, E> g,         V vertex)", "signatureAfterChange": "     public static <V, E extends DirEdge<V>> List<V> predecessorListOf(DirectedGraph<V, E> g,         V vertex)", "diff": ["-        List<? extends E> edges = g.incomingEdgesOf(vertex);", "+        Set<? extends E> edges = g.incomingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8481b524ad2cc39d7d9102a784acbbe1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public Object remove(  )", "signatureAfterChange": "     protected Object provideNextVertex(  )", "diff": ["+    protected Object provideNextVertex(  ) {", "+        QueueEntry entry = (QueueEntry) m_heap.removeMin(  );", "+        entry.m_frozen = true;", "+        return entry.m_vertex;", "-         */", "-        public Object remove(  ) {", "-            QueueEntry entry = (QueueEntry) m_heap.removeMin(  );", "-            entry.m_frozen = true;", "-", "-            return entry.m_vertex;", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84fdb9d1024a083a93958479279e3a8a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void addVertexSetListener(VertexSetListener<V> l)", "signatureAfterChange": "     public void addVertexSetListener(VertexSetListener<V> l)", "diff": ["-        addToListenerList(m_vertexSetListeners, l);", "+        addToListenerList(vertexSetListeners, l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85189ad0523d95bf3eceb4b2bb6b3da5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private boolean isDangling(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     private boolean isDangling(org.jgraph.graph.Edge jEdge)", "diff": ["-            !m_cellToVertex.containsKey(jSource)", "-            || !m_cellToVertex.containsKey(jTarget);", "+            !cellToVertex.containsKey(jSource)", "+            || !cellToVertex.containsKey(jTarget);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85828c6aba781278e8679131e4a1c0b5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void vertexAdded( VertexEvent e )", "signatureAfterChange": "     public void vertexAdded( GraphVertexChangeEvent e )", "diff": ["-    public void vertexAdded( VertexEvent e ) {", "+    public void vertexAdded( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85abb6befe9b4ab7f8da25e9d174fb1e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void encounterVertex( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertex( V vertex, E edge )", "diff": ["-    protected void encounterVertex( Object vertex, Edge edge ) {", "+    protected void encounterVertex( V vertex, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86900d5ad484589668c97137df7a8d78", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted()", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted()", "diff": ["-        return m_queue.isEmpty();", "+        return queue.isEmpty();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87dd533096efbaddbaa09458c8392497", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected V provideNextVertex()", "signatureAfterChange": "     protected V provideNextVertex()", "diff": ["-        return m_queue.removeFirst();", "+        return queue.removeFirst();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8817ea150610443006fcdd6ce6941a62", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void removeGraphListener(GraphListener<V, E> l)", "signatureAfterChange": "     public void removeGraphListener(GraphListener<V, E> l)", "diff": ["-        m_graphListeners.remove(l);", "+        graphListeners.remove(l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8848baa151415d3ecccebba49fa6e3db", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "commitAfterChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void dfsVisit( DirectedGraph graph, VertexData vertexData,         Set vertices )", "signatureAfterChange": "     private void dfsVisit(DirectedGraph graph, VertexData vertexData,             Set vertices)", "diff": ["-    private void dfsVisit( DirectedGraph graph, VertexData vertexData,", "-        Set vertices ) {", "-        Stack stack = new Stack(  );", "-        stack.push( vertexData );", "+    private void dfsVisit(DirectedGraph graph, VertexData vertexData,", "+            Set vertices) {", "+        Stack stack = new Stack();", "+        stack.push(vertexData);", "-        while( !stack.isEmpty(  ) ) {", "-            VertexData data = (VertexData) stack.pop(  );", "+        while (!stack.isEmpty()) {", "+            VertexData data = (VertexData) stack.pop();", "-            if( !data.m_discovered ) {", "+            if (!data.m_discovered) {", "-                if( vertices != null ) {", "-                    vertices.add( data.m_vertex );", "+                if (vertices != null) {", "+                    vertices.add(data.m_vertex);", "-                stack.push( new VertexData( data, true, true ) );", "+                stack.push(new VertexData(data, true, true));", "-                Iterator iter =", "-                    graph.outgoingEdgesOf( data.m_vertex ).iterator(  );", "+                Iterator iter = graph.outgoingEdgesOf(data.m_vertex).iterator();", "-                while( iter.hasNext(  ) ) {", "-                    DirectedEdge edge       = (DirectedEdge) iter.next(  );", "-                    VertexData   targetData =", "-                        (VertexData) m_verticesToVerticesData.get( edge", "-                            .getTarget(  ) );", "+                while (iter.hasNext()) {", "+                    DirectedEdge edge = (DirectedEdge) iter.next();", "+                    VertexData targetData = (VertexData) m_vertexToVertexData", "+                            .get(edge.getTarget());", "-                    if( !targetData.m_discovered ) {", "+                    if (!targetData.m_discovered) {", "-                        stack.push( targetData );", "+                        stack.push(targetData);", "-            }", "-            else if( data.m_finished ) {", "-                if( vertices == null ) {", "+            } else if (data.m_finished) {", "+                if (vertices == null) {", "-                    m_orderedVertices.addFirst( data.m_vertex );", "+                    m_orderedVertices.addFirst(data.m_vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886b2fe05a69c9dfeb67f67112a237cd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public Set<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-            ((DirectedGraph<V, E>) m_base).outgoingEdgesOf(vertex);", "+            ((DirectedGraph<V, E>) base).outgoingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8873221de9971bb9329d0a6f6a3283c0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public Set<E> createEdgeList(V vertex)", "signatureAfterChange": "         public Set<E> createEdgeSet(V vertex)", "diff": ["-        public Set<E> createEdgeList(V vertex)", "+        public Set<E> createEdgeSet(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8880c307243c6979889ed4de6cd54c50", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/permutation/CollectionPermutationIter.java", "commitBeforeChange": "acfe801335f16a87725836b305b3fe772d6f9b74", "commitAfterChange": "23231d0c46fcd2dad4257a1c2704491830fb115a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-        sb.append(ArrayUtil.toString(getCurrentPermutationArray()));", "+        sb.append(Arrays.toString(getCurrentPermutationArray()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88928271e92ca9dae90a9d63ae54a48e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "         public abstract List<E> getAllEdges(V sourceVertex,             V targetVertex);", "signatureAfterChange": "         public abstract Set<E> getAllEdges(V sourceVertex,             V targetVertex);", "diff": ["-        public abstract List<E> getAllEdges(V sourceVertex,", "+        public abstract Set<E> getAllEdges(V sourceVertex,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "892d0cda258a32f137210c355d11f3e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public Set<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-        return ((DirectedGraph<V,E>) m_delegate).incomingEdgesOf(vertex);", "+        return ((DirectedGraph<V,E>) delegate).incomingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "894f1a530e68029e6f169d3c97e1aee5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public Set<? extends EE> edgesOf(VV vertex)", "signatureAfterChange": "         public Set<? extends EE> edgesOf(VV vertex)", "diff": ["-            return m_graph.outgoingEdgesOf(vertex);", "+            return graph.outgoingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89660e70a7d42851ca9b29a608f1b596", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public E addEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E addEdge(V sourceVertex, V targetVertex)", "diff": ["-        if (!m_allowingMultipleEdges", "+        if (!allowingMultipleEdges", "-        if (!m_allowingLoops && sourceVertex.equals(targetVertex)) {", "+        if (!allowingLoops && sourceVertex.equals(targetVertex)) {", "-        E e = m_edgeFactory.createEdge(sourceVertex, targetVertex);", "+        E e = edgeFactory.createEdge(sourceVertex, targetVertex);", "-            m_edgeMap.put(e, intrusiveEdge);", "-            m_specifics.addEdgeToTouchingVertices(e);", "+            edgeMap.put(e, intrusiveEdge);", "+            specifics.addEdgeToTouchingVertices(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899a777fdef298806ad8097098105dd0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "         public abstract void addEdgeToTouchingVertices( Edge e );", "signatureAfterChange": "         public abstract void addEdgeToTouchingVertices( E e );", "diff": ["-        public abstract void addEdgeToTouchingVertices( Edge e );", "+        public abstract void addEdgeToTouchingVertices( E e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a06c8dd5166a6c865468fab79cfaf5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r     public SimpleGraph<V, E> getGraph()", "signatureAfterChange": "\r     public UndirectedGraph<V, E> getGraph()", "diff": ["-    public SimpleGraph<V, E> getGraph()\r", "+    public UndirectedGraph<V, E> getGraph()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89b237e78a76a6ba1ab05d1ff3a75664", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/NaiveLcaFinder.java", "commitBeforeChange": "5468011a12459ca35fdd015d291c9a8f0553231c", "commitAfterChange": "c9c8e353be569f4618dadd178341a59e229f8476", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public NaiveLcaFinder(Graph<V, E> graph)", "signatureAfterChange": "     public NaiveLcaFinder(DirectedGraph<V, E> graph)", "diff": ["-    public NaiveLcaFinder(Graph<V, E> graph) {", "+    public NaiveLcaFinder(DirectedGraph<V, E> graph) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a25dc19b41afc07693cf39224afeef8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Graphs.java", "commitBeforeChange": "561cd891c2def49eb3edd19d7e032dbce3f41987", "commitAfterChange": "9fdc08e28dc51bf9bd452a20ddf6cf5cb91ab3d8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public PlainDirectedWeightedGraph( EdgeFactory ef )", "signatureAfterChange": "         public DefaultDirectedWeightedGraph( EdgeFactory ef )", "diff": ["+         */", "+        public DefaultDirectedWeightedGraph( EdgeFactory ef ) {", "+            super( ef );", "+        }", "-         */", "-        public PlainDirectedWeightedGraph( EdgeFactory ef ) {", "-            super( ef );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a6b506620f27ae071c5380142889605", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void handleJGraphTAddedVertex(V jtVertex)", "signatureAfterChange": "     void handleJGraphTAddedVertex(V jtVertex)", "diff": ["-        DefaultGraphCell vertexCell = m_cellFactory.createVertexCell(jtVertex);", "+        DefaultGraphCell vertexCell = cellFactory.createVertexCell(jtVertex);", "-        m_vertexToCell.put(jtVertex, vertexCell);", "-        m_cellToVertex.put(vertexCell, jtVertex);", "+        vertexToCell.put(jtVertex, vertexCell);", "+        cellToVertex.put(vertexCell, jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b62d8e8392b8fbcdfc01d0841ebbb3c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "c2593980e98ffd3b0fd8713e1065362c591d271a", "commitAfterChange": "f67e9197d81c666622112a20391d80767fa4beb3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  @Override         public int compare(V v1, V v2)", "signatureAfterChange": "                  @Override         public int compare(V2 v1, V2 v2)", "diff": ["-        public int compare(V v1, V v2) {", "+        public int compare(V2 v1, V2 v2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b630deee3d78867d34b423ead1a58ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/PrefetchIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public Object next()", "signatureAfterChange": "      public E next()", "diff": ["-    public Object next()", "+    public E next()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba52200172b925b057f7470f5d7c875", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "b45791c7d62f6d8e55334421984e95ff59806210", "commitAfterChange": "6439f444116cb1d103ecea1e31327eb85544da99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public GraphOrdering(Graph<V, E> graph)", "signatureAfterChange": "     public GraphOrdering(Graph<V, E> graph)", "diff": ["-        this(graph, false);", "+        this(graph, false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba58fd6bb38f7e60c6c39fcd974760f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "96754ed4114f3d602a54578a7af8400296c32fa2", "commitAfterChange": "cc8ea425fbe9dcfe7920dfed905f9dc1bb3a3ba7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Object clone(  )", "signatureAfterChange": "     public Object clone(  )", "diff": ["-            throw new RuntimeException( e );", "+            throw new RuntimeException(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc1b37f23ffbe7bee220a68d23c594e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/generate/GraphGeneratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testEmptyGraphGenerator()", "signatureAfterChange": "     public void testEmptyGraphGenerator()", "diff": ["-        gen.generateGraph(g, m_vertexFactory, resultMap);", "+        gen.generateGraph(g, vertexFactory, resultMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd55dd9a5ae312f895dfb1b1785f0e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Collection<Set<V>> getBiggestMaximalCliques()", "signatureAfterChange": "     public Collection<Set<V>> getBiggestMaximalCliques()", "diff": ["-        for (Set<V> clique : m_cliques) {", "+        for (Set<V> clique : cliques) {", "-        for (Set<V> clique : m_cliques) {", "+        for (Set<V> clique : cliques) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d6b49ddb7b1d66216347785f9079b90", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "         public void connectedComponentStarted(             ConnectedComponentTraversalEvent e)", "signatureAfterChange": "         public void connectedComponentStarted(             ConnectedComponentTraversalEvent e)", "diff": ["-            m_currentConnectedSet = new HashSet<V>();", "+            currentConnectedSet = new HashSet<V>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d837bca0b9f13be38238c6387428e39", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphDelegator(Graph<V, E> g)", "signatureAfterChange": "     public GraphDelegator(Graph<V, E> g)", "diff": ["-        m_delegate = g;", "+        delegate = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d8551f2c41e722df1ea611f913f2bcb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public Set<V> vertexSet()", "signatureAfterChange": "     public Set<V> vertexSet()", "diff": ["-                Collections.unmodifiableSet(m_vertexMap.keySet());", "+                Collections.unmodifiableSet(m_specifics.getVertexSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ddad6e77f76cae27dece7aa6b14fbaf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean addVertex(V v)", "signatureAfterChange": "     public boolean addVertex(V v)", "diff": ["-            m_specifics.addVertex(v);", "+            specifics.addVertex(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8df2ead0cf089a02db6ac7301c458ace", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void vertexRemoved(GraphVertexChangeEvent<V> e)", "signatureAfterChange": "     public void vertexRemoved(GraphVertexChangeEvent<V> e)", "diff": ["-        m_predecessorMap.remove(e.getVertex());", "-        m_successorMap.remove(e.getVertex());", "+        predecessorMap.remove(e.getVertex());", "+        successorMap.remove(e.getVertex());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e4db8be569a027753e9e6d26db0a6ba", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void clear()", "signatureAfterChange": "     public void clear()", "diff": ["-        m_min = null;", "-        m_n = 0;", "+        minNode = null;", "+        nNodes = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e61fe2bb6fbf9ab017dab981afe47fc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean containsEdge(Edge e)", "signatureAfterChange": "     public boolean containsEdge(E e)", "diff": ["-    public boolean containsEdge(Edge e)", "+    public boolean containsEdge(E e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e74ad29c1cc5825e3af7b469cf2a276", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeapNode.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public final double getKey()", "signatureAfterChange": "     public final double getKey()", "diff": ["-        return m_key;", "+        return key;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ea34f63b10230c65dcd6b9c37ddd270", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean addVertex(V v)", "signatureAfterChange": "     public boolean addVertex(V v)", "diff": ["-        return m_delegate.addVertex(v);", "+        return delegate.addVertex(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eac2634793d6689b013b05fcb8c3588", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "         public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-        public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+        public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "-            List<E> edges = null;", "+            Set<E> edges = null;", "-                edges = new ArrayList<E>();", "+                edges = new ArrayUnenforcedSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef25b0a9f1d1103c29d32bc0c8e2888", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": "         public SubgraphUndirected( Graph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "         public SubgraphUndirected( UndirectedGraph base, Set vertexSubset,             Set edgeSubset )", "diff": ["-        public SubgraphUndirected( Graph base, Set vertexSubset, Set edgeSubset ) {", "+        public SubgraphUndirected( UndirectedGraph base, Set vertexSubset,", "+            Set edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f0581b6327e5a7c9dc584425073875a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "         public Object remove(  )", "signatureAfterChange": "         public Object remove(  )", "diff": ["-            ClosestFirstQueueEntry entry =", "-                (ClosestFirstQueueEntry) m_heap.removeMin(  );", "+            QueueEntry entry = (QueueEntry) m_heap.removeMin(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f169a43c909e4c52ad73f33a1210b7a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/NaiveLcaFinder.java", "commitBeforeChange": "5d5d29c3807fb914f184e88acdcc7efe30fe4498", "commitAfterChange": "29fba4de17dcb45e1fe3a7ac62685e84c2334719", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private Set<V> allParents(Set<V> vertexSet)", "signatureAfterChange": "     private Set<V> allParents(Set<V> vertexSet)", "diff": ["-\t    for (E edge : graph.edgesOf(e)) {", "+\t    for (E edge : graph.incomingEdgesOf(e)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fedee9ef55e48e6f7f50a97bf4f2385", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/Edge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public boolean containsVertex( Object v );", "signatureAfterChange": "     public boolean containsVertex( V v );", "diff": ["-    public boolean containsVertex( Object v );", "+    public boolean containsVertex( V v );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90d907f80eff1b723a00f0daf761aaa3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/PartiteRandomGraphGenerator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "signatureAfterChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "diff": ["-                RandomGraphHelper.addVertices(", "+                RandomGraphs.addVertices(", "-                RandomGraphHelper.addEdges(", "+                RandomGraphs.addEdges("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "918e72126cf24a3f29a900210f0c56e5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/PrefetchIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         public Object nextElement()             throws NoSuchElementException;", "signatureAfterChange": "         public EE nextElement()             throws NoSuchElementException;", "diff": ["-        public Object nextElement()", "+        public EE nextElement()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c5b7c59acca5167e87b6311d9b4857", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E addEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge addEdge( Object sourceVertex, Object targetVertex ) {", "+    public E addEdge( V sourceVertex, V targetVertex ) {", "-        Edge e = m_edgeFactory.createEdge( sourceVertex, targetVertex );", "+        E e = m_edgeFactory.createEdge( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d61465b2463782b8d1b9dded642973", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "commitAfterChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractBaseGraph( EdgeFactory ef, boolean allowMultipleEdges,         boolean allowLoops )", "signatureAfterChange": "     public AbstractBaseGraph( EdgeFactory ef, boolean allowMultipleEdges,         boolean allowLoops )", "diff": ["-        m_vertexMap                 = new HashMap(  );", "-        m_edgeSet                   = new HashSet(  );", "+        m_vertexMap                 = new LinkedHashMap(  );", "+        m_edgeSet                   = new LinkedHashSet(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92580c5a2bb9a2ba7394cf1afdebbe3c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "       private EdgeTraversalEvent createEdgeTraversalEvent( Edge edge )", "signatureAfterChange": "       private EdgeTraversalEvent createEdgeTraversalEvent( E edge )", "diff": ["-    private EdgeTraversalEvent createEdgeTraversalEvent( Edge edge ) {", "+    private EdgeTraversalEvent createEdgeTraversalEvent( E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9269449c3ae0ddd9acf51066adb8460c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-    public List<E> incomingEdgesOf(V vertex)", "+    public Set<E> incomingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "929bc9315c7a951759b70c4c51208731", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEdgeListFactory()", "signatureAfterChange": "     public void testEdgeSetFactory()", "diff": ["-    public void testEdgeListFactory()", "+    public void testEdgeSetFactory()", "-        g.setEdgeListFactory(new LinkedHashSetFactory<String, DirEdge<String>>());", "+        g.setEdgeSetFactory(new LinkedHashSetFactory<String, DirEdge<String>>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a228e98d56d4cb219b973bea4874c7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public boolean removeEdge(E e)", "signatureAfterChange": "     public boolean removeEdge(E e)", "diff": ["-        return m_edgeSet.remove(e);", "+        return edgeSet.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92da0850df182de27b926bad8e308f80", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public E getSpanningTreeEdge(V vertex)", "signatureAfterChange": "     public E getSpanningTreeEdge(V vertex)", "diff": ["-        return node.getData().m_spanningTreeEdge;", "+        return node.getData().spanningTreeEdge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93188bea3654dbdb62432d68957d5893", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "4d7b735198ee2f6b968179206989dbb86fc679e1", "commitAfterChange": "78884be0de3af7915e782067f1b82ecce38ca128", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static <V, E> V initialize(         DirectedGraph<V, E> dg,         LinkedList<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private static <V, E> V initialize(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["-        LinkedList<V> queue,", "+        Queue<V> queue,", "-                queue.add(vertex);", "+                queue.offer(vertex);", "-            return queue.getFirst();", "+            return queue.peek();", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935d4d666deeeea43106e37af44fb3a7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java", "commitBeforeChange": "9782c283bdcce76cc2595665a8632849f2558e9e", "commitAfterChange": "92d03807c71690a78bba118dfc95207663fee68a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public MaximumFlow(Double value, Map<E, Double> flow)", "signatureAfterChange": "          public MaximumFlowImpl(Double value, Map<E, Double> flow)", "diff": ["-", "-        public MaximumFlow(Double value, Map<E, Double> flow)", "-        {", "-            this.value  = value;", "-            this.flow   = Collections.unmodifiableMap(flow);", "-        }", "+", "+        public MaximumFlowImpl(Double value, Map<E, Double> flow)", "+        {", "+            this.value  = value;", "+            this.flow   = Collections.unmodifiableMap(flow);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939ce77e374237edd85c2a80a4217e34", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "         public int degreeOf(V vertex)", "signatureAfterChange": "         public int degreeOf(V vertex)", "diff": ["-                List<E> edges = getEdgeContainer(vertex).m_vertexEdges;", "+                Set<E> edges = getEdgeContainer(vertex).m_vertexEdges;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9425d4c5b433c79d7b1c219df920c553", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/MaximumWeightBipartiteMatching.java", "commitBeforeChange": "985760cbd642d0a5bdb9eca3c84e4565ecb8ceea", "commitAfterChange": "f79565a2a8d7f5186720bf4969b47a8431d60e9c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate Map<V, List<E>> verticesReachableByTightAlternatingEdgesFromVertex(V vertex)", "signatureAfterChange": " \t \tprivate Map<V, List<E>> verticesReachableByTightAlternatingEdgesFromVertex(V vertex)", "diff": ["-\t\t_verticesReachableByTightAlternatingEdgesFromVertex(Arrays.asList(vertex), false, pathsToVertices);", "+\t\tfindPathsToVerticesFromVertices(Arrays.asList(vertex), false, pathsToVertices);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9446ea290afd1499c3ed7ed9c8545fcf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/GraphListener.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void edgeRemoved( EdgeEvent e );", "signatureAfterChange": "     public void edgeRemoved( GraphEdgeChangeEvent e );", "diff": ["-    public void edgeRemoved( EdgeEvent e );", "+    public void edgeRemoved( GraphEdgeChangeEvent e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9452d73c08ebbb6da36d931a8bca57cf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean removeEdge( Edge e )", "signatureAfterChange": "     public boolean removeEdge( E e )", "diff": ["-    public boolean removeEdge( Edge e ) {", "+    public boolean removeEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b688d970890faab660982c812b098a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean hasNext(  )", "signatureAfterChange": "     public boolean hasNext(  )", "diff": ["-                    Object v = m_vertexIterator.next(  );", "+                    V v = m_vertexIterator.next(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f45afacd0ffd3b7ed9929e6080f9b8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public boolean removeEdge( Edge e )", "signatureAfterChange": "     public boolean removeEdge( E e )", "diff": ["-    public boolean removeEdge( Edge e ) {", "+    public boolean removeEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94fec17f50050de119da43fbdf67b562", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/VertexDegreeComparator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public VertexDegreeComparator(UndirectedGraph<V, E> g,         boolean ascendingOrder)", "signatureAfterChange": "     public VertexDegreeComparator(UndirectedGraph<V, E> g,         boolean ascendingOrder)", "diff": ["-        m_graph = g;", "-        m_ascendingOrder = ascendingOrder;", "+        graph = g;", "+        this.ascendingOrder = ascendingOrder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9526d2c933158be258571f00d89d2b4f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean isEmpty()", "signatureAfterChange": "     public boolean isEmpty()", "diff": ["-        return m_min == null;", "+        return minNode == null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95bb78b139da2ee96fb01c8db91697fc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/AllAlgTests.java", "commitBeforeChange": "45dc34016cca42bc1806df6d5ba72daac7c68900", "commitAfterChange": "8ddaf8c6c8b0458d76992f281628498033d063a7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite()", "signatureAfterChange": "     public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(MinimumSpanningTreeTests.class));", "+        suite.addTest(new TestSuite(MinimumSpanningTreeTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d8ee2e12e8938bda9457ad934e6101", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void encounterVertexAgain(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertexAgain(V vertex, E edge)", "diff": ["-        if (node.getData().m_frozen) {", "+        if (node.getData().frozen) {", "-            node.getData().m_spanningTreeEdge = edge;", "-            m_heap.decreaseKey(node, candidatePathLength);", "+            node.getData().spanningTreeEdge = edge;", "+            heap.decreaseKey(node, candidatePathLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "976dc24b0a516311bfb422ce3779908f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void edgeAdded( Edge e )", "signatureAfterChange": "     public void edgeAdded( EdgeEvent e )", "diff": ["-    public void edgeAdded( Edge e ) {", "+    public void edgeAdded( EdgeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979c276cef2134bfead66c0e801ea277", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public int size()", "signatureAfterChange": "     public int size()", "diff": ["-        return m_n;", "+        return nNodes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98218a844761f39f7862d9ec7000aeac", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "fb87419b8dc96e08a9a084847be43d0b4412606c", "commitAfterChange": "9c304d58c2a3ebb2444bab73d9552866b4440af5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Test     public void binaryTreeTest()", "signatureAfterChange": "      @Test     public void testBinaryTree()", "diff": ["-    public void binaryTreeTest() {", "+    public void testBinaryTree() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984a06738e9d8a40e0ec064d277cc3f9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "         public List<E> getUnmodifiableVertexEdges()", "signatureAfterChange": "         public List<EE> getUnmodifiableVertexEdges()", "diff": ["-        public List<E> getUnmodifiableVertexEdges()", "+        public List<EE> getUnmodifiableVertexEdges()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984dea78ce776b02c91185e99a869ef3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-                    getEdgeContainer(sourceVertex).m_vertexEdges.iterator();", "+                    getEdgeContainer(sourceVertex).vertexEdges.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98eab73cde1a01df0a3cacea0b0043cd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-    public List<E> outgoingEdgesOf(V vertex)", "+    public Set<E> outgoingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99460cb215158445c1a944e948186135", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 38, "signatureBeforeChange": "         public void vertexAdded( GraphVertexChangeEvent e )", "signatureAfterChange": "         public void vertexAdded( GraphVertexChangeEvent e )", "diff": ["-            if( !m_jtVerticesBeingAdded.remove( jtVertex ) ) {", "-                addJGraphTVertex( jtVertex );", "+            if( !m_jtElementsBeingAdded.remove( jtVertex ) ) {", "+                handleJGraphTAddedVertex( jtVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9951a93f7ffdd4a15ec65e57e7674211", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean containsVertex( Object v )", "signatureAfterChange": "     public boolean containsVertex( V v )", "diff": ["-    public boolean containsVertex( Object v ) {", "+    public boolean containsVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a613aa4bef93cd13b707fb8172c62cb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/Graph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean containsEdge(E e);", "signatureAfterChange": "     public boolean containsEdge(Edge e);", "diff": ["-    public boolean containsEdge(E e);", "+    public boolean containsEdge(Edge e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adff556c10ed184437579f379e339de", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/heap/HeapVertex.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object getAdditional()", "signatureAfterChange": "     public T getAdditional()", "diff": ["-    public Object getAdditional()", "+    public T getAdditional()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5cac83aade89fa92c28a34885d798a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "         protected void encounterVertexAgain( V vertex, E edge )", "diff": ["-        protected void encounterVertexAgain( Object vertex, Edge edge ) {", "+        protected void encounterVertexAgain( V vertex, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b722ed9938a96924e1419079c2bebeb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "         public int outDegreeOf( Object vertex )", "signatureAfterChange": "         public int outDegreeOf( V vertex )", "diff": ["-        public int outDegreeOf( Object vertex ) {", "+        public int outDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b8ebc0f803bfebcf98c2bbea4c07a91", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Edge removeEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E removeEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge removeEdge( Object sourceVertex, Object targetVertex ) {", "+    public E removeEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9be522ff11e10172d9ef1270ae9017d6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Graph<V, E> getGraph()", "signatureAfterChange": "     public Graph<V, E> getGraph()", "diff": ["-        return m_graph;", "+        return graph;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0f3d596fd0a97ddbe0f05c196c84ee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testGetAllEdges()", "signatureAfterChange": "     public void testGetAllEdges()", "diff": ["-        List<DirEdge<String>> loops = g.getAllEdges(m_v1, m_v1);", "+        Set<DirEdge<String>> loops = g.getAllEdges(m_v1, m_v1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c70d7c1bcc4a9ac4c5aab3572ff05ec", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public E getEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E getEdge(V sourceVertex, V targetVertex)", "diff": ["-        return m_specifics.getEdge(sourceVertex, targetVertex);", "+        return specifics.getEdge(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8c0a4c3d97a6c53bb24f4380d36710", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "         public abstract int inDegreeOf( Object vertex );", "signatureAfterChange": "         public abstract int inDegreeOf( V vertex );", "diff": ["-        public abstract int inDegreeOf( Object vertex );", "+        public abstract int inDegreeOf( V vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d386b3e240b00633098fc4380ae6304", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "8fe299c38648acac55e40bd47498a08269e01f74", "commitAfterChange": "3cb0ce95d7f27940cd613dc6e124a83b3e4976e0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private DirectedGraph<String, DefaultEdge>     createMultiTriangleWithMultiLoop()", "signatureAfterChange": "      private DirectedGraph<String, DefaultEdge>     createMultiTriangle()", "diff": ["-    createMultiTriangleWithMultiLoop()", "+    createMultiTriangle()", "-        initMultiTriangleWithMultiLoop(g);", "+        initMultiTriangle(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7915425979d974a66c2e14c845a5c6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private GraphVertexChangeEvent<V> createGraphVertexChangeEvent(         int eventType,         V vertex)", "signatureAfterChange": "      private GraphVertexChangeEvent<V> createGraphVertexChangeEvent(         int eventType,         V vertex)", "diff": ["-        if (m_reuseEvents) {", "-            m_reuseableVertexEvent.setType(eventType);", "-            m_reuseableVertexEvent.setVertex(vertex);", "+        if (reuseEvents) {", "+            reuseableVertexEvent.setType(eventType);", "+            reuseableVertexEvent.setVertex(vertex);", "-            return m_reuseableVertexEvent;", "+            return reuseableVertexEvent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d95cd904b3a467d94ed3f8fac6235a2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Subgraph(Graph<V, E> base, Set<V> vertexSubset, Set<E> edgeSubset)", "signatureAfterChange": "     public Subgraph(Graph<V, E> base, Set<V> vertexSubset, Set<E> edgeSubset)", "diff": ["-        m_base = base;", "+        this.base = base;", "-        if (m_base instanceof ListenableGraph) {", "-            ((ListenableGraph<V, E>) m_base).addGraphListener(new BaseGraphListener());", "+        if (base instanceof ListenableGraph) {", "+            ((ListenableGraph<V, E>) base).addGraphListener(new BaseGraphListener());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e700301c5c35775c5b9a62209e71c87", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/ClosestFirstIteratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testRadius()", "signatureAfterChange": "     public void testRadius()", "diff": ["-        m_result = new StringBuffer();", "+        result = new StringBuffer();", "-            m_result.append(iterator.next());", "+            result.append(iterator.next());", "-                m_result.append(',');", "+                result.append(',');", "-        assertEquals(\"1,2,3,5,6,7\", m_result.toString());", "+        assertEquals(\"1,2,3,5,6,7\", result.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f175c47f78f8fcd0137e0852437e2c3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-    public List<E> incomingEdgesOf(V vertex)", "+    public Set<E> incomingEdgesOf(V vertex)", "-        ArrayList<E> edges = new ArrayList<E>();", "-        List<E> baseEdges =", "+        Set<E> edges = new ArrayUnenforcedSet<E>();", "+        Set<E> baseEdges ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f365def31ace3bb561c6883917f10b9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private FibonacciHeapNode<QueueEntry<V,E>> createSeenData(V vertex, E edge)", "signatureAfterChange": "     private FibonacciHeapNode<QueueEntry<V,E>> createSeenData(V vertex, E edge)", "diff": ["-        entry.m_vertex = vertex;", "-        entry.m_spanningTreeEdge = edge;", "+        entry.vertex = vertex;", "+        entry.spanningTreeEdge = edge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb6a9bd949e92c9875ad07204f03aa3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "commitAfterChange": "4d87df49257bc31c259b3dfd0ef0ddc6431d52d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Set<V> findCycles()", "signatureAfterChange": "     public Set<V> findCycles()", "diff": ["-        StrongConnectivityInspector<V, E> inspector =", "-            new StrongConnectivityInspector<V, E>(graph);", "+        KosarajuStrongConnectivityInspector<V, E> inspector =", "+            new KosarajuStrongConnectivityInspector<V, E>(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc4f6c56d2c963315ab1669c4cf3e21", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public Edge createEdge( Object source, Object target )", "diff": ["-            return new DefaultDirectedWeightedEdge( source, target );", "+            return new DirectedWeightedEdge( source, target );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a069a0607ddbb1837717178190ca4ce1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "          DirectedEdgeContainer(EdgeSetFactory<VV,EE> edgeListFactory, VV vertex)", "signatureAfterChange": "          DirectedEdgeContainer(EdgeSetFactory<VV,EE> edgeListFactory, VV vertex)", "diff": ["-            m_incoming = edgeListFactory.createEdgeSet(vertex);", "-            m_outgoing = edgeListFactory.createEdgeSet(vertex);", "+            incoming = edgeListFactory.createEdgeSet(vertex);", "+            outgoing = edgeListFactory.createEdgeSet(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0a93ad51e96f3bb38c0ebfccdc00c62", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 37, "signatureBeforeChange": "         public void edgeRemoved( GraphEdgeChangeEvent e )", "signatureAfterChange": "         public void edgeRemoved( GraphEdgeChangeEvent e )", "diff": ["-            if( !m_jtEdgesBeingRemoved.remove( jtEdge ) ) {", "-                removeJGraphTEdge( jtEdge );", "+            if( !m_jtElementsBeingRemoved.remove( jtEdge ) ) {", "+                handleJGraphTRemovedEdge( jtEdge );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bd8071cd59ef60e09ffbb59aa1e3c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "commitAfterChange": "3d0cfd4ff83748b5626a50dacde9f671eee9de80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private Graph<String, DefaultEdge> init(boolean listenable)", "signatureAfterChange": "      private UndirectedGraph<String, DefaultEdge> init(boolean listenable)", "diff": ["-    private Graph<String, DefaultEdge> init(boolean listenable)", "+    private UndirectedGraph<String, DefaultEdge> init(boolean listenable)", "-        Graph<String, DefaultEdge> g;", "+        UndirectedGraph<String, DefaultEdge> g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d15511307f946acc01ff98a025b154", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testShortestPath()", "signatureAfterChange": "     public void testShortestPath(  )", "diff": ["-    public void testShortestPath() {", "-        WeightedGraph         g        = create();", "-        ShortestPathAlgorithm alg      = new DijkstraShortestPathAlgorithm(g);", "-        WeightedGraph         pathTree = alg.shortestPathTree(m_v1);", "+    public void testShortestPath(  ) {", "+        WeightedGraph         g        = create(  );", "+        ShortestPathAlgorithm alg      = new DijkstraShortestPathAlgorithm( g );", "+        WeightedGraph         pathTree = alg.shortestPathTree( V1 );", "-        assertEquals(4, pathTree.vertexSet().size());", "-        assertEquals(3, pathTree.edgeSet().size());", "-        assertTrue(pathTree.containsEdge(m_e1));", "-        assertTrue(pathTree.containsEdge(m_e2));", "-        assertTrue(pathTree.containsEdge(m_e4));", "+        assertEquals( 4, pathTree.vertexSet(  ).size(  ) );", "+        assertEquals( 3, pathTree.edgeSet(  ).size(  ) );", "+        assertTrue( pathTree.containsEdge( m_e1 ) );", "+        assertTrue( pathTree.containsEdge( m_e2 ) );", "+        assertTrue( pathTree.containsEdge( m_e4 ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1122120cd1974ecca7c8a47f30b1c4a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "          private void handleInsertedEdges(List<Object> jEdges)", "signatureAfterChange": "          private void handleInsertedEdges(List<Object> jEdges)", "diff": ["-                if (!m_jCellsBeingAdded.remove(jEdge)) {", "+                if (!jCellsBeingAdded.remove(jEdge)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ad5a2264a7ddab4a67ffac39e4a2d2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BlockCutpointGraph.java", "commitBeforeChange": "61dbb1af6c224986e7d12029f65eb7b3fce4e12a", "commitAfterChange": "5dfb58e41ca1578202f9d451a90e9b653291ef83", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private int dfsVisit(V s, V father)", "signatureAfterChange": "      private int dfsVisit(V s, V father)", "diff": ["-                this.stack.push(dfsEdge);", "+                this.stack.add(dfsEdge);", "-                this.stack.push(backwardEdge);", "+                this.stack.add(backwardEdge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b1f598d4e1d204f95974fc25c1c156", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertex( V vertex, E edge )", "diff": ["-    protected void encounterVertex( Object vertex, Edge edge ) {", "+    protected void encounterVertex( V vertex, E edge ) {", "-        m_queue.addLast( vertex );", "+        m_queue.add( vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c6addd25a5a2fecbca6df39a7e8363", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public double getEdgeWeight(E e)", "signatureAfterChange": "     public double getEdgeWeight(E e)", "diff": ["-        return m_delegate.getEdgeWeight(e);", "+        return delegate.getEdgeWeight(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a235f48700c60f788785ca70fc58ae45", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected VertexExtensionBase vertexExtended0(V v)", "signatureAfterChange": "     private VertexExtensionBase extendedVertex(V v)", "diff": ["-    protected VertexExtensionBase vertexExtended0(V v) {", "+    private VertexExtensionBase extendedVertex(V v) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a25e47f04e4348802acad60ae5779ee0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "b1ac8b1a160387a601ece08f0084fff79b80d75a", "commitAfterChange": "9e56fea1a756c0e64243ea1194d826da9a86334d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void init(  )", "signatureAfterChange": "     public void init()", "diff": ["-    public void init(  ) {", "+    public void init() {", "-        ListenableGraph g = new ListenableDirectedGraph(  );", "+        ListenableGraph g = new ListenableDirectedMultigraph();", "-        getContentPane(  ).add( jgraph );", "+        getContentPane().add( jgraph );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a2ced83bff5423aa3598915c8e031e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/VertexSetListener.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void vertexAdded( VertexEvent e );", "signatureAfterChange": "     public void vertexAdded( GraphVertexChangeEvent e );", "diff": ["-    public void vertexAdded( VertexEvent e );", "+    public void vertexAdded( GraphVertexChangeEvent e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e52717d645daa463d34185602bd042", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "         public int degreeOf( Object vertex )", "signatureAfterChange": "         public int degreeOf( V vertex )", "diff": ["-        public int degreeOf( Object vertex ) {", "+        public int degreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f83a3d8e70217abe865c5899c68369", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private double calculatePathLength( Object vertex, Edge edge )", "signatureAfterChange": "     private double calculatePathLength( Object vertex, Edge edge )", "diff": ["-        Object                 otherVertex = edge.oppositeVertex( vertex );", "-        ClosestFirstQueueEntry otherEntry =", "-            (ClosestFirstQueueEntry) getSeenData( otherVertex );", "+        Object     otherVertex = edge.oppositeVertex( vertex );", "+        QueueEntry otherEntry = (QueueEntry) getSeenData( otherVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2fbc11de7bed9679c609afd95395541", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean removeEdge(Edge e)", "signatureAfterChange": "     public boolean removeEdge(E e)", "diff": ["-    public boolean removeEdge(Edge e)", "+    public boolean removeEdge(E e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a351550842e4a940b1ac3a1657256400", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public void vertexAdded(GraphVertexChangeEvent<Object> e)", "signatureAfterChange": "         public void vertexAdded(GraphVertexChangeEvent<Object> e)", "diff": ["-            m_lastAddedVertex = e.getVertex();", "+            lastAddedVertex = e.getVertex();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a39dcc4e4bef7a0bbd6509e789183548", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public Set<EE> createEdgeList(VV vertex)", "signatureAfterChange": "         public Set<EE> createEdgeSet(VV vertex)", "diff": ["-        public Set<EE> createEdgeList(VV vertex)", "+        public Set<EE> createEdgeSet(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a4d66a05262eee72d0249d979b09f1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/GraphEdgeChangeEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public E getEdge()", "signatureAfterChange": "     public E getEdge()", "diff": ["-        return m_edge;", "+        return edge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a403619ce3a8f3258da6e2453c19309e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "f67e9197d81c666622112a20391d80767fa4beb3", "commitAfterChange": "af1b824446ff484516d50232b001351d46878322", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Test \tpublic void test1()", "signatureAfterChange": "  \t@Test \tpublic void testSingleMatching()", "diff": ["-\tpublic void test1() {", "+\tpublic void testSingleMatching() {", "-\t\t\t\tnew DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+            new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "-\t\t\t\tnew DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+\t\t\tnew DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "-\t\t\t\tnew VF2SubgraphIsomorphismInspector<String, DefaultEdge>(g1, g2);", "+\t\t\tnew VF2SubgraphIsomorphismInspector<String, DefaultEdge>(g1, g2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4242b6a90182acc46fd70a143ebc60a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private QueueEntry createSeenData( Object vertex, Edge edge )", "signatureAfterChange": "     private QueueEntry createSeenData( V vertex, E edge )", "diff": ["-    private QueueEntry createSeenData( Object vertex, Edge edge ) {", "+    private QueueEntry createSeenData( V vertex, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48438768ce0da08e9bbbb2937a9ce65", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "         public void edgeRemoved(GraphEdgeChangeEvent<V,E> e)", "signatureAfterChange": "         public void edgeRemoved(GraphEdgeChangeEvent<V,E> e)", "diff": ["-            if (!m_jtElementsBeingRemoved.remove(jtEdge)) {", "+            if (!jtElementsBeingRemoved.remove(jtEdge)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a49b39ef7a1f7a663fed59419e45751f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public List<E> edgesOf(V vertex)", "signatureAfterChange": "     public Set<E> edgesOf(V vertex)", "diff": ["-    public List<E> edgesOf(V vertex)", "+    public Set<E> edgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4dcad425a1f6985e2e1ce65f7f9378a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public boolean removeEdge(E e)", "signatureAfterChange": "     public boolean removeEdge(E e)", "diff": ["-            m_edgeSet.remove(e);", "+            m_edgeMap.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4fed9e7d52900ac680aa6261ff042ed", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "813f75565241c6a2b1109a8415fe2c264ac5efee", "commitAfterChange": "a284e8dcc35136857961275fe0592b53e02b6601", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          private boolean hasCapacity()", "signatureAfterChange": "          private boolean hasCapacity()", "diff": ["-            return Math.abs(capacity - flow) > EPSILON;", "+            return Math.abs(capacity - flow) > DEFAULT_EPSILON;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a52a6103318ca49d3baf461d81cb79ed", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testInducedSubgraphListener()", "signatureAfterChange": "     public void testInducedSubgraphListener()", "diff": ["-        g.addEdge(_v3, _v4);", "+        g.addEdge(v3, v4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a56ba4d819e85c5008dc0fd33fee4c8a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public void edgeVisited( Edge edge )", "signatureAfterChange": "         public void edgeTraversed( EdgeTraversalEvent e )", "diff": ["-        public void edgeVisited( Edge edge ) {", "+        public void edgeTraversed( EdgeTraversalEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57469b472fc1de43fbec536ccc7cef9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-    public List<E> outgoingEdgesOf(V vertex)", "+    public Set<E> outgoingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57a8251fc164869592e0d033dc8c3e2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void vertexAdded( VertexEvent e )", "signatureAfterChange": "         public void vertexAdded( GraphVertexChangeEvent e )", "diff": ["-        public void vertexAdded( VertexEvent e ) {", "+        public void vertexAdded( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57da1618c4e35d4c0ce9795085f937c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/EmptyGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        for (int i = 0; i < m_size; ++i) {", "+        for (int i = 0; i < size; ++i) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a603269e30f90bbb91fbcbf3d1442d8d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "signatureAfterChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "diff": ["-                    if (m_graph.containsEdge(candidate, new_candidate)) {", "+                    if (graph.containsEdge(candidate, new_candidate)) {", "-                    if (m_graph.containsEdge(candidate, new_found)) {", "+                    if (graph.containsEdge(candidate, new_found)) {", "-                    m_cliques.add(new HashSet<V>(potential_clique));", "+                    cliques.add(new HashSet<V>(potential_clique));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64d3995c6c1be98ba6677d49378a87b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void exportVertex(PrintStream out, V vertex)", "signatureAfterChange": "      private void exportVertex(PrintStream out, V vertex)", "diff": ["-        String name = m_vertexNameProvider.getVertexName(vertex);", "+        String name = vertexNameProvider.getVertexName(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6520a20834704dba13118f61db8330c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/EdgeTraversalEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public E getEdge()", "signatureAfterChange": "     public E getEdge()", "diff": ["-        return m_edge;", "+        return edge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a68d3e1a3ea199e9177c3230bea571f6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/VertexSetListener.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void vertexRemoved( VertexEvent e );", "signatureAfterChange": "     public void vertexRemoved( GraphVertexChangeEvent e );", "diff": ["-    public void vertexRemoved( VertexEvent e );", "+    public void vertexRemoved( GraphVertexChangeEvent e );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c35a0812b7a5862379046692afe6f6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void vertexRemoved( Object v )", "signatureAfterChange": "     public void vertexRemoved( VertexEvent e )", "diff": ["-    public void vertexRemoved( Object v ) {", "+    public void vertexRemoved( VertexEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6fda8b4c2a193e13b61f14ac27765b7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "          public Set<V> getNeighbors()", "signatureAfterChange": "          public Set<V> getNeighbors()", "diff": ["-            return m_neighborSet;", "+            return neighborSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73e81f870c7ae76ceaafa0b226a660b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected Object newSeenData( Object vertex, Edge edge )", "signatureAfterChange": "     protected Object newSeenData( Object vertex, Edge edge )", "diff": ["-        if( edge != null ) {", "-            shortestPathLength = calculatePathLength( vertex, edge );", "-        }", "-        else {", "+        if( edge == null ) {", "+        else {", "+            shortestPathLength = calculatePathLength( vertex, edge );", "+        }", "-        ClosestFirstQueueEntry entry =", "-            new ClosestFirstQueueEntry( shortestPathLength );", "+        QueueEntry entry = new QueueEntry( shortestPathLength );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7734b82868addb947c0141b06cc3ca6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public Edge createEdge( Object source, Object target )", "diff": ["-            return new DefaultUndirectedEdge( source, target );", "+            return new UndirectedEdge( source, target );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7bc984a930113072f307ea3b888e6df", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testInDegreeOf()", "signatureAfterChange": "     public void testInDegreeOf()", "diff": ["-            m_g3.inDegreeOf(new Object());", "+            m_g3.inDegreeOf(new String());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a898c8eff354870c071af3dc594dc6e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/GraphEdgeChangeEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Edge getEdge(  )", "signatureAfterChange": "     public E getEdge(  )", "diff": ["-    public Edge getEdge(  ) {", "+    public E getEdge(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8fd8e3fdd8440f10dbbc57fc37752e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "14cd28888e30751bc38ae11fd959dc779b0b088a", "commitAfterChange": "d8828151b19d8085abda20673dd7a88c10853e56", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @Test     public void testSemanticCheck()", "signatureAfterChange": "     @Test     public void testSemanticCheck()", "diff": ["-                        new DefaultComparator<Integer>());", "+                        new AlwaysEqualComparator<Integer>());", "-                        new DefaultComparator<String>(),", "+                        new AlwaysEqualComparator<String>(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b03b2748f2656547961c8c32ca62b3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void vertexRemoved(GraphVertexChangeEvent<V> e)", "signatureAfterChange": "     public void vertexRemoved(GraphVertexChangeEvent<V> e)", "diff": ["-        m_neighborMap.remove(e.getVertex());", "+        neighborMap.remove(e.getVertex());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9bf0bbc1c5c3cf8b83f4a9278719fc8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "a4491f801ff4eba32d8029dda18c582844b268e3", "commitAfterChange": "dca8f0b0b2b997b3562b349da681aa495eb852bf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public DefaultGraphCell getVertexCell( Object jGraphTVertex )", "signatureAfterChange": "     public DefaultGraphCell getVertexCell( Object jGraphTVertex )", "diff": ["-        return (DefaultGraphCell) m_vertexCells.get( jGraphTVertex );", "+        return (DefaultGraphCell) m_vertexToCell.get( jGraphTVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e26ab1b0093c6c8240f62ad85e4601", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "          void addVertex(Object jtVertex)", "signatureAfterChange": "          void addVertex(V jtVertex)", "diff": ["-        void addVertex(Object jtVertex)", "+        void addVertex(V jtVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa05cbc42a29d3d95b337baebe3b0ff1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "         public List<? extends EE> edgesOf(VV vertex)", "signatureAfterChange": "         public Set<? extends EE> edgesOf(VV vertex)", "diff": ["-        public List<? extends EE> edgesOf(VV vertex)", "+        public Set<? extends EE> edgesOf(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa07eec9c1b43fda2c5f6d8845c063cd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "         private UndirectedEdgeContainer<V, E> getEdgeContainer(V vertex)", "signatureAfterChange": "         private UndirectedEdgeContainer<V, E> getEdgeContainer(V vertex)", "diff": ["-                m_vertexMapUndirected.get(vertex);", "+                vertexMapUndirected.get(vertex);", "-                    m_edgeListFactory, vertex);", "-                m_vertexMapUndirected.put(vertex, ec);", "+                    edgeSetFactory, vertex);", "+                vertexMapUndirected.put(vertex, ec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa441c786e0d148a0f773addd47b8c18", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void edgeAdded( EdgeEvent e )", "signatureAfterChange": "     public void edgeAdded( GraphEdgeChangeEvent e )", "diff": ["-    public void edgeAdded( EdgeEvent e ) {", "+    public void edgeAdded( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa50871f9ef978d516eab9361a2edb23", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "         public ListenableUndirectedGraph( Graph base )", "signatureAfterChange": "         public ListenableUndirectedGraph( UndirectedGraph base )", "diff": ["-        public ListenableUndirectedGraph( Graph base ) {", "+        public ListenableUndirectedGraph( UndirectedGraph base ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7c5c67e0e5dc1f7cefe2766bb8e4e9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphDelegator(Graph<V, E> g)", "signatureAfterChange": "     public GraphDelegator(Graph<V, E> g)", "diff": ["-            throw new NullPointerException();", "+            throw new IllegalArgumentException(\"g must not be null.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaad48874719aeb96d80a4c690c9ea70", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     public Graph<V, E> getMinimalTriangulation()", "signatureAfterChange": "\r     public UndirectedGraph<V, E> getMinimalTriangulation()", "diff": ["-    public Graph<V, E> getMinimalTriangulation()\r", "+    public UndirectedGraph<V, E> getMinimalTriangulation()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaca2f6d9d61d2e657ec55c71105584c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/util/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "7bbdcf37663f36f80ef1f366555eafdbd618736a", "commitAfterChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testComparatorChain()", "signatureAfterChange": "     public void testComparatorChain()", "diff": ["-        comparatorChain.addComparatorAfter(new Mod3GroupComparator());", "+        comparatorChain.appendComparator(new Mod3GroupComparator());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae2799eab8f5e4afbdde544a2c20c03", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "         public List<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "         public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-        public List<E> outgoingEdgesOf(V vertex)", "+        public Set<E> outgoingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab38bf9b77f86cbf4adb60e16c519070", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "         public void removeEdge( Edge e )", "signatureAfterChange": "         public void removeEdge( E e )", "diff": ["-        public void removeEdge( Edge e ) {", "+        public void removeEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab38f16c19e484a044ad22c2032961fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/RandomGraphHelper.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\") \tpublic static void addEdges(         Graph target,         List sourceVertices,         List destVertices,         int numEdges)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\") \tpublic static void addEdges(         Graph target,         List sourceVertices,         List destVertices,         int numEdges)", "diff": ["-                    sourceVertices.get(_rand.nextInt(", "+                    sourceVertices.get(randSingleton.nextInt(", "-                    destVertices.get(_rand.nextInt(destSize))) == null) {", "+                    destVertices.get(randSingleton.nextInt(destSize))) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abbae1bbac787118281bd183f876636f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public void addNeighbor(V v)", "signatureAfterChange": "          public void addNeighbor(V v)", "diff": ["-            ModifiableInteger count = m_neighborCounts.get(v);", "+            ModifiableInteger count = neighborCounts.get(v);", "-                m_neighborCounts.put(v, count);", "+                neighborCounts.put(v, count);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abbc7ec0c130f2b7d036fde6e5d0db39", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private IntrusiveEdge getIntrusiveEdge(E e)", "signatureAfterChange": "      private IntrusiveEdge getIntrusiveEdge(E e)", "diff": ["-        return m_edgeMap.get(e);", "+        return edgeMap.get(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc672871d35771211b07ba807bfc8a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceComparatorChainBase.java", "commitBeforeChange": "7bbdcf37663f36f80ef1f366555eafdbd618736a", "commitAfterChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addComparatorAfter(EquivalenceComparator comparatorAfter)", "signatureAfterChange": "     public void appendComparator(EquivalenceComparator comparatorAfter)", "diff": ["-    public void addComparatorAfter(EquivalenceComparator comparatorAfter)", "+    public void appendComparator(EquivalenceComparator comparatorAfter)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac85a73fbc3bc1cfaac6f29c81857bd4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void edgeAdded(GraphEdgeChangeEvent<V, E> e)", "signatureAfterChange": "     public void edgeAdded(GraphEdgeChangeEvent<V, E> e)", "diff": ["-        V source = m_graph.getEdgeSource(edge);", "-        V target = m_graph.getEdgeTarget(edge);", "+        V source = graph.getEdgeSource(edge);", "+        V target = graph.getEdgeTarget(edge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace8f52abff27ef3c1dac832d324996d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean containsVertex( Object v )", "signatureAfterChange": "     public boolean containsVertex( V v )", "diff": ["-    public boolean containsVertex( Object v ) {", "+    public boolean containsVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1b83a6775e1cce271bd1f7a46efa31", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isAllowingLoops()", "signatureAfterChange": "     public boolean isAllowingLoops()", "diff": ["-        return m_allowingLoops;", "+        return allowingLoops;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8279bfeeb4d069af6f35e206c16eb8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         protected void setEdge(E edge)", "signatureAfterChange": "         protected void setEdge(localE edge)", "diff": ["-        protected void setEdge(E edge)", "+        protected void setEdge(localE edge)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae61eecb744d2451f48c183c96b6ddf2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Set<E> edgesOf(V vertex)", "signatureAfterChange": "     public Set<E> edgesOf(V vertex)", "diff": ["-        return m_specifics.edgesOf(vertex);", "+        return specifics.edgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae96969cbb4590dbeb50bee59444618c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "         public Set<EE> getUnmodifiableOutgoingEdges()", "signatureAfterChange": "         public Set<EE> getUnmodifiableOutgoingEdges()", "diff": ["-            if (m_unmodifiableOutgoing == null) {", "-                m_unmodifiableOutgoing =", "-                    Collections.unmodifiableSet(m_outgoing);", "+            if (unmodifiableOutgoing == null) {", "+                unmodifiableOutgoing =", "+                    Collections.unmodifiableSet(outgoing);", "-            return m_unmodifiableOutgoing;", "+            return unmodifiableOutgoing;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aefe0039f6e681cfbbdb53e98783d497", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Edge getEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E getEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge getEdge( Object sourceVertex, Object targetVertex ) {", "+    public E getEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af11304990df2f1cd1f9c9dc8213f2e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( E e )", "diff": ["-    public boolean addEdge( Edge e ) {", "+    public boolean addEdge( E e ) {", "-        Object sourceVertex = e.getSource(  );", "-        Object targetVertex = e.getTarget(  );", "+        V sourceVertex = e.getSource(  );", "+        V targetVertex = e.getTarget(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af9252a3e6caf0bc8bb6edf6e123e189", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "b3a0ec34bfe9f80bbed01afff34b232f2ee0880b", "commitAfterChange": "7b2585b4d589a484a3adfe80951dab0b7cbb6ba0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> removeAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> removeAllEdges(V sourceVertex, V targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd0160b8a5873acb54e4bc789a3e43b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DirectedGraphUnion.java", "commitBeforeChange": "684d27d6ebc688dbf24e3f749dae38816b82f3e0", "commitAfterChange": "51364417691421b046a3518ca4b006f616254eda", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Set<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "      public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-        Set<E> r = new HashSet<E>();", "+        Set<E> res = new HashSet<E>();", "-            r.addAll(getG1().outgoingEdgesOf(vertex));", "+            res.addAll(getG1().outgoingEdgesOf(vertex));", "-            r.addAll(getG2().outgoingEdgesOf(vertex));", "+            res.addAll(getG2().outgoingEdgesOf(vertex));", "-        return Collections.unmodifiableSet(r);", "+        return Collections.unmodifiableSet(res);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe8af879e540c8275a4985ddacb4053", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/GraphOrdering.java", "commitBeforeChange": "acfe801335f16a87725836b305b3fe772d6f9b74", "commitAfterChange": "23231d0c46fcd2dad4257a1c2704491830fb115a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        sb.append(ArrayUtil.toString(vertexArray));", "+        sb.append(Arrays.toString(vertexArray));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02817a8da27082b3509740ee7ae5cfa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "dd9159de978ae75b36012188fd03f0f1795dca1e", "commitAfterChange": "b72e01143a1e17e6591292126844a7d79772633b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testStronglyConnected4()", "signatureAfterChange": "      public void testStronglyConnected4()", "diff": ["-        StrongConnectivityInspector<Integer, String> sc =", "+        StrongConnectivityAlgorithm<Integer, String> sc ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03899a5f26df0f5f91963486754ced3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean removeEdge( Edge e )", "signatureAfterChange": "     public boolean removeEdge( E e )", "diff": ["-    public boolean removeEdge( Edge e ) {", "+    public boolean removeEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b07210e0b78a7e682626368163286270", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public Set<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-        return m_specifics.incomingEdgesOf(vertex);", "+        return specifics.incomingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b08dcbc3ed263001eeaeb8ae6ec7053b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         protected Object provideNextVertex(  )", "signatureAfterChange": "         protected V provideNextVertex(  )", "diff": ["-        protected Object provideNextVertex(  ) {", "-            Object v = super.provideNextVertex(  );", "+        protected V provideNextVertex(  ) {", "+            V v = super.provideNextVertex(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b096127029a43adeaf2788e267a71d7d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DirectedWeightedEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DirectedWeightedEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public DirectedWeightedEdge( V sourceVertex, V targetVertex )", "diff": ["-    public DirectedWeightedEdge( Object sourceVertex, Object targetVertex ) {", "+    public DirectedWeightedEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a154e31f3d75a3f5efe157d9a0b0fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r     public CliqueMinimalSeparatorDecomposition(SimpleGraph<V, E> g)", "signatureAfterChange": "\r     public CliqueMinimalSeparatorDecomposition(UndirectedGraph<V, E> g)", "diff": ["-    public CliqueMinimalSeparatorDecomposition(SimpleGraph<V, E> g)\r", "+    public CliqueMinimalSeparatorDecomposition(UndirectedGraph<V, E> g)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c9298679819266470a01f4d94f62a9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public int degreeOf(V vertex)", "signatureAfterChange": "     public int degreeOf(V vertex)", "diff": ["-        return m_specifics.degreeOf(vertex);", "+        return specifics.degreeOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ed691dbf8193d107968e768fcd1566", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "         public void removeIncomingEdge(E e)", "signatureAfterChange": "         public void removeIncomingEdge(EE e)", "diff": ["-        public void removeIncomingEdge(E e)", "+        public void removeIncomingEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2468cbc4c5d005a3a98e2e809e30ad7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public Set<E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex)", "diff": ["-        return m_specifics.outgoingEdgesOf(vertex);", "+        return specifics.outgoingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b326bbafe94cf15e75bf9c851710fafc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "     public void setEdgeWeight(E e, double weight)", "signatureAfterChange": "     public void setEdgeWeight(E e, double weight)", "diff": ["-        ((WeightedGraph<V, E>) m_base).setEdgeWeight(e, weight);", "+        ((WeightedGraph<V, E>) base).setEdgeWeight(e, weight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b353914b998b3dbf1aa8e94b7c51daaf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void exportAdjacencyMatrix(Writer output, DirectedGraph  g)", "signatureAfterChange": "     public void exportAdjacencyMatrix(Writer output, DirectedGraph  g)", "diff": ["-            // TODO modify GraphHelper to return neighbor sets", "+            // TODO modify Graphs to return neighbor sets", "-                    GraphHelper.successorListOf(g, from));", "+                    Graphs.successorListOf(g, from));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37d2fe916a6d4cac18e6e5ab0d6528b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public int degreeOf(V vertex)", "signatureAfterChange": "     public int degreeOf(V vertex)", "diff": ["-        ((UndirectedGraph<V,E>) m_base).degreeOf(vertex);", "+        ((UndirectedGraph<V,E>) base).degreeOf(vertex);", "-        for (E e : m_base.edgesOf(vertex)) {", "+        for (E e : base.edgesOf(vertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3bf543dbd247f8f80f468e81f30fa70", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private VertexTraversalEvent<V> createVertexTraversalEvent(V vertex)", "signatureAfterChange": "      private VertexTraversalEvent<V> createVertexTraversalEvent(V vertex)", "diff": ["-            m_reusableVertexEvent.setVertex(vertex);", "+            reusableVertexEvent.setVertex(vertex);", "-            return m_reusableVertexEvent;", "+            return reusableVertexEvent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d68ab022eb3a337cbecf5efd1f9f66", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      private List<Set<V>> lazyFindConnectedSets()", "signatureAfterChange": "      private List<Set<V>> lazyFindConnectedSets()", "diff": ["-        if (m_connectedSets == null) {", "-            m_connectedSets = new ArrayList<Set<V>>();", "+        if (connectedSets == null) {", "+            connectedSets = new ArrayList<Set<V>>();", "-            Set vertexSet = m_graph.vertexSet();", "+            Set vertexSet = graph.vertexSet();", "-                    new BreadthFirstIterator<V,E>(m_graph, null);", "+                    new BreadthFirstIterator<V,E>(graph, null);", "-        return m_connectedSets;", "+        return connectedSets;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3e5f782be95d45d2d9690513c7dc7c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public Set<EE> edgesOf(VV vertex)", "signatureAfterChange": "         public Set<EE> edgesOf(VV vertex)", "diff": ["-            return m_graph.edgesOf(vertex);", "+            return graph.edgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3fc8f8f0d88dee7e1956a1bae9b119f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/HamiltonianCycleTest.java", "commitBeforeChange": "40bf8c7c8736ae974ebda20b591cad2363132552", "commitAfterChange": "091e3a93111253d6f8a873c9ccbd9df0c1d9cfc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testHamiltonianCycle()", "signatureAfterChange": "     public void testHamiltonianCycle()", "diff": ["-            HamiltonianCycle.getApproximateOptimal(completeGraph).size() == 6);", "+            HamiltonianCycle.getApproximateOptimalForCompleteGraph(", "+                completeGraph).size() == 6);", "-            HamiltonianCycle.getApproximateOptimal(completeGraph) == null);", "+            HamiltonianCycle.getApproximateOptimalForCompleteGraph(", "+                completeGraph) == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b49035e5efb1ecc152c20ce549ccdc22", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-        return m_delegate.getAllEdges(sourceVertex, targetVertex);", "+        return delegate.getAllEdges(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4de54935da46c657144c8a211c38951", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "96d44a9ae6e3d3923e0657aee3df5d8a34da488f", "commitAfterChange": "fd6ade3d5df69f4e95d0e8055a355f4e596aa63c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public double shortestDistance(V a, V b)", "signatureAfterChange": "     public double shortestDistance(V a, V b)", "diff": ["-        return d[vertices.indexOf(a)][vertices.indexOf(b)];", "+        return d[vertexIndices.get(a)][vertexIndices.get(b)];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e2f3c669d8fe5a5a40db9773f813fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "         public List<EE> getUnmodifiableVertexEdges()", "signatureAfterChange": "         public Set<EE> getUnmodifiableVertexEdges()", "diff": ["-        public List<EE> getUnmodifiableVertexEdges()", "+        public Set<EE> getUnmodifiableVertexEdges()", "-                    Collections.unmodifiableList(m_vertexEdges);", "+                    Collections.unmodifiableSet(m_vertexEdges);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b58016004cc9dcdc3329b6b6657335ae", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private boolean end(List<V> candidates, List<V> already_found)", "signatureAfterChange": "      private boolean end(List<V> candidates, List<V> already_found)", "diff": ["-                if (m_graph.containsEdge(found, candidate)) {", "+                if (graph.containsEdge(found, candidate)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7827a987b1c6159b73e215c56c90096", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractBaseGraph(EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "signatureAfterChange": "     public AbstractBaseGraph(EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "diff": ["-        m_edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "-        m_edgeFactory = ef;", "-        m_allowingLoops = allowLoops;", "-        m_allowingMultipleEdges = allowMultipleEdges;", "+        edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "+        edgeFactory = ef;", "+        allowingLoops = allowLoops;", "+        allowingMultipleEdges = allowMultipleEdges;", "-        m_specifics = createSpecifics();", "+        specifics = createSpecifics();", "-        m_edgeListFactory = new ArrayListFactory<V,E>();", "+        this.edgeSetFactory = new ArrayListFactory<V,E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85470007520885086e2ac4fe610a8bd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public boolean removeEdge(E e)", "signatureAfterChange": "     public boolean removeEdge(E e)", "diff": ["-        return m_delegate.removeEdge(e);", "+        return delegate.removeEdge(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b89cdcf4d65820e9f462adc12254fa62", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/BreadthFirstIteratorTest.java", "commitBeforeChange": "2955193f2c773802cdf5e2830661d2b9bb1e4d77", "commitAfterChange": "e9a771f827ef970ca3f917379fbfaeea59db179e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       AbstractGraphIterator createIterator( Graph g, Object vertex )", "signatureAfterChange": "       AbstractGraphIterator createIterator( DirectedGraph g, Object vertex )", "diff": ["-    AbstractGraphIterator createIterator( Graph g, Object vertex ) {", "-        AbstractGraphIterator i = new BreadthFirstIterator( g, vertex, false );", "+    AbstractGraphIterator createIterator( DirectedGraph g, Object vertex ) {", "+        AbstractGraphIterator i = new BreadthFirstIterator( g, vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8b3046d78b9b397108d3988c180221b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "      private void addEdgesUsingFilter(Set<E> edgeSet, Set<E> filter)", "signatureAfterChange": "      private void addEdgesUsingFilter(Set<E> edgeSet, Set<E> filter)", "diff": ["-            V sourceVertex = m_base.getEdgeSource(e);", "-            V targetVertex = m_base.getEdgeTarget(e);", "+            V sourceVertex = base.getEdgeSource(e);", "+            V targetVertex = base.getEdgeTarget(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b922fe6d0013a173c01c700ca41bdb82", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean containsEdge(E e)", "signatureAfterChange": "     public boolean containsEdge(Edge e)", "diff": ["-    public boolean containsEdge(E e)", "+    public boolean containsEdge(Edge e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97cc162b0be4ecffa4d787bd6827c8a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     public Object clone()", "diff": ["-            newGraph.m_edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "+            newGraph.edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "-            newGraph.m_edgeFactory = this.m_edgeFactory;", "-            newGraph.m_unmodifiableEdgeSet = null;", "-            newGraph.m_unmodifiableVertexSet = null;", "+            newGraph.edgeFactory = this.edgeFactory;", "+            newGraph.unmodifiableEdgeSet = null;", "+            newGraph.unmodifiableVertexSet = null;", "-            newGraph.m_specifics = newGraph.createSpecifics();", "+            newGraph.specifics = newGraph.createSpecifics();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9bd84a05b17f134c246b0e0b39a45db", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected Object provideNextVertex(  )", "signatureAfterChange": "     protected V provideNextVertex(  )", "diff": ["-    protected Object provideNextVertex(  ) {", "-        return m_queue.removeFirst(  );", "+    protected V provideNextVertex(  ) {", "+        return m_queue.remove(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba22315fed380e39ca8143dec1499e95", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "2955193f2c773802cdf5e2830661d2b9bb1e4d77", "commitAfterChange": "e9a771f827ef970ca3f917379fbfaeea59db179e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ConnectivityInspector( Graph g )", "signatureAfterChange": "     public ConnectivityInspector( UndirectedGraph g )", "diff": ["-    public ConnectivityInspector( Graph g ) {", "+    public ConnectivityInspector( UndirectedGraph g ) {", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf7cc2117217a71a9e5366e12ba67c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/DijkstraShortestPathTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testConstructor()", "signatureAfterChange": "     public void testConstructor()", "diff": ["-                    m_e13, m_e12, m_e24", "+                    e13, e12, e24"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbdb6fe7ba52a82f63df42c8b991dd00", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public EdgeFactory<V, E> getEdgeFactory()", "signatureAfterChange": "     public EdgeFactory<V, E> getEdgeFactory()", "diff": ["-        return m_delegate.getEdgeFactory();", "+        return delegate.getEdgeFactory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca9429025082a1315db721bdb0a2efa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void encounterStartVertex()", "signatureAfterChange": "      private void encounterStartVertex()", "diff": ["-        encounterVertex(m_startVertex, null);", "-        m_startVertex = null;", "+        encounterVertex(startVertex, null);", "+        startVertex = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb1141a7022949210525803c719929e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "3dfe7bd3c3baf72541946589aad20525c29233c0", "commitAfterChange": "fccf6bb4d3e8a21a58d8a80528b6c0a5436cab7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public JGraphModelAdapter( ListenableGraph g )", "signatureAfterChange": "     public JGraphModelAdapter( Graph g )", "diff": ["-    public JGraphModelAdapter( ListenableGraph g ) {", "+    public JGraphModelAdapter( Graph g ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd7b0c8c488b9b2696662667aee777af", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSet.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Object getContext()", "signatureAfterChange": "      public C getContext()", "diff": ["-    public Object getContext()", "+    public C getContext()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdf42503c3e672f4d8b9cc1c96197876", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> removeAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> removeAllEdges(V sourceVertex, V targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be62da042aa7bdba0913a746899b7945", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-        if (containsVertex(v) && m_base.containsVertex(v)) {", "+        if (containsVertex(v) && base.containsVertex(v)) {", "-        return m_vertexSet.remove(v);", "+        return vertexSet.remove(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beef2800c72958e9846406f105badea8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/PartiteRandomGraphGenerator.java", "commitBeforeChange": "e38751763cc06794af1d537c45ae97f02f0d0379", "commitAfterChange": "9bdf3beaee95f9c7f5568983e723fe15aeedb142", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "signatureAfterChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "diff": ["-                RandomGraphs.addVertices(", "+                RandomGraphHelper.addVertices(", "-                RandomGraphs.addEdges(", "+                RandomGraphHelper.addEdges("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf17771853e9f934ea5bb41640820230", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "0997a58f5471f09bb9fdcb21da80e929c7b2bb23", "commitAfterChange": "9350cdef6b0d2c87575b39e1606fd2378047d04a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public ConnectivityInspector( UndirectedGraph g )", "signatureAfterChange": "     public ConnectivityInspector( Graph g )", "diff": ["-    public ConnectivityInspector( UndirectedGraph g ) {", "+    public ConnectivityInspector( Graph g ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf3b1af42e7cf55d25fd1dfb60f5d6b0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/UndirectedGraphUnion.java", "commitBeforeChange": "5fd52feef7dfccbb0b591fde0bda240336fc10d1", "commitAfterChange": "c47aefcfe74648da036d5e9f46b58264738e055c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "            UndirectedGraphUnion(         UndirectedGraph<V, E> g1,         UndirectedGraphUnion<V, E> g2,         WeightCombiner operator)", "signatureAfterChange": "       UndirectedGraphUnion(             UndirectedGraph<V, E> g1,             UndirectedGraph<V, E> g2,             WeightCombiner operator)", "diff": ["+", "+    UndirectedGraphUnion(", "+            UndirectedGraph<V, E> g1,", "+            UndirectedGraph<V, E> g2,", "+            WeightCombiner operator)", "+    {", "+        super(g1, g2, operator);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4cee634b1588190c3327e4a2a0b7c4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "96d44a9ae6e3d3923e0657aee3df5d8a34da488f", "commitAfterChange": "fd6ade3d5df69f4e95d0e8055a355f4e596aa63c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private GraphPath<V, E> getShortestPathImpl(V a, V b)", "signatureAfterChange": "      private GraphPath<V, E> getShortestPathImpl(V a, V b)", "diff": ["-        int v_a = vertices.indexOf(a);", "-        int v_b = vertices.indexOf(b);", "+        int v_a = vertexIndices.get(a);", "+        int v_b = vertexIndices.get(b);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf86a1d4ad59684600fd162d2ae3fa09", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public void vertexRemoved( VertexEvent e )", "signatureAfterChange": "         public void vertexRemoved( GraphVertexChangeEvent e )", "diff": ["-        public void vertexRemoved( VertexEvent e ) {", "+        public void vertexRemoved( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9662f58c6f7a1656b28eb4550980c6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/DepthFirstIteratorTest.java", "commitBeforeChange": "2955193f2c773802cdf5e2830661d2b9bb1e4d77", "commitAfterChange": "e9a771f827ef970ca3f917379fbfaeea59db179e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       AbstractGraphIterator createIterator( Graph g, Object vertex )", "signatureAfterChange": "       AbstractGraphIterator createIterator( DirectedGraph g, Object vertex )", "diff": ["-    AbstractGraphIterator createIterator( Graph g, Object vertex ) {", "-        AbstractGraphIterator i = new DepthFirstIterator( g, vertex, false );", "+    AbstractGraphIterator createIterator( DirectedGraph g, Object vertex ) {", "+        AbstractGraphIterator i = new DepthFirstIterator( g, vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff35c4bb3ee29167e37ed3194794f36", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         protected void setEdge(EE e)", "signatureAfterChange": "         protected void setEdge(EE e)", "diff": ["-            m_edge = e;", "+            this.edge = e;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c031efa375d6b4b37621d5241eeaf989", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void vertexRemoved( VertexEvent e )", "signatureAfterChange": "     public void vertexRemoved( GraphVertexChangeEvent e )", "diff": ["-    public void vertexRemoved( VertexEvent e ) {", "+    public void vertexRemoved( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d7a93625cfa27929d5bc671972fae9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/UndirectedEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public UndirectedEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public UndirectedEdge( V sourceVertex, V targetVertex )", "diff": ["-    public UndirectedEdge( Object sourceVertex, Object targetVertex ) {", "+    public UndirectedEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c109f6bceeb4bdb2910a7eaea3f3a676", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/MaximumWeightBipartiteMatching.java", "commitBeforeChange": "fa16037e522e343cf4408ba62ee326e9e516b6f7", "commitAfterChange": "f2de77a20d36da53df6cfaa8a1575a485b03dfb8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void adjustVertexWeights(Map<V, List<E>> reachableVerticies)", "signatureAfterChange": " \t \tprivate void adjustVertexWeights(Map<V, List<E>> reachableVertices)", "diff": ["-\tprivate void adjustVertexWeights(Map<V, List<E>> reachableVerticies) {", "+\tprivate void adjustVertexWeights(Map<V, List<E>> reachableVertices) {", "-\t\tfor (V vertex : reachableVerticies.keySet()) {", "+\t\tfor (V vertex : reachableVertices.keySet()) {", "-\t\tfor (V vertex : reachableVerticies.keySet()) {", "+\t\tfor (V vertex : reachableVertices.keySet()) {", "-\t\t\t\tif (hasVertexBeenProcessed.get(Graphs.getOppositeVertex(graph, edge, vertex)) && !reachableVerticies.keySet().contains(Graphs.getOppositeVertex(graph, edge, vertex)) && reducedWeight(edge) < beta)", "+\t\t\t\tif (hasVertexBeenProcessed.get(Graphs.getOppositeVertex(graph, edge, vertex)) && !reachableVertices.keySet().contains(Graphs.getOppositeVertex(graph, edge, vertex)) && reducedWeight(edge) < beta)", "-\t\tfor (V vertex : reachableVerticies.keySet()) {", "+\t\tfor (V vertex : reachableVertices.keySet()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c15d703d764305542de55cb307c3119d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E addEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge addEdge( Object sourceVertex, Object targetVertex ) {", "+    public E addEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1a425c747d84bd64270fa10268ed51a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "         public FlyweightVertexEvent(Object eventSource, int type, V vertex)", "signatureAfterChange": "         public FlyweightVertexEvent(Object eventSource, int type, VV vertex)", "diff": ["-        public FlyweightVertexEvent(Object eventSource, int type, V vertex)", "+        public FlyweightVertexEvent(Object eventSource, int type, VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c24e642370f801c70decf5091bbb2111", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "signatureAfterChange": "     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "diff": ["-        currentSource   = vertexExtended0(source);", "-        currentSink     = vertexExtended0(sink);", "+        currentSource   = extendedVertex(source);", "+        currentSink     = extendedVertex(sink);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2d7335b2b7a74803f039e71f1e52ed2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultUndirectedWeightedEdge.java", "commitBeforeChange": "b1382aa25544721cf9f8cd8ebbac3a2da4113463", "commitAfterChange": "9451ac3a25b913de295a83110c5c80ef90861e2a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean equals( Object o )", "signatureAfterChange": "     public boolean equals( Object o )", "diff": ["-        if( o instanceof UndirectedWeightedEdge ) {", "-            UndirectedWeightedEdge e = (UndirectedWeightedEdge) o;", "+        if( o instanceof WeightedElement ) {", "+            WeightedElement e = (WeightedElement) o;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2de94503f11f5ff1c48c75268bb5169", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "f4156d7c952ee1195247374c8e91f8acb91d0e89", "commitAfterChange": "5ee34079071632f605ef7ef7b15401e5e3c410d4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public double getEdgeWeight(E e)", "signatureAfterChange": "      public double getEdgeWeight(E e)", "diff": ["-            return operator.operate(g1.getEdgeWeight(e), g2.getEdgeWeight(e));", "+            return operator.combine(g1.getEdgeWeight(e), g2.getEdgeWeight(e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e743c201154caa81aa7b1b5635eb2a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "         public void addIncomingEdge( Edge e )", "signatureAfterChange": "         public void addIncomingEdge( E e )", "diff": ["-        public void addIncomingEdge( Edge e ) {", "+        public void addIncomingEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c39afa9669d8b8e6e4d4a684e38ac43a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public E addEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E addEdge(V sourceVertex, V targetVertex)", "diff": ["-        List<E> edges = m_base.getAllEdges(sourceVertex, targetVertex);", "+        Set<E> edges = m_base.getAllEdges(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3dcccfae202a21ec4cb11f18e2d0ec9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "e38751763cc06794af1d537c45ae97f02f0d0379", "commitAfterChange": "9bdf3beaee95f9c7f5568983e723fe15aeedb142", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public E addEdge(V sourceVertex, V targetVertex, E e)", "signatureAfterChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "diff": ["-    public E addEdge(V sourceVertex, V targetVertex, E e)", "+    public boolean addEdge(V sourceVertex, V targetVertex, E e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3e8282941edb831f77b1bfe9fce4370", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int degreeOf( Object vertex )", "signatureAfterChange": "     public int degreeOf( V vertex )", "diff": ["-    public int degreeOf( Object vertex ) {", "+    public int degreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c428f0f5e8c5b1d1bfc7572786eb90c5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public ClosestFirstIterator(Graph<V, E> g, V startVertex, double radius)", "signatureAfterChange": "     public ClosestFirstIterator(Graph<V, E> g, V startVertex, double radius)", "diff": ["-        m_radius = radius;", "+        this.radius = radius;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4383e0ea08a4939f52d683bc05b8168", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected abstract void encounterVertexAgain( Object vertex, Edge edge );", "signatureAfterChange": "     protected abstract void encounterVertexAgain( V vertex, E edge );", "diff": ["-    protected abstract void encounterVertexAgain( Object vertex, Edge edge );", "+    protected abstract void encounterVertexAgain( V vertex, E edge );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45c231454fbcb81cc599b68dc15454e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "-        List<E> forwardList = super.getAllEdges(sourceVertex, targetVertex);", "-", "+        Set<E> forwardList = super.getAllEdges(sourceVertex, targetVertex);", "+        ", "-", "-        List<E> reverseList = super.getAllEdges(targetVertex, sourceVertex);", "-        List<E> list = new ArrayList<E>(forwardList.size() + reverseList.size());", "+        ", "+        Set<E> reverseList = super.getAllEdges(targetVertex, sourceVertex);", "+        Set<E> list = new ArrayUnenforcedSet<E>(", "+            forwardList.size() + reverseList.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c493840c1def0cb75629568d020e6c96", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public int inDegreeOf( Object vertex )", "signatureAfterChange": "     public int inDegreeOf( V vertex )", "diff": ["-    public int inDegreeOf( Object vertex ) {", "+    public int inDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4bbe7073da1583ca81cbe7838b20a02", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/KuhnMunkresMinimalWeightBipartitePerfectMatchingTest.java", "commitBeforeChange": "1a365a6520be3e72e608d1c0773da5ac343e855c", "commitAfterChange": "cc219b560ec6d79a360e71173ccfd2e8553dab90", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "       static KuhnMunkresMinimalWeightBipartitePerfectMatching<V, WeightedEdge>         match(final double[][] costMatrix, final int partitionCardinality)", "signatureAfterChange": "       static KuhnMunkresMinimalWeightBipartitePerfectMatching<V, WeightedEdge>         match(final double[][] costMatrix, final int partitionCardinality)", "diff": ["-            new SimpleWeightedBipartiteGraphMatrixBuilder<V, WeightedEdge>()", "+            new SimpleWeightedBipartiteGraphMatrixGenerator<V, WeightedEdge>()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c58cf6b1541811d322449fe13d154ea4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "diff": ["-        return m_edgeSet.remove(e) ? e : null;", "+        return edgeSet.remove(e) ? e : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5957d3d5168ebf893166d2a24ab9d20", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public DefaultEdge( V sourceVertex, V targetVertex )", "diff": ["-    public DefaultEdge( Object sourceVertex, Object targetVertex ) {", "+    public DefaultEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ca998164198b3fb3f96813833b890d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void resetVertexData()", "signatureAfterChange": "     private void resetVertexData()", "diff": ["-        Iterator<VertexData<V>> iter = m_vertexToVertexData.values().iterator();", "+        Iterator<VertexData<V>> iter = vertexToVertexData.values().iterator();", "-            data.m_discovered = false;", "-            data.m_finished = false;", "+            data.discovered = false;", "+            data.finished = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60f3098b03dd861b5c94cd3a73d6f1e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 44, "signatureBeforeChange": "         public SubgraphDirectedWeighted( Graph base, Set vertexSubset,             Set edgeSubset )", "signatureAfterChange": "         public SubgraphDirectedWeighted( DirectedWeightedGraph base,             Set vertexSubset, Set edgeSubset )", "diff": ["-        public SubgraphDirectedWeighted( Graph base, Set vertexSubset,", "-            Set edgeSubset ) {", "+        public SubgraphDirectedWeighted( DirectedWeightedGraph base,", "+            Set vertexSubset, Set edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6ad2fe2bade7f99c72c65790449f3ca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Set<V> vertexSet()", "signatureAfterChange": "     public Set<V> vertexSet()", "diff": ["-        return m_delegate.vertexSet();", "+        return delegate.vertexSet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bca59597bf437ee6d909889235be89", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-            Set<E> baseEdges = m_base.getAllEdges(sourceVertex, targetVertex);", "+            Set<E> baseEdges = base.getAllEdges(sourceVertex, targetVertex);", "-                if (m_edgeSet.contains(e)) { // add if subgraph also contains", "+                if (edgeSet.contains(e)) { // add if subgraph also contains"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c72bf5d5fc3d80164b23a5319c8af090", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public boolean containsVertex( Object v )", "signatureAfterChange": "     public boolean containsVertex( V v )", "diff": ["-    public boolean containsVertex( Object v ) {", "+    public boolean containsVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c749a18d2f24a1be8ab9b0d63abccab3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         protected void setVertex(V vertex)", "signatureAfterChange": "         protected void setVertex(VV vertex)", "diff": ["-        protected void setVertex(V vertex)", "+        protected void setVertex(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c79244a87066ed4079a7bea0ad904274", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public Set<E> incomingEdgesOf(V vertex)", "diff": ["-    public List<E> incomingEdgesOf(V vertex)", "+    public Set<E> incomingEdgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7b8f40d1bb9a95130948e9d7c24fe0e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      protected Graph<V,E> getBase()", "signatureAfterChange": "      protected Graph<V,E> getBase()", "diff": ["-        return m_base;", "+        return base;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7f9252c8b1be06011f62e5a05cfb957", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathCostTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testKShortestPathCosts(Graph graph)", "signatureAfterChange": "      public void testKShortestPathCosts(Graph graph)", "diff": ["-                        pathFinder.getPathElements(targetVertex);", "-                    RankingPathElement pathElement =", "-                        (RankingPathElement) pathElements.get(0);", "+                        pathFinder.getPaths(targetVertex);", "+                    GraphPath pathElement =", "+                        (GraphPath) pathElements.get(0);", "-                        pathElement = (RankingPathElement) pathElements.get(i);", "+                        pathElement = (GraphPath) pathElements.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8bd8c4a8625eeb266aa6ea3e7dc82e0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean addVertex( Object v )", "signatureAfterChange": "     public boolean addVertex( V v )", "diff": ["-    public boolean addVertex( Object v ) {", "+    public boolean addVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ea0f17d2d8f570fdb4856b6004ea4f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public ListenableUndirectedWeightedGraph( Graph base )", "signatureAfterChange": "         public ListenableUndirectedWeightedGraph( UndirectedWeightedGraph base )", "diff": ["-        public ListenableUndirectedWeightedGraph( Graph base ) {", "+        public ListenableUndirectedWeightedGraph( UndirectedWeightedGraph base ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ec6529064fb48b703d73744e880d60", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Edge removeEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E removeEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge removeEdge( Object sourceVertex, Object targetVertex ) {", "-        Edge e = getEdge( sourceVertex, targetVertex );", "+    public E removeEdge( V sourceVertex, V targetVertex ) {", "+        E e = getEdge( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f6fb11bf30726322bd708e7be71b0f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/UpdateAuthority.java", "commitBeforeChange": "b3a0ec34bfe9f80bbed01afff34b232f2ee0880b", "commitAfterChange": "7b2585b4d589a484a3adfe80951dab0b7cbb6ba0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public List removeAllEdges(Object sourceVertex, Object targetVertex);", "signatureAfterChange": "     public Set removeAllEdges(Object sourceVertex, Object targetVertex);", "diff": ["-    public List removeAllEdges(Object sourceVertex, Object targetVertex);", "+    public Set removeAllEdges(Object sourceVertex, Object targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca7e4c17a25174c9bd348e99c27d6a8e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/GraphChangeEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int getType()", "signatureAfterChange": "     public int getType()", "diff": ["-        return m_type;", "+        return type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caccedcf500fc0a4f4d121a3b306da97", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/DijkstraShortestPathTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testConstructor()", "signatureAfterChange": "     public void testConstructor()", "diff": ["-            Arrays.asList(new Edge [] {", "+            Arrays.asList(new DefaultEdge [] {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb3780a3e3f4e5df3ebdfabe346c346a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected boolean removeAllEdges( Edge[] edges )", "signatureAfterChange": "     protected boolean removeAllEdges( E[] edges )", "diff": ["-    protected boolean removeAllEdges( Edge[] edges ) {", "+    protected boolean removeAllEdges( E[] edges ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb60fdb2c3a6dd972dd6dd7b2f522be3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public DirectedEdge<V> createEdge( V source, V target )", "diff": ["-        public Edge createEdge( Object source, Object target ) {", "+        public DirectedEdge<V> createEdge( V source, V target ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb8f391bc85d5e531f2876146e28f45e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/edge/DefaultUndirectedWeightedEdgeTest.java", "commitBeforeChange": "b1382aa25544721cf9f8cd8ebbac3a2da4113463", "commitAfterChange": "9451ac3a25b913de295a83110c5c80ef90861e2a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEqualsObject(  )", "signatureAfterChange": "     public void testEqualsObject(  )", "diff": ["-        e5.setWeight( UndirectedWeightedEdge.DEFAULT_EDGE_WEIGHT );", "+        e5.setWeight( WeightedElement.DEFAULT_WEIGHT );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbcb16777b6829029d8ef99663ec2966", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setEdgeSetFactory(EdgeSetFactory<V,E> edgeListFactory)", "signatureAfterChange": "     public void setEdgeSetFactory(EdgeSetFactory<V,E> edgeListFactory)", "diff": ["-        m_edgeListFactory = edgeListFactory;", "+        this.edgeSetFactory = edgeListFactory;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc21d7946d2ad99c602c8811182fb329", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "bc0edf459db61509a8a89769f512605e140e204b", "commitAfterChange": "be762e0954643fc21a24645a8b9b6765fa5b12ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected boolean areAllEdgesEquivivalant(IsomorphismRelation resultRelation,EquivalenceComparator edgeComparator)", "signatureAfterChange": "     protected boolean areAllEdgesEquivalent(         IsomorphismRelation resultRelation,         EquivalenceComparator edgeComparator)", "diff": ["-\t */", "-\tprotected boolean areAllEdgesEquivivalant(IsomorphismRelation resultRelation,EquivalenceComparator edgeComparator)", "-\t{", "-\t\tboolean checkResult=true;", "-\t\t", "-\t\tif (edgeComparator==null)", "-\t\t{", "-\t\t\t//nothing to check", "-\t\t\treturn true;", "-\t\t}", "-\t\t", "-\t\t", "-\t\ttry", "-\t\t{", "-\t\t\tSet edgeSet = this.graph1.edgeSet();", "-\t\t", "-\t\t\tfor (Iterator iter = edgeSet.iterator(); iter.hasNext();) ", "-\t\t\t{", "-\t\t\t\tEdge currEdge = (Edge) iter.next();", "-\t\t\t\tEdge correspondingEdge = (Edge)resultRelation.getCorrespondence(currEdge,true);", "-\t\t\t\t\t", "-\t\t\t\t//if one edge test fail , fail the whole method", "-\t\t\t\tif (!edgeComparator.equivalenceCompare(\tcurrEdge,", "-\t\t\t\t\t\t\t\t\t\t\t\t\tcorrespondingEdge,", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.graph1,", "-\t\t\t\t\t\t\t\t\t\t\t\t\tthis.graph2))", "-\t\t\t\t{", "-\t\t\t\t\tcheckResult=false;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tcatch (IllegalArgumentException illegal)", "-\t\t{", "-\t\t\tcheckResult=false;", "-\t\t}", "-\t\t", "-\t\t", "-\t\t", "-\t\t", "-\t\treturn checkResult;", "-\t}", "+     */", "+    protected boolean areAllEdgesEquivalent(", "+        IsomorphismRelation resultRelation,", "+        EquivalenceComparator edgeComparator)", "+    {", "+        boolean checkResult = true;", "+", "+        if (edgeComparator == null) {", "+            // nothing to check", "+            return true;", "+        }", "+", "+        try {", "+            Set edgeSet = this.graph1.edgeSet();", "+", "+            for (Iterator iter = edgeSet.iterator(); iter.hasNext();) {", "+                Edge currEdge = (Edge) iter.next();", "+                Edge correspondingEdge =", "+                    (Edge) resultRelation.getCorrespondence(currEdge, true);", "+", "+                // if one edge test fail , fail the whole method", "+                if (!edgeComparator.equivalenceCompare(", "+                        currEdge,", "+                        correspondingEdge,", "+                        this.graph1,", "+                        this.graph2)) {", "+                    checkResult = false;", "+                    break;", "+                }", "+            }", "+        } catch (IllegalArgumentException illegal) {", "+            checkResult = false;", "+        }", "+", "+        return checkResult;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccf4c625b65a0ed2f97153cb4583c34b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathKValuesTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testMaxSizeValue()", "signatureAfterChange": "      public void testMaxSizeValue()", "diff": ["-            assertEquals(finder.getPathElements(\"v1\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v2\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v3\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v4\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v5\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v1\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v2\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v3\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v4\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v5\").size(), maxSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd26ec701d8b6632c152660cda0ae73a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public int inDegreeOf( Object vertex )", "signatureAfterChange": "     public int inDegreeOf( V vertex )", "diff": ["-    public int inDegreeOf( Object vertex ) {", "+    public int inDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd8ae666bad4026dc1dfcaa83420e55", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BlockCutpointGraph.java", "commitBeforeChange": "61dbb1af6c224986e7d12029f65eb7b3fce4e12a", "commitAfterChange": "5dfb58e41ca1578202f9d451a90e9b653291ef83", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void biconnectedComponentFinished(V s, V n)", "signatureAfterChange": "      private void biconnectedComponentFinished(V s, V n)", "diff": ["-        BCGEdge edge = this.stack.pop();", "+        BCGEdge edge = this.stack.removeLast();", "-            edge = this.stack.pop();", "+            edge = this.stack.removeLast();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde3ad528f12a04dad068053fc50986b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected void fireVertexRemoved(V vertex)", "signatureAfterChange": "     protected void fireVertexRemoved(V vertex)", "diff": ["-        for (int i = 0; i < m_vertexSetListeners.size(); i++) {", "-            VertexSetListener<V> l = m_vertexSetListeners.get(i);", "+        for (int i = 0; i < vertexSetListeners.size(); i++) {", "+            VertexSetListener<V> l = vertexSetListeners.get(i);", "-        for (int i = 0; i < m_graphListeners.size(); i++) {", "-            GraphListener<V, E> l = m_graphListeners.get(i);", "+        for (int i = 0; i < graphListeners.size(); i++) {", "+            GraphListener<V, E> l = graphListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce0d7601823cd2d7c04efdd46eeb8e07", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( E e )", "diff": ["-    public boolean addEdge( Edge e ) {", "+    public boolean addEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce5c76fc7e4d64a491ae2d580c10fbd4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void testOutDegreeOf()", "signatureAfterChange": "     public void testOutDegreeOf()", "diff": ["-        assertEquals(2, g.outDegreeOf(m_v1));", "-        assertEquals(1, g.outDegreeOf(m_v2));", "+        assertEquals(2, g.outDegreeOf(v1));", "+        assertEquals(1, g.outDegreeOf(v2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce8ce2c553eefb4d51a5f85fe7ec3c30", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean isSeenVertex(Object vertex)", "signatureAfterChange": "     protected boolean isSeenVertex(Object vertex)", "diff": ["-        return m_seen.containsKey(vertex);", "+        return seen.containsKey(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf312da475402ac30a679d76cd8e6530", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void edgeRemoved( EdgeEvent e )", "signatureAfterChange": "     public void edgeRemoved( GraphEdgeChangeEvent e )", "diff": ["-    public void edgeRemoved( EdgeEvent e ) {", "+    public void edgeRemoved( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf61d567b3cc6173f6cb1169483a8c9f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BellmanFordShortestPathTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testWithNegativeEdges()", "signatureAfterChange": "      public void testWithNegativeEdges()", "diff": ["-        assertEquals(Arrays.asList(new DefaultEdge [] { m_e13, m_e34 }), path);", "+        assertEquals(Arrays.asList(new DefaultEdge [] { e13, e34 }), path);", "-        assertEquals(Arrays.asList(new DefaultEdge [] { m_e15 }), path);", "+        assertEquals(Arrays.asList(new DefaultEdge [] { e15 }), path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf84fda25a901ce00d0e9a7e7bf7cd4f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "bc0edf459db61509a8a89769f512605e140e204b", "commitAfterChange": "be762e0954643fc21a24645a8b9b6765fa5b12ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate IsomorphismRelation findNextIsomorphicGraph()", "signatureAfterChange": "     private IsomorphismRelation findNextIsomorphicGraph()", "diff": ["-\t */", "-\tprivate IsomorphismRelation findNextIsomorphicGraph()", "-\t{", "-\t\tboolean result=false;", "-\t\tIsomorphismRelation resultRelation=null;", "-\t\tif (this.vertexPermuteIter!=null)", "-\t\t{", "-\t\t\t//System.out.println(\"Souce  LabelsGraph=\"+this.lableGraph1);", "-\t\t\twhile (this.vertexPermuteIter.hasNext())", "-\t\t\t{", "-\t\t\t\tcurrVertexPermutation = this.vertexPermuteIter.getNextSet();", "-\t\t\t\t//comapre vertexes", "-\t\t\t\tif (!areVertexSetsOfTheSameEqualityGroup(this.graph1VertexSet,currVertexPermutation))", "-\t\t\t\t{", "-\t\t\t\t\tcontinue;\t//this one is not iso, so try the next one", "-\t\t\t\t}", "-\t\t\t\t//compare edges", "-\t\t\t\tGraphOrdering currPermuteGraph = new GraphOrdering(currVertexPermutation,this.graph2EdgeSet);", "-\t\t\t\t//System.out.println(\"target LablesGraph=\"+currPermuteGraph);", "-\t\t\t\tif (this.lableGraph1.equalsByEdgeOrder(currPermuteGraph))", "-\t\t\t\t{", "-\t\t\t\t\t", "-\t\t\t\t\t//create result object .", "-\t\t\t\t\tresultRelation= new IsomorphismRelation(", "-\t\t\t\t\t\t\tgraph1VertexSet.toArray(),", "-\t\t\t\t\t\t\tcurrVertexPermutation.toArray(),", "-\t\t\t\t\t\t\t(Graph)graph1,", "-\t\t\t\t\t\t\t(Graph)graph2", "-\t\t\t\t\t\t\t);", "-\t\t\t\t\t//if the edge comparator exist , check euqivalce by it", "-\t\t\t\t\tboolean edgeEq = areAllEdgesEquivivalant(resultRelation,this.edgeComparator);", "-\t\t\t\t\tif (edgeEq) //only if euqivalant", "-\t\t\t\t\t{", "-\t\t\t\t\t\tresult=true;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\t", "-\t\t\t\t}", "-\t\t\t\t", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\tif (result==true)", "-\t\t{", "-\t\t\treturn resultRelation;", "-\t\t}", "-\t\telse", "-\t\t{", "-\t\t\treturn null;", "-\t\t}", "-\t}", "+     */", "+    private IsomorphismRelation findNextIsomorphicGraph()", "+    {", "+        boolean result = false;", "+        IsomorphismRelation resultRelation = null;", "+        if (this.vertexPermuteIter != null) {", "+            // System.out.println(\"Souce  LabelsGraph=\"+this.lableGraph1);", "+            while (this.vertexPermuteIter.hasNext()) {", "+                currVertexPermutation = this.vertexPermuteIter.getNextSet();", "+", "+                // compare vertexes", "+                if (!areVertexSetsOfTheSameEqualityGroup(", "+                        this.graph1VertexSet,", "+                        currVertexPermutation)) {", "+                    continue; // this one is not iso, so try the next one", "+                }", "+", "+                // compare edges", "+                GraphOrdering currPermuteGraph =", "+                    new GraphOrdering(", "+                        currVertexPermutation,", "+                        this.graph2EdgeSet);", "+", "+                // System.out.println(\"target LablesGraph=\"+currPermuteGraph);", "+                if (this.lableGraph1.equalsByEdgeOrder(currPermuteGraph)) {", "+                    // create result object.", "+                    resultRelation =", "+                        new IsomorphismRelation(", "+                            graph1VertexSet.toArray(),", "+                            currVertexPermutation.toArray(),", "+                            (Graph) graph1,", "+                            (Graph) graph2);", "+", "+                    // if the edge comparator exists, check equivalence by it", "+                    boolean edgeEq =", "+                        areAllEdgesEquivalent(", "+                            resultRelation,", "+                            this.edgeComparator);", "+                    if (edgeEq) // only if equivalent", "+                    {", "+                        result = true;", "+                        break;", "+                    }", "+                }", "+            }", "+        }", "+", "+        if (result == true) {", "+            return resultRelation;", "+        } else {", "+            return null;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfda29f1cc5f6666b7d2fb856b630e10", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "         private DirectedEdgeContainer<V,E> getEdgeContainer(V vertex)", "signatureAfterChange": "         private DirectedEdgeContainer<V,E> getEdgeContainer(V vertex)", "diff": ["-            DirectedEdgeContainer<V,E> ec = m_vertexMapDirected.get(vertex);", "+            DirectedEdgeContainer<V,E> ec = vertexMapDirected.get(vertex);", "-                ec = new DirectedEdgeContainer<V,E>(m_edgeListFactory, vertex);", "-                m_vertexMapDirected.put(vertex, ec);", "+                ec = new DirectedEdgeContainer<V,E>(edgeSetFactory, vertex);", "+                vertexMapDirected.put(vertex, ec);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cffdbace4438672edec1ea577af841a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEdgeListFactory()", "signatureAfterChange": "     public void testEdgeListFactory()", "diff": ["-        g.setEdgeListFactory(new LinkedListFactory<String, DirEdge<String>>());", "+        g.setEdgeListFactory(new LinkedHashSetFactory<String, DirEdge<String>>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0798b847cb10c26b803d2a2235eb0f6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public void vertexRemoved(GraphVertexChangeEvent<Object> e)", "signatureAfterChange": "         public void vertexRemoved(GraphVertexChangeEvent<Object> e)", "diff": ["-            m_lastRemovedVertex = e.getVertex();", "+            lastRemovedVertex = e.getVertex();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07cd52a74c6bf970e349b1699e4a186", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         protected void setVertex( Object vertex )", "signatureAfterChange": "         protected void setVertex( V vertex )", "diff": ["-        protected void setVertex( Object vertex ) {", "+        protected void setVertex( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0800708327e0a37ae0c74529e46fc45", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/UniformRandomGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "diff": ["-                m_numVertices);", "+                numVertices);", "-            m_numEdges);", "+            numEdges);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c1fab5220c8a55fc7aa5ec4cb90bd3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public int outDegreeOf(V vertex)", "signatureAfterChange": "     public int outDegreeOf(V vertex)", "diff": ["-        for (E e : ((DirectedGraph<V,E>)m_base).outgoingEdgesOf(vertex)) {", "+        for (E e : ((DirectedGraph<V,E>)base).outgoingEdgesOf(vertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f006944665200b3c710419d4d00273", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ShortestPathTestCase.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testPathBetween()", "signatureAfterChange": "     public void testPathBetween()", "diff": ["-        assertEquals(Arrays.asList(new Edge [] { m_e12 }), path);", "+        assertEquals(Arrays.asList(new DefaultEdge [] { m_e12 }), path);", "-        assertEquals(Arrays.asList(new Edge [] {", "+        assertEquals(Arrays.asList(new DefaultEdge [] {", "-        assertEquals(Arrays.asList(new Edge [] {", "+        assertEquals(Arrays.asList(new DefaultEdge [] {", "-        assertEquals(Arrays.asList(new Edge [] {", "+        assertEquals(Arrays.asList(new DefaultEdge [] {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f0d6ca1bee42c966718c0649ee5516", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "         public List<E> getUnmodifiableOutgoingEdges()", "signatureAfterChange": "         public List<EE> getUnmodifiableOutgoingEdges()", "diff": ["-        public List<E> getUnmodifiableOutgoingEdges()", "+        public List<EE> getUnmodifiableOutgoingEdges()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d10bfec3b43ae2e66c00967bcc6f81fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "7518fda5e34fbd0d30800f00a7bcae8e402c0396", "commitAfterChange": "b0ffaa521363d5faf1bf5b397f78265b9ab95ae6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic int[] getEdgeOrder(E e)", "signatureAfterChange": "      public int[] getEdgeNumbers(E e)", "diff": ["-\t", "-\tpublic int[] getEdgeOrder(E e)\t{", "-\t\tV v1 = graph.getEdgeSource(e),", "-\t\t  v2 = graph.getEdgeTarget(e);", "-\t\t", "-\t\tint[] edge = new int[2];", "-\t\tedge[0] = mapVertexToOrder.get(v1);", "-\t\tedge[1] = mapVertexToOrder.get(v2);", "-\t\t", "-\t\treturn edge;", "-\t}", "+", "+    public int[] getEdgeNumbers(E e) {", "+        V v1 = graph.getEdgeSource(e), v2 = graph.getEdgeTarget(e);", "+", "+        int[] edge = new int[2];", "+        edge[0] = mapVertexToOrder.get(v1);", "+        edge[1] = mapVertexToOrder.get(v2);", "+", "+        return edge;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14c693f24ac95ba5d475a81f89bde37", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "         public abstract List<E> outgoingEdgesOf(V vertex);", "signatureAfterChange": "         public abstract Set<E> outgoingEdgesOf(V vertex);", "diff": ["-        public abstract List<E> outgoingEdgesOf(V vertex);", "+        public abstract Set<E> outgoingEdgesOf(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d169db4f1d61f0d995424e225494db2c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/EmptyGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public EmptyGraphGenerator(int size)", "signatureAfterChange": "     public EmptyGraphGenerator(int size)", "diff": ["-        m_size = size;", "+        this.size = size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1f42cd9244fa9b62a057189eab11428", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "320f41319eefcc411b999151096f11d4608d80c3", "commitAfterChange": "94cd40aee7737a3929e0568a1e5623a7da828391", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected Object provideNextVertex(  )", "signatureAfterChange": "     protected Object provideNextVertex(  )", "diff": ["-        return m_queue.remove(  );", "-    }", "+        return m_queue.removeFirst(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ce4ba63daf32815d05b0f97771c6aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2MappingIterator.java", "commitBeforeChange": "5c8fffde1c1a55b2319864925aeede902ff4220f", "commitAfterChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "       public VF2MappingIterator(                     GraphOrdering<V,E> ordering1,                     GraphOrdering<V,E> ordering2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "signatureAfterChange": "       public VF2MappingIterator(                     GraphOrdering<V,E> ordering1,                     GraphOrdering<V,E> ordering2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "diff": ["-        this.stateStack       = new Stack<VF2State<V,E>>();", "+        this.stateStack       = new ArrayDeque<VF2State<V, E>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30c1c0bacad1469919b5b1a0d41cb1d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/GabowStrongConnectivityInspectorTest.java", "commitBeforeChange": "dd9159de978ae75b36012188fd03f0f1795dca1e", "commitAfterChange": "b72e01143a1e17e6591292126844a7d79772633b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testStronglyConnectedGabow4()", "signatureAfterChange": "      public void testStronglyConnectedGabow4()", "diff": ["-        StrongConnectivityInspector<Integer, String> sc =", "+        StrongConnectivityAlgorithm<Integer, String> sc ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d33bf7308f82f63b0cdcc5edbf9dd329", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/GraphVertexChangeEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphVertexChangeEvent( Object eventSource, int type, Object vertex )", "signatureAfterChange": "     public GraphVertexChangeEvent( Object eventSource, int type, V vertex )", "diff": ["-    public GraphVertexChangeEvent( Object eventSource, int type, Object vertex ) {", "+    public GraphVertexChangeEvent( Object eventSource, int type, V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d38d673e954f46f37d57dfb0dc0a92b0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setDefaultEdgeAttributes(AttributeMap defaultEdgeAttributes)", "signatureAfterChange": "     public void setDefaultEdgeAttributes(AttributeMap defaultEdgeAttributes)", "diff": ["-        m_defaultEdgeAttributes = defaultEdgeAttributes;", "+        this.defaultEdgeAttributes = defaultEdgeAttributes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39cdd9fa2d41d67ff63b950a6735fa9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "         public void removeOutgoingEdge( Edge e )", "signatureAfterChange": "         public void removeOutgoingEdge( E e )", "diff": ["-        public void removeOutgoingEdge( Edge e ) {", "+        public void removeOutgoingEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4379c68a9369717f710707cccf07b75", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "         public int inDegreeOf( Object vertex )", "signatureAfterChange": "         public int inDegreeOf( V vertex )", "diff": ["-        public int inDegreeOf( Object vertex ) {", "+        public int inDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d45edc8307d7c6a091414c86692c87c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public int outDegreeOf( Object vertex )", "signatureAfterChange": "     public int outDegreeOf( V vertex )", "diff": ["-    public int outDegreeOf( Object vertex ) {", "+    public int outDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a6a7bdc621341347f7feb50e4980f2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "96d44a9ae6e3d3923e0657aee3df5d8a34da488f", "commitAfterChange": "fd6ade3d5df69f4e95d0e8055a355f4e596aa63c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void lazyCalculateMatrix()", "signatureAfterChange": "     private void lazyCalculateMatrix()", "diff": ["+        boolean directed = graph instanceof DirectedGraph<?, ?>;", "-            int v_1 = vertices.indexOf(v1);", "-            int v_2 = vertices.indexOf(v2);", "+            int v_1 = vertexIndices.get(v1);", "+            int v_2 = vertexIndices.get(v2);", "-            if (!(graph instanceof DirectedGraph<?, ?>)) {", "+            if (!directed) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ba90f354630a8666c66f3788c13334", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "          public Set<V> getVertexSet()", "signatureAfterChange": "          public Set<V> getVertexSet()", "diff": ["-            return m_vertexMapUndirected.keySet();", "+            return vertexMapUndirected.keySet();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4be03da2651d3db110fc15ea9bf2971", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected void fireEdgeAdded(E edge)", "signatureAfterChange": "     protected void fireEdgeAdded(E edge)", "diff": ["-        for (int i = 0; i < m_graphListeners.size(); i++) {", "-            GraphListener<V, E> l = m_graphListeners.get(i);", "+        for (int i = 0; i < graphListeners.size(); i++) {", "+            GraphListener<V, E> l = graphListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6025622768ce8038461bd023766bba4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        return m_delegate.toString();", "+        return delegate.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d612c5d496917b7eadc1fa0cd9b6abf4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2IsomorphismInspector.java", "commitBeforeChange": "c2b66d4fccebb2a5b699cd20e425664647562702", "commitAfterChange": "77db2d28a7d6bf7fe851ab2ee4ce10a977134199", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     protected SubgraphIsomorphismRelation<V, E> match()", "signatureAfterChange": "      @Override     protected SubgraphIsomorphismRelation<V, E> match()", "diff": ["-            s = new VF2SubState<V, E>(ordering1, ordering2,", "+            s = new VF2State<V, E>(ordering1, ordering2,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d682423f0da9f6810f15090f2d8fa7e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "         public Set<EE> getUnmodifiableIncomingEdges()", "signatureAfterChange": "         public Set<EE> getUnmodifiableIncomingEdges()", "diff": ["-            if (m_unmodifiableIncoming == null) {", "-                m_unmodifiableIncoming =", "-                    Collections.unmodifiableSet(m_incoming);", "+            if (unmodifiableIncoming == null) {", "+                unmodifiableIncoming =", "+                    Collections.unmodifiableSet(incoming);", "-            return m_unmodifiableIncoming;", "+            return unmodifiableIncoming;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6dfb161ef6cd62d51981f9958fbee09", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean containsEdge(Edge e)", "signatureAfterChange": "     public boolean containsEdge(E e)", "diff": ["-    public boolean containsEdge(Edge e)", "+    public boolean containsEdge(E e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d73503cd265e7696192350395922582b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "          private void handleRemovedVertices(List<Object> jVertices)", "signatureAfterChange": "          private void handleRemovedVertices(List<Object> jVertices)", "diff": ["-                if (!m_jCellsBeingRemoved.remove(jVertex)) {", "+                if (!jCellsBeingRemoved.remove(jVertex)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d774f35b43491855c52cbb98b94ba7b7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public EdgeFactory<V, E> getEdgeFactory()", "signatureAfterChange": "     public EdgeFactory<V, E> getEdgeFactory()", "diff": ["-        return m_base.getEdgeFactory();", "+        return base.getEdgeFactory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b146e0f0169c1403b868ec1ef03882", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/VertexFactory.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Object createVertex(  );", "signatureAfterChange": "     public V createVertex(  );", "diff": ["-    public Object createVertex(  );", "+    public V createVertex(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ce471729a08aceb90a8929596078e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public Edge removeEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E removeEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge removeEdge( Object sourceVertex, Object targetVertex ) {", "+    public E removeEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81052467db6870382ffd83c81a32a95", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "         public int degreeOf( Object vertex )", "signatureAfterChange": "         public int degreeOf( Object vertex )", "diff": ["-            if( m_loopsAllowed ) { // then we must count, and add loops twice", "+            if( m_allowingLoops ) { // then we must count, and add loops twice"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8ba1d85840c355057f12dfdde6ee5d1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public boolean addVertex( Object v )", "signatureAfterChange": "     public boolean addVertex( V v )", "diff": ["-    public boolean addVertex( Object v ) {", "+    public boolean addVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e627eb5b41c332a821513015ebda27", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void connectedComponentFinished(             ConnectedComponentTraversalEvent e)", "signatureAfterChange": "         public void connectedComponentFinished(             ConnectedComponentTraversalEvent e)", "diff": ["-            m_connectedSets.add(m_currentConnectedSet);", "+            connectedSets.add(currentConnectedSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90612b0640d78370a7152f98e9999ab", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public boolean containsVertex(V v)", "signatureAfterChange": "     public boolean containsVertex(V v)", "diff": ["-        return m_specifics.getVertexSet().contains(v);", "+        return specifics.getVertexSet().contains(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1025ae8873e7018d67bfb6521fd9e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/GraphVertexChangeEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphVertexChangeEvent(Object eventSource, int type, V vertex)", "signatureAfterChange": "     public GraphVertexChangeEvent(Object eventSource, int type, V vertex)", "diff": ["-        m_vertex = vertex;", "+        this.vertex = vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1c0b494fa257bb1b589ee0aaab2039", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "       private VertexTraversalEvent createVertexTraversalEvent( Object vertex )", "signatureAfterChange": "       private VertexTraversalEvent createVertexTraversalEvent( V vertex )", "diff": ["-    private VertexTraversalEvent createVertexTraversalEvent( Object vertex ) {", "+    private VertexTraversalEvent createVertexTraversalEvent( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da60617cf4cb7f38ff7fa4ab11ed3cca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java", "commitBeforeChange": "5aadf3cd155b79f9405f681d7ec0b787b3964151", "commitAfterChange": "5921a1c2d3cb908e116001564211ee62d5fdd263", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public VerbatimMaximumFlow(Double value, Map<E, Double> flow)", "signatureAfterChange": "          public MaximumFlow(Double value, Map<E, Double> flow)", "diff": ["-        public VerbatimMaximumFlow(Double value, Map<E, Double> flow)", "+        public MaximumFlow(Double value, Map<E, Double> flow)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dab39b287edf7f1ee5e3a0cf1c9e0a01", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void testRemoveVertex()", "signatureAfterChange": "     public void testRemoveVertex()", "diff": ["-        m_undirected.removeVertex(m_v4);", "-        assertEquals(false, m_undirected.containsVertex(m_v4));", "-        assertEquals(false, m_directed.containsVertex(m_v4));", "+        undirected.removeVertex(v4);", "+        assertEquals(false, undirected.containsVertex(v4));", "+        assertEquals(false, directed.containsVertex(v4));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6d4caa4cf20244b619f03392ddc40b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "941d3825f57c6f5213a7a950cfe5a3510755f54a", "commitAfterChange": "5de97dd347263a83c52505c6010c41e41ef125ee", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testOddEvenGroup()", "signatureAfterChange": "          public void testOddEvenGroup()", "diff": ["-        testOneComparator(new org.jgrapht.alg.isomorphism.comparators.OddEvenGroupComparator(),", "+        testOneComparator(new org.jgrapht.experimental.isomorphism.comparators.OddEvenGroupComparator(),", "-        testOneComparator(new org.jgrapht.alg.isomorphism.comparators.Mod3GroupComparator(),", "+        testOneComparator(new org.jgrapht.experimental.isomorphism.comparators.Mod3GroupComparator(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db8b68953fd8a04c719b49c73b291f88", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/ConnectedComponentTraversalEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public int getType()", "signatureAfterChange": "     public int getType()", "diff": ["-        return m_type;", "+        return type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db910834bc3c65c9e089486b3aae7b21", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List<DirectedSubgraph<V,E>> stronglyConnectedSubgraphs()", "signatureAfterChange": "     public List<DirectedSubgraph<V,E>> stronglyConnectedSubgraphs()", "diff": ["-        if (m_stronglyConnectedSubgraphs == null) {", "+        if (stronglyConnectedSubgraphs == null) {", "-            m_stronglyConnectedSubgraphs = new Vector<DirectedSubgraph<V, E>>(sets.size());", "+            stronglyConnectedSubgraphs = new Vector<DirectedSubgraph<V, E>>(sets.size());", "-                m_stronglyConnectedSubgraphs.add(new DirectedSubgraph<V, E>(", "-                        m_graph,", "+                stronglyConnectedSubgraphs.add(new DirectedSubgraph<V, E>(", "+                        graph,", "-        return m_stronglyConnectedSubgraphs;", "+        return stronglyConnectedSubgraphs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb40f90f76dff8571f65cb81dde075d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void internalRemoveCell(GraphCell cell)", "signatureAfterChange": "     private void internalRemoveCell(GraphCell cell)", "diff": ["-        m_jCellsBeingRemoved.add(cell);", "+        jCellsBeingRemoved.add(cell);", "-        m_jCellsBeingRemoved.remove(cell);", "+        jCellsBeingRemoved.remove(cell);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc01257604b29893dae7383cc0376f88", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUnweightedGraphTest.java", "commitBeforeChange": "81ef9c1d2d39994c25cce597f188d33ad62d5269", "commitAfterChange": "76d8d52bc063f9cd4364e294dbe191c5648bf05d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testUndirected()", "signatureAfterChange": "     public void testUndirected()", "diff": ["-            new WeightedPseudograph<String, DefaultWeightedEdge>(", "+            new SimpleWeightedGraph<String, DefaultWeightedEdge>("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc6b6f0e1d422af68b74ad8892e06353", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E removeEdge(V sourceVertex, V targetVertex)", "diff": ["-            m_edgeSet.remove(e);", "+            m_edgeMap.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc9bc84a1f0aca2dc0f5a89836eefb62", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "         public void addIncomingEdge(E e)", "signatureAfterChange": "         public void addIncomingEdge(EE e)", "diff": ["-        public void addIncomingEdge(E e)", "+        public void addIncomingEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcd521af20aeceb19fa948487a3c14dc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "7bbdcf37663f36f80ef1f366555eafdbd618736a", "commitAfterChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected static GraphIsomorphismInspector     createTopologicalExhaustiveInspector(         Graph graph1,         Graph graph2,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "     protected static GraphIsomorphismInspector     createTopologicalExhaustiveInspector(         Graph graph1,         Graph graph2,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-        vertexChainedChecker.addComparatorAfter(vertexChecker);", "+        vertexChainedChecker.appendComparator(vertexChecker);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcdb9cf89fc98977898f554fe45b20a6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testInDegreeOf()", "signatureAfterChange": "     public void testInDegreeOf()", "diff": ["-        assertEquals(2, g.inDegreeOf(m_v1));", "-        assertEquals(1, g.inDegreeOf(m_v2));", "+        assertEquals(2, g.inDegreeOf(v1));", "+        assertEquals(1, g.inDegreeOf(v2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcf5b443b4a2a845eee62740b405eaec", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/DirectedGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<E> outgoingEdgesOf(V vertex);", "signatureAfterChange": "     public Set<E> outgoingEdgesOf(V vertex);", "diff": ["-    public List<E> outgoingEdgesOf(V vertex);", "+    public Set<E> outgoingEdgesOf(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb1273cd6573e23a989a16afc730c89", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         public DirectedSpecifics(DirectedGraph<V, E> g)", "signatureAfterChange": "         public DirectedSpecifics(DirectedGraph<VV, EE> g)", "diff": ["-        public DirectedSpecifics(DirectedGraph<V, E> g)", "+        public DirectedSpecifics(DirectedGraph<VV, EE> g)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de39c47d9086daf6009969f17433ea5f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E addEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge addEdge( Object sourceVertex, Object targetVertex ) {", "+    public E addEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de62d6481f3e3b71c79f676a7bbbcc86", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/ListenableGraphTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public void vertexAdded( VertexEvent e )", "signatureAfterChange": "         public void vertexAdded( GraphVertexChangeEvent e )", "diff": ["-        public void vertexAdded( VertexEvent e ) {", "+        public void vertexAdded( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def52da1119bf8afe032450c9a3acbbf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent(         int eventType,         E edge)", "signatureAfterChange": "      private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent(         int eventType,         E edge)", "diff": ["-        if (m_reuseEvents) {", "-            m_reuseableEdgeEvent.setType(eventType);", "-            m_reuseableEdgeEvent.setEdge(edge);", "+        if (reuseEvents) {", "+            reuseableEdgeEvent.setType(eventType);", "+            reuseableEdgeEvent.setEdge(edge);", "-            return m_reuseableEdgeEvent;", "+            return reuseableEdgeEvent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df053c59d49ea5e2707f9be89483999c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "          void addVertex(V jtVertex)", "signatureAfterChange": "          void addVertex(V jtVertex)", "diff": ["-            m_jtElementsBeingAdded.add(jtVertex);", "-            m_graph.addVertex(jtVertex);", "-            m_jtElementsBeingAdded.remove(jtVertex);", "+            jtElementsBeingAdded.add(jtVertex);", "+            graph.addVertex(jtVertex);", "+            jtElementsBeingAdded.remove(jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df4d5188fd1bb5efe3df87a2a824ff99", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "          private void handleRemovedEdges(List<Object> jEdges)", "signatureAfterChange": "          private void handleRemovedEdges(List<Object> jEdges)", "diff": ["-                if (!m_jCellsBeingRemoved.remove(jEdge)) {", "+                if (!jCellsBeingRemoved.remove(jEdge)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df679da2df45b05352d08b46476a28e2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public boolean addVertex( Object v )", "signatureAfterChange": "     public boolean addVertex( V v )", "diff": ["-    public boolean addVertex( Object v ) {", "+    public boolean addVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa0c15a7d7e43a87e06e85a49575271", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "         public int degreeOf( Object vertex )", "signatureAfterChange": "         public int degreeOf( V vertex )", "diff": ["-        public int degreeOf( Object vertex ) {", "+        public int degreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc355be9322fd51cafec12c59aef3f9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/isomorphism/IntegerVertexFactory.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Object createVertex()", "signatureAfterChange": "      public Integer createVertex()", "diff": ["-    public Object createVertex()", "+    public Integer createVertex()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e047d84f3554328ce8afbc0da1b2f7d4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DefaultListenableGraph(Graph<V, E> g, boolean reuseEvents)", "signatureAfterChange": "     public DefaultListenableGraph(Graph<V, E> g, boolean reuseEvents)", "diff": ["-        m_reuseEvents = reuseEvents;", "-        m_reuseableEdgeEvent = new FlyweightEdgeEvent<V,E>(this, -1, null);", "-        m_reuseableVertexEvent = new FlyweightVertexEvent<V>(this, -1, null);", "+        this.reuseEvents = reuseEvents;", "+        reuseableEdgeEvent = new FlyweightEdgeEvent<V,E>(this, -1, null);", "+        reuseableVertexEvent = new FlyweightVertexEvent<V>(this, -1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ab89b73c57a7a98c317aa1b30f877a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public DefaultGraphCell createVertexCell(Object jGraphTVertex);", "signatureAfterChange": "         public DefaultGraphCell createVertexCell(VV jGraphTVertex);", "diff": ["-        public DefaultGraphCell createVertexCell(Object jGraphTVertex);", "+        public DefaultGraphCell createVertexCell(VV jGraphTVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11fabcea1d563fa126826902b0d3102", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public int outDegreeOf( Object vertex )", "signatureAfterChange": "     public int outDegreeOf( V vertex )", "diff": ["-    public int outDegreeOf( Object vertex ) {", "+    public int outDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1534019207c13ebbd27713b73e7160f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "         protected void setEdge( Edge edge )", "signatureAfterChange": "         protected void setEdge( E edge )", "diff": ["-        protected void setEdge( Edge edge ) {", "+        protected void setEdge( E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1d65db0be389e76c1d0cb3337974a23", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( Edge e )", "diff": ["-        if( !m_multipleEdgesAllowed", "+        if( !m_allowingMultipleEdges", "-        if( !m_loopsAllowed && sourceVertex.equals( targetVertex ) ) {", "+        if( !m_allowingLoops && sourceVertex.equals( targetVertex ) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1d8728be373cabec60ec600e001e160", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         public void vertexRemoved( VertexEvent e )", "signatureAfterChange": "         public void vertexRemoved( GraphVertexChangeEvent e )", "diff": ["-        public void vertexRemoved( VertexEvent e ) {", "+        public void vertexRemoved( GraphVertexChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e200de89f9f131b142d8a3a7ba057c4d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "         public void addEdgeToTouchingVertices( Edge e )", "signatureAfterChange": "         public void addEdgeToTouchingVertices( E e )", "diff": ["-        public void addEdgeToTouchingVertices( Edge e ) {", "-            Object source = e.getSource(  );", "-            Object target = e.getTarget(  );", "+        public void addEdgeToTouchingVertices( E e ) {", "+            V source = e.getSource(  );", "+            V target = e.getTarget(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a73e5326ecd33bae84de64c39aaaaa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphHelper.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\") \tpublic static <V, E extends DirEdge<V>> UndirectedGraph<V, Edge<V>> undirectedGraph(         Graph<V, E> g)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public static <V, E extends Edge<V>> UndirectedGraph<V, Edge<V>> undirectedGraph(         Graph<V, E> g)", "diff": ["-\tpublic static <V, E extends DirEdge<V>> UndirectedGraph<V, Edge<V>> undirectedGraph(", "+    public static <V, E extends Edge<V>> UndirectedGraph<V, Edge<V>> undirectedGraph("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3cacd042fcdec031e97037f8691eb3f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertexAgain( V vertex, E edge )", "diff": ["-    protected void encounterVertexAgain( Object vertex, Edge edge ) {", "+    protected void encounterVertexAgain( V vertex, E edge ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41369b992db3039c9a5491e299265af", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     protected D putSeenData(V vertex, D data)", "signatureAfterChange": "     protected D putSeenData(V vertex, D data)", "diff": ["-        return m_seen.put(vertex, data);", "+        return seen.put(vertex, data);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e465d1cef6c51f01e31eb2e3ae66667e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KSPExampleTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testThreeReturnedPathsJGraphT()", "signatureAfterChange": "      public void testThreeReturnedPathsJGraphT()", "diff": ["-        assertEquals(nbPaths, ksp.getPathElements(targetVertex).size());", "+        assertEquals(nbPaths, ksp.getPaths(targetVertex).size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4754b30ea9ccd8b922142df4cac312a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public V getEdgeTarget(E e)", "signatureAfterChange": "     public V getEdgeTarget(E e)", "diff": ["-        return m_base.getEdgeTarget(e);", "+        return base.getEdgeTarget(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c058f6551ded57ed28b21e8e8b7fba", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "         public int degreeOf(V vertex)", "signatureAfterChange": "         public int degreeOf(V vertex)", "diff": ["-            if (m_allowingLoops) { // then we must count, and add loops twice", "+            if (allowingLoops) { // then we must count, and add loops twice", "-                Set<E> edges = getEdgeContainer(vertex).m_vertexEdges;", "+                Set<E> edges = getEdgeContainer(vertex).vertexEdges;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4c7c5154723a23664630a97c426d70b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "         public void removeIncomingEdge(EE e)", "signatureAfterChange": "         public void removeIncomingEdge(EE e)", "diff": ["-            m_incoming.remove(e);", "+            incoming.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d79db7a60ff2cd53ff3e6fa6ba636d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "          UndirectedEdgeContainer(             EdgeSetFactory<VV,EE> edgeListFactory,             VV vertex)", "signatureAfterChange": "          UndirectedEdgeContainer(             EdgeSetFactory<VV,EE> edgeListFactory,             VV vertex)", "diff": ["-            m_vertexEdges = edgeListFactory.createEdgeSet(vertex);", "+            vertexEdges = edgeListFactory.createEdgeSet(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ee88ad0ab01a6bab37f7545ee8ce44", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "          List<E> edgesOf(V vertex)", "signatureAfterChange": "          Set<E> edgesOf(V vertex)", "diff": ["-        List<E> edgesOf(V vertex)", "+        Set<E> edgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50c6f96b5ac0fbf41bbe4d14d4f8c2c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/AllAlgTests.java", "commitBeforeChange": "22814191696ad4b444d71f8a3dc5df7526435d77", "commitAfterChange": "dec9253520ef416ba56447d68c03cad6545ec37a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite()", "signatureAfterChange": "     public static Test suite()", "diff": ["-        suite.addTest(new TestSuite(KruskalMinimumSpanningTreeTest.class));", "+        suite.addTest(new TestSuite(MinimumSpanningTreeTests.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e57096ffedf19b0ad12d1b46cf42ad36", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "         public void removeEdge(EE e)", "signatureAfterChange": "         public void removeEdge(EE e)", "diff": ["-            m_vertexEdges.remove(e);", "+            vertexEdges.remove(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e58578dd8ebae1d2c31ea267e028d140", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setReuseEvents(boolean reuseEvents)", "signatureAfterChange": "     public void setReuseEvents(boolean reuseEvents)", "diff": ["-        m_reuseEvents = reuseEvents;", "+        this.reuseEvents = reuseEvents;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6329c565b8967b41d26de66faf37ee1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/UnionFind.java", "commitBeforeChange": "f0163359559a0f813b9a9058b22762e5033d4ca9", "commitAfterChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void addElement(V element)", "signatureAfterChange": "     public void addElement(T element)", "diff": ["-    public void addElement(V element)", "+    public void addElement(T element)", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f824da9b1fcfff6cca76a5d3bb5f38", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/generate/GraphGeneratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testRingGraphGenerator()", "signatureAfterChange": "     public void testRingGraphGenerator()", "diff": ["-        gen.generateGraph(g, m_vertexFactory, resultMap);", "+        gen.generateGraph(g, vertexFactory, resultMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e74716c6c7042027d11208247bd992ab", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public List<E> getPathEdgeList()", "signatureAfterChange": "     public List<E> getPathEdgeList()", "diff": ["-        return m_edgeList;", "+        return edgeList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e753786d340c8d6017f65900bbec14ca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void init()", "signatureAfterChange": "     public void init()", "diff": ["-        m_jgAdapter = new JGraphModelAdapter<String,DefaultEdge>(g);", "+        jgAdapter = new JGraphModelAdapter<String,DefaultEdge>(g);", "-        JGraph jgraph = new JGraph(m_jgAdapter);", "+        JGraph jgraph = new JGraph(jgAdapter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e821600122d79ce8946508cde56893ae", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int outDegreeOf( Object vertex )", "signatureAfterChange": "     public int outDegreeOf( V vertex )", "diff": ["-    public int outDegreeOf( Object vertex ) {", "+    public int outDegreeOf( V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a56c289a3d9c598d9480fe8ab40f2d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "0997a58f5471f09bb9fdcb21da80e929c7b2bb23", "commitAfterChange": "9350cdef6b0d2c87575b39e1606fd2378047d04a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DepthFirstIterator( Graph g, boolean crossComponentTraversal )", "signatureAfterChange": "     public DepthFirstIterator( Graph g, boolean crossComponentTraversal )", "diff": ["-        this( g, null, crossComponentTraversal );", "+        this( g, null, crossComponentTraversal, false );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d41b82ef4342ae2f3515d18df66205", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "         public void edgeAdded(GraphEdgeChangeEvent<V,E> e)", "signatureAfterChange": "         public void edgeAdded(GraphEdgeChangeEvent<V,E> e)", "diff": ["-            if (!m_jtElementsBeingAdded.remove(jtEdge)) {", "+            if (!jtElementsBeingAdded.remove(jtEdge)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9131c52f64c31cf542d22d5783143cf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "60010fc57aba40a0dc737753490baabfe21649df", "commitAfterChange": "6d19fa8b6d71cf796fa33651b9acf5d61058f15e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void testEdgeComparator()", "signatureAfterChange": "     public void testEdgeComparator()", "diff": ["-            new DirectedEdgeWieghtOddEvenComparator();", "+            new DirectedEdgeWeightOddEvenComparator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92050835c2c89e8fec741d9586806e6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      private Neighbors getPredecessors(V v)", "signatureAfterChange": "      private Neighbors getPredecessors(V v)", "diff": ["-                    GraphHelper.predecessorListOf(m_graph, v));", "+                    Graphs.predecessorListOf(m_graph, v));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92503727c1ea303f60aaa71357c8e4e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "         public void edgeAdded( EdgeEvent e )", "signatureAfterChange": "         public void edgeAdded( GraphEdgeChangeEvent e )", "diff": ["-        public void edgeAdded( EdgeEvent e ) {", "+        public void edgeAdded( GraphEdgeChangeEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e926e754ba0f4f99c6a923a923d71b49", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "         public E getEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public E getEdge(V sourceVertex, V targetVertex)", "diff": ["-                Iterator<E> iter = ec.m_outgoing.iterator();", "+                Iterator<E> iter = ec.outgoing.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e960d8e95765a947fac03d96bf652c99", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected abstract void encounterVertex( Object vertex, Edge edge );", "signatureAfterChange": "     protected abstract void encounterVertex( V vertex, E edge );", "diff": ["-    protected abstract void encounterVertex( Object vertex, Edge edge );", "+    protected abstract void encounterVertex( V vertex, E edge );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98a27c796265fb5f163777b97a00f9b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void exportNormalizedLaplacianMatrix(Writer output, UndirectedGraph g)", "signatureAfterChange": "     public void exportNormalizedLaplacianMatrix(Writer output, UndirectedGraph g)", "diff": ["-            // TODO modify GraphHelper to return neighbor sets", "-            Set neighbors = new LinkedHashSet(GraphHelper.neighborListOf(g, from));", "+            // TODO modify Graphs to return neighbor sets", "+            Set neighbors = new LinkedHashSet(Graphs.neighborListOf(g, from));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9921f36d74e8bd9c9095543d5206de3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2AbstractIsomorphismInspector.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public boolean isomorphismExists()", "signatureAfterChange": "      @Override     public boolean isomorphismExists()", "diff": ["-        Iterator<IsomorphicGraphMapping<V,E>> iter = getMappings();", "+        Iterator<GraphMapping<V,E>> iter = getMappings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa38e1954c320f33a679453ae8da597", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/MaximumWeightBipartiteMatchingTest.java", "commitBeforeChange": "985760cbd642d0a5bdb9eca3c84e4565ecb8ceea", "commitAfterChange": "f79565a2a8d7f5186720bf4969b47a8431d60e9c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Test \tpublic void maximumWeightBipartiteMatching4()", "signatureAfterChange": "  \t@Test \tpublic void maximumWeightBipartiteMatching5()", "diff": ["+", "+\t@Test", "+\tpublic void maximumWeightBipartiteMatching5() {", "+\t\tDefaultWeightedEdge e1 = graph.addEdge(\"s1\", \"t1\");", "+\t\tgraph.setEdgeWeight(e1, 1);", "+\t\tDefaultWeightedEdge e2 = graph.addEdge(\"s1\", \"t2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec307414c44a8a56e93876cd41f2b1dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/WheelGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void generateGraph(         Graph<V,E> target,         final VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         final VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        if (m_size < 1) {", "+        if (size < 1) {", "-        RingGraphGenerator<V,E> ringGenerator = new RingGraphGenerator<V,E>(m_size - 1);", "+        RingGraphGenerator<V,E> ringGenerator = new RingGraphGenerator<V,E>(size - 1);", "-            if (m_inwardSpokes) {", "+            if (inwardSpokes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8e1c0f6bd6d45a40ba0ddf72223d88", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "         public void addOutgoingEdge(EE e)", "signatureAfterChange": "         public void addOutgoingEdge(EE e)", "diff": ["-            m_outgoing.add(e);", "+            outgoing.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed153fc4d06d5483bb2f4c5dd018e580", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultDirectedWeightedEdge.java", "commitBeforeChange": "b1382aa25544721cf9f8cd8ebbac3a2da4113463", "commitAfterChange": "9451ac3a25b913de295a83110c5c80ef90861e2a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean equals( Object o )", "signatureAfterChange": "     public boolean equals( Object o )", "diff": ["-        if( o instanceof DirectedWeightedEdge ) {", "-            DirectedWeightedEdge e = (DirectedWeightedEdge) o;", "+        if( o instanceof WeightedElement ) {", "+            WeightedElement e = (WeightedElement) o;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed79edbc28f2f2314fbb74c66e8dad8c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter(         Graph<V, E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory<V,E> cellFactory)", "signatureAfterChange": "     public JGraphModelAdapter(         Graph<V, E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory<V,E> cellFactory)", "diff": ["-        m_jtGraph = new ShieldedGraph(jGraphTGraph);", "+        jtGraph = new ShieldedGraph(jGraphTGraph);", "-        m_cellFactory = cellFactory;", "+        this.cellFactory = cellFactory;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc284edbc829ab1b950c22984a7493a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/RingGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public RingGraphGenerator(int size)", "signatureAfterChange": "     public RingGraphGenerator(int size)", "diff": ["-        m_size = size;", "+        this.size = size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc8bd72130271eb127ddf87d3291fc9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public boolean addEdge( Edge e )", "signatureAfterChange": "     public boolean addEdge( E e )", "diff": ["-    public boolean addEdge( Edge e ) {", "+    public boolean addEdge( E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ede712779c44de0ae27e96dc8dc0e4df", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/PrefetchIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private Object getNextElementFromInnerFunctor()", "signatureAfterChange": "     private E getNextElementFromInnerFunctor()", "diff": ["-    private Object getNextElementFromInnerFunctor()", "+    private E getNextElementFromInnerFunctor()", "-        Object result = this.innerEnum.nextElement();", "+        E result = this.innerEnum.nextElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edfbe85031340e8c0ed3d569cd69e172", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void addGraphListener(GraphListener<V, E> l)", "signatureAfterChange": "     public void addGraphListener(GraphListener<V, E> l)", "diff": ["-        addToListenerList(m_graphListeners, l);", "+        addToListenerList(graphListeners, l);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee00c5956a2e32387b2a6fe7722e08d3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         public FlyweightEdgeEvent( Object eventSource, int type, Edge e )", "signatureAfterChange": "         public FlyweightEdgeEvent( Object eventSource, int type, E e )", "diff": ["-        public FlyweightEdgeEvent( Object eventSource, int type, Edge e ) {", "+        public FlyweightEdgeEvent( Object eventSource, int type, E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee361c4f1945ec27628b01080b27b00e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/SimpleGraphPathTest.java", "commitBeforeChange": "f6aa0f82d152c39f6790bc8a988d199ddf8d6d5b", "commitAfterChange": "263cf8512df3d55c8ea6cb1ee1ce3007847d0416", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public void testInvalidVertexList()", "signatureAfterChange": "          public void testInvalidVertexList()", "diff": ["-            new SimpleGraphPath<String, DefaultEdge>(graph, invalidPath);", "+            new SimpleGraphPath<String, DefaultEdge>(graph, invalidPath, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3fb338f1b811733ea2d92837c62712", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "45fdf2d06b2f697f414a6dba7b5708e895f3889b", "commitAfterChange": "9288cc6f229c6d1aa15398231bc75a90896d4262", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic void calculateMaximumFlow(\r \t\t\tV source,\r \t\t\tV sink)", "signatureAfterChange": "\r \tpublic void calculateMaximumFlow(\r \t\t\tV source,\r \t\t\tV sink)", "diff": ["-\t\t\t\tcurrentArc.flow = 0;\r", "+\t\t\t\tcurrentArc.flow = 0.0;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee74a634a501706e094dab54725351dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DefaultEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean containsVertex( Object v )", "signatureAfterChange": "     public boolean containsVertex( V v )", "diff": ["-    public boolean containsVertex( Object v ) {", "+    public boolean containsVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef8b2b39764bb348ae375ce5feff344a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-        return m_delegate.removeVertex(v);", "+        return delegate.removeVertex(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efad136de6aea61f1e7aced60f9cb56a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "c64fbf8e70ceab15e767f5431201bfb24e04dadb", "commitAfterChange": "bae9775b4949275f2c193d6bff281f6600ac4377", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       private void positionVertexAt( Object vertex, int x, int y )", "signatureAfterChange": "       private void positionVertexAt( Object vertex, int x, int y )", "diff": ["+", "-        DefaultGraphCell cell = m_jGraphModel.getVertexCell( vertex );", "+        DefaultGraphCell cell = m_jgAdapter.getVertexCell( vertex );", "-        m_jGraphModel.edit( cellAttr );", "+        m_jgAdapter.edit( cellAttr );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd330b5b7cd990f4265d65c476ba529", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "         public List<E> getUnmodifiableIncomingEdges()", "signatureAfterChange": "         public List<EE> getUnmodifiableIncomingEdges()", "diff": ["-        public List<E> getUnmodifiableIncomingEdges()", "+        public List<EE> getUnmodifiableIncomingEdges()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0160d6aada6442917717b07c0aad4a1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "         protected void setEdge(E e)", "signatureAfterChange": "         protected void setEdge(EE e)", "diff": ["-        protected void setEdge(E e)", "+        protected void setEdge(EE e)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01a132b4a7e4222cabe8cd9fee11012", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "         public void addIncomingEdge(EE e)", "signatureAfterChange": "         public void addIncomingEdge(EE e)", "diff": ["-            m_incoming.add(e);", "+            incoming.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0563dfbec6c857f981de04844a01bd2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathKValuesTest.java", "commitBeforeChange": "94e0b9cdbd464a6b60ddbb8cd6d473a32e102eaf", "commitAfterChange": "90d794caa7b37ed092890eb859473902af3157bc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testMaxSizeValue()", "signatureAfterChange": "      public void testMaxSizeValueCompleteGraph6()", "diff": ["-    public void testMaxSizeValue()", "+    public void testMaxSizeValueCompleteGraph6()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06982cb578cd4c7c470d8c74480e2fd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/SimpleGraphPathTest.java", "commitBeforeChange": "f6aa0f82d152c39f6790bc8a988d199ddf8d6d5b", "commitAfterChange": "263cf8512df3d55c8ea6cb1ee1ce3007847d0416", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public void setUp()", "signatureAfterChange": "      @Override     public void setUp()", "diff": ["-        path = new SimpleGraphPath<String, DefaultEdge>(graph, pathVertices);", "+        path = new SimpleGraphPath<String, DefaultEdge>(graph, pathVertices, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d6a0ca4571956efb2795e052b868c4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/event/EdgeTraversalEvent.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public EdgeTraversalEvent(Object eventSource, E edge)", "signatureAfterChange": "     public EdgeTraversalEvent(Object eventSource, E edge)", "diff": ["-        m_edge = edge;", "+        this.edge = edge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15f8c24a6a40ce01a2428fe23da5b49", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2AbstractIsomorphismInspector.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "       @Override     public abstract Iterator<IsomorphicGraphMapping<V, E>> getMappings();", "signatureAfterChange": "       @Override     public abstract Iterator<GraphMapping<V, E>> getMappings();", "diff": ["-    public abstract Iterator<IsomorphicGraphMapping<V, E>> getMappings();", "+    public abstract Iterator<GraphMapping<V, E>> getMappings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f16afc595f81f06ff12b1cb8eefe723c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Set<E> edgesOf(V vertex)", "signatureAfterChange": "     public Set<E> edgesOf(V vertex)", "diff": ["-        Set<E> baseEdges = m_base.edgesOf(vertex);", "+        Set<E> baseEdges = base.edgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a613be8654de07407c5b29721e0b26", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/UnmodifiableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( V v )", "diff": ["-    public boolean removeVertex( Object v ) {", "+    public boolean removeVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a641b79fb95c4282393971077783d3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public Set<E> edgeSet()", "signatureAfterChange": "     public Set<E> edgeSet()", "diff": ["-        if (m_unmodifiableEdgeSet == null) {", "-            m_unmodifiableEdgeSet =", "-                Collections.unmodifiableSet(m_edgeMap.keySet());", "+        if (unmodifiableEdgeSet == null) {", "+            unmodifiableEdgeSet =", "+                Collections.unmodifiableSet(edgeMap.keySet());", "-        return m_unmodifiableEdgeSet;", "+        return unmodifiableEdgeSet;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f204c4fedad426b102b133a9951cc863", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public List<EE> createEdgeList(VV vertex)", "signatureAfterChange": "         public Set<EE> createEdgeList(VV vertex)", "diff": ["-        public List<EE> createEdgeList(VV vertex)", "+        public Set<EE> createEdgeList(VV vertex)", "-            return new ArrayList<EE>(1);", "+            return new ArrayUnenforcedSet<EE>(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f219da518a175c830fb068a8794eaee7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "         public List<E> edgesOf(V vertex)", "signatureAfterChange": "         public Set<E> edgesOf(V vertex)", "diff": ["-        public List<E> edgesOf(V vertex)", "+        public Set<E> edgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f27d8e053107a020454d3f098264cbf0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "ec3ad8958a24a18bf39ce6a188aa483e79bc7f43", "commitAfterChange": "48c1757b357a85677b355a2ded48d798b3777337", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": "         public SubgraphUndirectedWeighted( Graph base, Set vertexSubset,             Set edgeSubset )", "signatureAfterChange": "         public SubgraphUndirectedWeighted( UndirectedWeightedGraph base,             Set vertexSubset, Set edgeSubset )", "diff": ["-        public SubgraphUndirectedWeighted( Graph base, Set vertexSubset,", "-            Set edgeSubset ) {", "+        public SubgraphUndirectedWeighted( UndirectedWeightedGraph base,", "+            Set vertexSubset, Set edgeSubset ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d36580f975f5161546872835bc1268", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-                Iterator<E> iter = ec.m_outgoing.iterator();", "+                Iterator<E> iter = ec.outgoing.iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b697a3ec323b50a5da93c5a056e269", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/DirectedEdge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DirectedEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public DirectedEdge( V sourceVertex, V targetVertex )", "diff": ["-    public DirectedEdge( Object sourceVertex, Object targetVertex ) {", "+    public DirectedEdge( V sourceVertex, V targetVertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4377a7349225c7c6495126b1b089e1a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "f9fe1a9b0c0422b26e26b94edd9001801984e770", "commitAfterChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testStronglyConnected(  )", "signatureAfterChange": "     public void testStronglyConnected1(  )", "diff": ["-    public void testStronglyConnected(  ) {", "+    public void testStronglyConnected1(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43f8241ea12b7196aefbd336c842ebc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public boolean addVertex( Object v )", "signatureAfterChange": "     public boolean addVertex( V v )", "diff": ["-    public boolean addVertex( Object v ) {", "+    public boolean addVertex( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f477f8e8b5cf048571f0c20b34b94b48", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/edge/EdgeFactories.java", "commitBeforeChange": "e13230e0f77fc038e089d77cd6f28783ffa1581b", "commitAfterChange": "1697a09983092630eaecc24fb423d2a519f7c71e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public Edge createEdge( Object source, Object target )", "signatureAfterChange": "         public Edge createEdge( Object source, Object target )", "diff": ["-            return new DefaultUndirectedWeightedEdge( source, target );", "+            return new UndirectedWeightedEdge( source, target );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4877707ccddb900ee1395283fdd5da2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BellmanFordShortestPathTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testConstructor()", "signatureAfterChange": "     public void testConstructor()", "diff": ["-            Arrays.asList(new Edge [] {", "+            Arrays.asList(new DefaultEdge [] {", "-            Arrays.asList(new Edge [] {", "+            Arrays.asList(new DefaultEdge [] {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f575264406bf1dd3d2be1aad59375db3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/Edge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Object getSource(  );", "signatureAfterChange": "     public V getSource(  );", "diff": ["-    public Object getSource(  );", "+    public V getSource(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58d0f0c3970ecf206b4cb42ff19ede0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "a618b184d032025b18a4e87d16829aca3c10b733", "commitAfterChange": "f2700b401e21e2cbb4b86c4b26a5c4c619c8ee12", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public List<V> getNeighborList()", "signatureAfterChange": "          public List<V> getNeighborList()", "diff": ["-            for (Map.Entry<V,Count> entry : m_neighborCounts.entrySet()) {", "+            for (Map.Entry<V,ModifiableInteger> entry : m_neighborCounts.entrySet()) {", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5939531971dbdf30ffdfd5a34084cca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "941d3825f57c6f5213a7a950cfe5a3510755f54a", "commitAfterChange": "5de97dd347263a83c52505c6010c41e41ef125ee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "           public void testUniformGroup()", "signatureAfterChange": "           public void testUniformGroup()", "diff": ["-        testOneComparator(new org.jgrapht.alg.isomorphism.comparators.Mod3GroupComparator(),", "+        testOneComparator(new org.jgrapht.experimental.isomorphism.comparators.Mod3GroupComparator(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f61bb87a34fc4dd44dfb9d2f8bf311b1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/Edge.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object getTarget(  );", "signatureAfterChange": "     public V getTarget(  );", "diff": ["-    public Object getTarget(  );", "+    public V getTarget(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f63b5a6a08d4637c04c8a7ec410c0f9f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/GraphEdgeChangeEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphEdgeChangeEvent( Object eventSource, int type, Edge e )", "signatureAfterChange": "     public GraphEdgeChangeEvent( Object eventSource, int type, E e )", "diff": ["-    public GraphEdgeChangeEvent( Object eventSource, int type, Edge e ) {", "+    public GraphEdgeChangeEvent( Object eventSource, int type, E e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f68a29922dcddd9538ed54512efbb3a7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/MinSourceSinkCut.java", "commitBeforeChange": "1af3680aabe82fe8cc06fcbf77e0d17395b42d8d", "commitAfterChange": "017bf611b45a85135ec8084e3d6e2c35a5042ed1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void computeMinCut(V source, V sink)", "signatureAfterChange": " \tpublic void computeMinCut(V source, V sink)", "diff": ["-\t\t\tfor(E edge: outEdges){", "+\t\t\tfor(E edge: inEdges){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ee3873ee21945becda5c621f425940", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public VF2SubgraphIsomorphismInspector(                     Graph<V, E> graph1,                     Graph<V, E> graph2)", "signatureAfterChange": "      public VF2SubgraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2)", "diff": ["-                    Graph<V, E> graph1,", "-                    Graph<V, E> graph2)", "-        super(graph1, graph2);", "+", "+    public VF2SubgraphIsomorphismInspector(", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2)", "+    {", "+        super(graph1,", "+              graph2,", "+              true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f937fee808ee40a1dab10373c87ee8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/UndirectedGraphUnion.java", "commitBeforeChange": "5fd52feef7dfccbb0b591fde0bda240336fc10d1", "commitAfterChange": "c47aefcfe74648da036d5e9f46b58264738e055c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      UndirectedGraphUnion(         UndirectedGraph<V, E> g1,         UndirectedGraphUnion<V, E> g2)", "signatureAfterChange": "      UndirectedGraphUnion(             UndirectedGraph<V, E> g1,             UndirectedGraph<V, E> g2)", "diff": ["+", "+    UndirectedGraphUnion(", "+            UndirectedGraph<V, E> g1,", "+            UndirectedGraph<V, E> g2)", "+    {", "+        super(g1, g2);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7057977245288d9bc3c68f30197fc17", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected Object provideNextVertex(  )", "signatureAfterChange": "     protected V provideNextVertex(  )", "diff": ["-    protected Object provideNextVertex(  ) {", "+    protected V provideNextVertex(  ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74fc6daf312c44db39e16c3fb3aba58", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/SubgraphIsomorphismTestUtils.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "       public static boolean isCorrectMatching(                     IsomorphicGraphMapping<Integer, DefaultEdge> rel,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "signatureAfterChange": "       public static boolean isCorrectMatching(                     GraphMapping<Integer, DefaultEdge> rel,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "diff": ["-                    IsomorphicGraphMapping<Integer, DefaultEdge> rel,", "+                    GraphMapping<Integer, DefaultEdge> rel,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7bb7be34cb5cdb7543c325d4252c7b3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean addVertex(V v)", "signatureAfterChange": "     public boolean addVertex(V v)", "diff": ["-            m_vertexMap.put(v, null); // add with a lazy edge container entry", "+            m_specifics.addVertex(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f21ac1e011f0c7249dbc6e071a7e67", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/MinSourceSinkCutTest.java", "commitBeforeChange": "53ead9050a071d7dedfd2ff6901e4fa63414ea19", "commitAfterChange": "9d6d4e0fa299c370ec1195f9f9774fe921d02bfd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void testRealGraph()", "signatureAfterChange": " \tpublic void testRealGraph()", "diff": ["-\t    assertEquals(7.0, weight);", "+\t    assertEquals(7.0, weight, 0.0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f969b3acc56061c40803afa7fba748a5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      protected VertexExtension vertexExtended0(V v)", "signatureAfterChange": "      protected VertexExtension extendedVertex(V v)", "diff": ["-    protected VertexExtension vertexExtended0(V v) {", "+    protected VertexExtension extendedVertex(V v) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cd006c5763d0db87b91c718eff4378", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public void edgeAdded( GraphEdgeChangeEvent e )", "signatureAfterChange": "         public void edgeAdded( GraphEdgeChangeEvent e )", "diff": ["-            if( !m_jtEdgesBeingAdded.remove( jtEdge ) ) {", "-                addJGraphTEdge( jtEdge );", "+            if( !m_jtElementsBeingAdded.remove( jtEdge ) ) {", "+                handleJGraphTAddedEdge( jtEdge );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1d799120073087ee6eb1af8f29c16c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         protected void setVertex(V vertex)", "signatureAfterChange": "         protected void setVertex(VV vertex)", "diff": ["-        protected void setVertex(V vertex)", "+        protected void setVertex(VV vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2f69cb25055b8b5528c58d5db84a7f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/LinearGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public LinearGraphGenerator(int size)", "signatureAfterChange": "     public LinearGraphGenerator(int size)", "diff": ["-        m_size = size;", "+        this.size = size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fadd5fb7d3b83a3ec0398eae2a8c984a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/event/VertexTraversalEvent.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VertexTraversalEvent( Object eventSource, Object vertex )", "signatureAfterChange": "     public VertexTraversalEvent( Object eventSource, V vertex )", "diff": ["-    public VertexTraversalEvent( Object eventSource, Object vertex ) {", "+    public VertexTraversalEvent( Object eventSource, V vertex ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4405aaca62ee19d65b2bf20b8c6769", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb579f745020529d4f0859dfd4be66b4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected boolean assertVertexExist( Object v )", "signatureAfterChange": "     protected boolean assertVertexExist( V v )", "diff": ["-    protected boolean assertVertexExist( Object v ) {", "+    protected boolean assertVertexExist( V v ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb50ecb34c915036f9263db29fcde87", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BellmanFordShortestPathTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testWithNegativeEdges()", "signatureAfterChange": "      public void testWithNegativeEdges()", "diff": ["-        assertEquals(Arrays.asList(new Edge [] { m_e13, m_e34 }), path);", "+        assertEquals(Arrays.asList(new DefaultEdge [] { m_e13, m_e34 }), path);", "-        assertEquals(Arrays.asList(new Edge [] { m_e15 }), path);", "+        assertEquals(Arrays.asList(new DefaultEdge [] { m_e15 }), path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbd3af11c7bf68267caffbc673c197c4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public abstract int degreeOf( Object vertex );", "signatureAfterChange": "         public abstract int degreeOf( V vertex );", "diff": ["-        public abstract int degreeOf( Object vertex );", "+        public abstract int degreeOf( V vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc378488dc25d4732b44a28109cc3182", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathKValuesTest.java", "commitBeforeChange": "94e0b9cdbd464a6b60ddbb8cd6d473a32e102eaf", "commitAfterChange": "90d794caa7b37ed092890eb859473902af3157bc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNbReturnedPaths()", "signatureAfterChange": "      public void testNbReturnedPaths()", "diff": ["-        verifyNbPathsForAllVertices(kSPCompleteGraph4);", "+        verifyNbPathsForAllPairsOfVertices(kSPCompleteGraph4);", "-        verifyNbPathsForAllVertices(kSPCompleteGraph5);", "+        verifyNbPathsForAllPairsOfVertices(kSPCompleteGraph5);", "-        verifyNbPathsForAllVertices(kSPCompleteGraph6);", "+        verifyNbPathsForAllPairsOfVertices(kSPCompleteGraph6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd311b0066dcfa341368b99436d1aa70", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public Edge removeEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public E removeEdge( V sourceVertex, V targetVertex )", "diff": ["-    public Edge removeEdge( Object sourceVertex, Object targetVertex ) {", "-        Edge e = getEdge( sourceVertex, targetVertex );", "+    public E removeEdge( V sourceVertex, V targetVertex ) {", "+        E e = getEdge( sourceVertex, targetVertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd4d049d092b6dac60d5031ca29c0258", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         int getFinishingTime(  )", "signatureAfterChange": "         int getFinishingTime(  )", "diff": ["-            return finished;", "+            return m_finished;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd9036f854db04dabdf7c4cfd79419d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void vertexAdded( Object v )", "signatureAfterChange": "         public void vertexAdded( VertexEvent e )", "diff": ["-        public void vertexAdded( Object v ) {", "+        public void vertexAdded( VertexEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec1875dfc83d7f5897e41de61786c5c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "fb87419b8dc96e08a9a084847be43d0b4412606c", "commitAfterChange": "9c304d58c2a3ebb2444bab73d9552866b4440af5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void dagTest()", "signatureAfterChange": "      @Test     public void testDag()", "diff": ["-    public void dagTest() {", "+    public void testDag() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef64d38e5a67103ea581aaf5dd6244e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/AbstractGraphIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void fireConnectedComponentStarted(         ConnectedComponentTraversalEvent e)", "signatureAfterChange": "     protected void fireConnectedComponentStarted(         ConnectedComponentTraversalEvent e)", "diff": ["-        int len = m_traversalListeners.size();", "+        int len = traversalListeners.size();", "-            TraversalListener l = m_traversalListeners.get(i);", "+            TraversalListener l = traversalListeners.get(i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffab1bb0799ae5ffa70a587b19539632", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public List<E> edgesOf(V vertex)", "signatureAfterChange": "     public Set<E> edgesOf(V vertex)", "diff": ["-    public List<E> edgesOf(V vertex)", "+    public Set<E> edgesOf(V vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffbe8c9178efbc0f0ef401bc38162e5c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/MaximumWeightBipartiteMatching.java", "commitBeforeChange": "985760cbd642d0a5bdb9eca3c84e4565ecb8ceea", "commitAfterChange": "f79565a2a8d7f5186720bf4969b47a8431d60e9c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate void initializeVerticiesAndEdges()", "signatureAfterChange": " \t \tprivate void initializeVerticesAndEdges()", "diff": ["-\tprivate void initializeVerticiesAndEdges() {", "+\tprivate void initializeVerticesAndEdges() {"]}]}