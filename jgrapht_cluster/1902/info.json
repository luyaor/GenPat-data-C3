{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3aa327a03a85b58ca393cdce6708fb65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c053811239aa6011693000e6d770fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/PartiteRandomGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "signatureAfterChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "diff": ["-        Object [][] vertices = new Object [m_numVertices.length][];", "+        Object [][] vertices = new Object [numVertices.length][];", "-        for (int i = 0; i < m_numVertices.length; i++) {", "+        for (int i = 0; i < numVertices.length; i++) {", "-                    m_numVertices[i]);", "+                    numVertices[i]);", "-                    m_numEdges);", "+                    numEdges);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccf4c625b65a0ed2f97153cb4583c34b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathKValuesTest.java", "commitBeforeChange": "af61e5d97b8783c377d8616e4786a4542c35b8a3", "commitAfterChange": "f9d1a7195d2b619df2846dc654b2682aee4bacc5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testMaxSizeValue()", "signatureAfterChange": "      public void testMaxSizeValue()", "diff": ["-            assertEquals(finder.getPathElements(\"v1\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v2\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v3\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v4\").size(), maxSize);", "-            assertEquals(finder.getPathElements(\"v5\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v1\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v2\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v3\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v4\").size(), maxSize);", "+            assertEquals(finder.getPaths(\"v5\").size(), maxSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0800708327e0a37ae0c74529e46fc45", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/UniformRandomGraphGenerator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "diff": ["-                m_numVertices);", "+                numVertices);", "-            m_numEdges);", "+            numEdges);"]}]}