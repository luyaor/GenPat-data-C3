{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9339c020537a5306b6be2147b051b6ce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1487037753c17b161c1eb6281a956e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "7311f3ddb2ec71dc0af1e1a2446d2101c7876729", "commitAfterChange": "54838b87558eb9d3e44052fabd8af33ef9bf26b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testEdgeCasesSimpleGraph()", "signatureAfterChange": "     @Test     public void testEdgeCasesSimpleGraph()", "diff": ["-        VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vfs6b =", "-            new VF2SubgraphIsomorphismInspector<Integer, DefaultEdge>(sg3, sg6);", "-", "-        assertEquals(\"[1=5 2=6 3=7 4=~~]\",", "-                        vfs6b.getMappings().next().toString());", "+//        VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vfs6b =", "+//            new VF2SubgraphIsomorphismInspector<Integer, DefaultEdge>(sg3, sg6);", "+//", "+//        assertEquals(\"[1=5 2=6 3=7 4=~~]\",", "+//                        vfs6b.getMappings().next().toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eacbb04d7b4aac39e8d6a4f08c84ac03", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void testEdgeComparator()", "signatureAfterChange": "     public void testEdgeComparator()", "diff": ["-            Graph<Character,DirectedEdge<Character>> currGraph =", "-                graphsArray[i] = new DefaultDirectedWeightedGraph<Character,DirectedEdge<Character>>();", "+            Graph<Character,DefaultEdge> currGraph =", "+                graphsArray[i] =", "+                new DefaultDirectedWeightedGraph<Character,DefaultWeightedEdge>(", "+                    DefaultWeightedEdge.class);", "-                DirectedEdge<Character> e =", "-                    currGraph.getEdgeFactory().createEdge(", "-                        charArray[j],", "-                        charArray[j + 1]);", "-                e.setWeight(weigthsArray[i][j]);", "-                currGraph.addEdge(e);", "+                Graphs.addEdge(", "+                    currGraph, ", "+                    charArray[j],", "+                    charArray[j + 1],", "+                    weigthsArray[i][j]);", "-            new DirectedEdgeWeightOddEvenComparator();", "+            new DirectedEdgeWeightOddEvenComparator(graphsArray[0]);"]}]}