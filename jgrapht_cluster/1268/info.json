{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d47372d83a4bd88c6a4be9c913f0420", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f49a9db9309591ed6ad821c02a6b38c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "c105c53aeb7d2471227c61d2a14c86cbc14dfc04", "commitAfterChange": "41540d6069074864616a1b8145b5f82327c8ca30", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private void verifyReversal(         DirectedGraph<String, DefaultEdge> g,         DirectedGraph<String, DefaultEdge> r,         DefaultEdge e)", "signatureAfterChange": "      private void verifyReversal(         DirectedGraph<String, DefaultEdge> g,         DirectedGraph<String, DefaultEdge> r,         DefaultEdge e)", "diff": ["+        Set<DefaultEdge> s = r.getAllEdges(v1, v2);", "+        assertEquals(0, s.size());", "+", "+        s = r.getAllEdges(v2, v1);", "+        assertEquals(1, s.size());", "+        assertSame(e, s.iterator().next());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee14ebe3e6eb52c910912fa798f096f6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "c64fbf8e70ceab15e767f5431201bfb24e04dadb", "commitAfterChange": "bae9775b4949275f2c193d6bff281f6600ac4377", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void init(  )", "signatureAfterChange": "     public void init(  )", "diff": ["-        resize( SIZE );", "+        // create a JGraphT graph", "+        GraphFactory    gf = GraphFactory.getFactory(  );", "+        ListenableGraph g =", "+            gf.createListenableGraph( gf.createDirectedGraph(  ) );", "-        // add some sample data", "-        Graph g = m_graph;", "+        // create a visualization using JGraph, via an adapter", "+        m_jgAdapter = new JGraphModelAdapter( g );", "+", "+        JGraph jgraph = new JGraph( m_jgAdapter );", "+", "+        adjustDisplaySettings( jgraph );", "+        getContentPane(  ).add( jgraph );", "+        resize( DEFAULT_SIZE );", "+", "+        // add some sample data (graph manipulated via JGraphT)", "-        // position the vertices", "+        // position vertices nicely within JGraph component", "+", "+        // that's all there is to it!..."]}]}