{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61f9bc7bf1680071aed705c2cba5f938", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d15511307f946acc01ff98a025b154", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testShortestPath()", "signatureAfterChange": "     public void testShortestPath(  )", "diff": ["-    public void testShortestPath() {", "-        WeightedGraph         g        = create();", "-        ShortestPathAlgorithm alg      = new DijkstraShortestPathAlgorithm(g);", "-        WeightedGraph         pathTree = alg.shortestPathTree(m_v1);", "+    public void testShortestPath(  ) {", "+        WeightedGraph         g        = create(  );", "+        ShortestPathAlgorithm alg      = new DijkstraShortestPathAlgorithm( g );", "+        WeightedGraph         pathTree = alg.shortestPathTree( V1 );", "-        assertEquals(4, pathTree.vertexSet().size());", "-        assertEquals(3, pathTree.edgeSet().size());", "-        assertTrue(pathTree.containsEdge(m_e1));", "-        assertTrue(pathTree.containsEdge(m_e2));", "-        assertTrue(pathTree.containsEdge(m_e4));", "+        assertEquals( 4, pathTree.vertexSet(  ).size(  ) );", "+        assertEquals( 3, pathTree.edgeSet(  ).size(  ) );", "+        assertTrue( pathTree.containsEdge( m_e1 ) );", "+        assertTrue( pathTree.containsEdge( m_e2 ) );", "+        assertTrue( pathTree.containsEdge( m_e4 ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64d3995c6c1be98ba6677d49378a87b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void exportVertex(PrintStream out, V vertex)", "signatureAfterChange": "      private void exportVertex(PrintStream out, V vertex)", "diff": ["-        String name = m_vertexNameProvider.getVertexName(vertex);", "+        String name = vertexNameProvider.getVertexName(vertex);"]}]}