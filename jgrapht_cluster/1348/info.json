{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cba7164e642ccaf4b8e0ab02df65bf8d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40f450c74581ed4eb629fb62dc55b3fa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/permutation/CollectionPermutationIter.java", "commitBeforeChange": "bc0edf459db61509a8a89769f512605e140e204b", "commitAfterChange": "be762e0954643fc21a24645a8b9b6765fa5b12ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Object[] getNextArray()", "signatureAfterChange": "     public Object [] getNextArray()", "diff": ["-\t */", "-\tpublic Object[] getNextArray()", "-\t{", "-\t\tObject[] permuationResult;\t//will hold the array result", "-\t\tif (this.permOrder.hasNextPermutaions())", "-\t\t{", "-\t\t\tthis.currPermutationArray = this.permOrder.nextPermutation();", "-\t\t\tpermuationResult = new Object[this.sourceArray.length];", "-\t\t\t", "-\t\t\t//Example : this.sourceArray = [\"A\",\"B\",\"C\",\"D\"]", "-\t\t\t//perOrder: \t\t\t\t = [ 1 , 0 , 3 , 2 ]", "-\t\t\t//result  :\t\t\t\t\t = [\"B\",\"A\",\"D\",\"C\"]", "-\t\t\tfor (int i=0;i<permuationResult.length;i++)", "-\t\t\t{", "-\t\t\t\tpermuationResult[i]=this.sourceArray[this.currPermutationArray[i]];", "-\t\t\t}", "-\t\t}", "-\t\telse ", "-\t\t{", "-\t\t\treturn permuationResult=null;", "-\t\t}", "-\t\t", "-\t\treturn permuationResult;", "-\t\t", "-\t}", "+     */", "+    public Object [] getNextArray()", "+    {", "+        Object [] permutationResult; // will hold the array result", "+        if (this.permOrder.hasNextPermutaions()) {", "+            this.currPermutationArray = this.permOrder.nextPermutation();", "+            permutationResult = new Object [this.sourceArray.length];", "+", "+            // Example : this.sourceArray = [\"A\",\"B\",\"C\",\"D\"]", "+            // perOrder:                  = [ 1 , 0 , 3 , 2 ]", "+            // result  :                  = [\"B\",\"A\",\"D\",\"C\"]", "+            for (int i = 0; i < permutationResult.length; i++) {", "+                permutationResult[i] =", "+                    this.sourceArray[this.currPermutationArray[i]];", "+            }", "+        } else {", "+            return permutationResult = null;", "+        }", "+", "+        return permutationResult;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45d18c6225d78b3b9d82ec8ee292dfa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/permutation/CollectionPermutationIter.java", "commitBeforeChange": "bc0edf459db61509a8a89769f512605e140e204b", "commitAfterChange": "be762e0954643fc21a24645a8b9b6765fa5b12ef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": "      public String toString()", "diff": ["-\t", "-\tpublic String toString()", "-\t{", "-\t\tStringBuffer sb= new StringBuffer();", "-\t\tsb.append(\"Permutation int[]=\");", "-\t\tsb.append(ArrayUtil.toString(getCurrentPermutationArray()));", "-\t\t", "-\t\tObject[] permuationResult = new Object[this.sourceArray.length];", "-\t\t", "-\t\t//Example : this.sourceArray = [\"A\",\"B\",\"C\",\"D\"]", "-\t\t//perOrder: \t\t\t\t = [ 1 , 0 , 3 , 2 ]", "-\t\t//result  :\t\t\t\t\t = [\"B\",\"A\",\"D\",\"C\"]", "-\t\tfor (int i=0;i<permuationResult.length;i++)", "-\t\t{", "-\t\t\tpermuationResult[i]=this.sourceArray[this.currPermutationArray[i]];", "-\t\t}", "-\t\tsb.append(\"\\nPermutationSet Source Object[]=\");", "-\t\tsb.append(ArrayUtil.toString(this.sourceArray));", "-\t\tsb.append(\"\\nPermutationSet Result Object[]=\");", "-\t\tsb.append(ArrayUtil.toString(permuationResult));", "-\t\treturn sb.toString();", "-\t\t", "-\t}", "+", "+    public String toString()", "+    {", "+        StringBuffer sb = new StringBuffer();", "+        sb.append(\"Permutation int[]=\");", "+        sb.append(ArrayUtil.toString(getCurrentPermutationArray()));", "+", "+        Object [] permutationResult = new Object [this.sourceArray.length];", "+", "+        // Example : this.sourceArray = [\"A\",\"B\",\"C\",\"D\"]", "+        // perOrder:                  = [ 1 , 0 , 3 , 2 ]", "+        // result  :                  = [\"B\",\"A\",\"D\",\"C\"]", "+        for (int i = 0; i < permutationResult.length; i++) {", "+            permutationResult[i] =", "+                this.sourceArray[this.currPermutationArray[i]];", "+        }", "+        sb.append(\"\\nPermutationSet Source Object[]=\");", "+        sb.append(ArrayUtil.toString(this.sourceArray));", "+        sb.append(\"\\nPermutationSet Result Object[]=\");", "+        sb.append(ArrayUtil.toString(permutationResult));", "+        return sb.toString();", "+    }"]}]}