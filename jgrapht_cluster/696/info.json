{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4dc52092b36ca6d2937fc5697e2c728", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f3f252eaa26e44f21c93817bb6fe26e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "215e752a693cedd4e948342c99e93722b6fbe26a", "commitAfterChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "         private void filterEdgesAndVertices( Object[] allCells, Set jEdges,             Set jVertices )", "signatureAfterChange": "         private void filterEdgesAndVertices( Object[] allCells, Set jEdges,             Set jVertices )", "diff": ["-                else if( !( current instanceof Port ) ) {", "-                    if( current instanceof DefaultGraphCell ) {", "-                        DefaultGraphCell graphCell = (DefaultGraphCell) current;", "+                else if( current instanceof Port ) {", "+                    // ignore it -- we don't care about ports.", "+                }", "+                else if( current instanceof DefaultGraphCell ) {", "+                    DefaultGraphCell graphCell = (DefaultGraphCell) current;", "-                        if( graphCell.isLeaf(  ) // Note: do not change the order", "-                                || ", "-                            // of these conditions; the code uses the short-cutting of ||.", "-                            ( graphCell.getFirstChild(  ) instanceof Port ) ) {", "-                            jVertices.add( current );", "-                        }", "-", "-                        // If a DefaultGraphCell has a Port as a child, it is a", "-                    }", "-                    else if( current instanceof GraphCell ) {", "-                        // If it is not a DefaultGraphCell, it doesn't have", "-                        // children.", "+                    if( graphCell.isLeaf(  ) // Note: do not change the order", "+                            || ", "+                        // of these conditions; the code uses the short-cutting of ||.", "+                        ( graphCell.getFirstChild(  ) instanceof Port ) ) {", "-                    // Otherwise, this is neither an Edge nor a GraphCell; then we", "-                    // don't know what to do with it. So ignore.", "+                    // If a DefaultGraphCell has a Port as a child, it is a", "+                }", "+                else if( current instanceof GraphCell ) {", "+                    // If it is not a DefaultGraphCell, it doesn't have", "+                    // children.", "+                    jVertices.add( current );", "+                }", "+                else {", "+                    // Otherwise, this is neither an Edge nor a GraphCell; ", "+                    // we don't have any use for it -- ignore."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dc2a9af47abdca011542e9656ee9f6a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "f097ead182b6a864b7e85b13500b2e7322efcf19", "commitAfterChange": "28244d7f7d1d506521388e82b8fbda153f48973a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "           private void addUnseenChildrenOf( Object vertex )", "signatureAfterChange": "           private void addUnseenChildrenOf( Object vertex )", "diff": ["-                if( !m_seen.containsKey( v ) ) {", "-                    encounterVertex( v, e );", "+                if( m_seen.containsKey( v ) ) {", "+                    encounterVertexAgain( v, e );", "-                    encounterVertexAgain( v, e );", "+                    encounterVertex( v, e );"]}]}