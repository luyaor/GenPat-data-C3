{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12815686b9c86a77fbd675deeb0a6ea9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21bf9e275fac342331d19b2a9a1197c9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "a4491f801ff4eba32d8029dda18c582844b268e3", "commitAfterChange": "dca8f0b0b2b997b3562b349da681aa495eb852bf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void removeJGraphTEdge( Edge e )", "signatureAfterChange": "     protected void removeJGraphTEdge( org._3pq.jgrapht.Edge jtEdge )", "diff": ["-    protected void removeJGraphTEdge( Edge e ) {", "-        DefaultEdge edgeCell = (DefaultEdge) m_edgeCells.remove( e );", "-        Object[]    cells = { edgeCell };", "+     */", "+    protected void removeJGraphTEdge( org._3pq.jgrapht.Edge jtEdge ) {", "+        DefaultEdge edgeCell = (DefaultEdge) m_edgeToCell.remove( jtEdge );", "+        m_cellToEdge.remove( edgeCell );", "+", "+        Object[] cells = { edgeCell };", "+        m_jEdgesBeingRemoved.add( edgeCell );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f9439b4718e19d7a029f1086e67a97", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "a4491f801ff4eba32d8029dda18c582844b268e3", "commitAfterChange": "dca8f0b0b2b997b3562b349da681aa495eb852bf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void addJGraphTEdge( Edge e )", "signatureAfterChange": "     protected void addJGraphTEdge( org._3pq.jgrapht.Edge jtEdge )", "diff": ["-     */", "-    protected void addJGraphTEdge( Edge e ) {", "-        DefaultEdge edgeCell = m_cellFactory.createEdgeCell( e );", "-        m_edgeCells.put( e, edgeCell );", "+    protected void addJGraphTEdge( org._3pq.jgrapht.Edge jtEdge ) {", "+        DefaultEdge edgeCell = m_cellFactory.createEdgeCell( jtEdge );", "+        m_edgeToCell.put( jtEdge, edgeCell );", "+        m_cellToEdge.put( edgeCell, jtEdge );", "-        cs.connect( edgeCell, getVertexPort( e.getSource(  ) ),", "-            getVertexPort( e.getTarget(  ) ) );", "+        cs.connect( edgeCell, getVertexPort( jtEdge.getSource(  ) ),", "+            getVertexPort( jtEdge.getTarget(  ) ) );", "+        m_jEdgesBeingAdded.add( edgeCell );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e73fe11c61dec1daaac126974213c5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "c87d12a818047704c2c8c107eb5f33acb7c6c713", "commitAfterChange": "266aaff86900229452724c5c419affe03a758648", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent(         int eventType,         E edge)", "signatureAfterChange": "      private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent(         int eventType, E edge, V source, V target)", "diff": ["-        int eventType,", "-        E edge)", "+        int eventType, E edge, V source, V target)", "+            reuseableEdgeEvent.setEdgeSource(source);", "+            reuseableEdgeEvent.setEdgeTarget(target);", "-            return new GraphEdgeChangeEvent<V, E>(this, eventType, edge);", "+            return new GraphEdgeChangeEvent<V, E>(", "+                this, eventType, edge, source, target);"]}]}