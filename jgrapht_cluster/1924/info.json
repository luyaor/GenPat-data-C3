{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0441665c73e1362861d4cfbbdea64425", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a074b6a3e4c1575aa48256b2a7c2f550", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphHelper.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static <V, E extends Edge<V>> List<V> neighborListOf(Graph<V, E> g,         V vertex)", "signatureAfterChange": "     public static <V, E extends Edge<V>> List<V> neighborListOf(Graph<V, E> g,         V vertex)", "diff": ["-        List neighbors = new ArrayList();", "+        List<V> neighbors = new ArrayList<V>();", "-        for (Iterator i = g.edgesOf(vertex).iterator(); i.hasNext();) {", "-            Edge e = (Edge) i.next();", "-            neighbors.add(e.oppositeVertex(vertex));", "+        for( E e : g.edgesOf(vertex) ) {", "+        \tneighbors.add(e.oppositeVertex(vertex));        \t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9792e9a42c4b612357fe75bfdadb797", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public List edgesOf( Object vertex )", "signatureAfterChange": "     public List<E> edgesOf( V vertex )", "diff": ["-    public List edgesOf( Object vertex ) {", "+    public List<E> edgesOf( V vertex ) {", "-        List      baseEdges = m_base.edgesOf( vertex );", "+        List<E>   baseEdges = m_base.edgesOf( vertex );", "-        for( Iterator i = baseEdges.iterator(  ); i.hasNext(  ); ) {", "-            Edge e = (Edge) i.next(  );", "+        for( E e : baseEdges ) {"]}]}