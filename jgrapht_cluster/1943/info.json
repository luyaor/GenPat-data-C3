{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3b5b0911553a3c559a291a9f50834d7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9343a481fd9a18c9b5070b208237923b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/HopcroftKarpBipartiteMatching.java", "commitBeforeChange": "863926a00bf4e3994775ae79f69187320b0efdf2", "commitAfterChange": "013f82ef9340f881e4393a0079889bf535149b94", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate List<LinkedList<V>> getAugmentingPaths()", "signatureAfterChange": " \t \tprivate List<LinkedList<V>> getAugmentingPaths()", "diff": ["-\t\t\t\t\tif(usedVertices.contains(neighbor) || matching.contains(graph.getEdge(vertex, neighbor)))", "+", "+", "+", "+\t\t\t\t\tif(usedVertices.contains(neighbor))", "+            // Vertices placed into odd-layer may not be matched by any other vertices except for the one", "+            // we came from"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa9937af33926a26a9cafb8dbf09ba53", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/HopcroftKarpBipartiteMatching.java", "commitBeforeChange": "9681504586e103d7dc5a4670b6f76ddb37e3977b", "commitAfterChange": "544318759e8ef143a1f7ce54d385b8bb1d1e42ef", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate List<LinkedList<V>> getAugmentingPaths()", "signatureAfterChange": " \t \tprivate List<LinkedList<V>> getAugmentingPaths()", "diff": ["-\t\t\t\t\tif(usedVertices.contains(neighbor) || matching.contains(graph.getEdge(vertex, neighbor)))", "+", "+", "+", "+\t\t\t\t\tif(usedVertices.contains(neighbor) /* || matching.contains(graph.getEdge(vertex, neighbor)) */ )", "+", "+                        // Vertices placed into odd-layer may not be matched by any other vertices except for the one", "+                        // we came from", "+", "+"]}]}