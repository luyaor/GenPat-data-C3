{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "480852f0e31222510cbd702b29a34542", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f322af61c0f49824d75e14a19f0aa3b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/SimpleGraphPath.java", "commitBeforeChange": "b5404750cc623a978978783f4ef48335685c8703", "commitAfterChange": "f1d857c1f9c2cfee0332801a7f0c41e4781f3280", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SimpleGraphPath(SimpleGraph<V, E> simpleGraph, List<V> vertices, double weight)", "signatureAfterChange": "     public SimpleGraphPath(SimpleGraph<V, E> simpleGraph, List<V> vertices, double weight)", "diff": ["+        if (vertices.size() < 2) {", "+            throw new IllegalArgumentException(", "+                \"At least two vertices are required to form a path\");", "+        }", "+        ", "-            if (getGraph().containsEdge(currentEdge))", "+            if (currentEdge != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58d7e174c063909528aa5e458bdb7b44", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "a736ef4553804c704f72792dd561ec69fbdbc33d", "commitAfterChange": "4abc8e28d7e02016cce20e56944f19197c3e413d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultListenableGraph( Graph g )", "signatureAfterChange": "     public DefaultListenableGraph( Graph g )", "diff": ["+", "+        // the following restriction could be relaxed in the future.", "+        if( g instanceof ListenableGraph ) {", "+            throw new IllegalArgumentException( ", "+                \"base graph cannot be listenable\" );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c623ea94badde77784edd9b54791acc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "7e56ac8164b9ab664812d95ba3304a03dad6203a", "commitAfterChange": "4d4d3e7d82c8c87eb6db77a12d83d53d12d734bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "diff": ["+        if (target.vertexSet().size() != numOfVertexes) {", "+            throw new IllegalArgumentException(", "+                \"Vertex factory did not produce \" + numOfVertexes +", "+                \" distinct vertices.\");", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed75eff5c93c5d70ebed62b9c0d1767d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "814806a526ac5cd0ec6456873087c2436693094e", "commitAfterChange": "ee669eeadb218d4615d2eaa8082ec262a58b20ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["+        if (!graph.containsVertex(endVertex)) {", "+            throw new IllegalArgumentException(", "+                \"graph must contain the end vertex\");", "+        }", "+        "]}]}