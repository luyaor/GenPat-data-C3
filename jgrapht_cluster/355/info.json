{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75e0290fccb0663e154273a9d50467dd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c159b5b379b13b1aad9017d7338282", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BellmanFordIterator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<V> next()", "signatureAfterChange": "     public List<V> next()", "diff": ["-                    V oppositeVertex = edge.oppositeVertex(vertex);", "+                    V oppositeVertex = Graphs.getOppositeVertex(", "+                        graph, edge, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537a2fc59aaf401f84d2deda6c48455a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BellmanFordIterator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private BellmanFordPathElement<V,E> createSeenData(V vertex, E edge,             double cost)", "signatureAfterChange": "     private BellmanFordPathElement<V,E> createSeenData(V vertex, E edge,             double cost)", "diff": ["-        BellmanFordPathElement<V,E> prevPathElement = getPrevSeenData(edge", "-                .oppositeVertex(vertex));", "+        BellmanFordPathElement<V,E> prevPathElement = getPrevSeenData(", "+            Graphs.getOppositeVertex(graph, edge, vertex));", "-                prevPathElement, edge, cost);", "+                graph, prevPathElement, edge, cost);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593f4e7dfc281de07f63c20d317483a4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void addUnseenChildrenOf(V vertex)", "signatureAfterChange": "      private void addUnseenChildrenOf(V vertex)", "diff": ["-            V oppositeV = edge.oppositeVertex(vertex);", "+            V oppositeV = Graphs.getOppositeVertex(m_graph, edge, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eefcc4fc46ec6cdafb3dcb78d3be4429", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BellmanFordIterator.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private boolean relaxVertexAgain(V vertex, E edge)", "signatureAfterChange": "     private boolean relaxVertexAgain(V vertex, E edge)", "diff": ["-        BellmanFordPathElement<V,E> oppositePrevData = getPrevSeenData(edge", "-                .oppositeVertex(vertex));", "+        BellmanFordPathElement<V,E> oppositePrevData = getPrevSeenData(", "+            Graphs.getOppositeVertex(graph, edge, vertex));"]}]}