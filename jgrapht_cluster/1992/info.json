{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a446ee01ed05ec30fe39e630e4583f7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598709fa51b56db37020a25c6d87294a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultGraphMapping.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultGraphMapping(Map g1ToG2, Map g2ToG1, Graph g1, Graph g2)", "signatureAfterChange": "     public DefaultGraphMapping(         Map<V,V> g1ToG2, Map<V,V> g2ToG1, Graph<V,E> g1, Graph<V,E> g2)", "diff": ["-    public DefaultGraphMapping(Map g1ToG2, Map g2ToG1, Graph g1, Graph g2)", "+    public DefaultGraphMapping(", "+        Map<V,V> g1ToG2, Map<V,V> g2ToG1, Graph<V,E> g1, Graph<V,E> g2)", "-        this.graphMapping = new Map [2];", "-        this.graphMapping[FORWARD] = g1ToG2;", "-        this.graphMapping[REVERSE] = g2ToG1;", "+        this.graphMappingForward = g1ToG2;", "+        this.graphMappingReverse = g2ToG1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4ec358fd47e682aee5f67ba48f1535", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/VertexDegreeEquivalenceComparator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean equivalenceCompare(         Object vertex1,         Object vertex2,         Object context1,         Object context2)", "signatureAfterChange": "     public boolean equivalenceCompare(         V vertex1,         V vertex2,         Graph<V,E> context1,         Graph<V,E> context2)", "diff": ["-        Object vertex1,", "-        Object vertex2,", "-        Object context1,", "-        Object context2)", "+        V vertex1,", "+        V vertex2,", "+        Graph<V,E> context1,", "+        Graph<V,E> context2)", "-        InOutDegrees inOut1 = getInOutDegrees((Graph) context1, vertex1);", "-        InOutDegrees inOut2 = getInOutDegrees((Graph) context2, vertex2);", "+        InOutDegrees inOut1 = getInOutDegrees(context1, vertex1);", "+        InOutDegrees inOut2 = getInOutDegrees(context2, vertex2);"]}]}