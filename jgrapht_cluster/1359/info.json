{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b41e506488f284f77316199867c0c8c7", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a7d9e74e96d4bf83921a7c3e19fc92f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "d12c07801b7a0a36bd4d958e50e6f59f29bea180", "commitAfterChange": "479a482e555112bb89d0c8c57eb98287001f669c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public List edgesOf( Object vertex )", "signatureAfterChange": "     public List edgesOf( Object vertex )", "diff": ["-        for( Iterator iter = baseEdges.iterator(  ); iter.hasNext(  ); ) {", "-            Edge e = (Edge) iter.next(  );", "+        for( Iterator i = baseEdges.iterator(  ); i.hasNext(  ); ) {", "+            Edge e = (Edge) i.next(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c2cd7c26ba97d74b62a2dcdea770b95", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "d12c07801b7a0a36bd4d958e50e6f59f29bea180", "commitAfterChange": "479a482e555112bb89d0c8c57eb98287001f669c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public Edge addEdge( Object sourceVertex, Object targetVertex )", "diff": ["-        for( Iterator iter = edges.iterator(  ); iter.hasNext(  ); ) {", "-            Edge e = (Edge) iter.next(  );", "+        for( Iterator i = edges.iterator(  ); i.hasNext(  ); ) {", "+            Edge e = (Edge) i.next(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81636aea2e5b06aa8686dae6118f216b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "d12c07801b7a0a36bd4d958e50e6f59f29bea180", "commitAfterChange": "479a482e555112bb89d0c8c57eb98287001f669c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List getAllEdges( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public List getAllEdges( Object sourceVertex, Object targetVertex )", "diff": ["-            for( Iterator iter = baseEdges.iterator(  ); iter.hasNext(  ); ) {", "-                Edge e = (Edge) iter.next(  );", "+            for( Iterator i = baseEdges.iterator(  ); i.hasNext(  ); ) {", "+                Edge e = (Edge) i.next(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2d89718b81610a708519b4e314e4e3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "d12c07801b7a0a36bd4d958e50e6f59f29bea180", "commitAfterChange": "479a482e555112bb89d0c8c57eb98287001f669c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "       private void addEdgesUsingFilter( Set edgeSet, Set filter )", "signatureAfterChange": "       private void addEdgesUsingFilter( Set edgeSet, Set filter )", "diff": ["-        for( Iterator iter = edgeSet.iterator(  ); iter.hasNext(  ); ) {", "-            e     = (Edge) iter.next(  );", "+        for( Iterator i = edgeSet.iterator(  ); i.hasNext(  ); ) {", "+            e     = (Edge) i.next(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8bdb82228e672b62f8a4be15fa76870", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "d12c07801b7a0a36bd4d958e50e6f59f29bea180", "commitAfterChange": "479a482e555112bb89d0c8c57eb98287001f669c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "       private void addVerticesUsingFilter( Set vertexSet, Set filter )", "signatureAfterChange": "       private void addVerticesUsingFilter( Set vertexSet, Set filter )", "diff": ["-        for( Iterator iter = vertexSet.iterator(  ); iter.hasNext(  ); ) {", "-            v = iter.next(  );", "+        for( Iterator i = vertexSet.iterator(  ); i.hasNext(  ); ) {", "+            v = i.next(  );", "-            }", "-        }", "-    }"]}]}