{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f882557fca4f2ea170eb887252a11d35", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93925cf6f53e562c483f3e58a52c5ccf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testWheelGraphAddRemoveParts()", "signatureAfterChange": "      public void testWheelGraphAddRemoveParts()", "diff": ["-        Graph g1 = new DefaultDirectedGraph();", "-        Graph g2 = new DefaultDirectedGraph();", "-        WheelGraphGenerator gen1 =", "-            new WheelGraphGenerator(NUM_OF_VERTEXES_IN_WHEEL);", "+        Graph<Integer,DirectedEdge<Integer>> g1 = new DefaultDirectedGraph<Integer,DirectedEdge<Integer>>();", "+        Graph<Integer,DirectedEdge<Integer>> g2 = new DefaultDirectedGraph<Integer,DirectedEdge<Integer>>();", "+        WheelGraphGenerator<Integer,DirectedEdge<Integer>>  gen1 =", "+            new WheelGraphGenerator<Integer,DirectedEdge<Integer>> (NUM_OF_VERTEXES_IN_WHEEL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed7848c162cf8e591129afadbac7a98", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+        Graph<V,E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String,V> resultMap)", "-        Map orderToVertexMap = new HashMap(this.numOfVertexes);", "+        Map<Integer,V> orderToVertexMap = new HashMap<Integer,V>(this.numOfVertexes);", "-            Object currVertex = vertexFactory.createVertex();", "+            V currVertex = vertexFactory.createVertex();", "-        EdgeTopologyFactory edgesFactory =", "+        EdgeTopologyFactory<V,E> edgesFactory ="]}]}