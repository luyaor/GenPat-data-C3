{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d36ee3ec155060fe2439a73f25e89fd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c7bbf4d460f89a44b1dc1ee7c1a6d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/KShortestPathsIterator.java", "commitBeforeChange": "d11cabd1aabdc954107d901bc835dd46e2c5b915", "commitAfterChange": "695a606157d7ef974075682ce4ecc3e1dfdc85a4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public KShortestPathsIterator(Graph<V, E> graph, V startVertex, int maxSize)", "signatureAfterChange": "     public KShortestPathsIterator(Graph<V, E> graph, V startVertex,             V endVertex, int maxSize)", "diff": ["-    public KShortestPathsIterator(Graph<V, E> graph, V startVertex, int maxSize)", "-    {", "+    public KShortestPathsIterator(Graph<V, E> graph, V startVertex,", "+            V endVertex, int maxSize) {", "+        this.endVertex = endVertex;", "-        this.k = maxSize;", "-        this.prevSeenDataContainer =", "-            new HashMap<V, RankingPathElementList<V, E>>();", "+        this.prevSeenDataContainer = new HashMap<V, RankingPathElementList<V, E>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7498b4f215c1ebc069c5e9835a131787", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DijkstraShortestPath( Graph graph, Object startVertex,         Object endVertex, double radius )", "signatureAfterChange": "     public DijkstraShortestPath( Graph<V, E> graph, V startVertex,         V endVertex, double radius )", "diff": ["-    public DijkstraShortestPath( Graph graph, Object startVertex,", "-        Object endVertex, double radius ) {", "-        ClosestFirstIterator iter =", "+    public DijkstraShortestPath( Graph<V, E> graph, V startVertex,", "+        V endVertex, double radius ) {", "+        ClosestFirstIterator<V, E> iter =", "-            Object vertex = iter.next(  );", "+            V vertex = iter.next(  );"]}]}