{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e931e2fae31ae8c16dd03318f7a229d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e7872b8a24945e706ec09da100fc82", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected void setUp()", "signatureAfterChange": "     protected void setUp()", "diff": ["-        m_directed = new DefaultDirectedGraph<String, DirEdge<String>>();", "-        m_undirected = new AsUndirectedGraph<String, Edge<String>>(m_directed);", "+        m_directed = new DefaultDirectedGraph<String, DefaultEdge>(", "+            DefaultEdge.class);", "+        m_undirected = new AsUndirectedGraph<String, DefaultEdge>(m_directed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18b8b49561cf500794aa125548c5c34e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SerializationTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public void testDirectedMultigraph()         throws Exception", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public void testDirectedMultigraph()         throws Exception", "diff": ["-        DirectedMultigraph<String,DirEdge<String>> graph =", "-            new DirectedMultigraph<String,DirEdge<String>>();", "+        DirectedMultigraph<String,DefaultEdge> graph =", "+            new DirectedMultigraph<String,DefaultEdge>(", "+                DefaultEdge.class);", "-        graph = (DirectedMultigraph<String,DirEdge<String>>) serializeAndDeserialize(graph);", "+        graph = (DirectedMultigraph<String,DefaultEdge>) serializeAndDeserialize(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22922ff62e296c7872743563a7f6425b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph<String,Edge<String>> create()", "signatureAfterChange": "     public Pseudograph<String,DefaultEdge> create()", "diff": ["-    public Pseudograph<String,Edge<String>> create()", "+    public Pseudograph<String,DefaultEdge> create()", "-        Pseudograph<String,Edge<String>> g = new Pseudograph<String,Edge<String>>();", "+        Pseudograph<String,DefaultEdge> g =", "+            new Pseudograph<String,DefaultEdge>(DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad596599cc573551708f89346722b02", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEdgeSetFactory()", "signatureAfterChange": "     public void testEdgeSetFactory()", "diff": ["-        DirectedMultigraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "-        g.setEdgeSetFactory(new LinkedHashSetFactory<String, DirEdge<String>>());", "+        DirectedMultigraph<String, DefaultEdge> g =", "+            new DirectedMultigraph<String, DefaultEdge>(", "+                DefaultEdge.class);", "+        g.setEdgeSetFactory(new LinkedHashSetFactory<String, DefaultEdge>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640edb00d7516223defcbffc5fa0eee6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BronKerboschCliqueFinderTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testFindAll()", "signatureAfterChange": "      public void testFindAll()", "diff": ["-        SimpleGraph<String, Edge<String>> g =", "-            new SimpleGraph<String, Edge<String>>();", "+        SimpleGraph<String, DefaultEdge> g =", "+            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);", "-        BronKerboschCliqueFinder<String, Edge<String>> finder =", "-            new BronKerboschCliqueFinder<String, Edge<String>>(g);", "+        BronKerboschCliqueFinder<String, DefaultEdge> finder =", "+            new BronKerboschCliqueFinder<String, DefaultEdge>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c2fb8f40ae72a0ac4299c90f8f926aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "signatureAfterChange": "      private DirectedGraph<String, DefaultEdge> createMultiTriangleWithMultiLoop()", "diff": ["-    private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "+    private DirectedGraph<String, DefaultEdge> createMultiTriangleWithMultiLoop()", "-        DirectedGraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "+        DirectedGraph<String, DefaultEdge> g =", "+            new DirectedMultigraph<String, DefaultEdge>(", "+                DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f9bc8d94a81f807e712c1d430a38a93", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BronKerboschCliqueFinderTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testFindBiggest()", "signatureAfterChange": "      public void testFindBiggest()", "diff": ["-        SimpleGraph<String, Edge<String>> g =", "-            new SimpleGraph<String, Edge<String>>();", "+        SimpleGraph<String, DefaultEdge> g =", "+            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);", "-        BronKerboschCliqueFinder<String, Edge<String>> finder =", "-            new BronKerboschCliqueFinder<String, Edge<String>>(g);", "+        BronKerboschCliqueFinder<String, DefaultEdge> finder =", "+            new BronKerboschCliqueFinder<String, DefaultEdge>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b551689627cef87b0ffb46647afabb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testLinear4vertexIsomorphicGraph()", "signatureAfterChange": "      public void testLinear4vertexIsomorphicGraph()", "diff": ["-        Graph<Integer,DirectedEdge<Integer>>", "-            g1 = new DefaultDirectedGraph<Integer,DirectedEdge<Integer>>();", "+        Graph<Integer,DefaultEdge>", "+            g1 = new DefaultDirectedGraph<Integer,DefaultEdge>(", "+                DefaultEdge.class);", "-        Graph<Integer,DirectedEdge<Integer>>", "-            g2 = new DefaultDirectedGraph<Integer,DirectedEdge<Integer>>();", "+        Graph<Integer,DefaultEdge>", "+            g2 = new DefaultDirectedGraph<Integer,DefaultEdge>(", "+                DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b4c385340b61c06ee977348c00b4b93", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/CloneTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public void testCloneSpecificsBug()", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public void testCloneSpecificsBug()", "diff": ["-        SimpleGraph<String,Edge<String>> g1 = new SimpleGraph<String,Edge<String>>();", "+        SimpleGraph<String,DefaultEdge> g1 =", "+            new SimpleGraph<String,DefaultEdge>(DefaultEdge.class);", "-        SimpleGraph<String,Edge<String>> g2 =", "-            (SimpleGraph<String,Edge<String>>) g1.clone();    // Type-safty warning OK with clone", "+        SimpleGraph<String,DefaultEdge> g2 =", "+            (SimpleGraph<String,DefaultEdge>) g1.clone();    // Type-safty warning OK with clone"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4ce38c03705f227c0a735623af8932", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/GenericGraphsTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void setUp()", "signatureAfterChange": "     protected void setUp()", "diff": ["-        objectGraph = new DefaultDirectedGraph<Object,DirEdge<Object>>();", "-        fooFooGraph = new SimpleGraph<FooVertex,FooEdge<FooVertex>>();", "-        barBarGraph = new SimpleGraph<BarVertex,BarEdge<BarVertex>>();", "+        objectGraph = new DefaultDirectedGraph<Object,DefaultEdge>(", "+            DefaultEdge.class);", "+        fooFooGraph = new SimpleGraph<FooVertex,FooEdge>(FooEdge.class);", "+        barBarGraph = new SimpleGraph<BarVertex,BarEdge>(BarEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1f6dc7497ff9cfa4a8d0c15f1edc86", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private WeightedGraph<String,DirectedEdge<String>> create()", "signatureAfterChange": "      private WeightedGraph<String,DefaultEdge> create()", "diff": ["-    private WeightedGraph<String,DirectedEdge<String>> create()", "+    private WeightedGraph<String,DefaultEdge> create()", "-        WeightedGraph<String,DirectedEdge<String>>", "-            g = new WeightedPseudograph<String,DirectedEdge<String>>();", "+        WeightedGraph<String,DefaultEdge>", "+            g = new WeightedPseudograph<String,DefaultEdge>();", "-        m_e1 = GraphHelper.addEdge(g, V1, V2, 1);", "-        m_e2 = GraphHelper.addEdge(g, V2, V3, 2);", "-        m_e3 = GraphHelper.addEdge(g, V3, V1, 4);", "-        m_e4 = GraphHelper.addEdge(g, V3, V4, 10);", "-        m_u = GraphHelper.addEdge(g, V3, V3, 5);", "+        m_e1 = Graphs.addEdge(g, V1, V2, 1);", "+        m_e2 = Graphs.addEdge(g, V2, V3, 2);", "+        m_e3 = Graphs.addEdge(g, V3, V1, 4);", "+        m_e4 = Graphs.addEdge(g, V3, V4, 10);", "+        m_u = Graphs.addEdge(g, V3, V3, 5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0272ccfe54a8df9ed24aa950b6bfe75", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDirectedGraph()", "signatureAfterChange": "     public void testDirectedGraph()", "diff": ["-        ListenableDirectedGraph<String,DirEdge<String>>", "-                g = new ListenableDirectedGraph<String,DirEdge<String>>();", "+        ListenableDirectedGraph<String,DefaultEdge>", "+            g = new ListenableDirectedGraph<String,DefaultEdge>(", "+                DefaultEdge.class);", "-        ConnectivityInspector<String,DirEdge<String>>", "-                inspector = new ConnectivityInspector<String,DirEdge<String>>(g);", "+        ConnectivityInspector<String,DefaultEdge>", "+                inspector = new ConnectivityInspector<String,DefaultEdge>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d32820eebd6c13c0ea36d09257388b54", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void checkRelation(         Graph<Integer,DirectedEdge<Integer>> [] graphs,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "      private void checkRelation(         Graph<Integer,DefaultEdge> [] graphs,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-        Graph<Integer,DirectedEdge<Integer>> [] graphs,", "+        Graph<Integer,DefaultEdge> [] graphs,", "-        Graph<Integer,DirectedEdge<Integer>> g1 = graphs[0];", "-        Graph<Integer,DirectedEdge<Integer>> g2 = graphs[1];", "+        Graph<Integer,DefaultEdge> g1 = graphs[0];", "+        Graph<Integer,DefaultEdge> g2 = graphs[1];", "-                Edge e1 = (Edge) iter.next();", "-                Edge e2 = (Edge) isoResult.getCorrespondence(e1, true);", "+                DefaultEdge e1 = (DefaultEdge) iter.next();", "+                DefaultEdge e2 = (DefaultEdge) isoResult.getCorrespondence(e1, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3911103b17b7e81d1e509d1a6241713", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testWheelGraphAddRemoveParts()", "signatureAfterChange": "      public void testWheelGraphAddRemoveParts()", "diff": ["-        Graph<Integer,DirectedEdge<Integer>> g1 = new DefaultDirectedGraph<Integer,DirectedEdge<Integer>>();", "-        Graph<Integer,DirectedEdge<Integer>> g2 = new DefaultDirectedGraph<Integer,DirectedEdge<Integer>>();", "-        WheelGraphGenerator<Integer,DirectedEdge<Integer>>  gen1 =", "-            new WheelGraphGenerator<Integer,DirectedEdge<Integer>> (NUM_OF_VERTEXES_IN_WHEEL);", "+        Graph<Integer,DefaultEdge> g1 =", "+            new DefaultDirectedGraph<Integer,DefaultEdge>(", "+                DefaultEdge.class);", "+        Graph<Integer,DefaultEdge> g2 =", "+            new DefaultDirectedGraph<Integer,DefaultEdge>(", "+                DefaultEdge.class);", "+        WheelGraphGenerator<Integer,DefaultEdge>  gen1 =", "+            new WheelGraphGenerator<Integer,DefaultEdge> (NUM_OF_VERTEXES_IN_WHEEL);"]}]}