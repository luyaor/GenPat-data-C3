{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3653cd2d0cfccd9f64179757c61a4e7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cdfba9fccd6a110392d20ff25a32cfd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "6a8a4c15d51c52101d91cd979c3d30cc12195d89", "commitAfterChange": "1df4f6ec05a16b739e7739b1310c6980095dbcdd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void pushFlowThrough(EdgeExtension ex, double f)", "signatureAfterChange": "      protected void pushFlowThrough(EdgeExtension ex, double f)", "diff": ["-    private void pushFlowThrough(EdgeExtension ex, double f) {", "+    protected void pushFlowThrough(EdgeExtension ex, double f) {", "-        EdgeExtension iex = ex.getInverse();", "-", "-        // _DBG", "-        assert(compareFlowTo(ex.flow, 0.0) == 0 || compareFlowTo(iex.flow, 0.0) == 0);", "-", "-        if (compareFlowTo(iex.flow, f) == -1) {", "-            double d = f - iex.flow;", "-", "-            ex.flow      += d;", "-            ex.capacity  -= iex.flow;", "-", "-            iex.flow      = 0;", "-            iex.capacity += d;", "-        } else {", "-            ex.capacity -= f;", "-            iex.flow    -= f;", "-        }", "-    }", "+        super.pushFlowThrough(ex, f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c640d104b6bbc053ee8879c2407bd49", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphSquare(final Graph<V,E> g, final boolean createLoops)", "signatureAfterChange": "     public GraphSquare(final Graph<V,E> g, final boolean createLoops)", "diff": ["-        super.addAllVertices(g.vertexSet());", "+        Graphs.addAllVertices(this, g.vertexSet());", "-                            edge.getSource(),", "-                            edge.getTarget(),", "+                            g.getEdgeSource(edge),", "+                            g.getEdgeTarget(edge),", "-                            edge.getTarget(),", "-                            edge.getSource(),", "+                            g.getEdgeTarget(edge),", "+                            g.getEdgeSource(edge),"]}]}