{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "230d71f71b322e59effa0b6a3afc3942", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bbde3fd8151d5ca1a8250a315c509a4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/StoerWagnerMinimumCut.java", "commitBeforeChange": "a8056d6aafd19ddde3f88a7357d27b280fbbac76", "commitAfterChange": "8786155732723df083d81ecffc66379e7847e52a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected VertexAndWeight mergeVertices(Set<V> s, Set<V> t)", "signatureAfterChange": "     protected VertexAndWeight mergeVertices(Set<V> s, Set<V> t)", "diff": ["-        for (V v : s) {", "-            set.add(v);", "-        }", "-        for (V v : t) {", "-            set.add(v);", "-        }", "+        set.addAll(s);", "+        set.addAll(t);", "-            if ((s != v) && (t != v)) {", "+            if (s != v  &&  t != v) {", "+                double neww = 0.0;", "-                double wtv = 0.0, wsv = 0.0;", "-                    wtv = workingGraph.getEdgeWeight(etv);", "+                    neww += workingGraph.getEdgeWeight(etv);", "-                    wsv = workingGraph.getEdgeWeight(esv);", "+                    neww += workingGraph.getEdgeWeight(esv);", "-                double neww = wtv + wsv;", "-                wsum += neww;", "-                if (neww != 0.0) {", "+                if (etv != null  ||  esv != null) {", "+                    wsum += neww;", "-        return new VertexAndWeight(set, wsum);", "+        return new VertexAndWeight(set, wsum, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "421043798aff53619b093f9f670e3648", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "commitAfterChange": "5b8b2def419b220aa57ca346f586e7cc6eacdd0e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private List<String> split(String src)", "signatureAfterChange": "      private String[] split(final String src)", "diff": ["-    private List<String> split(String src)", "+    private String[] split(final String src)", "-        final List<String> l = new ArrayList<String>();", "-        final StringTokenizer tok = new StringTokenizer(src);", "-        while (tok.hasMoreTokens()) {", "-            l.add(tok.nextToken());", "+        if (src == null) {", "+            return null;", "-        return l;", "+        return src.split(\"\\\\s+\");"]}]}