{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38287f5fca854e4a4d6a70317c8ebc47", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04fed775d6a22f1c8ea8d188ac1cea8a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "586ba218cf358bfb0f3dd47d0f9d956d6b2fd235", "commitAfterChange": "6050c0cafee8f989220adf0f89822b2e772ed175", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "       private void setSpecifics(  )", "signatureAfterChange": "       private Specifics createSpecifics(  )", "diff": ["-    private void setSpecifics(  ) {", "-        if( this instanceof DirectedGraph ) {", "-            m_specifics = new DirectedSpecifics(  );", "-        }", "-        else if( this instanceof UndirectedGraph ) {", "-            m_specifics = new UndirectedSpecifics(  );", "-        }", "-        else {", "-            throw new IllegalArgumentException( ", "-                \"graph is incompatible with edge factory\" );", "-        }", "-    }", "+    private Specifics createSpecifics(  ) {", "+        if( this instanceof DirectedGraph ) {", "+            return new DirectedSpecifics(  );", "+        else if( this instanceof UndirectedGraph ) {", "+            return new UndirectedSpecifics(  );", "+        }", "+        else {", "+            throw new IllegalArgumentException( ", "+                \"must be instance of either DirectedGraph or UndirectedGraph\" );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51481cd88a802456e184149e9975e07a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected static void assertUnsupportedGraphTypes(         Graph graph1,         Graph graph2)         throws IllegalArgumentException", "signatureAfterChange": "     protected static void assertUnsupportedGraphTypes( Graph g )         throws IllegalArgumentException", "diff": ["-    protected static void assertUnsupportedGraphTypes(", "-        Graph graph1,", "-        Graph graph2)", "+    protected static void assertUnsupportedGraphTypes( Graph g )", "-        Graph [] graphArray = new Graph [] {", "-                graph1, graph2", "-            };", "-        for (int i = 0; i < graphArray.length; i++) {", "-            Graph g = graphArray[i];", "-            if ((g instanceof Multigraph)", "-                || (g instanceof DirectedMultigraph)", "-                || (g instanceof Pseudograph)) {", "-                throw new IllegalArgumentException(", "-                    \"graph type not supported for the graph\" + g);", "-            }", "+        if ((g instanceof Multigraph)", "+            || (g instanceof DirectedMultigraph)", "+            || (g instanceof Pseudograph)) {", "+            throw new IllegalArgumentException(", "+                \"graph type not supported for the graph\" + g);"]}]}