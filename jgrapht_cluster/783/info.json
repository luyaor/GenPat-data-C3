{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49f42595ea33e55dc5fbf0b0cc8c2281", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c4ed1da0d5fe5cf80be1f67417a081", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "09f8c42369e19bad56b44493e9da23f84c9f33d0", "commitAfterChange": "8eb48033f951ffcc0a59543e123e6881cda6c1db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      private void markPath(V v, V b, V child)", "signatureAfterChange": "      private void markPath(V v, V child, V stem, Set<V> blossom)", "diff": ["-    private void markPath(V v, V b, V child)", "+    private void markPath(V v, V child, V stem, Set<V> blossom)", "-        while (base.get(v) != b) {", "-            blossom.add(base.get(v));", "-            blossom.add(base.get(match.get(v)));", "-            p.put(v, child);", "+        while (contracted.get(v) != stem) {", "+            blossom.add(contracted.get(v));", "+            blossom.add(contracted.get(match.get(v)));", "+            path.put(v, child);", "-            v = p.get(match.get(v));", "+            v = path.get(match.get(v));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb611ce54cc41f76aaec5e221e99b508", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/EdmondsBlossomShrinking.java", "commitBeforeChange": "09f8c42369e19bad56b44493e9da23f84c9f33d0", "commitAfterChange": "8eb48033f951ffcc0a59543e123e6881cda6c1db", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private V lca(UndirectedGraph<V, E> g, V a, V b)", "signatureAfterChange": "      private V lca(V a, V b)", "diff": ["-    private V lca(UndirectedGraph<V, E> g, V a, V b)", "+    private V lca(V a, V b)", "-            a = base.get(a);", "+            a = contracted.get(a);", "-            a = p.get(match.get(a));", "+            a = path.get(match.get(a));", "-            b = base.get(b);", "+            b = contracted.get(b);", "-            b = p.get(match.get(b));", "+            b = path.get(match.get(b));"]}]}