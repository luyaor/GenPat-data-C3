{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d5158d5a7c7377a20f72100f8a7bf38", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebfea6393921cfc3b8d8426378e2e8d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public CycleDetector(DirectedGraph<V, E> graph)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\" \tpublic <EE extends E & DirEdge<V>> CycleDetector(DirectedGraph<V, EE> graph)", "diff": ["-    public CycleDetector(DirectedGraph<V, E> graph)", "+    @SuppressWarnings(\"unchecked\")    // FIXME hb 28-Nov-05: Don't know how to solve this, yet", "+\tpublic <EE extends E & DirEdge<V>> CycleDetector(DirectedGraph<V, EE> graph)", "-        m_graph = graph;", "+        m_graph = (Graph<V,E>)graph;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8da661cf76f6eb8278fa0ba3bce704", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AsUndirectedGraph(DirectedGraph<V, E> g)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\" \tpublic <ED extends E & DirEdge<V>> AsUndirectedGraph(DirectedGraph<V,ED> g)", "diff": ["-    public AsUndirectedGraph(DirectedGraph<V, E> g)", "+    @SuppressWarnings(\"unchecked\")\t// FIXME hb 28-nov-05: Don't know how to fix this, yet", "+\tpublic <ED extends E & DirEdge<V>> AsUndirectedGraph(DirectedGraph<V,ED> g)", "-        super(g);", "+        super((Graph<V,E>)g);"]}]}