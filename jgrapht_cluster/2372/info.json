{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9676e5884cf6e365b16e65d8734cf5fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e89aff0eddef1c7ffe409e8ae99bbf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "9f8569bb1ed1ffa389e6f94e88bd1182c5674971", "commitAfterChange": "525e442c222c002a4f16b1b728866c0fe1bc7a96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BreadthFirstIterator( Graph g, Object startVertex,         boolean crossComponentTraversal, boolean ignoreEdgeDirection )", "signatureAfterChange": "     public BreadthFirstIterator( Graph g, Object startVertex,         boolean ignoreEdgeDirection )", "diff": ["-        boolean crossComponentTraversal, boolean ignoreEdgeDirection ) {", "-        super( g, startVertex, crossComponentTraversal, new SimpleQueue(  ),", "-               ignoreEdgeDirection );", "+        boolean ignoreEdgeDirection ) {", "+        super( g, startVertex, new SimpleQueue(  ), ignoreEdgeDirection );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a94c7ba04bd02978e3c9a28707d6abc3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "9f8569bb1ed1ffa389e6f94e88bd1182c5674971", "commitAfterChange": "525e442c222c002a4f16b1b728866c0fe1bc7a96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DepthFirstIterator( Graph g, Object startVertex,         boolean crossComponentTraversal, boolean ignoreEdgeDirection )", "signatureAfterChange": "     public DepthFirstIterator( Graph g, Object startVertex,         boolean ignoreEdgeDirection )", "diff": ["-        boolean crossComponentTraversal, boolean ignoreEdgeDirection ) {", "-        super( g, startVertex, crossComponentTraversal, new SimpleStack(  ),", "-               ignoreEdgeDirection );", "+        boolean ignoreEdgeDirection ) {", "+        super( g, startVertex, new SimpleStack(  ), ignoreEdgeDirection );"]}]}