{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff108ba61d693a408f2563ba06380b54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d47e782e53f2f01c4e17c7a24c00f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "signatureAfterChange": "     public boolean addEdge(V sourceVertex, V targetVertex, E e)", "diff": ["-        if (!m_base.containsEdge(e)) {", "+        if (!base.containsEdge(e)) {", "-        assert(m_base.getEdgeSource(e) == sourceVertex);", "-        assert(m_base.getEdgeTarget(e) == targetVertex);", "+        assert(base.getEdgeSource(e) == sourceVertex);", "+        assert(base.getEdgeTarget(e) == targetVertex);", "-            m_edgeSet.add(e);", "+            edgeSet.add(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89660e70a7d42851ca9b29a608f1b596", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public E addEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public E addEdge(V sourceVertex, V targetVertex)", "diff": ["-        if (!m_allowingMultipleEdges", "+        if (!allowingMultipleEdges", "-        if (!m_allowingLoops && sourceVertex.equals(targetVertex)) {", "+        if (!allowingLoops && sourceVertex.equals(targetVertex)) {", "-        E e = m_edgeFactory.createEdge(sourceVertex, targetVertex);", "+        E e = edgeFactory.createEdge(sourceVertex, targetVertex);", "-            m_edgeMap.put(e, intrusiveEdge);", "-            m_specifics.addEdgeToTouchingVertices(e);", "+            edgeMap.put(e, intrusiveEdge);", "+            specifics.addEdgeToTouchingVertices(e);"]}]}