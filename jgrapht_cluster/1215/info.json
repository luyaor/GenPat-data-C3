{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fb8a896462d72b9d3523191ee04a7c3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080a84c636403bd35ea083693aeaf274", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "         public List<E> edgesOf(V vertex)", "signatureAfterChange": "         public Set<E> edgesOf(V vertex)", "diff": ["-        public List<E> edgesOf(V vertex)", "+        public Set<E> edgesOf(V vertex)", "-            ArrayList<E> inAndOut =", "-                new ArrayList<E>(getEdgeContainer(vertex).m_incoming);", "+            ArrayUnenforcedSet<E> inAndOut =", "+                new ArrayUnenforcedSet<E>(getEdgeContainer(vertex).m_incoming);", "-                List loops = getAllEdges(vertex, vertex);", "+                Set<E> loops = getAllEdges(vertex, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ce7bc1822f4150b008259bf9dd4867d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "-        List<E> edges = null;", "+        Set<E> edges = null;", "-            edges = new ArrayList<E>();", "+            edges = new ArrayUnenforcedSet<E>();", "-            List<E> baseEdges = m_base.getAllEdges(sourceVertex, targetVertex);", "+            Set<E> baseEdges = m_base.getAllEdges(sourceVertex, targetVertex);"]}]}