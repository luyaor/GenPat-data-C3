{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "939fc766d58e28b0c43d5ebc0e9220cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b3222738e4b46302b70ed1722a48d31", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "         public int degreeOf(V vertex)", "signatureAfterChange": "         public int degreeOf(V vertex)", "diff": ["-                List edges = getEdgeContainer(vertex).m_vertexEdges;", "+                List<E> edges = getEdgeContainer(vertex).m_vertexEdges;", "-                for (Iterator iter = edges.iterator(); iter.hasNext();) {", "-                    Edge e = (Edge) iter.next();", "+                for (E e : edges ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b48db2ac326bb71fabd99a57d217e5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a1594c7a8cf14f3607828e0c2206c8cb46973c14", "commitAfterChange": "7c2fd4236ba8ec0b0b36e4596ee2ead1af54cf2d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-                Iterator<? extends E> iter =", "-                    visitedGraph.outgoingEdgesOf(data.vertex).iterator();", "-", "-                while (iter.hasNext()) {", "-                    E edge = iter.next();", "+                for (E edge : visitedGraph.outgoingEdgesOf(data.vertex)) {"]}]}