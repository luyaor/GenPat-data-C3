{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f230be78ba8ffe7f30bfc253b042e92c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a12691d75a9bdfd54ac5dd34a0b9f4f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/heap/AbstractHeap.java", "commitBeforeChange": "ede00ba6ca48a7a81231a62519a30fabb26ae338", "commitAfterChange": "f63e1142cae73862c9c4f7b6ce46225b40f3ef86", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public abstract void add(Object x);", "signatureAfterChange": "     public final void add( Object x )", "diff": ["-    public abstract void add(Object x);", "+     */", "+    public final void add( Object x ) {", "+        ElementPeer peer = createPeer( x );", "+        if( x instanceof HeapElement ) {", "+            ( (HeapElement) x ).setPeer( peer );", "+        else {", "+            if( _peerMap == null ) {", "+                _peerMap = new HashMap(  );", "+", "+            _peerMap.put( x, peer );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77311c2488866b8110f67f33303000ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "28d3779d4da499741844a8a1c70731e545d11081", "commitAfterChange": "30d14da4bec00a639c045bfbd68becc95dcaa92c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( Object v )", "diff": ["-        boolean modified = super.removeVertex( v );", "+        if( containsVertex( v ) ) {", "+            List touchingEdgesList = edgesOf( v );", "-        if( modified ) {", "+            // cannot iterate over list - will cause ConcurrentModificationException", "+            Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "+            touchingEdgesList.toArray( touchingEdges );", "+", "+            removeAllEdges( touchingEdges );", "+", "+            super.removeVertex( v ); // remove the vertex itself", "+", "+            ", "+            return true;", "-", "-        return modified;", "+        else {", "+            return false;", "+        }"]}]}