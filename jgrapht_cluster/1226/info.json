{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc1da3fc3e871c5f4a72efa40365c009", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e14a72b7c1964ef6de2782a0daf68d8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "9d26a72317763d88cc7e757c947354e046d22725", "commitAfterChange": "f50fd6b0f3c434b5c61c7c28fc67bb2b87beea0b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public UndirectedWeightedGraph createSubgraph(          UndirectedWeightedGraph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public UndirectedWeightedGraph createSubgraph(          UndirectedWeightedGraph base, Set vertexSubset, Set edgeSubset )", "diff": ["-        return new SubgraphUndirectedWeighted( base, vertexSubset, edgeSubset );", "+        if( base instanceof ListenableGraph ) {", "+            return new SubgraphUndirectedWeighted( base, vertexSubset,", "+                edgeSubset );", "+        }", "+        else {", "+            throw new IllegalArgumentException( BASE_GRAPH_MUST_BE_LISTENABLE );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebe05a27b83f1906294406e5ea29f29", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "9d26a72317763d88cc7e757c947354e046d22725", "commitAfterChange": "f50fd6b0f3c434b5c61c7c28fc67bb2b87beea0b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public UndirectedGraph createSubgraph( UndirectedGraph base,         Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public UndirectedGraph createSubgraph( UndirectedGraph base,         Set vertexSubset, Set edgeSubset )", "diff": ["-        return new SubgraphUndirected( base, vertexSubset, edgeSubset );", "+        if( base instanceof ListenableGraph ) {", "+            return new SubgraphUndirected( base, vertexSubset, edgeSubset );", "+        }", "+        else {", "+            throw new IllegalArgumentException( BASE_GRAPH_MUST_BE_LISTENABLE );", "+        }"]}]}