{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e4f19dcba63349b8ef228efccc5e740", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a4263388ca923250c9087c3272b679", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSet.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public EquivalenceSet(         Object aElement,         EquivalenceComparator aEqComparator,         Object aComparatorContext)", "signatureAfterChange": "     public EquivalenceSet(         E aElement,         EquivalenceComparator<? super E,? super C> aEqComparator,         C aComparatorContext)", "diff": ["-        Object aElement,", "-        EquivalenceComparator aEqComparator,", "-        Object aComparatorContext)", "+        E aElement,", "+        EquivalenceComparator<? super E,? super C> aEqComparator,", "+        C aComparatorContext)", "-        this.elementsSet = new HashSet();", "+        this.elementsSet = new HashSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e656c4af63a0eb3d069cbf276ffbe4c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/ProximityIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void encounterVertex(Object vertex, Edge edge)", "signatureAfterChange": "     protected final void encounterVertex(V vertex, E edge)", "diff": ["-    protected final void encounterVertex(Object vertex, Edge edge)", "+    protected final void encounterVertex(V vertex, E edge)", "-        HeapVertex heapV;", "+        HeapVertex<E> heapV;", "-            heapV = (HeapVertex) vertex;", "+            heapV = (HeapVertex<E>) vertex;", "-            heapV = new HeapVertex(vertex);", "+            heapV = new HeapVertex<E>(vertex);"]}]}