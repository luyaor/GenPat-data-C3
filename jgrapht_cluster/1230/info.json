{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71e5aba7e45643f1a999f2824887a85b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "258ed2fac55656e69396abb24428c2fb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractBaseGraph(EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "signatureAfterChange": "     public AbstractBaseGraph(EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "diff": ["-", "-        m_vertexMap = new LinkedHashMap();", "-        m_edgeSet = new LinkedHashSet();", "+        ", "+        m_vertexMap = new LinkedHashMap<V,Object>();", "+        m_edgeSet = new LinkedHashSet<E>();", "-        m_edgeListFactory = new ArrayListFactory();", "+        m_edgeListFactory = new ArrayListFactory<V,E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47b4fcc7b5296b89d69caf9860fdd632", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testEdgeOrderDeterminism()", "signatureAfterChange": "     public void testEdgeOrderDeterminism()", "diff": ["-        DirectedGraph g = new DirectedMultigraph();", "+        DirectedGraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "-        Iterator iter = g.edgeSet().iterator();", "+        Iterator<DirEdge<String>> iter = g.edgeSet().iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b2af639e6a6c9c1e8803f7d20881550", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List<DirectedSubgraph> stronglyConnectedSubgraphs()", "signatureAfterChange": "     public List<DirectedSubgraph<V,E>> stronglyConnectedSubgraphs()", "diff": ["-    public List<DirectedSubgraph> stronglyConnectedSubgraphs()", "+    public List<DirectedSubgraph<V,E>> stronglyConnectedSubgraphs()", "-            m_stronglyConnectedSubgraphs = new Vector(sets.size());", "+            m_stronglyConnectedSubgraphs = new Vector<DirectedSubgraph<V, E>>(sets.size());", "-                m_stronglyConnectedSubgraphs.add(new DirectedSubgraph(", "+                m_stronglyConnectedSubgraphs.add(new DirectedSubgraph<V, E>("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc52d5aa784d55870c021ca89481427", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void init()", "signatureAfterChange": "     private void init()", "diff": ["-            new PrefetchIterator(new AbstractExhaustiveIsomorphismInspector.NextFunctor());", "+            new PrefetchIterator<IsomorphismRelation>(", "+                    // XXX hb 280106: I don't understand this warning, yet :-)", "+                    new AbstractExhaustiveIsomorphismInspector.NextFunctor()", "+                    );", "-        this.graph1VertexSet = new LinkedHashSet(this.graph1.vertexSet());", "+        this.graph1VertexSet = new LinkedHashSet<V>(this.graph1.vertexSet());", "-            new GraphOrdering(this.graph1VertexSet, this.graph1.edgeSet());", "+            new GraphOrdering<V,E>(this.graph1VertexSet, this.graph1.edgeSet());", "-        this.graph2EdgeSet = new LinkedHashSet(this.graph2.edgeSet());", "+        this.graph2EdgeSet = new LinkedHashSet<E>(this.graph2.edgeSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c48d468d26f226a635dfd4cb240c3676", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/EmptyGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+        Graph<V,E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String,V> resultMap)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d701bcc18d9aa9d6138d611e082e3854", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/PartiteRandomGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(             Graph<V,E> target,             VertexFactory<V> vertexFactory,             Map<String,Object[]> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+            Graph<V,E> target,", "+            VertexFactory<V> vertexFactory,", "+            Map<String,Object[]> resultMap)"]}]}