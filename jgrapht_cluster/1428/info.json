{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdc7347701fff3af423d829725e2c15e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "922c632ba3428615d7cb431819853e27", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "aa3bfda3799765b1a12cb238f8bd9573ca27d9b9", "commitAfterChange": "a1594c7a8cf14f3607828e0c2206c8cb46973c14", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-            if (!data.discovered) {", "-                data.discovered = true;", "+            if (!data.isDiscovered()) {", "+                data.setDiscovered(true);", "-                    if (!targetData.discovered) {", "+                    if (!targetData.isDiscovered()) {", "-            } else if (data.finished) {", "+            } else if (data.isFinished()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e342516ad493e90c455d866416b5903c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "3917888b7641aba5a84e6cc425eecb8d127fd2c5", "commitAfterChange": "61dbb1af6c224986e7d12029f65eb7b3fce4e12a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> visitedGraph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-                    vertices.add(data.vertex);", "+                    vertices.add(data.getVertex());", "-                stack.push(new VertexData<V>(data, null, true, true));", "+                stack.push(new VertexData1<V>(data, true, true));", "-                for (E edge : visitedGraph.outgoingEdgesOf(data.vertex)) {", "+                for (E edge : visitedGraph.outgoingEdgesOf(data.getVertex())) {", "-                    orderedVertices.addFirst(data.finishedData);", "+                    orderedVertices.addFirst(data.getFinishedData());"]}]}