{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd2e162f60eeb53cda17555641b9888f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "227d5918a4f29a346c522b0e314b3dd8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testStronglyConnected2()", "signatureAfterChange": "     public void testStronglyConnected2()", "diff": ["-        DirectedGraph g = new DefaultDirectedGraph();", "+        DirectedGraph<String,DirEdge<String>>", "+                g = new DefaultDirectedGraph<String,DirEdge<String>>();", "-        StrongConnectivityInspector inspector =", "-            new StrongConnectivityInspector(g);", "+        StrongConnectivityInspector<String,DirEdge<String>> inspector =", "+            new StrongConnectivityInspector<String,DirEdge<String>>(g);", "-        Set actualSets = new HashSet(inspector.stronglyConnectedSets());", "+        Set<Set<String>> actualSets = new HashSet<Set<String>>(inspector.stronglyConnectedSets());", "-        Set expectedSets = new HashSet();", "-        Set set = new HashSet();", "+        Set<Set<String>> expectedSets = new HashSet<Set<String>>();", "+        Set<String> set = new HashSet<String>();", "-        set = new HashSet();", "+        set = new HashSet<String>();", "-        set = new HashSet();", "+        set = new HashSet<String>();", "-        List subgraphs = inspector.stronglyConnectedSubgraphs();", "-        Iterator iter = subgraphs.iterator();", "-", "-        while (iter.hasNext()) {", "-            DirectedSubgraph sg = (DirectedSubgraph) iter.next();", "+        List<DirectedSubgraph<String,DirEdge<String>>>", "+                subgraphs = inspector.stronglyConnectedSubgraphs();", "+        for (DirectedSubgraph<String, DirEdge<String>> sg : subgraphs) {", "-            StrongConnectivityInspector ci =", "-                new StrongConnectivityInspector(sg);", "+            StrongConnectivityInspector<String,DirEdge<String>> ci =", "+                new StrongConnectivityInspector<String,DirEdge<String>>(sg);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b59a5d37699a6530ec0c6fbf38fa4476", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testStronglyConnected1()", "signatureAfterChange": "     public void testStronglyConnected1()", "diff": ["-        DirectedGraph g = new DefaultDirectedGraph();", "+        DirectedGraph<String,DirEdge<String>>", "+                g = new DefaultDirectedGraph<String,DirEdge<String>>();", "-        StrongConnectivityInspector inspector =", "-            new StrongConnectivityInspector(g);", "+        StrongConnectivityInspector<String,DirEdge<String>>", "+                inspector = new StrongConnectivityInspector<String,DirEdge<String>>(g);", "-        Set actualSets = new HashSet(inspector.stronglyConnectedSets());", "+        Set<Set<String>> actualSets = new HashSet<Set<String>>(inspector.stronglyConnectedSets());", "-        Set expectedSets = new HashSet();", "-        Set set = new HashSet();", "+        Set<Set<String>> expectedSets = new HashSet<Set<String>>();", "+        Set<String> set = new HashSet<String>();", "-        set = new HashSet();", "+        set = new HashSet<String>();", "-        set = new HashSet();", "+        set = new HashSet<String>();", "-        List subgraphs = inspector.stronglyConnectedSubgraphs();", "-        Iterator iter = subgraphs.iterator();", "-", "-        while (iter.hasNext()) {", "-            DirectedSubgraph sg = (DirectedSubgraph) iter.next();", "+        List<DirectedSubgraph<String,DirEdge<String>>>", "+                subgraphs = inspector.stronglyConnectedSubgraphs();", "+        for (DirectedSubgraph<String, DirEdge<String>> sg : subgraphs) {", "-            StrongConnectivityInspector ci =", "-                new StrongConnectivityInspector(sg);", "+            StrongConnectivityInspector<String,DirEdge<String>> ci =", "+                new StrongConnectivityInspector<String,DirEdge<String>>(sg);", "-", "+        "]}]}