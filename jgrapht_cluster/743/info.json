{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c63ca6373f980be536b3a621b4cb696", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1819438b24cbceca8a95eaf5df233811", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "f9fe1a9b0c0422b26e26b94edd9001801984e770", "commitAfterChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public StrongConnectivityInspector( DirectedGraph g )", "signatureAfterChange": "     public StrongConnectivityInspector( DirectedGraph directedGraph )", "diff": ["-    public StrongConnectivityInspector( DirectedGraph g ) {", "-        m_graph = g;", "+    public StrongConnectivityInspector( DirectedGraph directedGraph ) {", "+        m_graph                      = directedGraph;", "+        m_verticesToVerticesData     = null;", "+        m_orderedVertices            = null;", "+        m_stronglyConnectedSets      = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f322af61c0f49824d75e14a19f0aa3b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/SimpleGraphPath.java", "commitBeforeChange": "b5404750cc623a978978783f4ef48335685c8703", "commitAfterChange": "f1d857c1f9c2cfee0332801a7f0c41e4781f3280", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public SimpleGraphPath(SimpleGraph<V, E> simpleGraph, List<V> vertices, double weight)", "signatureAfterChange": "     public SimpleGraphPath(SimpleGraph<V, E> simpleGraph, List<V> vertices, double weight)", "diff": ["+        if (vertices.size() < 2) {", "+            throw new IllegalArgumentException(", "+                \"At least two vertices are required to form a path\");", "+        }", "+        ", "-            if (getGraph().containsEdge(currentEdge))", "+            if (currentEdge != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a441cc335d4abcd8c904460cf4aa625", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/Subgraph.java", "commitBeforeChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "commitAfterChange": "3d0cfd4ff83748b5626a50dacde9f671eee9de80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Subgraph(Graph<V, E> base, Set<V> vertexSubset, Set<E> edgeSubset)", "signatureAfterChange": "     public Subgraph(G base, Set<V> vertexSubset, Set<E> edgeSubset)", "diff": ["-    public Subgraph(Graph<V, E> base, Set<V> vertexSubset, Set<E> edgeSubset)", "+    public Subgraph(G base, Set<V> vertexSubset, Set<E> edgeSubset)", "+", "+        if (edgeSubset == null) {", "+            isInduced = true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6820b5e2bc26a4388c774dfa034a916e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "commitAfterChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public StrongConnectivityInspector( DirectedGraph directedGraph )", "signatureAfterChange": "     public StrongConnectivityInspector(DirectedGraph directedGraph)", "diff": ["-    public StrongConnectivityInspector( DirectedGraph directedGraph ) {", "-        m_graph                      = directedGraph;", "-        m_verticesToVerticesData     = null;", "-        m_orderedVertices            = null;", "-        m_stronglyConnectedSets      = null;", "+    public StrongConnectivityInspector(DirectedGraph directedGraph) {", "+        if (directedGraph == null) {", "+            throw new IllegalArgumentException(\"null not allowed for graph!\");", "+        }", "+", "+        m_graph = directedGraph;", "+        m_vertexToVertexData = null;", "+        m_orderedVertices = null;", "+        m_stronglyConnectedSets = null;", "+        m_stronglyConnectedSubgraphs = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9380bfe420c8dcad133a062e73c5f58b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "716bafb74d538759e472bd0e9a79ac62a1cf78ee", "commitAfterChange": "912a63c075de2a9a345cd6355dea9b455edae9ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,         Map defaultEdgeAttributes )", "signatureAfterChange": "     public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,         Map defaultEdgeAttributes, CellFactory cellFactory )", "diff": ["+     */", "+    public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,", "+        Map defaultEdgeAttributes, CellFactory cellFactory ) {", "+        }", "+", "+        if( cellFactory == null ) {", "+            m_cellFactory = new DefaultCellFactory(  );", "+        }", "+        else {", "+            m_cellFactory = cellFactory;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b957f66f6f1d256097be78e64dfd11f1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "76c63a3cd39a7c1d6d3b03fda1124fe4b9e92d94", "commitAfterChange": "2447c7c931ae9699c64dac201be5f02bf4dc6f03", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected void encounterVertex(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertex(V vertex, E edge)", "diff": ["+        double shortestPathLength;", "+        if (edge == null) {", "+            shortestPathLength = 0;", "+        } else {", "+            shortestPathLength = calculatePathLength(vertex, edge);", "+        }", "-        heap.insert(node, node.getKey());", "+        heap.insert(node, shortestPathLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57919f31987a555ccea331a5bea3662", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/heap/BinaryHeap.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BinaryHeap(Collection c, Comparator comp, boolean maximum)", "signatureAfterChange": "     public BinaryHeap(Collection c, Comparator comp, boolean maximum)", "diff": ["-        _elems = new ArrayList(Math.max(c.size(), 10));", "-        addAll(c);", "+        if(c!=null) {", "+            _elems = new ArrayList<Elem>(Math.max(c.size(), INITIAL_SIZE));", "+            addAll(c);", "+        } else {", "+            _elems = new ArrayList<Elem>(INITIAL_SIZE);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e023c35c04a3b45997b32033d4022a7e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "f9fe1a9b0c0422b26e26b94edd9001801984e770", "commitAfterChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": "         VertexData( Object vertex )", "signatureAfterChange": "          private VertexData( Object vertex, boolean discovered, boolean finished )", "diff": ["-         */", "-        VertexData( Object vertex ) {", "-            super(  );", "-            m_vertex = vertex;", "-        }", "+        private VertexData( Object vertex, boolean discovered, boolean finished ) {", "+            m_vertex         = vertex;", "+            m_discovered     = discovered;", "+            m_finished       = finished;"]}]}