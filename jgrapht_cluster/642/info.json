{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2c76627d2cb0b85f7e916c7837a63e1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b83f22c6600548882538f35fdff0131", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "         public void add( Object obj )", "signatureAfterChange": "     protected void encounterVertex( Object vertex, Edge edge )", "diff": ["+     */", "+    protected void encounterVertex( Object vertex, Edge edge ) {", "+        QueueEntry entry = createSeenData( vertex, edge );", "+        putSeenData( vertex, entry );", "+        m_heap.insert( entry, entry.getShortestPathLength(  ) );", "+    }", "-         */", "-        public void add( Object obj ) {", "-            QueueEntry newEntry = (QueueEntry) obj;", "-            m_heap.insert( newEntry, newEntry.getShortestPathLength(  ) );", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98657b470e98ea47a77c1c97268dd868", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "e5d892ea988755999c21c3831434c4fc251611da", "commitAfterChange": "60fae450bc7df1fe1188f2da01fd4eefb4912b4d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public double shortestDistance(V v1, V v2)", "signatureAfterChange": "     public double shortestDistance(V a, V b)", "diff": ["-     */", "-    public double shortestDistance(V v1, V v2)", "-    {", "-        return d[index(v1)][index(v2)];", "+    public double shortestDistance(V a, V b) {", "+", "+        // lazy", "+        if (d == null)", "+            lazyCalculate();", "+", "+        return d[vertices.indexOf(a)][vertices.indexOf(b)];", "+    }"]}]}