{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "679551ae3259ddd747ab9dfe8a930625", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014ed4ec2aa057808a60e4e6ec11fecf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2IsomorphismInspector.java", "commitBeforeChange": "b45791c7d62f6d8e55334421984e95ff59806210", "commitAfterChange": "6439f444116cb1d103ecea1e31327eb85544da99", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public VF2IsomorphismInspector(                     Graph<V, E> graph1,                     Graph<V, E> graph2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "signatureAfterChange": "     public VF2IsomorphismInspector(                     Graph<V, E> graph1,                     Graph<V, E> graph2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator,                     boolean cacheEdges)", "diff": ["-                    Comparator<E> edgeComparator)", "+                    Comparator<E> edgeComparator,", "+                    boolean cacheEdges)", "-        this.ordering1        = new GraphOrdering<V, E>(graph1, true);", "-        this.ordering2        = new GraphOrdering<V, E>(graph2, true);", "+        this.ordering1        = new GraphOrdering<V, E>(graph1, true,", "+                                                        cacheEdges);", "+        this.ordering2        = new GraphOrdering<V, E>(graph2, true,", "+                                                        cacheEdges);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501ddc56fa408bd0b27f848d1c952474", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "fa439ca86ad5484e4f0d6132cc374b67035ff8e3", "commitAfterChange": "16877ce18b6445d7238b8a78693c87c95971617b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "            public RandomGraphGenerator(int aNumOfVertexes, int aNumOfEdges)", "signatureAfterChange": "      public RandomGraphGenerator(int aNumOfVertexes, int aNumOfEdges, long seed)", "diff": ["-", "+", "+    public RandomGraphGenerator(int aNumOfVertexes, int aNumOfEdges, long seed)", "-        this.randomizerSeed = chooseRandomSeedOnce();", "+        this.randomizerSeed = seed;"]}]}