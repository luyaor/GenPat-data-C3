{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31d190b3b7f87fd65fe03e43d93ea1e3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04066f7b92589153b23ad6fa8d6d3dd1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter(         Graph jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory cellFactory)", "signatureAfterChange": "     public JGraphModelAdapter(         Graph<V, E> jGraphTGraph,         AttributeMap defaultVertexAttributes,         AttributeMap defaultEdgeAttributes,         CellFactory<V,E> cellFactory)", "diff": ["-        Graph jGraphTGraph,", "+        Graph<V, E> jGraphTGraph,", "-        CellFactory cellFactory)", "+        CellFactory<V,E> cellFactory)", "-            ListenableGraph g = (ListenableGraph) jGraphTGraph;", "+            ListenableGraph<V, E> g = (ListenableGraph<V, E>) jGraphTGraph;", "-        for (Iterator i = jGraphTGraph.vertexSet().iterator(); i.hasNext();) {", "+        for (Iterator<V> i = jGraphTGraph.vertexSet().iterator(); i.hasNext();) {", "-        for (Iterator i = jGraphTGraph.edgeSet().iterator(); i.hasNext();) {", "-            handleJGraphTAddedEdge((org._3pq.jgrapht.Edge) i.next());", "+        for (Iterator<E> i = jGraphTGraph.edgeSet().iterator(); i.hasNext();) {", "+            handleJGraphTAddedEdge(i.next());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac834db538c8c555dbeacb7f6569a300", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "a4491f801ff4eba32d8029dda18c582844b268e3", "commitAfterChange": "dca8f0b0b2b997b3562b349da681aa495eb852bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,         Map defaultEdgeAttributes, CellFactory cellFactory )", "signatureAfterChange": "     public JGraphModelAdapter( Graph jGraphTGraph, Map defaultVertexAttributes,         Map defaultEdgeAttributes, CellFactory cellFactory )", "diff": ["-    public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,", "+    public JGraphModelAdapter( Graph jGraphTGraph, Map defaultVertexAttributes,", "+", "+        m_jtGraph = jGraphTGraph;", "-            m_defaultEdgeAttributes = createDefaultEdgeAttributes( g );", "+            m_defaultEdgeAttributes =", "+                createDefaultEdgeAttributes( jGraphTGraph );", "-        if( g instanceof ListenableGraph ) {", "-            m_graphListener = new MyGraphListener(  );", "-            ( (ListenableGraph) g ).addGraphListener( m_graphListener );", "+        if( jGraphTGraph instanceof ListenableGraph ) {", "+            m_jtGraphListener = new JGraphTListener(  );", "+            ( (ListenableGraph) jGraphTGraph ).addGraphListener( m_jtGraphListener );", "-        for( Iterator i = g.vertexSet(  ).iterator(  ); i.hasNext(  ); ) {", "+        this.addGraphModelListener( new JGraphListener(  ) );", "+", "+        for( Iterator i = jGraphTGraph.vertexSet(  ).iterator(  );", "+                i.hasNext(  ); ) {", "-        for( Iterator i = g.edgeSet(  ).iterator(  ); i.hasNext(  ); ) {", "-            addJGraphTEdge( (Edge) i.next(  ) );", "+        for( Iterator i = jGraphTGraph.edgeSet(  ).iterator(  ); i.hasNext(  ); ) {", "+            addJGraphTEdge( (org._3pq.jgrapht.Edge) i.next(  ) );"]}]}