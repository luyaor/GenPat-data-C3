{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f769f50907b05dcf4ec454e5cbbfed3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04061992c0079a483e4361ea6900ccee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2GraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public VF2GraphIsomorphismInspector(                     Graph<V, E> graph1,                     Graph<V, E> graph2)", "signatureAfterChange": "      public VF2GraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2)", "diff": ["-                    Graph<V, E> graph1,", "-                    Graph<V, E> graph2)", "-        super(graph1, graph2);", "+", "+    public VF2GraphIsomorphismInspector(", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2)", "+    {", "+        super(graph1,", "+              graph2,", "+              true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407fbbb51ca3e326d17809c1fad30c91", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2GraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public VF2GraphIsomorphismInspector(                     Graph<V,E> graph1,                     Graph<V,E> graph2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "signatureAfterChange": "      public VF2GraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2,             Comparator<V> vertexComparator,             Comparator<E> edgeComparator)", "diff": ["-                    Graph<V,E> graph1,", "-                    Graph<V,E> graph2,", "-                    Comparator<V> vertexComparator,", "-                    Comparator<E> edgeComparator)", "-        super(graph1, graph2, vertexComparator, edgeComparator);", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2,", "+            Comparator<V> vertexComparator,", "+            Comparator<E> edgeComparator)", "+        super(graph1,", "+              graph2,", "+              vertexComparator,", "+              edgeComparator,", "+              true);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc013552ebf3706fc56d10cb1d988b6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "0997a58f5471f09bb9fdcb21da80e929c7b2bb23", "commitAfterChange": "9350cdef6b0d2c87575b39e1606fd2378047d04a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public BreadthFirstIterator( Graph g, boolean crossComponentTraversal )", "signatureAfterChange": "     public BreadthFirstIterator( Graph g, boolean crossComponentTraversal )", "diff": ["-        this( g, null, crossComponentTraversal );", "+        this( g, null, crossComponentTraversal, false );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54be4d4d6c612af81f56ed7aac075589", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public VF2SubgraphIsomorphismInspector(                     Graph<V,E> graph1,                     Graph<V,E> graph2,                     Comparator<V> vertexComparator,                     Comparator<E> edgeComparator)", "signatureAfterChange": "      public VF2SubgraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2,             Comparator<V> vertexComparator,             Comparator<E> edgeComparator)", "diff": ["-                    Graph<V,E> graph1,", "-                    Graph<V,E> graph2,", "-                    Comparator<V> vertexComparator,", "-                    Comparator<E> edgeComparator)", "-        super(graph1, graph2, vertexComparator, edgeComparator);", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2,", "+            Comparator<V> vertexComparator,", "+            Comparator<E> edgeComparator)", "+        super(graph1,", "+              graph2,", "+              vertexComparator,", "+              edgeComparator,", "+              true);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ba52200172b925b057f7470f5d7c875", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "b45791c7d62f6d8e55334421984e95ff59806210", "commitAfterChange": "6439f444116cb1d103ecea1e31327eb85544da99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public GraphOrdering(Graph<V, E> graph)", "signatureAfterChange": "     public GraphOrdering(Graph<V, E> graph)", "diff": ["-        this(graph, false);", "+        this(graph, false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a56c289a3d9c598d9480fe8ab40f2d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "0997a58f5471f09bb9fdcb21da80e929c7b2bb23", "commitAfterChange": "9350cdef6b0d2c87575b39e1606fd2378047d04a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DepthFirstIterator( Graph g, boolean crossComponentTraversal )", "signatureAfterChange": "     public DepthFirstIterator( Graph g, boolean crossComponentTraversal )", "diff": ["-        this( g, null, crossComponentTraversal );", "+        this( g, null, crossComponentTraversal, false );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ee3873ee21945becda5c621f425940", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "eb1fecbe7cdb26f3840d4ae1d93a0ed46d41cf6c", "commitAfterChange": "087c49217068f95514e5b6052b0271c9392cf80f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public VF2SubgraphIsomorphismInspector(                     Graph<V, E> graph1,                     Graph<V, E> graph2)", "signatureAfterChange": "      public VF2SubgraphIsomorphismInspector(             Graph<V, E> graph1,             Graph<V, E> graph2)", "diff": ["-                    Graph<V, E> graph1,", "-                    Graph<V, E> graph2)", "-        super(graph1, graph2);", "+", "+    public VF2SubgraphIsomorphismInspector(", "+            Graph<V, E> graph1,", "+            Graph<V, E> graph2)", "+    {", "+        super(graph1,", "+              graph2,", "+              true);"]}]}