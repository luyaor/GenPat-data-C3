{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45da9a5c9e9e29722fe58052d022dc95", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03eba84f53a7fc7563631f5b6837c2a5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/TopologicalOrderIteratorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testRecipe()", "signatureAfterChange": "     public void testRecipe()", "diff": ["-        DirectedGraph<String, DirectedEdge<String>> graph =", "-            new DefaultDirectedGraph<String, DirectedEdge<String>>();", "+        DirectedGraph<String, DefaultEdge> graph =", "+            new DefaultDirectedGraph<String, DefaultEdge>(", "+                DefaultEdge.class);", "-            new TopologicalOrderIterator<String, DirectedEdge<String>>(graph);", "+            new TopologicalOrderIterator<String, DefaultEdge>(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18b8b49561cf500794aa125548c5c34e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SerializationTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public void testDirectedMultigraph()         throws Exception", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public void testDirectedMultigraph()         throws Exception", "diff": ["-        DirectedMultigraph<String,DirEdge<String>> graph =", "-            new DirectedMultigraph<String,DirEdge<String>>();", "+        DirectedMultigraph<String,DefaultEdge> graph =", "+            new DirectedMultigraph<String,DefaultEdge>(", "+                DefaultEdge.class);", "-        graph = (DirectedMultigraph<String,DirEdge<String>>) serializeAndDeserialize(graph);", "+        graph = (DirectedMultigraph<String,DefaultEdge>) serializeAndDeserialize(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "281439ee7325b32b6f4f57c97443908b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/SerializationTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDirectedMultigraph()         throws Exception", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\") \tpublic void testDirectedMultigraph()         throws Exception", "diff": ["-    public void testDirectedMultigraph()", "+    @SuppressWarnings(\"unchecked\")", "+\tpublic void testDirectedMultigraph()", "-        DirectedMultigraph graph = new DirectedMultigraph();", "+        DirectedMultigraph<String,DirEdge<String>> graph =", "+        \tnew DirectedMultigraph<String,DirEdge<String>>();", "-        graph = (DirectedMultigraph) serializeAndDeserialize(graph);", "+        graph = (DirectedMultigraph<String,DirEdge<String>>) serializeAndDeserialize(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad596599cc573551708f89346722b02", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEdgeSetFactory()", "signatureAfterChange": "     public void testEdgeSetFactory()", "diff": ["-        DirectedMultigraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "-        g.setEdgeSetFactory(new LinkedHashSetFactory<String, DirEdge<String>>());", "+        DirectedMultigraph<String, DefaultEdge> g =", "+            new DirectedMultigraph<String, DefaultEdge>(", "+                DefaultEdge.class);", "+        g.setEdgeSetFactory(new LinkedHashSetFactory<String, DefaultEdge>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e91d25cc487e6eb5d3f1219f00d68b6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void init()", "signatureAfterChange": "     public void init()", "diff": ["-        ListenableGraph<String,DirEdge<String>> g =", "-            new ListenableDirectedMultigraph<String,DirEdge<String>>();", "+        ListenableGraph<String,DefaultEdge> g =", "+            new ListenableDirectedMultigraph<String,DefaultEdge>(", "+                DefaultEdge.class);", "-        m_jgAdapter = new JGraphModelAdapter<String,DirEdge<String>>(g);", "+        m_jgAdapter = new JGraphModelAdapter<String,DefaultEdge>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c2fb8f40ae72a0ac4299c90f8f926aa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "signatureAfterChange": "      private DirectedGraph<String, DefaultEdge> createMultiTriangleWithMultiLoop()", "diff": ["-    private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "+    private DirectedGraph<String, DefaultEdge> createMultiTriangleWithMultiLoop()", "-        DirectedGraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "+        DirectedGraph<String, DefaultEdge> g =", "+            new DirectedMultigraph<String, DefaultEdge>(", "+                DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a403619ce3a8f3258da6e2453c19309e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "f67e9197d81c666622112a20391d80767fa4beb3", "commitAfterChange": "af1b824446ff484516d50232b001351d46878322", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t@Test \tpublic void test1()", "signatureAfterChange": "  \t@Test \tpublic void testSingleMatching()", "diff": ["-\tpublic void test1() {", "+\tpublic void testSingleMatching() {", "-\t\t\t\tnew DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+            new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "-\t\t\t\tnew DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "+\t\t\tnew DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class);", "-\t\t\t\tnew VF2SubgraphIsomorphismInspector<String, DefaultEdge>(g1, g2);", "+\t\t\tnew VF2SubgraphIsomorphismInspector<String, DefaultEdge>(g1, g2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b86fa3bca11a8ba0a2bcde7eb8115a58", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/GraphBuilderTest.java", "commitBeforeChange": "f0c72eeebb42bbed3a4f1f5b95e611bffa60eee1", "commitAfterChange": "10c9a7db35bb3c7b27d55bc4f7471d815a2d383f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testAddGraph()", "signatureAfterChange": "      public void testAddGraph()", "diff": ["-                new DirectedGraphBuilder<String, DefaultEdge, DefaultDirectedGraph<String, DefaultEdge>>", "-                (new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class))", "+                DefaultDirectedGraph.<String, DefaultEdge>builder(DefaultEdge.class)", "+//                new DirectedGraphBuilder<String, DefaultEdge, DefaultDirectedGraph<String, DefaultEdge>>", "+//                (new DefaultDirectedGraph<String, DefaultEdge>(DefaultEdge.class))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cead2186e5db0794d566b9769be33fb1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/CloneTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testCloneSpecificsBug()", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\") \tpublic void testCloneSpecificsBug()", "diff": ["-    public void testCloneSpecificsBug()", "+    @SuppressWarnings(\"unchecked\")", "+\tpublic void testCloneSpecificsBug()", "-        SimpleGraph g1 = new SimpleGraph();", "+        SimpleGraph<String,Edge<String>> g1 = new SimpleGraph<String,Edge<String>>();", "-        SimpleGraph g2 = (SimpleGraph) g1.clone();", "+        SimpleGraph<String,Edge<String>> g2 =", "+        \t(SimpleGraph<String,Edge<String>>) g1.clone();\t// Type-safty warning OK with clone"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d5ded3fd9ecbbdae829a7ef398094e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/CycleDetectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void runTest( DirectedGraph<String,DirEdge<String>> g,                           Set<String> cyclicSet,                           Set<String> acyclicSet )", "signatureAfterChange": "      private void runTest( DirectedGraph<String,DefaultEdge> g,                           Set<String> cyclicSet,                           Set<String> acyclicSet )", "diff": ["-    private void runTest( DirectedGraph<String,DirEdge<String>> g,", "+    private void runTest( DirectedGraph<String,DefaultEdge> g,", "-        CycleDetector<String,DirEdge<String>> detector =", "-            new CycleDetector<String,DirEdge<String>>(g);", "+        CycleDetector<String,DefaultEdge> detector =", "+            new CycleDetector<String,DefaultEdge>(g);"]}]}