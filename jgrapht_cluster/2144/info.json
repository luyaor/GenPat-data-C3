{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "506972e86553a803bea87fe6b5813f72", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640f940e967d8f56289e25ab5d216865", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "689cbcc6d13f9b38252e7029be35f19942c29f8c", "commitAfterChange": "60b7d019273a541fe1adce1909b0933596c136ca", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphOrdering(Graph<V, E> graph,                          boolean orderByDegree,                          boolean cacheEdges)", "signatureAfterChange": "     public GraphOrdering(Graph<V, E> graph,                          boolean orderByDegree,                          boolean cacheEdges)", "diff": ["-        mapOrderToVertex = new Object[vertexCount];", "+        mapOrderToVertex = new ArrayList<V>(vertexCount);", "-        outgoingEdges    = new int[vertexCount][];", "-        incomingEdges    = new int[vertexCount][];", "-        adjMatrix        = new Boolean[vertexCount][vertexCount];", "+        if (cacheEdges) {", "+            outgoingEdges = new int[vertexCount][];", "+            incomingEdges = new int[vertexCount][];", "+            adjMatrix = new Boolean[vertexCount][vertexCount];", "+        }", "-            mapVertexToOrder.put(vertex, i);", "-            mapOrderToVertex[i] = vertex;", "-", "-            outgoingEdges[i]   = null;", "-            incomingEdges[i++] = null;", "+            mapVertexToOrder.put(vertex, i++);", "+            mapOrderToVertex.add(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862fe563194fe606f2913a9f46201e67", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     void handleJGraphChangedEdge(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     void handleJGraphChangedEdge(org.jgraph.graph.Edge jEdge)", "diff": ["-            if (m_cellToEdge.containsKey(jEdge)) {", "+            if (cellToEdge.containsKey(jEdge)) {", "-            if (m_cellToEdge.containsKey(jEdge)) {", "+            if (cellToEdge.containsKey(jEdge)) {", "-                    m_cellToEdge.get(jEdge);", "+                    cellToEdge.get(jEdge);", "-                Object jtSource = m_cellToVertex.get(jSource);", "-                Object jtTarget = m_cellToVertex.get(jTarget);", "+                Object jtSource = cellToVertex.get(jSource);", "+                Object jtTarget = cellToVertex.get(jTarget);", "-                if ((m_jtGraph.getEdgeSource(jtEdge) == jtSource)", "-                    && (m_jtGraph.getEdgeTarget(jtEdge) == jtTarget)) {", "+                if ((jtGraph.getEdgeSource(jtEdge) == jtSource)", "+                    && (jtGraph.getEdgeTarget(jtEdge) == jtTarget)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d11fdde38c528ab80f525ac87dff801", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     void handleJGraphRemovedVertex(GraphCell jVertex)", "signatureAfterChange": "     void handleJGraphRemovedVertex(GraphCell jVertex)", "diff": ["-        if (m_cellToVertex.containsKey(jVertex)) {", "-            V jtVertex = m_cellToVertex.get(jVertex);", "-            Set<E> jtIncidentEdges = m_jtGraph.edgesOf(jtVertex);", "+        if (cellToVertex.containsKey(jVertex)) {", "+            V jtVertex = cellToVertex.get(jVertex);", "+            Set<E> jtIncidentEdges = jtGraph.edgesOf(jtVertex);", "-                m_jtGraph.removeAllEdges(new ArrayList<E>(jtIncidentEdges));", "+                jtGraph.removeAllEdges(new ArrayList<E>(jtIncidentEdges));", "-            m_jtGraph.removeVertex(jtVertex);", "+            jtGraph.removeVertex(jtVertex);", "-            m_cellToVertex.remove(jVertex);", "-            m_vertexToCell.remove(jtVertex);", "+            cellToVertex.remove(jVertex);", "+            vertexToCell.remove(jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0fe8bef130e868fc81aa16b4b810290", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "     protected boolean removeJGraphEdge( org.jgraph.graph.Edge jEdge )", "signatureAfterChange": "     void handleJGraphRemovedEdge( org.jgraph.graph.Edge jEdge )", "diff": ["-    protected boolean removeJGraphEdge( org.jgraph.graph.Edge jEdge ) {", "-        if( !m_cellToEdge.containsKey( jEdge ) ) {", "-            return false;", "+    void handleJGraphRemovedEdge( org.jgraph.graph.Edge jEdge ) {", "+        if( m_cellToEdge.containsKey( jEdge ) ) {", "+            org._3pq.jgrapht.Edge jtEdge =", "+                (org._3pq.jgrapht.Edge) m_cellToEdge.get( jEdge );", "+    ", "+            m_jtGraph.removeEdge( jtEdge );", "+    ", "+            m_cellToEdge.remove( jEdge );", "+            m_edgeToCell.remove( jtEdge );", "-", "-        org._3pq.jgrapht.Edge jtEdge =", "-            (org._3pq.jgrapht.Edge) m_cellToEdge.get( jEdge );", "-", "-        m_jtEdgesBeingRemoved.add( jtEdge );", "-", "-        boolean result = m_jtGraph.removeEdge( jtEdge );", "-", "-        m_cellToEdge.remove( jEdge );", "-        m_edgeToCell.remove( jtEdge );", "-", "-        return result;"]}]}