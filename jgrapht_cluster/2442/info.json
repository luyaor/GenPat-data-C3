{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "383b24bcb9991d49c0da86401d8ad3fa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04387b5192ebde21e2436dca82900f54", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testEdgeOrderDeterminism()", "signatureAfterChange": "     public void testEdgeOrderDeterminism()", "diff": ["-        g.addVertex(m_v1);", "-        g.addVertex(m_v2);", "-        g.addVertex(m_v3);", "+        g.addVertex(v1);", "+        g.addVertex(v2);", "+        g.addVertex(v3);", "-        DefaultEdge e1 = g.addEdge(m_v1, m_v2);", "-        DefaultEdge e2 = g.addEdge(m_v2, m_v3);", "-        DefaultEdge e3 = g.addEdge(m_v3, m_v1);", "+        DefaultEdge e1 = g.addEdge(v1, v2);", "+        DefaultEdge e2 = g.addEdge(v2, v3);", "+        DefaultEdge e3 = g.addEdge(v3, v1);", "-        assertTrue(Graphs.testIncidence(g, e1, m_v1));", "-        assertTrue(Graphs.testIncidence(g, e1, m_v2));", "-        assertFalse(Graphs.testIncidence(g, e1, m_v3));", "-        assertEquals(m_v2, Graphs.getOppositeVertex(g, e1, m_v1));", "-        assertEquals(m_v1, Graphs.getOppositeVertex(g, e1, m_v2));", "+        assertTrue(Graphs.testIncidence(g, e1, v1));", "+        assertTrue(Graphs.testIncidence(g, e1, v2));", "+        assertFalse(Graphs.testIncidence(g, e1, v3));", "+        assertEquals(v2, Graphs.getOppositeVertex(g, e1, v1));", "+        assertEquals(v1, Graphs.getOppositeVertex(g, e1, v2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e867cdfed1f893ea67b09d2403dd52b6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/JGraphAdapterDemo.java", "commitBeforeChange": "032362831b8d119d242077864d7327def8fc4448", "commitAfterChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void init(  )", "signatureAfterChange": "     public void init(  )", "diff": ["-        // add some sample data (graph manipulated via JGraphT)", "-        g.addVertex( \"v1\" );", "-        g.addVertex( \"v2\" );", "-        g.addVertex( \"v3\" );", "-        g.addVertex( \"v4\" );", "+        Object v1 = \"v1\";", "+        Object v2 = \"v2\";", "+        Object v3 = \"v3\";", "+        Object v4 = \"v4\";", "-        g.addEdge( \"v1\", \"v2\" );", "-        g.addEdge( \"v2\", \"v3\" );", "-        g.addEdge( \"v3\", \"v1\" );", "-        g.addEdge( \"v4\", \"v3\" );", "+        // add some sample data (graph manipulated via JGraphT)", "+        g.addVertex( v1 );", "+        g.addVertex( v2 );", "+        g.addVertex( v3 );", "+        g.addVertex( v4 );", "+", "+        g.addEdge( v1, v2 );", "+        g.addEdge( v2, v3 );", "+        g.addEdge( v3, v1 );", "+        g.addEdge( v4, v3 );", "-        positionVertexAt( \"v1\", 130, 40 );", "-        positionVertexAt( \"v2\", 60, 200 );", "-        positionVertexAt( \"v3\", 310, 230 );", "-        positionVertexAt( \"v4\", 380, 70 );", "+        positionVertexAt( v1, 130, 40 );", "+        positionVertexAt( v2, 60, 200 );", "+        positionVertexAt( v3, 310, 230 );", "+        positionVertexAt( v4, 380, 70 );"]}]}