{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6400c1e06bcbf42f72d5d5f1d5632f19", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc99de281e37a6624ec43aecc708eef2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java", "commitBeforeChange": "6245588ef354746c5c3ae9a477b956068a878121", "commitAfterChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public E getEdgeCorrespondence(E e, boolean forward)", "signatureAfterChange": "      @Override public E getEdgeCorrespondence(E e, boolean forward)", "diff": ["-    @Override", "-    public E getEdgeCorrespondence(E e, boolean forward) {", "+    @Override public E getEdgeCorrespondence(E e, boolean forward)", "+    {", "-        int[] core;", "+        int [] core;", "-            firstGraph  = g1;", "+            firstGraph = g1;", "-            core        = core1;", "+            core = core1;", "-            firstGraph  = g2;", "+            firstGraph = g2;", "-            core        = core2;", "+            core = core2;", "-        int[] eNumbers = firstGraph.getEdgeNumbers(e);", "-        if (core[eNumbers[0]] == VF2State.NULL_NODE ||", "-                        core[eNumbers[1]] == VF2State.NULL_NODE)", "+        int [] eNumbers = firstGraph.getEdgeNumbers(e);", "+        if ((core[eNumbers[0]] == VF2State.NULL_NODE)", "+            || (core[eNumbers[1]] == VF2State.NULL_NODE))", "+        {", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37229ecae19255dcd2012350bdadcfa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java", "commitBeforeChange": "6245588ef354746c5c3ae9a477b956068a878121", "commitAfterChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public V getVertexCorrespondence(V v, boolean forward)", "signatureAfterChange": "            @Override public V getVertexCorrespondence(V v, boolean forward)", "diff": ["-    @Override", "-    public V getVertexCorrespondence(V v, boolean forward) {", "+", "+    @Override public V getVertexCorrespondence(V v, boolean forward)", "+    {", "-        int[] core;", "+        int [] core;", "-            firstGraph  = g1;", "+            firstGraph = g1;", "-            core        = core1;", "+            core = core1;", "-            firstGraph  = g2;", "+            firstGraph = g2;", "-            core        = core2;", "+            core = core2;", "-        int vNumber = firstGraph.getVertexNumber(v),", "-            uNumber = core[vNumber];", "+        int vNumber = firstGraph.getVertexNumber(v), uNumber = core[vNumber];", "-        if (uNumber == VF2State.NULL_NODE)", "+        if (uNumber == VF2State.NULL_NODE) {", "+        }"]}]}