{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7767ab19a5c2e602137b66730179e96e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f40dc0dec4ebf5bbf5eb7079fcd06e61", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "commitAfterChange": "5b8b2def419b220aa57ca346f586e7cc6eacdd0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "diff": ["-        List<String> cols = skipComments();", "+        String[] cols = skipComments();", "-            if (cols.get(0).equals(\"e\")) {", "-                target.addEdge(", "-                    resultMap.get(cols.get(1)),", "-                    resultMap.get(cols.get(2)));", "+            if (cols[0].equals(\"e\")) {", "+                E edge = target.addEdge(", "+                    resultMap.get(cols[1]),", "+                    resultMap.get(cols[2]));", "+                if (_isWeighted && edge != null) {", "+                    double weight = _defaultWeight;", "+                    if (cols.length > 3) {", "+                        weight = Double.parseDouble(cols[3]);", "+                    }", "+                    ((WeightedGraph<V,E>)target).setEdgeWeight(edge, weight);", "+                }", "-        }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f439469e3ea5b8bc61894fe25b07b5a7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/DOTExporter.java", "commitBeforeChange": "58ffe75d7011b97e5d82e9b962f083efeda5131c", "commitAfterChange": "e161419b51eb823c1e9daf9244639d8ff587282c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void export(Writer writer, Graph<V, E> g)", "signatureAfterChange": "     public void export(Writer writer, Graph<V, E> g)", "diff": ["+            String labelName = null;", "-                out.print(", "-                    \" [label = \\\"\" + vertexLabelProvider.getVertexName(v)", "-                    + \"\\\"]\");", "+                labelName = vertexLabelProvider.getVertexName(v);", "+            Map<String, String> attributes = null;", "+            if (vertexAttributeProvider != null) {", "+                attributes = vertexAttributeProvider.getComponentAttributes(v);", "+            }", "+            renderAttributes(out, labelName, attributes);", "+            String labelName = null;", "-                out.print(", "-                    \" [label = \\\"\" + edgeLabelProvider.getEdgeName(e) + \"\\\"]\");", "+                labelName = edgeLabelProvider.getEdgeName(e);", "+            Map<String, String> attributes = null;", "+            if (edgeAttributeProvider != null) {", "+                attributes = edgeAttributeProvider.getComponentAttributes(e);", "+            }", "+            renderAttributes(out, labelName, attributes);"]}]}