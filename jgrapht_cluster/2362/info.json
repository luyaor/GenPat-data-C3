{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b42e632c0b67bef3117c5f75b198b94e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354d95d147a747c73ad6a0b22cac56b7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/VertexCovers.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static <V, E extends Edge<V>> Set<V> find2ApproximationCover(Graph<V, E> g)", "signatureAfterChange": "     public static <V, E> Set<V> find2ApproximationCover(Graph<V, E> g)", "diff": ["-    public static <V, E extends Edge<V>> Set<V> find2ApproximationCover(Graph<V, E> g)", "+    public static <V, E> Set<V> find2ApproximationCover(Graph<V, E> g)", "-            V u = e.getSource();", "-            V v = e.getTarget();", "+            V u = g.getEdgeSource(e);", "+            V v = g.getEdgeTarget(e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc54887c3f33d26a65fbcae9a944e5e3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\"     private void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\"     private void dfsVisit(DirectedGraph<V, E> graph,         VertexData vertexData,         Set<V> vertices)", "diff": ["-                    Edge<V> edge = iter.next();", "+                    E edge = iter.next();", "-                        m_vertexToVertexData.get(edge.getTarget());", "+                        m_vertexToVertexData.get(m_graph.getEdgeTarget(edge));"]}]}