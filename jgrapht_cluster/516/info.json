{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e781d48bd5c2bb40f0442bedb3029fdf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "318b8afb11c9bfec38553af9e93d152c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected void encounterVertex(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertex(V vertex, E edge)", "diff": ["-        putSeenData(vertex, null);", "+        putSeenData(vertex, VisitColor.WHITE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382d149d5345c12420c28ee7f50e9640", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "     public boolean removeVertex(V v)", "signatureAfterChange": "     public boolean removeVertex(V v)", "diff": ["-            m_vertexMap.remove(v); // remove the vertex itself", "+            m_specifics.getVertexSet().remove(v); // remove the vertex itself"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa0ffeae68c0e15f9eb9e8a72d0a569", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "f2700b401e21e2cbb4b86c4b26a5c4c619c8ee12", "commitAfterChange": "1bc1049002c0faf13c343af60ab2fcc79bbade17", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public VisioExporter()", "signatureAfterChange": "     public VisioExporter()", "diff": ["-        this(DEFAULT_VERTEX_NAME_PROVIDER);", "+        this(StringNameProvider.getInstance());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5e2687fda68f25c3bf161eb389871d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "commitAfterChange": "0fa22166c3bce2b4318de51e3645ef9910304701", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public ClosestFirstIterator( Graph g, Object startVertex )", "signatureAfterChange": "     public ClosestFirstIterator( Graph g, Object startVertex )", "diff": ["-        super( g, startVertex );", "+        this( g, startVertex, Double.POSITIVE_INFINITY );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69527846202a6447ec9635893d728f83", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public boolean containsVertex(V v)", "signatureAfterChange": "     public boolean containsVertex(V v)", "diff": ["-        return m_vertexMap.containsKey(v);", "+        return m_specifics.getVertexSet().contains(v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83848d668558d58b52494cb1934d516f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "025de081516d2f27b265bff5016bc68d407a7904", "commitAfterChange": "816e760123acd935a4c2b8998c89641a08e8e396", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["+        ", "+        assert(queue.isEmpty());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c227c8fd3a84f9747cf622902ffa8cf3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/demo/PerformanceDemo.java", "commitBeforeChange": "36ccd5db3d90166c77441416d2016d89ea5cca98", "commitAfterChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main( String[] args )", "signatureAfterChange": "     public static void main( String[] args )", "diff": ["-         catch( IOException e ) {}", "+         catch( IOException e ) {", "+             e.printStackTrace();", "+         }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc483ea69d35d049d2499b85cf578fef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ChromaticNumber.java", "commitBeforeChange": "60fae450bc7df1fe1188f2da01fd4eefb4912b4d", "commitAfterChange": "b261cb99c92126b64c9129dbe772684f0da5e234", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static <V, E> int findGreedyChromaticNumber(UndirectedGraph<V, E> g)", "signatureAfterChange": "     public static <V, E> int findGreedyChromaticNumber(UndirectedGraph<V, E> g)", "diff": ["+                    iter.remove();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb86d884f216487204f4c4566b9ce22", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "commitAfterChange": "ccbda858621a3d1beb6a9381a0fc81c3673ee66c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void resetVertexData(  )", "signatureAfterChange": "     private void resetVertexData()", "diff": ["-    private void resetVertexData(  ) {", "-        Iterator iter = m_orderedVertices.iterator(  );", "+    private void resetVertexData() {", "+        Iterator iter = m_vertexToVertexData.values().iterator();", "-        while( iter.hasNext(  ) ) {", "-            VertexData data = (VertexData) iter.next(  );", "-            data.m_discovered     = false;", "-            data.m_finished       = false;", "+        while (iter.hasNext()) {", "+            VertexData data = (VertexData) iter.next();", "+            data.m_discovered = false;", "+            data.m_finished = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29843ae80edac18a554601489fc1b41", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "320f41319eefcc411b999151096f11d4608d80c3", "commitAfterChange": "94cd40aee7737a3929e0568a1e5623a7da828391", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected Object provideNextVertex(  )", "signatureAfterChange": "     protected Object provideNextVertex(  )", "diff": ["-        return m_stack.remove(  );", "-    }", "+        return m_stack.remove( m_stack.size(  ) - 1 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec93cfb09c6f8c9a37242050de2a830", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public Set<E> edgeSet()", "signatureAfterChange": "     public Set<E> edgeSet()", "diff": ["-            m_unmodifiableEdgeSet = Collections.unmodifiableSet(m_edgeSet);", "+            m_unmodifiableEdgeSet =", "+                Collections.unmodifiableSet(m_edgeMap.keySet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f136ebdd3ba5198f92422631accadf11", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public List<Set<V>> stronglyConnectedSets()", "signatureAfterChange": "     public List<Set<V>> stronglyConnectedSets()", "diff": ["-            DirectedGraph<V, E> inverseGraph = new DefaultDirectedGraph<V, E>();", "-            GraphHelper.addGraphReversed(inverseGraph, m_graph);", "+            DirectedGraph<V, E> inverseGraph =", "+                new DefaultDirectedGraph<V, E>(m_graph.getEdgeFactory());", "+            Graphs.addGraphReversed(inverseGraph, m_graph);"]}]}