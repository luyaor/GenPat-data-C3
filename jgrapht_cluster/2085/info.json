{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a0269e9ef7f3d4ce5c087b9fad833ed", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062624e05816b3ae4dd525e773a2ee27", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/VertexDegreeEquivalenceComparator.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected InOutDegrees getInOutDegrees(         Graph<V,E> aContextGraph,         V vertex)", "signatureAfterChange": "     protected InOutDegrees getInOutDegrees(         Graph<V,E> aContextGraph,         V vertex)", "diff": ["-            DirectedGraph<V,? extends E> directedGraph = (DirectedGraph<V,? extends E>) aContextGraph;", "+            DirectedGraph directedGraph = (DirectedGraph<V,E>) aContextGraph;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a1dcdcd795e74586870748032ea120", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "329f725d890bc8909ea0cc963e9073bf1a9f56aa", "commitAfterChange": "f6f0e2a6e52e853643de51a0f5d8b9d675a6d2c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static <V, E> boolean addGraph(         Graph<V, E> destination,         Graph<V, E> source)", "signatureAfterChange": "     public static <V, E> boolean addGraph(         Graph<? super V, ? super E> destination,         Graph<V, E> source)", "diff": ["-        Graph<V, E> destination,", "+        Graph<? super V, ? super E> destination,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b6ba08d755963297e2e43f87450cf3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/BellmanFordIterator.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Iterator<? extends E> edgesOfIterator(V vertex)", "signatureAfterChange": "     protected Iterator<E> edgesOfIterator(V vertex)", "diff": ["-    protected Iterator<? extends E> edgesOfIterator(V vertex) {", "+    protected Iterator<E> edgesOfIterator(V vertex) {", "-            return ((DirectedGraph<V,? extends E>) this.graph).outgoingEdgesOf(vertex)", "+            return ((DirectedGraph<V,E>) this.graph).outgoingEdgesOf(vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d67a63fbaebd47f9b466003a79d08c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public List<? extends E> outgoingEdgesOf(V vertex)", "signatureAfterChange": "     public List<E> outgoingEdgesOf(V vertex)", "diff": ["-    public List<? extends E> outgoingEdgesOf(V vertex)", "+    public List<E> outgoingEdgesOf(V vertex)", "-        return ((DirectedGraph<V,? extends E>) m_delegate).outgoingEdgesOf(vertex);", "+        return ((DirectedGraph<V,E>) m_delegate).outgoingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a4e329eb8fd198eeb430ca95f346ef4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public List<E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public List<E> incomingEdgesOf(V vertex)", "diff": ["-        // XXX hb 27-Nov-05: I have no clue why this cast works without raising a warning", "-        List<? extends E> baseEdges =", "-            ((DirectedGraph<V, ? extends E>) m_base).incomingEdgesOf(vertex);", "+        List<E> baseEdges =", "+            ((DirectedGraph<V, E>) m_base).incomingEdgesOf(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a918e3716719974e17cfdd572315db", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "329f725d890bc8909ea0cc963e9073bf1a9f56aa", "commitAfterChange": "f6f0e2a6e52e853643de51a0f5d8b9d675a6d2c5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static <V, E> boolean addAllEdges(         Graph<V, E> destination,         Graph<V, E> source,         Collection<? extends E> edges)", "signatureAfterChange": "     public static <V, E> boolean addAllEdges(         Graph<? super V, ? super E> destination,         Graph<V, E> source,         Collection<? extends E> edges)", "diff": ["-        Graph<V, E> destination,", "+        Graph<? super V, ? super E> destination,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc508e6618d3b377e62420da8f7a1e2a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "329f725d890bc8909ea0cc963e9073bf1a9f56aa", "commitAfterChange": "f6f0e2a6e52e853643de51a0f5d8b9d675a6d2c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static <V, E> void addGraphReversed(         DirectedGraph<V, E> destination,         DirectedGraph<V, E> source)", "signatureAfterChange": "     public static <V, E> void addGraphReversed(         DirectedGraph<? super V, ? super E> destination,         DirectedGraph<V, E> source)", "diff": ["-        DirectedGraph<V, E> destination,", "+        DirectedGraph<? super V, ? super E> destination,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b96b61aad08e9ce1b66f2a44e38888", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/BellmanFordIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     protected Iterator<E> edgesOfIterator(V vertex)", "signatureAfterChange": "     protected Iterator<? extends E> edgesOfIterator(V vertex)", "diff": ["-    protected Iterator<E> edgesOfIterator(V vertex) {", "+    protected Iterator<? extends E> edgesOfIterator(V vertex) {", "-            return ((DirectedGraph<V,E>) this.graph).outgoingEdgesOf(vertex)", "+            return ((DirectedGraph<V,? extends E>) this.graph).outgoingEdgesOf(vertex)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11693e47cd8cba9b0dd81e89bf1029a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "329f725d890bc8909ea0cc963e9073bf1a9f56aa", "commitAfterChange": "f6f0e2a6e52e853643de51a0f5d8b9d675a6d2c5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public static <V, E> boolean addAllVertices(         Graph<V, E> destination,         Collection<? extends V> vertices)", "signatureAfterChange": "     public static <V, E> boolean addAllVertices(         Graph<? super V, ? super E> destination,         Collection<? extends V> vertices)", "diff": ["-        Graph<V, E> destination,", "+        Graph<? super V, ? super E> destination,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f174c5009c5cec368df884b86ae8af", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/GraphDelegator.java", "commitBeforeChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "commitAfterChange": "ea8a06af8fe16e7286b96b3187726c8b1edeb228", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public List<? extends E> incomingEdgesOf(V vertex)", "signatureAfterChange": "     public List<E> incomingEdgesOf(V vertex)", "diff": ["-    public List<? extends E> incomingEdgesOf(V vertex)", "+    public List<E> incomingEdgesOf(V vertex)", "-        return ((DirectedGraph<V,? extends E>) m_delegate).incomingEdgesOf(vertex);", "+        return ((DirectedGraph<V,E>) m_delegate).incomingEdgesOf(vertex);"]}]}