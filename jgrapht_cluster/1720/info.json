{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e02c8686547264f53c9068327f409170", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18b8b49561cf500794aa125548c5c34e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SerializationTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public void testDirectedMultigraph()         throws Exception", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     public void testDirectedMultigraph()         throws Exception", "diff": ["-        DirectedMultigraph<String,DirEdge<String>> graph =", "-            new DirectedMultigraph<String,DirEdge<String>>();", "+        DirectedMultigraph<String,DefaultEdge> graph =", "+            new DirectedMultigraph<String,DefaultEdge>(", "+                DefaultEdge.class);", "-        graph = (DirectedMultigraph<String,DirEdge<String>>) serializeAndDeserialize(graph);", "+        graph = (DirectedMultigraph<String,DefaultEdge>) serializeAndDeserialize(graph);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22922ff62e296c7872743563a7f6425b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph<String,Edge<String>> create()", "signatureAfterChange": "     public Pseudograph<String,DefaultEdge> create()", "diff": ["-    public Pseudograph<String,Edge<String>> create()", "+    public Pseudograph<String,DefaultEdge> create()", "-        Pseudograph<String,Edge<String>> g = new Pseudograph<String,Edge<String>>();", "+        Pseudograph<String,DefaultEdge> g =", "+            new Pseudograph<String,DefaultEdge>(DefaultEdge.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1f6dc7497ff9cfa4a8d0c15f1edc86", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private WeightedGraph<String,DirectedEdge<String>> create()", "signatureAfterChange": "      private WeightedGraph<String,DefaultEdge> create()", "diff": ["-    private WeightedGraph<String,DirectedEdge<String>> create()", "+    private WeightedGraph<String,DefaultEdge> create()", "-        WeightedGraph<String,DirectedEdge<String>>", "-            g = new WeightedPseudograph<String,DirectedEdge<String>>();", "+        WeightedGraph<String,DefaultEdge>", "+            g = new WeightedPseudograph<String,DefaultEdge>();", "-        m_e1 = GraphHelper.addEdge(g, V1, V2, 1);", "-        m_e2 = GraphHelper.addEdge(g, V2, V3, 2);", "-        m_e3 = GraphHelper.addEdge(g, V3, V1, 4);", "-        m_e4 = GraphHelper.addEdge(g, V3, V4, 10);", "-        m_u = GraphHelper.addEdge(g, V3, V3, 5);", "+        m_e1 = Graphs.addEdge(g, V1, V2, 1);", "+        m_e2 = Graphs.addEdge(g, V2, V3, 2);", "+        m_e3 = Graphs.addEdge(g, V3, V1, 4);", "+        m_e4 = Graphs.addEdge(g, V3, V4, 10);", "+        m_u = Graphs.addEdge(g, V3, V3, 5);"]}]}