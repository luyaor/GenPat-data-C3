{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "512352f1c9e5fca15774fedc249a0bff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6be4f68d35140feb63433fc10bd77a7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      DirectedGraph<String, DirectedEdge<String>> createDirectedGraph()", "signatureAfterChange": "      DirectedGraph<String, DefaultEdge> createDirectedGraph()", "diff": ["-    DirectedGraph<String, DirectedEdge<String>> createDirectedGraph()", "+    DirectedGraph<String, DefaultEdge> createDirectedGraph()", "-        DirectedGraph<String, DirectedEdge<String>> graph =", "-            new DefaultDirectedWeightedGraph<String, DirectedEdge<String>>();", "+        DirectedGraph<String, DefaultEdge> graph =", "+            new DefaultDirectedWeightedGraph<String, DefaultEdge>(", "+                DefaultWeightedEdge.class);", "-        graph.addEdge(v1, v3).setWeight(100);", "-        graph.addEdge(v2, v4).setWeight(1000);", "+        Graphs.addEdge(graph, v1, v3, 100);", "+        Graphs.addEdge(graph, v2, v4, 1000);", "-        graph.addEdge(v3, v6).setWeight(100);", "+        Graphs.addEdge(graph, v3, v6, 100);", "-        graph.addEdge(v5, v7).setWeight(200);", "+        Graphs.addEdge(graph, v5, v7, 200);", "-        graph.addEdge(v7, v8).setWeight(100);", "+        Graphs.addEdge(graph, v7, v8, 100);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e897a1bcfc949bbd58aa54819a573a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "025405bd96caf64041d629592cdf353967e57edb", "commitAfterChange": "0eec89d7d76077b485851c80e8f4e78e2d1e8cbf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testDirectedGraph(  )", "signatureAfterChange": "     public void testDirectedGraph(  )", "diff": ["-        DirectedGraph graph = new DefaultDirectedGraph(  );", "+        DirectedGraph graph = new DefaultDirectedWeightedGraph(  );", "+        // NOTE:  set weights on some of the edges to test traversals like", "+        // ClosestFirstIterator where it matters.  For other traversals, it", "+        // will be ignored.  Rely on the default edge weight being 1.", "-        graph.addEdge( v1, v3 );", "-        graph.addEdge( v2, v4 );", "+        graph.addEdge( v1, v3 ).setWeight( 100 );", "+        graph.addEdge( v2, v4 ).setWeight( 1000 );", "-        graph.addEdge( v3, v6 );", "+        graph.addEdge( v3, v6 ).setWeight( 100 );", "-        graph.addEdge( v5, v7 );", "+        graph.addEdge( v5, v7 ).setWeight( 200 );", "-        graph.addEdge( v7, v8 );", "+        graph.addEdge( v7, v8 ).setWeight( 100 );"]}]}