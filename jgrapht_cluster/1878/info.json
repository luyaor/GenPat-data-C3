{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8437f9ab77929a66e8ac029dae4bc5d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af3f0bfcc5ecdf6bcbd31515c8464e0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List getAllEdges( Object sourceVertex, Object targetVertex )", "signatureAfterChange": "     public List<E> getAllEdges( V sourceVertex, V targetVertex )", "diff": ["-    public List getAllEdges( Object sourceVertex, Object targetVertex ) {", "-        List forwardList = super.getAllEdges( sourceVertex, targetVertex );", "+    public List<E> getAllEdges( V sourceVertex, V targetVertex ) {", "+        List<E> forwardList = super.getAllEdges( sourceVertex, targetVertex );", "-        List reverseList = super.getAllEdges( targetVertex, sourceVertex );", "-        List list =", "+        List<E> reverseList = super.getAllEdges( targetVertex, sourceVertex );", "+        List<E> list ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c45c231454fbcb81cc599b68dc15454e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public List<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> getAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "-        List<E> forwardList = super.getAllEdges(sourceVertex, targetVertex);", "-", "+        Set<E> forwardList = super.getAllEdges(sourceVertex, targetVertex);", "+        ", "-", "-        List<E> reverseList = super.getAllEdges(targetVertex, sourceVertex);", "-        List<E> list = new ArrayList<E>(forwardList.size() + reverseList.size());", "+        ", "+        Set<E> reverseList = super.getAllEdges(targetVertex, sourceVertex);", "+        Set<E> list = new ArrayUnenforcedSet<E>(", "+            forwardList.size() + reverseList.size());"]}]}