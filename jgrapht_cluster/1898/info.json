{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd19fffc814c942ac26d38afc153afe5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36cca125a90cc1ff46331e338ea157ea", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testRemoveEdgeEdge()", "signatureAfterChange": "     public void testRemoveEdgeEdge()", "diff": ["-        assertEquals(m_g4.edgeSet().size(), 4);", "-        m_g4.removeEdge(m_v1, m_v2);", "-        assertEquals(m_g4.edgeSet().size(), 3);", "-        assertFalse(m_g4.removeEdge(m_eLoop));", "-        assertTrue(m_g4.removeEdge(m_g4.getEdge(m_v2, m_v3)));", "-        assertEquals(m_g4.edgeSet().size(), 2);", "+        assertEquals(g4.edgeSet().size(), 4);", "+        g4.removeEdge(v1, v2);", "+        assertEquals(g4.edgeSet().size(), 3);", "+        assertFalse(g4.removeEdge(eLoop));", "+        assertTrue(g4.removeEdge(g4.getEdge(v2, v3)));", "+        assertEquals(g4.edgeSet().size(), 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa853e871849419571d74f26d9b78e66", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "c0b16b6556c96539006185d958b0f5e843675e68", "commitAfterChange": "b1382aa25544721cf9f8cd8ebbac3a2da4113463", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testAddVertex(  )", "signatureAfterChange": "     public void testAddVertex(  )", "diff": ["-        assertEquals( 1, g1.vertexSet(  ).size(  ) );", "-        assertEquals( 2, g2.vertexSet(  ).size(  ) );", "-        assertEquals( 3, g3.vertexSet(  ).size(  ) );", "-        assertEquals( 4, g4.vertexSet(  ).size(  ) );", "+        assertEquals( 1, m_g1.vertexSet(  ).size(  ) );", "+        assertEquals( 2, m_g2.vertexSet(  ).size(  ) );", "+        assertEquals( 3, m_g3.vertexSet(  ).size(  ) );", "+        assertEquals( 4, m_g4.vertexSet(  ).size(  ) );", "-        assertFalse( g1.addVertex( v1 ) );", "-        assertTrue( g1.addVertex( v2 ) );", "+        assertFalse( m_g1.addVertex( m_v1 ) );", "+        assertTrue( m_g1.addVertex( m_v2 ) );"]}]}