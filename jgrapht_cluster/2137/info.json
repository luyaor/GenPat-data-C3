{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee114f93919f9fc87ec0844fd26dd9d3", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7827a987b1c6159b73e215c56c90096", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public AbstractBaseGraph(EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "signatureAfterChange": "     public AbstractBaseGraph(EdgeFactory<V, E> ef,         boolean allowMultipleEdges,         boolean allowLoops)", "diff": ["-        m_edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "-        m_edgeFactory = ef;", "-        m_allowingLoops = allowLoops;", "-        m_allowingMultipleEdges = allowMultipleEdges;", "+        edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "+        edgeFactory = ef;", "+        allowingLoops = allowLoops;", "+        allowingMultipleEdges = allowMultipleEdges;", "-        m_specifics = createSpecifics();", "+        specifics = createSpecifics();", "-        m_edgeListFactory = new ArrayListFactory<V,E>();", "+        this.edgeSetFactory = new ArrayListFactory<V,E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97cc162b0be4ecffa4d787bd6827c8a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     public Object clone()", "diff": ["-            newGraph.m_edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "+            newGraph.edgeMap = new LinkedHashMap<E, IntrusiveEdge>();", "-            newGraph.m_edgeFactory = this.m_edgeFactory;", "-            newGraph.m_unmodifiableEdgeSet = null;", "-            newGraph.m_unmodifiableVertexSet = null;", "+            newGraph.edgeFactory = this.edgeFactory;", "+            newGraph.unmodifiableEdgeSet = null;", "+            newGraph.unmodifiableVertexSet = null;", "-            newGraph.m_specifics = newGraph.createSpecifics();", "+            newGraph.specifics = newGraph.createSpecifics();"]}]}