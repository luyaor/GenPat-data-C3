{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "135d203501b25975017886965b1ea1d4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f01001741940e0d4fd748cc750f9b6d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void main(String [] args)         throws Exception", "signatureAfterChange": "     public static void main(String [] args)         throws Exception", "diff": ["-                    org._3pq.jgrapht.experimental.heap.FibonacciHeap", "+                    org.jgrapht.experimental.heap.FibonacciHeap", "-                    org._3pq.jgrapht.experimental.heap.FibonacciHeap", "+                    org.jgrapht.experimental.heap.FibonacciHeap", "-                org._3pq.jgrapht.experimental.heap.FibonacciHeap.getFactory());", "+                org.jgrapht.experimental.heap.FibonacciHeap.getFactory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa35dcb1fb0d8b097763fa52a8eb03f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         protected void encounterVertexAgain(V vertex, E edge)", "signatureAfterChange": "         protected void encounterVertexAgain(V vertex, E edge)", "diff": ["-            int i = m_path.indexOf(vertex);", "+            int i = path.indexOf(vertex);", "-                if (m_cycleSet == null) {", "+                if (cycleSet == null) {", "-                for (; i < m_path.size(); ++i) {", "-                    m_cycleSet.add(m_path.get(i));", "+                for (; i < path.size(); ++i) {", "+                    cycleSet.add(path.get(i));"]}]}