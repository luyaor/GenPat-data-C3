{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24e91ddce96ebf2845f8e6031e9e6ad7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ab193597a2ec6d8b4e21eeb21a2b3a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "       private void addEdgesUsingFilter( Set edgeSet, Set filter )", "signatureAfterChange": "       private void addEdgesUsingFilter( Set<E> edgeSet, Set<E> filter )", "diff": ["-    private void addEdgesUsingFilter( Set edgeSet, Set filter ) {", "-        Edge    e;", "+    private void addEdgesUsingFilter( Set<E> edgeSet, Set<E> filter ) {", "+        E    e;", "-        for( Iterator i = edgeSet.iterator(  ); i.hasNext(  ); ) {", "-            e     = (Edge) i.next(  );", "+        for( Iterator<E> iter = edgeSet.iterator(  ); iter.hasNext(  ); ) {", "+            e     = iter.next(  );", "-            // note the use of short circuit evaluation            ", "+            // note the use of short circuit evaluation"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4aba35f03374646e469a60238071acc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "       private void addVerticesUsingFilter( Set vertexSet, Set filter )", "signatureAfterChange": "       private void addVerticesUsingFilter( Set<V> vertexSet, Set<V> filter )", "diff": ["-    private void addVerticesUsingFilter( Set vertexSet, Set filter ) {", "-        Object v;", "+    private void addVerticesUsingFilter( Set<V> vertexSet, Set<V> filter ) {", "+        V v;", "-        for( Iterator i = vertexSet.iterator(  ); i.hasNext(  ); ) {", "-            v = i.next(  );", "+        for( Iterator<V> iter = vertexSet.iterator(  ); iter.hasNext(  ); ) {", "+            v = iter.next(  );", "-            // note the use of short circuit evaluation            ", "+            // note the use of short circuit evaluation"]}]}