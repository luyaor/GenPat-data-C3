{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea4dd63e8abf39aa81dcef38a05af2b9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c49ae8145e6dff6ab58dcd9c2fe0e7e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void exportNormalizedLaplacianMatrix(Writer output, UndirectedGraph g)", "signatureAfterChange": "     public void exportNormalizedLaplacianMatrix(         Writer output, UndirectedGraph<V,E> g)", "diff": ["-    public void exportNormalizedLaplacianMatrix(Writer output, UndirectedGraph g)", "+    public void exportNormalizedLaplacianMatrix(", "+        Writer output, UndirectedGraph<V,E> g)", "-        VertexNameProvider nameProvider = new IntegerNameProvider();", "-        for (Object from : g.vertexSet()) {", "+        VertexNameProvider<V> nameProvider = new IntegerNameProvider<V>();", "+        for (V from : g.vertexSet()) {", "-        for (Object from : g.vertexSet()) {", "+        for (V from : g.vertexSet()) {", "-            // TODO modify Graphs to return neighbor sets", "-            Set neighbors = new LinkedHashSet(Graphs.neighborListOf(g, from));", "+            Set<V> neighbors =", "+                new LinkedHashSet<V>(Graphs.neighborListOf(g, from));", "-            }", "-            else {", "+            } else {", "-                for (Object to : neighbors) {", "+                for (V to : neighbors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9fa6ae339c0fb7cb84e96dce083831", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/PermutationIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected boolean areVertexSetsOfTheSameEqualityGroup(         Set vertexSet1,         Set vertexSet2)", "signatureAfterChange": "     protected boolean areVertexSetsOfTheSameEqualityGroup(         Set<V> vertexSet1,         Set<V> vertexSet2)", "diff": ["-        Set vertexSet1,", "-        Set vertexSet2)", "+        Set<V> vertexSet1,", "+        Set<V> vertexSet2)", "-        Iterator iter2 = vertexSet2.iterator();", "+        Iterator<V> iter2 = vertexSet2.iterator();", "-        for (Iterator iter1 = vertexSet1.iterator(); iter1.hasNext();) {", "-            Object vertex1 = (Object) iter1.next();", "-            Object vertex2 = (Object) iter2.next();", "+        for (Iterator<V> iter1 = vertexSet1.iterator(); iter1.hasNext();) {", "+            V vertex1 = iter1.next();", "+            V vertex2 = iter2.next();"]}]}