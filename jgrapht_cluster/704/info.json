{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "005362afd057842a25b11270e361cb4f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9fa6ae339c0fb7cb84e96dce083831", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/PermutationIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     protected boolean areVertexSetsOfTheSameEqualityGroup(         Set vertexSet1,         Set vertexSet2)", "signatureAfterChange": "     protected boolean areVertexSetsOfTheSameEqualityGroup(         Set<V> vertexSet1,         Set<V> vertexSet2)", "diff": ["-        Set vertexSet1,", "-        Set vertexSet2)", "+        Set<V> vertexSet1,", "+        Set<V> vertexSet2)", "-        Iterator iter2 = vertexSet2.iterator();", "+        Iterator<V> iter2 = vertexSet2.iterator();", "-        for (Iterator iter1 = vertexSet1.iterator(); iter1.hasNext();) {", "-            Object vertex1 = (Object) iter1.next();", "-            Object vertex2 = (Object) iter2.next();", "+        for (Iterator<V> iter1 = vertexSet1.iterator(); iter1.hasNext();) {", "+            V vertex1 = iter1.next();", "+            V vertex2 = iter2.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f939d83c43686263f5ec381b3e560cff", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        int numberOfVertexInMap = this.mapVertexToOrder.size();", "-        Set keySet = this.mapVertexToOrder.keySet();", "-        for (Iterator iter = keySet.iterator(); iter.hasNext();) {", "-            Object currVertex = (Object) iter.next();", "-            Integer index = (Integer) this.mapVertexToOrder.get(currVertex);", "+        Set<V> keySet = this.mapVertexToOrder.keySet();", "+        for (V currVertex : keySet) {", "+            Integer index = this.mapVertexToOrder.get(currVertex);"]}]}