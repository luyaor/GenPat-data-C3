{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e5f0d6b833a980cce755e33b11e2da6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3864084ae23c718ea6cb5af86a13e9cb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphTests.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public static boolean isConnected(Graph g)", "signatureAfterChange": "      public static <V, E extends Edge<V>> boolean isConnected(Graph<V,E> g)", "diff": ["-    public static boolean isConnected(Graph g)", "+    public static <V, E extends Edge<V>> boolean isConnected(Graph<V,E> g)", "-        Set known = new HashSet();", "-        LinkedList queue = new LinkedList();", "-        Object v = g.vertexSet().iterator().next();", "+        Set<V> known = new HashSet<V>();", "+        LinkedList<V> queue = new LinkedList<V>();", "+        V v = g.vertexSet().iterator().next();", "-            for (Iterator it = GraphHelper.neighborListOf(g, v).iterator();", "+            for (Iterator<V> it = GraphHelper.neighborListOf(g, v).iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd869b052da822177b70f970e06c149", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphTests.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public static boolean isBipartite(Graph g)", "signatureAfterChange": "      public static <V, E extends Edge<V>> boolean isBipartite(Graph<V,E> g)", "diff": ["-    public static boolean isBipartite(Graph g)", "+    public static <V, E extends Edge<V>> boolean isBipartite(Graph<V,E> g)", "-        Set unknown = new HashSet(g.vertexSet());", "-        LinkedList queue = new LinkedList();", "-        Object v = unknown.iterator().next();", "-        Set odd = new HashSet();", "+        Set<V> unknown = new HashSet<V>(g.vertexSet());", "+        LinkedList<V> queue = new LinkedList<V>();", "+        V v = unknown.iterator().next();", "+        Set<V> odd = new HashSet<V>();", "-            for (Iterator it = GraphHelper.neighborListOf(g, v).iterator();", "+            for (Iterator<V> it = GraphHelper.neighborListOf(g, v).iterator();", "-                Object n = it.next();", "+                V n = it.next();"]}]}