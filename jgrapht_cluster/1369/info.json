{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "689958dd8693ed8cd61b33b906ada589", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64999b8bad0d7881853382173daf9433", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/util/equivalence/EquivalenceSetCreator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "         public int compare(java.lang.Object arg1, java.lang.Object arg2)", "signatureAfterChange": "         @SuppressWarnings(\"unchecked\")         public int compare(EquivalenceSet arg1, EquivalenceSet arg2)", "diff": ["-        public int compare(java.lang.Object arg1, java.lang.Object arg2)", "+        @SuppressWarnings(\"unchecked\")", "+        public int compare(EquivalenceSet arg1, EquivalenceSet arg2)", "-            int eqGroupSize1 = ((EquivalenceSet) arg1).size();", "-            int eqGroupSize2 = ((EquivalenceSet) arg2).size();", "+            int eqGroupSize1 = arg1.size();", "+            int eqGroupSize2 = arg2.size();", "-                int eqGroupHash1 = ((EquivalenceSet) arg1).hashCode();", "-                int eqGroupHash2 = ((EquivalenceSet) arg2).hashCode();", "+                int eqGroupHash1 = arg1.hashCode();", "+                int eqGroupHash2 = arg2.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d1747bfed53b8920e11329a37c008f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public List stronglyConnectedSubgraphs(  )", "signatureAfterChange": "     public List<DirectedSubgraph> stronglyConnectedSubgraphs(  )", "diff": ["-    public List stronglyConnectedSubgraphs(  ) {", "+    public List<DirectedSubgraph> stronglyConnectedSubgraphs(  ) {", "-            List sets = stronglyConnectedSets(  );", "+            List<Set<V>> sets = stronglyConnectedSets(  );", "-            Iterator iter = sets.iterator(  );", "+            Iterator<Set<V>> iter = sets.iterator(  );", "-                m_stronglyConnectedSubgraphs.add( new DirectedSubgraph( ", "-                        m_graph, (Set) iter.next(  ), null ) );", "+                m_stronglyConnectedSubgraphs.add( new DirectedSubgraph(", "+                        m_graph, iter.next(  ), null ) );"]}]}