{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95208b5f44e81c202d8ea2552611cb6a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d485473013a0b4f64ee7bf2a2c454a9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/MinimumSpanningTreeTests.java", "commitBeforeChange": "dec9253520ef416ba56447d68c03cad6545ec37a", "commitAfterChange": "45dc34016cca42bc1806df6d5ba72daac7c68900", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "       protected <V> void testMinimumSpanningForest(MinimumSpanningTree<V, DefaultWeightedEdge> mst)", "signatureAfterChange": "      protected <V, E> void testKruskalMinimumSpanningTreeBuildingBackwardCompatibility(             final KruskalMinimumSpanningTree<V, DefaultWeightedEdge> mst,             final Collection<E> edgeSet,             final double weight)", "diff": ["-    protected <V> void testMinimumSpanningForest(MinimumSpanningTree<V, DefaultWeightedEdge> mst) {", "-        assertEquals(60.0, mst.getMinimumSpanningTreeTotalWeight());", "-        assertTrue(", "-                mst.getMinimumSpanningTreeEdgeSet().containsAll(", "-                        Arrays.asList(AB, AC, BD, EG, GH, FH)", "-                )", "-        );", "+    protected <V, E> void testKruskalMinimumSpanningTreeBuildingBackwardCompatibility(", "+            final KruskalMinimumSpanningTree<V, DefaultWeightedEdge> mst,", "+            final Collection<E> edgeSet,", "+            final double weight) {", "+", "+        assertEquals(weight, mst.getSpanningTreeCost());", "+        assertTrue(mst.getEdgeSet().containsAll(edgeSet));", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f157c6a5b13e216f886ccca258d1837d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/MinimumSpanningTreeTests.java", "commitBeforeChange": "dec9253520ef416ba56447d68c03cad6545ec37a", "commitAfterChange": "45dc34016cca42bc1806df6d5ba72daac7c68900", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected <V> void testMinimumSpanningTree(MinimumSpanningTree<V, DefaultWeightedEdge> mst)", "signatureAfterChange": "       protected <V, E> void testMinimumSpanningTreeBuilding(         final MinimumSpanningTree<V, DefaultWeightedEdge> mst,         final Collection<E> edgeSet,         final double weight)", "diff": ["+    protected <V, E> void testMinimumSpanningTreeBuilding(", "+        final MinimumSpanningTree<V, DefaultWeightedEdge> mst,", "+        final Collection<E> edgeSet,", "+        final double weight) {", "+", "+            assertEquals(weight, mst.getMinimumSpanningTreeTotalWeight());", "+            assertTrue(mst.getMinimumSpanningTreeEdgeSet().containsAll(edgeSet));", "+", "-    protected <V> void testMinimumSpanningTree(MinimumSpanningTree<V, DefaultWeightedEdge> mst) {", "-        assertEquals(15.0, mst.getMinimumSpanningTreeTotalWeight());", "-        assertTrue(", "-                mst.getMinimumSpanningTreeEdgeSet().containsAll(", "-                        Arrays.asList(AB, AC, BD, DE)", "-                )", "-        );"]}]}