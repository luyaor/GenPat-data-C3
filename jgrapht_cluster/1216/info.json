{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9081a36e7161694e4da722af9cd756c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada796d55d75f28a0c21bff387627e31", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "commitAfterChange": "0fa22166c3bce2b4318de51e3645ef9910304701", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private static List createPath( ClosestFirstIterator iter, Object endVertex )", "signatureAfterChange": "       private void createEdgeList( ClosestFirstIterator iter, Object endVertex )", "diff": ["-     */", "-    private static List createPath( ClosestFirstIterator iter, Object endVertex ) {", "-        List path = new ArrayList(  );", "+    private void createEdgeList( ClosestFirstIterator iter, Object endVertex ) {", "+        m_edgeList = new ArrayList(  );", "-            path.add( edge );", "+            m_edgeList.add( edge );", "-        Collections.reverse( path );", "-", "-        return path;", "+        Collections.reverse( m_edgeList );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9b9f5439e2c984df0fb701b52e92563", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": "          VertexExtensionBase(V prototype)", "signatureAfterChange": "          public void setInverse(EdgeExtensionBase inverse)", "diff": ["-", "-        VertexExtensionBase(V prototype)", "-        {", "-            this.prototype  = prototype;", "-            this.outgoing   = new ArrayList<EdgeExtensionBase>();", "-        }", "+", "+        public void setInverse(EdgeExtensionBase inverse) {", "+            this.inverse = inverse;", "+        }"]}]}