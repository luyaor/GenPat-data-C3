{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e07ef81aac10e5444075a11397b14199", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c75624f74444cddadcac2b2d831772", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 65, "signatureBeforeChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-                        sourceVertex.equals(e.getSource())", "-                        && targetVertex.equals(e.getTarget());", "+                        sourceVertex.equals(getEdgeSource(e))", "+                        && targetVertex.equals(getEdgeTarget(e));", "-                        sourceVertex.equals(e.getTarget())", "-                        && targetVertex.equals(e.getSource());", "+                        sourceVertex.equals(getEdgeTarget(e))", "+                        && targetVertex.equals(getEdgeSource(e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cded94f6f6eaba592fb302dc79f8e8eb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 66, "signatureBeforeChange": "         public E getEdge(V sourceVertex, V targetVertex)", "signatureAfterChange": "         public E getEdge(V sourceVertex, V targetVertex)", "diff": ["-                        sourceVertex.equals(e.getSource())", "-                        && targetVertex.equals(e.getTarget());", "+                        sourceVertex.equals(getEdgeSource(e))", "+                        && targetVertex.equals(getEdgeTarget(e));", "-                        sourceVertex.equals(e.getTarget())", "-                        && targetVertex.equals(e.getSource());", "+                        sourceVertex.equals(getEdgeTarget(e))", "+                        && targetVertex.equals(getEdgeSource(e));"]}]}