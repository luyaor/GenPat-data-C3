{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20dc6ab6e8d0e1e7b53113094843f5a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5706564fb35352711eb129cf89b0b04e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testDegreeOf()", "signatureAfterChange": "     public void testDegreeOf()", "diff": ["-        assertEquals(1, m_undirected.degreeOf(m_v1));", "-        assertEquals(3, m_undirected.degreeOf(m_v2));", "-        assertEquals(1, m_undirected.degreeOf(m_v3));", "-        assertEquals(3, m_undirected.degreeOf(m_v4));", "+        assertEquals(1, undirected.degreeOf(v1));", "+        assertEquals(3, undirected.degreeOf(v2));", "+        assertEquals(1, undirected.degreeOf(v3));", "+        assertEquals(3, undirected.degreeOf(v4));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d01578b9ac24469540dafc0ae0451906", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/AsUndirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void testGetAllEdges()", "signatureAfterChange": "     public void testGetAllEdges()", "diff": ["-        Set<DefaultEdge> edges = m_undirected.getAllEdges(m_v3, m_v2);", "+        Set<DefaultEdge> edges = undirected.getAllEdges(v3, v2);", "-        assertEquals(m_directed.getEdge(m_v2, m_v3),", "+        assertEquals(directed.getEdge(v2, v3),", "-        edges = m_undirected.getAllEdges(m_v4, m_v4);", "+        edges = undirected.getAllEdges(v4, v4);", "-        assertEquals(m_loop, edges.iterator().next());", "+        assertEquals(loop, edges.iterator().next());"]}]}