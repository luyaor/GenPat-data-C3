{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11647bc716a5837e09da34f5da811fd8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03be5343e08fabdf00d0a1a4af4f03fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "5de97dd347263a83c52505c6010c41e41ef125ee", "commitAfterChange": "1cb79a9b9b166e37d9c4f5c4835e20b875a6e3d0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void testOneComparator(         EquivalenceComparator comparator,         int expectedNumOfGroups)", "signatureAfterChange": "      private void testOneComparator(         EquivalenceComparator comparator,         int expectedNumOfGroups)", "diff": ["-            assertTrue(eqGroupArray[i].size() >= eqGroupArray[i-1].size());", "+            assertTrue(set.size() >= eqGroupArray[i-1].size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "296856c752ab8c6458f9639b4b58c805", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         VertexData( Object vertex )", "signatureAfterChange": "         VertexData( Object vertex )", "diff": ["-            this.vertex = vertex;", "+            m_vertex = vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d15a621fec9b81d2751bc4a610b7d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public StrongConnectivityInspector( DirectedGraph g )", "signatureAfterChange": "     public StrongConnectivityInspector( DirectedGraph g )", "diff": ["-        this.graph = g;", "+        m_graph = g;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71963c2c92bcc6979cefea8636391ec7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "a8fcb05e59a32f8e49530eae4f6013ccc6c2ed3e", "commitAfterChange": "e07df8411d2d5660415c7539e838f795b02777b5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "         Object getVertex(  )", "signatureAfterChange": "         Object getVertex(  )", "diff": ["-            return this.vertex;", "+            return m_vertex;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fac081e7e0dfd38cda7f2c9a17f18e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "99343b40edae9d7902d87f6828908836a2fb9cca", "commitAfterChange": "e34958c59f3372942389846e0b479969a40b8361", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void dfsVisit(         DirectedGraph<V, E> graph,         VertexData<V> vertexData,         Set<V> vertices)", "signatureAfterChange": "     private void dfsVisit(         DirectedGraph<V, E> graph,         VertexData<V> vertexData,         Set<V> vertices)", "diff": ["-                        vertexToVertexData.get(this.graph.getEdgeTarget(edge));", "+                        vertexToVertexData.get(graph.getEdgeTarget(edge));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69d9968ee871a88540483fb055d03e3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "6499999477c7a40619713046833eb540118cbf72", "commitAfterChange": "112016d06d4a95e2258499059391b4b3c007b39f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "       private void addUnseenChildrenOf( Object vertex )", "signatureAfterChange": "       private void addUnseenChildrenOf( Object vertex )", "diff": ["-            if( m_seen.containsKey( v ) ) {", "+            if( isSeenVertex( v ) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adf4d73232f38f40f54caf7e3878b430", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "signatureAfterChange": "     protected void encounterVertexAgain( Object vertex, Edge edge )", "diff": ["-            m_queue.m_heap.decreaseKey( entry, candidatePathLength );", "+            m_heap.decreaseKey( entry, candidatePathLength );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84340b1c7f4a408a6fc34f32780798d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BellmanFordPathElement.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean improve(         BellmanFordPathElement<V,E> candidatePrevPathElement,         E candidateEdge, double candidateCost)", "signatureAfterChange": "     protected boolean improve(         BellmanFordPathElement<V,E> candidatePrevPathElement,         E candidateEdge, double candidateCost)", "diff": ["-        if (candidateCost < getCost() - this.epsilon) {", "+        if (candidateCost < getCost() - epsilon) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc1bc28d1a155ba1938cc5c925942c21", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "8e3c910dcb6e04e08188ad88b293fd6672a276b4", "commitAfterChange": "a20f798af66c0decc384f44c99d8a507ed5ee781", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( Object v )", "diff": ["-        // if not originally removed from base we remove touching edges.", "-        // otherwise, base already removed them.", "-        if( m_base.containsVertex( v ) ) {", "+        if( containsVertex( v ) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ae6888094fa0e5ff2c31e5711cc88b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "6499999477c7a40619713046833eb540118cbf72", "commitAfterChange": "112016d06d4a95e2258499059391b4b3c007b39f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public boolean hasNext(  )", "signatureAfterChange": "     public boolean hasNext(  )", "diff": ["-                    if( !m_seen.containsKey( v ) ) {", "+                    if( !isSeenVertex( v ) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4220eff7c15921b85eb08e73f3483ac", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/CliqueMinimalSeparatorDecompositionTest.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r     public void testRandomGraphs()", "signatureAfterChange": "\r     public void testRandomGraphs()", "diff": ["-                assertTrue(CliqueMinimalSeparatorDecomposition.isClique(\r", "-                    g,\r", "-                    separator));\r", "+                assertTrue(isClique(g, separator));\r"]}]}