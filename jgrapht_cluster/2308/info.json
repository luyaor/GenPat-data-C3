{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f102a6a83668f4791a94e8d32020008", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36cca125a90cc1ff46331e338ea157ea", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testRemoveEdgeEdge()", "signatureAfterChange": "     public void testRemoveEdgeEdge()", "diff": ["-        assertEquals(m_g4.edgeSet().size(), 4);", "-        m_g4.removeEdge(m_v1, m_v2);", "-        assertEquals(m_g4.edgeSet().size(), 3);", "-        assertFalse(m_g4.removeEdge(m_eLoop));", "-        assertTrue(m_g4.removeEdge(m_g4.getEdge(m_v2, m_v3)));", "-        assertEquals(m_g4.edgeSet().size(), 2);", "+        assertEquals(g4.edgeSet().size(), 4);", "+        g4.removeEdge(v1, v2);", "+        assertEquals(g4.edgeSet().size(), 3);", "+        assertFalse(g4.removeEdge(eLoop));", "+        assertTrue(g4.removeEdge(g4.getEdge(v2, v3)));", "+        assertEquals(g4.edgeSet().size(), 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8188f6e778264a678369a8919494d254", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      private void initMultiTriangleWithMultiLoop(DirectedGraph<String, DefaultEdge> g)", "signatureAfterChange": "      private void initMultiTriangleWithMultiLoop(DirectedGraph<String, DefaultEdge> g)", "diff": ["-        g.addVertex(m_v1);", "-        g.addVertex(m_v2);", "-        g.addVertex(m_v3);", "+        g.addVertex(v1);", "+        g.addVertex(v2);", "+        g.addVertex(v3);", "-        g.addEdge(m_v1, m_v1);", "-        g.addEdge(m_v1, m_v2);", "-        g.addEdge(m_v2, m_v3);", "-        g.addEdge(m_v3, m_v1);", "+        g.addEdge(v1, v1);", "+        g.addEdge(v1, v2);", "+        g.addEdge(v2, v3);", "+        g.addEdge(v3, v1);"]}]}