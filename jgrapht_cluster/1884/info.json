{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79b493a49bbd5c82cb6fd1239a70b183", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862fe563194fe606f2913a9f46201e67", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     void handleJGraphChangedEdge(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     void handleJGraphChangedEdge(org.jgraph.graph.Edge jEdge)", "diff": ["-            if (m_cellToEdge.containsKey(jEdge)) {", "+            if (cellToEdge.containsKey(jEdge)) {", "-            if (m_cellToEdge.containsKey(jEdge)) {", "+            if (cellToEdge.containsKey(jEdge)) {", "-                    m_cellToEdge.get(jEdge);", "+                    cellToEdge.get(jEdge);", "-                Object jtSource = m_cellToVertex.get(jSource);", "-                Object jtTarget = m_cellToVertex.get(jTarget);", "+                Object jtSource = cellToVertex.get(jSource);", "+                Object jtTarget = cellToVertex.get(jTarget);", "-                if ((m_jtGraph.getEdgeSource(jtEdge) == jtSource)", "-                    && (m_jtGraph.getEdgeTarget(jtEdge) == jtTarget)) {", "+                if ((jtGraph.getEdgeSource(jtEdge) == jtSource)", "+                    && (jtGraph.getEdgeTarget(jtEdge) == jtTarget)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d11fdde38c528ab80f525ac87dff801", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     void handleJGraphRemovedVertex(GraphCell jVertex)", "signatureAfterChange": "     void handleJGraphRemovedVertex(GraphCell jVertex)", "diff": ["-        if (m_cellToVertex.containsKey(jVertex)) {", "-            V jtVertex = m_cellToVertex.get(jVertex);", "-            Set<E> jtIncidentEdges = m_jtGraph.edgesOf(jtVertex);", "+        if (cellToVertex.containsKey(jVertex)) {", "+            V jtVertex = cellToVertex.get(jVertex);", "+            Set<E> jtIncidentEdges = jtGraph.edgesOf(jtVertex);", "-                m_jtGraph.removeAllEdges(new ArrayList<E>(jtIncidentEdges));", "+                jtGraph.removeAllEdges(new ArrayList<E>(jtIncidentEdges));", "-            m_jtGraph.removeVertex(jtVertex);", "+            jtGraph.removeVertex(jtVertex);", "-            m_cellToVertex.remove(jVertex);", "-            m_vertexToCell.remove(jtVertex);", "+            cellToVertex.remove(jVertex);", "+            vertexToCell.remove(jtVertex);"]}]}