{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27cd0a8bfde2801ed9d173a0a7ec3960", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f66af900fdc7e6d2fcb81ab060a5c4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/ProximityIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final void encounterVertexAgain(Object vertex, Edge edge)", "signatureAfterChange": "     protected final void encounterVertexAgain(V vertex, E edge)", "diff": ["-    protected final void encounterVertexAgain(Object vertex, Edge edge)", "+    protected final void encounterVertexAgain(V vertex, E edge)", "-        HeapVertex heapV = getHeapVertex(vertex);", "+        HeapVertex<E> heapV = getHeapVertex(vertex);", "-        HeapVertex heapPre = getHeapVertex(edge.oppositeVertex(vertex));", "+        HeapVertex<E> heapPre = getHeapVertex(edge.oppositeVertex(vertex));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e656c4af63a0eb3d069cbf276ffbe4c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/ProximityIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected final void encounterVertex(Object vertex, Edge edge)", "signatureAfterChange": "     protected final void encounterVertex(V vertex, E edge)", "diff": ["-    protected final void encounterVertex(Object vertex, Edge edge)", "+    protected final void encounterVertex(V vertex, E edge)", "-        HeapVertex heapV;", "+        HeapVertex<E> heapV;", "-            heapV = (HeapVertex) vertex;", "+            heapV = (HeapVertex<E>) vertex;", "-            heapV = new HeapVertex(vertex);", "+            heapV = new HeapVertex<E>(vertex);"]}]}