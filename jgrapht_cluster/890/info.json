{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc8d0bf7dfad4e4c68352c3e4155774a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815f98d2b2e4ac1f3f23087b3bb156ff", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "75bb7fff0bef1beed23710a8eaf7c22f02662da2", "commitAfterChange": "1852d2744de03b9218bb1f8c6e65dc81c980d59b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     public static <V, E> boolean isClique(\r         SimpleGraph<V, E> graph,\r         Set<V> vertices)", "signatureAfterChange": "\r     private static <V, E> boolean isClique(\r         UndirectedGraph<V, E> graph,\r         Set<V> vertices)", "diff": ["-    public static <V, E> boolean isClique(\r", "-        SimpleGraph<V, E> graph,\r", "+    private static <V, E> boolean isClique(\r", "+        UndirectedGraph<V, E> graph,\r", "-        Subgraph<V, E, SimpleGraph<V, E>> sub = \r", "-            new Subgraph<V, E, SimpleGraph<V, E>>(graph, vertices);\r", "-        int n = vertices.size();\r", "-        if (sub.edgeSet().size() == n * (n - 1) / 2)\r", "-            return true;\r", "-        else\r", "-            return false;\r", "+        for (V v1 : vertices) {\r", "+            for (V v2 : vertices) {\r", "+                if (v1 != v2 && graph.getEdge(v1, v2) == null)\r", "+                    return false;\r", "+            }\r", "+        }\r", "+        return true;\r", "+    }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b3f961c36b682c476abadec89377b5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "b338dc522beb4643906288a4c91571a7ab1b1795", "commitAfterChange": "8b53e2969b312c1e6f35e85a43bc0437bf413b79", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r     private static <V, E> boolean isClique(\r         UndirectedGraph<V, E> graph,\r         Set<V> vertices)", "signatureAfterChange": "     private static <V, E> boolean isClique(         UndirectedGraph<V, E> graph,         Set<V> vertices)", "diff": ["-     */\r", "-    private static <V, E> boolean isClique(\r", "-        UndirectedGraph<V, E> graph,\r", "-        Set<V> vertices)\r", "-    {\r", "-        for (V v1 : vertices) {\r", "-            for (V v2 : vertices) {\r", "-                if (v1 != v2 && graph.getEdge(v1, v2) == null)\r", "-                    return false;\r", "-            }\r", "-        }\r", "-        return true;\r", "-    }\r", "+     */", "+    private static <V, E> boolean isClique(", "+        UndirectedGraph<V, E> graph,", "+        Set<V> vertices)", "+    {", "+        for (V v1 : vertices) {", "+            for (V v2 : vertices) {", "+                if ((v1 != v2) && (graph.getEdge(v1, v2) == null)) {", "+                    return false;", "+                }", "+            }", "+        }", "+        return true;", "+    }"]}]}