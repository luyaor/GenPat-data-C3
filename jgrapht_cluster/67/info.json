{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "145409f325b9c66c17d0a6f9dc4320d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1c07fc4d838bf875cabc20c86b8a1f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/SubgraphIsomorphismRelation.java", "commitBeforeChange": "af1b824446ff484516d50232b001351d46878322", "commitAfterChange": "7e936137877a73e8b9c1b2921fc4174c64f683c0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override     public String toString()", "diff": ["-", "-        // somehow enforce an ordering on the vertices of g1..", "-        TreeSet<V> vertexSet = new TreeSet<V>(g1.getGraph().vertexSet());", "-        for (V v : vertexSet)", "-            str += v.toString() + \"=\" +(hasVertexCorrespondence(v) ?", "-                            getVertexCorrespondence(v, true) : \"~~\") + \" \";", "-        return str.substring(0, str.length() - 1) + \"]\";", "+        Set<V> vertexSet = g1.getGraph().vertexSet();", "+        ", "+        int i = 0;", "+        for (V v : vertexSet)   {", "+            V u = getVertexCorrespondence(v, true);", "+            str += (i++ == 0 ? \"\" : \" \") + v.toString() + \"=\" +", "+                            (u == null ? \"~~\" : u);", "+        }", "+        ", "+        return str + \"]\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86b149e9e6a3ed7c9a92d3729edbde4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/main/java/org/jgrapht/ext/DOTImporter.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isVertexLine(String input)", "signatureAfterChange": "     private boolean isStartOfBlockComment(String input, int position)", "diff": ["+", "+   private boolean isStartOfBlockComment(String input, int position) {", "+      char current = input.charAt(position);", "+      if(current == '/') {", "+         if(position < input.length() -1) {", "+            if(input.charAt(position + 1) == '*') {", "+               return true;", "+            }", "+         }", "+      }", "+      return false;", "+   }", "-", "-   private boolean isVertexLine(String input) {", "-      if(input.contains(\"[\")) {", "-         return ! input.substring(0, input.indexOf('[')).contains(\"-\");", "-      } else {", "-         return ! input.contains(\"-\");", "-      }"]}]}