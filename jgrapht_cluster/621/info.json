{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc417cfe92c2353cab2a2dbdfad59556", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00d597bb8a79830e975ae8bbce46da5a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "         public void connectedComponentFinished(             ConnectedComponentTraversalEvent e)", "signatureAfterChange": "         public void connectedComponentFinished(             ConnectedComponentTraversalEvent e)", "diff": ["-            switch (m_componentNumber) {", "+            switch (componentNumber) {", "-                assertEquals(getExpectedStr1(), m_result.toString());", "-                assertEquals(9, m_numComponentVertices);", "+                assertEquals(getExpectedStr1(), result.toString());", "+                assertEquals(9, numComponentVertices);", "-                assertEquals(getExpectedStr2(), m_result.toString());", "-                assertEquals(1, m_numComponentVertices);", "+                assertEquals(getExpectedStr2(), result.toString());", "+                assertEquals(1, numComponentVertices);", "-            m_numComponentVertices = 0;", "+            numComponentVertices = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a6a7bdc621341347f7feb50e4980f2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "96d44a9ae6e3d3923e0657aee3df5d8a34da488f", "commitAfterChange": "fd6ade3d5df69f4e95d0e8055a355f4e596aa63c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void lazyCalculateMatrix()", "signatureAfterChange": "     private void lazyCalculateMatrix()", "diff": ["+        boolean directed = graph instanceof DirectedGraph<?, ?>;", "-            int v_1 = vertices.indexOf(v1);", "-            int v_2 = vertices.indexOf(v2);", "+            int v_1 = vertexIndices.get(v1);", "+            int v_2 = vertexIndices.get(v2);", "-            if (!(graph instanceof DirectedGraph<?, ?>)) {", "+            if (!directed) {"]}]}