{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fe6b872ab7471d7a76a48f964a5ebc6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c49ae8145e6dff6ab58dcd9c2fe0e7e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void exportNormalizedLaplacianMatrix(Writer output, UndirectedGraph g)", "signatureAfterChange": "     public void exportNormalizedLaplacianMatrix(         Writer output, UndirectedGraph<V,E> g)", "diff": ["-    public void exportNormalizedLaplacianMatrix(Writer output, UndirectedGraph g)", "+    public void exportNormalizedLaplacianMatrix(", "+        Writer output, UndirectedGraph<V,E> g)", "-        VertexNameProvider nameProvider = new IntegerNameProvider();", "-        for (Object from : g.vertexSet()) {", "+        VertexNameProvider<V> nameProvider = new IntegerNameProvider<V>();", "+        for (V from : g.vertexSet()) {", "-        for (Object from : g.vertexSet()) {", "+        for (V from : g.vertexSet()) {", "-            // TODO modify Graphs to return neighbor sets", "-            Set neighbors = new LinkedHashSet(Graphs.neighborListOf(g, from));", "+            Set<V> neighbors =", "+                new LinkedHashSet<V>(Graphs.neighborListOf(g, from));", "-            }", "-            else {", "+            } else {", "-                for (Object to : neighbors) {", "+                for (V to : neighbors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484aa6ad8607028555c35899ef9969ff", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void exportAdjacencyMatrix(Writer output, DirectedGraph  g)", "signatureAfterChange": "     public void exportAdjacencyMatrix(Writer output, DirectedGraph<V,E> g)", "diff": ["-    public void exportAdjacencyMatrix(Writer output, DirectedGraph  g)", "+    public void exportAdjacencyMatrix(Writer output, DirectedGraph<V,E> g)", "-        VertexNameProvider nameProvider = new IntegerNameProvider();", "-        for (Object from : g.vertexSet()) {", "+        VertexNameProvider<V> nameProvider = new IntegerNameProvider<V>();", "+        for (V from : g.vertexSet()) {", "-        for (Object from : g.vertexSet()) {", "-            // TODO modify Graphs to return neighbor sets", "+        for (V from : g.vertexSet()) {", "-                    Graphs.successorListOf(g, from));", "+                Graphs.successorListOf(g, from));"]}]}