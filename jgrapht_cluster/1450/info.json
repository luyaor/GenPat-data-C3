{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82517ee7e31f6c98916dc796038a49a5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "502dcb1219de559af928152d470415b5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "56c09b98e6df528eeef0b8df9f8d932a1ba40192", "commitAfterChange": "75098fa5c7281c0f169434b46722c0b4e66b3a8c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void removeJGraphTVertex( Object jtVertex )", "signatureAfterChange": "     void handleJGraphTRemoveVertex( Object jtVertex )", "diff": ["-    protected void removeJGraphTVertex( Object jtVertex ) {", "+    void handleJGraphTRemoveVertex( Object jtVertex ) {", "-", "-        Object[] cells = { vertexCell, vertexCell.getChildAt( 0 ) };", "-        m_jVerticesBeingRemoved.add( vertexCell );", "-        remove( cells );", "+        ", "+        internalRemoveCell( vertexCell );", "+        // FIXME: Why remove childAt(0)? Explain if correct, otherwise fix.", "+        remove( new Object[] { vertexCell.getChildAt( 0 ) } );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776d4eb7595001f7e734e4f48ed25441", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/TraverseUtils.java", "commitBeforeChange": "025405bd96caf64041d629592cdf353967e57edb", "commitAfterChange": "0eec89d7d76077b485851c80e8f4e78e2d1e8cbf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public boolean hasNext(  )", "signatureAfterChange": "         public boolean hasNext(  )", "diff": ["-                        if( !m_seen.contains( v ) ) {", "-                            m_seen.add( v );", "-                            m_pending.add( v );", "+                        if( !m_seen.containsKey( v ) ) {", "+                            encounterVertex( v, null );"]}]}