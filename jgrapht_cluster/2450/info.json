{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2eef1da6ac23cc062bc91b553fbd1089", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a011675cf56815c4799d7ae1a1d489e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "39f6d087f9c352aa2ca56a09e92c6dc9c9b36858", "commitAfterChange": "ff1ebdb36f5aac5cce46f7242b871040083ebf67", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DepthFirstIterator( Graph g, Object startVertex,         boolean crossComponentTraversal )", "signatureAfterChange": "     public DepthFirstIterator( Graph g, Object startVertex,         boolean crossComponentTraversal )", "diff": ["-        super(  );", "-", "-        if( g == null ) {", "-            throw new NullPointerException( \"graph must not be null\" );", "-        }", "-", "-        m_specifics          = TraverseUtils.createGraphSpecifics( g );", "-        m_vertexIterator     = g.vertexSet(  ).iterator(  );", "-        setCrossComponentTraversal( crossComponentTraversal );", "-", "-        if( startVertex == null ) {", "-            // pick a start vertex if graph not empty ", "-            if( m_vertexIterator.hasNext(  ) ) {", "-                Object vStart = g.vertexSet(  ).iterator(  ).next(  );", "-                m_seen.add( vStart );", "-                m_pending.add( vStart );", "-            }", "-        }", "-        else if( g.containsVertex( startVertex ) ) {", "-            m_seen.add( startVertex );", "-            m_pending.add( startVertex );", "-        }", "-        else {", "-            throw new IllegalArgumentException( ", "-                \"graph must contain the start vertex\" );", "-        }", "-    }", "+        super( g, startVertex, crossComponentTraversal, new SimpleStack(  ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85d7d11712b6e33869290506d8e5f5d6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/BreadthFirstIterator.java", "commitBeforeChange": "39f6d087f9c352aa2ca56a09e92c6dc9c9b36858", "commitAfterChange": "ff1ebdb36f5aac5cce46f7242b871040083ebf67", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public BreadthFirstIterator( Graph g, Object startVertex,         boolean crossComponentTraversal )", "signatureAfterChange": "     public BreadthFirstIterator( Graph g, Object startVertex,         boolean crossComponentTraversal )", "diff": ["-        super(  );", "-", "-        if( g == null ) {", "-            throw new NullPointerException( \"graph must not be null\" );", "-        }", "-", "-        m_specifics          = TraverseUtils.createGraphSpecifics( g );", "-        m_vertexIterator     = g.vertexSet(  ).iterator(  );", "-        setCrossComponentTraversal( crossComponentTraversal );", "-", "-        if( startVertex == null ) {", "-            // pick a start vertex if graph not empty ", "-            if( m_vertexIterator.hasNext(  ) ) {", "-                Object vStart = g.vertexSet(  ).iterator(  ).next(  );", "-                m_seen.add( vStart );", "-                m_pending.add( vStart );", "-            }", "-        }", "-        else if( g.containsVertex( startVertex ) ) {", "-            m_seen.add( startVertex );", "-            m_pending.add( startVertex );", "-        }", "-        else {", "-            throw new IllegalArgumentException( ", "-                \"graph must contain the start vertex\" );", "-        }", "-    }", "+        super( g, startVertex, crossComponentTraversal, new SimpleQueue(  ) );"]}]}