{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0b7fa71d389197a52f63d78edd36553", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0d78929f31bd325a8ebab2d854f0d2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/alg/util/VertexComparator.java", "commitBeforeChange": "b807c0433e272bfef62ba41e0db8e4bd3d8200de", "commitAfterChange": "be56a9c01095d51bda7484f6144109c33db34a32", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic int compare(Object v1, Object v2)", "signatureAfterChange": "     public int compare( Object v1, Object v2 )", "diff": ["+     */", "+    public int compare( Object v1, Object v2 ) {", "+        int degree1 = m_graph.degreeOf( v1 );", "+        int degree2 = m_graph.degreeOf( v2 );", "-\t */", "-\tpublic int compare(Object v1, Object v2) {", "-\t\tint degree1 = graph.degreeOf(v1);", "-\t\tint degree2 = graph.degreeOf(v2);", "-\t\tif ((degree1 < degree2 && ascending)", "-\t\t\t|| (degree1 > degree2 && !ascending)) {", "-\t\t\treturn -1;", "-\t\t} else if (", "-\t\t\t(degree1 > degree2 && ascending)", "-\t\t\t\t|| (degree1 < degree2 && !ascending)) {", "-\t\t\treturn 1;", "-\t\t} else {", "-\t\t\treturn 0;", "-\t\t}", "-\t}", "+        if( ( degree1 < degree2 && m_ascendingOrder )", "+                || ( degree1 > degree2 && !m_ascendingOrder ) ) {", "+            return -1;", "+        }", "+        else if( ( degree1 > degree2 && m_ascendingOrder )", "+                || ( degree1 < degree2 && !m_ascendingOrder ) ) {", "+            return 1;", "+        }", "+        else {", "+            return 0;", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c643cb54b1ea7a7a182e837de72bf47", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DirectedNeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void edgeRemoved(GraphEdgeChangeEvent<V, E> e)", "signatureAfterChange": "     public void edgeRemoved(GraphEdgeChangeEvent<V, E> e)", "diff": ["-        V source = m_graph.getEdgeSource(edge);", "-        V target = m_graph.getEdgeTarget(edge);", "-        if (m_successorMap.containsKey(source)) {", "-            m_successorMap.get(source).removeNeighbor(target);", "+        V source = graph.getEdgeSource(edge);", "+        V target = graph.getEdgeTarget(edge);", "+        if (successorMap.containsKey(source)) {", "+            successorMap.get(source).removeNeighbor(target);", "-        if (m_predecessorMap.containsKey(target)) {", "-            m_predecessorMap.get(target).removeNeighbor(source);", "+        if (predecessorMap.containsKey(target)) {", "+            predecessorMap.get(target).removeNeighbor(source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e61572a2b0c583a48a5fe613b32de53", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/NeighborIndex.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void edgeRemoved(GraphEdgeChangeEvent<V, E> e)", "signatureAfterChange": "     public void edgeRemoved(GraphEdgeChangeEvent<V, E> e)", "diff": ["-        V source = m_graph.getEdgeSource(edge);", "-        V target = m_graph.getEdgeTarget(edge);", "-        if (m_neighborMap.containsKey(source)) {", "-            m_neighborMap.get(source).removeNeighbor(target);", "+        V source = graph.getEdgeSource(edge);", "+        V target = graph.getEdgeTarget(edge);", "+        if (neighborMap.containsKey(source)) {", "+            neighborMap.get(source).removeNeighbor(target);", "-        if (m_neighborMap.containsKey(target)) {", "-            m_neighborMap.get(target).removeNeighbor(source);", "+        if (neighborMap.containsKey(target)) {", "+            neighborMap.get(target).removeNeighbor(source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942b201b169f0a5cc8d50fbec7056076", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/util/VertexDegreeComparator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int compare(V v1, V v2)", "signatureAfterChange": "     public int compare(V v1, V v2)", "diff": ["-        int degree1 = m_graph.degreeOf(v1);", "-        int degree2 = m_graph.degreeOf(v2);", "+        int degree1 = graph.degreeOf(v1);", "+        int degree2 = graph.degreeOf(v2);", "-        if (((degree1 < degree2) && m_ascendingOrder)", "-            || ((degree1 > degree2) && !m_ascendingOrder)) {", "+        if (((degree1 < degree2) && ascendingOrder)", "+            || ((degree1 > degree2) && !ascendingOrder)) {", "-        } else if (((degree1 > degree2) && m_ascendingOrder)", "-            || ((degree1 < degree2) && !m_ascendingOrder)) {", "+        } else if (((degree1 > degree2) && ascendingOrder)", "+            || ((degree1 < degree2) && !ascendingOrder)) {"]}]}