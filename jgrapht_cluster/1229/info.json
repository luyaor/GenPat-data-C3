{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "301a5ffd7b1cbea2bfad96a5b9888c31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640edb00d7516223defcbffc5fa0eee6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/BronKerboschCliqueFinderTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testFindAll()", "signatureAfterChange": "      public void testFindAll()", "diff": ["-        SimpleGraph<String, Edge<String>> g =", "-            new SimpleGraph<String, Edge<String>>();", "+        SimpleGraph<String, DefaultEdge> g =", "+            new SimpleGraph<String, DefaultEdge>(DefaultEdge.class);", "-        BronKerboschCliqueFinder<String, Edge<String>> finder =", "-            new BronKerboschCliqueFinder<String, Edge<String>>(g);", "+        BronKerboschCliqueFinder<String, DefaultEdge> finder =", "+            new BronKerboschCliqueFinder<String, DefaultEdge>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "891749e04b0ba83f792461b3a1ca8be7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "1bc1049002c0faf13c343af60ab2fcc79bbade17", "commitAfterChange": "e3d152c903d64a55a394899016d3b983c6acef7f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void exportAdjacencyMatrixVertex(PrintWriter out,             VertexNameProvider nameProvider, Object from, List neighbors)", "signatureAfterChange": "      private void exportAdjacencyMatrixVertex(PrintWriter out,             VertexNameProvider nameProvider, Object from, List neighbors)", "diff": ["-        Map<String,Integer> counts = new LinkedHashMap<String,Integer>();", "+        Map<String,ModifiableInteger> counts = new LinkedHashMap<String,ModifiableInteger>();", "-            Integer count = counts.get(toName);", "+            ModifiableInteger count = counts.get(toName);", "-                count = 0;", "+                count = new ModifiableInteger(0);", "+                counts.put(toName, count);", "-            // count loops twice", "-            count += from.equals(to) ? 2 : 1;", "-            counts.put(toName, count);", "+", "+            count.increment();", "+            if (from.equals(to) ) {", "+                // count loops twice, once for each end", "+                count.increment();", "+            }", "-        for (Map.Entry<String,Integer> entry : counts.entrySet()) {", "+        for (Map.Entry<String,ModifiableInteger> entry : counts.entrySet()) {", "-            Integer count = entry.getValue();", "+            ModifiableInteger count = entry.getValue();"]}]}