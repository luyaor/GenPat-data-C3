{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e1f5d62f6e7f34fb1c0c68f85d824ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2005ea7e1caa918e2054aa7ff499a4cb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected void encounterVertexAgain(V vertex, E edge)", "signatureAfterChange": "     protected void encounterVertexAgain(V vertex, E edge)", "diff": ["+        VisitColor color = getSeenData(vertex);", "+        if (color != VisitColor.WHITE) {", "+            // We've already visited this vertex; no need to mess with the", "+            // stack (either it's BLACK and not there at all, or it's GRAY", "+            // and therefore just a sentinel).", "+            return;", "+        }", "+        int i = stack.indexOf(vertex);", "+        // Since we've encountered it before, and it's still WHITE, it", "+        // *must* be on the stack.", "+        assert(i > -1);", "+        stack.remove(i);", "+        stack.add(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc46bb63e6c3d05ce572056eedb8062", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/StrongConnectivityInspector.java", "commitBeforeChange": "f9fe1a9b0c0422b26e26b94edd9001801984e770", "commitAfterChange": "04b4adb9d61a0a7a990979c19fd44e55accd860f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 4, "signatureBeforeChange": "         Object getVertex(  )", "signatureAfterChange": "     private void resetVertexData(  )", "diff": ["+    private void resetVertexData(  ) {", "+        Iterator iter = m_orderedVertices.iterator(  );", "+", "+        while( iter.hasNext(  ) ) {", "+            VertexData data = (VertexData) iter.next(  );", "+            data.m_discovered     = false;", "+            data.m_finished       = false;", "+        }", "+    }", "-         */", "-        Object getVertex(  ) {", "-            return m_vertex;", "-        }"]}]}