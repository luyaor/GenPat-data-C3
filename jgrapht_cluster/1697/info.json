{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41d8812dac5a0868bde2eef2767bea06", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1176480aa3a124d71dcb4e90906a91a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/RingGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+        Graph<V,E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String,V> resultMap)", "-        LinearGraphGenerator linearGenerator =", "-            new LinearGraphGenerator(m_size);", "-        Map privateMap = new HashMap();", "+        LinearGraphGenerator<V,E> linearGenerator =", "+            new LinearGraphGenerator<V,E>(m_size);", "+        Map<String,V> privateMap = new HashMap<String,V>();", "-        Object startVertex = privateMap.get(LinearGraphGenerator.START_VERTEX);", "-        Object endVertex = privateMap.get(LinearGraphGenerator.END_VERTEX);", "+        V startVertex = privateMap.get(LinearGraphGenerator.START_VERTEX);", "+        V endVertex = privateMap.get(LinearGraphGenerator.END_VERTEX);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb6f812cb5d16b53ed2e97e5d6a6173d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphSquare.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      private void addEdgesStartingAt(         final Graph g,         final Object v,         final Object u,         boolean createLoops)", "signatureAfterChange": "      private void addEdgesStartingAt(         final Graph<V,E> g,         final V v,         final V u,         boolean createLoops)", "diff": ["-        final Graph g,", "-        final Object v,", "-        final Object u,", "+        final Graph<V,E> g,", "+        final V v,", "+        final V u,", "-        final List adjVertices = GraphHelper.neighborListOf(g, u);", "+        final List<V> adjVertices = GraphHelper.neighborListOf(g, u);", "-            final Object w = adjVertices.get(i);", "+            final V w = adjVertices.get(i);"]}]}