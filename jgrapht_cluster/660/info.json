{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "802875a19ce6123bb8ea381bb7ed277c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173118bfb9738c9af129f35bb4075521", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphismInspector.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public Iterator<IsomorphicGraphMapping<V,E>> getMappings();", "signatureAfterChange": "      public Iterator<GraphMapping<V,E>> getMappings();", "diff": ["-    public Iterator<IsomorphicGraphMapping<V,E>> getMappings();", "+    public Iterator<GraphMapping<V,E>> getMappings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c59a79881d3fa04f37eb0e5b24639fe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     @Test     public void testRandomGraphs()", "signatureAfterChange": "     @Test     public void testRandomGraphs()", "diff": ["-            for (Iterator<IsomorphicGraphMapping<Integer, DefaultEdge>>", "+            for (Iterator<GraphMapping<Integer, DefaultEdge>>"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "403e4b04d24bcc9a6c956422a580784d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/SubgraphIsomorphismTestUtils.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static boolean allMatchingsCorrect(                     VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf2,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "signatureAfterChange": "      public static boolean allMatchingsCorrect(                     VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf2,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "diff": ["-        for (Iterator<IsomorphicGraphMapping<Integer, DefaultEdge>> mappings =", "+        for (Iterator<GraphMapping<Integer, DefaultEdge>> mappings ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9921f36d74e8bd9c9095543d5206de3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2AbstractIsomorphismInspector.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public boolean isomorphismExists()", "signatureAfterChange": "      @Override     public boolean isomorphismExists()", "diff": ["-        Iterator<IsomorphicGraphMapping<V,E>> iter = getMappings();", "+        Iterator<GraphMapping<V,E>> iter = getMappings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15f8c24a6a40ce01a2428fe23da5b49", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/VF2AbstractIsomorphismInspector.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "       @Override     public abstract Iterator<IsomorphicGraphMapping<V, E>> getMappings();", "signatureAfterChange": "       @Override     public abstract Iterator<GraphMapping<V, E>> getMappings();", "diff": ["-    public abstract Iterator<IsomorphicGraphMapping<V, E>> getMappings();", "+    public abstract Iterator<GraphMapping<V, E>> getMappings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74fc6daf312c44db39e16c3fb3aba58", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/SubgraphIsomorphismTestUtils.java", "commitBeforeChange": "8fb981eca094848a4fb36fb4dbaab5b3253773a2", "commitAfterChange": "f9e071f0cb75606ceee913c4a3954f636a4f4c80", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "       public static boolean isCorrectMatching(                     IsomorphicGraphMapping<Integer, DefaultEdge> rel,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "signatureAfterChange": "       public static boolean isCorrectMatching(                     GraphMapping<Integer, DefaultEdge> rel,                     DirectedGraph<Integer, DefaultEdge> g1,                     DirectedGraph<Integer, DefaultEdge> g2)", "diff": ["-                    IsomorphicGraphMapping<Integer, DefaultEdge> rel,", "+                    GraphMapping<Integer, DefaultEdge> rel,"]}]}