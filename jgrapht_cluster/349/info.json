{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6f5bb7fab32c01b48210fa1dc39d4ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed7848c162cf8e591129afadbac7a98", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+        Graph<V,E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String,V> resultMap)", "-        Map orderToVertexMap = new HashMap(this.numOfVertexes);", "+        Map<Integer,V> orderToVertexMap = new HashMap<Integer,V>(this.numOfVertexes);", "-            Object currVertex = vertexFactory.createVertex();", "+            V currVertex = vertexFactory.createVertex();", "-        EdgeTopologyFactory edgesFactory =", "+        EdgeTopologyFactory<V,E> edgesFactory ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6314f73eb6293e5b93ffcacae249e05", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/LinearGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+        Graph<V,E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String,V> resultMap)", "-        Object lastVertex = null;", "+        V lastVertex = null;", "-            Object newVertex = vertexFactory.createVertex();", "+            V newVertex = vertexFactory.createVertex();"]}]}