{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ec348e43a001265270bbb87c7412ec6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4521c5221afe819e268b75c63e34601", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testShortestPath()", "signatureAfterChange": "     public void testShortestPath()", "diff": ["-        WeightedGraph g = create();", "-        ShortestPathAlgorithm alg = new DijkstraShortestPathAlgorithm(g);", "-        WeightedGraph pathTree = alg.shortestPathTree(V1);", "+        WeightedGraph<String,DirectedEdge<String>> g = create();", "+        ShortestPathAlgorithm<String,DirectedEdge<String>>", "+        \talg = new DijkstraShortestPathAlgorithm<String,DirectedEdge<String>>(g);", "+        WeightedGraph<String,DirectedEdge<String>> pathTree = alg.shortestPathTree(V1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd363a69a481907523d0f6dded2232e4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testShortestPath()", "signatureAfterChange": "     public void testShortestPath()", "diff": ["-        WeightedGraph<String,DirectedEdge<String>> g = create();", "-        ShortestPathAlgorithm<String,DirectedEdge<String>>", "-            alg = new DijkstraShortestPathAlgorithm<String,DirectedEdge<String>>(g);", "-        WeightedGraph<String,DirectedEdge<String>> pathTree = alg.shortestPathTree(V1);", "+        WeightedGraph<String,DefaultEdge> g = create();", "+        ShortestPathAlgorithm<String,DefaultEdge>", "+            alg = new DijkstraShortestPathAlgorithm<String,DefaultEdge>(g);", "+        WeightedGraph<String,DefaultEdge> pathTree = alg.shortestPathTree(V1);"]}]}