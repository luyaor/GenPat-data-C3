{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6540b01b4cda47ab9ca7bd1e706333f1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "326ce9953d970bf5e21a85c9d3b38d67", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "0f84a6eb9a8e82fa212601f7200f9180f90ead45", "commitAfterChange": "896719167544e845d0c05f24d4c6f4e7be2d6624", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 11, "signatureBeforeChange": "          private void updateIndent()", "signatureAfterChange": "     private void showLog(String method, String str)", "diff": ["-    ", "-    private void updateIndent() {", "-        indent = \"\";", "-        for (int i = 0; i < coreLen; i++)", "-            indent += \"  \";", "+     */", "+    private void showLog(String method, String str)    {", "+        if (!DEBUG)", "+            return;", "+        ", "+        char[] indent = new char[2 * coreLen];", "+        Arrays.fill(indent, ' ');", "+        System.out.println((new String(indent)) + method + \"> \" + str);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c25a62f1bbb258ce9a0c8f86051c1f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "e38751763cc06794af1d537c45ae97f02f0d0379", "commitAfterChange": "9bdf3beaee95f9c7f5568983e723fe15aeedb142", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static <V, E> E addEdgeWithVertices(         Graph<V, E> g,         V sourceVertex,         V targetVertex,         double weight)", "signatureAfterChange": "     public static <V, E> boolean addEdgeWithVertices(         Graph<V, E> targetGraph,         Graph<V, E> sourceGraph,         E edge)", "diff": ["+     */", "+    public static <V, E> boolean addEdgeWithVertices(", "+        Graph<V, E> targetGraph,", "+        Graph<V, E> sourceGraph,", "+        E edge)", "+    {", "+        V sourceVertex = sourceGraph.getEdgeSource(edge);", "+        V targetVertex = sourceGraph.getEdgeTarget(edge);", "+        ", "+        targetGraph.addVertex(sourceVertex);", "+        targetGraph.addVertex(targetVertex);", "+", "+        return targetGraph.addEdge(sourceVertex, targetVertex, edge);", "+    }"]}]}