{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6ae102cf511e467b7005ea2ae9483d7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a4cb5bac8998d69e87c2a4d6bccc4b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "4efd29b14c87e09927591be73abc578e10bee63c", "commitAfterChange": "88cb62bfa22e40bbfbee26239b8d2f78fd3b5d5c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean equals(Object obj)", "signatureAfterChange": "     public boolean equals(Object obj)", "diff": ["+", "-            boolean found = false;", "-            for (E ee: g.getAllEdges(source, target)) {", "-                if (e == ee || e.equals(ee)) {", "-                    if (e != ee && Math.abs(getEdgeWeight(e) ", "-                        - g.getEdgeWeight(ee)) > 10e-7)", "-                    {", "-                        return false;", "-                    }", "-                    found = true;", "-                    break;", "-                }", "+            if (!g.containsEdge(e)) {", "+                return false;", "-            if (!found) {", "+            if (!g.getEdgeSource(e).equals(source) ", "+                || !g.getEdgeTarget(e).equals(target)) ", "+            {", "+                return false;", "+            }", "+", "+            if (Math.abs(getEdgeWeight(e) - g.getEdgeWeight(e)) > 10e-7) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4094b8b042b41ab85b7d7e5351cc6a2f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "c6d16a85d0c70dcdddd76fb3dff4d37d8c853806", "commitAfterChange": "dd89e42fc781adefe1438e7e9adcf43642b9086c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private void label(VertexExtension source, VertexExtension sink)", "signatureAfterChange": "      private void label(VertexExtension source, VertexExtension sink)", "diff": ["-                    if (LABEL_PRUNE_ENABLED) {", "-                        if (!labeling.containsKey(vx.label))", "-                            labeling.put(vx.label, 1);", "-                        else", "-                            labeling.put(vx.label, labeling.get(vx.label) + 1);", "-                    }", "+                    // NOTA BENE:", "+                    //  This is part of label-pruning mechanic which", "+                    //  targets to diminish all 'useless' relabels during", "+                    //  \"flow-back\" phase of the algorithm pushing excess", "+                    //  flow back to the source", "+", "+                    if (!labeling.containsKey(vx.label))", "+                        labeling.put(vx.label, 1);", "+                    else", "+                        labeling.put(vx.label, labeling.get(vx.label) + 1);"]}]}