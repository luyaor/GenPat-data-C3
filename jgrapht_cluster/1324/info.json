{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9bf10caadb66a90eeef66d8263c4d71", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c1e3805d2d8a0452cb7cb75c1aa1d3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathCostTest.java", "commitBeforeChange": "94e0b9cdbd464a6b60ddbb8cd6d473a32e102eaf", "commitAfterChange": "90d794caa7b37ed092890eb859473902af3157bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testKShortestPathCosts(Graph graph)", "signatureAfterChange": "      private void verifyShortestPathsInIncreasingOrderOfWeight(Graph graph)", "diff": ["-    public void testKShortestPathCosts(Graph graph)", "+", "+    private void verifyShortestPathsInIncreasingOrderOfWeight(Graph graph)", "+                    if (pathElements == null) {", "+                        // no path exists between the start vertex and the end", "+                        // vertex", "+                        continue;", "+                    }", "-                    double lastCost = pathElement.getWeight();", "+                    double lastWeight = pathElement.getWeight();", "-                        double cost = pathElement.getWeight();", "-                        assertTrue(lastCost <= cost);", "-                        lastCost = cost;", "+                        double weight = pathElement.getWeight();", "+                        assertTrue(lastWeight <= weight);", "+                        lastWeight = weight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9380bfe420c8dcad133a062e73c5f58b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "716bafb74d538759e472bd0e9a79ac62a1cf78ee", "commitAfterChange": "912a63c075de2a9a345cd6355dea9b455edae9ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,         Map defaultEdgeAttributes )", "signatureAfterChange": "     public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,         Map defaultEdgeAttributes, CellFactory cellFactory )", "diff": ["+     */", "+    public JGraphModelAdapter( Graph g, Map defaultVertexAttributes,", "+        Map defaultEdgeAttributes, CellFactory cellFactory ) {", "+        }", "+", "+        if( cellFactory == null ) {", "+            m_cellFactory = new DefaultCellFactory(  );", "+        }", "+        else {", "+            m_cellFactory = cellFactory;"]}]}