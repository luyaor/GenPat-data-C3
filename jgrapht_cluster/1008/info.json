{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "135f683fdb3b4626af7c01e2135acc93", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eba258e6af29dc1295d9156bc7d788a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/MinSourceSinkCutTest.java", "commitBeforeChange": "363b3697f0eb7c11af74750e9c6cd908c655d522", "commitAfterChange": "1af3680aabe82fe8cc06fcbf77e0d17395b42d8d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void testRealGraph2()", "signatureAfterChange": " \tpublic void testRealGraph2()", "diff": ["-\t\tSystem.out.println(\"Weight: \"+mc.getCutWeight());", "-\t\tSystem.out.println(\"Source partition: \"+mc.getSourcePartition());", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a0484575e66bf6657894e0dd46101c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "commitAfterChange": "813f75565241c6a2b1109a8415fe2c264ac5efee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      protected Map<E, Double> composeFlow()", "signatureAfterChange": "      protected Map<E, Double> composeFlow()", "diff": ["-", "-            // _DBG", "-            System.out.println(e + \" F/CAP \" + ex.flow + \"/\" + ex.capacity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c415dc89ed47760cad198d68e64866e9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTestBase.java", "commitBeforeChange": "9782c283bdcce76cc2595665a8632849f2558e9e", "commitAfterChange": "92d03807c71690a78bba118dfc95207663fee68a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void testRandomGraph()", "signatureAfterChange": "      public void testRandomGraph()", "diff": ["-        System.out.println(\"\\n=== GENERATED ===\\n\");", "-", "-        check(maxFlow, source, sink, network);", "-", "-        // _DBG", "-        System.out.println(rgg.getRandomSeed());", "-", "-        // _DBG", "-        //dumpGraph(network, source, sink);", "+        if (false) {", "+            check(maxFlow, source, sink, network);", "+        }"]}]}