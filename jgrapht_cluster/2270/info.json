{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "081c9b2e3ecdebb6d44a11daf82e5537", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca339ab642b259df05b2fc1e8dd9f1f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "df6534447cdde73776a245095fd843a922cc109b", "commitAfterChange": "c4deb6f8f2405c66e906c126a4ee98558987e853", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public Object clone(  )", "signatureAfterChange": "     public Object clone(  )", "diff": ["-            newGraph.m_vertexMap            = new HashMap(  );", "-            newGraph.m_edgeSet              = new HashSet(  );", "-            newGraph.m_factoryEdgeClass     = this.m_factoryEdgeClass;", "-            newGraph.m_edgeFactory          = this.m_edgeFactory;", "+            newGraph.m_vertexMap                 = new HashMap(  );", "+            newGraph.m_edgeSet                   = new HashSet(  );", "+            newGraph.m_factoryEdgeClass          = this.m_factoryEdgeClass;", "+            newGraph.m_edgeFactory               = this.m_edgeFactory;", "+            newGraph.m_unmodifiableEdgeSet       = null;", "+            newGraph.m_unmodifiableVertexSet     = null;", "+            newGraph.setSpecifics(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa39c3904973bf8381dcd91980e8cae7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "6245588ef354746c5c3ae9a477b956068a878121", "commitAfterChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphOrdering(Graph<V, E> graph,                          boolean orderByDegree,                          boolean cacheEdges)", "signatureAfterChange": "     public GraphOrdering(         Graph<V, E> graph,         boolean orderByDegree,         boolean cacheEdges)", "diff": ["-    public GraphOrdering(Graph<V, E> graph,", "-                         boolean orderByDegree,", "-                         boolean cacheEdges) {", "-        this.graph      = graph;", "+    public GraphOrdering(", "+        Graph<V, E> graph,", "+        boolean orderByDegree,", "+        boolean cacheEdges)", "+    {", "+        this.graph = graph;", "-        if (orderByDegree)", "-            java.util.Collections.sort(vertexSet,", "-                            new GeneralVertexDegreeComparator<V>(graph));", "+        if (orderByDegree) {", "+            java.util.Collections.sort(", "+                vertexSet,", "+                new GeneralVertexDegreeComparator<V>(graph));", "+        }", "-        vertexCount      = vertexSet.size();", "+        vertexCount = vertexSet.size();"]}]}