{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49e0c4ce09de6f49b4dfd33bf32d723c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a958e75356e5a974d5047a50044860", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "commitAfterChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\"     static <V, E> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "signatureAfterChange": "     static <V, E> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "diff": ["-    @SuppressWarnings(\"unchecked\")    // TODO hb 27-Nov-05: See FIXME below", "-            // TODO hb 27-Nov-05: I don't understand, yet, how to cast this nicely", "-            return new DirectedSpecifics((DirectedGraph) g);", "+            return new DirectedSpecifics((DirectedGraph<V, E>) g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54da9c07e9c812000d609319c08dd4ec", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/Graphs.java", "commitBeforeChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "commitAfterChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     public static <V, E> UndirectedGraph<V, E> undirectedGraph(         Graph<V, E> g)", "signatureAfterChange": "     public static <V, E> UndirectedGraph<V, E> undirectedGraph(         Graph<V, E> g)", "diff": ["-    @SuppressWarnings(\"unchecked\")", "-            return new AsUndirectedGraph<V,E>((DirectedGraph)g);", "+            return new AsUndirectedGraph<V,E>((DirectedGraph<V,E>)g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b583263d2db6dd74943a4cd0f515bec7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "e3d152c903d64a55a394899016d3b983c6acef7f", "commitAfterChange": "07571b88304723826e2edaac1a71e187c5b1dbe3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static <V, E extends Edge<V>> List findPathBetween(Graph<V, E> graph,         V startVertex,         V endVertex)", "signatureAfterChange": "     public static <V, E extends Edge<V>> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "diff": ["-    public static <V, E extends Edge<V>> List findPathBetween(Graph<V, E> graph,", "+    public static <V, E extends Edge<V>> List<E> findPathBetween(", "+        Graph<V, E> graph,", "-                endVertex,", "-                Double.POSITIVE_INFINITY);", "+                endVertex);"]}]}