{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "681b78561d4f30095f6185e97b539806", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58d7e174c063909528aa5e458bdb7b44", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "a736ef4553804c704f72792dd561ec69fbdbc33d", "commitAfterChange": "4abc8e28d7e02016cce20e56944f19197c3e413d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultListenableGraph( Graph g )", "signatureAfterChange": "     public DefaultListenableGraph( Graph g )", "diff": ["+", "+        // the following restriction could be relaxed in the future.", "+        if( g instanceof ListenableGraph ) {", "+            throw new IllegalArgumentException( ", "+                \"base graph cannot be listenable\" );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d7f0dc1af51d0831890e16c836f46b3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public DefaultListenableGraph( Graph g )", "signatureAfterChange": "     public DefaultListenableGraph( Graph g )", "diff": ["-        super( g );", "+        this( g, false );", "+    }", "-        // the following restriction could be relaxed in the future."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b812f6f4dba8ce11512ab00337c1ba8c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "7bbdcf37663f36f80ef1f366555eafdbd618736a", "commitAfterChange": "9a4730fe923a200a9ce0f4cf2dd7459ded43a3cc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected static GraphIsomorphismInspector     createAppropriateConcreteInspector(         int graphType,         Graph graph1,         Graph graph2,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "     protected static GraphIsomorphismInspector     createAppropriateConcreteInspector(         int graphType,         Graph graph1,         Graph graph2,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-        case GRAPH_TYPE_REGULAR:", "+        case GRAPH_TYPE_ARBITRARY:", "-        // REVIEW jvs 5-Sept-2005:  Why is this commented out?  Shouldn't", "-        // it be returning something instead of null?", "-        // currentInspector = new", "-        // EquivalenceIsomorphismInspector(graph1,graph2,vertexChecker,edgeChecker);", "+        \tthrow new IllegalArgumentException(\"The type was not one of the supported types.\");"]}]}