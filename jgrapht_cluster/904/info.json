{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b9c161624e936fb988e0a3d6f07d622", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30a90d8bf9690cb55b57b4d97be45140", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "9d26a72317763d88cc7e757c947354e046d22725", "commitAfterChange": "f50fd6b0f3c434b5c61c7c28fc67bb2b87beea0b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public DirectedWeightedGraph createSubgraph( DirectedWeightedGraph base,         Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public DirectedWeightedGraph createSubgraph( DirectedWeightedGraph base,         Set vertexSubset, Set edgeSubset )", "diff": ["-        return new SubgraphDirectedWeighted( base, vertexSubset, edgeSubset );", "+        if( base instanceof ListenableGraph ) {", "+            return new SubgraphDirectedWeighted( base, vertexSubset, edgeSubset );", "+        }", "+        else {", "+            throw new IllegalArgumentException( BASE_GRAPH_MUST_BE_LISTENABLE );", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e14a72b7c1964ef6de2782a0daf68d8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/GraphFactory.java", "commitBeforeChange": "9d26a72317763d88cc7e757c947354e046d22725", "commitAfterChange": "f50fd6b0f3c434b5c61c7c28fc67bb2b87beea0b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public UndirectedWeightedGraph createSubgraph(          UndirectedWeightedGraph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public UndirectedWeightedGraph createSubgraph(          UndirectedWeightedGraph base, Set vertexSubset, Set edgeSubset )", "diff": ["-        return new SubgraphUndirectedWeighted( base, vertexSubset, edgeSubset );", "+        if( base instanceof ListenableGraph ) {", "+            return new SubgraphUndirectedWeighted( base, vertexSubset,", "+                edgeSubset );", "+        }", "+        else {", "+            throw new IllegalArgumentException( BASE_GRAPH_MUST_BE_LISTENABLE );", "+        }"]}]}