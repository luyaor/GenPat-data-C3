{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f3edb49b649eae2c9d4301bd4d8521c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13507424189e81740048ac04d7337a2c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        Collection edgeSet = new ArrayList();", "+    \tCollection<UndirectedEdge<V>> edgeSet = new ArrayList<UndirectedEdge<V>>();", "-        Iterator<E> iter = edgeSet().iterator();", "-", "-        while (iter.hasNext()) {", "-            Edge edge = iter.next();", "-            edgeSet.add(new UndirectedEdge(edge.getSource(),", "-                    edge.getTarget()));", "+        for( E edge : edgeSet() ) {", "+            edgeSet.add(new UndirectedEdge<V>(edge.getSource(),edge.getTarget()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a58ca8fe9f465079cd358529ab5f7ff7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AsUndirectedGraph.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public String toString()", "signatureAfterChange": "     public String toString()", "diff": ["-        // take care to print edges using the undirected convention", "-        Collection<UndirectedEdge<V>> edgeSet = new ArrayList<UndirectedEdge<V>>();", "-", "-        for( E edge : edgeSet() ) {", "-            edgeSet.add(new UndirectedEdge<V>(edge.getSource(),edge.getTarget()));", "-        }", "-", "-        return super.toStringFromSets(vertexSet(), edgeSet);", "+        return super.toStringFromSets(vertexSet(), edgeSet(), false);"]}]}