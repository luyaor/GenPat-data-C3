{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3965fc9cd032e115d721a9430a283a6c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1487037753c17b161c1eb6281a956e8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "7311f3ddb2ec71dc0af1e1a2446d2101c7876729", "commitAfterChange": "54838b87558eb9d3e44052fabd8af33ef9bf26b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testEdgeCasesSimpleGraph()", "signatureAfterChange": "     @Test     public void testEdgeCasesSimpleGraph()", "diff": ["-        VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vfs6b =", "-            new VF2SubgraphIsomorphismInspector<Integer, DefaultEdge>(sg3, sg6);", "-", "-        assertEquals(\"[1=5 2=6 3=7 4=~~]\",", "-                        vfs6b.getMappings().next().toString());", "+//        VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vfs6b =", "+//            new VF2SubgraphIsomorphismInspector<Integer, DefaultEdge>(sg3, sg6);", "+//", "+//        assertEquals(\"[1=5 2=6 3=7 4=~~]\",", "+//                        vfs6b.getMappings().next().toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8da0c62447a0e1f36a214e5fe5d8649", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/isomorphism/VF2SubgraphIsomorphismInspectorTest.java", "commitBeforeChange": "7311f3ddb2ec71dc0af1e1a2446d2101c7876729", "commitAfterChange": "54838b87558eb9d3e44052fabd8af33ef9bf26b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testEdgeCasesDirectedGraph()", "signatureAfterChange": "     @Test     public void testEdgeCasesDirectedGraph()", "diff": ["-        VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf6b =", "-            new VF2SubgraphIsomorphismInspector<Integer, DefaultEdge>(g3, g6);", "-", "-        assertEquals(\"[1=5 2=6 3=7 4=~~]\",", "-                        vf6b.getMappings().next().toString());", "+//        VF2SubgraphIsomorphismInspector<Integer, DefaultEdge> vf6b =", "+//            new VF2SubgraphIsomorphismInspector<Integer, DefaultEdge>(g3, g6);", "+//", "+//        assertEquals(\"[1=5 2=6 3=7 4=~~]\",", "+//                        vf6b.getMappings().next().toString());"]}]}