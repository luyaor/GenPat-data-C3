{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e038eacd355564b77e05097290b5bbb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bf67a713a46429cc928c765a171aa2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/dag/DirectedAcyclicGraph.java", "commitBeforeChange": "adaca642347b80042a0673a76d5c684c0cd29f4a", "commitAfterChange": "bfd68dc5cac3c6660f66170c69193fd7d58dd38b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addDagEdge(V fromVertex, V toVertex, E e)         throws CycleFoundException", "signatureAfterChange": "     public boolean addDagEdge(V fromVertex, V toVertex, E e)         throws CycleFoundException", "diff": ["-        Integer lb = topoOrderMap.getTopologicalIndex(toVertex);", "+        updateDag(fromVertex, toVertex);", "+", "+        return super.addEdge(fromVertex, toVertex, e);", "+    }", "-        if ((lb == null) || (ub == null)) {", "-        return super.addEdge(fromVertex, toVertex, e);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe4caf9a21d8fdbda39c5ef7a233116", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/KShortestPathCostTest.java", "commitBeforeChange": "1611557db2c7b6fff2b3d11bdf41aa9bc43c1486", "commitAfterChange": "ce0f78b94ba0a535e51aa5dfcfb3c56c6c67d881", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testKShortestPathCompleteGraph4()", "signatureAfterChange": "      public void testKShortestPathCompleteGraph4()", "diff": ["+", "+        assertEquals(\"[[(vS : v1), (v1 : v3)], [(vS : v2), (v2 : v3)],\"", "+            + \" [(vS : v2), (v1 : v2), (v1 : v3)], \"", "+            + \"[(vS : v1), (v1 : v2), (v2 : v3)], \"", "+            + \"[(vS : v3)]]\", pathElements.toString());", "+        "]}]}