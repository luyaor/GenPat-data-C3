{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "699bb64f9cba82c9e430380c34f77edf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0508ab2a388185f40a8df159da7f767a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/RankingPathElementList.java", "commitBeforeChange": "94e0b9cdbd464a6b60ddbb8cd6d473a32e102eaf", "commitAfterChange": "90d794caa7b37ed092890eb859473902af3157bc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     RankingPathElementList(         Graph<V, E> graph,         int maxSize,         RankingPathElementList<V, E> elementList,         E edge)", "signatureAfterChange": "     RankingPathElementList(         Graph<V, E> graph,         int maxSize,         RankingPathElementList<V, E> elementList,         E edge)", "diff": ["+        this(graph, maxSize, elementList, edge, null);", "+", "+        assert (!this.pathElements.isEmpty());", "+    }", "-            if (this.pathElements.size() <= (this.maxSize - 1)) {", "-", "-        assert (!this.pathElements.isEmpty());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f49a9db9309591ed6ad821c02a6b38c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "c105c53aeb7d2471227c61d2a14c86cbc14dfc04", "commitAfterChange": "41540d6069074864616a1b8145b5f82327c8ca30", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private void verifyReversal(         DirectedGraph<String, DefaultEdge> g,         DirectedGraph<String, DefaultEdge> r,         DefaultEdge e)", "signatureAfterChange": "      private void verifyReversal(         DirectedGraph<String, DefaultEdge> g,         DirectedGraph<String, DefaultEdge> r,         DefaultEdge e)", "diff": ["+        Set<DefaultEdge> s = r.getAllEdges(v1, v2);", "+        assertEquals(0, s.size());", "+", "+        s = r.getAllEdges(v2, v1);", "+        assertEquals(1, s.size());", "+        assertSame(e, s.iterator().next());", "+"]}]}