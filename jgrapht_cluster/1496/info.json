{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62457f21d9b9b9ed877361443dee2435", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5962fd9deeb82f69257bddb188138500", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "5e0a623da07f9a88365fbfbdcfe89366f3ec07c1", "commitAfterChange": "2bc963d635f1387003153797aed8f23b13ab7da1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void dagTest()", "signatureAfterChange": "      @Test     public void dagTest()", "diff": ["+\t// now all together in one call", "+\t", "+\tLcaRequestResponse<String> bg = new LcaRequestResponse<String>(\"b\", \"g\");", "+\tLcaRequestResponse<String> ed = new LcaRequestResponse<String>(\"e\", \"d\");", "+\tLcaRequestResponse<String> fd = new LcaRequestResponse<String>(\"f\", \"d\");", "+\tnew TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", bg, ed, fd);", "+\tAssert.assertEquals(\"b\",bg.getLca());", "+\tAssert.assertEquals(\"b\",ed.getLca());", "+\tAssert.assertEquals(\"d\",fd.getLca());", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e01d9c1655d4066001a9655747b2b501", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/ext/DOTExporterTest.java", "commitBeforeChange": "58ffe75d7011b97e5d82e9b962f083efeda5131c", "commitAfterChange": "e161419b51eb823c1e9daf9244639d8ff587282c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testUndirected()", "signatureAfterChange": "      public void testUndirected()", "diff": ["+        ComponentAttributeProvider<String> vertexAttributeProvider =", "+            new ComponentAttributeProvider<String>() ", "+            {", "+                public Map<String, String> getComponentAttributes(String v)", "+                {", "+                    Map<String, String> map =", "+                        new LinkedHashMap<String, String>();", "+                    if (v.equals(V1)) {", "+                        map.put(\"label\", \"a\");", "+                    } else if (v.equals(V2)) {", "+                        map.put(\"x\", \"y\");", "+                    } else {", "+                        map = null;", "+                    }", "+                    return map;", "+                }", "+            };", "+        DOTExporter<String, DefaultEdge> exporter =", "+            new DOTExporter<String, DefaultEdge>(", "+                new IntegerNameProvider<String>(),", "+                null,", "+                null,", "+                vertexAttributeProvider,", "+                null);"]}]}