{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3ede035c0622b7018578b1287134e70", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c0d8e85db907cb22cc9b0397643395", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/GenericGraphsTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testLegalInsertFooGraph()", "signatureAfterChange": "      public void testLegalInsertFooGraph()", "diff": ["-        try {", "-            FooVertex v1 = new FooVertex();", "-            FooVertex v2 = new FooVertex();", "-            BarVertex vb1 = new BarVertex();", "-            BarVertex vb2 = new BarVertex();", "-            fooFooGraph.addVertex(v1);", "-            fooFooGraph.addVertex(v2);", "-            fooFooGraph.addVertex(vb1);", "-            fooFooGraph.addVertex(vb2);", "-            fooFooGraph.addEdge(v1, v2);", "-            fooFooGraph.addEdge(vb1, vb2);", "-            fooFooGraph.addEdge(v1, vb2);", "-            fooFooGraph.addEdge( new BarEdge<FooVertex>(v1,v2) );", "-            fooFooGraph.addEdge( new BarEdge<FooVertex>(v1,vb2) );", "-            //FIXME hb 051124: Basically, I think this should work, but it doesn't :-(", "-            //FIXME hb 051124: fooFooGraph.addEdge( new BarEdge<BarVertex>(vb1, vb2) );", "-        } catch (Throwable e) {", "-            assertFalse();", "-        }", "-        assertTrue();", "+        FooVertex v1 = new FooVertex();", "+        FooVertex v2 = new FooVertex();", "+        BarVertex vb1 = new BarVertex();", "+        BarVertex vb2 = new BarVertex();", "+        fooFooGraph.addVertex(v1);", "+        fooFooGraph.addVertex(v2);", "+        fooFooGraph.addVertex(vb1);", "+        fooFooGraph.addVertex(vb2);", "+        fooFooGraph.addEdge(v1, v2);", "+        fooFooGraph.addEdge(vb1, vb2);", "+        fooFooGraph.addEdge(v1, vb2);", "+        fooFooGraph.addEdge(v1, v2, new BarEdge() );", "+        fooFooGraph.addEdge(v1, vb2, new BarEdge() );", "+        fooFooGraph.addEdge(vb1, vb2, new BarEdge() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed569f8d5ffd499723671076f88ab72", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BellmanFordPathElement.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     BellmanFordPathElement(         BellmanFordPathElement<V,E> original)", "diff": ["+     */", "+    BellmanFordPathElement(", "+        BellmanFordPathElement<V,E> original)", "+    {", "+        super(original);", "+        this.cost = original.cost;", "+    }", "-     */", "-    public Object clone() {", "-        BellmanFordPathElement clonedObject = null;", "-        try {", "-            clonedObject = (BellmanFordPathElement) super.clone();", "-        } catch (CloneNotSupportedException e) {", "-        }", "-        return clonedObject;"]}]}