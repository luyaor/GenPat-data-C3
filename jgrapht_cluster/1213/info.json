{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be7ba6a73870c1e7c5f9493acfe27839", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c76c424a5189e146e938af5fb437896", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "4fdf29e8e01612a5ae4f7bfb3db5d9d1a27f8bc6", "commitAfterChange": "b417c7bfb816527977f131839428e669645f0a3a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph create(  )", "signatureAfterChange": "     public Pseudograph create(  )", "diff": ["-        g.addVertex( m_v1 );", "+        g.addVertex( V1 );", "-        g.addVertex( m_v2 );", "+        g.addVertex( V2 );", "-        g.addVertex( m_v3 );", "+        g.addVertex( V3 );", "-        g.addVertex( m_v4 );", "+        g.addVertex( V4 );", "-        m_e1 = g.addEdge( m_v1, m_v2 );", "+        m_e1 = g.addEdge( V1, V2 );", "-        m_e2 = g.addEdge( m_v2, m_v3 );", "+        m_e2 = g.addEdge( V2, V3 );", "-        m_e3 = g.addEdge( m_v3, m_v1 );", "+        m_e3 = g.addEdge( V3, V1 );", "-        m_e3_b = g.addEdge( m_v3, m_v1 );", "+        m_e3_b = g.addEdge( V3, V1 );", "-        m_u = g.addEdge( m_v1, m_v1 );", "+        m_u = g.addEdge( V1, V1 );", "-        m_u = g.addEdge( m_v1, m_v1 );", "+        m_u = g.addEdge( V1, V1 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "758f4c9a7c82ad3996350cd5d50c2ef4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "031459d6e58bfab7227c1f29575f466935e4a228", "commitAfterChange": "4f70257bd051e3e96df9996dad40065743a630ec", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testComplexDag()", "signatureAfterChange": "           @Test     public void testOneNode()", "diff": ["+    ", "-    public void testComplexDag() {", "+    public void testOneNode() {", "-\tg.addVertex(\"b\");", "-\tg.addVertex(\"c\");", "-\tg.addVertex(\"d\");", "-\tg.addVertex(\"e\");", "-\tg.addVertex(\"f\");", "-\tg.addVertex(\"g\");", "-\tg.addEdge(\"a\", \"b\");", "-\tg.addEdge(\"b\", \"c\");", "-\tg.addEdge(\"c\", \"d\");", "-\tg.addEdge(\"d\", \"f\");", "-\tg.addEdge(\"b\", \"e\");", "-\tg.addEdge(\"e\", \"f\");", "-\tg.addEdge(\"f\", \"g\");", "-\tg.addEdge(\"a\", \"f\");", "-", "-\tAssert.assertEquals(\"b\", new TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", \"e\", \"c\"));", "+\tAssert.assertEquals(\"a\", new TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", \"a\", \"a\"));"]}]}