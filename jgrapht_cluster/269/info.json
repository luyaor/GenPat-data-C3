{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ab851ed75798cc5168d7cbf11a51727", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d2e192a4e17ee2993732f71a2965a29", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "commitAfterChange": "5b8b2def419b220aa57ca346f586e7cc6eacdd0e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private List<String> skipComments()", "signatureAfterChange": "      private String[] skipComments()", "diff": ["-    private List<String> skipComments()", "+    private String[] skipComments()", "+        String[] cols = null;", "-            if (_in.ready()) {", "-                List<String> cols = split(_in.readLine());", "-                while (", "-                    cols.isEmpty()", "-                    || cols.get(0).equals(\"c\")", "-                    || cols.get(0).startsWith(\"%\"))", "-                {", "-                    cols = split(_in.readLine());", "-                }", "-                return cols;", "+            cols = split(_in.readLine());", "+            while (cols != null &&", "+                (cols.length == 0", "+                || cols[0].equals(\"c\")", "+                || cols[0].startsWith(\"%\")))", "+            {", "+                cols = split(_in.readLine());", "-        return null;", "+        return cols;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f40dc0dec4ebf5bbf5eb7079fcd06e61", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "47ce261ef10be427a6a84aeeebb0d71750a4e26b", "commitAfterChange": "5b8b2def419b220aa57ca346f586e7cc6eacdd0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "diff": ["-        List<String> cols = skipComments();", "+        String[] cols = skipComments();", "-            if (cols.get(0).equals(\"e\")) {", "-                target.addEdge(", "-                    resultMap.get(cols.get(1)),", "-                    resultMap.get(cols.get(2)));", "+            if (cols[0].equals(\"e\")) {", "+                E edge = target.addEdge(", "+                    resultMap.get(cols[1]),", "+                    resultMap.get(cols[2]));", "+                if (_isWeighted && edge != null) {", "+                    double weight = _defaultWeight;", "+                    if (cols.length > 3) {", "+                        weight = Double.parseDouble(cols[3]);", "+                    }", "+                    ((WeightedGraph<V,E>)target).setEdgeWeight(edge, weight);", "+                }", "-        }", "-    }"]}]}