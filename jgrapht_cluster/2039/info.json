{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4ada00d6d48434456182270d59c3b1a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ac9333b107ec46771d7c5e772fd3ed", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "     public Set<E> removeAllEdges(V sourceVertex, V targetVertex)", "diff": ["-    public List<E> removeAllEdges(V sourceVertex, V targetVertex)", "+    public Set<E> removeAllEdges(V sourceVertex, V targetVertex)", "-        List<E> removed = getAllEdges(sourceVertex, targetVertex);", "+        Set<E> removed = getAllEdges(sourceVertex, targetVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3785638d5bb963c89eb09db5046afe73", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void setEdgeListFactory(EdgeListFactory<V,E> edgeListFactory)", "signatureAfterChange": "     public void setEdgeSetFactory(EdgeSetFactory<V,E> edgeListFactory)", "diff": ["-    public void setEdgeListFactory(EdgeListFactory<V,E> edgeListFactory)", "+    public void setEdgeSetFactory(EdgeSetFactory<V,E> edgeListFactory)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46263d21033f399572db300962525dcd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/util/ExtensionManager.java", "commitBeforeChange": "faecd2a1cf395d07d24e3aeae42190134681ff5f", "commitAfterChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private E createInstance() throws IllegalAccessException, InstantiationException", "signatureAfterChange": "      public E createInstance() throws IllegalAccessException, InstantiationException", "diff": ["-    private E createInstance() throws IllegalAccessException, InstantiationException {", "-        return extensionKlass.newInstance();", "+    public E createInstance() throws IllegalAccessException, InstantiationException {", "+        return extensionFactory.create();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5446e697b5a445b676fc3b5b1b34439e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/alg/VertexCoverAlgorithm.java", "commitBeforeChange": "a61c430f2ac7af9e4b0519b792fa90091fa0462d", "commitAfterChange": "3dfe7bd3c3baf72541946589aad20525c29233c0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Collection vertexCover();", "signatureAfterChange": "     public Set findCover(  );", "diff": ["-\t */", "-\tpublic Collection vertexCover();", "+     */", "+    public Set findCover(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640b6e19d985f4b69cc3509aaf7f45b5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "          UndirectedEdgeContainer(             EdgeListFactory<VV,EE> edgeListFactory,             VV vertex)", "signatureAfterChange": "          UndirectedEdgeContainer(             EdgeSetFactory<VV,EE> edgeListFactory,             VV vertex)", "diff": ["-            EdgeListFactory<VV,EE> edgeListFactory,", "+            EdgeSetFactory<VV,EE> edgeListFactory,", "-            m_vertexEdges = edgeListFactory.createEdgeList(vertex);", "+            m_vertexEdges = edgeListFactory.createEdgeSet(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c299240278a6639261f7aa25a1be3b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/EdgeSetFactory.java", "commitBeforeChange": "d3662f474a65a795d965d528c0e7af92d9da3fac", "commitAfterChange": "9f45d6e134dd9a93ac2f0d03c284dd8d78af05ac", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Set<E> createEdgeList(V vertex);", "signatureAfterChange": "     public Set<E> createEdgeSet(V vertex);", "diff": ["-    public Set<E> createEdgeList(V vertex);", "+    public Set<E> createEdgeSet(V vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "701047945a30cbd931d7511d084447ee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void createEdgeList(         Graph<V, E> graph,         ClosestFirstIterator<V, E> iter,         V endVertex)", "signatureAfterChange": "      private void createEdgeList(         Graph<V, E> graph,         ClosestFirstIterator<V, E> iter,         V endVertex)", "diff": ["-        m_edgeList = new ArrayList<E>();", "+        edgeList = new ArrayList<E>();", "-            m_edgeList.add(edge);", "+            edgeList.add(edge);", "-        Collections.reverse(m_edgeList);", "+        Collections.reverse(edgeList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7457618dc1d96ac61d8df5d0a4743051", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["-                m_pathLength = iter.getShortestPathLength(endVertex);", "+                pathLength = iter.getShortestPathLength(endVertex);", "-        m_edgeList = null;", "-        m_pathLength = Double.POSITIVE_INFINITY;", "+        edgeList = null;", "+        pathLength = Double.POSITIVE_INFINITY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e7b573ec792fa10f18f7c47d3b9753", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/ConnectivityInspector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      private void init()", "signatureAfterChange": "      private void init()", "diff": ["-        m_connectedSets = null;", "-        m_vertexToConnectedSet = new HashMap<V, Set<V>>();", "+        connectedSets = null;", "+        vertexToConnectedSet = new HashMap<V, Set<V>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774f1063b2693b986b0afaa6eceb91ef", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "d79ec6041acc8bda7fb9ae9661101612bc9e3f76", "commitAfterChange": "50de6e6216fe4b60dd232640e1cfa249a213c47c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected Object newSeenData( Object vertex, Edge edge )", "signatureAfterChange": "     private QueueEntry createSeenData( Object vertex, Edge edge )", "diff": ["-    protected Object newSeenData( Object vertex, Edge edge ) {", "-        double shortestPathLength;", "-        if( edge == null ) {", "-            shortestPathLength = 0;", "-        }", "-        else {", "-            shortestPathLength = calculatePathLength( vertex, edge );", "-        }", "-", "-        QueueEntry entry = new QueueEntry( shortestPathLength );", "-        entry.m_vertex               = vertex;", "-        entry.m_spanningTreeEdge     = edge;", "-", "-        return entry;", "+    private QueueEntry createSeenData( Object vertex, Edge edge ) {", "+        double shortestPathLength;", "+        if( edge == null ) {", "+            shortestPathLength = 0;", "+        }", "+        else {", "+            shortestPathLength = calculatePathLength( vertex, edge );", "+        QueueEntry entry = new QueueEntry( shortestPathLength );", "+        entry.m_vertex               = vertex;", "+        entry.m_spanningTreeEdge     = edge;", "+        return entry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f8afabf711877d07e5388a82a77203", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void addUnseenChildrenOf(V vertex)", "signatureAfterChange": "      private void addUnseenChildrenOf(V vertex)", "diff": ["-        for (E edge : m_specifics.edgesOf(vertex)) {", "+        for (E edge : specifics.edgesOf(vertex)) {", "-            V oppositeV = Graphs.getOppositeVertex(m_graph, edge, vertex);", "+            V oppositeV = Graphs.getOppositeVertex(graph, edge, vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d0f12b589a0375611664280e3e4370e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public List<E> createEdgeList(V vertex)", "signatureAfterChange": "         public Set<E> createEdgeList(V vertex)", "diff": ["-        public List<E> createEdgeList(V vertex)", "+        public Set<E> createEdgeList(V vertex)", "-            return new LinkedList<E>();", "+            return new LinkedHashSet<E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3abd75c68882cc33bf8ef4d75a3a5f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testGetAllEdges()", "signatureAfterChange": "     public void testGetAllEdges()", "diff": ["-        Set<DefaultEdge> loops = g.getAllEdges(m_v1, m_v1);", "+        Set<DefaultEdge> loops = g.getAllEdges(v1, v1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8031795427380503be412e6ed8a22dae", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "         public void vertexVisited( Object vertex )", "signatureAfterChange": "         public void vertexTraversed( VertexTraversalEvent e )", "diff": ["-        public void vertexVisited( Object vertex ) {", "+        public void vertexTraversed( VertexTraversalEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85189ad0523d95bf3eceb4b2bb6b3da5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private boolean isDangling(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     private boolean isDangling(org.jgraph.graph.Edge jEdge)", "diff": ["-            !m_cellToVertex.containsKey(jSource)", "-            || !m_cellToVertex.containsKey(jTarget);", "+            !cellToVertex.containsKey(jSource)", "+            || !cellToVertex.containsKey(jTarget);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b62d8e8392b8fbcdfc01d0841ebbb3c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "c2593980e98ffd3b0fd8713e1065362c591d271a", "commitAfterChange": "f67e9197d81c666622112a20391d80767fa4beb3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "                  @Override         public int compare(V v1, V v2)", "signatureAfterChange": "                  @Override         public int compare(V2 v1, V2 v2)", "diff": ["-        public int compare(V v1, V v2) {", "+        public int compare(V2 v1, V2 v2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a069a0607ddbb1837717178190ca4ce1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "          DirectedEdgeContainer(EdgeSetFactory<VV,EE> edgeListFactory, VV vertex)", "signatureAfterChange": "          DirectedEdgeContainer(EdgeSetFactory<VV,EE> edgeListFactory, VV vertex)", "diff": ["-            m_incoming = edgeListFactory.createEdgeSet(vertex);", "-            m_outgoing = edgeListFactory.createEdgeSet(vertex);", "+            incoming = edgeListFactory.createEdgeSet(vertex);", "+            outgoing = edgeListFactory.createEdgeSet(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ad5a2264a7ddab4a67ffac39e4a2d2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BlockCutpointGraph.java", "commitBeforeChange": "61dbb1af6c224986e7d12029f65eb7b3fce4e12a", "commitAfterChange": "5dfb58e41ca1578202f9d451a90e9b653291ef83", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private int dfsVisit(V s, V father)", "signatureAfterChange": "      private int dfsVisit(V s, V father)", "diff": ["-                this.stack.push(dfsEdge);", "+                this.stack.add(dfsEdge);", "-                this.stack.push(backwardEdge);", "+                this.stack.add(backwardEdge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a56ba4d819e85c5008dc0fd33fee4c8a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "57e939230ea19136d47df63da65726a97fe23cd4", "commitAfterChange": "e9c463453ddadd5715bdaf76f2e10c21244df81e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "         public void edgeVisited( Edge edge )", "signatureAfterChange": "         public void edgeTraversed( EdgeTraversalEvent e )", "diff": ["-        public void edgeVisited( Edge edge ) {", "+        public void edgeTraversed( EdgeTraversalEvent e ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd8ae666bad4026dc1dfcaa83420e55", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BlockCutpointGraph.java", "commitBeforeChange": "61dbb1af6c224986e7d12029f65eb7b3fce4e12a", "commitAfterChange": "5dfb58e41ca1578202f9d451a90e9b653291ef83", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void biconnectedComponentFinished(V s, V n)", "signatureAfterChange": "      private void biconnectedComponentFinished(V s, V n)", "diff": ["-        BCGEdge edge = this.stack.pop();", "+        BCGEdge edge = this.stack.removeLast();", "-            edge = this.stack.pop();", "+            edge = this.stack.removeLast();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f204c4fedad426b102b133a9951cc863", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "02c47e01c2a9da5578ae3f468177544b61a9d129", "commitAfterChange": "5671952a0fe9e747d7dd16b262d98190a1e0ae51", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "         public List<EE> createEdgeList(VV vertex)", "signatureAfterChange": "         public Set<EE> createEdgeList(VV vertex)", "diff": ["-        public List<EE> createEdgeList(VV vertex)", "+        public Set<EE> createEdgeList(VV vertex)", "-            return new ArrayList<EE>(1);", "+            return new ArrayUnenforcedSet<EE>(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7bb7be34cb5cdb7543c325d4252c7b3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean addVertex(V v)", "signatureAfterChange": "     public boolean addVertex(V v)", "diff": ["-            m_vertexMap.put(v, null); // add with a lazy edge container entry", "+            m_specifics.addVertex(v);"]}]}