{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca0372ca4897969b2cdeaec31863a993", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "244be5315abc1c21854fb585d59aa0ee", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private DirectedGraph createMultiTriangleWithMultiLoop()", "signatureAfterChange": "      private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "diff": ["-    private DirectedGraph createMultiTriangleWithMultiLoop()", "+    private DirectedGraph<String, DirEdge<String>> createMultiTriangleWithMultiLoop()", "-        DirectedGraph g = new DirectedMultigraph();", "+        DirectedGraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "274c208f491d027fa21ceb771d9a89c6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Subgraph( Graph base, Set vertexSubset, Set edgeSubset )", "signatureAfterChange": "     public Subgraph( Graph<V, E> base, Set<V> vertexSubset, Set<E> edgeSubset )", "diff": ["-    public Subgraph( Graph base, Set vertexSubset, Set edgeSubset ) {", "+    public Subgraph( Graph<V, E> base, Set<V> vertexSubset, Set<E> edgeSubset ) {", "-            ( (ListenableGraph) m_base ).addGraphListener( new BaseGraphListener(  ) );", "+            ( (ListenableGraph<V, E>) m_base ).addGraphListener( new BaseGraphListener(  ) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69531239c22d4281dc70b003107e8141", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private EdgeTopologyFactory edgeTopologyFactoryChooser(         Graph target,         int numOfEdges)", "signatureAfterChange": "     private EdgeTopologyFactory<V,E> edgeTopologyFactoryChooser(         Graph<V,E> target,         int numOfEdges)", "diff": ["-    private EdgeTopologyFactory edgeTopologyFactoryChooser(", "-        Graph target,", "+    private EdgeTopologyFactory<V,E> edgeTopologyFactoryChooser(", "+        Graph<V,E> target,", "-        return new DefaultEdgeTopologyFactory();", "+        return new DefaultEdgeTopologyFactory<V,E>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6f24f7f8a57822fcfb032c41ac460c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubgraphIsomorphismInspector.java", "commitBeforeChange": "ae864cab55715cbe3ee2fa1a05734b4fcd4f3411", "commitAfterChange": "aa92fe16c7852c9f9d1bf3a60c5718fcffd0ae0a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate SubgraphIsomorphismRelation<V,E> singleMatch(VF2SubState s)", "signatureAfterChange": " \tprivate SubgraphIsomorphismRelation<V,E> singleMatch(VF2SubState<V,E> s)", "diff": ["-\tprivate SubgraphIsomorphismRelation<V,E> singleMatch(VF2SubState s)", "+\tprivate SubgraphIsomorphismRelation<V,E> singleMatch(VF2SubState<V,E> s)", "-\t\t\t\tVF2SubState s2 = new VF2SubState(s);", "+\t\t\t\tVF2SubState<V,E> s2 = new VF2SubState<V,E>(s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b63973bb9f35e0196f51dafcf2a9bf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void assertIsomorphic(         Graph [] graphs,         boolean shouldTheyBeIsomorphic,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "      private void assertIsomorphic(         Graph<Integer,DirectedEdge<Integer>> [] graphs,         boolean shouldTheyBeIsomorphic,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-        Graph [] graphs,", "+        Graph<Integer,DirectedEdge<Integer>> [] graphs,", "-        Graph g1 = graphs[0];", "-        Graph g2 = graphs[1];", "+        Graph<Integer,DirectedEdge<Integer>> g1 = graphs[0];", "+        Graph<Integer,DirectedEdge<Integer>> g2 = graphs[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73bcd18a80176b009c2af55c7ac9c780", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/experimental/alg/DijkstraShortestPathAlgorithmTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private WeightedGraph create()", "signatureAfterChange": "      private WeightedGraph<String,DirectedEdge<String>> create()", "diff": ["-    private WeightedGraph create()", "+    private WeightedGraph<String,DirectedEdge<String>> create()", "-        WeightedGraph g = new WeightedPseudograph();", "+        WeightedGraph<String,DirectedEdge<String>>", "+        \tg = new WeightedPseudograph<String,DirectedEdge<String>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f8c121554fc1ba3ad665a76b28e961", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void checkRelation(         Graph [] graphs,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "      private void checkRelation(         Graph<Integer,DirectedEdge<Integer>> [] graphs,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-        Graph [] graphs,", "+        Graph<Integer,DirectedEdge<Integer>> [] graphs,", "-        Graph g1 = graphs[0];", "-        Graph g2 = graphs[1];", "+        Graph<Integer,DirectedEdge<Integer>> g1 = graphs[0];", "+        Graph<Integer,DirectedEdge<Integer>> g2 = graphs[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944c2276b1f7f413b3ce4f8b918beda6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/VertexCoversTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private boolean isCover(Set vertexSet, Graph g)", "signatureAfterChange": "     private boolean isCover(         Set<Integer> vertexSet, Graph<Integer,DefaultEdge> g)", "diff": ["-    private boolean isCover(Set vertexSet, Graph g)", "+    private boolean isCover(", "+        Set<Integer> vertexSet, Graph<Integer,DefaultEdge> g)", "-        Set uncoveredEdges = new HashSet(g.edgeSet());", "+        Set<DefaultEdge> uncoveredEdges = new HashSet<DefaultEdge>(g.edgeSet());", "-        for (Iterator i = vertexSet.iterator(); i.hasNext();) {", "+        for (Iterator<Integer> i = vertexSet.iterator(); i.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0fd0b6adff4ae4992a9111f9204196", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "e001cc8146b616d3da90eb6cff49e32ca1fc4a04", "commitAfterChange": "b7f329ad24e729f34dfea65831437c4420189a75", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected static void assertUnsupportedGraphTypes(Graph g)         throws IllegalArgumentException", "signatureAfterChange": "     protected static void assertUnsupportedGraphTypes(Graph g)         throws IllegalArgumentException", "diff": ["-        if ((g instanceof Multigraph)", "-            || (g instanceof DirectedMultigraph)", "-            || (g instanceof Pseudograph))", "+        if ((g instanceof Multigraph<?,?>)", "+            || (g instanceof DirectedMultigraph<?,?>)", "+            || (g instanceof Pseudograph<?,?>))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3e97edcc6ce25d3aa40d693c9514e68", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/DefaultDirectedGraphTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testEdgeListFactory()", "signatureAfterChange": "     public void testEdgeListFactory()", "diff": ["-        DirectedMultigraph g = new DirectedMultigraph();", "-        g.setEdgeListFactory(new LinkedListFactory());", "+        DirectedMultigraph<String, DirEdge<String>> g = new DirectedMultigraph<String, DirEdge<String>>();", "+        g.setEdgeListFactory(new LinkedListFactory<String, DirEdge<String>>());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ddee8a0b7965c275f0adc34df0f495", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/AbstractGraphIteratorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      DirectedGraph createDirectedGraph()", "signatureAfterChange": "      DirectedGraph<String, DirectedEdge<String>> createDirectedGraph()", "diff": ["-    DirectedGraph createDirectedGraph()", "+    DirectedGraph<String, DirectedEdge<String>> createDirectedGraph()", "-        DirectedGraph graph = new DefaultDirectedWeightedGraph();", "+        DirectedGraph<String, DirectedEdge<String>> graph =", "+        \tnew DefaultDirectedWeightedGraph<String, DirectedEdge<String>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa52754b08f490f00358537db08c830a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private QueueEntry createSeenData(V vertex, E edge)", "signatureAfterChange": "     private QueueEntry<V,E> createSeenData(V vertex, E edge)", "diff": ["-    private QueueEntry createSeenData(V vertex, E edge)", "+    private QueueEntry<V,E> createSeenData(V vertex, E edge)", "-        QueueEntry entry = new QueueEntry(shortestPathLength);", "+        QueueEntry<V,E> entry = new QueueEntry<V,E>(shortestPathLength);"]}]}