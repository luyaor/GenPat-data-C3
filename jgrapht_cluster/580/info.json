{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d967325fe272db1f1dfd889b18456c91", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "172939604512230785432daa43cc7bca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "8d750e42e455b5c6368ad13cf22eb0acdce04cc5", "commitAfterChange": "96754ed4114f3d602a54578a7af8400296c32fa2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       private void init(  )", "signatureAfterChange": "       private void init(  )", "diff": ["-        GraphFactory gf = GraphFactory.getFactory(  );", "-        m_gEmpty     = gf.createSimpleDirectedGraph(  );", "-        m_g1         = gf.createSimpleDirectedGraph(  );", "-        m_g2         = gf.createSimpleDirectedGraph(  );", "-        m_g3         = gf.createSimpleDirectedGraph(  );", "-        m_g4         = gf.createSimpleDirectedGraph(  );", "+        m_gEmpty     = new SimpleDirectedGraph(  );", "+        m_g1         = new SimpleDirectedGraph(  );", "+        m_g2         = new SimpleDirectedGraph(  );", "+        m_g3         = new SimpleDirectedGraph(  );", "+        m_g4         = new SimpleDirectedGraph(  );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54d0bdb8c052558bbf3bbc46f3b30e4a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/CycleDetectorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void runTest(DirectedGraph g, Set cyclicSet, Set acyclicSet)", "signatureAfterChange": "      private void runTest( DirectedGraph<String,DirEdge<String>> g,                           Set<String> cyclicSet,                           Set<String> acyclicSet )", "diff": ["-    private void runTest(DirectedGraph g, Set cyclicSet, Set acyclicSet)", "+    private void runTest( DirectedGraph<String,DirEdge<String>> g,", "+                          Set<String> cyclicSet,", "+                          Set<String> acyclicSet )", "-        CycleDetector detector = new CycleDetector(g);", "+        CycleDetector<String,DirEdge<String>> detector =", "+            new CycleDetector<String,DirEdge<String>>(g);", "-        Iterator iter = cyclicSet.iterator();", "-", "-        while (iter.hasNext()) {", "-            Object v = iter.next();", "+        for ( String v : cyclicSet ) {", "-        iter = acyclicSet.iterator();", "-", "-        while (iter.hasNext()) {", "-            Object v = iter.next();", "+        for ( String v : acyclicSet ) {"]}]}