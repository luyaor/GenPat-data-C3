{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e61827d5d174edf914f379f3670c5b9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0d3f6abc3de316599a5a49df4a317e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private void init(Set<V> vertexSet, Set<E> edgeSet)", "signatureAfterChange": "      private void init(Graph<V,E> g, Set<V> vertexSet, Set<E> edgeSet)", "diff": ["-    private void init(Set<V> vertexSet, Set<E> edgeSet)", "+    private void init(Graph<V,E> g, Set<V> vertexSet, Set<E> edgeSet)", "-            V sourceVertex = edge.getSource();", "+            V sourceVertex = g.getEdgeSource(edge);", "-                (mapVertexToOrder.get(edge.getTarget()))", "+                (mapVertexToOrder.get(g.getEdgeTarget(edge)))", "-            if (edge instanceof UndirectedEdge) {", "+            if (g instanceof UndirectedGraph) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "570127c1c8553ef9c5872211ae7d3622", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/VisioExporter.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void exportEdge(PrintStream out, Edge edge)", "signatureAfterChange": "      private void exportEdge(PrintStream out, Object edge, Graph g)", "diff": ["-    private void exportEdge(PrintStream out, Edge edge)", "+    private void exportEdge(PrintStream out, Object edge, Graph g)", "-            m_vertexNameProvider.getVertexName(edge.getSource());", "+            m_vertexNameProvider.getVertexName(g.getEdgeSource(edge));", "-            m_vertexNameProvider.getVertexName(edge.getTarget());", "+            m_vertexNameProvider.getVertexName(g.getEdgeTarget(edge));"]}]}