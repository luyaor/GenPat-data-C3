{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ffdf15a615aa1e65a28d599f1cdda67", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5db55f09fa14657b4aa52c3d06b19f2f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/demo/PerformanceDemo.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static void main(String [] args)", "signatureAfterChange": "     public static void main(String [] args)", "diff": ["-        Graph<Object,Edge<Object>> g = new Pseudograph<Object,Edge<Object>>();", "+        Graph<Object,DefaultEdge> g =", "+            new Pseudograph<Object,DefaultEdge>(DefaultEdge.class);", "-        for (Iterator i = new BreadthFirstIterator<Object,Edge<Object>>(g); i.hasNext();) {", "+        for (Iterator i = new BreadthFirstIterator<Object,DefaultEdge>(g); i.hasNext();) {", "-        for (Iterator i = new DepthFirstIterator<Object,Edge<Object>>(g); i.hasNext();) {", "+        for (Iterator i = new DepthFirstIterator<Object,DefaultEdge>(g); i.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9935ecb7d4ad124b9d985649a00c6ddc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/generate/GraphGeneratorTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testRingGraphGenerator()", "signatureAfterChange": "     public void testRingGraphGenerator()", "diff": ["-        GraphGenerator<Object,DirectedEdge<Object>,Object> gen =", "-                new RingGraphGenerator<Object,DirectedEdge<Object>>(SIZE);", "-        DirectedGraph<Object,DirectedEdge<Object>> g =", "-                new DefaultDirectedGraph<Object,DirectedEdge<Object>>();", "+        GraphGenerator<Object,DefaultEdge,Object> gen =", "+            new RingGraphGenerator<Object,DefaultEdge>(SIZE);", "+        DirectedGraph<Object,DefaultEdge> g =", "+            new DefaultDirectedGraph<Object,DefaultEdge>(DefaultEdge.class);", "-            Edge<Object> nextEdge =", "+            DefaultEdge nextEdge =", "-            nextVertex = nextEdge.getTarget();", "+            nextVertex = g.getEdgeTarget(nextEdge);"]}]}