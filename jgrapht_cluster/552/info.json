{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "970eebccc2bb9e0d5094e6f42169236a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5e65ed6f9a1c1e425382bc5d1b6656", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/generate/SimpleWeightedGraphMatrixGenerator.java", "commitBeforeChange": "2368f894a5f86458e6220ed61039dad10454d9ab", "commitAfterChange": "8bbdd0b15ef2a408186085d20f1a6fb81ea81686", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void generateGraph(WeightedGraph<V, E> target, VertexFactory<V> vertexFactory, Map<String, V> resultMap)", "signatureAfterChange": "      @Override public void generateGraph(         WeightedGraph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "diff": ["-    @Override", "-    public void generateGraph(WeightedGraph<V, E> target, VertexFactory<V> vertexFactory, Map<String, V> resultMap) {", "-", "-      if (weights == null)", "-        throw new IllegalArgumentException(\"Graph may not be constructed without weight-matrix specified\");", "-", "-      if (vertices == null)", "-        throw new IllegalArgumentException(\"Graph may not be constructed without vertex-set specified\");", "-", "-      assert vertices.size() == weights.length;", "-", "-      for (V vertex : vertices) {", "-        target.addVertex(vertex);", "-      }", "-", "-      for (int i=0; i < vertices.size(); ++i) {", "-", "-        assert vertices.size() == weights[i].length;", "-", "-        for (int j=0; j < vertices.size(); ++j) {", "-          if (i != j) {", "-            target.setEdgeWeight(", "-              target.addEdge(vertices.get(i), vertices.get(j)),", "-              weights[i][j]", "-            );", "-          }", "+    @Override public void generateGraph(", "+        WeightedGraph<V, E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String, V> resultMap)", "+    {", "+        if (weights == null) {", "+            throw new IllegalArgumentException(", "+                \"Graph may not be constructed without weight-matrix specified\");", "-      }", "+        if (vertices == null) {", "+            throw new IllegalArgumentException(", "+                \"Graph may not be constructed without vertex-set specified\");", "+        }", "+", "+        assert vertices.size() == weights.length;", "+", "+        for (V vertex : vertices) {", "+            target.addVertex(vertex);", "+        }", "+", "+        for (int i = 0; i < vertices.size(); ++i) {", "+            assert vertices.size() == weights[i].length;", "+", "+            for (int j = 0; j < vertices.size(); ++j) {", "+                if (i != j) {", "+                    target.setEdgeWeight(", "+                        target.addEdge(vertices.get(i), vertices.get(j)),", "+                        weights[i][j]);", "+                }", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "926e017a44dbc617c5091f8239525590", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/generate/SimpleWeightedBipartiteGraphMatrixGenerator.java", "commitBeforeChange": "2368f894a5f86458e6220ed61039dad10454d9ab", "commitAfterChange": "8bbdd0b15ef2a408186085d20f1a6fb81ea81686", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void generateGraph(WeightedGraph<V, E> target, VertexFactory<V> vertexFactory, Map<String, V> resultMap)", "signatureAfterChange": "      @Override public void generateGraph(         WeightedGraph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "diff": ["-    @Override", "-    public void generateGraph(WeightedGraph<V, E> target, VertexFactory<V> vertexFactory, Map<String, V> resultMap) {", "-", "-      if (weights == null)", "-        throw new IllegalArgumentException(\"Graph may not be constructed without weight-matrix specified\");", "-", "-      if (first == null || second == null)", "-        throw new IllegalArgumentException(\"Graph may not be constructed without either of vertex-set partitions specified\");", "-", "-      assert second.size() == weights.length;", "-", "-      for (V vertex : first) {", "-        target.addVertex(vertex);", "-      }", "-", "-      for (V vertex : second) {", "-        target.addVertex(vertex);", "-      }", "-", "-      for (int i=0; i < first.size(); ++i) {", "-", "-        assert first.size() == weights[i].length;", "-", "-        for (int j=0; j < second.size(); ++j) {", "-          target.setEdgeWeight(", "-            target.addEdge(first.get(i), second.get(j)),", "-            weights[i][j]", "-          );", "+    @Override public void generateGraph(", "+        WeightedGraph<V, E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String, V> resultMap)", "+    {", "+        if (weights == null) {", "+            throw new IllegalArgumentException(", "+                \"Graph may not be constructed without weight-matrix specified\");", "-      }", "+        if ((first == null) || (second == null)) {", "+            throw new IllegalArgumentException(", "+                \"Graph may not be constructed without either of vertex-set partitions specified\");", "+        }", "+", "+        assert second.size() == weights.length;", "+", "+        for (V vertex : first) {", "+            target.addVertex(vertex);", "+        }", "+", "+        for (V vertex : second) {", "+            target.addVertex(vertex);", "+        }", "+", "+        for (int i = 0; i < first.size(); ++i) {", "+            assert first.size() == weights[i].length;", "+", "+            for (int j = 0; j < second.size(); ++j) {", "+                target.setEdgeWeight(", "+                    target.addEdge(first.get(i), second.get(j)),", "+                    weights[i][j]);", "+            }", "+        }"]}]}