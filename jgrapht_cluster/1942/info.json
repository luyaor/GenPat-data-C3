{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac1c0c9fbc51cbf4385e47387ac6f6bc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a385d2f8f8aa5079fc1898c9a0ad3ce", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "d31c0a461f002b1bbca978a729161e05d339538a", "commitAfterChange": "ee11f3bf4fcb52f92037c518ce52556a0f7dfbad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public int hashCode()", "signatureAfterChange": "     public int hashCode()", "diff": ["-        int result = 17;", "-        ", "-        for (V v: vertexSet()) {", "-            result += v.hashCode(); ", "-        }", "-", "-        result = 27 * result;", "+        int result = vertexSet().hashCode();", "-            int part = 37;", "+            int part = 27;", "-                part = 7 * part + e.hashCode(); ", "+                part = 27 * part + e.hashCode(); ", "-            // this is a \"paring function\" (see details here: http://en.wikipedia.org/wiki/Pairing_function) (VK)", "-            int paring = ((source + target) * (source + target + 1) / 2) + target;", "-            part = 7 * part + paring;", "+            // this is a \"piaring function\" (see details here: http://en.wikipedia.org/wiki/Pairing_function) (VK)", "+            int pairing = ((source + target) * (source + target + 1) / 2) + target;", "+            part = 27 * part + pairing;", "-            part = 7 * part + (int) (weight ^ (weight >>> 32));", "+            part = 27 * part + (int) (weight ^ (weight >>> 32));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3413ef3b03c0d44d611725fdc2d485", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "7acd462dd9b27baaee05cd7cb1743331738444cd", "commitAfterChange": "77d3536281d5009f64d3969a18ec7d765c16f646", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void initialize(VertexExtension source, VertexExtension sink, Queue<VertexExtension> active)", "signatureAfterChange": "      public void initialize(VertexExtension source, VertexExtension sink, Queue<VertexExtension> active)", "diff": ["-        for (V v : network.vertexSet()) {", "-            if (v == source.prototype) {", "-                // NOP", "-            } else {", "-                extendedVertex(v).label = 0;", "-            }", "-        }", "+        label(source, sink);", "+        }", "+    }"]}]}