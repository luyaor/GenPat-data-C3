{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77c314cb5f4a782fbaf8f162cbf7863b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e59fa98a12101a2a03550956b18553", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/alg/color/GreedyColoring.java", "commitBeforeChange": "e601cce570393b1ad5c879b58ec483ca42a9532b", "commitAfterChange": "df9e52ba034eea98b94d0b6e1470ce50769bc1ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\")     int[] smallestDegreeLastOrder()", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\")     int [] smallestDegreeLastOrder()", "diff": ["-    int[] smallestDegreeLastOrder() {", "-        final int[] order = new int[_neighbors.length];", "-        final int[] degree = new int[_neighbors.length];", "-        final List[] buckets = new List[_neighbors.length];", "-        int index = _neighbors.length-1;", "+    int [] smallestDegreeLastOrder()", "+    {", "+        final int [] order = new int[_neighbors.length];", "+        final int [] degree = new int[_neighbors.length];", "+        final List [] buckets = new List[_neighbors.length];", "+        int index = _neighbors.length - 1;", "-                final int vertex = (Integer)buckets[i].get(s);", "+                final int vertex = (Integer) buckets[i].get(s);", "-                        if (degree[nb] < i) i = degree[nb];", "+                        if (degree[nb] < i) {", "+                            i = degree[nb];", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd78b2461af23661b0b4e4caa608cbdb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/experimental/alg/color/GreedyColoring.java", "commitBeforeChange": "a043534b3d73e2cf2e0d7d6b6cb13f5ab1cc6d36", "commitAfterChange": "58ffe75d7011b97e5d82e9b962f083efeda5131c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\")     int [] smallestDegreeLastOrder()", "signatureAfterChange": "      int [] smallestDegreeLastOrder()", "diff": ["-    @SuppressWarnings(\"unchecked\")", "-        final List [] buckets = new List[_neighbors.length];", "+        final List<List<Integer>> buckets = new ArrayList<List<Integer>>(_neighbors.length);", "-            buckets[i] = new ArrayList<Integer>();", "+            buckets.add(new ArrayList<Integer>());", "-            buckets[degree[i]].add(i);", "+            buckets.get(degree[i]).add(i);", "-            while (buckets[i].size() > 0) {", "-                final int s = buckets[i].size() - 1;", "-                final int vertex = (Integer) buckets[i].get(s);", "-                buckets[i].remove(s);", "+            while (buckets.get(i).size() > 0) {", "+                final int s = buckets.get(i).size() - 1;", "+                final int vertex = (Integer) buckets.get(i).get(s);", "+                buckets.get(i).remove(s);", "-                        buckets[degree[nb]].remove(new Integer(nb));", "+                        buckets.get(degree[nb]).remove(new Integer(nb));", "-                        buckets[degree[nb]].add(nb);", "+                        buckets.get(degree[nb]).add(nb);"]}]}