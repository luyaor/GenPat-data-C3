{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41dd7dedef8fd1d6f84addbc81b7c4fd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e3a5d72b43bab7a83f57111b623477", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/ConnectivityInspectorTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Pseudograph<String,DefaultEdge> create()", "signatureAfterChange": "     public Pseudograph<String,DefaultEdge> create()", "diff": ["-        m_e1 = g.addEdge(V1, V2);", "+        e1 = g.addEdge(V1, V2);", "-        m_e2 = g.addEdge(V2, V3);", "+        e2 = g.addEdge(V2, V3);", "-        m_e3 = g.addEdge(V3, V1);", "+        e3 = g.addEdge(V3, V1);", "-        m_e3_b = g.addEdge(V3, V1);", "+        e3_b = g.addEdge(V3, V1);", "-        assertNotNull(m_e3_b);", "+        assertNotNull(e3_b);", "-        m_u = g.addEdge(V1, V1);", "+        u = g.addEdge(V1, V1);", "-        m_u = g.addEdge(V1, V1);", "+        u = g.addEdge(V1, V1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ea1471a3a171669abd7ad558c06f1f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void testAddVertex()", "signatureAfterChange": "     public void testAddVertex()", "diff": ["-        assertEquals(1, m_g1.vertexSet().size());", "-        assertEquals(2, m_g2.vertexSet().size());", "-        assertEquals(3, m_g3.vertexSet().size());", "-        assertEquals(4, m_g4.vertexSet().size());", "+        assertEquals(1, g1.vertexSet().size());", "+        assertEquals(2, g2.vertexSet().size());", "+        assertEquals(3, g3.vertexSet().size());", "+        assertEquals(4, g4.vertexSet().size());", "-        assertFalse(m_g1.addVertex(m_v1));", "-        assertTrue(m_g1.addVertex(m_v2));", "-        assertEquals(2, m_g1.vertexSet().size());", "+        assertFalse(g1.addVertex(v1));", "+        assertTrue(g1.addVertex(v2));", "+        assertEquals(2, g1.vertexSet().size());"]}]}