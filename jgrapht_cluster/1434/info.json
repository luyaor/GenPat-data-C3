{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "99ecf09686de9aba570e45c1225c3fd9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fdf0fcc1b3b2068e86bc2a2a02c42ab", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "317af19fd167b7e8bbccedf9402266659bbcd63e", "commitAfterChange": "1358e76f87034e34b349840486337c41eda4fa54", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( V v )", "diff": ["-    public boolean removeVertex( Object v ) {", "+    public boolean removeVertex( V v ) {", "-            Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "-            touchingEdgesList.toArray( touchingEdges );", "+            //Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "+            //touchingEdgesList.toArray( touchingEdges );", "-            removeAllEdges( touchingEdges );", "+            removeAllEdges( new ArrayList(touchingEdgesList) );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "666d3107422c9de253146372c55d0dc8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "1df180de1b8b633126c98521506e35574ef6842a", "commitAfterChange": "49dba40119d470004303177165b6664e740a572f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( V v )", "diff": ["-    public boolean removeVertex( Object v ) {", "+    public boolean removeVertex( V v ) {", "-            Edge[] touchingEdges = new Edge[ touchingEdgesList.size(  ) ];", "-            touchingEdgesList.toArray( touchingEdges );", "-", "-            removeAllEdges( touchingEdges );", "+            removeAllEdges( new ArrayList(touchingEdgesList) );"]}]}