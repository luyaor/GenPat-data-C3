{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfe79b5bdc3873fb5bb8fced9dcefc9a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2326815f24cfc6ff4db28633fcc7a9d0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/experimental/GraphReader.java", "commitBeforeChange": "706aa3597ecf30c14c3a4ac469519dd45ef4dc50", "commitAfterChange": "55241662127745f1a473298706f974517b39b392", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void readGraph( Graph g ) throws IOException", "signatureAfterChange": "     public void readGraph( Graph g ) throws IOException", "diff": ["-                        GraphHelper.addEdgeWithVertices( g, new Integer( x ),", "-                            new Integer( y ) );", "+                        if (cols.length > 3) {", "+                            GraphHelper.addEdgeWithVertices( g, new Integer( x ),", "+                                new Integer( y ), Double.parseDouble(cols[ 3 ]) );", "+                        } else {", "+                            GraphHelper.addEdgeWithVertices( g, new Integer( x ),", "+                                new Integer( y ) );", "+                        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b6ce1f064a2cb43860eafcd3bf41f8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TransitiveReductionTest.java", "commitBeforeChange": "011f1e4ed007e20ef02e12c898f369abbf15f340", "commitAfterChange": "67db11694f065b26fa72ab0bf7b3e7d5624c591c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void test()", "signatureAfterChange": "          @Test     public void testInternals()", "diff": ["+    ", "-    public void test() {", "+    public void testInternals() {", "-        final int[][] matrix = new int[][] {", "-            {0, 1, 1, 0, 0},", "-            {0, 0, 0, 0, 0},", "-            {0, 0, 0, 1, 1},", "-            {0, 0, 0, 0, 1},", "-            {0, 1, 0, 0, 0}", "-        };", "-        ", "-        final int[][] expected_transitively_reduced_matrix = new int[][] {", "-            {0, 0, 1, 0, 0},", "-            {0, 0, 0, 0, 0},", "-            {0, 0, 0, 1, 0},", "-            {0, 0, 0, 0, 1},", "-            {0, 1, 0, 0, 0}", "-        };", "-                        matrix.length);", "+                        path_matrix.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b932834caecce593b4d5e8ec297e76d0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java", "commitBeforeChange": "6245588ef354746c5c3ae9a477b956068a878121", "commitAfterChange": "7c92324c62793ccd32781d7e3f1ebd3ed525f69b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public String toString()", "signatureAfterChange": "      @Override public String toString()", "diff": ["-    @Override", "-    public String toString() {", "+    @Override public String toString()", "+    {", "-        for (V v : vertexSet)", "+        for (V v : vertexSet) {", "+        }", "-        for (Map.Entry<String, V> entry : vertexMap.entrySet())   {", "+        for (Map.Entry<String, V> entry : vertexMap.entrySet()) {", "-            str += (i++ == 0 ? \"\" : \" \") + entry.getKey() + \"=\" +", "-                            (u == null ? \"~~\" : u);", "+            str +=", "+                ((i++ == 0) ? \"\" : \" \") + entry.getKey() + \"=\"", "+                + ((u == null) ? \"~~\" : u);"]}]}