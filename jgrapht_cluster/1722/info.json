{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2e715d0cdea9996dbcecb469feb8df2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b44a53e5545a15eedb6ba4bfa47b16d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/BreadthFirstIteratorTest.java", "commitBeforeChange": "5ca07c5c3acb7c7b541f092092e305a171ceebb0", "commitAfterChange": "3cf8c5a89937c13e56521bf120df93d38d5c84ee", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void testDirectedGraph()", "signatureAfterChange": "     public void testDirectedGraph(  )", "diff": ["-\tpublic void testDirectedGraph() {", "-\t\tGraphFactory graphFactory = GraphFactory.getFactory();", "-\t\tDirectedGraph graph = graphFactory.createDirectedGraph();", "-\t\tString v1 = \"1\";", "-\t\tgraph.addVertex(v1);", "-\t\tString v2 = \"2\";", "-\t\tgraph.addVertex(v2);", "-\t\tString v3 = \"3\";", "-\t\tgraph.addVertex(\"3\");", "-\t\tString v4 = \"4\";", "-\t\tgraph.addVertex(\"4\");", "-\t\tString v5 = \"5\";", "-\t\tgraph.addVertex(\"5\");", "-\t\tString v6 = \"6\";", "-\t\tgraph.addVertex(\"6\");", "-\t\tString v7 = \"7\";", "-\t\tgraph.addVertex(\"7\");", "-\t\tString v8 = \"8\";", "-\t\tgraph.addVertex(\"8\");", "-\t\tString v9 = \"9\";", "-\t\tgraph.addVertex(\"9\");", "-\t\tgraph.addEdge(v1, v2);", "-\t\tgraph.addEdge(v1, v3);", "-\t\tgraph.addEdge(v2, v4);", "-\t\tgraph.addEdge(v3, v5);", "-\t\tgraph.addEdge(v3, v6);", "-\t\tgraph.addEdge(v5, v6);", "-\t\tgraph.addEdge(v5, v7);", "-\t\tgraph.addEdge(v6, v1);", "-\t\tgraph.addEdge(v7, v8);", "-\t\tgraph.addEdge(v7, v9);", "-\t\tgraph.addEdge(v8, v2);", "-\t\tgraph.addEdge(v9, v4);", "-\t\tBreadthFirstIterator iterator = new BreadthFirstIterator(graph, v1);", "-\t\tStringBuffer result = new StringBuffer();", "-\t\tfor (; iterator.hasNext();) {", "-\t\t\tresult.append((String) iterator.next());", "-\t\t}", "-\t\tString s = result.toString();", "-\t\tSystem.out.println(s);", "-\t\tassertEquals(\"123456789\", s);", "-\t}", "+     */", "+    public void testDirectedGraph(  ) {", "+        GraphFactory  graphFactory = GraphFactory.getFactory(  );", "+        DirectedGraph graph = graphFactory.createDirectedGraph(  );", "+", "+        //", "+        String v1 = \"1\";", "+        String v2 = \"2\";", "+        String v3 = \"3\";", "+        String v4 = \"4\";", "+        String v5 = \"5\";", "+        String v6 = \"6\";", "+        String v7 = \"7\";", "+        String v8 = \"8\";", "+        String v9 = \"9\";", "+", "+        graph.addVertex( v1 );", "+        graph.addVertex( v2 );", "+        graph.addVertex( \"3\" );", "+        graph.addVertex( \"4\" );", "+        graph.addVertex( \"5\" );", "+        graph.addVertex( \"6\" );", "+        graph.addVertex( \"7\" );", "+        graph.addVertex( \"8\" );", "+        graph.addVertex( \"9\" );", "+        ", "+        graph.addVertex(\"orphan\");", "+", "+        graph.addEdge( v1, v2 );", "+        graph.addEdge( v1, v3 );", "+        graph.addEdge( v2, v4 );", "+        graph.addEdge( v3, v5 );", "+        graph.addEdge( v3, v6 );", "+        graph.addEdge( v5, v6 );", "+        graph.addEdge( v5, v7 );", "+        graph.addEdge( v6, v1 );", "+        graph.addEdge( v7, v8 );", "+        graph.addEdge( v7, v9 );", "+        graph.addEdge( v8, v2 );", "+        graph.addEdge( v9, v4 );", "+", "+        BreadthFirstIterator iterator = new BreadthFirstIterator( graph, v1 );", "+        StringBuffer         result = new StringBuffer(  );", "+", "+        while( iterator.hasNext(  ) ) {", "+            result.append( (String) iterator.next(  ) );", "+            ", "+            if (iterator.hasNext(  )) {", "+                result.append(',');", "+            }", "+        }", "+", "+        String s = result.toString(  );", "+        System.out.println( s );", "+        assertEquals( \"1,2,3,4,5,6,7,8,9,orphan\", s );", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f94c78dfb53e970a593c1aa2b4f98e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/alg/DepthFirstIteratorTest.java", "commitBeforeChange": "5ca07c5c3acb7c7b541f092092e305a171ceebb0", "commitAfterChange": "3cf8c5a89937c13e56521bf120df93d38d5c84ee", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void testDirectedGraph()", "signatureAfterChange": "     public void testDirectedGraph(  )", "diff": ["-\tpublic void testDirectedGraph() {", "-\t\tGraphFactory graphFactory = GraphFactory.getFactory();", "-\t\tDirectedGraph graph = graphFactory.createDirectedGraph();", "-\t\tString v1 = \"1\";", "-\t\tgraph.addVertex(v1);", "-\t\tString v2 = \"2\";", "-\t\tgraph.addVertex(v2);", "-\t\tString v3 = \"3\";", "-\t\tgraph.addVertex(\"3\");", "-\t\tString v4 = \"4\";", "-\t\tgraph.addVertex(\"4\");", "-\t\tString v5 = \"5\";", "-\t\tgraph.addVertex(\"5\");", "-\t\tString v6 = \"6\";", "-\t\tgraph.addVertex(\"6\");", "-\t\tString v7 = \"7\";", "-\t\tgraph.addVertex(\"7\");", "-\t\tString v8 = \"8\";", "-\t\tgraph.addVertex(\"8\");", "-\t\tString v9 = \"9\";", "-\t\tgraph.addVertex(\"9\");", "-\t\tgraph.addEdge(v1, v2);", "-\t\tgraph.addEdge(v1, v3);", "-\t\tgraph.addEdge(v2, v4);", "-\t\tgraph.addEdge(v3, v5);", "-\t\tgraph.addEdge(v3, v6);", "-\t\tgraph.addEdge(v5, v6);", "-\t\tgraph.addEdge(v5, v7);", "-\t\tgraph.addEdge(v6, v1);", "-\t\tgraph.addEdge(v7, v8);", "-\t\tgraph.addEdge(v7, v9);", "-\t\tgraph.addEdge(v8, v2);", "-\t\tgraph.addEdge(v9, v4);", "-\t\tDepthFirstIterator iterator = new DepthFirstIterator(graph, v1);", "-\t\tStringBuffer result = new StringBuffer();", "-\t\tfor (; iterator.hasNext();) {", "-\t\t\tresult.append((String) iterator.next());", "-\t\t}", "-\t\tString s = result.toString();", "-\t\tSystem.out.println(s);", "-\t\tassertEquals(\"136579482\", s);", "-\t}", "+     */", "+    public void testDirectedGraph(  ) {", "+        GraphFactory  graphFactory = GraphFactory.getFactory(  );", "+        DirectedGraph graph = graphFactory.createDirectedGraph(  );", "+", "+        //        ", "+        String v1 = \"1\";", "+        String v2 = \"2\";", "+        String v3 = \"3\";", "+        String v4 = \"4\";", "+        String v5 = \"5\";", "+        String v6 = \"6\";", "+        String v7 = \"7\";", "+        String v8 = \"8\";", "+        String v9 = \"9\";", "+", "+        graph.addVertex( v1 );", "+        graph.addVertex( v2 );", "+        graph.addVertex( \"3\" );", "+        graph.addVertex( \"4\" );", "+        graph.addVertex( \"5\" );", "+        graph.addVertex( \"6\" );", "+        graph.addVertex( \"7\" );", "+        graph.addVertex( \"8\" );", "+        graph.addVertex( \"9\" );", "+        ", "+        graph.addVertex(\"orphan\");", "+", "+        graph.addEdge( v1, v2 );", "+        graph.addEdge( v1, v3 );", "+        graph.addEdge( v2, v4 );", "+        graph.addEdge( v3, v5 );", "+        graph.addEdge( v3, v6 );", "+        graph.addEdge( v5, v6 );", "+        graph.addEdge( v5, v7 );", "+        graph.addEdge( v6, v1 );", "+        graph.addEdge( v7, v8 );", "+        graph.addEdge( v7, v9 );", "+        graph.addEdge( v8, v2 );", "+        graph.addEdge( v9, v4 );", "+", "+        DepthFirstIterator iterator = new DepthFirstIterator( graph, v1 );", "+        StringBuffer       result = new StringBuffer(  );", "+", "+        while( iterator.hasNext(  ) ) {", "+            result.append( (String) iterator.next(  ) );", "+            if (iterator.hasNext(  )) {", "+                result.append(',');", "+            }", "+        }", "+", "+        String s = result.toString(  );", "+        System.out.println( s );", "+        assertEquals( \"1,3,6,5,7,9,4,8,2,orphan\", s );", "+    }"]}]}