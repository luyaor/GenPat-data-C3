{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1afb4381bcb0ee7e87ad67a835243ec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cac4077a33bb7bc50856da0f1b14889", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/BreadthFirstIterator.java", "commitBeforeChange": "1a139deda5ac7b2aaba241b3824c64caaee23fb6", "commitAfterChange": "ddcca677c21de372890c813874f294b371ec5648", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public Object next(  )", "signatureAfterChange": "     public Object next(  )", "diff": ["-            List edges = m_specifics.edgesOf( nextVertex );", "-", "-            for( Iterator iter = edges.iterator(  ); iter.hasNext(  ); ) {", "-                Edge e = (Edge) iter.next(  );", "-                fireEdgeVisited( e );", "-", "-                Object v = e.oppositeVertex( nextVertex );", "-", "-                if( m_seen.add( v ) ) { // means: if NOT seen", "-                    m_queue.add( v );", "-                }", "-            }", "+            enqueueUnseenChildrenOf( nextVertex );", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24995289174d02ec40a1a3d97f799eea", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "a5cfd4bcd48a19ea8d2e478a16d15b3842b03b66", "commitAfterChange": "2a809e716ca8dd50187f8762d1fe3518ca90c92f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 17, "signatureBeforeChange": "         public boolean equals( Object obj )", "signatureAfterChange": "       private int indexOfListener( VertexSetListener listener, List list )", "diff": ["+    private int indexOfListener( VertexSetListener listener, List list ) {", "+        for( int i = 0; i < list.size(  ); i++ ) {", "+            WeakListenerReference ref = (WeakListenerReference) list.get( i );", "+", "+            if( ref.get(  ) == listener ) {", "+                return i;", "+            }", "+        }", "+", "+        return NOT_FOUND;", "+    }", "-         */", "-        public boolean equals( Object obj ) {", "-            Object ref = get(  );", "-", "-            return ref == null ? false : ref.equals( obj );", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e86b149e9e6a3ed7c9a92d3729edbde4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/main/java/org/jgrapht/ext/DOTImporter.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "     private boolean isVertexLine(String input)", "signatureAfterChange": "     private boolean isStartOfBlockComment(String input, int position)", "diff": ["+", "+   private boolean isStartOfBlockComment(String input, int position) {", "+      char current = input.charAt(position);", "+      if(current == '/') {", "+         if(position < input.length() -1) {", "+            if(input.charAt(position + 1) == '*') {", "+               return true;", "+            }", "+         }", "+      }", "+      return false;", "+   }", "-", "-   private boolean isVertexLine(String input) {", "-      if(input.contains(\"[\")) {", "-         return ! input.substring(0, input.indexOf('[')).contains(\"-\");", "-      } else {", "-         return ! input.contains(\"-\");", "-      }"]}]}