{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8e58aa8dd03ed2df8a1285ba1bc35d64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a603269e30f90bbb91fbcbf3d1442d8d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "signatureAfterChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "diff": ["-                    if (m_graph.containsEdge(candidate, new_candidate)) {", "+                    if (graph.containsEdge(candidate, new_candidate)) {", "-                    if (m_graph.containsEdge(candidate, new_found)) {", "+                    if (graph.containsEdge(candidate, new_found)) {", "-                    m_cliques.add(new HashSet<V>(potential_clique));", "+                    cliques.add(new HashSet<V>(potential_clique));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2aa06aa550a9f30e48febff4bd3d4cb", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/CycleDetector.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         protected V provideNextVertex()", "signatureAfterChange": "         protected V provideNextVertex()", "diff": ["-            for (int i = m_path.size() - 1; i >= 0; --i) {", "-                if (m_graph.containsEdge(m_path.get(i), v)) {", "+            for (int i = path.size() - 1; i >= 0; --i) {", "+                if (graph.containsEdge(path.get(i), v)) {", "-                m_path.remove(i);", "+                path.remove(i);", "-            m_path.add(v);", "+            path.add(v);"]}]}