{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a32d8b83d50d228422b1ec601a5c3f52", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d67afc85e24840e3448edfc1621020", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void exportAdjacencyMatrix(Writer output, UndirectedGraph  g)", "signatureAfterChange": "     public void exportAdjacencyMatrix(Writer output, UndirectedGraph<V,E> g)", "diff": ["-    public void exportAdjacencyMatrix(Writer output, UndirectedGraph  g)", "+    public void exportAdjacencyMatrix(Writer output, UndirectedGraph<V,E> g)", "-        VertexNameProvider nameProvider = new IntegerNameProvider();", "-        for (Object from : g.vertexSet()) {", "+        VertexNameProvider<V> nameProvider = new IntegerNameProvider<V>();", "+        for (V from : g.vertexSet()) {", "-        for (Object from : g.vertexSet()) {", "-            // TODO modify Graphs to return neighbor sets", "+        for (V from : g.vertexSet()) {", "-                    Graphs.neighborListOf(g, from));", "+                Graphs.neighborListOf(g, from));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484aa6ad8607028555c35899ef9969ff", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/MatrixExporter.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void exportAdjacencyMatrix(Writer output, DirectedGraph  g)", "signatureAfterChange": "     public void exportAdjacencyMatrix(Writer output, DirectedGraph<V,E> g)", "diff": ["-    public void exportAdjacencyMatrix(Writer output, DirectedGraph  g)", "+    public void exportAdjacencyMatrix(Writer output, DirectedGraph<V,E> g)", "-        VertexNameProvider nameProvider = new IntegerNameProvider();", "-        for (Object from : g.vertexSet()) {", "+        VertexNameProvider<V> nameProvider = new IntegerNameProvider<V>();", "+        for (V from : g.vertexSet()) {", "-        for (Object from : g.vertexSet()) {", "-            // TODO modify Graphs to return neighbor sets", "+        for (V from : g.vertexSet()) {", "-                    Graphs.successorListOf(g, from));", "+                Graphs.successorListOf(g, from));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6314f73eb6293e5b93ffcacae249e05", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/generate/LinearGraphGenerator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph(         Graph target,         VertexFactory vertexFactory,         Map resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-        Graph target,", "-        VertexFactory vertexFactory,", "-        Map resultMap)", "+        Graph<V,E> target,", "+        VertexFactory<V> vertexFactory,", "+        Map<String,V> resultMap)", "-        Object lastVertex = null;", "+        V lastVertex = null;", "-            Object newVertex = vertexFactory.createVertex();", "+            V newVertex = vertexFactory.createVertex();"]}]}