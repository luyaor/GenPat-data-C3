{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1c23084c8a66634f79946c7cd64aa86", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9425d4c5b433c79d7b1c219df920c553", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/MaximumWeightBipartiteMatching.java", "commitBeforeChange": "985760cbd642d0a5bdb9eca3c84e4565ecb8ceea", "commitAfterChange": "f79565a2a8d7f5186720bf4969b47a8431d60e9c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate Map<V, List<E>> verticesReachableByTightAlternatingEdgesFromVertex(V vertex)", "signatureAfterChange": " \t \tprivate Map<V, List<E>> verticesReachableByTightAlternatingEdgesFromVertex(V vertex)", "diff": ["-\t\t_verticesReachableByTightAlternatingEdgesFromVertex(Arrays.asList(vertex), false, pathsToVertices);", "+\t\tfindPathsToVerticesFromVertices(Arrays.asList(vertex), false, pathsToVertices);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3e9027ce557909094252704609c850d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/SimpleGraphPathTest.java", "commitBeforeChange": "8235d1bacea60954c86fd1eadd0d233561478391", "commitAfterChange": "4c943d362622d305ac3ffd82365c8d7977e559f3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void testEdgeList()", "signatureAfterChange": "      public void testEdgeList()", "diff": ["-        assertEquals(path.getEdgeList(), Arrays.asList(expectedEdges));", "+        assertEquals(Arrays.asList(expectedEdges), path.getEdgeList());"]}]}