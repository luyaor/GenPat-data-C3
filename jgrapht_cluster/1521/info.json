{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a44dd81dbfe85e82066c0b5370a908d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3817368c1ff757eceb69fd65fc89ad0d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTestBase.java", "commitBeforeChange": "62325cdd7548d0cf930d478a885b2a08e669b9bb", "commitAfterChange": "6a8a4c15d51c52101d91cd979c3d30cc12195d89", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "      private static void dumpGraph(DirectedGraph<Integer, DefaultWeightedEdge> g, Integer source, Integer sink)", "signatureAfterChange": "      private static void dumpGraph(DirectedGraph<Integer, DefaultWeightedEdge> g, Integer source, Integer sink)", "diff": ["-        List<Integer> heads = new ArrayList(g.edgeSet().size());", "-        List<Integer> tails = new ArrayList(g.edgeSet().size());", "+        List<Integer> heads = new ArrayList<Integer>(g.edgeSet().size());", "+        List<Integer> tails = new ArrayList<Integer>(g.edgeSet().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b51965ba314d7788f781461403818355", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/util/equivalence/EquivalenceGroupCreatorTest.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private void testOneComparator(         EquivalenceComparator comparator,         int expectedNumOfGroups)", "signatureAfterChange": "      private void testOneComparator(         EquivalenceComparator comparator,         int expectedNumOfGroups)", "diff": ["-        Integer [] integerArray = new Integer [INTEGER_ARRAY_SIZE];", "+        ArrayList<Integer> integerArray = new ArrayList<Integer>(INTEGER_ARRAY_SIZE);", "-            integerArray[i] = Integer.valueOf(i);", "+            integerArray.add( i );"]}]}