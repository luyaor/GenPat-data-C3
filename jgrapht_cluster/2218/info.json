{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65d932ce48c759e3e8fca359d99ebb7b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bd0b26ceba44fd3d6975d556b003bce", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     protected void link(FibonacciHeapNode<T> y, FibonacciHeapNode<T> x)", "signatureAfterChange": "     protected void link(FibonacciHeapNode<T> y, FibonacciHeapNode<T> x)", "diff": ["-        y.m_left.m_right = y.m_right;", "-        y.m_right.m_left = y.m_left;", "+        y.left.right = y.right;", "+        y.right.left = y.left;", "-        y.m_parent = x;", "+        y.parent = x;", "-        if (x.m_child == null) {", "-            x.m_child = y;", "-            y.m_right = y;", "-            y.m_left = y;", "+        if (x.child == null) {", "+            x.child = y;", "+            y.right = y;", "+            y.left = y;", "-            y.m_left = x.m_child;", "-            y.m_right = x.m_child.m_right;", "-            x.m_child.m_right = y;", "-            y.m_right.m_left = y;", "+            y.left = x.child;", "+            y.right = x.child.right;", "+            x.child.right = y;", "+            y.right.left = y;", "-        x.m_degree++;", "+        x.degree++;", "-        y.m_mark = false;", "+        y.mark = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa08d85301085cfece87f76d3239f670", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/util/FibonacciHeap.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     protected void cut(FibonacciHeapNode<T> x, FibonacciHeapNode<T> y)", "signatureAfterChange": "     protected void cut(FibonacciHeapNode<T> x, FibonacciHeapNode<T> y)", "diff": ["-        x.m_left.m_right = x.m_right;", "-        x.m_right.m_left = x.m_left;", "-        y.m_degree--;", "+        x.left.right = x.right;", "+        x.right.left = x.left;", "+        y.degree--;", "-        if (y.m_child == x) {", "-            y.m_child = x.m_right;", "+        if (y.child == x) {", "+            y.child = x.right;", "-        if (y.m_degree == 0) {", "-            y.m_child = null;", "+        if (y.degree == 0) {", "+            y.child = null;", "-        x.m_left = m_min;", "-        x.m_right = m_min.m_right;", "-        m_min.m_right = x;", "-        x.m_right.m_left = x;", "+        x.left = minNode;", "+        x.right = minNode.right;", "+        minNode.right = x;", "+        x.right.left = x;", "-        x.m_parent = null;", "+        x.parent = null;", "-        x.m_mark = false;", "+        x.mark = false;"]}]}