{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e35bd6c06002ae3a9bf607cc7e7ae99", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "837af4816da4b8b824d882707475e0c3", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "5e9dfdedbd0f501394dd50a31fc000abcac738de", "commitAfterChange": "0fa22166c3bce2b4318de51e3645ef9910304701", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted(  )", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted(  )", "diff": ["-        return m_heap.size(  ) == 0;", "+        if( m_heap.size(  ) == 0 ) {", "+            return true;", "+        }", "+        else {", "+            if( m_heap.min(  ).getKey(  ) > m_radius ) {", "+                m_heap.clear(  );", "+", "+                return true;", "+            }", "+            else {", "+                return false;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f869a2721b15247374734141cdb0609c", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/DepthFirstIterator.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected boolean isConnectedComponentExhausted()", "signatureAfterChange": "     protected boolean isConnectedComponentExhausted()", "diff": ["-        return stack.isEmpty();", "+        for (;;) {", "+            if (stack.isEmpty()) {", "+                return true;", "+            }", "+            if (peekStack() != null) {", "+                // Found a non-sentinel.", "+                return false;", "+            }", "+            ", "+            // Found a sentinel:  pop it, record the finish time,", "+            // and then loop to check the rest of the stack.", "+            ", "+            // Pop null we peeked at above.", "+            popStack();", "+", "+            // This will pop corresponding vertex to be recorded as finished.", "+            recordFinish();", "+        }"]}]}