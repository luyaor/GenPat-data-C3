{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84579e5d98698ff3c20d305799ba464f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf21218ab7fcbf8278bb1adbf39853b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/VertexCovers.java", "commitBeforeChange": "a61ea1fb03c32a4f8d707fa99a2e78d02c070933", "commitAfterChange": "e7ee93188d586bd5ab1949179c701faba108c0b1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Set findGreedyCover( Graph g )", "signatureAfterChange": "     public Set findGreedyCover( UndirectedGraph g )", "diff": ["-     */", "-    public Set findGreedyCover( Graph g ) {", "-        // C <-- \ufffd", "-        Set cover = new HashSet(  );", "-", "-        // G' <-- G", "-        Subgraph sg =", "-            new UndirectedSubgraph( undirectedGraph( g ), null, null );", "-", "-        // compare vertices in descending order of degree", "-        VertexDegreeComparator comp = new VertexDegreeComparator( sg );", "-", "-        // while G' != \ufffd", "-        while( sg.edgeSet(  ).size(  ) > 0 ) {", "-            // v <-- vertex with maximum degree in G'", "-            Object v = Collections.max( sg.vertexSet(  ), comp );", "-", "-            // C <-- C U {v}", "-            cover.add( v );", "-", "-            // remove from G' every edge incident on v, and v itself", "-            sg.removeVertex( v );", "-        }", "-", "-        return cover;", "-    }", "+    public Set findGreedyCover( UndirectedGraph g ) {", "+        // C <-- \ufffd", "+        Set cover = new HashSet(  );", "+", "+        // G' <-- G", "+        UndirectedGraph sg = new UndirectedSubgraph( g, null, null );", "+", "+        // compare vertices in descending order of degree", "+        VertexDegreeComparator comp = new VertexDegreeComparator( sg );", "+", "+        // while G' != \ufffd", "+        while( sg.edgeSet(  ).size(  ) > 0 ) {", "+            // v <-- vertex with maximum degree in G'", "+            Object v = Collections.max( sg.vertexSet(  ), comp );", "+", "+            // C <-- C U {v}", "+            cover.add( v );", "+", "+            // remove from G' every edge incident on v, and v itself", "+            sg.removeVertex( v );", "+", "+        return cover;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc92952a94a28a50a71d511bb643119f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/VertexCovers.java", "commitBeforeChange": "a61ea1fb03c32a4f8d707fa99a2e78d02c070933", "commitAfterChange": "e7ee93188d586bd5ab1949179c701faba108c0b1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Set findWalterCover( Graph g )", "signatureAfterChange": "     public Set find2ApproximationCover( Graph g )", "diff": ["-    public Set findWalterCover( Graph g ) {", "+    public Set find2ApproximationCover( Graph g ) {", "-        Subgraph sg = new Subgraph( undirectedGraph( g ), null, null );", "+        Subgraph sg = new Subgraph( g, null, null );"]}]}