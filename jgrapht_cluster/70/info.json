{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "319d3e3edf8453e11396cb3917f2657b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735ed6dc5620716b67cc192c2ee8cbcf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/traverse/IgnoreDirectionTest.java", "commitBeforeChange": "2955193f2c773802cdf5e2830661d2b9bb1e4d77", "commitAfterChange": "e9a771f827ef970ca3f917379fbfaeea59db179e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       AbstractGraphIterator createIterator( Graph g, Object vertex )", "signatureAfterChange": "       AbstractGraphIterator createIterator( DirectedGraph g, Object vertex )", "diff": ["-    AbstractGraphIterator createIterator( Graph g, Object vertex ) {", "+    AbstractGraphIterator createIterator( DirectedGraph g, Object vertex ) {", "-        AbstractGraphIterator i = new DepthFirstIterator( g, \"4\", true );", "+        UndirectedGraph undirectedView = new AsUndirectedGraph( g );", "+        AbstractGraphIterator i = new DepthFirstIterator(", "+            undirectedView, \"4\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f686b8856e9c420927a263372df483", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/EquivalenceIsomorphismInspector.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     protected CollectionPermutationIter<V> createPermutationIterator(         Set<V> vertexSet1,         Set<V> vertexSet2)", "signatureAfterChange": "     protected CollectionPermutationIter<V> createPermutationIterator(         Set<V> vertexSet1,         Set<V> vertexSet2)", "diff": ["-        // TODO hb 060208: REVIEW: Should the array be changed to an arrayList?", "-        Object [] flatVertexArray = new Object [vertexSet2.size()];", "+        V [] flatVertexArray = (V[]) new Object [vertexSet2.size()];", "-            new CollectionPermutationIter<V>(flatVertexArray, arrayPermIter);", "+            new CollectionPermutationIter<V>(", "+                Arrays.asList(flatVertexArray), arrayPermIter);"]}]}