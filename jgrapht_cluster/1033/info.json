{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80a1285d8d64d49070e70932d21b0e0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7915425979d974a66c2e14c845a5c6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private GraphVertexChangeEvent<V> createGraphVertexChangeEvent(         int eventType,         V vertex)", "signatureAfterChange": "      private GraphVertexChangeEvent<V> createGraphVertexChangeEvent(         int eventType,         V vertex)", "diff": ["-        if (m_reuseEvents) {", "-            m_reuseableVertexEvent.setType(eventType);", "-            m_reuseableVertexEvent.setVertex(vertex);", "+        if (reuseEvents) {", "+            reuseableVertexEvent.setType(eventType);", "+            reuseableVertexEvent.setVertex(vertex);", "-            return m_reuseableVertexEvent;", "+            return reuseableVertexEvent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def52da1119bf8afe032450c9a3acbbf", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/DefaultListenableGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent(         int eventType,         E edge)", "signatureAfterChange": "      private GraphEdgeChangeEvent<V, E> createGraphEdgeChangeEvent(         int eventType,         E edge)", "diff": ["-        if (m_reuseEvents) {", "-            m_reuseableEdgeEvent.setType(eventType);", "-            m_reuseableEdgeEvent.setEdge(edge);", "+        if (reuseEvents) {", "+            reuseableEdgeEvent.setType(eventType);", "+            reuseableEdgeEvent.setEdge(edge);", "-            return m_reuseableEdgeEvent;", "+            return reuseableEdgeEvent;"]}]}