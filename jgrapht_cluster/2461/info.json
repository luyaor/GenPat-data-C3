{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfc52189213e579261f5b59a55148ac5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5962fd9deeb82f69257bddb188138500", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "5e0a623da07f9a88365fbfbdcfe89366f3ec07c1", "commitAfterChange": "2bc963d635f1387003153797aed8f23b13ab7da1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void dagTest()", "signatureAfterChange": "      @Test     public void dagTest()", "diff": ["+\t// now all together in one call", "+\t", "+\tLcaRequestResponse<String> bg = new LcaRequestResponse<String>(\"b\", \"g\");", "+\tLcaRequestResponse<String> ed = new LcaRequestResponse<String>(\"e\", \"d\");", "+\tLcaRequestResponse<String> fd = new LcaRequestResponse<String>(\"f\", \"d\");", "+\tnew TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", bg, ed, fd);", "+\tAssert.assertEquals(\"b\",bg.getLca());", "+\tAssert.assertEquals(\"b\",ed.getLca());", "+\tAssert.assertEquals(\"d\",fd.getLca());", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f782fa3e79e86e55683bd754808be49", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/alg/TarjanLowestCommonAncestorTest.java", "commitBeforeChange": "2bc963d635f1387003153797aed8f23b13ab7da1", "commitAfterChange": "a4290d9c2b951f2351aab06bfad84c59bf804b25", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void dagTest()", "signatureAfterChange": "      @Test     public void dagTest()", "diff": ["-\tnew TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", bg, ed, fd);", "+\tList<LcaRequestResponse<String>> list = new LinkedList<LcaRequestResponse<String>> ();", "+\tlist.add(bg);", "+\tlist.add(ed);", "+\tlist.add(fd);", "+\t", "+\tList<String> result = new TarjanLowestCommonAncestor<String, DefaultEdge>(g).calculate(\"a\", list);", "+\t// check that the mutable input parameters have changed", "+\t// check the returned result is correct", "+\tAssert.assertEquals(Arrays.asList(new String[]{\"b\",\"b\",\"d\"}),result);", "+\t"]}]}