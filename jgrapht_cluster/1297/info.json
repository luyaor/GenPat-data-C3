{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcf81ddb042e4c1e808e1f3a66debb87", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0aaef358216670e5afba05bed79ed5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "ed2cbb336661a7c530df1b536156786620dc4d74", "commitAfterChange": "3cb4dd829f752b35738f90a951e2db0803eeb531", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "         public void vertexRemoved( Object v )", "signatureAfterChange": "         public void vertexRemoved( VertexEvent e )", "diff": ["-        public void vertexRemoved( Object v ) {", "-            if( m_vertexSet.contains( v ) ) {", "-                removeVertex( v );", "+        public void vertexRemoved( VertexEvent e ) {", "+            Object vertex = e.getVertex(  );", "+", "+            if( m_vertexSet.contains( vertex ) ) {", "+                removeVertex( vertex );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cd5d6d628dce47ae7f6d0cf24341dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/Subgraph.java", "commitBeforeChange": "424b0ec7722404258e24639bc0e721f201de2a6b", "commitAfterChange": "c8b5d8837c1cead78d9ff2891846e86bd421c184", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public boolean removeVertex( Object v )", "signatureAfterChange": "     public boolean removeVertex( Object v )", "diff": ["-        if( containsVertex( v ) ) {", "+        // If the base graph does NOT contain v it means we are here in ", "+        // response to removal of v from the base. In such case we don't need ", "+        // to remove all the edges of v as they were already removed. ", "+        if( containsVertex( v ) && m_base.containsVertex( v ) ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4a6a7bdc621341347f7feb50e4980f2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "96d44a9ae6e3d3923e0657aee3df5d8a34da488f", "commitAfterChange": "fd6ade3d5df69f4e95d0e8055a355f4e596aa63c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void lazyCalculateMatrix()", "signatureAfterChange": "     private void lazyCalculateMatrix()", "diff": ["+        boolean directed = graph instanceof DirectedGraph<?, ?>;", "-            int v_1 = vertices.indexOf(v1);", "-            int v_2 = vertices.indexOf(v2);", "+            int v_1 = vertexIndices.get(v1);", "+            int v_2 = vertexIndices.get(v2);", "-            if (!(graph instanceof DirectedGraph<?, ?>)) {", "+            if (!directed) {"]}]}