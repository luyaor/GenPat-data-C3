{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bce45f681be5490a5b5a9fee5027241f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "180d7bf415c0a5324f04481aa8634969", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\")     void handleJGraphInsertedVertex(GraphCell jVertex)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\")     void handleJGraphInsertedVertex(GraphCell jVertex)", "diff": ["-        if (m_vertexToCell.containsKey(jtVertex)) {", "+        if (vertexToCell.containsKey(jtVertex)) {", "-            m_jtGraph.addVertex(jtVertex);", "+            jtGraph.addVertex(jtVertex);", "-            m_cellToVertex.put(jVertex, jtVertex);", "-            m_vertexToCell.put(jtVertex, jVertex);", "+            cellToVertex.put(jVertex, jtVertex);", "+            vertexToCell.put(jtVertex, jVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4264c0d1cf6c98024fec08d68bed9d3d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     void handleJGraphInsertedEdge(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     void handleJGraphInsertedEdge(org.jgraph.graph.Edge jEdge)", "diff": ["-            V jtSource = m_cellToVertex.get(jSource);", "-            V jtTarget = m_cellToVertex.get(jTarget);", "+            V jtSource = cellToVertex.get(jSource);", "+            V jtTarget = cellToVertex.get(jTarget);", "-            E jtEdge = m_jtGraph.addEdge(jtSource, jtTarget);", "+            E jtEdge = jtGraph.addEdge(jtSource, jtTarget);", "-                m_cellToEdge.put(jEdge, jtEdge);", "-                m_edgeToCell.put(jtEdge, jEdge);", "+                cellToEdge.put(jEdge, jtEdge);", "+                edgeToCell.put(jtEdge, jEdge);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a6b506620f27ae071c5380142889605", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void handleJGraphTAddedVertex(V jtVertex)", "signatureAfterChange": "     void handleJGraphTAddedVertex(V jtVertex)", "diff": ["-        DefaultGraphCell vertexCell = m_cellFactory.createVertexCell(jtVertex);", "+        DefaultGraphCell vertexCell = cellFactory.createVertexCell(jtVertex);", "-        m_vertexToCell.put(jtVertex, vertexCell);", "-        m_cellToVertex.put(vertexCell, jtVertex);", "+        vertexToCell.put(jtVertex, vertexCell);", "+        cellToVertex.put(vertexCell, jtVertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98bb33bd0359e8a0949e7eec101581a6", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/ext/JGraphModelAdapter.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     void handleJGraphRemovedEdge(org.jgraph.graph.Edge jEdge)", "signatureAfterChange": "     void handleJGraphRemovedEdge(org.jgraph.graph.Edge jEdge)", "diff": ["-        if (m_cellToEdge.containsKey(jEdge)) {", "+        if (cellToEdge.containsKey(jEdge)) {", "-                m_cellToEdge.get(jEdge);", "+                cellToEdge.get(jEdge);", "-            m_jtGraph.removeEdge(jtEdge);", "+            jtGraph.removeEdge(jtEdge);", "-            m_cellToEdge.remove(jEdge);", "-            m_edgeToCell.remove(jtEdge);", "+            cellToEdge.remove(jEdge);", "+            edgeToCell.remove(jtEdge);"]}]}