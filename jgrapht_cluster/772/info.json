{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6094d72c490daa898b47e409bd3ac10", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c0450507ab60f65bb879f0f1543b685", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "4415679d62e7392826c454850d429845a11a41b2", "commitAfterChange": "7e355aab4948f18f6773fd808a3f18847ffa9f43", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public double getEdgeWeight(E e)", "signatureAfterChange": "      public double getEdgeWeight(E e)", "diff": ["-        // TODO what should I do then?", "-        throw new UnsupportedOperationException(\"not implemented yet\");", "+        throw new IllegalArgumentException(\"no such edge in the union\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9293725217aff2611ab0d70b2cb640d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/graph/AbstractGraph.java", "commitBeforeChange": "9d75fdc8cd3fdb7ad853c07b3c0691a84b8b4400", "commitAfterChange": "43d8da699cfb9aaf859d7ba2d16309d3ab885cff", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     protected boolean assertVertexExist(V v)", "signatureAfterChange": "     protected boolean assertVertexExist(V v)", "diff": ["-            throw new IllegalArgumentException(\"no such vertex in graph\");", "+            throw new IllegalArgumentException(\"no such vertex in graph: \" + v.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66260aaf81c21a0a00b3de3ed4c112b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/Graphs.java", "commitBeforeChange": "9d75fdc8cd3fdb7ad853c07b3c0691a84b8b4400", "commitAfterChange": "43d8da699cfb9aaf859d7ba2d16309d3ab885cff", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public static <V, E> V getOppositeVertex(Graph<V, E> g, E e, V v)", "signatureAfterChange": "     public static <V, E> V getOppositeVertex(Graph<V, E> g, E e, V v)", "diff": ["-            throw new IllegalArgumentException(\"no such vertex\");", "+            throw new IllegalArgumentException(\"no such vertex: \" + v.toString());"]}]}