{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c1a5d605b597dfbff9cb3aa39f4bf3c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bf67a713a46429cc928c765a171aa2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/dag/DirectedAcyclicGraph.java", "commitBeforeChange": "adaca642347b80042a0673a76d5c684c0cd29f4a", "commitAfterChange": "bfd68dc5cac3c6660f66170c69193fd7d58dd38b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public boolean addDagEdge(V fromVertex, V toVertex, E e)         throws CycleFoundException", "signatureAfterChange": "     public boolean addDagEdge(V fromVertex, V toVertex, E e)         throws CycleFoundException", "diff": ["-        Integer lb = topoOrderMap.getTopologicalIndex(toVertex);", "+        updateDag(fromVertex, toVertex);", "+", "+        return super.addEdge(fromVertex, toVertex, e);", "+    }", "-        if ((lb == null) || (ub == null)) {", "-        return super.addEdge(fromVertex, toVertex, e);", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3413ef3b03c0d44d611725fdc2d485", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "7acd462dd9b27baaee05cd7cb1743331738444cd", "commitAfterChange": "77d3536281d5009f64d3969a18ec7d765c16f646", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void initialize(VertexExtension source, VertexExtension sink, Queue<VertexExtension> active)", "signatureAfterChange": "      public void initialize(VertexExtension source, VertexExtension sink, Queue<VertexExtension> active)", "diff": ["-        for (V v : network.vertexSet()) {", "-            if (v == source.prototype) {", "-                // NOP", "-            } else {", "-                extendedVertex(v).label = 0;", "-            }", "-        }", "+        label(source, sink);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef73723b7a6fc8d37cf8a6be3822532", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/generator/LinearGraphGenerator.java", "commitBeforeChange": "bd796f1c3fb04a9fc0d1313aa7d1a1ad7acb2839", "commitAfterChange": "568d3d0e5e78e86a8be6eb7e94aac87086e98033", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void generateGraph( Graph target, VertexFactory vertexFactory,         Map resultMap )", "signatureAfterChange": "     public void generateGraph( Graph target, VertexFactory vertexFactory,         Map resultMap )", "diff": ["-            if( lastVertex != null ) {", "-                target.addEdge( lastVertex, newVertex );", "-            }", "-            else {", "+            if( lastVertex == null ) {", "+            else {", "+                target.addEdge( lastVertex, newVertex );", "+            }", "+"]}]}