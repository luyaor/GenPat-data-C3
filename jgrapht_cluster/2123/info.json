{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c30b1b1d8618766d0e9c4be95d0b5c00", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "640f940e967d8f56289e25ab5d216865", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/GraphOrdering.java", "commitBeforeChange": "689cbcc6d13f9b38252e7029be35f19942c29f8c", "commitAfterChange": "60b7d019273a541fe1adce1909b0933596c136ca", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public GraphOrdering(Graph<V, E> graph,                          boolean orderByDegree,                          boolean cacheEdges)", "signatureAfterChange": "     public GraphOrdering(Graph<V, E> graph,                          boolean orderByDegree,                          boolean cacheEdges)", "diff": ["-        mapOrderToVertex = new Object[vertexCount];", "+        mapOrderToVertex = new ArrayList<V>(vertexCount);", "-        outgoingEdges    = new int[vertexCount][];", "-        incomingEdges    = new int[vertexCount][];", "-        adjMatrix        = new Boolean[vertexCount][vertexCount];", "+        if (cacheEdges) {", "+            outgoingEdges = new int[vertexCount][];", "+            incomingEdges = new int[vertexCount][];", "+            adjMatrix = new Boolean[vertexCount][vertexCount];", "+        }", "-            mapVertexToOrder.put(vertex, i);", "-            mapOrderToVertex[i] = vertex;", "-", "-            outgoingEdges[i]   = null;", "-            incomingEdges[i++] = null;", "+            mapVertexToOrder.put(vertex, i++);", "+            mapOrderToVertex.add(vertex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89557828ae5caad9e155c5d87bfba966", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/BronKerboschCliqueFinder.java", "commitBeforeChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "commitAfterChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @SuppressWarnings(\"unchecked\"     private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "signatureAfterChange": "      private void findCliques(List<V> potential_clique,         List<V> candidates,         List<V> already_found)", "diff": ["-    @SuppressWarnings(\"unchecked\")    // FIXME hb 28-nov-05: See FIXME's below", "-        Object [] candidates_array = candidates.toArray();", "+        List<V> candidates_array = new ArrayList<V>(candidates);", "-            for (int i = 0; i < candidates_array.length; i++) {", "+            for (V candidate : candidates_array) {", "-                // FIXME hb 28-Nov-05: V-array is not possible, either use candidates.get(i) or accept the cast", "-                V candidate = (V) candidates_array[i];"]}]}