{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a4511ef59efd0f448b2454dbb020498", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "645b68df7bb5e596ea5a9d0f49ce2138", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "024fc7b86a9ced21b7444077ac5895f2b6a50bf9", "commitAfterChange": "54d7e11e1ecaccdb80a1aeb9ea081aac7e5d3e46", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void buildInternal()", "signatureAfterChange": "      protected void buildInternal()", "diff": ["-                EdgeExtensionBase   ex = extendedEdge(e);", "-                ex.source    = ux;", "-                ex.target    = vx;", "-                ex.capacity  = n.getEdgeWeight(e);", "-                ex.prototype = e;", "-", "-                EdgeExtensionBase iex = createInverse(ex);", "+                EdgeExtensionBase ex    = createEdge(ux, vx, e, n.getEdgeWeight(e));", "+                EdgeExtensionBase iex   = createInverse(ex, n);", "-                vx.getOutgoing().add(iex);", "+", "+                // NB: Any better?", "+                if (iex.prototype == null)", "+                    vx.getOutgoing().add(iex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd3a245f66f8924ed3549f70c7306665", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmBase.java", "commitBeforeChange": "2a4ee438a5228b57c798a805e93d64a050ce7112", "commitAfterChange": "ca153311ebb476220b5c58117cc53dc83fd78ea6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      protected void buildInternal()", "signatureAfterChange": "      protected void buildInternal()", "diff": ["-            VertexExtensionBase ux = vertexExtended0(u);", "+            VertexExtensionBase ux = extendedVertex(u);", "-                VertexExtensionBase vx = vertexExtended0(v);", "-                EdgeExtensionBase   ex = edgeExtended0(e);", "+                VertexExtensionBase vx = extendedVertex(v);", "+                EdgeExtensionBase   ex = extendedEdge(e);", "-                ex.source   = ux;", "-                ex.target   = vx;", "-                ex.capacity = n.getEdgeWeight(e);", "+                ex.source    = ux;", "+                ex.target    = vx;", "+                ex.capacity  = n.getEdgeWeight(e);", "+                ex.prototype = e;", "-                ux.outgoing.add(ex);", "-                vx.outgoing.add(iex);", "+                ux.getOutgoing().add(ex);", "+                vx.getOutgoing().add(iex);"]}]}