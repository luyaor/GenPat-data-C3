{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01d3d4fd70d4ab0da0ddf37caf96858f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c14fd0844ceb4bab5147bc0fa3ed44", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/CliqueMinimalSeparatorDecomposition.java", "commitBeforeChange": "b338dc522beb4643906288a4c91571a7ab1b1795", "commitAfterChange": "8b53e2969b312c1e6f35e85a43bc0437bf413b79", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r     public UndirectedGraph<V, E> getMinimalTriangulation()", "signatureAfterChange": "     public UndirectedGraph<V, E> getMinimalTriangulation()", "diff": ["-     */\r", "-    public UndirectedGraph<V, E> getMinimalTriangulation()\r", "-    {\r", "-        if (chordalGraph == null)\r", "-            computeMinimalTriangulation();\r", "-\r", "-        return chordalGraph;\r", "-    }\r", "+     */", "+    public UndirectedGraph<V, E> getMinimalTriangulation()", "+    {", "+        if (chordalGraph == null) {", "+            computeMinimalTriangulation();", "+        }", "+", "+        return chordalGraph;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3fc8f8f0d88dee7e1956a1bae9b119f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/alg/HamiltonianCycleTest.java", "commitBeforeChange": "40bf8c7c8736ae974ebda20b591cad2363132552", "commitAfterChange": "091e3a93111253d6f8a873c9ccbd9df0c1d9cfc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testHamiltonianCycle()", "signatureAfterChange": "     public void testHamiltonianCycle()", "diff": ["-            HamiltonianCycle.getApproximateOptimal(completeGraph).size() == 6);", "+            HamiltonianCycle.getApproximateOptimalForCompleteGraph(", "+                completeGraph).size() == 6);", "-            HamiltonianCycle.getApproximateOptimal(completeGraph) == null);", "+            HamiltonianCycle.getApproximateOptimalForCompleteGraph(", "+                completeGraph) == null);"]}]}