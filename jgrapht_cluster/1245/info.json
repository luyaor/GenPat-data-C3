{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "968cbba23e5903f1a5207ee9918aedfa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065e1be61b981a2d2aeb3ed3b28eb0f5", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V,E> target,         VertexFactory<V> vertexFactory,         Map<String,V> resultMap)", "diff": ["-                + \" org._3pq.jgrapht.generate.RandomGraphGenerator.DefaultEdgeTopologyFactory\");", "+                + \" org.jgrapht.generate.RandomGraphGenerator.DefaultEdgeTopologyFactory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a14997b5ef1a17eabedc0bca84d5502", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/util/AllUtilTests.java", "commitBeforeChange": "29379b02ebf0bdb164e7d101cabb2e10e1ad235d", "commitAfterChange": "365b81e853aa014a3b31dc574bf84d084e1d3a49", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        TestSuite suite = new TestSuite(\"Test for org._3pq.jgrapht.util\");", "+        TestSuite suite = new TestSuite(\"Test for org.jgrapht.util\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b2336621f2e33fdf823c7a236c3f76", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/EdmondsKarpMaximumFlow.java", "commitBeforeChange": "472f0bb505c636e46190385389321591507b03a6", "commitAfterChange": "c7e255b134eb3074adca695ec600547ec97bf100", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public EdmondsKarpMaximumFlow(DirectedGraph<V, E> network,         double epsilon)", "signatureAfterChange": "     public EdmondsKarpMaximumFlow(DirectedGraph<V, E> network,         double epsilon)", "diff": ["-                    \"capacities must be non-negative\");", "+                    \"invalid capacity (must be non-negative)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53396e7aff0bd1c0218cdc5d3f15f6fd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void testGarbageStringInvalidFirstLine()", "signatureAfterChange": "     public void testGarbageStringInvalidFirstLine()", "diff": ["-      testGarbage(input, \"not enough parts on first line\");", "+      testGarbage(input, \"Invalid Header\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b95f823660b0301495b37d2ebd5482", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testGarbageStringEnoughLines()", "signatureAfterChange": "     public void testGarbageStringEnoughLines()", "diff": ["-      testGarbage(input, \"unknown graph type\");", "+      testGarbage(input, \"Invalid Header\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722f38aebac36e056a23e90ab86619dd", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/edge/AllEdgeTests.java", "commitBeforeChange": "2a809e716ca8dd50187f8762d1fe3518ca90c92f", "commitAfterChange": "095b52b78534275d3325ac858e02c325eca0b2e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static Test suite(  )", "signatureAfterChange": "     public static Test suite(  )", "diff": ["-        TestSuite suite = new TestSuite( \"TestSuite for all edge test\" );", "+        TestSuite suite = new TestSuite( \"TestSuite for all edge tests\" );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f665316540b974949595db2bb305f4", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "1df4f6ec05a16b739e7739b1310c6980095dbcdd", "commitAfterChange": "938dd84db7cb09a097ad013d99329fa660a0391c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          @Override         public String toString()", "signatureAfterChange": "          @Override         public String toString()", "diff": ["-            return prototype.toString() + String.format(\" { F/CAP: %d / %d } \", flow, capacity);", "+            return prototype.toString() + String.format(\" { F/CAP: %f / %f } \", flow, capacity);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a819a17c5ea7e05416bb5ced78ddbf2b", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/IgnoreDirectionTest.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      String getExpectedStr1()", "signatureAfterChange": "      String getExpectedStr1()", "diff": ["-        return \"4,9,7,8,5,6,1,3,2\";", "+        return \"4,9,7,8,2,1,3,6,5\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8fc6285e148f5e72c0c96b3a64a9fe7", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "915acf67bde336fce1aee298fe506b6a9a961b70", "commitAfterChange": "1765efbe26afab29ef36b63b040e3f3e76836c78", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void testNonConfiguredUpdate()", "signatureAfterChange": "     public void testNonConfiguredUpdate()", "diff": ["-                     + \"a -- b;\\n\"", "+                     + \"a -- b // this is before the attributes for this test\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b7059ad951eb112f054d439b39e87f", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/traverse/IgnoreDirectionTest.java", "commitBeforeChange": "618193dfca3ac4de3a61698028cfd965351c74a1", "commitAfterChange": "fff40bd4cd855e6b017814afe0a8444e1360aae0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      String getExpectedStr2()", "signatureAfterChange": "      String getExpectedStr2()", "diff": ["-        return \"4,9,7,8,5,6,1,3,2,orphan\";", "+        return \"4,9,7,8,2,1,3,6,5,orphan\";", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3eead1f2356ead580ba3b4609a17200", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-ext/src/test/java/org/jgrapht/ext/DOTImporterTest.java", "commitBeforeChange": "583bedb628992418bdbd952ca092e65831d3b133", "commitAfterChange": "43aa0f5e11b9b56a524f92631cd31dc060fa1ca7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void testGarbageStringNotEnoughLines()", "signatureAfterChange": "     public void testGarbageStringNotEnoughLines()", "diff": ["-      testGarbage(input, \"Dot string was invalid\");", "+      testGarbage(input, \"Invalid Header\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8ec4fbf0ac53fc0fc50d4fbde4fdfe", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/GenericGraphsTest.java", "commitBeforeChange": "797bb93ca261451d93f28b9bb8848ce95b78d1c9", "commitAfterChange": "4c5b6aab4b3adff5cfc76ea4a4e59eeac27854b9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testAlissaHacker()", "signatureAfterChange": "      public void testAlissaHacker()", "diff": ["-        assertEquals(\"Alissa P. Hacker\", s);", "+        assertEquals(\"Alissa P. Hacker approves the edge from a to b\", s);"]}]}