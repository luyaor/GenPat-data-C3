{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "339dba134ee0b4b00b7ca08e4d3f12f6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7f588c3e98a5a3b811d82c0132b81d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/isomorphism/AdaptiveIsomorphismInspectorFactory.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "signatureAfterChange": "     public static <V,E> GraphIsomorphismInspector createIsomorphismInspector(         Graph<V,E> graph1,         Graph<V,E> graph2,         EquivalenceComparator<? super V,? super Graph<V,E>> vertexChecker,         EquivalenceComparator<? super E,? super Graph<V,E>> edgeChecker)", "diff": ["-    public static <V,E extends Edge<V>> GraphIsomorphismInspector createIsomorphismInspector(", "+    public static <V,E> GraphIsomorphismInspector createIsomorphismInspector("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f124e904727292b029af150dbdb64e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public static <V, E extends Edge<V>> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "signatureAfterChange": "     public static <V, E> List<E> findPathBetween(         Graph<V, E> graph,         V startVertex,         V endVertex)", "diff": ["-    public static <V, E extends Edge<V>> List<E> findPathBetween(", "+    public static <V, E> List<E> findPathBetween("]}]}