{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76a383f2f0dcd48609bc713fe5d70936", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c623ea94badde77784edd9b54791acc", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/generate/RandomGraphGenerator.java", "commitBeforeChange": "7e56ac8164b9ab664812d95ba3304a03dad6203a", "commitAfterChange": "4d4d3e7d82c8c87eb6db77a12d83d53d12d734bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "signatureAfterChange": "     public void generateGraph(         Graph<V, E> target,         VertexFactory<V> vertexFactory,         Map<String, V> resultMap)", "diff": ["+        if (target.vertexSet().size() != numOfVertexes) {", "+            throw new IllegalArgumentException(", "+                \"Vertex factory did not produce \" + numOfVertexes +", "+                \" distinct vertices.\");", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed75eff5c93c5d70ebed62b9c0d1767d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/DijkstraShortestPath.java", "commitBeforeChange": "814806a526ac5cd0ec6456873087c2436693094e", "commitAfterChange": "ee669eeadb218d4615d2eaa8082ec262a58b20ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "signatureAfterChange": "     public DijkstraShortestPath(         Graph<V, E> graph,         V startVertex,         V endVertex,         double radius)", "diff": ["+        if (!graph.containsVertex(endVertex)) {", "+            throw new IllegalArgumentException(", "+                \"graph must contain the end vertex\");", "+        }", "+        "]}]}