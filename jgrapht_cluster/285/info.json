{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "727ca56ccfe097b870a47c6d03bb4768", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a203fb6f00ee05c4388ca6b348848a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/GraphUnion.java", "commitBeforeChange": "c1b18555a2f28acb0ec5c4b00226afe9c678f1ef", "commitAfterChange": "6e498e9ccac4b4fbbcc67c5c09c3aad5cb9f822a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "signatureAfterChange": "      public Set<E> getAllEdges(V sourceVertex, V targetVertex)", "diff": ["-        res.addAll(g1.getAllEdges(sourceVertex, targetVertex));", "-        res.addAll(g2.getAllEdges(sourceVertex, targetVertex));", "+        if (g1.containsVertex(sourceVertex) && g1.containsVertex(targetVertex)) {", "+            res.addAll(g1.getAllEdges(sourceVertex, targetVertex));", "+        }", "+        if (g2.containsVertex(sourceVertex) && g2.containsVertex(targetVertex)) {", "+            res.addAll(g2.getAllEdges(sourceVertex, targetVertex));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af940e772ea51c7f3df9d10d1c713e0", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/test/java/org/jgrapht/graph/EqualsAndHashCodeTest.java", "commitBeforeChange": "88cb62bfa22e40bbfbee26239b8d2f78fd3b5d5c", "commitAfterChange": "800ec7581b0da0990449fdb10e903a3689aa2884", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testAsWeightedGraphs()", "signatureAfterChange": "     public void testAsWeightedGraphs()", "diff": ["+        assertEquals(g2.hashCode(), g1.hashCode());", "+", "+        assertEquals(g4.hashCode(), g3.hashCode());", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f295436e48abd67c09c898eda46708", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void assertIsomorphic(         Graph<Integer,DefaultEdge> [] graphs,         boolean shouldTheyBeIsomorphic,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\") \tprivate void assertIsomorphic(         Graph<Integer,DefaultEdge> [] graphs,         boolean shouldTheyBeIsomorphic,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-    private void assertIsomorphic(", "+    @SuppressWarnings(\"unchecked\")", "+\tprivate void assertIsomorphic(", "-        IsomorphismRelation isioResult;", "-            isioResult = (IsomorphismRelation) iso.next();", "+            IsomorphismRelation isioResult = (IsomorphismRelation) iso.next();", "-            // if (counter==0)", "-            // {", "-            // System.out.println(\"Graphs are isomorphic. Iterating over all", "-            // options:\");", "-            // }", "-            // System.out.println(counter+\" : \"+isioResult);", "+            if (false) {", "+                if (counter==0)", "+                {", "+                    System.out.println(\"Graphs are isomorphic. Iterating over all options:\");", "+                }", "+                System.out.println(counter+\" : \"+isioResult);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdda043494159952563902ac492533d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/permutation/CompoundPermutationIterTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void testGetNext()", "signatureAfterChange": "     public void testGetNext()", "diff": ["-            // System.out.println(ArraysUtility.toString(resultArray));", "+            if (false) {", "+                System.out.println(ArrayUtil.toString(resultArray));", "+            }", "-            // System.out.println(ArraysUtility.toString(resultArray));", "+            if (false) {", "+                System.out.println(ArrayUtil.toString(resultArray));", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f5eddc9b6cca571dbef49f84bede84", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/experimental/isomorphism/IsomorphismInspectorTest.java", "commitBeforeChange": "16285fc735125684f525244baa1af05c7e3b89ee", "commitAfterChange": "ff54bec324648e52ae4dae6f81ce89c54758dce1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private void checkRelation(         Graph<Integer,DefaultEdge> [] graphs,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "signatureAfterChange": "      @SuppressWarnings(\"unchecked\") \tprivate void checkRelation(         Graph<Integer,DefaultEdge> [] graphs,         EquivalenceComparator vertexChecker,         EquivalenceComparator edgeChecker)", "diff": ["-    private void checkRelation(", "+    @SuppressWarnings(\"unchecked\")", "+\tprivate void checkRelation(", "-        int counter = 0;", "-                // System.out.println(\"Vertex relation \"+v1+\" to \" +v2);", "+                if (false) {", "+                    System.out.println(\"Vertex relation \"+v1+\" to \" +v2);", "+                }", "-                // System.out.println(\"Vertex relation \"+e1+\" to \" +e2);", "+                if (false) {", "+                    System.out.println(\"Vertex relation \"+e1+\" to \" +e2);", "+                }"]}]}