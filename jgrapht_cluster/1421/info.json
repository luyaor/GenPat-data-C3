{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61a45b69de9f828a72e4944fdf4fbd42", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebd7c2c9f19f02fb40d409c72d2a22d", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "commitAfterChange": "3358959abc414f2281c71486c6c1a90935b1e909", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\"     public Object clone()", "signatureAfterChange": "     public Object clone()", "diff": ["-    @SuppressWarnings(\"unchecked\")    //FIXME hb 28-nov-05: See FIXME below", "-            //FIXME hb 28-nov-05: In order to flow with Java-Generics, an appropriate constructor should be created (cf. Collections)", "+            TypeUtil<AbstractBaseGraph<V,E>> typeDecl = null;", "+            ", "-                (AbstractBaseGraph) super.clone();", "+                TypeUtil.uncheckedCast(super.clone(), typeDecl);", "-            newGraph.m_vertexMap = new LinkedHashMap<V, Object>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f97969a62b0b1e586dbff0e335d27a68", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public Object clone()", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\" \tpublic Object clone()", "diff": ["-    public Object clone()", "+    @SuppressWarnings(\"unchecked\")\t//FIXME hb 28-nov-05: See FIXME below", "+\tpublic Object clone()", "+        \t//FIXME hb 28-nov-05: In order to flow with Java-Generics, an appropriate constructor should be created (cf. Collections)", "-            newGraph.m_vertexMap = new LinkedHashMap();", "-            newGraph.m_edgeSet = new LinkedHashSet();", "+            newGraph.m_vertexMap = new LinkedHashMap<V, Object>();", "+            newGraph.m_edgeSet = new LinkedHashSet<E>();"]}]}