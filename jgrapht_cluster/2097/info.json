{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f76aea0bb013b03452e5a0c523b0dc4d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50716bf77af41f3bbba6f1abd09b868e", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/TopologicalOrderIterator.java", "commitBeforeChange": "8262a3a0c02c409f150e557da1701ecf29695733", "commitAfterChange": "e3324fcf29e01b8e5e936e03391ae8c740377d35", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "signatureAfterChange": "     private TopologicalOrderIterator(         DirectedGraph<V, E> dg,         Queue<V> queue,         Map<V, ModifiableInteger> inDegreeMap)", "diff": ["-        assert (queue.isEmpty());", "+        // empty queue would indicate presence of cycles (no roots found)", "+        assert (!queue.isEmpty());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce46fd9a1a7da1ea6cda04fcdd73497", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/HopcroftKarpBipartiteMatching.java", "commitBeforeChange": "efe61ca0b53048155beb3456ea59998da59482c9", "commitAfterChange": "a8056d6aafd19ddde3f88a7357d27b280fbbac76", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \t \tpublic HopcroftKarpBipartiteMatching(UndirectedGraph<V, E> graph, Set<V> partition1, Set<V> partition2)", "signatureAfterChange": " \t \t \tpublic HopcroftKarpBipartiteMatching(UndirectedGraph<V, E> graph, Set<V> partition1, Set<V> partition2)", "diff": ["-\t\tthis.checkInputData();", "+\t\tassert this.checkInputData();"]}]}