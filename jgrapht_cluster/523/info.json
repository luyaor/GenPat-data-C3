{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9e84a7aca66febc35fde677368435cf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b84dbcca1939acbf33d401deef31733", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "b261cb99c92126b64c9129dbe772684f0da5e234", "commitAfterChange": "22927827f36ad9b2cef7c5f5670c4d2598840023", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public GraphPath<V, E> shortestPath(V a, V b)", "signatureAfterChange": "     public GraphPath<V, E> shortestPath(V a, V b)", "diff": ["-    public GraphPath<V, E> shortestPath(V a, V b) {", "-", "-        if (d == null)", "+    public GraphPath<V, E> shortestPath(V a, V b)", "+    {", "+        if (d == null) {", "+        }", "-        if (edges.size() < 1)", "+        if (edges.size() < 1) {", "+        }", "-        GraphPathImpl<V, E> path = new GraphPathImpl<V, E>(graph, a, b, edges, edges.size());", "+        GraphPathImpl<V, E> path =", "+            new GraphPathImpl<V, E>(graph, a, b, edges, edges.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8abe37d24fa55bf231d4445d9ef23901", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/alg/FloydWarshallShortestPaths.java", "commitBeforeChange": "b261cb99c92126b64c9129dbe772684f0da5e234", "commitAfterChange": "22927827f36ad9b2cef7c5f5670c4d2598840023", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public int lazyCalculatePaths()", "signatureAfterChange": "     public int lazyCalculatePaths()", "diff": ["-    public int lazyCalculatePaths() {", "-", "+    public int lazyCalculatePaths()", "+    {", "-        if (d == null)", "+        if (d == null) {", "+        }", "-        Map<VertexPair<V>, GraphPath<V, E>> sps = new HashMap<VertexPair<V>, GraphPath<V, E>>();", "+        Map<VertexPair<V>, GraphPath<V, E>> sps =", "+            new HashMap<VertexPair<V>, GraphPath<V, E>>();", "-", "-", "-                if (i == j)", "+                if (i == j) {", "+                }"]}]}