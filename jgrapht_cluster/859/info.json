{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bc747479bc04a3f680f4bf4f90588e2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028cd638863348ecb4c353831b94c6c2", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      static Specifics createGraphSpecifics(Graph g)", "signatureAfterChange": "     @SuppressWarnings(\"unchecked\" \tstatic <V, E extends Edge<V>> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "diff": ["-    static Specifics createGraphSpecifics(Graph g)", "+     */", "+    @SuppressWarnings(\"unchecked\")\t// TODO hb 27-Nov-05: See FIXME below", "+\tstatic <V, E extends Edge<V>> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "+            // TODO hb 27-Nov-05: I don't understand, yet, how to cast this nicely", "-            return new UndirectedSpecifics(g);", "+            return new UndirectedSpecifics<V, E>(g);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a958e75356e5a974d5047a50044860", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/CrossComponentIterator.java", "commitBeforeChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "commitAfterChange": "857bf50cc4b146a4020c6dc6b730687dfcd7de35", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     @SuppressWarnings(\"unchecked\"     static <V, E> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "signatureAfterChange": "     static <V, E> Specifics<V, E> createGraphSpecifics(Graph<V, E> g)", "diff": ["-    @SuppressWarnings(\"unchecked\")    // TODO hb 27-Nov-05: See FIXME below", "-            // TODO hb 27-Nov-05: I don't understand, yet, how to cast this nicely", "-            return new DirectedSpecifics((DirectedGraph) g);", "+            return new DirectedSpecifics((DirectedGraph<V, E>) g);"]}]}