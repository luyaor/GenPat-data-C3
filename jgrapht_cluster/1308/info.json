{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00fd30b95c2d38df7ff75a3ad8666348", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a9738b64b06aeac916c77975f1214a8", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "3f8899078adfe5315dc0aeb978ba35bda0df1615", "commitAfterChange": "323f50ff50f0763160c18603b341aaf64f3f86fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isFeasiblePair()", "signatureAfterChange": "     public boolean isFeasiblePair()", "diff": ["-        int termOut1 = 0,", "-            termOut2 = 0,", "-            termIn1 = 0,", "-            termIn2 = 0,", "-            new1 = 0,", "-            new2 = 0;", "+        int termOutPred1 = 0,", "+            termOutPred2 = 0,", "+            termInPred1 = 0,", "+            termInPred2 = 0,", "+            newPred1 = 0,", "+            newPred2 = 0,", "+            termOutSucc1 = 0,", "+            termOutSucc2 = 0,", "+            termInSucc1 = 0,", "+            termInSucc2 = 0,", "+            newSucc1 = 0,", "+            newSucc2 = 0;", "-                    termIn1++;", "+                    termInSucc1++;", "-                    termOut1++;", "+                    termOutSucc1++;", "-                    new1++;", "+                    newSucc1++;", "-                    termIn1++;", "+                    termInPred1++;", "-                    termOut1++;", "+                    termOutPred1++;", "-                    new1++;", "+                    newPred1++;", "-                    termIn2++;", "+                    termInSucc2++;", "-                    termOut2++;", "+                    termOutSucc2++;", "-                    new2++;", "+                    newSucc2++;", "-                    termIn2++;", "+                    termInPred2++;", "-                    termOut2++;", "+                    termOutPred2++;", "-                    new2++;", "+                    newPred2++;", "-        if (termIn1 >= termIn2 && termOut1 >= termOut2 && new1 >= new2) {", "+        if (termInPred1 >= termInPred2 && termOutPred1 >= termOutPred2 && newPred1 >= newPred2 && termInSucc1 >= termInSucc2 && termOutSucc1 >= termOutSucc2 && newSucc1 >= newSucc2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3bd89b912163e1fa3b039759be05e59", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/VF2SubState.java", "commitBeforeChange": "b0ffaa521363d5faf1bf5b397f78265b9ab95ae6", "commitAfterChange": "3f8899078adfe5315dc0aeb978ba35bda0df1615", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public boolean isFeasiblePair()", "signatureAfterChange": "     public boolean isFeasiblePair()", "diff": ["+        String pairstr  = \"(\" + g1.getVertex(addVertex1) + \", \" +", "+                        g2.getVertex(addVertex2) + \")\",", "+               abortmsg = indent + \"isFeasiblePair> \" + pairstr + \" passt nicht ins aktuelle Matching\";", "-                                                    addVertex2, other2))", "+                                                    addVertex2, other2))    {", "+                    System.out.println(abortmsg);", "+                }", "-                                                    other2, addVertex2))", "+                                                    other2, addVertex2))    {", "+                    System.out.println(abortmsg);", "+                }", "-                if (!g1.hasEdge(addVertex1, other1))", "+                if (!g1.hasEdge(addVertex1, other1))    {", "+                    System.out.println(abortmsg);", "+                }", "-                if (!g1.hasEdge(other1, addVertex1))", "+                if (!g1.hasEdge(other1, addVertex1))    {", "+                    System.out.println(abortmsg);", "+                }", "-        return termIn1 >= termIn2 && termOut1 >= termOut2 && new1 >= new2;", "+        if (termIn1 >= termIn2 && termOut1 >= termOut2 && new1 >= new2) {", "+            System.out.println(indent + \"isFeasiblePair> \" + pairstr + \" passt\");", "+            return true;", "+        } else {", "+            System.out.println(abortmsg);", "+            return false;", "+        }"]}]}