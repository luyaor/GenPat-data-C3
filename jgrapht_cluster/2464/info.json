{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac1089727c95f6731929281954d56f1d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc52d5aa784d55870c021ca89481427", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/_3pq/jgrapht/alg/isomorphism/AbstractExhaustiveIsomorphismInspector.java", "commitBeforeChange": "dd14e683f649f6134a6a191da9a4899af88c4041", "commitAfterChange": "b4805f5d86b128879dfab0c1dd754e481a6373b2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void init()", "signatureAfterChange": "     private void init()", "diff": ["-            new PrefetchIterator(new AbstractExhaustiveIsomorphismInspector.NextFunctor());", "+            new PrefetchIterator<IsomorphismRelation>(", "+                    // XXX hb 280106: I don't understand this warning, yet :-)", "+                    new AbstractExhaustiveIsomorphismInspector.NextFunctor()", "+                    );", "-        this.graph1VertexSet = new LinkedHashSet(this.graph1.vertexSet());", "+        this.graph1VertexSet = new LinkedHashSet<V>(this.graph1.vertexSet());", "-            new GraphOrdering(this.graph1VertexSet, this.graph1.edgeSet());", "+            new GraphOrdering<V,E>(this.graph1VertexSet, this.graph1.edgeSet());", "-        this.graph2EdgeSet = new LinkedHashSet(this.graph2.edgeSet());", "+        this.graph2EdgeSet = new LinkedHashSet<E>(this.graph2.edgeSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d20fd9b3665d3be4937a7e4330e319d1", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SubgraphTest.java", "commitBeforeChange": "08c0860ef8b6386a295ff8a74d8673cb3c9d9a02", "commitAfterChange": "c3e5aa9fad3b9e0927939b2a916ae5049377758b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void testSubgraph()", "signatureAfterChange": "     public void testSubgraph()", "diff": ["-        Graph<String, Edge<String>> g = init(false);", "-        Subgraph<String, Edge<String>> sub = new Subgraph<String, Edge<String>>(g, null, null);", "+        Graph<String, DefaultEdge> g = init(false);", "+        Subgraph<String, DefaultEdge> sub = new Subgraph<String, DefaultEdge>(g, null, null);", "-        sub = new Subgraph<String, Edge<String>>(g, vset, null);", "+        sub = new Subgraph<String, DefaultEdge>(g, vset, null);", "-        sub = new Subgraph<String, Edge<String>>(g, vset, new HashSet<Edge<String>>(g.getAllEdges(_v1, _v2)));", "+        sub = new Subgraph<String, DefaultEdge>(g, vset, new HashSet<DefaultEdge>(g.getAllEdges(_v1, _v2)));"]}]}