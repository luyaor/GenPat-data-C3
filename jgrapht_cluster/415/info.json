{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86cff74c76dcc6c609238b86b2b5dd04", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7f051d82be6e289267238a0cb6a154", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "77d3536281d5009f64d3969a18ec7d765c16f646", "commitAfterChange": "866eb12fc5aea5605a3a4d6d43a44dad4c6846ab", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private boolean discharge(EdgeExtension ex)", "signatureAfterChange": "       private boolean discharge(EdgeExtension ex)", "diff": ["+", "+", "+        // _DBG", "+        if (DIAGNOSTIC_ENABLED)", "+            diagnostic.incrementDischarges(ex);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863becb5f5b905d145a7726df5818b9a", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "77d3536281d5009f64d3969a18ec7d765c16f646", "commitAfterChange": "866eb12fc5aea5605a3a4d6d43a44dad4c6846ab", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "      private void relabel(VertexExtension vx)", "signatureAfterChange": "      private void relabel(VertexExtension vx)", "diff": ["+", "+        // _DBG", "+        if (DIAGNOSTIC_ENABLED)", "+            diagnostic.incrementRelabels(vx.label, min + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50bc64b96901602ccb5a735ce86a1ca", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/PushRelabelMaximumFlow.java", "commitBeforeChange": "77d3536281d5009f64d3969a18ec7d765c16f646", "commitAfterChange": "866eb12fc5aea5605a3a4d6d43a44dad4c6846ab", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @Override     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "signatureAfterChange": "      @Override     public MaximumFlow<V, E> buildMaximumFlow(V source, V sink)", "diff": ["+        // _DBG", "+        if (DIAGNOSTIC_ENABLED)", "+            diagnostic.dump();", "+"]}]}