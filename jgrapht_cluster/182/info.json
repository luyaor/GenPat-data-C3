{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92bfd24166f687cb818281db5d588731", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0689eb77e7373d7b95c5e80e9e8fa3d9", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/SubgraphIsomorphismRelation.java", "commitBeforeChange": "ae864cab55715cbe3ee2fa1a05734b4fcd4f3411", "commitAfterChange": "aa92fe16c7852c9f9d1bf3a60c5718fcffd0ae0a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic E getEdgeCorrespondence(E e, boolean forward)", "signatureAfterChange": "  \t@Override \tpublic E getEdgeCorrespondence(E e, boolean forward)", "diff": ["-\t\treturn null;", "+\t\treturn e2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92da0850df182de27b926bad8e308f80", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/traverse/ClosestFirstIterator.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public E getSpanningTreeEdge(V vertex)", "signatureAfterChange": "     public E getSpanningTreeEdge(V vertex)", "diff": ["-        return node.getData().m_spanningTreeEdge;", "+        return node.getData().spanningTreeEdge;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1b83a6775e1cce271bd1f7a46efa31", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "src/org/jgrapht/graph/AbstractBaseGraph.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public boolean isAllowingLoops()", "signatureAfterChange": "     public boolean isAllowingLoops()", "diff": ["-        return m_allowingLoops;", "+        return allowingLoops;"]}]}