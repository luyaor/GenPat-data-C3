{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a14dc6027df825261fbad4e09516a00", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d10239fc830671719537657d0658b71", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "aa92fe16c7852c9f9d1bf3a60c5718fcffd0ae0a", "commitAfterChange": "cb1cae1f97dd9ffd761a89cc949eb78f64d8e9dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic int[] getInEdges(int vertexOrder)", "signatureAfterChange": " \t \tpublic int[] getInEdges(int vertexOrder)", "diff": ["-\t\tV v            = mapOrderToVertex.get(new Integer(vertexOrder));", "-\t\tSet<E> edgeSet = new HashSet<E>();", "+\t\tif (incomingEdges[vertexOrder] != null)", "+\t\t\treturn incomingEdges[vertexOrder];", "+\t\t", "+\t\tV v            = getVertex(vertexOrder);", "+\t\tSet<E> edgeSet = null;", "-\t\treturn vertexArray;", "+\t\treturn incomingEdges[vertexOrder] = vertexArray;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "986bc085df86f3ff43e4161d9bfdd4fa", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "jgrapht-core/src/main/java/org/jgrapht/experimental/subgraphisomorphism/GraphOrdering.java", "commitBeforeChange": "aa92fe16c7852c9f9d1bf3a60c5718fcffd0ae0a", "commitAfterChange": "cb1cae1f97dd9ffd761a89cc949eb78f64d8e9dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic int[] getOutEdges(int vertexOrder)", "signatureAfterChange": " \t \tpublic int[] getOutEdges(int vertexOrder)", "diff": ["-\t\tV v            = mapOrderToVertex.get(new Integer(vertexOrder));", "-\t\tSet<E> edgeSet = new HashSet<E>();", "+\t\tif (outgoingEdges[vertexOrder] != null)", "+\t\t\treturn outgoingEdges[vertexOrder];", "+\t\t", "+\t\tV v            = getVertex(vertexOrder);", "+\t\tSet<E> edgeSet = null;", "-\t\treturn vertexArray;", "+\t\treturn outgoingEdges[vertexOrder] = vertexArray;"]}]}