{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b120ba19a5674dcb67da5b1f5d12e0ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e487612a33e4c88e8ac7c5fd17e05506", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/_3pq/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "c0b16b6556c96539006185d958b0f5e843675e68", "commitAfterChange": "b1382aa25544721cf9f8cd8ebbac3a2da4113463", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       private void init(  )", "signatureAfterChange": "       private void init(  )", "diff": ["-        GraphFactory gf = GraphFactory.getFactory();", "-        gEmpty     = gf.createSimpleDirectedGraph(  );", "-        g1         = gf.createSimpleDirectedGraph(  );", "-        g2         = gf.createSimpleDirectedGraph(  );", "-        g3         = gf.createSimpleDirectedGraph(  );", "-        g4         = gf.createSimpleDirectedGraph(  );", "+        GraphFactory gf = GraphFactory.getFactory(  );", "+        m_gEmpty     = gf.createSimpleDirectedGraph(  );", "+        m_g1         = gf.createSimpleDirectedGraph(  );", "+        m_g2         = gf.createSimpleDirectedGraph(  );", "+        m_g3         = gf.createSimpleDirectedGraph(  );", "+        m_g4         = gf.createSimpleDirectedGraph(  );", "-        eFactory     = g1.getEdgeFactory(  );", "-        eLoop        = (DirectedEdge) eFactory.createEdge( v1, v1 );", "+        m_eFactory     = m_g1.getEdgeFactory(  );", "+        m_eLoop        = (DirectedEdge) m_eFactory.createEdge( m_v1, m_v1 );", "-        g1.addVertex( v1 );", "+        m_g1.addVertex( m_v1 );", "-        g2.addVertex( v1 );", "-        g2.addVertex( v2 );", "-        g2.addEdge( v1, v2 );", "-        g2.addEdge( v2, v1 );", "+        m_g2.addVertex( m_v1 );", "+        m_g2.addVertex( m_v2 );", "+        m_g2.addEdge( m_v1, m_v2 );", "+        m_g2.addEdge( m_v2, m_v1 );", "-        g3.addVertex( v1 );", "-        g3.addVertex( v2 );", "-        g3.addVertex( v3 );", "-        g3.addEdge( v1, v2 );", "-        g3.addEdge( v2, v1 );", "-        g3.addEdge( v2, v3 );", "-        g3.addEdge( v3, v2 );", "-        g3.addEdge( v3, v1 );", "-        g3.addEdge( v1, v3 );", "+        m_g3.addVertex( m_v1 );", "+        m_g3.addVertex( m_v2 );", "+        m_g3.addVertex( m_v3 );", "+        m_g3.addEdge( m_v1, m_v2 );", "+        m_g3.addEdge( m_v2, m_v1 );", "+        m_g3.addEdge( m_v2, m_v3 );", "+        m_g3.addEdge( m_v3, m_v2 );", "+        m_g3.addEdge( m_v3, m_v1 );", "+        m_g3.addEdge( m_v1, m_v3 );", "-        g4.addVertex( v1 );", "-        g4.addVertex( v2 );", "-        g4.addVertex( v3 );", "-        g4.addVertex( v4 );", "-        g4.addEdge( v1, v2 );", "-        g4.addEdge( v2, v3 );", "-        g4.addEdge( v3, v4 );", "-        g4.addEdge( v4, v1 );", "+        m_g4.addVertex( m_v1 );", "+        m_g4.addVertex( m_v2 );", "+        m_g4.addVertex( m_v3 );", "+        m_g4.addVertex( m_v4 );", "+        m_g4.addEdge( m_v1, m_v2 );", "+        m_g4.addEdge( m_v2, m_v3 );", "+        m_g4.addEdge( m_v3, m_v4 );", "+        m_g4.addEdge( m_v4, m_v1 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7143029387fc52ca0b7df643c8a73ad", "repository": "https://github.com/jgrapht/jgrapht", "fileName": "testsrc/org/jgrapht/graph/SimpleDirectedGraphTest.java", "commitBeforeChange": "33ca765ae7b002dbbdb4d2d0058e24aa73ac2858", "commitAfterChange": "840e66567786fb3f382b5b59966f8c2a0110c6bb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "      private void init()", "signatureAfterChange": "      private void init()", "diff": ["-        m_gEmpty = new SimpleDirectedGraph<String, DefaultEdge>(", "+        gEmpty = new SimpleDirectedGraph<String, DefaultEdge>(", "-        m_g1 = new SimpleDirectedGraph<String, DefaultEdge>(", "+        g1 = new SimpleDirectedGraph<String, DefaultEdge>(", "-        m_g2 = new SimpleDirectedGraph<String, DefaultEdge>(", "+        g2 = new SimpleDirectedGraph<String, DefaultEdge>(", "-        m_g3 = new SimpleDirectedGraph<String, DefaultEdge>(", "+        g3 = new SimpleDirectedGraph<String, DefaultEdge>(", "-        m_g4 = new SimpleDirectedGraph<String, DefaultEdge>(", "+        g4 = new SimpleDirectedGraph<String, DefaultEdge>(", "-        m_eFactory = m_g1.getEdgeFactory();", "-        m_eLoop = m_eFactory.createEdge(m_v1, m_v1);", "+        eFactory = g1.getEdgeFactory();", "+        eLoop = eFactory.createEdge(v1, v1);", "-        m_g1.addVertex(m_v1);", "+        g1.addVertex(v1);", "-        m_g2.addVertex(m_v1);", "-        m_g2.addVertex(m_v2);", "-        m_g2.addEdge(m_v1, m_v2);", "-        m_g2.addEdge(m_v2, m_v1);", "+        g2.addVertex(v1);", "+        g2.addVertex(v2);", "+        g2.addEdge(v1, v2);", "+        g2.addEdge(v2, v1);", "-        m_g3.addVertex(m_v1);", "-        m_g3.addVertex(m_v2);", "-        m_g3.addVertex(m_v3);", "-        m_g3.addEdge(m_v1, m_v2);", "-        m_g3.addEdge(m_v2, m_v1);", "-        m_g3.addEdge(m_v2, m_v3);", "-        m_g3.addEdge(m_v3, m_v2);", "-        m_g3.addEdge(m_v3, m_v1);", "-        m_g3.addEdge(m_v1, m_v3);", "+        g3.addVertex(v1);", "+        g3.addVertex(v2);", "+        g3.addVertex(v3);", "+        g3.addEdge(v1, v2);", "+        g3.addEdge(v2, v1);", "+        g3.addEdge(v2, v3);", "+        g3.addEdge(v3, v2);", "+        g3.addEdge(v3, v1);", "+        g3.addEdge(v1, v3);", "-        m_g4.addVertex(m_v1);", "-        m_g4.addVertex(m_v2);", "-        m_g4.addVertex(m_v3);", "-        m_g4.addVertex(m_v4);", "-        m_g4.addEdge(m_v1, m_v2);", "-        m_g4.addEdge(m_v2, m_v3);", "-        m_g4.addEdge(m_v3, m_v4);", "-        m_g4.addEdge(m_v4, m_v1);", "+        g4.addVertex(v1);", "+        g4.addVertex(v2);", "+        g4.addVertex(v3);", "+        g4.addVertex(v4);", "+        g4.addEdge(v1, v2);", "+        g4.addEdge(v2, v3);", "+        g4.addEdge(v3, v4);", "+        g4.addEdge(v4, v1);"]}]}