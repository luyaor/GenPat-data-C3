{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Test\r \tpublic void binaryPrefixInnerTargetNotFound() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 1, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["+\t\t\tallowing(evaluator).getRuntimeContext();\r", "+\t\t\twill(returnValue(runtime));\r", "+\t\t\tallowing(runtime).extendedCamel(\"find String\");\r", "+\t\t\twill(returnValue(\"findString\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "+\t\t\twill(returnValue(\"showString\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "+\t\t\twill(returnValue(\"findDoAction\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "+\t\t\twill(returnValue(\"showDoAction\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "+\t\t\twill(returnValue(\"findBoolean\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "+\t\t\twill(returnValue(\"showBoolean\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\" m\");\r", "+\t\t\twill(returnValue(\"m\"));\r", "-\t\t\t  will(returnValue(null));\r", "+\t\t\twill(returnValue(null));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \t@Test\r \tpublic void binaryPrefixInnerTargetNotFound() throws Exception", "id": "1f41dd39e43d189c23ed73a4b7617236", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void startingStorytest()", "fileName": "test/fitlibrary/flow/DoFlowDriver.java", "methodNumberAfterChange": 3, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["-\t\t\tallowing(tableListener).getTestResults();\r", "-\t\t\t   will(returnValue(testResults));\r", "-\t\t\tallowing(runtime).getResolver();\r", "-\t\t\t   will(returnValue(resolver));\r", "-\t\t\tallowing(runtimeCopy).getResolver();\r", "-\t\t\t   will(returnValue(resolver));\r", "+\t\t\tallowing(runtime).getConfiguration(); will(returnValue(config));\r", "+\t\t\tallowing(runtimeCopy).getConfiguration(); will(returnValue(config));\r", "+\t\t\tallowing(config).isAddTimings(); will(returnValue(false));\r", "+\t\t\tallowing(tableListener).getTestResults(); will(returnValue(testResults));\r", "+\t\t\tallowing(runtime).getResolver(); will(returnValue(resolver));\r", "+\t\t\tallowing(runtimeCopy).getResolver(); will(returnValue(resolver));\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tpublic void startingStorytest()", "id": "8a5e5f5d411d5180c23d84ef752e160c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "6445e365db6adfcef83d93b4d4a07c2f", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}