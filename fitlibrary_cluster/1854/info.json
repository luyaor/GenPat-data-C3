{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic String resolve(String locator)", "fileName": "src/fitlibrary/dynamicVariable/DynamicVariablesMap.java", "methodNumberAfterChange": 2, "commitBeforeChange": "cd20838066679088607bacd4884b58979b698e68", "diff": ["-\tpublic String resolve(String locator) {\r", "+\tpublic Pair<String,Tables> resolve(String locator) {\r", "+\t\tTables tables = TableFactory.tables();\r", "-\t\t\t\treturn \"INFINITE SUBSTITUTION!\";\r", "+\t\t\t\treturn new Pair<String,Tables>(\"INFINITE SUBSTITUTION!\",tables);\r", "-\t\treturn result;\r", "+\t\treturn new Pair<String,Tables>(result,tables);\r"], "commitAfterChange": "e3f9a7058b7a695d0825f787e929954ce3c4ac47", "signatureAfterChange": "\r \tpublic Pair<String,Tables> resolve(String locator)", "id": "51c6ef9f4b2a2e3fc88bc4e90e468c1f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic void doTables(String html)", "fileName": "src/fitlibrary/suite/FitLibraryServer.java", "methodNumberAfterChange": 0, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-    }\r", "-\tpublic void doTables(String html) {\r", "+\tpublic TestResults doTables(String html) {\r", "-//\t\t\tString translated = ParseUtility.tabulize(html); //ParseUtility.translate(html);\r", "-\t\t\tfixture.counts = doTables(TableFactory.tables(html)).getCounts();\r", "+\t\t\treturn doTables(TableFactory.tables(html));\r", "+\t\treturn new TestResultsOnCounts();\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \r \t@Override\r \tpublic TestResults doTables(String html)", "id": "952bb12444795345421a416fcc1a8b8a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "053c916aa1f94b778b1f11c6da581601", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}