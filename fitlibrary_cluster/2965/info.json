{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 11, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType) {\r", "+\tprivate ICalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType) {\r", "-\t\t\tOption<CalledMethodTarget> targetOption = typedObject.new_findSpecificMethod(methodName,argCount,evaluator);\r", "+\t\t\tOption<ICalledMethodTarget> targetOption = typedObject.new_findSpecificMethod(methodName,argCount,evaluator);\r", "-\t\tthrow new MissingMethodException(signatures(\"public \"+returnType+\" \"+methodName+\"(\"+arg+\") { }\"),scopeOf(evaluator).possibleClasses());\r", "+\t\tthrow new MissingMethodException(signatures(\"public \"+returnType+\" \"+methodName+\"(\"+arg+\") { }\"),evaluator.getScope().possibleClasses());\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate ICalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType)", "id": "6b1356b9f123da7f530c1f4dfdb6a828", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 23, "signatureBeforeChange": "\r \tpublic Option<CalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator)", "fileName": "src/fitlibraryGeneric/typed/GenericTypedObject.java", "methodNumberAfterChange": 23, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic Option<CalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator) {\r", "+\tpublic Option<ICalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator) {\r", "-\t\t\treturn new Some<CalledMethodTarget>(methodTargetFactory.createCalledMethodTarget(methodClosureOption.get(), evaluator));\r", "+\t\t\treturn new Some<ICalledMethodTarget>(methodTargetFactory.createCalledMethodTarget(methodClosureOption.get(), evaluator));\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic Option<ICalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator)", "id": "7f6a4da93af2f28cb8734bfedef3bd89", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name, int argCount, Evaluator evaluator, String signature)", "fileName": "src/fitlibrary/typed/NonGenericTypedObject.java", "methodNumberAfterChange": 2, "commitBeforeChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "diff": ["-\tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name, int argCount, Evaluator evaluator, String signature) {\r", "+\tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name, int argCount, Evaluator evaluator, List<String> signatures) {\r", "-\t\tthrow new MissingMethodException(signature,PlugBoard.lookupTarget.identifiedClassesInSUTChain(subject),\"\");\r", "+\t\tthrow new MissingMethodException(signatures,PlugBoard.lookupTarget.identifiedClassesInSUTChain(subject));\r", "+\t}\r"], "commitAfterChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "signatureAfterChange": "\r \tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name, int argCount, Evaluator evaluator, List<String> signatures)", "id": "93b390e4e45fa8187b814b4ea902fb31", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 12, "commitBeforeChange": "aa7e035202af44c59ac4b9611ab51754bfc767f1", "diff": ["-\tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg) {\r", "+\tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType) {\r", "-\t\tthrow new MissingMethodException(signatures(\"public void \"+methodName+\"(\"+arg+\") { }\"),scopeOf(evaluator).possibleClasses());\r", "+\t\tthrow new MissingMethodException(signatures(\"public \"+returnType+\" \"+methodName+\"(\"+arg+\") { }\"),scopeOf(evaluator).possibleClasses());\r"], "commitAfterChange": "0c95be0b15a91849d3e53045090b616f855d42ad", "signatureAfterChange": "\r \tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType)", "id": "bbba7c6f04d57d4c6e12695d66a6a488", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "acec605d7e22c9d87d573e3c480683b6", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}