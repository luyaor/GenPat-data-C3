{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 53, "signatureBeforeChange": "\r \t@SuppressWarnings(\"unchecked\")\r \tprivate void comparison(TestResults testResults, Row row, Comparison compare)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 51, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tObject result = target.invoke(row.rowTo(1,row.size()-2),testResults,true);\r", "+\t\t\tObject result = target.invoke(row.rowFromTo(1,row.size()-2),testResults,true);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@SuppressWarnings(\"unchecked\")\r \tprivate void comparison(TestResults testResults, Row row, Comparison compare)", "id": "0944c7ae0a4ff368bd61872a226f54a8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 62, "signatureBeforeChange": "\r \tpublic void becomes(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 60, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRow actionPartOfRow = row.rowTo(1,row.size()-2);\r", "+\t\tRow actionPartOfRow = row.rowFromTo(1,row.size()-2);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void becomes(TestResults testResults, Row row) throws Exception", "id": "0acd0e570caf5ed79694d6d43809ea90", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 56, "signatureBeforeChange": "\r \tpublic void matches(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 54, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tString result = target.invokeForSpecial(row.rowTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r", "+\t\t\tString result = target.invokeForSpecial(row.rowFromTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void matches(TestResults testResults, Row row) throws Exception", "id": "190e7795fd541b3bdff7398b93c2d2c2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 42, "signatureBeforeChange": "\r \tpublic void is(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 40, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\ttarget.invokeAndCheckForSpecial(row.rowTo(1,row.size()-2),expectedCell,testResults,row,operatorCell(row));\r", "+\t\ttarget.invokeAndCheckForSpecial(row.rowFromTo(1,row.size()-2),expectedCell,testResults,row,operatorCell(row));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void is(TestResults testResults, Row row) throws Exception", "id": "54cb158aa09421fa9590145e3b409099", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 59, "signatureBeforeChange": "\r \tpublic void contains(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 57, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tString result = target.invokeForSpecial(row.rowTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r", "+\t\tString result = target.invokeForSpecial(row.rowFromTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void contains(TestResults testResults, Row row) throws Exception", "id": "6f82e7537e9561948120b2354786e428", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 57, "signatureBeforeChange": "\r \tpublic void eventuallyMatches(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 55, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tresult = target.invokeForSpecial(row.rowTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r", "+\t\t\tresult = target.invokeForSpecial(row.rowFromTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void eventuallyMatches(TestResults testResults, Row row) throws Exception", "id": "c30c3dad57b2faff66d9bd2f569e27fc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 58, "signatureBeforeChange": "\r \tpublic void doesNotMatch(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 56, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tString result = target.invokeForSpecial(row.rowTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r", "+\t\t\tString result = target.invokeForSpecial(row.rowFromTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void doesNotMatch(TestResults testResults, Row row) throws Exception", "id": "c51fca59a3a33642f06659a27c3a2dd5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 44, "signatureBeforeChange": "\r \tpublic void isNot(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 42, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tObject result = target.invoke(row.rowTo(1,row.size()-2),testResults,true);\r", "+\t\t\tObject result = target.invoke(row.rowFromTo(1,row.size()-2),testResults,true);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void isNot(TestResults testResults, Row row) throws Exception", "id": "cbe587d5eb561d6a310a18f5504f21c9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 61, "signatureBeforeChange": "\r \tpublic void doesNotContain(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 59, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tString result = target.invokeForSpecial(row.rowTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r", "+\t\tString result = target.invokeForSpecial(row.rowFromTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void doesNotContain(TestResults testResults, Row row) throws Exception", "id": "f11866b0793a4bffed6334e63838ca84", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 60, "signatureBeforeChange": "\r \tpublic void eventuallyContains(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 58, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tresult = target.invokeForSpecial(row.rowTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r", "+\t\t\tresult = target.invokeForSpecial(row.rowFromTo(1,row.size()-2),testResults,false,operatorCell(row)).toString();\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void eventuallyContains(TestResults testResults, Row row) throws Exception", "id": "f39077bb71688da2906f9fc3b7c8628a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4d6624f2d248f623afef6353e190a25a", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}