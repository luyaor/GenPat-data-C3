{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r     public TypedObject interpretRow(Row row, TestResults testResults, Fixture fixtureByName)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 11, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["+    public TypedObject interpretRow(Row row, TestResults testResults) {\r", "+    \treturn doAutoWrapper.wrap(interpretRow(row,testResults,null));\r", "+    }\r", "-    \tif (testResults.isAbandoned()) {\r", "-\t\t\trow.ignore(testResults);\r", "-\t\t\treturn null;\r", "-\t\t}\r", "-    \tfinal Cell cell = row.cell(0);\r", "-    \tif (cell.hasEmbeddedTable()) {\r", "-    \t\tinterpretInnerTables(cell.innerTables(),testResults);\r", "-    \t\treturn null;\r", "-    \t}\r", "-    \treturn null;\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r     public TypedObject interpretRow(Row row, TestResults testResults)", "id": "5b27cefed79e053e41a8de67ff717aa2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     public TypedObject interpretRowBeforeWrapping(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-    public TypedObject interpretRowBeforeWrapping(Row row, TestResults testResults) {\r", "-    \ttry {\r", "-    \t\tDoCaller[] actions = createDoCallers(row);\r", "-    \t\tOption<TypedObject> result = interpretSimpleRow(row,testResults,actions);\r", "-    \t\tif (result.isSome())\r", "-    \t\t\treturn result.get();\r", "-    \t\tmethodsAreMissing(actions,possibleSeq(row));\r", "-    \t} catch (IgnoredException ex) {\r", "-    \t\t//\r", "-    \t} catch (AbandonException e) {\r", "-    \t\trow.ignore(testResults);\r", "-    \t} catch (Exception ex) {\r", "-    \t\trow.error(testResults, ex);\r", "-    \t}\r", "-    \treturn GenericTypedObject.NULL;\r", "+    final public TypedObject interpretRowBeforeWrapping(Row row, TestResults testResults) {\r", "+    \treturn dispatchRowInFlow.interpretRowBeforeWrapping(row, testResults);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     final public TypedObject interpretRowBeforeWrapping(Row row, TestResults testResults)", "id": "7fae1fb71587fb5c5173574bc9363c43", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "41e1cd1b587defb1a939dfa221a84de4", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}