{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object run(IRow row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 3, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t\t\tObject oldThisValue = doTraverse.getDynamicVariable(\"this\");\r", "+\t\t\tObject oldThisValue = runtime.getDynamicVariable(\"this\");\r", "-\t\t\t\tdoTraverse.setDynamicVariable(\"this\", actualArgs.get(0));\r", "-\t\t\tObject result = processDefinedAction(parameterSubstitution.substitute(actualArgs,doTraverse),row,testResults);\r", "-\t\t\tdoTraverse.setDynamicVariable(\"this\", oldThisValue);\r", "+\t\t\t\truntime.setDynamicVariable(\"this\", actualArgs.get(0));\r", "+\t\t\tprocessDefinedAction(parameterSubstitution.substitute(actualArgs),row,testResults);\r", "+\t\t\truntime.setDynamicVariable(\"this\", oldThisValue);\r", "-\t\tif (!doTraverse.toExpandDefinedActions() && CallManager.readyToShow() && !testResults.isAbandoned())\r", "+\t\tif (!runtime.toExpandDefinedActions() && CallManager.readyToShow() && !testResults.isAbandoned())\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \t@Override\r \tpublic Object run(IRow row, TestResults testResults)", "id": "6112d5d33e888c42e097e7313667f4dc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic MultiDefinedActionCaller(Row row, DoTraverseInterpreter doTraverse)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "diff": ["-\tpublic MultiDefinedActionCaller(Row row, DoTraverseInterpreter doTraverse) {\r", "-\t\tthis.doTraverse = doTraverse;\r", "-\t\tthis.furtherRows = doTraverse.getRuntimeContext().hasRowsAfter(row);\r", "-\t\tmethodName = row.text(0,doTraverse);\r", "+\tpublic MultiDefinedActionCaller(Row row, RuntimeContextInternal runtime) {\r", "+\t\tthis.runtime = runtime;\r", "+\t\tthis.furtherRows = runtime.hasRowsAfter(row);\r", "+\t\tmethodName = row.text(0,runtime.getResolver());\r"], "commitAfterChange": "8655c08986fab4cb3523c8934e8765739689b282", "signatureAfterChange": "\r \r \tpublic MultiDefinedActionCaller(Row row, RuntimeContextInternal runtime)", "id": "a3e5f33024a6f467fe97e50172f48cea", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "3f2790ee676ee43808a66b2ad7b60ad4", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}