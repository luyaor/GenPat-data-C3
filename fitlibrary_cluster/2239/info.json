{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic DefinedActionCaller(Row row, DoTraverseInterpreter doTraverse)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["+\t\tthis.runtime = doTraverse.getRuntimeContext();\r", "-\t\t\tObject objectName = doTraverse.getDynamicVariable(\"this\");\r", "+\t\t\tObject objectName = runtime.getDynamicVariable(\"this\");\r", "-\t\t\t\tObject className = doTraverse.getDynamicVariable(objectName+\".class\");\r", "+\t\t\t\tObject className = runtime.getDynamicVariable(objectName+\".class\");\r", "-\t\t\t\t\tparameterSubstitution = TemporaryPlugBoardForRuntime.definedActionsRepository().lookupByClassByCamel(className.toString(), methodName, (actualArgs.size()-1), doTraverse.runtime());\r", "+\t\t\t\t\tparameterSubstitution = TemporaryPlugBoardForRuntime.definedActionsRepository().lookupByClassByCamel(className.toString(), methodName, (actualArgs.size()-1), doTraverse.getRuntimeContext());\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \r \tpublic DefinedActionCaller(Row row, DoTraverseInterpreter doTraverse)", "id": "137f1627ac7ae4c282bb1e1c99a36f6c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void analyse()", "fileName": "src/fitlibrary/traverse/workflow/PlainText.java", "methodNumberAfterChange": 1, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\t\t\tcall.possibility(doTraverse);\r", "+\t\t\t\tcall.possibility(doTraverse.getRuntimeContext().getGlobal());\r", "-\t\tdoTraverse.interpretRow(row,testResults,null);\r", "+\t\tdoTraverse.interpretRow(row,testResults,(Fixture)null);\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic void analyse()", "id": "23fd6e5831a0bd61f150bfc2751dbaeb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     @SuppressWarnings({\"fallthrough\", \"unchecked\"})\r \t@Override\r     protected boolean tableMatches(Table table, Object initialResult, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListParser2.java", "methodNumberAfterChange": 3, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-    \t\t\treturn arrayTraverse.doesInnerTablePass(table,evaluator,testResults);\r", "+    \t\t\treturn arrayTraverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r", "-        \t\treturn listTraverse.doesInnerTablePass(table,evaluator,testResults);\r", "+        \t\treturn listTraverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r", "-    \t\treturn nestingList.doesTablePass(table,evaluator,testResults);\r", "+    \t\treturn nestingList.doesTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r     @SuppressWarnings({\"fallthrough\", \"unchecked\"})\r \t@Override\r     protected boolean tableMatches(Table table, Object initialResult, TestResults testResults)", "id": "585c49cdfa7d501d25beed84918cbe8e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "7a2db8b59cd004205f4b96b1767265c9", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}