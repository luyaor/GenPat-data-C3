{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables)", "fileName": "src/fitlibrary/definedAction/UseTemplateTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables) {\r", "-\t\tTable commentTable = new Table();\r", "+\tprivate RowOnParse appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, TablesOnParse resultingTables) {\r", "+\t\tTable commentTable = new TableOnParse();\r", "-\t\tTable paramsTable = new Table();\r", "-\t\tRow templateRow = paramsTable.newRow();\r", "+\t\tTableOnParse paramsTable = new TableOnParse();\r", "+\t\tRowOnParse templateRow = paramsTable.newRow();\r", "-\t\tRow paramsRow = paramsTable.newRow();\r", "+\t\tRowOnParse paramsRow = paramsTable.newRow();\r", "-\t\t\tparamsRow.addCell(new Cell(actualParameterNames.text(c,this)));\r", "-\t\tRow argsRow = paramsTable.newRow();\r", "+\t\t\tparamsRow.addCell(new CellOnParse(actualParameterNames.text(c,this)));\r", "+\t\tRowOnParse argsRow = paramsTable.newRow();\r", "-\t\t\tif (paramValue instanceof Table) {\r", "+\t\t\tif (paramValue instanceof TableOnParse) {\r", "-\t\t\t\tnewCell.setInnerTables(new Tables((Table) paramValue));\r", "+\t\t\t\tnewCell.setInnerTables(new TablesOnParse((TableOnParse) paramValue));\r", "-\t\tcommentTable.newRow().addCell(new Cell(paramsTable));\r", "-\t\tcommentTable.newRow().addCell(new Cell(resultingTables));\r", "+\t\tcommentTable.newRow().addCell(new CellOnParse(paramsTable));\r", "+\t\tcommentTable.newRow().addCell(new CellOnParse(resultingTables));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate RowOnParse appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, TablesOnParse resultingTables)", "id": "2cdf3e3ef66ec82ed6866c78127ce6f2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate RowOnParse appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, TablesOnParse resultingTables)", "fileName": "src/fitlibrary/definedAction/UseTemplateTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\tprivate RowOnParse appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, TablesOnParse resultingTables) {\r", "-\t\tTable commentTable = new TableOnParse();\r", "+\tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables) {\r", "+\t\tTable commentTable = TableFactory.table();\r", "-\t\tTableOnParse paramsTable = new TableOnParse();\r", "-\t\tRowOnParse templateRow = paramsTable.newRow();\r", "+\t\tTable paramsTable = TableFactory.table();\r", "+\t\tRow templateRow = paramsTable.newRow();\r", "-\t\tRowOnParse paramsRow = paramsTable.newRow();\r", "+\t\tRow paramsRow = paramsTable.newRow();\r", "-\t\t\tparamsRow.addCell(new CellOnParse(actualParameterNames.text(c,this)));\r", "-\t\tRowOnParse argsRow = paramsTable.newRow();\r", "+\t\t\tparamsRow.addCell(TableFactory.cell(actualParameterNames.text(c,this)));\r", "+\t\tRow argsRow = paramsTable.newRow();\r", "-\t\t\t\tnewCell.setInnerTables(new TablesOnParse((TableOnParse) paramValue));\r", "+\t\t\t\tnewCell.setInnerTables(TableFactory.tables((Table) paramValue));\r", "-\t\tcommentTable.newRow().addCell(new CellOnParse(paramsTable));\r", "-\t\tcommentTable.newRow().addCell(new CellOnParse(resultingTables));\r", "+\t\tcommentTable.newRow().addCell(TableFactory.cell(TableFactory.tables(paramsTable)));\r", "+\t\tcommentTable.newRow().addCell(TableFactory.cell(resultingTables));\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables)", "id": "f3470d688054f0dd6de0f422c04b23b1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "a13250053022b3af0567c2d011580c1a", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}