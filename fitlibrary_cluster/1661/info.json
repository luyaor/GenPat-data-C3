{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 8, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\t\t\trow.cell(i).error(testResults, new FitLibraryException(\"\"));\r", "+\t\t\t\t\trow.elementAt(i).error(testResults, new FitLibraryException(\"\"));\r", "-\t\t\t\t\trow.cell(i).fail(testResults);\r", "+\t\t\t\t\trow.elementAt(i).fail(testResults);\r", "-\t\t\t\t\trow.cell(i).ignore(testResults);\r", "+\t\t\t\t\trow.elementAt(i).ignore(testResults);\r", "-\t\t\trow.addCell(TableFactory.cell(link(pageName),body));\r", "+\t\t\trow.add(TableFactory.cell(link(pageName),body));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "id": "74f19b023af80f104f5c6bbc6ae32a13", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     private Object getObject(Row row, int cellNo, Object initialObject, TestResults testResults)", "fileName": "src/fitlibraryGeneric/traverse/ReferenceTraverse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Cell nextCell = row.elementAt(cellNo+1);\r", "-            if (!nextCell.matchesText(\"of\",this) && !nextCell.matchesText(\"in\",this)) {\r", "+            Cell nextCell = row.at(cellNo+1);\r", "+            if (!nextCell.matchesTextInLowerCase(\"of\",this) && !nextCell.matchesTextInLowerCase(\"in\",this)) {\r", "-        return getReferencedObject(row.elementAt(cellNo),object,last,testResults);\r", "+        return getReferencedObject(row.at(cellNo),object,last,testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private Object getObject(Row row, int cellNo, Object initialObject, TestResults testResults)", "id": "a0c4099359ddb64ea30dfa641b5aecad", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r   public static void assertCounts(Counts expected, Counts actual)", "fileName": "src/fit/decorator/util/TestCaseHelper.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public static void assertCounts(Counts expected, Counts actual) {\r", "-    TestCase.assertEquals(expected.wrong, actual.wrong);\r", "-    TestCase.assertEquals(expected.exceptions, actual.exceptions);\r", "-    TestCase.assertEquals(expected.ignores, actual.ignores);\r", "-    TestCase.assertEquals(expected.right, actual.right);\r", "-  }\r", "+\tpublic static void assertCounts(Counts expected, Counts actual) {\r", "+\t\tAssert.assertEquals(expected.wrong, actual.wrong);\r", "+\t\tAssert.assertEquals(expected.exceptions, actual.exceptions);\r", "+\t\tAssert.assertEquals(expected.ignores, actual.ignores);\r", "+\t\tAssert.assertEquals(expected.right, actual.right);\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \tpublic static void assertCounts(Counts expected, Counts actual)", "id": "a8dc0718e47b830b67ce7627d5499bb4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "ff712f6d6090979ebf539b867d1d25ae", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}