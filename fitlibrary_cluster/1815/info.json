{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \t@Override\r \tpublic int getTimeout(String name, int defaultTimeout)", "fileName": "src/fitlibrary/runtime/RuntimeContextContainer.java", "methodNumberAfterChange": 9, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["-\t@Override\r", "-\t\tInteger timeout = timeouts.get(name);\r", "-\t\tif (timeout == null)\r", "-\t\t\treturn defaultTimeout;\r", "-\t\treturn timeout;\r", "+\t\treturn suiteWideRuntimeContext.getTimeout(name, defaultTimeout);\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tpublic int getTimeout(String name, int defaultTimeout)", "id": "68ec765793b42a83e7427c533f45b283", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \t@Override\r \tpublic IScope getScope()", "fileName": "src/fitlibrary/runtime/RuntimeContextContainer.java", "methodNumberAfterChange": 18, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["-\t@Override\r", "-\t\tif (scope == null)\r", "-\t\t\tthrow new RuntimeException(\"No scope in runtime\");\r", "-\t\treturn scope;\r", "+\t\treturn suiteWideRuntimeContext.getScope();\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tpublic IScope getScope()", "id": "eda04153d0b484ff56dd2d7871329fc0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic int getTimeout(String name, int defaultTimeout)", "fileName": "src/fitlibrary/runtime/RuntimeContext.java", "methodNumberAfterChange": 1, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t}\r", "-\tpublic int getTimeout(String name, int defaultTimeout) {\r", "-\t\tInteger timeout = timeouts.get(name);\r", "-\t\tif (timeout == null)\r", "-\t\t\treturn defaultTimeout;\r", "-\t\treturn timeout;\r", "-\t}\r", "+\tObject getDynamicVariable(String key);\r", "+\tvoid setDynamicVariable(String key, Object value);\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tvoid setDynamicVariable(String key, Object value);", "id": "f598fc25d24a0e51da28158d2819f005", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "028bfe49bfe33ed13e61c066a12f36f4", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}