{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \t@Test\r \tpublic void findNullaryReversedActionSpecialMethod() throws Exception", "fileName": "test/fitlibrary/typed/TestGenericTypedObjectFurther.java", "methodNumberAfterChange": 12, "commitBeforeChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "diff": ["-\t\tcontext.checking(new Expectations() {{\r", "-\t\t\toneOf(positionedTarget).isFound(); will(returnValue(true));\r", "-\t\t}});\r", "-\t\tassertThat(typedObject.findActionSpecialMethod(cells,factory).isFound(),is(true));\r", "+\t\tList<PositionedTarget> targets = typedObject.findActionSpecialMethods(cells,factory);\r", "+\t\tassertThat(targets.size(),is(1));\r"], "commitAfterChange": "6e2fd68caab2f02de2d8c7d77899562c496a4b1d", "signatureAfterChange": "\r \t@Test\r \tpublic void findNullaryReversedActionSpecialMethod() throws Exception", "id": "1e6593c6c1b69aa263c5550cd8f5721b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \t@Test\r \tpublic void findBinaryPreFixActionSpecialMethod() throws Exception", "fileName": "test/fitlibrary/typed/TestGenericTypedObjectFurther.java", "methodNumberAfterChange": 16, "commitBeforeChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "diff": ["-\t\tcontext.checking(new Expectations() {{\r", "-\t\t\toneOf(positionedTarget).isFound(); will(returnValue(true));\r", "-\t\t}});\r", "-\t\tassertThat(typedObject.findActionSpecialMethod(cells,factory).isFound(),is(true));\r", "+\t\tList<PositionedTarget> targets = typedObject.findActionSpecialMethods(cells,factory);\r", "+\t\tassertThat(targets.size(),is(1));\r"], "commitAfterChange": "6e2fd68caab2f02de2d8c7d77899562c496a4b1d", "signatureAfterChange": "\r \t@Test\r \tpublic void findBinaryPreFixActionSpecialMethod() throws Exception", "id": "23b0655ec8b838b58334132f710f9f7d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 14, "signatureBeforeChange": "\r \t@Test\r \tpublic void findUnaryPostFixActionSpecialMethod() throws Exception", "fileName": "test/fitlibrary/typed/TestGenericTypedObjectFurther.java", "methodNumberAfterChange": 14, "commitBeforeChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "diff": ["-\t\tcontext.checking(new Expectations() {{\r", "-\t\t\toneOf(positionedTarget).isFound(); will(returnValue(true));\r", "-\t\t}});\r", "-\t\tassertThat(typedObject.findActionSpecialMethod(cells,factory).isFound(),is(true));\r", "+\t\tList<PositionedTarget> targets = typedObject.findActionSpecialMethods(cells,factory);\r", "+\t\tassertThat(targets.size(),is(1));\r"], "commitAfterChange": "6e2fd68caab2f02de2d8c7d77899562c496a4b1d", "signatureAfterChange": "\r \t@Test\r \tpublic void findUnaryPostFixActionSpecialMethod() throws Exception", "id": "360f0d27faca0619c7270a31e02e0ae0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tpublic static String what(IScope scope, String substring)", "fileName": "src/fitlibrary/flow/WhatIsInScope.java", "methodNumberAfterChange": 0, "commitBeforeChange": "abdca5590322cb763a5db1236b7a9c36f3d22653", "diff": ["-\tpublic static String what(IScope scope, String substring) {\r", "+\tpublic static String what(IScope scope, String initialPattern) {\r", "+\t\tString pattern = initialPattern.replace(\"<\",\"&lt;\");\r", "+\t\ts.append(\"<tr><td><h4>Object of type</h4></td><td><h4>Action Details</h4></td></tr>\\n\");\r", "-\t\t\tString className = aClass.getSimpleName();\r", "-\t\t\tif (showAnnotation != null && !showAnnotation.rename().equals(\"\"))\r", "-\t\t\t\tclassName = showAnnotation.rename();\r", "-\t\t\ts.append(\"<tr><td>\"+className+\"</td>\\n\");\r", "-\t\t\taddActions(s,aClass,substring,showAnnotation != null);\r", "+\t\t\ts.append(\"<tr><td>\"+aClass.getSimpleName()+\"</td>\\n\");\r", "+\t\t\taddActions(s,aClass,pattern,showAnnotation != null);\r"], "commitAfterChange": "96a06134efc1fc0c7cb135114029544fb0cf938e", "signatureAfterChange": "\r \tpublic static String what(IScope scope, String initialPattern)", "id": "67e2876fb18caf085dda8178f360e232", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \t@Test\r \tpublic void findBinaryPostFixActionSpecialMethod() throws Exception", "fileName": "test/fitlibrary/typed/TestGenericTypedObjectFurther.java", "methodNumberAfterChange": 18, "commitBeforeChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "diff": ["-\t\tcontext.checking(new Expectations() {{\r", "-\t\t\toneOf(positionedTarget).isFound(); will(returnValue(true));\r", "-\t\t}});\r", "-\t\tassertThat(typedObject.findActionSpecialMethod(cells,factory).isFound(),is(true));\r", "+\t\tList<PositionedTarget> targets = typedObject.findActionSpecialMethods(cells,factory);\r", "+\t\tassertThat(targets.size(),is(1));\r"], "commitAfterChange": "6e2fd68caab2f02de2d8c7d77899562c496a4b1d", "signatureAfterChange": "\r \t@Test\r \tpublic void findBinaryPostFixActionSpecialMethod() throws Exception", "id": "bed6a051ae7cd68e8fc7f513ebb72771", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r \t@Test\r \tpublic void findNullaryActionSpecialMethod() throws Exception", "fileName": "test/fitlibrary/typed/TestGenericTypedObjectFurther.java", "methodNumberAfterChange": 10, "commitBeforeChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "diff": ["-//\t\tcontext.checking(new Expectations() {{ -- This fails with a NullPointerException\r", "+//\t\tcontext.checking(new Expectations() {{ // -- This fails with a NullPointerException\r", "-\t\tcontext.checking(new Expectations() {{\r", "-\t\t\toneOf(positionedTarget).isFound(); will(returnValue(true));\r", "-\t\t}});\r", "-\t\tassertThat(typedObject.findActionSpecialMethod(cells,factory).isFound(),is(true));\r", "+\t\tList<PositionedTarget> targets = typedObject.findActionSpecialMethods(cells,factory);\r", "+\t\tassertThat(targets.size(),is(1));\r"], "commitAfterChange": "6e2fd68caab2f02de2d8c7d77899562c496a4b1d", "signatureAfterChange": "\r \t@Test\r \tpublic void findNullaryActionSpecialMethod() throws Exception", "id": "d2ba6e2e3e8f5e806ed258628708a91e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "7842b2fda28b6a59ebaa19b83be88e62", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}