{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t@Test\r \tpublic void previousParameterBindingsAreAvailableOnPop()", "fileName": "test/fitlibrary/runtime/TestRuntimeContext.java", "methodNumberAfterChange": 5, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t\tRuntimeContext runtimeContext = new RuntimeContext();\r", "+\t\tRuntimeContextInternal runtimeContext = new RuntimeContextImplementation();\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \t@Test\r \tpublic void previousParameterBindingsAreAvailableOnPop()", "id": "750aa987d68860ca5f8ec925536c6b57", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 16, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(tables).table(0); will(returnValue(table1));\r", "-\t\t\tallowing(tables).table(1); will(returnValue(table1));\r", "+\t\t\tallowing(tables).elementAt(0); will(returnValue(table1));\r", "+\t\t\tallowing(tables).elementAt(1); will(returnValue(table1));\r", "-\t\t\tallowing(table1).row(0); will(returnValue(row1));\r", "-\t\t\tallowing(table1).row(1); will(returnValue(row2));\r", "-\t\t\tallowing(row1).cell(0); will(returnValue(cell1));\r", "+\t\t\tallowing(table1).elementAt(0); will(returnValue(row1));\r", "+\t\t\tallowing(table1).elementAt(1); will(returnValue(row2));\r", "+\t\t\tallowing(row1).elementAt(0); will(returnValue(cell1));\r", "-\t\t\tallowing(row2).cell(0); will(returnValue(cell1));\r", "+\t\t\tallowing(row2).elementAt(0); will(returnValue(cell1));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "id": "d77e9e14275906ce971d1cab7c2942f7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4bb52ae00f68864c43a25c080ad7f30a", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}