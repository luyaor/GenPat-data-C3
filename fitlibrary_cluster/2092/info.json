{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tCalledMethodTarget findMethodInEverySecondCell(Evaluator evaluator, Row row, int allArgs) throws Exception;", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 14, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findMethodInEverySecondCell(Evaluator evaluator, Row row, int allArgs) throws Exception;\r", "+\tPositionedTarget findActionSpecialMethod(Evaluator evaluator, String[] cells, boolean sequencing);\r", "+\tICalledMethodTarget findMethodByArity(Row row, int from, int upTo, boolean doStyle, Evaluator evaluator) throws Exception;\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findMethodByArity(Row row, int from, int upTo, boolean doStyle, Evaluator evaluator) throws Exception;", "id": "7747b2e72183abf075706e51bd12394c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r \tprivate List<String> getDefinedActionParameters(Row parametersRow)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 10, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["+\t}\r", "+\tprivate List<String> getFormalParameters(Row parametersRow, int start, int increment) {\r", "+\t\tList<String> formalParameters = new ArrayList<String>();\r", "+    \tif (wikiClassBased())\r", "+    \t\tformalParameters.add(\"this\");\r", "+    \tfor (int i = start; i < parametersRow.size(); i += increment)\r", "+    \t\tif (i < parametersRow.size()) {\r", "+    \t\t\tString parameter = parametersRow.text(i,this);\r", "+    \t\t\tif (\"\".equals(parameter))\r", "+    \t\t\t\terror(\"Parameter name is blank\",parametersRow);\r", "+    \t\t\tif (formalParameters.contains(parameter))\r", "+    \t\t\t\terror(\"Parameter name '<b>\"+parameter+\"</b>' is duplicated\",parametersRow);\r", "+\t\t\t\tformalParameters.add(parameter);\r", "+    \t\t}\r", "+\t\treturn formalParameters;\r", "+\t}\r", "-\t}\r", "-\tprivate List<String> getDefinedActionParameters(Row parametersRow) {\r", "-\t\tList<String> formalParameters = new ArrayList<String>();\r", "-    \tif (wikiClassBased())\r", "-    \t\tformalParameters.add(\"this\");\r", "-    \tfor (int i = 1; i < parametersRow.size(); i += 2)\r", "-    \t\tif (i < parametersRow.size()) {\r", "-    \t\t\tString parameter = parametersRow.text(i,this);\r", "-    \t\t\tif (\"\".equals(parameter))\r", "-    \t\t\t\terror(\"Parameter name is blank\",parametersRow);\r", "-    \t\t\tif (formalParameters.contains(parameter))\r", "-    \t\t\t\terror(\"Parameter name '<b>\"+parameter+\"</b>' is duplicated\",parametersRow);\r", "-\t\t\t\tformalParameters.add(parameter);\r", "-    \t\t}\r", "-\t\treturn formalParameters;\r", "-\t}\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r \tprivate List<String> getFormalParameters(Row parametersRow, int start, int increment)", "id": "8cdf7e873c974ec997203c6f9ef83c58", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "55c6eb85579976234e2822cade4d4b46", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}