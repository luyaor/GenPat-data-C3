{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void processRow(Row labelRow, Row row, Map<String, Object> map,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/collection/map/ListOfMapsTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(c);\r", "+\t\t\tCell cell = row.elementAt(c);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void processRow(Row labelRow, Row row, Map<String, Object> map,\r \t\t\tTestResults testResults)", "id": "07a561e5e331cdc9813c1243f1c3dac7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestSet.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0); will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0); will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "id": "0dbe8baa919e3d45477a1b811f739a94", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CalculateTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            targets[i].invokeAndCheck(row,row.cell(i+argCount+1),testResults,true);\r", "+            targets[i].invokeAndCheck(row,row.elementAt(i+argCount+1),testResults,true);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "1c29457128ddccab13374d457f9bdf75", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void worksOK() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestCheck.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test\r \tpublic void worksOK() throws Exception", "id": "2f852ee732efa6e7b324168ea34ad606", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     public void bindFirstRowToTarget(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CalculateTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell cell = row.cell(i);\r", "+            Cell cell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void bindFirstRowToTarget(Row row, TestResults testResults)", "id": "312f9760d44df264d9d5e73d3c8a02ff", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 74, "signatureBeforeChange": "\r \tpublic void showDot(RowOnParse row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 74, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t    Object result = callMethodInRow(row,testResults, true,row.cell(0));\r", "+\t\t    Object result = callMethodInRow(row,testResults, true,row.elementAt(0));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void showDot(RowOnParse row, TestResults testResults) throws Exception", "id": "352cabbb9a8c048c5e35ac1471bf06f8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/SetVariableTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.cell(0).error(testResults, new FitLibraryException(\"Must be two cells\"));\r", "+\t\t\trow.elementAt(0).error(testResults, new FitLibraryException(\"Must be two cells\"));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "id": "38f45a1ad1dfbb055a09e4c280a6226e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void bindFirstRowToTarget(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CombinationTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell cell = row.cell(i);\r", "+            Cell cell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void bindFirstRowToTarget(Row row, TestResults testResults)", "id": "3a7aa9434389908a2541013593668996", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowAfter.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "id": "3ff357fd65f61546c404456f81d42c35", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     public void testRow0Missing()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 9, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        assertTrue(row0.cell(0).didFail());\r", "+        assertTrue(row0.elementAt(0).didFail());\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void testRow0Missing()", "id": "4abdfd3dc5bbfa12db3f063b61de2c14", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void specialAction(RowOnParse row, TestResults testResults)", "fileName": "src/fitlibrary/specify/DoFixtureFlowUnderTest.java", "methodNumberAfterChange": 3, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tCell cell = row.cell(1);\r", "+\t\tCell cell = row.elementAt(1);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void specialAction(RowOnParse row, TestResults testResults)", "id": "4c3f5fe564f0211b28f84f1e36914ffe", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 27, "signatureBeforeChange": "\r \tpublic void passKeywords(TestResults testResults)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 26, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tcell(i).pass(testResults);\r", "+\t\t\telementAt(i).pass(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void passKeywords(TestResults testResults)", "id": "4c6334c96b755c9e2e7bbdfb96c677ed", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate int findClassColumn(Row row)", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 2, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell cell = row.cell(cellNo);\r", "+            Cell cell = row.elementAt(cellNo);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate int findClassColumn(Row row)", "id": "4f5456163d2e455f2779807d45b368e4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \r     private Cell getCell(int tableNo, int rowNo, int cellNo)", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 18, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        return getRow(tableNo, rowNo).cell(cellNo);\r", "+        return getRow(tableNo, rowNo).elementAt(cellNo);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \r     private Cell getCell(int tableNo, int rowNo, int cellNo)", "id": "4fe198f5dead7aaaf2ec45744bcecedb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 15, "signatureBeforeChange": "\r     protected final boolean matchRow(Row row, MethodTarget[] columnBindings, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 15, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell expectedCell = row.cell(i);\r", "+            Cell expectedCell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     protected final boolean matchRow(Row row, MethodTarget[] columnBindings, TestResults testResults) throws Exception", "id": "508a304ce8c30604c2d02a2e60da0d21", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsLogged() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestLog.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsLogged() throws Exception", "id": "5408fd6996594a7234fb015011f01e6d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShownEscaped() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowEscaped.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShownEscaped() throws Exception", "id": "657b1aeb63884eae614a08ab8ae7b4f4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 24, "signatureBeforeChange": "\r \tpublic Cell lastCell()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 23, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\treturn cell(size()-1);\r", "+\t\treturn elementAt(size()-1);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Cell lastCell()", "id": "65c98635ef4ed7fff1037dd4a753a8b1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 20, "signatureBeforeChange": "\r \tpublic Cell last()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 19, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\treturn cell(size()-1);\r", "+\t\treturn elementAt(size()-1);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Cell last()", "id": "671ccc3540b9744ed4eedf2051407e29", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private void processRow(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-                Cell cell = row.cell(i);\r", "+                Cell cell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private void processRow(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "id": "697990671fec30c1c31bfb32b78e9e23", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     private Object createElement(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-    \t\trow.cell(0).error(testResults, e);\r", "+    \t\trow.elementAt(0).error(testResults, e);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private Object createElement(Row firstRow, int classColumn, Row row, TestResults testResults) throws Exception", "id": "705d56ec08c8368dc884482d311cdefa", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic EnsureExpectations() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestEnsure.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t\tpublic EnsureExpectations() throws Exception", "id": "7747192a91e5d1fb78f3d9c5772df71c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \r     public void testRow0()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 6, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            row.cell(1);\r", "+            row.elementAt(1);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \r     public void testRow0()", "id": "875419311902ce2099daece76614ecc3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 23, "signatureBeforeChange": "\r \tpublic void setIsHidden()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 22, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tcell(i).setIsHidden();\r", "+\t\t\telementAt(i).setIsHidden();\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void setIsHidden()", "id": "8d84d5399eb99c44b490ac187f754aa4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r     @Override\r \tpublic void error(TestResults testResults, Throwable throwable)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 9, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        \tcell(0).error(testResults,e);\r", "+        \telementAt(0).error(testResults,e);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     @Override\r \tpublic void error(TestResults testResults, Throwable throwable)", "id": "8f95fd9aa0c01aaedec8611208e0f004", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShow.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "id": "98d759106d6dffb9420708a917b4ada7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate List<Object> actualArgs(Row row, List<Object> result)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 6, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(i);\r", "+\t\t\tCell cell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate List<Object> actualArgs(Row row, List<Object> result)", "id": "98fd999bb9d5851cc4c8f75ae4a68d71", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 55, "signatureBeforeChange": "\r \tprivate Cell operatorCell(final RowOnParse row)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 55, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\treturn row.cell(row.size()-2);\r", "+\t\treturn row.elementAt(row.size()-2);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate Cell operatorCell(final RowOnParse row)", "id": "9b16d7a6d3af5c500d05b769e355aae8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestSetSymbolNamed.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0); will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0); will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "id": "a125e6c47d536521e477877ce2bf45a3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected void addSurplusRows(Table table, Map<Object,Object> surplus,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/collection/map/MapTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\t\trow.cell(0).actualElementMissing(testResults);\r", "+\t\t\t\trow.elementAt(0).actualElementMissing(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprotected void addSurplusRows(Table table, Map<Object,Object> surplus,\r \t\t\tTestResults testResults)", "id": "b0eeaaf7e2ada32c4770a6441bd1bafa", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r     public String text(int i, VariableResolver resolver)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 11, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        return cell(i).text(resolver);\r", "+        return elementAt(i).text(resolver);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public String text(int i, VariableResolver resolver)", "id": "b2caadde5d4e212ccdd1a476bbd4b737", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithNoCellsHadsOneCell()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tassertThat(row.cell(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithNoCellsHadsOneCell()", "id": "b40fe9173094631affed021d515606dc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r     @SuppressWarnings(\"unused\")\r     private MethodTarget[] bindGettersForOneElement(Row row, TestResults testResults, TypedObject typedObject)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 13, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell cell = row.cell(i);\r", "+            Cell cell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     @SuppressWarnings(\"unused\")\r     private MethodTarget[] bindGettersForOneElement(Row row, TestResults testResults, TypedObject typedObject)", "id": "b8d35fa047a72db3d1f57a4e6f12f563", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r    public void missing(TestResults testResults)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 12, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        cell(0).expectedElementMissing(testResults);\r", "+        elementAt(0).expectedElementMissing(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r    public void missing(TestResults testResults)", "id": "c0ac5693a5be091282dc29e40db1735e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void error(String message)", "fileName": "src/fitlibrary/traverse/workflow/PlainText.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\trow.cell(0).error(testResults, message);\r", "+\t\trow.elementAt(0).error(testResults, message);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void error(String message)", "id": "c210f964550d946fa87c6e27e96fc2b0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic NotExpectations() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestNot.java", "methodNumberAfterChange": 0, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tallowing(initialRow).cell(0);will(returnValue(firstCell));\r", "+\t\t\tallowing(initialRow).elementAt(0);will(returnValue(firstCell));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t\tpublic NotExpectations() throws Exception", "id": "c2cd7f4aea8595d0b8f75975f8cd317b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r     private void collectCells(Row row, int step, TestResults testResults, boolean catchParseError) throws Exception", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 11, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(argNo*step);\r", "+\t\t\tCell cell = row.elementAt(argNo*step);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private void collectCells(Row row, int step, TestResults testResults, boolean catchParseError) throws Exception", "id": "ca4dc671945d1ade18241b96d5e34a45", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 21, "signatureBeforeChange": "\r \tpublic void ignore(TestResults testResults)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 20, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tcell(i).ignore(testResults);\r", "+\t\t\telementAt(i).ignore(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void ignore(TestResults testResults)", "id": "cb68c792476f43cd33c2ed3ab79d0732", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r     public void testRow0Exception()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 11, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        assertTrue(row0.cell(0).hadError());\r", "+        assertTrue(row0.elementAt(0).hadError());\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void testRow0Exception()", "id": "cf415ca26f1147f2de9521d7888cb983", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithOneCellWithNoColumnSpanSet()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tassertThat(row.cell(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithOneCellWithNoColumnSpanSet()", "id": "d4f13c9ed362017503a26fa8b985015b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 35, "signatureBeforeChange": "\r \tpublic int getColumnSpan()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 34, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tcol += cell(i).getColumnSpan();\r", "+\t\t\tcol += elementAt(i).getColumnSpan();\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic int getColumnSpan()", "id": "de6c7e3bd391d091efb2985a2bdb9d7f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void analyse()", "fileName": "src/fitlibrary/traverse/workflow/PlainText.java", "methodNumberAfterChange": 1, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tString textCall = row.cell(1).fullText();\r", "+\t\tString textCall = row.elementAt(1).fullText();\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void analyse()", "id": "e469bf77444288efc7974d780b50ead0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/caller/DoActionCaller.java", "methodNumberAfterChange": 2, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\t\trow.cell(0).error(testResults);\r", "+\t\t\t\trow.elementAt(0).error(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults) throws Exception", "id": "eb3999dff8a64e3843342e7b5bdda81b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 17, "signatureBeforeChange": "\r \tprivate static void addSurplusRows(Table table, List<MethodTarget[]> surplusBindings,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 17, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            row.cell(0).actualElementMissing(testResults);\r", "+            row.elementAt(0).actualElementMissing(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate static void addSurplusRows(Table table, List<MethodTarget[]> surplusBindings,\r \t\t\tTestResults testResults)", "id": "eb502f4ea1e5401823f29664fbba22b0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithOneCellWithColumnSpanSet()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tassertThat(row.cell(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithOneCellWithColumnSpanSet()", "id": "efc843d28a166ccd0c1087e4ddc70e6a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r     public void testRow0Ignored()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 10, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        assertTrue(row0.cell(0).wasIgnored());\r", "+        assertTrue(row0.elementAt(0).wasIgnored());\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void testRow0Ignored()", "id": "f0cfae6ecd104bb7ac4e6700c1241d87", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void row(TestResults testResults, Row row) throws Exception", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(i);\r", "+\t\t\tCell cell = row.elementAt(i);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void row(TestResults testResults, Row row) throws Exception", "id": "f1d8d5fe60a2a92a0f516caa06427087", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate List<MethodTarget[]> matchOnColumn(final Row row, List<MethodTarget[]> theActuals, final int column, TestResults testResults)", "fileName": "src/fitlibrary/collection/set/SetTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        final Cell cell = row.cell(column);\r", "+        final Cell cell = row.elementAt(column);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate List<MethodTarget[]> matchOnColumn(final Row row, List<MethodTarget[]> theActuals, final int column, TestResults testResults)", "id": "f754b21f67721a46435ba591af5494d3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "508196fdd1d25a1f366fcab5f63b96ed", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}