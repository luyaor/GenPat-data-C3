{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \t@Test\r \tpublic void rowOfOneHasSizeOf1()", "fileName": "test/fitlibrary/matcher/TestTableBuilderForTests.java", "methodNumberAfterChange": 8, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRowBuilder rowBuilder = row().\r", "-\t\t\twith(cell());\r", "-\t\tRow row = rowBuilder.expect(context);\r", "+\t\tRowBuilder rowBuilder = row().with(cell());\r", "+\t\tRow row = rowBuilder.mock(context);\r", "-\t\tassertThat(row.last(), sameInstance(row.elementAt(0)));\r", "+\t\tassertThat(row.last(), sameInstance(row.at(0)));\r", "-\t\tassertThat(iterator.next(), sameInstance(row.elementAt(0)));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(0)));\r", "+\t\tassertThat(iterator.hasNext(), is(false));\r", "+\t\t\r", "+\t\tassertThat(row.size(), is(1));\r", "+\t\titerator = row.iterator();\r", "+\t\tassertThat(iterator.hasNext(), is(true));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(0)));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void rowOfOneHasSizeOf1()", "id": "015a3478007f96438b5eb9218fe44597", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic static void main(String[] args) throws IOException, InterruptedException", "fileName": "test/fitlibrary/batch/TestFitLibraryRunner.java", "methodNumberAfterChange": 7, "commitBeforeChange": "5ba818354648ea599f271f8106e1431db9c61d96", "diff": ["-\r", "-\tpublic static void main(String[] args) throws IOException, InterruptedException {\r", "-\t\tString[] arguments = { \r", "-\t\t\t\t\"FitLibrary.SpecifiCations.CoreFitSpecifications.PackageImportsAndDefaults\",\r", "-\t\t\t\t\"fitnesse\",\r", "-\t\t\t\t\"runnerResults\",\r", "-\t\t\t\t\"showPasses\"};\r", "-\t\tFitLibraryRunner.main(arguments );\r", "+\t}\r", "+\t@Test\r", "+\tpublic void allAreGiven() {\r", "+\t\tString[] args = {\r", "+\t\t\t\t\"-suiteName\", \"Suite.Name\",\r", "+\t\t\t\t\"-fitNesseDiry\", \"../..\",\r", "+\t\t\t\t\"-resultsDiry\", \"TheResults\",\r", "+\t\t\t\t\"-showPasses\", \"true\",\r", "+\t\t\t\t\"-port\", \"8990\"};\r", "+\t\tRunParameters runParameters = FitLibraryRunner.getRunParameters(args);\r", "+\t\tassertThat(runParameters.get(\"suiteName\"),is(\"Suite.Name\"));\r", "+\t\tassertThat(runParameters.get(\"fitNesseDiry\"),is(\"../..\"));\r", "+\t\tassertThat(runParameters.get(\"resultsDiry\"),is(\"TheResults\"));\r", "+\t\tassertThat(runParameters.get(\"showPasses\"),is(\"true\"));\r", "+\t\tassertThat(runParameters.get(\"port\"),is(\"8990\"));\r", "+\t}\r"], "commitAfterChange": "f6e898e2c958fb69eedd2858e821919ee34de215", "signatureAfterChange": "\r \t@Test\r \tpublic void allAreGiven()", "id": "cea0ebc51f481ef4a08bcc3daac1c5cb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "88aafbdc449f811d1eb0675293590614", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}