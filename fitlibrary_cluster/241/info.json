{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \r \tpublic boolean reportsEqual(String level, Tables actualTables, Tables expectedTables)", "fileName": "src/fitlibrary/spec/SpecifyFixture2.java", "methodNumberAfterChange": 2, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\tpublic boolean reportsEqual(String level, Tables actualTables, Tables expectedTables) {\r", "-\t\tif (actualTables.size() != expectedTables.size()) {\r", "-\t\t\terrorReport.sizeWrong(level,\"tables\",actualTables.size(),expectedTables.size());\r", "+\tpublic boolean reportsEqual(String path, TableElement actual, TableElement expected) {\r", "+\t\tif (actual.getClass() != expected.getClass()) {\r", "+\t\t\terrorReport.classesWrong(path,actual,expected);\r", "-\t\treturn false;\r", "+\t\tif (actual.size() != expected.size()) {\r", "+\t\t\terrorReport.sizeWrong(path,actual,expected);\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\tIterator<TableElement> actuals = actual.iterator();\r", "+\t\tIterator<TableElement> expecteds = expected.iterator();\r", "+\t\tint count = 0;\r", "+\t\twhile (actuals.hasNext()) {\r", "+\t\t\tTableElement act = actuals.next();\r", "+\t\t\tString nameOfElement = act.getType()+\"[\"+count+\"]\";\r", "+\t\t\tString pathFurther = path.isEmpty() ? nameOfElement : path + \".\" + nameOfElement;\r", "+\t\t\tif (!reportsEqual(pathFurther,act,expecteds.next()))\r", "+\t\t\t\treturn false;\r", "+\t\t\tcount++;\r", "+\t\t}\r", "+\t\tif (actual instanceof Cell) {\r", "+\t\t\tCell actualCell = (Cell) actual;\r", "+\t\t\tCell expectedCell = (Cell) expected;\r", "+\t\t\tif (!actualCell.text().equals(expectedCell.text())) {\r", "+\t\t\t\terrorReport.cellTextWrong(path,actualCell.text(),expectedCell.text());\r", "+\t\t\t\treturn false;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn true;\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \r \tpublic boolean reportsEqual(String path, TableElement actual, TableElement expected)", "id": "38225b581d50e04626ea63efa26bcfed", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic boolean matchesSafely(Tables item)", "fileName": "src/fitlibrary/matcher/TablesMatcher.java", "methodNumberAfterChange": 1, "commitBeforeChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "diff": ["-\tpublic boolean matchesSafely(Tables item) {\r", "-\t\treturn false;\r", "+\tpublic boolean matchesSafely(Tables actualTables) {\r", "+\t\tSpecifyErrorReport specifyErrorReport = new SpecifyErrorReport() {\r", "+\t\t\t@Override\r", "+\t\t\tpublic void actualResult(Tables actualResult) {\r", "+\t\t\t\tSystem.out.println(\"actualResult \"+actualResult.toString());\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void cellTextWrong(String path, String actual, String expected) {\r", "+\t\t\t\tdisplay(\"cellTextWrong\", path, actual, expected);\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void leaderWrong(String path, String actual, String expected) {\r", "+\t\t\t\tdisplay(\"leaderWrong\", path, actual, expected);\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void sizeWrong(String path, int actual, int expected) {\r", "+\t\t\t\tSystem.out.println(\"sizeWrong at \"+path+\" Actual: \"+actual+\r", "+\t\t\t\t\t\t\" Expected: \"+expected);\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void tagLineWrong(String path, String actual, String expected) {\r", "+\t\t\t\tdisplay(\"tagLineWrong\", path, actual, expected);\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void trailerWrong(String path, String actual, String expected) {\r", "+\t\t\t\tdisplay(\"trailerWrong\", path, actual, expected);\r", "+\t\t\t}\r", "+\t\t\tprivate void display(String action, String path,\r", "+\t\t\t\t\tString actualText, String expectedText) {\r", "+\t\t\t\tSystem.out.println(action+\" at \"+path+\"\\nActual:----\\n\"+actualText+\r", "+\t\t\t\t\t\t\"\\nExpected:----\\n\"+expectedText+\"\\n----\");\r", "+\t\t\t}\r", "+\t\t};\r", "+\t\treturn new TablesCompare(specifyErrorReport).tablesEqual(\"tables\", actualTables, expectedTables);\r"], "commitAfterChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "signatureAfterChange": "\r \t@Override\r \tpublic boolean matchesSafely(Tables actualTables)", "id": "f7359ce46a7f081b28c79388a7e4abb4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "5272d327c1cd93d1172fc4db79cc65b3", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}