{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate void addObject(TypedObject typedObject, List<TypedObject> accumulatingObjects)", "fileName": "src/fitlibrary/flow/ScopeStack.java", "methodNumberAfterChange": 7, "commitBeforeChange": "3d1e9d49ea103c11cbc7aac289794db9b9fb9d72", "diff": ["-\t\tObject subject = typedObject.getSubject();\r", "-\t\tif (subject instanceof Evaluator)\r", "-\t\t\taddObject(((Evaluator)subject).getTypedSystemUnderTest(),accumulatingObjects);\r", "-\t\telse if (subject instanceof DomainAdapter) {\r", "-\t\t\tObject sut = ((DomainAdapter)subject).getSystemUnderTest();\r", "-\t\t\tif (sut != null)\r", "-\t\t\t\taddObject(new GenericTypedObject(sut),accumulatingObjects);\r", "-\t\t}\r", "+\t\tif (typedObject.hasTypedSystemUnderTest())\r", "+\t\t\taddObject(typedObject.getTypedSystemUnderTest(),accumulatingObjects);\r"], "commitAfterChange": "a6c1e5e7a0e2d59a2e0ed7586d0e7ddd7317f579", "signatureAfterChange": "\r \tprivate void addObject(TypedObject typedObject, List<TypedObject> accumulatingObjects)", "id": "52a244faf1220ad50daf2bc70216d451", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic void findMethodsFromPlainText(String textCall,\r \t\t\tList<ValidCall> results)", "fileName": "src/fitlibrary/typed/NonGenericTypedObject.java", "methodNumberAfterChange": 9, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic void findMethodsFromPlainText(String textCall,\r", "-\t\t\tList<ValidCall> results) {\r", "-\t\tif (subject == null)\r", "-\t\t\treturn;\r", "+\t}\r", "+\tpublic void findMethodsFromPlainText(String textCall, List<ValidCall> results) {\r", "-\t\tint size = results.size();\r", "-\t\t\t\t\t&& !PlugBoard.lookupClosure.fitLibrarySystemMethod(method,\r", "-\t\t\t\t\t\t\targCount, subject)) {\r", "-\t\t\t\tValidCall.parseAction(words, method.getName(), argCount,\r", "-\t\t\t\t\t\tresults);\r", "+\t\t\t\t\t&& !PlugBoard.lookupClosure.fitLibrarySystemMethod(method,argCount, subject)) {\r", "+\t\t\t\tValidCall.parseAction(words, method.getName(), argCount,results);\r", "-\t\tif (results.size() == size && subject instanceof DomainAdapter) {\r", "-\t\t\tDomainAdapter domainAdapter = (DomainAdapter) subject;\r", "-\t\t\tObject nestedSystemUnderTest = domainAdapter.getSystemUnderTest();\r", "-\t\t\tif (nestedSystemUnderTest != null)\r", "-\t\t\t\tasTypedObject(nestedSystemUnderTest).findMethodsFromPlainText(\r", "-\t\t\t\t\t\ttextCall, results);\r", "-\t\t}\r", "-\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic void findMethodsFromPlainText(String textCall, List<ValidCall> results)", "id": "ea55dbabf8281062a593ea500affd6a3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "46b62a0faeb9a518a838726546c61916", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}