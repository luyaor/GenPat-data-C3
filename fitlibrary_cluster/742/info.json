{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     public Counts runInSuite(File inFile, File theReport, String encoding, Parse setUp,\r             Parse tearDown, BatchFitLibrary batchFitLibrary) throws IOException", "fileName": "src/fitlibrary/runner/HtmlRunner.java", "methodNumberAfterChange": 2, "commitBeforeChange": "c9a02fbef6bcaff0b0f1bdcd96e45453e110ead4", "diff": ["-//        if (!theReport.canWrite() && false) {//////////////////////\r", "-//            System.err.println(\"HtmlRunner: Unable to write \"+theReport.getAbsolutePath());/////\r", "-//            Counts counts = new Counts();\r", "-//            counts.ignores++;\r", "-//            return counts;\r", "-//        }\r", "-            Parse tables = new Parse(fileContents);\r", "-            Parse whole = integrateSetUpAndTearDown(tables, setUp, tearDown);\r", "-            Counts counts = batchFitLibrary.doStorytest(TableFactory.tables(whole)).getCounts();\r", "-            whole.print(output);\r", "+            Parse whole = integrateSetUpAndTearDown(new Parse(fileContents), setUp, tearDown);\r", "+            Tables tables = TableFactory.tables(whole);\r", "+\t\t\tCounts counts = batchFitLibrary.doStorytest(tables).getCounts();\r", "+\t\t\toutputHtml(output, tables);\r", "-        \te.printStackTrace();\r", "+        \tstackTrace(output, e);\r"], "commitAfterChange": "d5585b9bd9597ec67ca4eaebd1dd7d580af72cbc", "signatureAfterChange": "\r     public Counts runInSuite(File inFile, File theReport, String encoding, Parse setUp,\r             Parse tearDown, BatchFitLibrary batchFitLibrary) throws IOException", "id": "1c38c46aae05f41e8e8ad352d532f345", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public Counts run(File inFile, File reportFile, Parse setUpTables, Parse tearDownTables,\r     \t\tBatchFitLibrary batchFitLibrary) throws FileNotFoundException, IOException", "fileName": "src/fitlibrary/runner/SpreadsheetRunner.java", "methodNumberAfterChange": 4, "commitBeforeChange": "c9a02fbef6bcaff0b0f1bdcd96e45453e110ead4", "diff": ["-            Parse parseTables = customRunner.getTables();\r", "-\t\t\tTestResults testResults = batchFitLibrary.doStorytest(TableFactory.tables(parseTables));\r", "-\t\t\tparseTables.print(output);\r", "-\t\t\toutput.close();\r", "-\t\t\treturn testResults.getCounts();\r", "-         } catch (CustomRunnerException e) {\r", "-            throw new RuntimeException(e.getMessage()+\" in file \"+inFile.getAbsolutePath());\r", "+            Tables tables = TableFactory.tables(customRunner.getTables());\r", "+\t\t\tCounts counts = batchFitLibrary.doStorytest(tables).getCounts();\r", "+\t\t\toutputHtml(output, tables);\r", "+\t\t\treturn counts;\r", "+         } catch (Exception e) {\r", "+         \tstackTrace(output, e);\r", "+        \treturn new Counts(0,0,0,0);\r", "+        } finally  {\r", "+            output.close();\r"], "commitAfterChange": "d5585b9bd9597ec67ca4eaebd1dd7d580af72cbc", "signatureAfterChange": "\r     public Counts run(File inFile, File reportFile, Parse setUpTables, Parse tearDownTables,\r     \t\tBatchFitLibrary batchFitLibrary) throws FileNotFoundException, IOException", "id": "624b22cc7bf73275878f21b12ddc0b4d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     public Counts runInSuite(File inFile, File theReport, String encoding, Parse setUp,\r             Parse tearDown, BatchFitLibrary batchFitLibrary) throws IOException", "fileName": "src/fitlibrary/runner/HtmlRunner.java", "methodNumberAfterChange": 2, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-        if (!theReport.canWrite() && false) {//////////////////////\r", "-            System.err.println(\"HtmlRunner: Unable to write \"+theReport.getAbsolutePath());/////\r", "-            Counts counts = new Counts();\r", "-            counts.ignores++;\r", "-            return counts;\r", "-        }\r", "+//        if (!theReport.canWrite() && false) {//////////////////////\r", "+//            System.err.println(\"HtmlRunner: Unable to write \"+theReport.getAbsolutePath());/////\r", "+//            Counts counts = new Counts();\r", "+//            counts.ignores++;\r", "+//            return counts;\r", "+//        }\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r     public Counts runInSuite(File inFile, File theReport, String encoding, Parse setUp,\r             Parse tearDown, BatchFitLibrary batchFitLibrary) throws IOException", "id": "a85593eff98330b73e9daf39dc50b66f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "869c5ae506d9dec0f20ecbfcd9d96028", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}