{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic NonGenericFinder(Typed typed, Evaluator evaluator)", "fileName": "src/fitlibrary/object/NonGenericFinder.java", "methodNumberAfterChange": 0, "commitBeforeChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "diff": ["-\t\tString potentialClasses = PlugBoard.lookupTarget.identifiedClassesInOutermostContext(evaluator, true);\r", "+\t\tList<Class<?>> potentialClasses = PlugBoard.lookupTarget.identifiedClassesInOutermostContext(evaluator, true);\r", "-\t\tfindExceptionMessage = \"EITHER \"+shortClassName+\r", "-\t\t\t\" is (1) a Value Object. So missing parse method: \"+\r", "+\t\tfindExceptionMessage = \"Either \"+shortClassName+\r", "+\t\t\t\" is<ul><li> A <b>Value Object</b>. So missing parse method: \"+\r", "-\t\t\t\"; OR (2) an Entity. So missing finder method: \"+\r", "-\t\t\t\"public \"+shortClassName+\" find\"+shortClassName+\"(String key) { } in \"+potentialClasses;\r", "+\t\t\t\"; or </li></li>An Entity. So missing finder method: \"+\r", "+\t\t\t\"public \"+shortClassName+\" find\"+shortClassName+\"(String key) { }</li></ul>In:\"+names(potentialClasses);\r", "+\t}\r"], "commitAfterChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "signatureAfterChange": "\r \r \tpublic NonGenericFinder(Typed typed, Evaluator evaluator)", "id": "0ad71c2ea3d11a5d55686b106ff5b4c5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic GenericFinder(GenericTyped typed, Evaluator evaluator)", "fileName": "src/fitlibraryGeneric/object/GenericFinder.java", "methodNumberAfterChange": 0, "commitBeforeChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "diff": ["-\t\tString potentialClasses = PlugBoard.lookupTarget.identifiedClassesInOutermostContext(evaluator, true);\r", "+\t\tList<Class<?>> potentialClasses = PlugBoard.lookupTarget.identifiedClassesInOutermostContext(evaluator, true);\r", "-\t\tfindExceptionMessage = \"EITHER \"+shortClassName+\r", "-\t\t\t\" is (1) a Value Object. So missing parse method: \"+\r", "-\t\t\t\"public static \"+shortClassName+\" parse(String s) { } in class \"+typed.getClassName()+\r", "-\t\t\t\"; OR (2) an Entity. So missing finder method: \"+findMethodSignature;\r", "+\t\tfindExceptionMessage = \"Either \"+shortClassName+\r", "+\t\t\t\" is <ul><li>A <b>Value Object</b>. So missing parse method: \"+\r", "+\t\t\t\"public static \"+shortClassName+\" parse(String s) { }<br/>in class \"+typed.getClassName()+\r", "+\t\t\t\"; or</li><li><b>An Entity</b>. So missing finder method: \"+findMethodSignature;\r", "-\t\t\tfindExceptionMessage += \" or missing generic finder method: \"+genericFindMethodSignature;\r", "-\t\tfindExceptionMessage += \"in \"+potentialClasses;\r", "+\t\t\tfindExceptionMessage += \" or</li>Missing generic finder method: \"+genericFindMethodSignature;\r", "+\t\tfindExceptionMessage += \", possibly in classes:\"+names(potentialClasses)+\"</li></ul>\";\r"], "commitAfterChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "signatureAfterChange": "\r \r \tpublic GenericFinder(GenericTyped typed, Evaluator evaluator)", "id": "1d697ea0b98db95e41f090df5e3e30e9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4ef90d2d61cef76aa05d15cb2813e312", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"]}