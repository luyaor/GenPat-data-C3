{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic Object run(IRow row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/caller/DoActionCaller.java", "methodNumberAfterChange": 2, "commitBeforeChange": "912f2299cb68da9d49ecfc90590037db64cfcc0e", "diff": ["-\tpublic Object run(IRow row, TestResults testResults) throws Exception {\r", "-\t\treturn new ActionCaller(target).run(row, testResults);\r", "+\tpublic TypedObject run(IRow row, TestResults testResults) throws Exception {\r", "+\t\ttry {\r", "+\t\t\tTypedObject typedResult = target.invokeTyped(row.rowFrom(1),testResults);\r", "+\t\t\tObject result = null;\r", "+\t\t\tif (typedResult != null)\r", "+\t\t\t\tresult = typedResult.getSubject();\r", "+\t\t\tif (result instanceof Boolean)\r", "+\t\t\t\ttarget.color(row,((Boolean)result).booleanValue(),testResults);\r", "+\t\t\treturn typedResult;\r", "+\t\t} catch (AbandonException e) {\r", "+\t\t\treturn new GenericTypedObject(null);\r", "+\t\t} catch (InvocationTargetException e) {\r", "+\t\t\tThrowable throwable = PlugBoard.exceptionHandling.unwrapThrowable(e);\r", "+\t\t\tif (throwable instanceof FitLibraryShowException)\r", "+\t\t\t\trow.cell(0).error(testResults);\r", "+\t\t\tthrow e;\r", "+\t\t}\r"], "commitAfterChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(IRow row, TestResults testResults) throws Exception", "id": "4066fb4ab8b9270184f6541feb37a94b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate static void runParallel(String suiteName, String fitNesseDirectoryPath, String resultsDirectoryPath, boolean showPasses, int port) throws IOException, InterruptedException", "fileName": "src/fitlibrary/batch/FitLibraryRunner.java", "methodNumberAfterChange": 4, "commitBeforeChange": "7bc373fdff836c5fe5554dd7cca83ec4c7ddbc73", "diff": ["-\tprivate static void runParallel(String suiteName, String fitNesseDirectoryPath, String resultsDirectoryPath, boolean showPasses, int port) throws IOException, InterruptedException {\r", "+\tprivate static void runParallel(String suiteName, String fitNesseDirectoryPath, String resultsDirectoryPath, boolean showPasses, int port, int maxRetries) throws IOException, InterruptedException {\r", "-\t\tParallelTestRunner runner = new ParallelTestRunner(new ParallelFitNesseRepository(fitNesseDirectoryPath,port), \r", "-\t\t\t\tnew FitLibraryTestEngine(),resultsDirectoryPath,showPasses,suiteName);\r", "-\t\tCounts counts = runner.runSuite(suiteName,new ParallelSuiteResult(suiteName,showPasses));\r", "-\t\treport(start, counts);\r", "+\t\tHashSet<String> passedTestList = new HashSet<String>();\r", "+\t\tFitLibraryTestEngine testEngine = new RetryAwareFitLibraryTestEngine(passedTestList);\r", "+\t\tint numLoops = 1; \r", "+\t\tCounts counts;\r", "+\t\twhile(true) {\r", "+\t\t\tParallelTestRunner runner = new ParallelTestRunner(new ParallelFitNesseRepository(fitNesseDirectoryPath,port), testEngine,resultsDirectoryPath,showPasses,suiteName);\r", "+\t\t\tcounts = runner.runSuite(suiteName,new ParallelSuiteResult(suiteName,showPasses));\r", "+\t\t\treport(start, counts);\r", "+\t\t\tif ((counts.exceptions+counts.wrong) == 0 || numLoops++ > maxRetries) \r", "+\t\t\t\tbreak;\r", "+\t\t\t\r", "+\t\t\tSystem.out.println(\" \"); \r", "+\t\t\tSystem.out.println(\"Some tests failed... Retry #\"+(numLoops-1));\r", "+\t\t} \r", "+\t\t\r", "+\t\tSystem.exit(counts.wrong+counts.exceptions);\r"], "commitAfterChange": "a1ec4135443e6b5658923cb34156b47b7ffd658c", "signatureAfterChange": "\r \tprivate static void runParallel(String suiteName, String fitNesseDirectoryPath, String resultsDirectoryPath, boolean showPasses, int port, int maxRetries) throws IOException, InterruptedException", "id": "49d303edadcd86f09e7e66b76fdea4b9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "31912799832377a38909c11c7ac3c469", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}