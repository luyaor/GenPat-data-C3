{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic boolean equals(String actualString, String expectedString)", "fileName": "src/fitlibrary/spec/TablesCompare.java", "methodNumberAfterChange": 2, "commitBeforeChange": "ffb3a105f2dd1aba96f84ebd4186987eb580fd1c", "diff": ["-\t\t\r", "-\t\tif (actual.isEmpty() && expected.equals(\"&nbsp;\") ||\r", "-\t\t\t\texpected.isEmpty() && actual.equals(\"&nbsp;\"))\r", "-\t\t\treturn true;\r", "-\t\tString stackTrace = \"class=\\\"fit_stacktrace\\\">\";\r", "-\t\tint startExpected = expected.indexOf(stackTrace);\r", "-\t\tint startActual = actual.indexOf(stackTrace);\r", "-\t\tif (startExpected != startActual)\r", "-\t\t\treturn false;\r", "-\t\tif (startExpected >= 0)\r", "-\t\t\treturn actual.startsWith(expected.substring(0,startExpected));\r", "-\t\tString fitLabel = \"<span class=\\\"fit_label\\\">\";\r", "-\t\tString endFitLabel = \"</span>\";\r", "-\t\twhile (true) {\r", "-\t\t\tstartExpected = expected.indexOf(fitLabel);\r", "-\t\t\tstartActual = actual.indexOf(fitLabel);\r", "-\t\t\tif (startExpected != startActual)\r", "-\t\t\t\treturn false;\r", "-\t\t\tif (startExpected < 0)\r", "-\t\t\t\treturn actual.equals(expected);\r", "-\t\t\t\r", "-\t\t\tString expectedPrefix = expected.substring(0,startExpected);\r", "-\t\t\tif (!actual.substring(0,startActual).equals(expectedPrefix))\r", "-\t\t\t\treturn false;\r", "-\t\t\tint endExpected = expected.indexOf(endFitLabel,startExpected);\r", "-\t\t\tint endActual = actual.indexOf(endFitLabel,startActual);\r", "-\t\t\tif (endExpected < 0 || endActual < 0)\r", "-\t\t\t\treturn false;\r", "-\t\t\tString actualLabel = actual.substring(startActual+fitLabel.length(),endActual);\r", "-\t\t\tString expectedLabel = expected.substring(startExpected+fitLabel.length(),endExpected);\r", "-\t\t\tif (!actualLabel.startsWith(expectedLabel))\r", "-\t\t\t\treturn false;\r", "-\t\t\tactual = actual.substring(endActual+endFitLabel.length());\r", "-\t\t\texpected = expected.substring(endExpected+endFitLabel.length());\r", "-\t\t}\r", "+\t\treturn matcherPipeline.match(actual, expected);\r"], "commitAfterChange": "217037b82c662a130b6f1897ec27b10c0077de31", "signatureAfterChange": "\r \tpublic boolean equals(String actualString, String expectedString)", "id": "3ae65b1cad65900535f43de960f07baf", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate boolean equals(String actual, String expected)", "fileName": "src/fitlibrary/spec/TablesCompare.java", "methodNumberAfterChange": 2, "commitBeforeChange": "aa7e035202af44c59ac4b9611ab51754bfc767f1", "diff": ["-\tprivate boolean equals(String actual, String expected) {\r", "-\t\tString canonicalActual = canonical(actual);\r", "-\t\tString canonicalExpected = canonical(expected);\r", "+\tpublic boolean equals(String actualString, String expectedString) {\r", "+\t\tString actual = canonical(actualString);\r", "+\t\tString expected = canonical(expectedString);\r", "-\t\tif (\"IGNORE\".equals(canonicalExpected))\r", "+\t\tif (\"IGNORE\".equals(expected))\r", "-\t\tint start = canonicalExpected.indexOf(stackTrace);\r", "-\t\tif (start >= 0)\r", "-\t\t\treturn canonicalActual.startsWith(canonicalExpected.substring(0,start+stackTrace.length()));\r", "+\t\tint startExpected = expected.indexOf(stackTrace);\r", "+\t\tint startActual = actual.indexOf(stackTrace);\r", "+\t\tif (startExpected != startActual)\r", "+\t\t\treturn false;\r", "+\t\tif (startExpected >= 0)\r", "+\t\t\treturn actual.startsWith(expected.substring(0,startExpected));\r", "-\t\tstart = canonicalExpected.indexOf(fitLabel);\r", "-\t\tif (start >= 0)\r", "-\t\t\treturn canonicalActual.startsWith(canonicalExpected.substring(0,start+fitLabel.length()));\r", "-\t\treturn canonicalActual.equals(canonicalExpected);\r", "+\t\tString endFitLabel = \"</span>\";\r", "+\t\twhile (true) {\r", "+\t\t\tstartExpected = expected.indexOf(fitLabel);\r", "+\t\t\tstartActual = actual.indexOf(fitLabel);\r", "+\t\t\tif (startExpected != startActual)\r", "+\t\t\t\treturn false;\r", "+\t\t\tif (startExpected < 0)\r", "+\t\t\t\treturn actual.equals(expected);\r", "+\t\t\t\r", "+\t\t\tString expectedPrefix = expected.substring(0,startExpected);\r", "+\t\t\tif (!actual.substring(0,startActual).equals(expectedPrefix))\r", "+\t\t\t\treturn false;\r", "+\t\t\tint endExpected = expected.indexOf(endFitLabel,startExpected);\r", "+\t\t\tint endActual = actual.indexOf(endFitLabel,startActual);\r", "+\t\t\tif (endExpected < 0 || endActual < 0)\r", "+\t\t\t\treturn false;\r", "+\t\t\tString actualLabel = actual.substring(startActual+fitLabel.length(),endActual);\r", "+\t\t\tString expectedLabel = expected.substring(startExpected+fitLabel.length(),endExpected);\r", "+\t\t\tif (!actualLabel.startsWith(expectedLabel))\r", "+\t\t\t\treturn false;\r", "+\t\t\tactual = actual.substring(endActual+endFitLabel.length());\r", "+\t\t\texpected = expected.substring(endExpected+endFitLabel.length());\r", "+\t\t}\r"], "commitAfterChange": "0c95be0b15a91849d3e53045090b616f855d42ad", "signatureAfterChange": "\r \tpublic boolean equals(String actualString, String expectedString)", "id": "549df21d3aecc6712d17c4fa2f5a3489", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "64b1a43fc659cdfdcae74445ae737cba", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}