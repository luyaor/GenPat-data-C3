{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 33, "signatureBeforeChange": "\r     public void addToTag(String report)", "fileName": "src/fitlibrary/table/TableElementOnList.java", "methodNumberAfterChange": 33, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-    \t\tat(0).addToTag(report);\r", "-    \ttagAnnotation += report;\r", "+    \t\tat(0).addToTag(report.trim());\r", "+    \tif (tagAnnotation.isEmpty())\r", "+    \t\ttagAnnotation += report.trim();\r", "+    \telse\r", "+    \t\ttagAnnotation += \" \"+report.trim();\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r     public void addToTag(String report)", "id": "7bd59b3c7122fc7caf4806702b8c6d24", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic CalledMethodTarget optionallyFindGetterOnTypedObject(\r \t\t\tString propertyName, Evaluator evaluator)", "fileName": "src/fitlibrary/typed/NonGenericTypedObject.java", "methodNumberAfterChange": 7, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t}\r", "-\tpublic CalledMethodTarget optionallyFindGetterOnTypedObject(\r", "-\t\t\tString propertyName, Evaluator evaluator) {\r", "-\t\tString getMethodName = ExtendedCamelCase.camel(\"get \" + propertyName);\r", "-\t\tCalledMethodTarget target = optionallyFindMethodOnTypedObject(\r", "-\t\t\t\tgetMethodName, 0, evaluator, true);\r", "-\t\tif (target == null) {\r", "-\t\t\tString isMethodName = ExtendedCamelCase.camel(\"is \" + propertyName);\r", "-\t\t\ttarget = optionallyFindMethodOnTypedObject(isMethodName, 0,\r", "-\t\t\t\t\tevaluator, true);\r", "-\t\t}\r", "-\t\treturn target;\r", "-\t}\r", "+\tpublic CalledMethodTarget new_optionallyFindGetterOnTypedObject(String propertyName, Evaluator evaluator) {\r", "+\t\tString getMethodName = ExtendedCamelCase.camel(\"get \" + propertyName);\r", "+\t\tOption<CalledMethodTarget> target = new_findSpecificMethod(getMethodName, 0, evaluator);\r", "+\t\tif (target.isSome())\r", "+\t\t\treturn target.get();\r", "+\t\tString isMethodName = ExtendedCamelCase.camel(\"is \" + propertyName);\r", "+\t\ttarget = new_findSpecificMethod(isMethodName, 0, evaluator);\r", "+\t\tif (target.isSome())\r", "+\t\t\treturn target.get();\r", "+\t\treturn null;\r", "+\t}\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic CalledMethodTarget new_optionallyFindGetterOnTypedObject(String propertyName, Evaluator evaluator)", "id": "e2b2a264f767ef18c6338db9bb27d646", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "fb421137e2a2f7e92a10818edcc8d64a", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}