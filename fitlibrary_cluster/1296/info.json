{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t@Test\r \tpublic void nullaryInnerRunsReturningNothing() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 5, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["+\t\t\tallowing(evaluator).getRuntimeContext();\r", "+\t\t\twill(returnValue(runtime));\r", "+\t\t\tallowing(runtime).extendedCamel(\"find void\");\r", "+\t\t\twill(returnValue(\"findVoid\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show void\");\r", "+\t\t\twill(returnValue(\"showVoid\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"findVoid\");\r", "+\t\t\twill(returnValue(\"findString\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "+\t\t\twill(returnValue(\"showString\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "+\t\t\twill(returnValue(\"findDoAction\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "+\t\t\twill(returnValue(\"showDoAction\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "+\t\t\twill(returnValue(\"findBoolean\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "+\t\t\twill(returnValue(\"showBoolean\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\" n\");\r", "+\t\t\twill(returnValue(\"n\"));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \t@Test\r \tpublic void nullaryInnerRunsReturningNothing() throws Exception", "id": "80e0e973e3e9d2ca03b23d91d84b0df0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t@Test\r \tpublic void nullaryInnerRunsReturningNothing() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e4ab562e1e827e062d1be5204027041002fec975", "diff": ["-\t\t\tallowing(evaluator).getRuntimeContext();\r", "-\t\t\twill(returnValue(runtime));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find void\");\r", "-\t\t\twill(returnValue(\"findVoid\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show void\");\r", "-\t\t\twill(returnValue(\"showVoid\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"findVoid\");\r", "-\t\t\twill(returnValue(\"findString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "-\t\t\twill(returnValue(\"showString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "-\t\t\twill(returnValue(\"findDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "-\t\t\twill(returnValue(\"showDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "-\t\t\twill(returnValue(\"findBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "-\t\t\twill(returnValue(\"showBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\" n\");\r", "-\t\t\twill(returnValue(\"n\"));\r"], "commitAfterChange": "08cc4ee7c5f377198d1f5457a45687cb9cba9813", "signatureAfterChange": "\r \t@Test\r \tpublic void nullaryInnerRunsReturningNothing() throws Exception", "id": "bd65acc9e370b9dbde62e320ea866abe", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "cbe28e6f473ee101c7faa646484ba711", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}