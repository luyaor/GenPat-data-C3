{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 20, "signatureBeforeChange": "\r \t@Test(expected=MissingCellsException.class)\r \tpublic void rowIsTooSmall() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestNot.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t@Test(expected=MissingCellsException.class)\r", "-\tpublic void rowIsTooSmall() throws Exception {\r", "-\t\t\tallowing(initialRow).size();will(returnValue(1));\r", "-\t\tspecial.not(initialRow,NotSyle.PASSES_ON_EXCEPION);\r", "+\t}\r", "+\t@Test(expected=NotRejectedException.class)\r", "+\tpublic void exceptionWithNullResult() throws Exception {\r", "+\t\tcontext.checking(new Expectations() {{\r", "+\t\t\tone(action).runWithNoColouring(); will(returnValue(null));\r", "+\t\t}});\r", "+\t\tglobalActionScope.not(action);\r", "+\t}\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t@Test(expected=NotRejectedException.class)\r \tpublic void exceptionWithNullResult() throws Exception", "id": "2e4e610f0f21fa3c1c884ea0a610dd82", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Test(expected=MissingCellsException.class)\r \tpublic void rowIsTooSmall() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowEscaped.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t@Test(expected=MissingCellsException.class)\r", "-\tpublic void rowIsTooSmall() throws Exception {\r", "-\t\t\tallowing(initialRow).size();will(returnValue(1));\r", "-\t\tspecial.showEscaped(initialRow);\r", "+\t}\r", "+\t@Test\r", "+\tpublic void nothingShownWithNullResult() throws Exception {\r", "+\t\tcontext.checking(new Expectations() {{\r", "+\t\t\tone(action).run(); will(returnValue(null));\r", "+\t\t}});\r", "+\t\tglobalActionScope.showEscaped(action);\r", "+\t}\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t@Test\r \tpublic void nothingShownWithNullResult() throws Exception", "id": "bc30bb2adf95a7cdb28f1bf273c66a00", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "6adb27fcf080307efb4313a758cabfbe", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}