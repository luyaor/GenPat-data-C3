{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tpublic static void main(String[] args) throws IOException, InterruptedException", "fileName": "src/fitlibrary/batch/FitLibraryRunner.java", "methodNumberAfterChange": 0, "commitBeforeChange": "5ba818354648ea599f271f8106e1431db9c61d96", "diff": ["+\t\r", "-\t\tif (args.length != 3 && args.length != 4) {\r", "-\t\t\tSystem.err.println(\"Usage: fitlibrary.batch.FitLibraryRunner suiteName fitNesseDiry resultsDiry [showPasses]\");\r", "-\t\t\tSystem.exit(-1);\r", "+\t\tif (args.length > 0 && args[0].startsWith(\"-\"))\r", "+\t\t\trunWithNewArguments(args);\r", "+\t\telse\r", "+\t\t\trunWithOldArguments(args);\r", "+\t}\r", "-\t\tSystem.out.println(\"FitLibraryRunner\");\r", "-\t\trunParallel(suiteName, fitNesseDirectoryPath, resultsDirectoryPath, showPasses);\r"], "commitAfterChange": "f6e898e2c958fb69eedd2858e821919ee34de215", "signatureAfterChange": "\r \t\r \tpublic static void main(String[] args) throws IOException, InterruptedException", "id": "5fef8adb27d55f657bd7a0bb573746a8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findSetter(String propertyName, Evaluator evaluator)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 10, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic CalledMethodTarget findSetter(String propertyName, Evaluator evaluator) {\r", "-\t\tString methodName = ExtendedCamelCase.camel(\"set \"+propertyName);\r", "-\t\tString arg = camel(propertyName);\r", "-\t\tTypedObject typedSubject = evaluator.getTypedSystemUnderTest();\r", "-    \tif (typedSubject == null)\r", "-    \t\tthrow new NoSystemUnderTestException();\r", "-\t\tCalledMethodTarget target = typedSubject.optionallyFindMethodOnTypedObject(methodName,1,evaluator, true);\r", "-\t\tif (target != null)\r", "-\t\t\treturn target;\r", "-\t\tthrow new MissingMethodException(signatures(\"public void \"+methodName+\"(ArgType \"+arg+\") { }\"),identifiedClassesInSUTChain(typedSubject.getSubject()));\r", "+\tpublic CalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator) {\r", "+\t\treturn findMethodOnSut(camel(\"set \"+propertyName), 1, evaluator,\"ArgType \"+camel(propertyName));\r", "+\t}\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic CalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator)", "id": "a22c9858cdc3d68c1650ef914c437276", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "bb83aaed60ca762ab173b5afb6aaea9f", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}