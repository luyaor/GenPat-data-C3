{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic DefinedActionCaller(Row row, DoTraverseInterpreter doTraverse)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "diff": ["-\tpublic DefinedActionCaller(Row row, DoTraverseInterpreter doTraverse) {\r", "-\t\tthis.doTraverse = doTraverse;\r", "-\t\tthis.runtime = doTraverse.getRuntimeContext();\r", "-\t\tmethodName = row.methodNameForCamel(doTraverse);\r", "+\tpublic DefinedActionCaller(Row row, RuntimeContextInternal runtime) {\r", "+\t\tthis.runtime = runtime;\r", "+\t\tmethodName = row.methodNameForCamel(runtime.getResolver());\r", "-\t\t\t\t\tparameterSubstitution = TemporaryPlugBoardForRuntime.definedActionsRepository().lookupByClassByCamel(className.toString(), methodName, (actualArgs.size()-1), doTraverse.getRuntimeContext());\r", "+\t\t\t\t\tparameterSubstitution = TemporaryPlugBoardForRuntime.definedActionsRepository().\r", "+\t\t\t\t\tlookupByClassByCamel(className.toString(), methodName, (actualArgs.size()-1), runtime);\r"], "commitAfterChange": "8655c08986fab4cb3523c8934e8765739689b282", "signatureAfterChange": "\r \r \tpublic DefinedActionCaller(Row row, RuntimeContextInternal runtime)", "id": "28d021ceb3ff6786b2188dfc5ef776b7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic DefinedActionCaller(String object, String className, Row row, DoTraverseInterpreter doTraverse)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 1, "commitBeforeChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "diff": ["-\tpublic DefinedActionCaller(String object, String className, Row row, DoTraverseInterpreter doTraverse) {\r", "-\t\tthis.doTraverse = doTraverse;\r", "-\t\tthis.runtime = doTraverse.getRuntimeContext();\r", "-\t\tmethodName = row.methodNameForCamel(doTraverse);\r", "+\tpublic DefinedActionCaller(String object, String className, Row row, RuntimeContextInternal runtime) {\r", "+\t\tthis.runtime = runtime;\r", "+\t\tmethodName = row.methodNameForCamel(runtime.getResolver());\r", "-\t\tthis.parameterSubstitution = TemporaryPlugBoardForRuntime.definedActionsRepository().lookupByClassByCamel(className, methodName, (actualArgs.size()-1), doTraverse.getRuntimeContext());\r", "+\t\tthis.parameterSubstitution = TemporaryPlugBoardForRuntime.definedActionsRepository().\r", "+\t\t\tlookupByClassByCamel(className, methodName, (actualArgs.size()-1), runtime);\r"], "commitAfterChange": "8655c08986fab4cb3523c8934e8765739689b282", "signatureAfterChange": "\r \tpublic DefinedActionCaller(String object, String className, Row row, RuntimeContextInternal runtime)", "id": "e786793dcb5cfcef2db562e9e1440da6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "9e33b05787f67fa920e6ddbd52b995c8", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"]}