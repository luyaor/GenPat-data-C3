{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic boolean equals(String actualString, String expectedString)", "fileName": "src/fitlibrary/spec/TablesCompare.java", "methodNumberAfterChange": 2, "commitBeforeChange": "ffb3a105f2dd1aba96f84ebd4186987eb580fd1c", "diff": ["-\t\t\r", "-\t\tif (actual.isEmpty() && expected.equals(\"&nbsp;\") ||\r", "-\t\t\t\texpected.isEmpty() && actual.equals(\"&nbsp;\"))\r", "-\t\t\treturn true;\r", "-\t\tString stackTrace = \"class=\\\"fit_stacktrace\\\">\";\r", "-\t\tint startExpected = expected.indexOf(stackTrace);\r", "-\t\tint startActual = actual.indexOf(stackTrace);\r", "-\t\tif (startExpected != startActual)\r", "-\t\t\treturn false;\r", "-\t\tif (startExpected >= 0)\r", "-\t\t\treturn actual.startsWith(expected.substring(0,startExpected));\r", "-\t\tString fitLabel = \"<span class=\\\"fit_label\\\">\";\r", "-\t\tString endFitLabel = \"</span>\";\r", "-\t\twhile (true) {\r", "-\t\t\tstartExpected = expected.indexOf(fitLabel);\r", "-\t\t\tstartActual = actual.indexOf(fitLabel);\r", "-\t\t\tif (startExpected != startActual)\r", "-\t\t\t\treturn false;\r", "-\t\t\tif (startExpected < 0)\r", "-\t\t\t\treturn actual.equals(expected);\r", "-\t\t\t\r", "-\t\t\tString expectedPrefix = expected.substring(0,startExpected);\r", "-\t\t\tif (!actual.substring(0,startActual).equals(expectedPrefix))\r", "-\t\t\t\treturn false;\r", "-\t\t\tint endExpected = expected.indexOf(endFitLabel,startExpected);\r", "-\t\t\tint endActual = actual.indexOf(endFitLabel,startActual);\r", "-\t\t\tif (endExpected < 0 || endActual < 0)\r", "-\t\t\t\treturn false;\r", "-\t\t\tString actualLabel = actual.substring(startActual+fitLabel.length(),endActual);\r", "-\t\t\tString expectedLabel = expected.substring(startExpected+fitLabel.length(),endExpected);\r", "-\t\t\tif (!actualLabel.startsWith(expectedLabel))\r", "-\t\t\t\treturn false;\r", "-\t\t\tactual = actual.substring(endActual+endFitLabel.length());\r", "-\t\t\texpected = expected.substring(endExpected+endFitLabel.length());\r", "-\t\t}\r", "+\t\treturn matcherPipeline.match(actual, expected);\r"], "commitAfterChange": "217037b82c662a130b6f1897ec27b10c0077de31", "signatureAfterChange": "\r \tpublic boolean equals(String actualString, String expectedString)", "id": "3ae65b1cad65900535f43de960f07baf", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r     private void runFile(File file, File theReportDiry, Report report, Parse fullSetUpTables, \r     \t\tParse fullTearDownTables)", "fileName": "src/fitlibrary/runner/FolderRunner.java", "methodNumberAfterChange": 11, "commitBeforeChange": "c9a02fbef6bcaff0b0f1bdcd96e45453e110ead4", "diff": ["-    \tString name = file.getName();\r", "-    \tPrintStream oldOut = System.out;\r", "-    \tPrintStream oldErr = System.err;\r", "-    \tByteArrayOutputStream tempOut = new ByteArrayOutputStream();\r", "-    \tByteArrayOutputStream tempErr = new ByteArrayOutputStream();\r", "-    \ttry {\r", "-    \t\tif (isXlsFileName(name) || isHtmlFileName(name)) {\r", "-    \t\t\tSystem.setOut(new PrintStream(tempOut));\r", "-    \t\t\tSystem.setErr(new PrintStream(tempErr));\r", "-    \t\t\tFile reportFile = new File(theReportDiry,reportName(file));\r", "-    \t\t\tif (fileIsLocked(reportFile))\r", "-    \t\t\t\tthrow new RuntimeException(\"File is locked\");\r", "-    \t\t\tParse setUp = copyParse(fullSetUpTables.more);\r", "-    \t\t\tParse tearDown = copyParse(fullTearDownTables);\r", "-    \t\t\tTraverse.setContext(theReportDiry);\r", "-    \t\t\tCounts counts;\r", "-    \t\t\tif (isXlsFileName(name))\r", "-    \t\t\t\tcounts = new SpreadsheetRunner(report).run(file,reportFile,setUp,tearDown,batchFitLibrary);\r", "-    \t\t\telse\r", "-    \t\t\t\tcounts = new HtmlRunner(report).runInSuite(file,reportFile,encoding,setUp,tearDown,batchFitLibrary);\r", "-    \t\t\treport.addAssertionCountsForPage(reportFile,counts);\r", "-    \t\t} else\r", "-    \t\t\tthrow new RuntimeException(\"Not HTML nor XLS\");\r", "-    \t} catch (Exception e) {\r", "-    \t\tignoreFile(file,e);\r", "-    \t} finally {\r", "-    \t\treportOutput(name,\"out\",tempOut.toString());\r", "-    \t\treportOutput(name,\"err\",tempErr.toString());\r", "-    \t\tSystem.setOut(oldOut);                \r", "-    \t\tSystem.setErr(oldErr);                \r", "-    \t}\r", "-    }\r", "+    \trunFile.runFile(file, theReportDiry, report, fullSetUpTables, fullTearDownTables);\r"], "commitAfterChange": "d5585b9bd9597ec67ca4eaebd1dd7d580af72cbc", "signatureAfterChange": "\r     private void runFile(File file, File theReportDiry, Report report, Parse fullSetUpTables, \r     \t\tParse fullTearDownTables)", "id": "7907694fbe8d99217a710c02b14d08c6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "61dc11c47329c2b74720e516c7850fd5", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}