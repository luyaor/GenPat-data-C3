{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void processMultiDefinedAction(Table headerTable, Tables bodyCopy)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 7, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["+\t}\r", "+    private void processMultiDefinedAction(Table headerTable, Tables bodyCopy) {\r", "+\t\tif (headerTable.size() > 2)\r", "+\t\t\terror(\"Unexpected rows in first table of defined action\",headerTable.at(0));\r", "+\t\tString definedActionName = headerTable.at(0).at(0).text();\r", "+\t\tList<String> formalParameters = getFormalParameters(headerTable.at(1),0,1);\r", "+\t\tMultiParameterBinder binder = new MultiParameterBinder(formalParameters,bodyCopy,pageName);\r", "+\t\trepository().defineMultiDefinedAction(definedActionName, binder);\r", "+\t}\r", "-\t}\r", "-\tprivate void processMultiDefinedAction(Table headerTable, Tables bodyCopy) {\r", "-\t\tString definedActionName = headerTable.at(0).at(0).text();\r", "-\t\tArrayList<String> formalParameters = new ArrayList<String>();\r", "-\t\tRow parametersRow = headerTable.at(1);\r", "-\t\tfor (int c = 0; c < parametersRow.size(); c++) {\r", "-\t\t\tString parameter = parametersRow.at(c).text();\r", "-\t\t\tif (\"\".equals(parameter))\r", "-\t\t\t\terror(\"Parameter name is blank\",parametersRow);\r", "-\t\t\tif (formalParameters.contains(parameter))\r", "-\t\t\t\terror(\"Parameter name '<b>\"+parameter+\"</b>' is duplicated\",parametersRow);\r", "-\t\t\tformalParameters.add(parameter);\r", "-\t\t}\r", "-\t\tTemporaryPlugBoardForRuntime.definedActionsRepository().defineMultiDefinedAction(definedActionName, formalParameters, bodyCopy, \"\");\r", "-\t}\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r     private void processMultiDefinedAction(Table headerTable, Tables bodyCopy)", "id": "0dde53d5db52199bd4bc5c142f693e13", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate void processNamedParameterDefinedAction(Table headerTable, Tables body)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 7, "commitBeforeChange": "13d7f692d0259ca6dca7abebdee03a2c1c87669e", "diff": ["-\tprivate void processNamedParameterDefinedAction(Table headerTable, Tables body) {\r", "+\tprivate void processMultiDefinedAction(Table headerTable, Tables body) {\r", "-\t\tArrayList<String> parameters = new ArrayList<String>();\r", "+\t\tArrayList<String> formalParameters = new ArrayList<String>();\r", "-\t\t\t\tthrow new FitLibraryException(\"Parameter names cannot be blank.\");\r", "-\t\t\tparameters.add(parameter);\r", "+\t\t\t\terror(\"Parameter name is blank\",parametersRow);\r", "+\t\t\tif (formalParameters.contains(parameter))\r", "+\t\t\t\terror(\"Parameter name '<b>\"+parameter+\"</b>' is duplicated\",parametersRow);\r", "+\t\t\tformalParameters.add(parameter);\r", "-\t\tTemporaryPlugBoardForRuntime.definedActionsRepository().defineMultiDefinedAction(definedActionName, parameters, body.deepCopy(), \"\");\r", "+\t\tTemporaryPlugBoardForRuntime.definedActionsRepository().defineMultiDefinedAction(definedActionName, formalParameters, body.deepCopy(), \"\");\r", "+\t}\r"], "commitAfterChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "signatureAfterChange": "\r \tprivate void processMultiDefinedAction(Table headerTable, Tables body)", "id": "24f273dde28dd28c1925bc44de42e4bc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate void processDefinition(Tables tables, TestResults testResults)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 6, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["+\t}\r", "+    private void processDefinedAction(Table headerTable, Tables bodyCopy, TestResults testResults) {\r", "+\t\tRow parametersRow = headerTable.at(0);\r", "+\t\tparametersRow.passKeywords(testResults);\r", "+\t\tList<String> formalParameters = getFormalParameters(parametersRow,1,2);\r", "+\t\tif (DefinedActionParameterTranslation.needToTranslateParameters(formalParameters, bodyCopy))\r", "+\t\t\tformalParameters = DefinedActionParameterTranslation.translateParameters(formalParameters, bodyCopy);\r", "+\t\tParameterBinder binder = new ParameterBinder(formalParameters,bodyCopy,pageName);\r", "+\t\trepository().define(parametersRow, wikiClassName, binder, this, pageName);\r", "+\t}\r", "-\t}\r", "-\tprivate void processDefinition(Tables tables, TestResults testResults) {\r", "-\t\tTable headerTable = tables.at(0);\r", "-\t\tif (headerTable.size() == 2) {\r", "-\t\t\tprocessMultiDefinedAction(headerTable,copyBody(tables));\r", "-\t\t\treturn;\r", "-\t\t}\r", "-\t\tRow parametersRow = headerTable.at(0);\r", "-\t\tif (headerTable.size() > 1)\r", "-\t\t\terror(\"Unexpected rows in first table of defined action\",parametersRow);\r", "-\t\tparametersRow.passKeywords(testResults);\r", "-\t\t\r", "-\t\tTables bodyCopy = copyBody(tables);\r", "-\t\tList<String> formalParameters = getDefinedActionParameters(parametersRow);\r", "-\t\tParameterSubstitution parameterSubstitution = new ParameterSubstitution(formalParameters,bodyCopy,pageName);\r", "-\t\tTemporaryPlugBoardForRuntime.definedActionsRepository().define(parametersRow, wikiClassName, parameterSubstitution, this, pageName);\r", "-\t}\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r     private void processDefinedAction(Table headerTable, Tables bodyCopy, TestResults testResults)", "id": "37337fe618e8a8d75ce7171b089580e6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r \tprivate List<String> getDefinedActionParameters(Row parametersRow)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 10, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["+\t}\r", "+\tprivate List<String> getFormalParameters(Row parametersRow, int start, int increment) {\r", "+\t\tList<String> formalParameters = new ArrayList<String>();\r", "+    \tif (wikiClassBased())\r", "+    \t\tformalParameters.add(\"this\");\r", "+    \tfor (int i = start; i < parametersRow.size(); i += increment)\r", "+    \t\tif (i < parametersRow.size()) {\r", "+    \t\t\tString parameter = parametersRow.text(i,this);\r", "+    \t\t\tif (\"\".equals(parameter))\r", "+    \t\t\t\terror(\"Parameter name is blank\",parametersRow);\r", "+    \t\t\tif (formalParameters.contains(parameter))\r", "+    \t\t\t\terror(\"Parameter name '<b>\"+parameter+\"</b>' is duplicated\",parametersRow);\r", "+\t\t\t\tformalParameters.add(parameter);\r", "+    \t\t}\r", "+\t\treturn formalParameters;\r", "+\t}\r", "-\t}\r", "-\tprivate List<String> getDefinedActionParameters(Row parametersRow) {\r", "-\t\tList<String> formalParameters = new ArrayList<String>();\r", "-    \tif (wikiClassBased())\r", "-    \t\tformalParameters.add(\"this\");\r", "-    \tfor (int i = 1; i < parametersRow.size(); i += 2)\r", "-    \t\tif (i < parametersRow.size()) {\r", "-    \t\t\tString parameter = parametersRow.text(i,this);\r", "-    \t\t\tif (\"\".equals(parameter))\r", "-    \t\t\t\terror(\"Parameter name is blank\",parametersRow);\r", "-    \t\t\tif (formalParameters.contains(parameter))\r", "-    \t\t\t\terror(\"Parameter name '<b>\"+parameter+\"</b>' is duplicated\",parametersRow);\r", "-\t\t\t\tformalParameters.add(parameter);\r", "-    \t\t}\r", "-\t\treturn formalParameters;\r", "-\t}\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r \tprivate List<String> getFormalParameters(Row parametersRow, int start, int increment)", "id": "8cdf7e873c974ec997203c6f9ef83c58", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "3e8f5adc596f647d5def3d3f6c8eebc7", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}