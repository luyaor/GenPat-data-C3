{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic boolean tablesEqual(String path, TableElement actual, TableElement expected)", "fileName": "src/fitlibrary/spec/TablesCompare.java", "methodNumberAfterChange": 1, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-\t\tif (actual.getClass() != expected.getClass())\r", "-\t\t\tthrow new RuntimeException(\"In SpecifyFixture, the classes don't match: \"+\r", "-\t\t\t\t\tactual.getClass()+\" and \"+expected.getClass());\r", "+\t\t\tif (!actualCell.fullText().isEmpty() && expectedCell.fullText().isEmpty() && expectedCell.hasEmbeddedTables()) {\r", "+\t\t\t\texpectedCell.setText(expectedCell.last().getTrailer());\r", "+\t\t\t\texpectedCell.last().setTrailer(\"\");\r", "+\t\t\t}\r", "+\t\t\t\t\t\tTableFactory.useOnLists(false);\r", "+\t\t\t\t\t\tTableFactory.pop();\r", "-\t\t\tif (!equals(actual.getLeader(),expected.getLeader())) {\r", "+\t\t\tif (expected.getLeader().isEmpty() && actual.getLeader().equals(\"<html>\"))\r", "+\t\t\t\t;\r", "+\t\t\telse if (!equals(actual.getLeader(),expected.getLeader())) {\r", "-\t\t\tif (!equals(actual.getTrailer(),expected.getTrailer())) {\r", "+\t\t\tif (expected.getTrailer().isEmpty() && actual.getTrailer().equals(\"</html>\"))\r", "+\t\t\t\t;\r", "+\t\t\telse if (!equals(actual.getTrailer(),expected.getTrailer())) {\r", "-\t\t\tif (!actual.getTagLine().equals(expected.getTagLine())) {\r", "+\t\t\tif (expected.getTagLine().isEmpty() && actual.getTagLine().equals(\"border=\\\"1\\\" cellspacing=\\\"0\\\"\"))\r", "+\t\t\t\t;\r", "+\t\t\telse if (!actual.getTagLine().equals(expected.getTagLine())) {\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic boolean tablesEqual(String path, TableElement actual, TableElement expected)", "id": "6c6430084a34d7254df75b94c00b102b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic boolean tablesEqual(String path, TableElement actual, TableElement expected)", "fileName": "src/fitlibrary/spec/TablesCompare.java", "methodNumberAfterChange": 1, "commitBeforeChange": "ffb3a105f2dd1aba96f84ebd4186987eb580fd1c", "diff": ["-\tpublic boolean tablesEqual(String path, TableElement actual, TableElement expected) {\r", "+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\r", "+\tpublic boolean tablesEqual(String path, TableElement actualInitial, TableElement expectedInitial) {\r", "+\t\tTableElement actual = actualInitial;\r", "+\t\tTableElement expected = expectedInitial;\r", "-\t\t\tif (expected.getLeader().isEmpty() && actual.getLeader().equals(\"<html>\"))\r", "-\t\t\t\t;\r", "-\t\t\telse if (!equals(actual.getLeader(),expected.getLeader())) {\r", "+\t\t\tif (expected.getLeader().isEmpty() && actual.getLeader().equals(\"<html>\")) {\r", "+\t\t\t\t//\r", "+\t\t\t} else if (!equals(actual.getLeader(),expected.getLeader())) {\r", "-\t\t\tif (expected.getTrailer().isEmpty() && actual.getTrailer().equals(\"</html>\"))\r", "-\t\t\t\t;\r", "-\t\t\telse if (!equals(actual.getTrailer(),expected.getTrailer())) {\r", "+\t\t\tif (expected.getTrailer().isEmpty() && actual.getTrailer().equals(\"</html>\")) {\r", "+\t\t\t\t//\r", "+\t\t\t} else if (!equals(actual.getTrailer(),expected.getTrailer())) {\r", "-\t\t\tif (expected.getTagLine().isEmpty() && actual.getTagLine().equals(\"border=\\\"1\\\" cellspacing=\\\"0\\\"\"))\r", "-\t\t\t\t;\r", "-\t\t\telse if (!actual.getTagLine().equals(expected.getTagLine())) {\r", "+\t\t\tif (expected.getTagLine().isEmpty() && actual.getTagLine().equals(\"border=\\\"1\\\" cellspacing=\\\"0\\\"\")) {\r", "+\t\t\t\t//\r", "+\t\t\t} else if (!actual.getTagLine().equals(expected.getTagLine())) {\r"], "commitAfterChange": "217037b82c662a130b6f1897ec27b10c0077de31", "signatureAfterChange": "\r \t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\r \tpublic boolean tablesEqual(String path, TableElement actualInitial, TableElement expectedInitial)", "id": "d65a6d023dd1f1e7c1479b5199a1a0d3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "2e4dee37eca59794ae2c1941612ac769", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}