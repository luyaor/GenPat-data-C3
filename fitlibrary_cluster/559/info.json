{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 14, "signatureBeforeChange": "\r     private static CalledMethodTarget searchForMethodTargetUpOuterContext(String name, Evaluator outerContext, Evaluator evaluator)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 15, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-    private static CalledMethodTarget searchForMethodTargetUpOuterContext(String name, Evaluator outerContext, Evaluator evaluator) {\r", "-        if (outerContext == null)\r", "-            return null;\r", "-        CalledMethodTarget target = null;\r", "-        if (outerContext.getSystemUnderTest() != null) {\r", "-            TypedObject typedObject = outerContext.getTypedSystemUnderTest();\r", "-\t\t\ttarget = typedObject.optionallyFindGetterOnTypedObject(name,evaluator);\r", "-        }\r", "-        if (target == null)\r", "-            return searchForMethodTargetUpOuterContext(name,outerContext.getNextOuterContext(),evaluator);\r", "-        return target;\r", "-    }\r", "+    private CalledMethodTarget searchForMethodTargetUpOuterContext(String name, Evaluator evaluator) {\r", "+\t\tIScope scope = scopeOf(evaluator);\r", "+\t\tfor (TypedObject typedObject : scope.objectsForLookup()) {\r", "+\t\t\tCalledMethodTarget target = typedObject.new_optionallyFindGetterOnTypedObject(name,evaluator);\r", "+\t\t\tif (target != null)\r", "+\t\t\t\treturn target;\r", "+\t\treturn null;\r", "+    }\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r     private CalledMethodTarget searchForMethodTargetUpOuterContext(String name, Evaluator evaluator)", "id": "1ec536c7bf2dc5058840ac87899c6d53", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 27, "signatureBeforeChange": "\r \tpublic void setTagLine(String tagLine)", "fileName": "src/fitlibrary/table/ParseNode.java", "methodNumberAfterChange": 26, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-\t\tint index = parse.tag.indexOf(\" \");\r", "-\t\tif (index < 0)\r", "-\t\t\tparse.tag += \" \"+tagLine+\">\";\r", "+\t\tif (tagLine.isEmpty())\r", "+\t\t\tparse.tag = \"<\"+getTag()+\">\";\r", "-\t\t\tparse.tag = parse.tag.substring(0,index+1)+tagLine+\">\";\r", "+\t\t\tparse.tag = \"<\"+getTag()+\" \"+tagLine+\">\";\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic void setTagLine(String tagLine)", "id": "2d43925ad07806b4461298a996296de4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "9f40fd9658ffe2dee8eec15c76df0868", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}