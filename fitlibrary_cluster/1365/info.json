{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/spec/SpecifyFixture2.java", "methodNumberAfterChange": 1, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\t\tTables actualTables = table.elementAt(0).elementAt(0).getEmbeddedTables();\r", "+\t\t\tCell actualTables = table.elementAt(0).elementAt(0);\r", "+\t\t\tif (actualTables.isEmpty())\r", "+\t\t\t\tthrow new FitLibraryException(\"Missing nested tables to be run\");\r", "-\t\t\t\ttestResults.getCounts().right += cellCount(actualTables) - 1;\r", "+\t\t\t\ttestResults.addRights(cellCount(actualTables) - 1);\r", "+\t\t\t} else {\r", "+\t\t\t\texpectedCell.fail(testResults);\r", "+\t\t\t\terrorReport.actualResult(actualTables);\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "cc9fb8062721add89ceb7aef778c640c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/spec/SpecifyFixture2.java", "methodNumberAfterChange": 1, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["+\t}\r", "-\t\tTables actualTables = table.row(0).cell(0).getEmbeddedTables();\r", "-\t\tTables expectedTables = expectedOf(table).getEmbeddedTables();\r", "-\t\tnew BatchFitLibrary().doStorytest(actualTables);\r", "+\t\t\tTables actualTables = table.elementAt(0).elementAt(0).getEmbeddedTables();\r", "+\t\t\tCell expectedCell = expectedOf(table);\r", "+\t\t\tTables expectedTables = expectedCell.getEmbeddedTables();\r", "+\t\t\trunner.doStorytest(actualTables);\r", "+\t\t\tif (reportsEqual(\"\",actualTables,expectedTables)) {\r", "+\t\t\t\texpectedCell.pass(testResults);\r", "+\t\t\t\ttestResults.getCounts().right += cellCount(actualTables) - 1;\r", "+\t\t\t}\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "db5584c186221dff182ae0c714a08ccf", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "900ff124f03f0170894a46fc7eac519b", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}