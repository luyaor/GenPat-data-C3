{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate Object processDefinedAction(Tables definedActionBody, IRow row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 7, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\tprivate Object processDefinedAction(Tables definedActionBody, IRow row, TestResults testResults) {\r", "-\t\tObject lastResult = null;\r", "+\tprivate void processDefinedAction(Tables definedActionBody, IRow row, TestResults testResults) {\r", "-\t\t\tif (testResults.isAbandoned()) {\r", "+\t\t\tif (testResults.isAbandoned())\r", "-\t\t\t\tlastResult = null;\r", "-\t\t\t} else\r", "-\t\t\t\tlastResult = doTraverse.interpretWholeTable(table,subTestResults);\r", "+\t\t\telse\r", "+\t\t\t\tdoTraverse.interpretWholeTable(table,subTestResults);\r", "-\t\treturn lastResult;\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tprivate void processDefinedAction(Tables definedActionBody, IRow row, TestResults testResults)", "id": "7b00661fe1fbc0a879b08d6c566f04bb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate void processDefinedAction(Tables definedActionBody, IRow row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 7, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tprivate void processDefinedAction(Tables definedActionBody, IRow row, TestResults testResults) {\r", "-\t\tTestResults subTestResults = new TestResults(testResults);\r", "+\tprivate void processDefinedAction(Tables definedActionBody, Row row, TestResults testResults) {\r", "+\t\tTestResults subTestResults = new TestResults();\r", "+\t\tTableEvaluator tableEvaluator = doTraverse.getRuntimeContext().getTableEvaluator();\r", "-\t\t\tif (testResults.isAbandoned())\r", "-\t\t\t\ttable.ignore(subTestResults);\r", "-\t\t\telse\r", "-\t\t\t\tdoTraverse.interpretWholeTable(table,subTestResults);\r", "+\t\t\ttableEvaluator.runTable(table, new TableListener(subTestResults));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate void processDefinedAction(Tables definedActionBody, Row row, TestResults testResults)", "id": "f5391922c32981318b1363a81913b7c4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "fe3de380639da2461a6a0b1805e471db", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}