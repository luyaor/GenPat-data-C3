{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/ConstraintTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tbindFirstRowToTarget(table.elementAt(1),testResults);\r", "+\t\tbindFirstRowToTarget(table.at(1),testResults);\r", "-\t\t\tprocessRow(table.elementAt(i),testResults);\r", "+\t\t\tprocessRow(table.at(i),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "07af65ace655050143abe991c4c84576", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/set/NestingSetTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row row = table.elementAt(rowNo);\r", "+            Row row = table.at(rowNo);\r", "-                matchActual(row.elementAt(0),parser,listOfActuals,table.size(),testResults);\r", "+                matchActual(row.at(0),parser,listOfActuals,table.size(),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "08f6972ff95b7427cf2ba9de8514af35", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainInjectionTraverse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-    \t\tCell cell = row.elementAt(i);\r", "+    \t\tCell cell = row.at(i);\r", "-    \t\t\tCell nextCell = row.elementAt(i+1);\r", "+    \t\t\tCell nextCell = row.at(i+1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "0bd3b78e2f74fa3fa890076d346b98b3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table,TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/NestingListSetUpTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row row = table.elementAt(rowNo);\r", "+            Row row = table.at(rowNo);\r", "-                Cell cell = row.elementAt(0);\r", "+                Cell cell = row.at(0);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table,TestResults testResults)", "id": "0d136552d682cb527aed82fd1e552684", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row firstRow = table.elementAt(0);\r", "+            Row firstRow = table.at(0);\r", "-                processRow(firstRow,classColumn,table.elementAt(rowNo),testResults);\r", "+                processRow(firstRow,classColumn,table.at(rowNo),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "100ff6057d4c9d2e7a0cfb604d467df9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/map/MapTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\t\ttable.elementAt(rowNo).missing(testResults);\r", "+\t\t\t\t\ttable.at(rowNo).missing(testResults);\r", "-\t\t\t\tinterpret(table.elementAt(rowNo), copiedMap, keyParser, testResults);\r", "+\t\t\t\tinterpret(table.at(rowNo), copiedMap, keyParser, testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "15592b3d12bea3067dd2241abac3675d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private boolean cellsMatch(Object[] actual, Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/GridTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        \tif (!cellMatches(actual[i], row.elementAt(i),testResults))\r", "+        \tif (!cellMatches(actual[i], row.at(i),testResults))\r", "-        \trow.elementAt(cellNo).fail(testResults);\r", "+        \trow.at(cellNo).fail(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private boolean cellsMatch(Object[] actual, Row row, TestResults testResults)", "id": "290da956d0d502f859c7f3e0dac5ce93", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/array/ArraySetUpTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row row = table.elementAt(rowNo);\r", "+            Row row = table.at(rowNo);\r", "-                Cell cell = row.elementAt(0);\r", "+                Cell cell = row.at(0);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "298aa0a3a8e5764d518368e2f67a0095", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 77, "signatureBeforeChange": "\r \tpublic void expectedTestResults(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 75, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\trow.elementAt(0).pass(testResults);\r", "+\t\t\trow.at(0).pass(testResults);\r", "-\t\t\trow.elementAt(0).fail(testResults,results,this);\r", "+\t\t\trow.at(0).fail(testResults,results,this);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void expectedTestResults(Row row, TestResults testResults) throws Exception", "id": "32318aae727fa0dd39d8b0588a2f03c1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/definedAction/DefinedActionTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRow header = table.elementAt(1);\r", "+\t\tRow header = table.at(1);\r", "-\t\t\tCell parameterCell = header.elementAt(c);\r", "+\t\t\tCell parameterCell = header.at(c);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "33547dde60b3361d43c5dd00766db2e7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic TestResults doTables(Tables theTables)", "fileName": "src/fitlibrary/suite/BatchFitLibrary.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\terrorTable.elementAt(0).elementAt(1).error(tableListener.getTestResults());\r", "+\t\t\t\terrorTable.at(0).at(1).error(tableListener.getTestResults());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic TestResults doTables(Tables theTables)", "id": "38020e64c185be1cf80aa0d4eeda5596", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     public void testTable0()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        Table table = tables.elementAt(0);\r", "+        Table table = tables.at(0);\r", "-            table.elementAt(2);\r", "+            table.at(2);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void testTable0()", "id": "425563af7d670d2037c789398214dacc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     protected void processRow(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/collection/map/MapSetUpTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            theMap.put(keyParser.parseTyped(row.elementAt(0),testResults).getSubject(),\r", "-            \t\tvalueParser.parseTyped(row.elementAt(1),testResults).getSubject());\r", "+            theMap.put(keyParser.parseTyped(row.at(0),testResults).getSubject(),\r", "+            \t\tvalueParser.parseTyped(row.at(1),testResults).getSubject());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     protected void processRow(Row row, TestResults testResults) throws Exception", "id": "441d70b47656840104e4ec69dca31848", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainCheckTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(i);\r", "-\t\t\tCell cell2 = row.elementAt(i+1);\r", "+\t\t\tCell cell = row.at(i);\r", "+\t\t\tCell cell2 = row.at(i+1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "id": "45b294b443aaf00c3dd9ec8eb09d7165", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate void substituteDynamicVariables(Table table, Evaluator evaluator)", "fileName": "src/fitlibrary/traverse/FitHandler.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tRow row = table.elementAt(r);\r", "+\t\t\tRow row = table.at(r);\r", "-\t\t\t\tCell cell = row.elementAt(c);\r", "+\t\t\t\tCell cell = row.at(c);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void substituteDynamicVariables(Table table, Evaluator evaluator)", "id": "651d793ae8e204110f2f7a31e3ddbcfa", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 19, "signatureBeforeChange": "\r     private Row getRow(int tableNo, int rowNo)", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 19, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        return tables.elementAt(tableNo).elementAt(rowNo);\r", "+        return tables.at(tableNo).at(rowNo);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private Row getRow(int tableNo, int rowNo)", "id": "706b50f889a2866894e55c3996bcb177", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tbindFirstRowToTarget(table.elementAt(1),testResults,this);\r", "+\t\tbindFirstRowToTarget(table.at(1),testResults,this);\r", "-\t\t\tprocessRow(table.elementAt(i),testResults);\r", "+\t\t\tprocessRow(table.at(i),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "885b2c37d80132a384fe84ba2e6d6b32", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tRow parameterRow = table.elementAt(1);\r", "+\t\t\tRow parameterRow = table.at(1);\r", "-\t\t\t\tRow row = table.elementAt(r);\r", "+\t\t\t\tRow row = table.at(r);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "88c204d62b01a314ce657213f88fd432", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 33, "signatureBeforeChange": "\r \t@Override\r \tpublic void removeElementAt(int i)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 33, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\telementAt(i-1).parse().more = null;\r", "-\t\t\telementAt(i-1).parse().trailer = \"\";\r", "+\t\t\tat(i-1).parse().more = null;\r", "+\t\t\tat(i-1).parse().trailer = \"\";\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic void removeElementAt(int i)", "id": "8b9101cc747cfea975ed5521bb8647f7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Test public void elementAddedToCellWithEmbedded()", "fileName": "test/fitlibrary/table/TestCell.java", "methodNumberAfterChange": 44, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(cellA.elementAt(0),is(table0));\r", "-\t\tassertThat(cellA.elementAt(1),is(table1));\r", "+\t\tassertThat(cellA.at(0),is(table0));\r", "+\t\tassertThat(cellA.at(1),is(table1));\r", "+\t}\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test public void elementAddedToCellWithEmbedded()", "id": "9180c92a84cefec257142503484c94b8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/map/ListOfMapsTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRow labelRow = table.elementAt(1);\r", "+\t\tRow labelRow = table.at(1);\r", "-\t\t\tRow row = table.elementAt(r);\r", "+\t\t\tRow row = table.at(r);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "924b46fe908e006fe1a5355a04fb245e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     public void testTable0Right()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        Table table0 = tables.elementAt(0);\r", "+        Table table0 = tables.at(0);\r", "-        assertTrue(table0.elementAt(0).didPass());\r", "+        assertTrue(table0.at(0).didPass());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void testTable0Right()", "id": "9b5b1f4e170738492527ba9d6638dbdd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r     protected final List<MethodTarget[]> bindGettersForAllActuals(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 12, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-                String propertyName = camelCase(row.elementAt(i).text(this));\r", "+                String propertyName = camelCase(row.at(i).text(this));\r", "-\t\t\t\trow.elementAt(i).error(testResults,new NoSuchPropertyException(\r", "+\t\t\t\trow.at(i).error(testResults,new NoSuchPropertyException(\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     protected final List<MethodTarget[]> bindGettersForAllActuals(Row row, TestResults testResults) throws Exception", "id": "9ba0bc80882972f52e640521bfb829bb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \tprivate void processDefinedActions(String definitionsName) throws InterruptedException, IOException, FitParseException", "fileName": "src/fitlibrary/xref/CrossReferenceFixture.java", "methodNumberAfterChange": 12, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\t\t\tadd(definedActions,actionOf(table.elementAt(0)),pageName,true);\r", "+\t\t\t\t\t\tadd(definedActions,actionOf(table.at(0)),pageName,true);\r", "-\t\t\t\t\t\t\tString action = actionOf(table.elementAt(rowNo));\r", "+\t\t\t\t\t\t\tString action = actionOf(table.at(rowNo));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void processDefinedActions(String definitionsName) throws InterruptedException, IOException, FitParseException", "id": "9d2d94bd372e6e8c85df882c801e4916", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     public static boolean applicable(Table table)", "fileName": "src/fitlibraryGeneric/traverse/ReferenceTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            return isUses(table.elementAt(0).elementAt(0).text());\r", "+            return isUses(table.at(0).at(0).text());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public static boolean applicable(Table table)", "id": "9e11a25fd391fadd1441130a8e999e24", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 49, "signatureBeforeChange": "\r \t@Override\r \tpublic Table elementAt(int i)", "fileName": "src/fitlibrary/table/CellOnParse.java", "methodNumberAfterChange": 49, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\tpublic Table elementAt(int i) {\r", "-\t\treturn getEmbeddedTables().elementAt(i);\r", "+\tpublic Table at(int i) {\r", "+\t\treturn getEmbeddedTables().at(i);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Table at(int i)", "id": "a4109babb45766a409edf35963ef2ecb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectSetUpTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(i);\r", "+\t\t\tCell cell = row.at(i);\r", "-\t\t\t\t\t\tcallSetter(target, row.elementAt(i+1), testResults);\r", "+\t\t\t\t\t\tcallSetter(target, row.at(i+1), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void processRow(Row row, TestResults testResults)", "id": "ab3975f19b2c5a80e65d9343c316d58f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 25, "signatureBeforeChange": "\r \tpublic void color(Row row, boolean right, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 25, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\trow.elementAt(0).passOrFail(testResults,right);\r", "+\t\t\trow.at(0).passOrFail(testResults,right);\r", "-\t\t\t\trow.elementAt(i).passOrFail(testResults,right);\r", "+\t\t\t\trow.at(i).passOrFail(testResults,right);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void color(Row row, boolean right, TestResults testResults) throws Exception", "id": "b178561b7d3916dac31e1a4c4ba959cf", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate void processDefinition(Tables tables, TestResults testResults)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tTable headerTable = tables.elementAt(0);\r", "+\t\tTable headerTable = tables.at(0);\r", "-\t\tRow parametersRow = headerTable.elementAt(0);\r", "+\t\tRow parametersRow = headerTable.at(0);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void processDefinition(Tables tables, TestResults testResults)", "id": "b527759ec9c7a967b5baa48f62ff616d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CalculateTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tbindFirstRowToTarget(table.elementAt(1),testResults);\r", "+\t\tbindFirstRowToTarget(table.at(1),testResults);\r", "-\t\t\tprocessRow(table.elementAt(i),testResults);\r", "+\t\t\tprocessRow(table.at(i),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "c60a905f56c803a50711edb575fafe6e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 20, "signatureBeforeChange": "\r \t@Override\r \tpublic boolean equals(Object obj)", "fileName": "src/fitlibrary/table/TableOnParse.java", "methodNumberAfterChange": 19, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tif (!elementAt(i).equals(other.elementAt(i)))\r", "+\t\t\tif (!at(i).equals(other.at(i)))\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic boolean equals(Object obj)", "id": "cc5f0dc1035af67ef80503bfbafee256", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \t@Override\r \tpublic boolean equals(Object obj)", "fileName": "src/fitlibrary/table/TablesOnParse.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tif (!elementAt(i).equals(other.elementAt(i)))\r", "+\t\t\tif (!at(i).equals(other.at(i)))\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic boolean equals(Object obj)", "id": "cf59d786bde65930becd7a4ae4ea8f71", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 15, "signatureBeforeChange": "\r \t@Test\r \tpublic void canReplaceRowAtEnd()", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 15, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(table.elementAt(0),is(row0));\r", "-\t\tassertThat(table.elementAt(1),is(row2));\r", "+\t\tassertThat(table.at(0),is(row0));\r", "+\t\tassertThat(table.at(1),is(row2));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void canReplaceRowAtEnd()", "id": "d0025ce55b7718f66b72089043082474", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/NestingListTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row row = table.elementAt(rowNo);\r", "+            Row row = table.at(rowNo);\r", "-                Cell cell = row.elementAt(0);\r", "+                Cell cell = row.at(0);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "d3df1b77d8f2c5df9283d89ae63fccba", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CombinationTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tObject arg1 = firstParser.parseTyped(row.elementAt(0),testResults).getSubject();\r", "+\t\t\tObject arg1 = firstParser.parseTyped(row.at(0),testResults).getSubject();\r", "-                methodTarget.checkResult(row.elementAt(i),result,true,false, testResults);\r", "+                methodTarget.checkResult(row.at(i),result,true,false, testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "d53d23abeeb0c6bf945fafef71088ee2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     private boolean rowsMatch(Object[][] actual, Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/GridTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row row = table.elementAt(rowNo+1);\r", "+            Row row = table.at(rowNo+1);\r", "-            table.elementAt(rowNo).fail(testResults);\r", "+            table.at(rowNo).fail(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private boolean rowsMatch(Object[][] actual, Table table, TestResults testResults)", "id": "d5e159698ba533085810a76f237bcf0d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CombinationTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tbindFirstRowToTarget(table.elementAt(1),testResults);\r", "+\t\tbindFirstRowToTarget(table.at(1),testResults);\r", "-\t\t\tprocessRow(table.elementAt(i),testResults);\r", "+\t\t\tprocessRow(table.at(i),testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "dab40468243e3ff3267e43390df30725", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/RandomSelectTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tsetDynamicVariable(var, table.elementAt(select).text(0,this));\r", "+\t\tsetDynamicVariable(var, table.at(select).text(0,this));\r", "-\t\t\ttable.elementAt(i).text(0,this);\r", "+\t\t\ttable.at(i).text(0,this);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "daca2afde5c4dbc93d5af2ecbbeea894", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic Fixture fixtureOrDoTraverseByName(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        String className = table.elementAt(0).text(0,this).trim();\r", "+        String className = table.at(0).text(0,this).trim();\r", "-\t\t\tif (table.elementAt(0).size() == 1) {\r", "+\t\t\tif (table.at(0).size() == 1) {\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic Fixture fixtureOrDoTraverseByName(Table table, TestResults testResults)", "id": "dd23d585c5f358b27f53101ee0715afd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     private void bindFirstRowToTargetsForObject(Object element, Row firstRow, Row row, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Cell cell = firstRow.elementAt(i);\r", "+            Cell cell = firstRow.at(i);\r", "-                    row.elementAt(i).error(testResults,e);\r", "+                    row.at(i).error(testResults,e);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private void bindFirstRowToTargetsForObject(Object element, Row firstRow, Row row, TestResults testResults)", "id": "e557112e9b1a8714980c0b7ea41cfe73", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 15, "signatureBeforeChange": "\r     @Override\r \tpublic boolean equals(Object object)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 15, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            if (!elementAt(i).equals(other.elementAt(i)))\r", "+            if (!at(i).equals(other.at(i)))\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic boolean equals(Object object)", "id": "f1ce39567e31f2b2b5c661dcd5dfaab2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tpublic void parseDefinitions(Tables tables, DefineActionBodyConsumer consumer)", "fileName": "src/fitlibrary/definedAction/DefinedActionBodyCollector.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tTable table = tables.elementAt(i);\r", "-\t\t\tTable previousTable = tables.elementAt(i-1);\r", "+\t\t\tTable table = tables.at(i);\r", "+\t\t\tTable previousTable = tables.at(i-1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void parseDefinitions(Tables tables, DefineActionBodyConsumer consumer)", "id": "fbc1fcf8aa644dce9dcfe52e72a22437", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "79695ad9215c4eb46bcdbe80af77227b", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}