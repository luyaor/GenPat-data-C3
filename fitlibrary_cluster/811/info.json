{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 35, "signatureBeforeChange": "      public String toString(Object o)", "fileName": "src/fit/TypeAdapter.java", "methodNumberAfterChange": 35, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-    public String toString(Object o) {", "-      if (o == null)", "-        return \"\";", "-      int length = Array.getLength(o);", "-      StringBuffer b = new StringBuffer(5 * length);", "-      for (int i = 0; i < length; i++) {", "-        b.append(componentAdapter.toString(Array.get(o, i)));", "-        if (i < (length - 1)) {", "-          b.append(\", \");", "-        }", "-      }", "-      return b.toString();", "-    }", "+\t\t@Override", "+\t\tpublic String toString(Object o) {", "+\t\t\tif (o == null)", "+\t\t\t\treturn \"\";", "+\t\t\tint length = Array.getLength(o);", "+\t\t\tStringBuffer b = new StringBuffer(5 * length);", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tb.append(componentAdapter.toString(Array.get(o, i)));", "+\t\t\t\tif (i < (length - 1)) {", "+\t\t\t\t\tb.append(\", \");", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn b.toString();", "+\t\t}"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "  \t\t@Override \t\tpublic String toString(Object o)", "id": "37e68a71d9c72489f0798cf521fdd184", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 36, "signatureBeforeChange": "      public boolean equals(Object a, Object b)", "fileName": "src/fit/TypeAdapter.java", "methodNumberAfterChange": 36, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-    public boolean equals(Object a, Object b) {", "-      int length = Array.getLength(a);", "-      if (length != Array.getLength(b))", "-        return false;", "-      for (int i = 0; i < length; i++) {", "-        if (!componentAdapter.equals(Array.get(a, i), Array.get(b, i)))", "-          return false;", "-      }", "-      return true;", "-    }", "+\t\t@Override", "+\t\tpublic boolean equals(Object a, Object b) {", "+\t\t\tint length = Array.getLength(a);", "+\t\t\tif (length != Array.getLength(b))", "+\t\t\t\treturn false;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tif (!componentAdapter.equals(Array.get(a, i), Array.get(b, i)))", "+\t\t\t\t\treturn false;", "+\t\t\t}", "+\t\t\treturn true;", "+\t\t}"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "  \t\t@Override \t\tpublic boolean equals(Object a, Object b)", "id": "7e882e4683e9f5904248cbc910bcdd4a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "2ea0a2e0b2d7199b490883f7237b7958", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}