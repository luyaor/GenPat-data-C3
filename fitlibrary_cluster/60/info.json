{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 30, "signatureBeforeChange": "\r \tpublic boolean doesTablePass(Table table, Evaluator evaluator, TestResults testResults)", "fileName": "src/fitlibrary/traverse/Traverse.java", "methodNumberAfterChange": 24, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["+\t\tsetRuntimeContext(evaluator.getRuntimeContext());\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tpublic boolean doesTablePass(Table table, Evaluator evaluator, TestResults testResults)", "id": "1d86da07a414b02441c402fdbd5b5bfb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void handleActualDoFixture(DoEvaluator doEvaluator, Row row, TestResults testResults)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 9, "commitBeforeChange": "5c75a22ff92df58ac27695ae19554e2bc4760240", "diff": ["-\t\tif (doEvaluator.getSystemUnderTest() != null)\r", "+\t\tif (doEvaluator.getSystemUnderTest() != null) {\r", "+\t\t\tsetRuntimeContextOf(doEvaluator.getSystemUnderTest());\r", "+\t\t}\r"], "commitAfterChange": "441d5688763570bf9a676799b77c2d483b043423", "signatureAfterChange": "\r \tprivate void handleActualDoFixture(DoEvaluator doEvaluator, Row row, TestResults testResults)", "id": "395efa5f9d1818984a120aa4804e2541", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t@Override\r \tpublic void append(TestResult result)", "fileName": "src/fitlibrary/batch/resultsOut/ParallelSuiteResult.java", "methodNumberAfterChange": 4, "commitBeforeChange": "ff09ca9835c3cc1f1c695e3054cbedf6dd3026c1", "diff": ["-\t\t\tCounts resultCounts = result.getCounts();\r", "-\t\t\tcounts.tally(resultCounts);\r", "-\t\t\tappendRow(result, resultCounts);\t\t\t\t\t\t\t\r", "+\t\tCounts resultCounts = result.getCounts(); \r", "+\t\tcounts.tally(resultCounts);\r", "+\t\tappendRow(result, resultCounts);\t\t\t\t\t\t\t\r", "+\t\tdurationMillis += result.durationMillis();\r"], "commitAfterChange": "a9bc89dc0ff4802a9b2c54daf36831898adcbaa7", "signatureAfterChange": "\r \t@Override\r \tpublic void append(TestResult result)", "id": "78118f4e4943871e83b9389ff64257c6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 27, "signatureBeforeChange": "\r     public void interpretWithinContext(Table table, Evaluator evaluator, TestResults testResults)", "fileName": "src/fitlibrary/traverse/Traverse.java", "methodNumberAfterChange": 21, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t}\r", "+        setRuntimeContext(evaluator.getRuntimeContext());\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r     public void interpretWithinContext(Table table, Evaluator evaluator, TestResults testResults)", "id": "9ca98e4b0cffa9812dc301a0e5606471", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 28, "signatureBeforeChange": "\r     public void interpretInnerTable(Table table, Evaluator evaluator, TestResults testResults)", "fileName": "src/fitlibrary/traverse/Traverse.java", "methodNumberAfterChange": 22, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["+\t\tsetRuntimeContext(evaluator.getRuntimeContext());\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r     public void interpretInnerTable(Table table, Evaluator evaluator, TestResults testResults)", "id": "adaa6673140691902c23d66fda6fde5f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "5c962b1813b500b05d35628308724d3e", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}