{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate void storytestIsCalled(final Table table)", "fileName": "test/fitlibrary/spec/TestSpecifyFixture.java", "methodNumberAfterChange": 19, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\tprivate void storytestIsCalled(final Table table) {\r", "+\tprivate void storytestRunnerIsCalled(final Table table) {\r", "-\t\t\toneOf(runner).doStorytest(table.elementAt(0).elementAt(0));\r", "+\t\t\toneOf(runner).doStorytest(table.at(1).at(0));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void storytestRunnerIsCalled(final Table table)", "id": "037a1af4401b45b15dbd83818bb6ef03", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 28, "signatureBeforeChange": "\r \tpublic Row copy()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 27, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\tpublic Row copy() {\r", "+\tpublic Row deepCopy() {\r", "-\t\t\trowCopy.addCell(TableFactory.cell(cell(i).fullText()));\r", "+\t\t\trowCopy.add(TableFactory.cell(elementAt(i).fullText()));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Row deepCopy()", "id": "09869b30d974357e014f8518df77744a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \r   static DataType instance(String dataType) throws InvalidInputException", "fileName": "src/fit/decorator/util/DataType.java", "methodNumberAfterChange": 16, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  static DataType instance(String dataType) throws InvalidInputException {\r", "-    Object type = getDataType(dataType, predefinedTypes);\r", "-    if (type == null) {\r", "-      type = getDataType(dataType, userDefinedTypes);\r", "-      type = defaultToStringTypeIfNull(type);\r", "-    }\r", "-    return (DataType) type;\r", "-  }\r", "+\tstatic DataType instance(String dataType) {\r", "+\t\tObject type = getDataType(dataType, predefinedTypes);\r", "+\t\tif (type == null) {\r", "+\t\t\ttype = getDataType(dataType, userDefinedTypes);\r", "+\t\t\ttype = defaultToStringTypeIfNull(type);\r", "+\t\t}\r", "+\t\treturn (DataType) type;\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tstatic DataType instance(String dataType)", "id": "0dfb2112b5dff10d4106b5cac6221604", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void runRow(Row row, Row parameterRow, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.addCell(TableFactory.cell(\"Defined action call:\",body));\r", "+\t\t\trow.add(TableFactory.cell(\"Defined action call:\",body));\r", "-\t\t\trow.addCell(TableFactory.cell(TableFactory.tables(definedActionCallManager.getShowsTable())));\r", "+\t\t\trow.add(TableFactory.cell(TableFactory.tables(definedActionCallManager.getShowsTable())));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void runRow(Row row, Row parameterRow, TestResults testResults)", "id": "283e35ddc325d4cc183952c78ee73399", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 26, "signatureBeforeChange": "\r \tpublic Row rowTo(int from, int upto)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 25, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.addCell(TableFactory.cell(cell(i)));\r", "+\t\t\trow.add(TableFactory.cell(elementAt(i)));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Row rowTo(int from, int upto)", "id": "343ab04cdc740dd8c870cd8b1a41c3bd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \t@Override\r \tpublic void setUp()", "fileName": "test/fitlibrary/utility/TestDynamicVariables.java", "methodNumberAfterChange": 0, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t\tvarEmpty = new RuntimeContext();\r", "+\t\tvarEmpty = new RuntimeContextImplementation();\r", "-\t\tvarFull = new RuntimeContext(vars);\r", "+\t\tvarFull = new RuntimeContextImplementation(vars);\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \t\r \t@Override\r \tpublic void setUp()", "id": "3af5ea5ea35f642a679bca94c30b742e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic void run(String pageName) throws IOException, FitParseException", "fileName": "src/fitlibrary/debug/DebugPage.java", "methodNumberAfterChange": 5, "commitBeforeChange": "5ba818354648ea599f271f8106e1431db9c61d96", "diff": ["-\t\tString html = new ParallelFitNesseRepository(DIRY).getTest(pageName).getContent();\r", "+\t\tString html = new ParallelFitNesseRepository(DIRY,PORT).getTest(pageName).getContent();\r"], "commitAfterChange": "f6e898e2c958fb69eedd2858e821919ee34de215", "signatureAfterChange": "\r \tpublic void run(String pageName) throws IOException, FitParseException", "id": "49b238036ce965d6dff50dd031349d40", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void runRow(Row callRow, Row parameterRow, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionRunnerTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "6aa33f7a49e37bb18384a62861c89eb6f5a7aeb4", "diff": ["-\t\t\tbinder.bind(parameterRow,callRow,getDynamicVariables(),this);\r", "+\t\t\tbinder.bindMulti(parameterRow,callRow,getDynamicVariables());\r"], "commitAfterChange": "8c641f862310f1dca2920a59e226aed52b07dae9", "signatureAfterChange": "\r \tprivate void runRow(Row callRow, Row parameterRow, TestResults testResults)", "id": "8abcf515161cbfd7dab83d52b680635e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 19, "signatureBeforeChange": "\r     private Row getRow(int tableNo, int rowNo)", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 19, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        return tables.table(tableNo).row(rowNo);\r", "+        return tables.elementAt(tableNo).elementAt(rowNo);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private Row getRow(int tableNo, int rowNo)", "id": "9414175fd7c6f183b0cf439a3406bcf5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tRuntimeContext getCopyOfDynamicVariables();", "fileName": "src/fitlibrary/suite/SuiteEvaluator.java", "methodNumberAfterChange": 0, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\tRuntimeContext getCopyOfDynamicVariables();\r", "+\tRuntimeContextInternal getCopyOfRuntimeContext();\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tRuntimeContextInternal getCopyOfRuntimeContext();", "id": "9556d846ba0907fb9ca4d61f628ebb61", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \t@Test\r \tpublic void reportsErrorWithOtherFitLibraryExceptionThrown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestNot.java", "methodNumberAfterChange": 11, "commitBeforeChange": "9d277f354a9817ba2a558b5341fccc0bc0fe3de2", "diff": ["+\t}\r", "+\t@Test\r", "+\tpublic void reportsPassWithOtherFitLibraryExceptionThrown() throws Exception {\r", "+\t\tfinal FitLibraryException exception = new FitLibraryException(\"\");\r", "+\t\tcontext.checking(new NotExpectations() {{\r", "+\t\t\tone(target).invokeForSpecial(subRow,testResults,false,firstCell);\r", "+\t\t\t    will(throwException(exception));\r", "-\t}\r", "-\t@Test\r", "-\tpublic void reportsErrorWithOtherFitLibraryExceptionThrown() throws Exception {\r", "-\t\tfinal FitLibraryException exception = new FitLibraryException(\"\");\r", "-\t\t\tone(initialRow).error(testResults,exception);\r"], "commitAfterChange": "5c75a22ff92df58ac27695ae19554e2bc4760240", "signatureAfterChange": "\r \t@Test\r \tpublic void reportsPassWithOtherFitLibraryExceptionThrown() throws Exception", "id": "9d025ade288d8af27c99cb0f660e4c57", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r     protected final List<MethodTarget[]> bindGettersForAllActuals(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 12, "commitBeforeChange": "e4ab562e1e827e062d1be5204027041002fec975", "diff": ["-\t\t\tbindings.add(bindGettersForOneElement(row, testResults, typedObject));\r", "+\t\t\tbindings.add(bindGettersForOneElement(row, typedObject));\r"], "commitAfterChange": "08cc4ee7c5f377198d1f5457a45687cb9cba9813", "signatureAfterChange": "\r     protected final List<MethodTarget[]> bindGettersForAllActuals(Row row, TestResults testResults) throws Exception", "id": "b08678c173e38e8c6ca346264cb58d3a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic void startCall(Object call)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCallManager.java", "methodNumberAfterChange": 0, "commitBeforeChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "diff": ["-\tpublic void startCall(Object call) {\r", "+\tpublic void startCall(ParameterBinder call) {\r", "-\t\tcallsInProgress.add(call);\r", "+\t\tcallsInProgress.push(call);\r"], "commitAfterChange": "6e2fd68caab2f02de2d8c7d77899562c496a4b1d", "signatureAfterChange": "\r \r \tpublic void startCall(ParameterBinder call)", "id": "c56ae8841c801d103cc1e51d8a6a64ee", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \t@Override\r \tpublic void setUp()", "fileName": "test/fitlibrary/utility/TestDynamicVariables.java", "methodNumberAfterChange": 0, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\tvarEmpty = new RuntimeContextImplementation();\r", "+\t\tvarEmpty = new RuntimeContextContainer();\r", "-\t\tvarFull = new RuntimeContextImplementation(vars);\r", "+\t\tvarFull = new RuntimeContextContainer(vars);\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t\r \t@Override\r \tpublic void setUp()", "id": "d5c1fcdf3d8428841406e5283b407f94", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic Class<?> getClassType();", "fileName": "src/fitlibrary/typed/TypedObject.java", "methodNumberAfterChange": 3, "commitBeforeChange": "d8c025e7afd50890d9dbe04693a70e4cfcd811e3", "diff": ["-\tpublic Class<?> getClassType();\r", "+\tpublic Class<?> classType();\r"], "commitAfterChange": "3d1e9d49ea103c11cbc7aac289794db9b9fb9d72", "signatureAfterChange": "\r \tpublic Class<?> classType();", "id": "dd9be1e32384018d7961b16f0f174d7a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \t@Override\r \tpublic Class<?> getClassType()", "fileName": "src/fitlibraryGeneric/typed/GenericTypedObject.java", "methodNumberAfterChange": 9, "commitBeforeChange": "d8c025e7afd50890d9dbe04693a70e4cfcd811e3", "diff": ["-\tpublic Class<?> getClassType() {\r", "-\t\treturn typed.asClass();\r", "+\tpublic Class<?> classType() {\r", "+\t\treturn subject.getClass();\r"], "commitAfterChange": "3d1e9d49ea103c11cbc7aac289794db9b9fb9d72", "signatureAfterChange": "\r \t@Override\r \tpublic Class<?> classType()", "id": "e5efa3057033960c812e7893ee336c5c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void addShow(Row row)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCallManager.java", "methodNumberAfterChange": 3, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tRow copy = row.copy();\r", "+\t\tRow copy = row.deepCopy();\r", "-\t\tshows.addRow(copy);\r", "+\t\tshows.add(copy);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void addShow(Row row)", "id": "f2babdcb10e990197e73ec4b9149b9d4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 14, "signatureBeforeChange": "\r     public CellOnParse copy()", "fileName": "src/fitlibrary/table/CellOnParse.java", "methodNumberAfterChange": 14, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-    public CellOnParse copy() {\r", "+    public CellOnParse deepCopy() {\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public CellOnParse deepCopy()", "id": "f426917bd79f84c2bef316fa57bb48fb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 31, "signatureBeforeChange": "\r \tpublic static AlienTraverseHandler getAlienTraverseHandler()", "fileName": "src/fitlibrary/traverse/Traverse.java", "methodNumberAfterChange": 25, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\tpublic static AlienTraverseHandler getAlienTraverseHandler() {\r", "-\t\treturn ALIEN_TRAVERSE_HANDLER;\r", "-\t}\r", "+\tpublic static FitHandler getFitHandler() {\r", "+\t\treturn FIT_HANDLER;\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tpublic static FitHandler getFitHandler()", "id": "f8d2d99f5e537dc21e25fc84c0505f6c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4767425a751f55b5cf8e45d4dd541b0d", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}