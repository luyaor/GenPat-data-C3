{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 28, "signatureBeforeChange": "\r \tpublic Row copy()", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 27, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\tpublic Row copy() {\r", "+\tpublic Row deepCopy() {\r", "-\t\t\trowCopy.addCell(TableFactory.cell(cell(i).fullText()));\r", "+\t\t\trowCopy.add(TableFactory.cell(elementAt(i).fullText()));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Row deepCopy()", "id": "09869b30d974357e014f8518df77744a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void runRow(Row row, Row parameterRow, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.addCell(TableFactory.cell(\"Defined action call:\",body));\r", "+\t\t\trow.add(TableFactory.cell(\"Defined action call:\",body));\r", "-\t\t\trow.addCell(TableFactory.cell(TableFactory.tables(definedActionCallManager.getShowsTable())));\r", "+\t\t\trow.add(TableFactory.cell(TableFactory.tables(definedActionCallManager.getShowsTable())));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void runRow(Row row, Row parameterRow, TestResults testResults)", "id": "283e35ddc325d4cc183952c78ee73399", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 26, "signatureBeforeChange": "\r \tpublic Row rowTo(int from, int upto)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 25, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.addCell(TableFactory.cell(cell(i)));\r", "+\t\t\trow.add(TableFactory.cell(elementAt(i)));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Row rowTo(int from, int upto)", "id": "343ab04cdc740dd8c870cd8b1a41c3bd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate Table createDefineActionTable(Tables innerTables)", "fileName": "src/fitlibrary/definedAction/DefineActionsOnPageSlowly.java", "methodNumberAfterChange": 8, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tdefineActionTable.addRow(row);\r", "+\t\tdefineActionTable.add(row);\r", "-\t\trow.addCell(TableFactory.cell(innerTables));\r", "-\t\tdefineActionTable.addRow(row);\r", "+\t\trow.add(TableFactory.cell(innerTables));\r", "+\t\tdefineActionTable.add(row);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate Table createDefineActionTable(Tables innerTables)", "id": "6e58d7300044100b726d339519d866fc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables)", "fileName": "src/fitlibrary/definedAction/UseTemplateTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tparamsRow.addCell(TableFactory.cell(actualParameterNames.text(c,this)));\r", "+\t\t\tparamsRow.add(TableFactory.cell(actualParameterNames.text(c,this)));\r", "-\t\tcommentTable.newRow().addCell(TableFactory.cell(TableFactory.tables(paramsTable)));\r", "-\t\tcommentTable.newRow().addCell(TableFactory.cell(resultingTables));\r", "+\t\tcommentTable.newRow().add(TableFactory.cell(TableFactory.tables(paramsTable)));\r", "+\t\tcommentTable.newRow().add(TableFactory.cell(resultingTables));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate Row appendTableToReport(Table callingTable, Row actualParameterNames, int errors, List<Object> parameters, Tables resultingTables)", "id": "ef371b0c3173e975092d4a2bddb4465f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "42959ed207abb243250600755bcca7e7", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}