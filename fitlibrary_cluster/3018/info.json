{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic static String camel(String nameInitial)", "fileName": "src/fitlibrary/utility/ExtendedCamelCase.java", "methodNumberAfterChange": 1, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["-\tpublic static String camel(String nameInitial) {\r", "+\tpublic static String camel(String s) {\r", "+\t\treturn camel(s,false);\r", "+\t}\r", "-\t\treturn hideJavaKeyword(translateUnicode(camelise(name)));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \tpublic static String camel(String s)", "id": "5b206b2517eee3917eae81d0fa22c78c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected void parseDefinitions(Tables tables, String className, String absoluteFileName)", "fileName": "src/fitlibrary/definedAction/DefineActionsOnPageSlowly.java", "methodNumberAfterChange": 5, "commitBeforeChange": "20ec9bd9ffdef40eb6a72b0298d491ae8860b4a7", "diff": ["-\t// Warning: 'orrible code due to Parse!\r", "-\tprotected void parseDefinitions(Tables tables, String className, String absoluteFileName) {\r", "-\t\tTables innerTables = tables;\r", "-\t\tfor (int i = 0; i < tables.size(); i++) {\r", "-\t\t\tTable nextTable = tables.table(i);\r", "-\t\t\tif (i > 0 && isHR(nextTable.parse.leader)) {\r", "-\t\t\t\tTable lastTableInDefinition = tables.table(i-1);\r", "-\t\t\t\tParse more = lastTableInDefinition.parse.more;\r", "-\t\t\t\tString trailer = lastTableInDefinition.parse.trailer;\r", "-\t\t\t\tlastTableInDefinition.parse.more = null;\r", "-\t\t\t\tlastTableInDefinition.parse.trailer = \"\";\r", "-\t\t\t\tdefineAction(innerTables,className,absoluteFileName);\r", "-\t\t\t\tlastTableInDefinition.parse.more = more;\r", "-\t\t\t\tlastTableInDefinition.parse.trailer = trailer;\r", "-\t\t\t\tinnerTables = new Tables(nextTable);\r", "-\t\t\t} else if (isHR(nextTable.parse.trailer) || i == tables.size() - 1)\r", "-\t\t\t\tdefineAction(innerTables,className,absoluteFileName);\r", "-\t\t}\r", "+\tprotected void parseDefinitions(Tables tables, final String className, final String pathName) {\r", "+\t\tnew DefinedActionBodyCollector().parseDefinitions(tables, new DefineActionBodyConsumer() {\r", "+\t\t\t@Override\r", "+\t\t\tpublic void addAction(Tables innerTables) {\r", "+\t\t\t\tdefineAction(innerTables,className,pathName);\r", "+\t\t\t}\r", "+\t\t});\r"], "commitAfterChange": "1246b979733b15a96e4e63b0a8e64ace5c8b7841", "signatureAfterChange": "\r \tprotected void parseDefinitions(Tables tables, final String className, final String pathName)", "id": "f967851e4bfb4f761f1ef791a476028b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "c525da749cf4568cb6ecf5f8ff0b80b1", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}