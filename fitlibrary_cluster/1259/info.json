{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void basicCheck(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tint width = table.row(1).size();\r", "+\t\tint width = table.elementAt(1).size();\r", "-\t\t\tRow row = table.row(r);\r", "+\t\t\tRow row = table.elementAt(r);\r", "-\t\t\t\trow.cell(0).error(testResults,\"Irregular shaped: This row differs in width from the header\");\r", "+\t\t\t\trow.elementAt(0).error(testResults,\"Irregular shaped: This row differs in width from the header\");\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void basicCheck(Table table, TestResults testResults)", "id": "26e111a3ea0d1d4f9f3775f1353ebb84", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 9, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        Row firstRow = table.row(1);\r", "+        Row firstRow = table.elementAt(1);\r", "-                table.row(1).pass(testResults);\r", "+                table.elementAt(1).pass(testResults);\r", "-                firstRow = table.row(rowNo);\r", "+                firstRow = table.elementAt(rowNo);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "535ab510fca9d2c098ab4bf0f332d42d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public void testTable0Ignored()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        Table table0 = tables.table(0);\r", "+        Table table0 = tables.elementAt(0);\r", "-        assertTrue(table0.row(0).cell(0).wasIgnored());\r", "+        assertTrue(table0.elementAt(0).elementAt(0).wasIgnored());\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void testTable0Ignored()", "id": "d19ce578dcce5744f77cc77d6bc18d46", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic Object getFixture(TableOnParse table, TestResults results)", "fileName": "src/fit/FixtureBridge.java", "methodNumberAfterChange": 1, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tCell headingCell = table.row(0).cell(0);\r", "+\t\tCell headingCell = table.elementAt(0).elementAt(0);\r", "-\t\t        fixture.args = getArgsForTable(table.row(0));\r", "+\t\t        fixture.args = getArgsForTable(table.elementAt(0));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic Object getFixture(TableOnParse table, TestResults results)", "id": "e2a3e8e0a82f085bee0ea7673c3b3f72", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 1, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tTable table = tables.table(t);\r", "+\t\t\tTable table = tables.elementAt(t);\r", "-\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.row(0), testResults);\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.elementAt(0), testResults);\r", "-\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.row(0), testResults);\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.elementAt(0), testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "id": "ec9dfff92d3d0766858a79aa76cf24b3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "8c2feac4a2f886ed6b4664cdeb3635fd", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}