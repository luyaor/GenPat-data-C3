{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \r   public void testSetupDecoratorShouldThrowInvalidInputExceptionIfCounterIsNotSpecified() throws ParseException", "fileName": "src/fit/decorator/CopyAndAppendLastRowTest.java", "methodNumberAfterChange": 2, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void testSetupDecoratorShouldThrowInvalidInputExceptionIfCounterIsNotSpecified() throws ParseException {\r", "-    try {\r", "-      decorator.setupDecorator(new String[0]);\r", "-      fail(\"Should blow up\");\r", "-    } catch (InvalidInputException e) {\r", "-      assertEquals(\"Count for number of times to add the last row must be specified\", e.getMessage());\r", "-    }\r", "-  }\r", "+\tpublic void testSetupDecoratorShouldThrowInvalidInputExceptionIfCounterIsNotSpecified() {\r", "+\t\ttry {\r", "+\t\t\tdecorator.setupDecorator(new String[0]);\r", "+\t\t\tfail(\"Should blow up\");\r", "+\t\t} catch (InvalidInputException e) {\r", "+\t\t\tassertEquals(\r", "+\t\t\t\t\t\"Count for number of times to add the last row must be specified\",\r", "+\t\t\t\t\te.getMessage());\r", "+\t\t}\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tpublic void testSetupDecoratorShouldThrowInvalidInputExceptionIfCounterIsNotSpecified()", "id": "2e0f5a15c773d4451934ec32d05bb6ef", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r   public void testSetupDecoratorShouldThrowInvalidInputExceptionIfLoopCountIsNotSpecified() throws ParseException", "fileName": "src/fit/decorator/LoopTest.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void testSetupDecoratorShouldThrowInvalidInputExceptionIfLoopCountIsNotSpecified() throws ParseException {\r", "-    try {\r", "-      decorator.setupDecorator(new String[0]);\r", "-      fail(\"Should blow up\");\r", "-    } catch (InvalidInputException e) {\r", "-      assertEquals(\"Loop count must be specified\", e.getMessage());\r", "-    }\r", "-  }\r", "+\tpublic void testSetupDecoratorShouldThrowInvalidInputExceptionIfLoopCountIsNotSpecified() {\r", "+\t\ttry {\r", "+\t\t\tdecorator.setupDecorator(new String[0]);\r", "+\t\t\tfail(\"Should blow up\");\r", "+\t\t} catch (InvalidInputException e) {\r", "+\t\t\tassertEquals(\"Loop count must be specified\", e.getMessage());\r", "+\t\t}\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tpublic void testSetupDecoratorShouldThrowInvalidInputExceptionIfLoopCountIsNotSpecified()", "id": "c218646bd33d92a51886894ababd1e22", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "5a892286b68060092822747fcf551cd3", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}