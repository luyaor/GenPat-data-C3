{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void interpret(Row row, Map<Object,Object> copiedMap, Parser keyParser2, TestResults testResults)", "fileName": "src/fitlibrary/collection/map/MapTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tObject key = keyParser2.parseTyped(row.cell(0),testResults).getSubject();\r", "+\t\t\tObject key = keyParser2.parseTyped(row.elementAt(0),testResults).getSubject();\r", "-\t\t\t\trow.cell(0).expectedElementMissing(testResults);\r", "+\t\t\t\trow.elementAt(0).expectedElementMissing(testResults);\r", "-\t\t\t\tif (valueParser3.matches(row.cell(1),value,testResults))\r", "+\t\t\t\tif (valueParser3.matches(row.elementAt(1),value,testResults))\r", "-\t\t\t\t\trow.cell(1).fail(testResults,valueParser3.show(value),this);\r", "+\t\t\t\t\trow.elementAt(1).fail(testResults,valueParser3.show(value),this);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void interpret(Row row, Map<Object,Object> copiedMap, Parser keyParser2, TestResults testResults)", "id": "0ad9bd1d003d28b758eab753e2fc736d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \t@Test public void setColumnSpanWithMultipleCellsWithAndWithoutColumnSpanSetAddToTheColumnSpanOfLastCell() throws Exception", "fileName": "test/fitlibrary/table/TestRowOnParse.java", "methodNumberAfterChange": 8, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tassertThat(row.cell(0).getColumnSpan(),is(4));\r", "-\t\tassertThat(row.cell(1).getColumnSpan(), is(1));\r", "-\t\tassertThat(row.cell(2).getColumnSpan(),is(2));\r", "-\t\tassertThat(row.cell(3).getColumnSpan(),is(8));\r", "+\t\tassertThat(row.elementAt(0).getColumnSpan(),is(4));\r", "+\t\tassertThat(row.elementAt(1).getColumnSpan(), is(1));\r", "+\t\tassertThat(row.elementAt(2).getColumnSpan(),is(2));\r", "+\t\tassertThat(row.elementAt(3).getColumnSpan(),is(8));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Test public void setColumnSpanWithMultipleCellsWithAndWithoutColumnSpanSetAddToTheColumnSpanOfLastCell() throws Exception", "id": "54e87857e123896d0e2f84546cbf131d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "44fb66d248a4acc3e73ff52b1d644cd3", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}