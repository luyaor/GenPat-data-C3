{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 19, "signatureBeforeChange": "\r \t\t@Override\r \t\tpublic Cell expect(final Mockery context,final String path, final int index)", "fileName": "src/fitlibrary/matcher/TableBuilderForTests.java", "methodNumberAfterChange": 14, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tpublic Cell expect(final Mockery context,final String path, final int index) {\r", "-\t\t\tfinal Cell cell = super.expect(context, path, index);\r", "-\t\t\tfinal String name = optionalText.isSome() ? optionalText.get() : localPath(path, index);\r", "-\t\t\t\tallowing(cell).text(); \r", "-\t\t\t\twill(returnValue(name));\r", "-\t\t\t\tallowing(cell).text(with(any(VariableResolver.class))); will(returnValue(name));\r", "+\t\t}\r", "+\t\tpublic CellBuilder withTagLine(String tagLine) {\r", "+\t\t\tCellBuilder fresh = new CellBuilder(optionalText);\r", "+\t\t\twithTagLine(fresh,tagLine);\r", "+\t\t\treturn fresh;\r", "+\t\t}\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\tpublic CellBuilder withTagLine(String tagLine)", "id": "59caf83db757b8f2706d0b01554c9732", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \r \t\tpublic Row expect(Mockery context)", "fileName": "src/fitlibrary/matcher/TableBuilderForTests.java", "methodNumberAfterChange": 19, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\r", "-\t\tpublic Row expect(Mockery context) {\r", "-\t\t\t// TODO Auto-generated method stub\r", "-\t\t\treturn null;\r", "+\t\t}\r", "+\t\t@Override\r", "+\t\tpublic Cell expect(final Mockery context,final String path, final int index) {\r", "+\t\t\tfinal Cell cell = super.expect(context, path, index);\r", "+\t\t\tfinal String name = optionalText.isSome() ? optionalText.get() : localPath(path, index);\r", "+\t\t\tcontext.checking(new Expectations() {{\r", "+\t\t\t\tallowing(cell).text(); \r", "+\t\t\t\twill(returnValue(name));\r", "+\t\t\t\tallowing(cell).text(with(any(VariableResolver.class))); will(returnValue(name));\r", "+\t\t\t\tallowing(cell).hasEmbeddedTables(); will(returnValue(!cell.isEmpty()));\r", "+\t\t\t\tallowing(cell).getEmbeddedTables(); will(returnValue(cell));\r", "+\t\t\t}});\r", "+\t\t\treturn cell;\r", "+\t\t}\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \t\t@Override\r \t\tpublic Cell expect(final Mockery context,final String path, final int index)", "id": "5d99d426e20441f9fcb81c05fa7871ef", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \t\tpublic Table expect(final Mockery context)", "fileName": "src/fitlibrary/matcher/TableBuilderForTests.java", "methodNumberAfterChange": 2, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["+\t\t}\r", "+\t\tpublic From expect(final Mockery context) {\r", "+\t\t\treturn expect(context,\"\",0);\r", "+\t\t}\r", "-\t\tpublic Table expect(final Mockery context) {\r", "-\t\t\tfinal List<Row> listOfTable = new ArrayList<Row>();\r", "-\t\t\tfor (RowBuilder builder : elements)\r", "-\t\t\t\tlistOfTable.add(builder.expect(context));\r", "-\t\t\tfinal Table table = context.mock(Table.class);\r", "-\t\t\tcontext.checking(new Expectations() {{\r", "-\t\t\t\tallowing(table).size(); will(returnValue(listOfTable.size()));\r", "-\t\t\t\tfor (int i = 0; i < elements.size(); i++) {\r", "-\t\t\t\t\tfinal int ii = i;\r", "-\t\t\t\t\tallowing(table).elementAt(i); will(returnValue(listOfTable.get(ii)));\r", "-\t\t\t\t}\r", "-//\t\t\t\tallowing(table).last(); will(returnValue(listOfTable.get(elements.size()-1)));\r", "-\t\t\t\tallowing(table).iterator(); will(returnValue(listOfTable.iterator()));\r", "-\t\t\t}});\r", "-\t\t\treturn table;\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \t\tpublic From expect(final Mockery context)", "id": "79a2a68a74f366764d9f191f160cd717", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "9845cd849105eeb9f7140896edd33c83", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}