{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \tprivate void processDefinedAction(Tables definedActionBody, Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 9, "commitBeforeChange": "cd20838066679088607bacd4884b58979b698e68", "diff": ["-\t\tcolourReport(definedActionBody, row, testResults, subTestResults);\r", "-\t}\r", "+\t\tcolourRowInReport(row, testResults, subTestResults);\r", "+\t\t\tCell cell = TableFactory.cell(definedActionBody);\r", "+\t\t\tcell.at(0).setLeader(Fixture.label(link(binder.getPageName()))+cell.at(0).getLeader());\r", "+\t\t\tcell.calls();\r", "+\t\t\trow.add(cell);\r", "+\t\t}\r", "+\t}\r"], "commitAfterChange": "e3f9a7058b7a695d0825f787e929954ce3c4ac47", "signatureAfterChange": "\r \tprivate void processDefinedAction(Tables definedActionBody, Row row, TestResults testResults)", "id": "abe6ede9c0a3bff9ad169e1b0806a176", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void runStorytest(Tables tables, TableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 1, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic void runStorytest(Tables tables, TableListener tableListener) {\r", "+\tpublic void runStorytest(Tables tables, ITableListener tableListener) {\r", "+\t\tTestResults testResults = tableListener.getTestResults();\r", "+\t\t\tif (current == this && table.isPlainTextTable()) {\r", "+\t\t\t\tPlainTextAnalyser plainTextAnalyser = new PlainTextAnalyser(runtime,TemporaryPlugBoardForRuntime.definedActionsRepository());\r", "+\t\t\t\tplainTextAnalyser.analyseAndReplaceRowsIn(table, testResults);\r", "+\t\t\t}\r", "-\t\t\tcurrent.runTable(table, tableListener);\r", "-\t\t\tpopLocalSut(table,tableListener);\r", "+\t\t\tcurrent.runTable(table,tableListener);\r", "+\t\t\tif (t < tables.size() - 1)\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.row(0), testResults);\r", "+\t\t\telse\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.row(0), testResults);\r", "+\t\t\truntime.addAccumulatedFoldingText(table);\r", "-\t\ttearDownFlowObject(tables, tableListener);\r", "-\t\t// Could return whether we hit a suite fixture...\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "id": "c66eb28ffe457f394f224a0f0ca5f8e1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "dabc530eea62071537abb904dde36488", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}