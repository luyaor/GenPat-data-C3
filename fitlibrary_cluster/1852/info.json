{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 8, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\t\trow.elementAt(i).error(testResults, new FitLibraryException(\"\"));\r", "+\t\t\t\t\trow.at(i).error(testResults, new FitLibraryException(\"\"));\r", "-\t\t\t\t\trow.elementAt(i).fail(testResults);\r", "+\t\t\t\t\trow.at(i).fail(testResults);\r", "-\t\t\t\t\trow.elementAt(i).ignore(testResults);\r", "+\t\t\t\t\trow.at(i).ignore(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "id": "10d6be3cae8f202dcef419815df8690b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": " \t@Test \tpublic void evenUpRowsChangesLastCellColumnSpanToMatchOtherRowsColumnSpan() throws Exception", "fileName": "test/fitlibrary/table/TestTable.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tassertThat(row1.elementAt(0).getColumnSpan(),is(4));", "-\t\tassertThat(row2.elementAt(0).getColumnSpan(),is(1));", "-\t\tassertThat(row2.elementAt(1).getColumnSpan(),is(3));", "+\t\tassertThat(row1.at(0).getColumnSpan(),is(4));", "+\t\tassertThat(row2.at(0).getColumnSpan(),is(1));", "+\t\tassertThat(row2.at(1).getColumnSpan(),is(3));"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": " \t@Test \tpublic void evenUpRowsChangesLastCellColumnSpanToMatchOtherRowsColumnSpan() throws Exception", "id": "26d110dea07154d5b9462affb13d0b8a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        Row firstRow = table.elementAt(1);\r", "+        Row firstRow = table.at(1);\r", "-                table.elementAt(1).pass(testResults);\r", "+                table.at(1).pass(testResults);\r", "-                firstRow = table.elementAt(rowNo);\r", "+                firstRow = table.at(rowNo);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "4f0af22df0c0e5dd9bb2f8d0d0d6bfac", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void basicCheck(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tint width = table.elementAt(1).size();\r", "+\t\tint width = table.at(1).size();\r", "-\t\t\tRow row = table.elementAt(r);\r", "+\t\t\tRow row = table.at(r);\r", "-\t\t\t\trow.elementAt(0).error(testResults,\"Irregular shaped: This row differs in width from the header\");\r", "+\t\t\t\trow.at(0).error(testResults,\"Irregular shaped: This row differs in width from the header\");\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void basicCheck(Table table, TestResults testResults)", "id": "5165712c43b59dcc81e3f5af86e124fd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic static Row mapOddBalls(Row row, Evaluator evaluator)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\trow.elementAt(0).setText(\"add named\");\r", "-\t\t\trow.elementAt(1).setText(row.text(3,evaluator));\r", "-\t\t\trow.elementAt(2).setText(className);\r", "+\t\t\trow.at(0).setText(\"add named\");\r", "+\t\t\trow.at(1).setText(row.text(3,evaluator));\r", "+\t\t\trow.at(2).setText(className);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic static Row mapOddBalls(Row row, Evaluator evaluator)", "id": "58cc203d8b173962424baacd4e1c26b8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public void testTable0Ignored()", "fileName": "test/fitlibrary/table/TestParseTables.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        Table table0 = tables.elementAt(0);\r", "+        Table table0 = tables.at(0);\r", "-        assertTrue(table0.elementAt(0).elementAt(0).wasIgnored());\r", "+        assertTrue(table0.at(0).at(0).wasIgnored());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public void testTable0Ignored()", "id": "67b148fe185386ea8761c94e5fa2500d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     private void doTable(Table theTable)", "fileName": "src/fitlibrary/spec/SpecifySuiteFixture.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-            Row row = theTable.elementAt(rowNo);\r", "+            Row row = theTable.at(rowNo);\r", "-            Cell test = row.elementAt(0);\r", "-            Cell report = row.elementAt(1);\r", "+            Cell test = row.at(0);\r", "+            Cell report = row.at(1);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     private void doTable(Table theTable)", "id": "6c3d59180417474487b4b3b0ceb3da16", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprotected DefinedActionTraverse(Table defTable, int parameterCount)", "fileName": "src/fitlibrary/definedAction/DefinedActionTraverse.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRow header = defTable.elementAt(1);\r", "+\t\tRow header = defTable.at(1);\r", "-\t\tbody = TableFactory.tables(defTable.elementAt(2).elementAt(0).getEmbeddedTables());\r", "+\t\tbody = TableFactory.tables(defTable.at(2).at(0).getEmbeddedTables());\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprotected DefinedActionTraverse(Table defTable, int parameterCount)", "id": "93a02e50ac8da81bef81d3cd5f2a7136", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 79, "signatureBeforeChange": "\r \tpublic void optionally(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 77, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t    Object result = callMethodInRow(row,testResults, true,row.elementAt(0));\r", "+\t\t    Object result = callMethodInRow(row,testResults, true,row.at(0));\r", "-\t\t\trow.elementAt(0).error(testResults,e);\r", "+\t\t\trow.at(0).error(testResults,e);\r", "-\t\trow.elementAt(0).pass(testResults);\r", "+\t\trow.at(0).pass(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void optionally(Row row, TestResults testResults) throws Exception", "id": "a0117625d648b7d9282ac08a2b24f121", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tprivate void createObjectOfSpecifiedType(Table table, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectSetUpTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tRow row = table.elementAt(rowNo);\r", "+\t\t\tRow row = table.at(rowNo);\r", "-\t\t\t\tif (givesClass(row.elementAt(i),this)) {\r", "-\t\t\t\t\tcreateSystemUnderTest(row.elementAt(i+1), testResults);\r", "+\t\t\t\tif (givesClass(row.at(i),this)) {\r", "+\t\t\t\t\tcreateSystemUnderTest(row.at(i+1), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void createObjectOfSpecifiedType(Table table, TestResults testResults)", "id": "a3e65c15cfbd5ec6d82862798d82a766", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void colourReport(Row row, TestResults testResults, TestResults subTestResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\t\t\trow.elementAt(i).error(testResults, new FitLibraryException(\"\"));\r", "+\t\t\t\t\trow.at(i).error(testResults, new FitLibraryException(\"\"));\r", "-\t\t\t\t\trow.elementAt(i).fail(testResults);\r", "+\t\t\t\t\trow.at(i).fail(testResults);\r", "-\t\t\t\t\trow.elementAt(i).pass(testResults);\r", "+\t\t\t\t\trow.at(i).pass(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void colourReport(Row row, TestResults testResults, TestResults subTestResults)", "id": "a78b4491b42cc03285ccb61de3bbafd5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectCheckTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tCell cell = row.elementAt(i);\r", "+\t\t\tCell cell = row.at(i);\r", "-\t\t\t\tcheckClass(testResults, cell, row.elementAt(i+1));\r", "+\t\t\t\tcheckClass(testResults, cell, row.at(i+1));\r", "-\t\t\t\t\ttarget.invokeAndCheck(TableFactory.row(),row.elementAt(i+1),testResults,false);\r", "+\t\t\t\t\ttarget.invokeAndCheck(TableFactory.row(),row.at(i+1),testResults,false);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "id": "b02fed2ce2135d90c04c0b983756d6fc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate Row analyse(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/PlainTextAnalyser.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tString textCall = row.elementAt(0).fullText();\r", "+\t\tString textCall = row.at(0).fullText();\r", "-\t\t\trow.elementAt(0).error(testResults, \"Unknown action\");\r", "+\t\t\trow.at(0).error(testResults, \"Unknown action\");\r", "-\t\t\trow.elementAt(0).error(testResults, \"Ambiguous action (see details in logs after table)\");\r", "+\t\t\trow.at(0).error(testResults, \"Ambiguous action (see details in logs after table)\");\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate Row analyse(Row row, TestResults testResults)", "id": "c39d5247748c8a7180512b88e6dc8306", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tTable table = tables.elementAt(t);\r", "+\t\t\tTable table = tables.at(t);\r", "-\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.elementAt(0), testResults);\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.at(0), testResults);\r", "-\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.elementAt(0), testResults);\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.at(0), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "id": "cfd0097e4c819a1eb5a87835a7d674ee", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "8b1eb9f3e3606d5451b1299eaf99dabd", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}