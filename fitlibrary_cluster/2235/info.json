{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tprivate void xref(String pageName, Tables tables) throws FitParseException, InterruptedException, IOException", "fileName": "src/fitlibrary/xref/CrossReferenceFixture.java", "methodNumberAfterChange": 3, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tfor (int t = 0; t < tables.size(); t++) {\r", "-\t\t\tTable table = tables.table(t);\r", "+\t\tfor (Table table: tables) {\r", "-\t\t\t\tString action = actionOf(table.row(rowNo));\r", "+\t\t\t\tString action = actionOf(table.elementAt(rowNo));\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void xref(String pageName, Tables tables) throws FitParseException, InterruptedException, IOException", "id": "162003e2c88af3be3ee8b27004cc011b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void run(Tables tables, int index, TableListener tableListener, boolean tearingDown)", "fileName": "src/fitlibrary/suite/InFlowPageRunner.java", "methodNumberAfterChange": 1, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\tpublic void run(Tables tables, int index, TableListener tableListener, boolean tearingDown) {\r", "+\tpublic void run(Tables tables, int index, TableListener tableListener) {\r", "-\t\t\tif (t == tables.size() - 1  & tearingDown)\r", "-\t\t\t\tdoEvaluator.tearDown(table, tableListener.getTestResults());\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tpublic void run(Tables tables, int index, TableListener tableListener)", "id": "1f422183e34c0903637e74278463e173", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "619311a80e7745ab316abf7ea627b8fc", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}