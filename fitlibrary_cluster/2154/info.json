{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void runTable(Table table, ITableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 4, "commitBeforeChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "diff": ["-\t\t\t\t\t\t\tTable restOfTable = rowNo == 0 ? table : table.fromAt(rowNo);\r", "-\t\t\t\t\t\t\t\thandleOtherEvaluator(typedResult,(Evaluator)subject, row, restOfTable,testResults);\r", "-\t\t\t\t\t\t\t\tif (restOfTable != table)\r", "-\t\t\t\t\t\t\t\t\tfor (int i = 0; i < restOfTable.size(); i++)\r", "-\t\t\t\t\t\t\t\t\t\ttable.replaceAt(rowNo+i, restOfTable.at(i));\r", "+\t\t\t\t\t\t\t\thandleEvaluator(typedResult, (Evaluator) subject, rowNo, table, testResults);\r", "-\t\t\t\t\t\t\t\thandleOtherEvaluator(typedResult,(Evaluator)subject, row, restOfTable, testResults);\r", "-\t\t\t\t\t\t\t\tif (restOfTable != table)\r", "-\t\t\t\t\t\t\t\t\tfor (int i = 0; i < restOfTable.size(); i++)\r", "-\t\t\t\t\t\t\t\t\t\ttable.replaceAt(rowNo+i, restOfTable.at(i));\r", "+\t\t\t\t\t\t\t\thandleEvaluator(typedResult, (Evaluator) subject, rowNo, table, testResults);\r", "-\t\t\t\t\t\t\t\tTable remainingTable = restOfTable.asTableOnParse();\r", "+\t\t\t\t\t\t\t\tTable remainingTable = tableFromHere(table, rowNo).asTableOnParse();\r", "-\t\t\t\t\t\t\t\tif (restOfTable != table)\r", "-\t\t\t\t\t\t\t\t\tfor (int i = 0; i < remainingTable.size(); i++)\r", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < remainingTable.size(); i++)\r"], "commitAfterChange": "ab6a629e809e58ed4ed57aa45aeb30760bda0f95", "signatureAfterChange": "\r \tpublic void runTable(Table table, ITableListener tableListener)", "id": "bdd5299be5804ed97f4170fea25b9cfc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void handleOtherEvaluator(TypedObject typedResult, Evaluator evaluator, Row row, Table remainingTable, TestResults testResults)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 6, "commitBeforeChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "diff": ["+\t}\r", "+\tprivate void handleEvaluator(TypedObject typedResult, Evaluator subject,\r", "+\t\t\tint rowNo, Table table, TestResults testResults) {\r", "+\t\tTable restOfTable = tableFromHere(table, rowNo);\r", "+\t\tint rest = restOfTable.size();\r", "+\t\tRow row = table.at(rowNo);\r", "+\t\tsetRuntimeContextOf(subject);\r", "+\t\tcallSetUpSutChain(subject,row,testResults);\r", "+\t\tif (!(subject instanceof DefineAction)) // Don't want this as the storytest's main fixture/object\r", "+\t\t\tpushOnScope(typedResult,row,testResults);\r", "+\t\tsubject.interpretAfterFirstRow(restOfTable, testResults);\r", "+\t\tsetUpTearDown.callTearDownSutChain(subject, row, testResults);\r", "+\t\tif (restOfTable != table && restOfTable.size() > rest)\r", "+\t\t\tfor (int i = rest; i < restOfTable.size(); i++)\r", "+\t\t\t\ttable.add(restOfTable.at(i));\r", "-\t}\r", "-\tprivate void handleOtherEvaluator(TypedObject typedResult, Evaluator evaluator, Row row, Table remainingTable, TestResults testResults) {\r", "-\t\tsetRuntimeContextOf(evaluator);\r", "-\t\tcallSetUpSutChain(evaluator,row,testResults);\r", "-\t\tif (!(evaluator instanceof DefineAction)) // Don't want this as the storytest's main fixture/object\r", "-\t\t\tpushOnScope(typedResult,row,testResults);\r", "-\t\tevaluator.interpretAfterFirstRow(remainingTable, testResults);\r", "-\t\tsetUpTearDown.callTearDownSutChain(evaluator, row, testResults);\r"], "commitAfterChange": "ab6a629e809e58ed4ed57aa45aeb30760bda0f95", "signatureAfterChange": "\r \tprivate void handleEvaluator(TypedObject typedResult, Evaluator subject,\r \t\t\tint rowNo, Table table, TestResults testResults)", "id": "d6c010fec8df72b23cd051cbb677d070", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "13703bddfafd71f11130931ece75a0eb", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}