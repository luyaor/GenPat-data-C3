{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r \t@Test\r \tpublic void addNamedObjectAndSelect()", "fileName": "test/fitlibrary/flow/TestScopeStack.java", "methodNumberAfterChange": 11, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tfinal TestResults testResults = new TestResults();\r", "-\t\tscopeStack.addNamedObject(\"x\",someTypedObject,new RowOnParse(),testResults);\r", "+\t\tfinal TestResults testResults = TestResultsFactory.testResults();\r", "+\t\tscopeStack.addNamedObject(\"x\",someTypedObject,TableFactory.row(),testResults);\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \t@Test\r \tpublic void addNamedObjectAndSelect()", "id": "040dcfa26076d3b0641447cf71468f19", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 3, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\t\trow.addCell(new CellOnParse(new TablesOnParse(definedActionCallManager.getShowsTable())));\r", "+\t\t\trow.addCell(TableFactory.cell(TableFactory.tables(definedActionCallManager.getShowsTable())));\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults)", "id": "0cc38c314698549ea6f2abc2566841d8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate void processDefinition(Tables tables, TestResults testResults)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 6, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\t\tRowOnParse row = new RowOnParse();\r", "+\t\t\tRow row = TableFactory.row();\r", "-\t\t\tbody = new TablesOnParse(new TableOnParse(row));\r", "+\t\t\tbody = TableFactory.tables(TableFactory.table(row));\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tprivate void processDefinition(Tables tables, TestResults testResults)", "id": "114c4f0f230422b0741977081072338e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate Object parse(String s, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/collection/MapParser.java", "methodNumberAfterChange": 8, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\t\tmap.put(parser.parseTyped(new CellOnParse(split[0]),testResults).getSubject(),\r", "-\t\t\t\t\tparser.parseTyped(new CellOnParse(split[1]),testResults).getSubject());\r", "+\t\t\tmap.put(parser.parseTyped(TableFactory.cell(split[0]),testResults).getSubject(),\r", "+\t\t\t\t\tparser.parseTyped(TableFactory.cell(split[1]),testResults).getSubject());\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tprivate Object parse(String s, TestResults testResults) throws Exception", "id": "345c5d6036886bb2beba230e36225f62", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Test\r \tpublic void parserAlone() throws Exception", "fileName": "test/fitlibrary/parser/collection/TestCollectionParser.java", "methodNumberAfterChange": 1, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tCellOnParse cell = new CellOnParse(cellText);\r", "-\t\tTestResults testResults = new TestResults();\r", "+\t\tCell cell = TableFactory.cell(cellText);\r", "+\t\tTestResults testResults = TestResultsFactory.testResults();\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r     @Test\r \tpublic void parserAlone() throws Exception", "id": "34b2828dbdc688b6cfabd7b38db5f9da", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic void testAdapterAlone() throws Exception", "fileName": "test/fitlibrary/parser/collection/TestArrayParser.java", "methodNumberAfterChange": 0, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tCellOnParse cell = new CellOnParse(cellText);\r", "+\t\tCell cell = TableFactory.cell(cellText);\r", "-\t\tassertArrayEquals(expectedResult,(int[])parser.parseTyped(cell,new TestResults()).getSubject());\r", "-\t\tassertTrue(parser.matches(cell, expectedResult,new TestResults()));\r", "+\t\tassertArrayEquals(expectedResult,(int[])parser.parseTyped(cell,TestResultsFactory.testResults()).getSubject());\r", "+\t\tassertTrue(parser.matches(cell, expectedResult,TestResultsFactory.testResults()));\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \r \tpublic void testAdapterAlone() throws Exception", "id": "4075845e00f1b580c6910ad1e09277dd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private void checkReferenceFails(Parser adapter, String text)", "fileName": "test/fitlibrary/parser/TestReferenceParser.java", "methodNumberAfterChange": 4, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-            CellOnParse cell = new CellOnParse(text);\r", "-            adapter.parseTyped(cell,new TestResults());\r", "+            Cell cell = TableFactory.cell(text);\r", "+            adapter.parseTyped(cell,TestResultsFactory.testResults());\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r     private void checkReferenceFails(Parser adapter, String text)", "id": "4b5bd27b21f73fa4d5406814914c113a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void testAdapterWithProperty() throws Exception", "fileName": "test/fitlibrary/parser/collection/TestArrayParser.java", "methodNumberAfterChange": 4, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tObject parse = adapter.parseTyped(new CellOnParse(\"5,6,7\"), new TestResults()).getSubject();\r", "+\t\tObject parse = adapter.parseTyped(TableFactory.cell(\"5,6,7\"), TestResultsFactory.testResults()).getSubject();\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic void testAdapterWithProperty() throws Exception", "id": "541c0a5a5a2dd93585aa3c29c82e74b3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic static Object evaluate(Evaluator evaluator, Type type, String text) throws Exception", "fileName": "src/fitlibrary/parser/lookup/ParserSelectorForType.java", "methodNumberAfterChange": 7, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tTestResults testResults = new TestResults();\r", "-\t\tCellOnParse cell = new CellOnParse(text);\r", "+\t\tTestResults testResults = TestResultsFactory.testResults();\r", "+\t\tCell cell = TableFactory.cell(text);\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic static Object evaluate(Evaluator evaluator, Type type, String text) throws Exception", "id": "5967ff874ee222290a7903073bd63d0a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void tt() throws FitParseException", "fileName": "test/fitlibrary/xref/TestCrossReferenceFixture.java", "methodNumberAfterChange": 0, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tTablesOnParse tables = new TablesOnParse(new Parse(SimpleWikiTranslator.translate(wiki))); \r", "-\t\txref.interpretAfterFirstRow(tables.table(0), new TestResults());\r", "+\t\tTables tables = SimpleWikiTranslator.translateToTables(wiki); \r", "+\t\txref.interpretAfterFirstRow(tables.table(0), TestResultsFactory.testResults());\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \t@Test\r \tpublic void tt() throws FitParseException", "id": "6061b7d8729b71e2ede85145de744715", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic TablesOnParse(String html) throws FitParseException", "fileName": "src/fitlibrary/table/TablesOnParse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\tpublic TablesOnParse(String html) throws FitParseException {\r", "-\t\tthis(new Parse(html));\r", "+\tpublic TablesOnParse(Tables tables) {\r", "+\t\tthis(ParseUtility.copyParse(tables.parse()));\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic TablesOnParse(Tables tables)", "id": "6d24a04a7d6d474c65e8d38f9eefc4b6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     private void checkReference(Parser adapter, String text, Object element) throws Exception", "fileName": "test/fitlibrary/parser/TestReferenceParser.java", "methodNumberAfterChange": 2, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-        CellOnParse cell = new CellOnParse(text);\r", "-        TestResults testResults = new TestResults();\r", "+        Cell cell = TableFactory.cell(text);\r", "+        TestResults testResults = TestResultsFactory.testResults();\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r     private void checkReference(Parser adapter, String text, Object element) throws Exception", "id": "6f74959506ac6fc2d75e02c23aa954a9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic void testParseAlone() throws Exception", "fileName": "test/fitlibrary/parser/TestSimpleValueAdapter.java", "methodNumberAfterChange": 0, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tCellOnParse cell = new CellOnParse(cellText);\r", "+\t\tCell cell = TableFactory.cell(cellText);\r", "-\t\tTestResults testResults = new TestResults();\r", "+\t\tTestResults testResults = TestResultsFactory.testResults();\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \r \tpublic void testParseAlone() throws Exception", "id": "cd41d40d6c9bbd053604a0f3ec5b82b7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 3, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\t\t\t\t\t\tdoEvaluator.interpretInFlow(new TableOnParse(row),testResults);\r", "+\t\t\t\t\t\t\tdoEvaluator.interpretInFlow(TableFactory.table(row),testResults);\r", "-\t\t\t\t\t\t\tinterpretEvaluator(evaluator,new TableOnParse(row),testResults);\r", "+\t\t\t\t\t\t\tinterpretEvaluator(evaluator,TableFactory.table(row),testResults);\r", "-\t\t\t\t\t\t\tgetFitHandler().doTable(subject, new TableOnParse(row),testResults,this);\r", "+\t\t\t\t\t\t\tgetFitHandler().doTable(subject, TableFactory.table(row),testResults,this);\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "f5106a9cccf46b0466f96977b82257f6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "a529ddbf37ae7329dd90ce0359b0b68d", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}