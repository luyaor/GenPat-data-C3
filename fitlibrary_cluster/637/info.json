{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic TableListener(FixtureListener listener, TestResults testResults)", "fileName": "src/fitlibrary/runResults/TableListener.java", "methodNumberAfterChange": 3, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-\tpublic TableListener(FixtureListener listener, TestResults testResults) {\r", "+\tpublic TableListener(ReportListener listener, TestResults testResults) {\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic TableListener(ReportListener listener, TestResults testResults)", "id": "015dd69e83a4c23f191c3e00000cc7e8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic boolean isValid()", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 4, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["-\t\treturn parameterSubstitution != null;\r", "+\t\treturn binder != null;\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r \t@Override\r \tpublic boolean isValid()", "id": "0e235620896bbc4e4858013c7098a8d8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     private boolean rowsMatch(Object[][] actual, Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/GridTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-            if (!table.rowExists(rowNo+1))\r", "+            if (!table.elementExists(rowNo+1))\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r     private boolean rowsMatch(Object[][] actual, Table table, TestResults testResults)", "id": "1f5fe70f80cb815eec71dfe79a37eb70", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic Reporter(ArrayBlockingQueue<ReportAction> reportQueue, \r \t\t\tFitServerBridge fitServerBridge, \r \t\t\tCountDownLatch endGate,\r \t\t\tTestResults testResults)", "fileName": "src/fitlibrary/suite/Reporter.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ea5f907867b827055de715a2af089e645fd4ecc9", "diff": ["-\tpublic Reporter(ArrayBlockingQueue<ReportAction> reportQueue, \r", "+\tpublic Reporter(BlockingQueue<ReportAction> reportQueue, \r"], "commitAfterChange": "5380ee958e6ba9094c24e3ef1ab5667c9a15bc60", "signatureAfterChange": "\r \r \tpublic Reporter(BlockingQueue<ReportAction> reportQueue, \r \t\t\tFitServerBridge fitServerBridge, \r \t\t\tCountDownLatch endGate,\r \t\t\tTestResults testResults)", "id": "2357ae210486cd49e9146de549d45f9a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \tpublic TablesMatcher(Tables expected)", "fileName": "src/fitlibrary/matcher/TablesMatcher.java", "methodNumberAfterChange": 0, "commitBeforeChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "diff": ["-\t\tthis.expected = expected;\r", "+\t\tthis.expectedTables = expected;\r"], "commitAfterChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "signatureAfterChange": "\r \t\r \tpublic TablesMatcher(Tables expected)", "id": "2ea7713367a6b84405d09e6ba389ddfd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 25, "signatureBeforeChange": "\r \tpublic void color(Row row, boolean right, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 25, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\tif (!everySecond && row.cellExists(0))\r", "+\t\tif (!everySecond && row.elementExists(0))\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \tpublic void color(Row row, boolean right, TestResults testResults) throws Exception", "id": "41905d74a2b617f13f6146df211a8608", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private boolean cellsMatch(Object[] actual, Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/GridTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-            if (!row.cellExists(i))\r", "+            if (!row.elementExists(i))\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r     private boolean cellsMatch(Object[] actual, Row row, TestResults testResults)", "id": "4decf3a2193d6da94b243734884b93c9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \t\tpublic MyDoFixture()", "fileName": "test/fitlibrary/parser/TestReferenceParser.java", "methodNumberAfterChange": 7, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\t\tsetRuntimeContext(new RuntimeContextImplementation());\r", "+\t\t\tsetRuntimeContext(new RuntimeContextContainer());\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t\tpublic MyDoFixture()", "id": "5840fe6880bcda6736c38ee4777ca3e5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate Object callFindStringMethod(String text) throws Exception", "fileName": "src/fitlibrary/object/NonGenericFinder.java", "methodNumberAfterChange": 2, "commitBeforeChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "diff": ["-        throw new FitLibraryException(findExceptionMessage);\r", "+        throw new FitLibraryExceptionInHtml(findExceptionMessage);\r"], "commitAfterChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "signatureAfterChange": "\r \tprivate Object callFindStringMethod(String text) throws Exception", "id": "58947323823df095d8e82a676513444a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tpublic DoFlowActor actor(ArrayBlockingQueue<ReportAction> reportQueue, TestResults testResults)", "fileName": "src/fitlibrary/suite/BatchFitLibrarySingleStep.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ea5f907867b827055de715a2af089e645fd4ecc9", "diff": ["-\tpublic DoFlowActor actor(ArrayBlockingQueue<ReportAction> reportQueue, TestResults testResults) {\r", "+\tpublic DoFlowActor actor(BlockingQueue<ReportAction> reportQueue, TestResults testResults) {\r"], "commitAfterChange": "5380ee958e6ba9094c24e3ef1ab5667c9a15bc60", "signatureAfterChange": "\r \tpublic DoFlowActor actor(BlockingQueue<ReportAction> reportQueue, TestResults testResults)", "id": "640d94c34b345507267e95c11a9fef74", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 9, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-            else if (!table.rowExists(2))\r", "+            else if (!table.elementExists(2))\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r     @Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "6f6fa438b2dcc2744fb29428b8b2b9f9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tMultiParameterSubstitution lookupMulti(String name);", "fileName": "src/fitlibrary/definedAction/DefinedActionsRepository.java", "methodNumberAfterChange": 5, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["-\t\t\tTables body, String absoluteFileName);\r", "-\tMultiParameterSubstitution lookupMulti(String name);\r", "+\tMultiParameterBinder lookupMulti(String name);\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r \tMultiParameterBinder lookupMulti(String name);", "id": "7455b628ca6011cecdbb214e42458275", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 58, "signatureBeforeChange": "\r \t\r \t@CompoundAction(wiki=\"\",\r \t\t\ttooltip=\"Show all the actions in scope after the current table.\")\r \tpublic boolean help()", "fileName": "src/fitlibrary/flow/GlobalActionScope.java", "methodNumberAfterChange": 58, "commitBeforeChange": "4bc3a34a7c00fa3401ea7dfe2e86aca65913b09b", "diff": ["-\t@CompoundAction(wiki=\"\",\r", "+\t@SimpleAction(wiki=\"\",\r"], "commitAfterChange": "657a098f8852da28bdd75a1bc202c7d3201a0cd5", "signatureAfterChange": "\r \t\r \t@SimpleAction(wiki=\"\",\r \t\t\ttooltip=\"Show all the actions in scope after the current table.\")\r \tpublic boolean help()", "id": "7accb47f7ce43d883e2337a0b462a930", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void recordTestResult(TestResult tr) throws IOException", "fileName": "src/fitlibrary/batch/resultsOut/FolderTestResultRepository.java", "methodNumberAfterChange": 3, "commitBeforeChange": "7bc373fdff836c5fe5554dd7cca83ec4c7ddbc73", "diff": ["-\t\terr.println(tr.getName()+  \" right=\"+counts.right +\", wrong=\"+counts.wrong+ \", ignores=\"+counts.ignores+\", exceptions= \"+counts.exceptions);\r", "+\t\tout.println(tr.getName()+  \" right=\"+counts.right +\", wrong=\"+counts.wrong+ \", ignores=\"+counts.ignores+\", exceptions= \"+counts.exceptions);\r"], "commitAfterChange": "a1ec4135443e6b5658923cb34156b47b7ffd658c", "signatureAfterChange": "\r \tpublic void recordTestResult(TestResult tr) throws IOException", "id": "82a8c4c18bdbd2f0382593af28b2f794", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 59, "signatureBeforeChange": "\r \t\r \t@CompoundAction(wiki=\"|''<i>help with</i>''|text|\",\r \t\t\ttooltip=\"Show all the actions in scope that contain the string after the current table.\")\r \tpublic boolean helpWith(String substring)", "fileName": "src/fitlibrary/flow/GlobalActionScope.java", "methodNumberAfterChange": 59, "commitBeforeChange": "4bc3a34a7c00fa3401ea7dfe2e86aca65913b09b", "diff": ["-\t@CompoundAction(wiki=\"|''<i>help with</i>''|text|\",\r", "+\t@SimpleAction(wiki=\"|''<i>help with</i>''|text|\",\r"], "commitAfterChange": "657a098f8852da28bdd75a1bc202c7d3201a0cd5", "signatureAfterChange": "\r \t\r \t@SimpleAction(wiki=\"|''<i>help with</i>''|text|\",\r \t\t\ttooltip=\"Show all the actions in scope that contain the string after the current table.\")\r \tpublic boolean helpWith(String substring)", "id": "8343dceb6be8548feba8ba3b1da660af", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprotected void definePlain(Row parametersRow, String wikiClassName,\r \t\t\tParameterSubstitution parameterSubstitution, Evaluator evaluator, String absoluteFileName)", "fileName": "src/fitlibrary/definedAction/DefinedActionsRepositoryStandard.java", "methodNumberAfterChange": 7, "commitBeforeChange": "20ec9bd9ffdef40eb6a72b0298d491ae8860b4a7", "diff": ["-\t\t\t\t\t+ map.get(definedAction).getAbsoluteFileName());\r", "+\t\t\t\t\t+ map.get(definedAction).getPageName());\r"], "commitAfterChange": "1246b979733b15a96e4e63b0a8e64ace5c8b7841", "signatureAfterChange": "\r \tprotected void definePlain(Row parametersRow, String wikiClassName,\r \t\t\tParameterSubstitution parameterSubstitution, Evaluator evaluator, String absoluteFileName)", "id": "842193c4c7ef188c9f93c574befd0cfd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void handleArgs(Fixture fixture, Row row)", "fileName": "src/fitlibrary/traverse/workflow/caller/CreateFromClassNameCaller.java", "methodNumberAfterChange": 5, "commitBeforeChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "diff": ["-\t\tfixture.getArgsForTable(TableFactory.table(row).parse());\r", "+\t\tfixture.getArgsForTable(TableFactory.table(row).asParse());\r"], "commitAfterChange": "8655c08986fab4cb3523c8934e8765739689b282", "signatureAfterChange": "\r \tprivate void handleArgs(Fixture fixture, Row row)", "id": "8b03673e8c6514764d0a48379b571af2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic void describeTo(Description description)", "fileName": "src/fitlibrary/matcher/TablesMatcher.java", "methodNumberAfterChange": 9, "commitBeforeChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "diff": ["-\t\tdescription.appendText(\"a table the same as \").appendValue(expected);\r", "+\t\tdescription.appendText(\"a table the same as \").appendValue(expectedTables);\r"], "commitAfterChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "signatureAfterChange": "\r \t@Override\r \tpublic void describeTo(Description description)", "id": "8b47492727c0ad25a6550874b9a4e763", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \t\tpublic MyFixture()", "fileName": "test/fitlibraryGeneric/TestDirectAccessToParser.java", "methodNumberAfterChange": 8, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\t\tsetRuntimeContext(new RuntimeContextImplementation());\r", "+\t\t\tsetRuntimeContext(new RuntimeContextContainer());\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t\tpublic MyFixture()", "id": "a3408ff2d0d21b79d21d92f3d5aed85d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 10, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["-\t\t\tString pageName = parameterSubstitution.getPageName();\r", "+\t\t\tString pageName = binder.getPageName();\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r \tprivate void colourReport(Tables body, Row row,\r \t\t\tTestResults testResults, TestResults subTestResults)", "id": "b5fb38f89b4202e3bd300f5b12bf1535", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic MultiParameterSubstitution lookupMulti(String name)", "fileName": "src/fitlibrary/definedAction/DefinedActionsRepositoryStandard.java", "methodNumberAfterChange": 5, "commitBeforeChange": "b30e56d0effcc85cd5ffa49ca148e7059d6f5934", "diff": ["-\tpublic MultiParameterSubstitution lookupMulti(String name) {\r", "+\tpublic MultiParameterBinder lookupMulti(String name) {\r"], "commitAfterChange": "cd20838066679088607bacd4884b58979b698e68", "signatureAfterChange": "\r \tpublic MultiParameterBinder lookupMulti(String name)", "id": "c3133d921613a9d0c3b9d97496c88520", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \tpublic ParallelTestRunner(ParallelTestRepository repository, TestEngine testEngine,\r \t\t\tString outputPath, boolean showPasses, String suiteName) throws IOException", "fileName": "src/fitlibrary/batch/testRun/ParallelTestRunner.java", "methodNumberAfterChange": 0, "commitBeforeChange": "7bc373fdff836c5fe5554dd7cca83ec4c7ddbc73", "diff": ["-\t\tthis(repository,testEngine,new ParallelFolderTestResultRepository(new FolderTestResultRepository(outputPath,suiteName,System.err,showPasses),\r", "+\t\tthis(repository,testEngine,new ParallelFolderTestResultRepository(new FolderTestResultRepository(outputPath,suiteName,System.out,showPasses),\r"], "commitAfterChange": "a1ec4135443e6b5658923cb34156b47b7ffd658c", "signatureAfterChange": "\r \t\r \tpublic ParallelTestRunner(ParallelTestRepository repository, TestEngine testEngine,\r \t\t\tString outputPath, boolean showPasses, String suiteName) throws IOException", "id": "d58348e4d8011abb72c7914116ceec6c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate Object callFindStringMethod(String text) throws Exception", "fileName": "src/fitlibraryGeneric/object/GenericFinder.java", "methodNumberAfterChange": 2, "commitBeforeChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "diff": ["+\t}\r", "-        throw new FitLibraryException(findExceptionMessage);\r", "+        throw new FitLibraryExceptionInHtml(findExceptionMessage);\r"], "commitAfterChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "signatureAfterChange": "\r \tprivate Object callFindStringMethod(String text) throws Exception", "id": "dcd2d3270227b9f8e083c54ceea477c1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprotected void defineCamel(Row parametersRow, String wikiClassName,\r \t\t\tParameterSubstitution parameterSubstitution, Evaluator evaluator, String absoluteFileName)", "fileName": "src/fitlibrary/definedAction/DefinedActionsRepositoryStandard.java", "methodNumberAfterChange": 8, "commitBeforeChange": "20ec9bd9ffdef40eb6a72b0298d491ae8860b4a7", "diff": ["-\t\t\t\t\t+ map.get(definedAction).getAbsoluteFileName());\r", "+\t\t\t\t\t+ map.get(definedAction).getPageName());\r"], "commitAfterChange": "1246b979733b15a96e4e63b0a8e64ace5c8b7841", "signatureAfterChange": "\r \tprotected void defineCamel(Row parametersRow, String wikiClassName,\r \t\t\tParameterSubstitution parameterSubstitution, Evaluator evaluator, String absoluteFileName)", "id": "ee1d1d1c4d66a9d1d503d0d906787437", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic TableListener(FixtureListener listener)", "fileName": "src/fitlibrary/runResults/TableListener.java", "methodNumberAfterChange": 2, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-\tpublic TableListener(FixtureListener listener) {\r", "+\tpublic TableListener(ReportListener listener) {\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic TableListener(ReportListener listener)", "id": "ee9ab5646dc68f09eb4b13d69f5e525d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tprotected Object parse(Cell cell, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/table/TableParser.java", "methodNumberAfterChange": 2, "commitBeforeChange": "1f73cbb5de4c1093ac1830526b85ef0e41bcdeb6", "diff": ["-        Parse parse = cell.getEmbeddedTable().parse();\r", "+        Parse parse = cell.getEmbeddedTable().asParse();\r"], "commitAfterChange": "8655c08986fab4cb3523c8934e8765739689b282", "signatureAfterChange": "\r \t@Override\r \tprotected Object parse(Cell cell, TestResults testResults) throws Exception", "id": "fac12fb1b119d634e69db501fc52e767", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "277e395dd7515adc2252f946e30d9cd8", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}