{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r \tprivate void verifyNoScopeChangeWith(final Object result)", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 13, "commitBeforeChange": "3dcd3b89a93a94255040ce519f06a01a05e62807", "diff": ["-\t\texpectTwoRowsInOneTableAndOneInAnother();\r", "-\t\t\texactly(2).of(flowEvaluator).interpretRow(row1,testResults);\r", "+\t\t\toneOf(flowEvaluator).interpretRow(row0,testResults);\r", "-\t\t\texactly(2).of(flowEvaluator).interpretRow(row2,testResults);\r", "+\t\t\toneOf(flowEvaluator).interpretRow(row1,testResults);\r", "+\t\t\t  will(returnValue(GenericTypedObject.NULL));\r", "+\t\t\toneOf(flowEvaluator).interpretRow(tables.at(1).at(0),testResults);\r", "+\t\t\t  will(returnValue(new GenericTypedObject(result)));\r", "+\t\t\toneOf(flowEvaluator).interpretRow(tables.at(1).at(1),testResults);\r", "-\t\t\texactly(2).of(tableListener).tableFinished(table1);\r", "+\t\t\toneOf(tableListener).tableFinished(table0);\r", "+\t\t\toneOf(tableListener).tableFinished(tables.at(1));\r"], "commitAfterChange": "84c141233c25d93b724ff299ad66f0e4b13ed95b", "signatureAfterChange": "\r \tprivate void verifyNoScopeChangeWith(final Object result)", "id": "1a7a7c7ba2e1ed2a8ebea51f74f3bbdb", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \t@Before\r \tpublic void createDoFlow()", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 0, "commitBeforeChange": "3dcd3b89a93a94255040ce519f06a01a05e62807", "diff": ["-\t\t\texactly(2).of(runtime).setCurrentTable(table1);\r", "+\t\t\toneOf(runtime).setCurrentTable(table0);\r", "-\t\t\texactly(2).of(runtime).setCurrentRow(row1);\r", "-\t\t\texactly(2).of(runtime).setCurrentRow(row2);\r", "+\t\t\toneOf(runtime).setCurrentRow(row0);\r", "+\t\t\toneOf(runtime).setCurrentRow(row1);\r", "-\t\t\texactly(2).of(runtime).addAccumulatedFoldingText(table1);\r", "+\t\t\toneOf(runtime).addAccumulatedFoldingText(table0);\r", "+\r", "+\t\t\toneOf(runtime).setCurrentTable(tables.at(1));\r", "+\t\t\toneOf(runtime).setCurrentRow(tables.at(1).at(0));\r", "+\t\t\toneOf(runtime).setCurrentRow(tables.at(1).at(1));\r", "+\t\t\toneOf(runtime).addAccumulatedFoldingText(tables.at(1));\r", "+\r", "+\t\t\tallowing(table0).isPlainTextTable(); will(returnValue(false));\r", "+\t\t\tallowing(tables.at(1)).isPlainTextTable(); will(returnValue(false));\r"], "commitAfterChange": "84c141233c25d93b724ff299ad66f0e4b13ed95b", "signatureAfterChange": "\r \t\r \t@Before\r \tpublic void createDoFlow()", "id": "3c89623a6f33e73b6659c116934ad5e6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "25ef920b5030e50f021deb4dcc7f8870", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}