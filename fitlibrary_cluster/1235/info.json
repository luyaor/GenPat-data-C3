{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object run(IRow row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 3, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t\t\tObject oldThisValue = doTraverse.getDynamicVariable(\"this\");\r", "+\t\t\tObject oldThisValue = runtime.getDynamicVariable(\"this\");\r", "-\t\t\t\tdoTraverse.setDynamicVariable(\"this\", actualArgs.get(0));\r", "-\t\t\tObject result = processDefinedAction(parameterSubstitution.substitute(actualArgs,doTraverse),row,testResults);\r", "-\t\t\tdoTraverse.setDynamicVariable(\"this\", oldThisValue);\r", "+\t\t\t\truntime.setDynamicVariable(\"this\", actualArgs.get(0));\r", "+\t\t\tprocessDefinedAction(parameterSubstitution.substitute(actualArgs),row,testResults);\r", "+\t\t\truntime.setDynamicVariable(\"this\", oldThisValue);\r", "-\t\tif (!doTraverse.toExpandDefinedActions() && CallManager.readyToShow() && !testResults.isAbandoned())\r", "+\t\tif (!runtime.toExpandDefinedActions() && CallManager.readyToShow() && !testResults.isAbandoned())\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \t@Override\r \tpublic Object run(IRow row, TestResults testResults)", "id": "6112d5d33e888c42e097e7313667f4dc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic TypedObject run(IRow row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 3, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic TypedObject run(IRow row, TestResults testResults) {\r", "-\t\tCallManager.startCall(parameterSubstitution);\r", "+\tpublic TypedObject run(Row row, TestResults testResults) {\r", "+\t\tDefinedActionCallManager definedActionCallManager = doTraverse.getRuntimeContext().getDefinedActionCallManager();\r", "+\t\tdefinedActionCallManager.startCall(parameterSubstitution);\r", "-\t\t\tCallManager.endCall(parameterSubstitution);\r", "+\t\t\tdefinedActionCallManager.endCall(parameterSubstitution);\r", "-\t\tif (!runtime.toExpandDefinedActions() && CallManager.readyToShow() && !testResults.isAbandoned())\r", "-\t\t\trow.addCell(new Cell(new Tables(CallManager.getShowsTable())));\r", "+\t\tif (!runtime.toExpandDefinedActions() && definedActionCallManager.readyToShow() && !runtime.isAbandoned(testResults))\r", "+\t\t\trow.addCell(new CellOnParse(new TablesOnParse(definedActionCallManager.getShowsTable())));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults)", "id": "8e2bcce910d62a05342518cd26f36839", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "7388a96cc54f037ed9d0e15517fcd263", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}