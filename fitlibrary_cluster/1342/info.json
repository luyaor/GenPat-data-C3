{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 23, "signatureBeforeChange": "\r \tpublic Option<CalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator)", "fileName": "src/fitlibraryGeneric/typed/GenericTypedObject.java", "methodNumberAfterChange": 23, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic Option<CalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator) {\r", "+\tpublic Option<ICalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator) {\r", "-\t\t\treturn new Some<CalledMethodTarget>(methodTargetFactory.createCalledMethodTarget(methodClosureOption.get(), evaluator));\r", "+\t\t\treturn new Some<ICalledMethodTarget>(methodTargetFactory.createCalledMethodTarget(methodClosureOption.get(), evaluator));\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic Option<ICalledMethodTarget> new_findSpecificMethod(String name, int argCount, Evaluator evaluator)", "id": "7f6a4da93af2f28cb8734bfedef3bd89", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate static CalledMethodTarget findMethodTarget(Row row, Evaluator evaluator, boolean embedded)", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tprivate static CalledMethodTarget findMethodTarget(Row row, Evaluator evaluator, boolean embedded) {\r", "+\tprivate static ICalledMethodTarget findMethodTarget(Row row, Evaluator evaluator, boolean embedded) {\r", "-\t\tCalledMethodTarget findMethod = PlugBoard.lookupTarget.findMethod(methodName, arguments, \"Type\", evaluator);\r", "+\t\tICalledMethodTarget findMethod = PlugBoard.lookupTarget.findMethod(methodName, arguments, \"Type\", evaluator);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate static ICalledMethodTarget findMethodTarget(Row row, Evaluator evaluator, boolean embedded)", "id": "98c4ee418e201d0f350138f3e5a7fcb2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate void optionalfunctions()", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\t\tresetMethod = new Some<CalledMethodTarget>(PlugBoard.lookupTarget.findTheMethodMapped(\"reset\", 0, this));\r", "+\t\t\tresetMethod = new Some<ICalledMethodTarget>(PlugBoard.lookupTarget.findTheMethodMapped(\"reset\", 0, this));\r", "-\t\t\texecuteMethod = new Some<CalledMethodTarget>(PlugBoard.lookupTarget.findTheMethodMapped(\"execute\", 0, this));\r", "+\t\t\texecuteMethod = new Some<ICalledMethodTarget>(PlugBoard.lookupTarget.findTheMethodMapped(\"execute\", 0, this));\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate void optionalfunctions()", "id": "9ff616c78cf316bed6ea68468db20595", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4dec661e008479777cdb73b1f11d0ef1", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}