{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic SpecialCaller(IRow row, Evaluator evaluator, LookupMethodTarget lookupTarget)", "fileName": "src/fitlibrary/traverse/workflow/caller/SpecialCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "44a0e3700bd1d17cff7e5d246ad3da64c81df532", "diff": ["-\t\tif (specialMethod != null && Option.class.isAssignableFrom(specialMethod.getReturnType())) {\r", "+\t\tif (specialMethod != null && TwoStageSpecial.class.isAssignableFrom(specialMethod.getReturnType())) {\r", "-\t\t\t\tOption<LazySpecial> lazyOption = (Option<LazySpecial>) invokeSpecialMethod(row,new TestResults());\r", "-\t\t\t\tif (lazyOption.isSome())\r", "-\t\t\t\t\tlazySpecial = lazyOption.get();\r", "-\t\t\t\telse\r", "-\t\t\t\t\tspecialMethod = null;\r", "+\t\t\t\tlazySpecial = (TwoStageSpecial) specialMethod.invoke(new Object[]{row});\r"], "commitAfterChange": "9069de478dc17e7793f2685307ecb6fa153f06e7", "signatureAfterChange": "\r \r \tpublic SpecialCaller(IRow row, Evaluator evaluator, LookupMethodTarget lookupTarget)", "id": "674d8235e485e631e513b4084ca1dfac", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic SpecialCaller(Row row, DoTraverseInterpreter switchSetUp)", "fileName": "src/fitlibrary/traverse/workflow/caller/SpecialCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "1a9b02fce576bf8c0ae1342055a0c5082b525445", "diff": ["+\t\tif (specialMethod != null && LazySpecial.class.isAssignableFrom(specialMethod.getReturnType())) {\r", "+\t\t\ttry {\r", "+\t\t\t\tOption<LazySpecial> lazyOption = (Option<LazySpecial>) run(row,new TestResults());\r", "+\t\t\t\tif (lazyOption.isSome())\r", "+\t\t\t\t\tlazySpecial = lazyOption.get();\r", "+\t\t\t\telse\r", "+\t\t\t\t\tspecialMethod = null;\r", "+\t\t\t} catch (Exception e) {\r", "+\t\t\t\tspecialMethod = null;\r", "+\t\t\t}\r", "+\t\t}\r"], "commitAfterChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "signatureAfterChange": "\r \r \tpublic SpecialCaller(Row row, DoTraverseInterpreter switchSetUp)", "id": "e12f3a80800b195ac2311df7834cfb78", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "8cc5cb7f5942be1e87e0334c432b6985", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}