{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \t@Test\r \tpublic void reportsFailWithParseExceptionInIgnoredException() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestNot.java", "methodNumberAfterChange": 8, "commitBeforeChange": "9d277f354a9817ba2a558b5341fccc0bc0fe3de2", "diff": ["+\t}\r", "+\t@Test\r", "+\tpublic void reportsErrorWithShowExceptionInIgnoredExceptionWhenErrorOnException() throws Exception {\r", "+\t\tfinal FitLibraryShowException show = new FitLibraryShowException(new Show(\"\"));\r", "+\t\tcontext.checking(new NotExpectations() {{\r", "+\t\t\tone(target).invokeForSpecial(subRow,testResults,false,firstCell);\r", "+\t\t\t  will(throwException(new IgnoredException(show)));\r", "+\t\t\tone(initialRow).error(testResults,show);\r", "+\t\t}});\r", "+\t\tTwoStageSpecial lazySpecial = special.not(initialRow,NotSyle.ERROR_ON_EXCEPION);\r", "+\t\tlazySpecial.run(testResults);\r", "+\t}\r", "-\tpublic void reportsFailWithParseExceptionInIgnoredException() throws Exception {\r", "-\t\tfinal BadNumberException embeddedException = new BadNumberException();\r", "-\t\tcontext.checking(new NotExpectations() {{\r", "-\t\t\tone(target).invokeForSpecial(subRow,testResults,false,firstCell);\r", "-\t\t\t  will(throwException(new IgnoredException(embeddedException)));\r", "-\t\t\tone(initialRow).error(testResults,embeddedException);\r", "-\t\t}});\r", "-\t\tTwoStageSpecial lazySpecial = special.not(initialRow,NotSyle.ERROR_ON_EXCEPION);\r", "-\t\tlazySpecial.run(testResults);\r", "-\t}\r"], "commitAfterChange": "5c75a22ff92df58ac27695ae19554e2bc4760240", "signatureAfterChange": "\r \t@Test\r \tpublic void reportsErrorWithShowExceptionInIgnoredExceptionWhenErrorOnException() throws Exception", "id": "c19ae3e0a036a160d1c006b43a7407ad", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate int cellCount(Tables actualTables)", "fileName": "src/fitlibrary/spec/SpecifyFixture2.java", "methodNumberAfterChange": 4, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\tprivate int cellCount(Tables actualTables) {\r", "+\tprivate int cellCount(Tables tables) {\r", "-\t\tfor (Table table: actualTables)\r", "+\t\tfor (Table table: tables)\r", "-\t\t\t\tcount += row.size();\r", "+\t\t\t\tfor (Cell cell: row) {\r", "+\t\t\t\t\tcount++;\r", "+\t\t\t\t\tcount += cellCount(cell);\r", "+\t\t\t\t}\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \tprivate int cellCount(Tables tables)", "id": "dded2645a18b90fbf8b6e24b1bd1b326", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "a8929ca2a3a789c9495f56e49ea03dfd", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}