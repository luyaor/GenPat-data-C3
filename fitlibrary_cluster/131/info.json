{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     protected Object parseTable(Table embeddedTable, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/DelegatingParser.java", "methodNumberAfterChange": 3, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tsetUp.interpretInnerTableWithInScope(embeddedTable,evaluator,testResults);\r", "+\t\tsetUp.interpretInnerTableWithInScope(embeddedTable,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r     protected Object parseTable(Table embeddedTable, TestResults testResults) throws Exception", "id": "04a5776740371a75b0d2d9c2a8cc334a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected boolean matchesTable(Table table, Object result, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectParser.java", "methodNumberAfterChange": 5, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse.doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected boolean matchesTable(Table table, Object result, TestResults testResults)", "id": "04f0bac02b9fabb0afb33e2b20a86161", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprotected boolean tableMatches(Table table, Map<Object,Object> map, TestResults testResults)", "fileName": "src/fitlibrary/parser/collection/MapParser.java", "methodNumberAfterChange": 7, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse.doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected boolean tableMatches(Table table, Map<Object,Object> map, TestResults testResults)", "id": "0b94ffdfedd975ac4a8307044dee9ab9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private Object parseTable(Table embeddedTable, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/parser/lookup/PropertyEditorBasedParser.java", "methodNumberAfterChange": 4, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tsetUp.interpretInnerTableWithInScope(embeddedTable,evaluator,testResults);\r", "+\t\tsetUp.interpretInnerTableWithInScope(embeddedTable,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r     private Object parseTable(Table embeddedTable, TestResults testResults) throws Exception", "id": "150157f6f97232ab46b34482ece49b57", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate boolean matchesTable(Table table, Object result, TestResults testResults)", "fileName": "src/fitlibrary/parser/lookup/PropertyEditorBasedParser.java", "methodNumberAfterChange": 7, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse.doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprivate boolean matchesTable(Table table, Object result, TestResults testResults)", "id": "33e5ffd15a1652eebd0dd0a54cf3e295", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected boolean matchesTable(Table table, Object result, TestResults testResults)", "fileName": "src/fitlibrary/parser/DelegatingParser.java", "methodNumberAfterChange": 5, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse.doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected boolean matchesTable(Table table, Object result, TestResults testResults)", "id": "52692d70404b4e786d6fecdd077a827e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic NonGenericFinder(Typed typed, Evaluator evaluator)", "fileName": "src/fitlibrary/object/NonGenericFinder.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tList<Class<?>> potentialClasses = PlugBoard.lookupTarget.possibleClasses(evaluator);\r", "+\t\tList<Class<?>> potentialClasses = PlugBoard.lookupTarget.possibleClasses(evaluator.getScope());\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \r \tpublic NonGenericFinder(Typed typed, Evaluator evaluator)", "id": "5f38f5ec5b1305f65c8f0da9f32f4b0e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic GenericFinder(GenericTyped typed, Evaluator evaluator)", "fileName": "src/fitlibraryGeneric/object/GenericFinder.java", "methodNumberAfterChange": 0, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tList<Class<?>> potentialClasses = PlugBoard.lookupTarget.possibleClasses(evaluator);\r", "+\t\tList<Class<?>> potentialClasses = PlugBoard.lookupTarget.possibleClasses(evaluator.getScope());\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \r \tpublic GenericFinder(GenericTyped typed, Evaluator evaluator)", "id": "6fdbafb0eb14012749a75db9124c5723", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic DoActionCaller(Row row, Evaluator evaluator, boolean sequencing, LookupMethodTarget lookupTarget)", "fileName": "src/fitlibrary/traverse/workflow/caller/DoActionCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "f7ebaaa92ebfbd1939c31f0af7fd44102b5c424c", "diff": ["-\t\tmethodName = row.methodNameForCamel(evaluator);\r", "+\t\tmethodName = row.methodNameForCamel(evaluator.getRuntimeContext());\r"], "commitAfterChange": "0209ef28b9bcd09ff4e0df509885b3e7b6079574", "signatureAfterChange": "\r \r \tpublic DoActionCaller(Row row, Evaluator evaluator, boolean sequencing, LookupMethodTarget lookupTarget)", "id": "7cb076e7e6fc32a3d9f12d8dd00ad7f6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected List<Object> parseTable(Table table, TestResults testResults)", "fileName": "src/fitlibrary/parser/collection/ListParser.java", "methodNumberAfterChange": 5, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tsetUp.interpretInnerTableWithInScope(table,evaluator,testResults);\r", "+\t\tsetUp.interpretInnerTableWithInScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected List<Object> parseTable(Table table, TestResults testResults)", "id": "854dd99e0cb616d978363ed87c3b5279", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprotected boolean tableMatches(Table table, Object result, TestResults testResults)", "fileName": "src/fitlibrary/parser/collection/ListParser.java", "methodNumberAfterChange": 8, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse.doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected boolean tableMatches(Table table, Object result, TestResults testResults)", "id": "87351fef0a1cef52f3fc8b7ad8bb5b73", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t@Override\r \tpublic ICalledMethodTarget findMethodByArity(Row row, int from, int upTo,\r \t\t\tboolean doStyle, Evaluator evaluator) throws Exception", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 4, "commitBeforeChange": "767f6cb947a46bb148e39b288dc9b54a99aee022", "diff": ["-\t\tActionSignature actionSignature = ActionSignature.create(row, from, upTo, doStyle, evaluator);\r", "+\t\tActionSignature actionSignature = ActionSignature.create(row, from, upTo, doStyle, evaluator.getRuntimeContext());\r"], "commitAfterChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "signatureAfterChange": "\r \t@Override\r \tpublic ICalledMethodTarget findMethodByArity(Row row, int from, int upTo,\r \t\t\tboolean doStyle, Evaluator evaluator) throws Exception", "id": "8aa1b614ea689f09ba48c81bfe57cf02", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r     protected boolean tableMatches(Table table, Map<Object,Object> map, TestResults testResults)", "fileName": "src/fitlibraryGeneric/map/MapParser2.java", "methodNumberAfterChange": 1, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-    \treturn mapCheck.doesInnerTablePass(table,evaluator,testResults);\r", "+    \treturn mapCheck.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \t@Override\r     protected boolean tableMatches(Table table, Map<Object,Object> map, TestResults testResults)", "id": "8dd3ba2e82433acb4e0caaf022232641", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     protected Object parseTable(Table embeddedTable, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/object/DomainObjectParser.java", "methodNumberAfterChange": 3, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tsetUp.interpretInnerTableWithInScope(embeddedTable,evaluator,testResults);\r", "+\t\tsetUp.interpretInnerTableWithInScope(embeddedTable,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r     protected Object parseTable(Table embeddedTable, TestResults testResults) throws Exception", "id": "b6c44b2bffd4614b6907ff305b8298a4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate Object parseNested(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/set/SetParser2.java", "methodNumberAfterChange": 2, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tnestingSetUp.interpretWithinScope(table,evaluator,testResults);\r", "+\t\tnestingSetUp.interpretWithinScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprivate Object parseNested(Table table, TestResults testResults)", "id": "bd255e9b1b1ae9d1b05b54474bfba3bd", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \tpublic boolean doEmbeddedTablePasses(Table table, Evaluator evaluator, TestResults testResults)", "fileName": "src/fitlibrary/FitLibraryFixture.java", "methodNumberAfterChange": 9, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse().doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse().doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tpublic boolean doEmbeddedTablePasses(Table table, Evaluator evaluator, TestResults testResults)", "id": "c40366389c6b0a4de0b7468d966fbae0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprotected boolean tableMatches(Table table, Object result, TestResults testResults)", "fileName": "src/fitlibrary/parser/collection/SetParser.java", "methodNumberAfterChange": 6, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\treturn traverse.doesInnerTablePass(table,evaluator,testResults);\r", "+\t\treturn traverse.doesInnerTablePass(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected boolean tableMatches(Table table, Object result, TestResults testResults)", "id": "c414fd21e784ac5b8288bf9e4aaf7088", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Override\r \tprotected List<Object> parseTable(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListParser2.java", "methodNumberAfterChange": 1, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-    \t\tsetUp.interpretWithinScope(table,evaluator,testResults);\r", "+    \t\tsetUp.interpretWithinScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r     @Override\r \tprotected List<Object> parseTable(Table table, TestResults testResults)", "id": "c42f8fc80f34169551c30d5f899a0fbc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Override\r     protected Object parseTable(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/set/SetParser2.java", "methodNumberAfterChange": 1, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-    \t\tsetUp.interpretWithinScope(table,evaluator,testResults);\r", "+    \t\tsetUp.interpretWithinScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r     @Override\r     protected Object parseTable(Table table, TestResults testResults)", "id": "cfcf0521152f66ac1bc06272269dba14", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprotected Object parseTable(Table table, TestResults testResults)", "fileName": "src/fitlibrary/parser/collection/SetParser.java", "methodNumberAfterChange": 4, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tsetUp.interpretInnerTableWithInScope(table,evaluator,testResults);\r", "+\t\tsetUp.interpretInnerTableWithInScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected Object parseTable(Table table, TestResults testResults)", "id": "d023990b5917704bf104fb977a5fdc84", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected Object parseTable(Table table, TestResults testResults)", "fileName": "src/fitlibrary/parser/collection/MapParser.java", "methodNumberAfterChange": 5, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tsetUp.interpretInnerTableWithInScope(table,evaluator,testResults);\r", "+\t\tsetUp.interpretInnerTableWithInScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprotected Object parseTable(Table table, TestResults testResults)", "id": "d7c42c1acbf4151510e84604fe478d2b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tprivate List<Object> actualArgs(Row row, List<Object> result)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 6, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\t\t\tresult.add(cell.text(runtime));\r", "+\t\t\t\tresult.add(cell.text(runtime.getResolver()));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate List<Object> actualArgs(Row row, List<Object> result)", "id": "ebfbda68c3bcb3cb817cafa8d08aa94c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate List<Object> parseNested(Table table, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListParser2.java", "methodNumberAfterChange": 2, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\t\tnestedSetUp.interpretWithinScope(table,evaluator,testResults);\r", "+\t\tnestedSetUp.interpretWithinScope(table,evaluator.getRuntimeContext(),testResults);\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tprivate List<Object> parseNested(Table table, TestResults testResults)", "id": "f87bbed2ef459210205f6f6ed3948965", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "29f89f9fc1be7b69dc36a907b78f925f", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}