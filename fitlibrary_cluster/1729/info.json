{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate void expectTwoRowsInFirstCellOfTable()", "fileName": "test/fitlibrary/flow/TestDoFlowWithNestedTables.java", "methodNumberAfterChange": 1, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["+\t\t\tallowing(cell1).hadError(); will(returnValue(false));\r", "+\t\t\tallowing(cell2).hadError(); will(returnValue(false));\r", "+\t\t\tallowing(innerCell).hadError(); will(returnValue(false));\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tprivate void expectTwoRowsInFirstCellOfTable()", "id": "1cfc984ca1c3f158f83097f419ccdf8c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void startingStorytest()", "fileName": "test/fitlibrary/flow/DoFlowDriver.java", "methodNumberAfterChange": 3, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["-\t\t\tallowing(tableListener).getTestResults();\r", "-\t\t\t   will(returnValue(testResults));\r", "-\t\t\tallowing(runtime).getResolver();\r", "-\t\t\t   will(returnValue(resolver));\r", "-\t\t\tallowing(runtimeCopy).getResolver();\r", "-\t\t\t   will(returnValue(resolver));\r", "+\t\t\tallowing(runtime).getConfiguration(); will(returnValue(config));\r", "+\t\t\tallowing(runtimeCopy).getConfiguration(); will(returnValue(config));\r", "+\t\t\tallowing(config).isAddTimings(); will(returnValue(false));\r", "+\t\t\tallowing(tableListener).getTestResults(); will(returnValue(testResults));\r", "+\t\t\tallowing(runtime).getResolver(); will(returnValue(resolver));\r", "+\t\t\tallowing(runtimeCopy).getResolver(); will(returnValue(resolver));\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tpublic void startingStorytest()", "id": "8a5e5f5d411d5180c23d84ef752e160c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Test(expected=MissingMethodException.class)\r \tpublic void methodOrGetterMissing() throws Exception", "fileName": "test/fitlibrary/closure/TestLookupMethodTarget.java", "methodNumberAfterChange": 1, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["+\t\t\tallowing(evaluator).getRuntimeContext();\r", "+\t\t\twill(returnValue(runtime));\r", "+\t\t\tallowing(runtime).extendedCamel(\"get unknown\");\r", "+\t\t\twill(returnValue(\"getUnknown\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"is unknown\");\r", "+\t\t\twill(returnValue(\"isUnknown\"));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \t@Test(expected=MissingMethodException.class)\r \tpublic void methodOrGetterMissing() throws Exception", "id": "ec990101a8b1e193f0d94d1f9b016cfc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Test\r \tpublic void methodOrGetterExistsOnSecondTypedObject() throws Exception", "fileName": "test/fitlibrary/closure/TestLookupMethodTarget.java", "methodNumberAfterChange": 3, "commitBeforeChange": "5327f82710d64a8962e506a103d189fd75c5dbba", "diff": ["+\t\t\tallowing(evaluator).getRuntimeContext();\r", "+\t\t\twill(returnValue(runtime));\r", "+\t\t\tallowing(runtime).extendedCamel(\"get m\");\r", "+\t\t\twill(returnValue(\"getM\"));\r", "+\t\t\tallowing(runtime).extendedCamel(\"is m\");\r", "+\t\t\twill(returnValue(\"isM\"));\r"], "commitAfterChange": "fc04ff1c33cda53766142c18fa0ccb6a92e65b68", "signatureAfterChange": "\r \t@Test\r \tpublic void methodOrGetterExistsOnSecondTypedObject() throws Exception", "id": "fee45ab71ce317547b3420ca5e8da3e6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "5673c38f000429cec2328e8a10fccb9e", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}