{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \r   protected void setupDecorator(String[] arguments) throws InvalidInputException", "fileName": "src/fit/decorator/performance/TimeRange.java", "methodNumberAfterChange": 3, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  protected void setupDecorator(String[] arguments) throws InvalidInputException {\r", "-    if (arguments.length != 2) {\r", "-      throw new InvalidInputException(\"Time range must be specified\");\r", "-    }\r", "-    minTime = Long.parseLong(arguments[0]);\r", "-    summary.put(MIN_TIME, new Long(minTime));\r", "-    maxTime = Long.parseLong(arguments[1]);\r", "-    summary.put(MAX_TIME, new Long(maxTime));\r", "-  }\r", "+\t@Override\r", "+\tprotected void setupDecorator(String[] arguments)\r", "+\t\t\tthrows InvalidInputException {\r", "+\t\tif (arguments.length != 2) {\r", "+\t\t\tthrow new InvalidInputException(\"Time range must be specified\");\r", "+\t\t}\r", "+\t\tminTime = Long.parseLong(arguments[0]);\r", "+\t\tsummary.put(MIN_TIME, new Long(minTime));\r", "+\t\tmaxTime = Long.parseLong(arguments[1]);\r", "+\t\tsummary.put(MAX_TIME, new Long(maxTime));\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tprotected void setupDecorator(String[] arguments)\r \t\t\tthrows InvalidInputException", "id": "20a04ada6e73c8c9c5333ad601b066b1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \r   protected void setupDecorator(String[] arguments) throws InvalidInputException", "fileName": "src/fit/decorator/CopyAndAppendLastRow.java", "methodNumberAfterChange": 1, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  protected void setupDecorator(String[] arguments) throws InvalidInputException {\r", "-    if (arguments.length != 1) {\r", "-      throw new InvalidInputException(\"Count for number of times to add the last row must be specified\");\r", "-    }\r", "-    numberOfTimes = Integer.parseInt(arguments[0]);\r", "-    summary.put(NUMBER_OF_TIMES, new Integer(numberOfTimes));\r", "-  }\r", "+\t@Override\r", "+\tprotected void setupDecorator(String[] arguments)\r", "+\t\t\tthrows InvalidInputException {\r", "+\t\tif (arguments.length != 1) {\r", "+\t\t\tthrow new InvalidInputException(\r", "+\t\t\t\t\t\"Count for number of times to add the last row must be specified\");\r", "+\t\t}\r", "+\t\tnumberOfTimes = Integer.parseInt(arguments[0]);\r", "+\t\tsummary.put(NUMBER_OF_TIMES, new Integer(numberOfTimes));\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tprotected void setupDecorator(String[] arguments)\r \t\t\tthrows InvalidInputException", "id": "2a5ba7243a6e5a357d9a3653ab027df5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \r   protected void setupDecorator(String[] arguments) throws InvalidInputException", "fileName": "src/fit/decorator/Loop.java", "methodNumberAfterChange": 1, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  protected void setupDecorator(String[] arguments) throws InvalidInputException {\r", "-    if (arguments.length != 1) {\r", "-      throw new InvalidInputException(\"Loop count must be specified\");\r", "-    }\r", "-    counter = Integer.parseInt(arguments[0]);\r", "-    summary.put(COUNT, new Long(counter));\r", "-  }\r", "+\t@Override\r", "+\tprotected void setupDecorator(String[] arguments)\r", "+\t\t\tthrows InvalidInputException {\r", "+\t\tif (arguments.length != 1) {\r", "+\t\t\tthrow new InvalidInputException(\"Loop count must be specified\");\r", "+\t\t}\r", "+\t\tcounter = Integer.parseInt(arguments[0]);\r", "+\t\tsummary.put(COUNT, new Long(counter));\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tprotected void setupDecorator(String[] arguments)\r \t\t\tthrows InvalidInputException", "id": "30edf5c267ddcf8d6335ecde7e43787d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \r   protected void setupDecorator(String[] arguments) throws InvalidInputException", "fileName": "src/fit/decorator/performance/MaxTime.java", "methodNumberAfterChange": 3, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  protected void setupDecorator(String[] arguments) throws InvalidInputException {\r", "-    if (arguments.length != 1) {\r", "-      throw new InvalidInputException(\"Max Time must be specified\");\r", "-    }\r", "-    maxTime = Long.parseLong(arguments[0]);\r", "-    summary.put(MAX_TIME, new Long(maxTime));\r", "-  }\r", "+\t@Override\r", "+\tprotected void setupDecorator(String[] arguments)\r", "+\t\t\tthrows InvalidInputException {\r", "+\t\tif (arguments.length != 1) {\r", "+\t\t\tthrow new InvalidInputException(\"Max Time must be specified\");\r", "+\t\t}\r", "+\t\tmaxTime = Long.parseLong(arguments[0]);\r", "+\t\tsummary.put(MAX_TIME, new Long(maxTime));\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tprotected void setupDecorator(String[] arguments)\r \t\t\tthrows InvalidInputException", "id": "7756d489361caa2db71c101397adac99", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r   protected void setupDecorator(String[] arguments) throws InvalidInputException", "fileName": "src/fit/decorator/IncrementColumnsValue.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  protected void setupDecorator(String[] arguments) throws InvalidInputException {\r", "-    if (arguments.length != 3) {\r", "-      throw new InvalidInputException(\"Column name, Data type and Delta Value must be specified\");\r", "-    }\r", "-    columnName = arguments[0];\r", "-    delta = new Delta(arguments[1], arguments[2]);\r", "-    summary.put(COLUMN_NAME, columnName);\r", "-    summary.put(DELTA, delta);\r", "-  }\r", "+\t@Override\r", "+\tprotected void setupDecorator(String[] arguments)\r", "+\t\t\tthrows InvalidInputException {\r", "+\t\tif (arguments.length != 3) {\r", "+\t\t\tthrow new InvalidInputException(\r", "+\t\t\t\t\t\"Column name, Data type and Delta Value must be specified\");\r", "+\t\t}\r", "+\t\tcolumnName = arguments[0];\r", "+\t\tdelta = new Delta(arguments[1], arguments[2]);\r", "+\t\tsummary.put(COLUMN_NAME, columnName);\r", "+\t\tsummary.put(DELTA, delta);\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tprotected void setupDecorator(String[] arguments)\r \t\t\tthrows InvalidInputException", "id": "9e0ab5cf7f08322f2c046a441b0bb1ef", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "0c1c88bc61fad7831f0dab00ac537698", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}