{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic TestResults doTables(Tables theTables)", "fileName": "src/fitlibrary/suite/BatchFitLibrary.java", "methodNumberAfterChange": 4, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic TestResults doTables(Tables theTables) {\r", "+\t}\r", "+\tpublic TestResults doTables(TablesOnParse theTables) {\r", "-\t\tif (RecordDynamicVariables.recording()) {\r", "+\t\tDynamicVariablesRecording recorder = doFlow.getRuntimeContext().getDynamicVariableRecorder();\r", "+\t\tif (recorder.isRecording()) {\r", "-\t\t\t\tRecordDynamicVariables.write();\r", "+\t\t\t\trecorder.write();\r", "-\t\t\t\tTable errorTable = new Table(new Row(\"note\",ParseNode.label(\"Problem on writing property file:\")+\"<hr/>\"+e.getMessage()));\r", "+\t\t\t\tTableOnParse errorTable = new TableOnParse(new RowOnParse(\"note\",ParseNode.label(\"Problem on writing property file:\")+\"<hr/>\"+e.getMessage()));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic TestResults doTables(TablesOnParse theTables)", "id": "19ba6dbaff029c765280d6b4089b7acc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Override\r \tpublic TestResults doTables(Tables theTables)", "fileName": "src/fitlibrary/suite/BatchFitLibrarySingleStep.java", "methodNumberAfterChange": 0, "commitBeforeChange": "efcea143a0228dd9127d70e2055bf8e765b4966f", "diff": ["-\t\tDynamicVariablesRecording recorder = doFlow.getRuntimeContext().getDynamicVariableRecorder();\r", "-\t\tif (recorder.isRecording()) {\r", "-\t\t\ttry {\r", "-\t\t\t\trecorder.write();\r", "-\t\t\t} catch (IOException e) {\r", "-\t\t\t\tTable errorTable = TableFactory.table(TableFactory.row(\"note\",TableElementOnParse.label(\"Problem on writing property file:\")+\"<hr/>\"+e.getMessage()));\r", "-\t\t\t\terrorTable.at(0).at(1).error(tableListener.getTestResults());\r", "-\t\t\t\ttheTables.add(errorTable);\r", "-\t\t\t}\r", "-\t\t}\r"], "commitAfterChange": "226f3fcb3be5f39fbf870257799dab7b5a1931ec", "signatureAfterChange": "\r \t@Override\r \tpublic TestResults doTables(Tables theTables)", "id": "b8eea53ef6a71cec20ae653b868d006a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "3c8ce0f2a8890a3a910ac74af34407ef", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}