{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tpublic void parseDefinitions(TablesOnParse tables, DefineActionBodyConsumer consumer)", "fileName": "src/fitlibrary/definedAction/DefinedActionBodyCollector.java", "methodNumberAfterChange": 0, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\tpublic void parseDefinitions(TablesOnParse tables, DefineActionBodyConsumer consumer) {\r", "-\t\tTablesOnParse innerTables = tables;\r", "+\tpublic void parseDefinitions(Tables tables, DefineActionBodyConsumer consumer) {\r", "+\t\tif (!(tables instanceof TablesOnParse))\r", "+\t\t\tthrow new InvalidParameterException(\"New code needed for other Tables implementation\");\r", "+\t\tTables innerTables = tables;\r", "-\t\t\tTableOnParse table = tables.table(i);\r", "-\t\t\tTableOnParse previousTable = tables.table(i-1);\r", "-\t\t\tif (isHR(table.parse.leader) || isHR(previousTable.parse.trailer)) {\r", "-\t\t\t\ttable.parse.leader = \"\";\r", "-\t\t\t\tpreviousTable.parse.more = null;\r", "-\t\t\t\tpreviousTable.parse.trailer = \"\";\r", "+\t\t\tTable table = tables.table(i);\r", "+\t\t\tTable previousTable = tables.table(i-1);\r", "+\t\t\tif (isHR(table.getLeader()) || isHR(previousTable.getTrailer())) {\r", "+\t\t\t\ttable.parse().leader = \"\";\r", "+\t\t\t\tpreviousTable.parse().more = null;\r", "+\t\t\t\tpreviousTable.parse().trailer = \"\";\r", "-\t\t\t\tpreviousTable.parse.more = table.parse;\r", "-\t\t\t\tinnerTables = new TablesOnParse(table);\r", "+\t\t\t\tpreviousTable.parse().more = table.parse();\r", "+\t\t\t\tinnerTables = TableFactory.tables(table);\r", "-\t}\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic void parseDefinitions(Tables tables, DefineActionBodyConsumer consumer)", "id": "6ebb683d505c39b0719bf81fa83537c8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprotected void parseDefinitions(Tables tables, String className, String absoluteFileName)", "fileName": "src/fitlibrary/definedAction/DefineActionsOnPageSlowly.java", "methodNumberAfterChange": 5, "commitBeforeChange": "20ec9bd9ffdef40eb6a72b0298d491ae8860b4a7", "diff": ["-\t// Warning: 'orrible code due to Parse!\r", "-\tprotected void parseDefinitions(Tables tables, String className, String absoluteFileName) {\r", "-\t\tTables innerTables = tables;\r", "-\t\tfor (int i = 0; i < tables.size(); i++) {\r", "-\t\t\tTable nextTable = tables.table(i);\r", "-\t\t\tif (i > 0 && isHR(nextTable.parse.leader)) {\r", "-\t\t\t\tTable lastTableInDefinition = tables.table(i-1);\r", "-\t\t\t\tParse more = lastTableInDefinition.parse.more;\r", "-\t\t\t\tString trailer = lastTableInDefinition.parse.trailer;\r", "-\t\t\t\tlastTableInDefinition.parse.more = null;\r", "-\t\t\t\tlastTableInDefinition.parse.trailer = \"\";\r", "-\t\t\t\tdefineAction(innerTables,className,absoluteFileName);\r", "-\t\t\t\tlastTableInDefinition.parse.more = more;\r", "-\t\t\t\tlastTableInDefinition.parse.trailer = trailer;\r", "-\t\t\t\tinnerTables = new Tables(nextTable);\r", "-\t\t\t} else if (isHR(nextTable.parse.trailer) || i == tables.size() - 1)\r", "-\t\t\t\tdefineAction(innerTables,className,absoluteFileName);\r", "-\t\t}\r", "+\tprotected void parseDefinitions(Tables tables, final String className, final String pathName) {\r", "+\t\tnew DefinedActionBodyCollector().parseDefinitions(tables, new DefineActionBodyConsumer() {\r", "+\t\t\t@Override\r", "+\t\t\tpublic void addAction(Tables innerTables) {\r", "+\t\t\t\tdefineAction(innerTables,className,pathName);\r", "+\t\t\t}\r", "+\t\t});\r"], "commitAfterChange": "1246b979733b15a96e4e63b0a8e64ace5c8b7841", "signatureAfterChange": "\r \tprotected void parseDefinitions(Tables tables, final String className, final String pathName)", "id": "f967851e4bfb4f761f1ef791a476028b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "5160a29c875de1fe0d17762112b05959", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}