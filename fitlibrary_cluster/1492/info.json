{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 80, "signatureBeforeChange": "\r \tpublic void runPlain(final Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 80, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic void runPlain(final Row row, TestResults testResults) throws Exception {\r", "-\t\tPlainText plainText = new PlainText(row,testResults,this);\r", "-\t\tplainText.analyse();\r", "-\t}\r", "+\t */\r", "+\tpublic void addNamed(RowOnParse row, TestResults testResults) throws Exception {\r", "+\t\tint less = 3;\r", "+\t\tif (row.size() < less)\r", "+\t\t\tthrow new MissingCellsException(\"addNamed\");\r", "+\t\tTypedObject typedObject = interpretRow(row.rowFrom(2), testResults);\r", "+\t\tgetRuntimeContext().getTableEvaluator().addNamedObject(row.text(1,this),typedObject,row,testResults);\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic void addNamed(RowOnParse row, TestResults testResults) throws Exception", "id": "308e07e5a76a42246f02eb9971e052b7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     private static String translateUnicode(String name, boolean keepUnicode)", "fileName": "src/fitlibrary/utility/ExtendedCamelCase.java", "methodNumberAfterChange": 5, "commitBeforeChange": "0209ef28b9bcd09ff4e0df509885b3e7b6079574", "diff": ["-\t    for (int i = 0; i < name.length(); i++) {\r", "-\t        char ch =  name.charAt(i); // This needs to be updated for jdk1.5 to codePointAt()\r", "-\t\t\tif (ch < 128 || (keepUnicode && Character.isJavaIdentifierPart(ch))) // valid without translation\r", "+        if (!name.isEmpty()) {\r", "+        \tchar ch =  name.charAt(0);\r", "+\t\t\tif (ch < 128 || (keepUnicode && Character.isJavaIdentifierStart(ch)))\r", "+\t\t\t    b.append(ch);\r", "+\t\t\telse\r", "+\t\t\t    b.append(\"u\"+Integer.toHexString(ch).toUpperCase());\r", "+        }\r", "+\t    for (int i = 1; i < name.length(); i++) {\r", "+\t        char ch =  name.charAt(i);\r", "+\t\t\tif (ch < 128 || (keepUnicode && Character.isJavaIdentifierPart(ch)))\r"], "commitAfterChange": "767f6cb947a46bb148e39b288dc9b54a99aee022", "signatureAfterChange": "\r     private static String translateUnicode(String name, boolean keepUnicode)", "id": "9ed2786cf3a9c9f415757d5a9cd75456", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void pushSut(Object sut)", "fileName": "src/fitlibrary/suite/DoFlow.java", "methodNumberAfterChange": 8, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\tprivate void pushSut(Object sut) {\r", "-\t\tObject currentSut = getSystemUnderTest();\r", "+\t}\r", "+\tprivate void pushSut(Object sut, Table table, TestResults testResults) {\r", "+\t\tObject currentSut = flowEvaluator.getSystemUnderTest();\r", "-\t\t\ttableStack.push(currentSut);\r", "-\t\tsetSystemUnderTest(sut);\r", "+\t\t\ttableStack.push(flowEvaluator.getTypedSystemUnderTest());\r", "+\t\tflowEvaluator.setSystemUnderTest(sut); // This will take account of any sut being type-wrapped.\r", "+\t\tcallSetUpSutChain(sut, table, testResults);\r", "+\t\tif (currentSut != null && currentSut == suiteFixture)\r", "+\t\t\tflowEvaluator.setRuntimeContext(suiteFixture.getCopyOfRuntimeContext());\r", "+\t}\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tprivate void pushSut(Object sut, Table table, TestResults testResults)", "id": "efa8386232e4cd1952823fb5a1ee6895", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "69e557c499f20b0362dbede8afecd2dc", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}