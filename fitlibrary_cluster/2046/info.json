{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void addAccumulatedFoldingText(Table table)", "fileName": "src/fitlibrary/runtime/FoldingTexts.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e707c5d4a5e9cc595d3860282fcc92e4bfdeb17a", "diff": ["-\t}\r", "+}\r", "-\t\tfor (String key: folds.keySet())\r", "-\t\t\taddAccumulatedFoldingText(key,table);\r", "+\t\tsynchronized(folds) {\r", "+\t\t\tfor (String key: folds.keySet())\r", "+\t\t\t\taddAccumulatedFoldingText(key,table);\r", "+\t\t}\r"], "commitAfterChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "signatureAfterChange": "\r \tpublic void addAccumulatedFoldingText(Table table)", "id": "21a3d707816071c43f3a082d61057c7e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 28, "signatureBeforeChange": "\r     public void addToTag(String annotation)", "fileName": "src/fitlibrary/table/ParseNode.java", "methodNumberAfterChange": 28, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-    public void addToTag(String annotation) {\r", "-    \tparse.addToTag(annotation);\r", "+\t}\r", "+\tpublic void addToTag(String annotation) {\r", "+    \tparse.addToTag(\" \"+annotation.trim());\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic void addToTag(String annotation)", "id": "470b4ec955489484c76ca091633964d1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \tpublic DoActionCaller(Row row, Evaluator evaluator, boolean sequencing, LookupMethodTarget lookupTarget)", "fileName": "src/fitlibrary/traverse/workflow/caller/DoActionCaller.java", "methodNumberAfterChange": 0, "commitBeforeChange": "f7ebaaa92ebfbd1939c31f0af7fd44102b5c424c", "diff": ["-\t\tmethodName = row.methodNameForCamel(evaluator);\r", "+\t\tmethodName = row.methodNameForCamel(evaluator.getRuntimeContext());\r"], "commitAfterChange": "0209ef28b9bcd09ff4e0df509885b3e7b6079574", "signatureAfterChange": "\r \r \tpublic DoActionCaller(Row row, Evaluator evaluator, boolean sequencing, LookupMethodTarget lookupTarget)", "id": "7cb076e7e6fc32a3d9f12d8dd00ad7f6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "e1d12c86454d39e6428452f31b8e0963", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}