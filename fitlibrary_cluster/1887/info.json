{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tprivate TestResult runTest(TestDescriptor test, OutputStream out, OutputStream err)", "fileName": "src/fitlibrary/batch/testRun/FitLibraryTestEngine.java", "methodNumberAfterChange": 3, "commitBeforeChange": "ff09ca9835c3cc1f1c695e3054cbedf6dd3026c1", "diff": ["-\t\t\treturn new SingleTestResult(new Counts(),test.getName(),\" not a Test\");\r", "+\t\t\treturn new SingleTestResult(new Counts(),test.getName(),\" not a Test\", 0);\r", "-\t\t\treturn new SingleTestResult(new Counts(),test.getName(),\" contains no tables\");\r", "+\t\t\treturn new SingleTestResult(new Counts(),test.getName(),\" contains no tables\", 0);\r", "+        \tlong time = System.currentTimeMillis();\r", "-\t\t\treturn new SingleTestResult(listener.getTestResults().getCounts(),test.getName(),report);\r", "+\t\t\treturn new SingleTestResult(listener.getTestResults().getCounts(),test.getName(),report, System.currentTimeMillis()-time);\r", "-\t\t\treturn new SingleTestResult(counts,test.getName(),e.toString());\r", "+\t\t\treturn new SingleTestResult(counts,test.getName(),e.toString(), 0);\r"], "commitAfterChange": "a9bc89dc0ff4802a9b2c54daf36831898adcbaa7", "signatureAfterChange": "\r \tprivate TestResult runTest(TestDescriptor test, OutputStream out, OutputStream err)", "id": "1bcd4716c68b14195a76e4564677fdbc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void runTable(Table table, TestResults testResults, ITableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlowOnTable.java", "methodNumberAfterChange": 2, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["+\t\t\t    \t\tlong startTime = System.currentTimeMillis();\r", "+\t\t\t    \t\taddTimeText(row,startTime);\r", "-\t\t\t    \t\t\thandleEvaluator(typedResult, (Evaluator) subject, rowNo, table, testResults);\r", "+\t\t\t    \t\t\trunEvaluator(typedResult, (Evaluator) subject, rowNo, table, testResults);\r", "-\t\t\t    \t\t\thandleEvaluator(typedResult, (Evaluator) subject, rowNo, table, testResults);\r", "+\t\t\t    \t\t\trunEvaluator(typedResult, (Evaluator) subject, rowNo, table, testResults);\r", "+\t\t\t    \t\t\tstartTime = System.currentTimeMillis();\r", "+\t\t\t    \t\t\taddTimeText(row,startTime);\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tprivate void runTable(Table table, TestResults testResults, ITableListener tableListener)", "id": "1ea2cbb8690a41ce72045c02420febe0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r     public void interpretInnerTableWithInScope(Table table, Evaluator evaluator, TestResults testResults)", "fileName": "src/fitlibrary/traverse/Traverse.java", "methodNumberAfterChange": 18, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-    public void interpretInnerTableWithInScope(Table table, Evaluator evaluator, TestResults testResults) {\r", "-    \tinterpretWithinScope(table.withDummyFirstRow(),evaluator,testResults);\r", "+\tpublic void interpretInnerTableWithInScope(Table table, Evaluator evaluator, TestResults testResults) {\r", "+\t\tRowOnList row = new RowOnList();\r", "+\t\ttable.add(0,row);\r", "+\t\trow.setIsHidden();\r", "+\t\ttry {\r", "+\t\t\tinterpretWithinScope(table,evaluator,testResults);\r", "+\t\t} finally {\r", "+\t\t\ttable.removeElementAt(0);\r", "+\t\t}\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic void interpretInnerTableWithInScope(Table table, Evaluator evaluator, TestResults testResults)", "id": "2147a299502b4616b171a090688e6598", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tpublic static Row row(String... cellTexts)", "fileName": "src/fitlibrary/table/TableFactory.java", "methodNumberAfterChange": 7, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\treturn new RowOnParse(cellTexts);\r", "+\t\tRow row = row();\r", "+\t\tfor (String cellText: cellTexts)\r", "+\t\t\trow.add(cell(cellText));\r", "+\t\treturn row;\r", "+\t}\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic static Row row(String... cellTexts)", "id": "b625940d9d1dbe58c86bb78b63bbef31", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tprivate void handleEvaluator(TypedObject typedResult, Evaluator subject,\r \t\t\tint rowNo, Table table, TestResults testResults)", "fileName": "src/fitlibrary/flow/DoFlowOnTable.java", "methodNumberAfterChange": 4, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["-\tprivate void handleEvaluator(TypedObject typedResult, Evaluator subject,\r", "+\t}\r", "+\tprivate void runEvaluator(TypedObject typedResult, Evaluator subject,\r", "+\t\tlong startTime = System.currentTimeMillis();\r", "+\t\taddTimeText(row,startTime);\r", "+\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tprivate void runEvaluator(TypedObject typedResult, Evaluator subject,\r \t\t\tint rowNo, Table table, TestResults testResults)", "id": "be0bd2ad4e0de60892f4eb3810df7efc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "18a11b2e982f8c2e7fe394d1f311874c", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}