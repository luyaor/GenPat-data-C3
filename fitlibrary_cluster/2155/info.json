{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name, int argCount, Evaluator evaluator, List<String> signatures)", "fileName": "src/fitlibrary/typed/NonGenericTypedObject.java", "methodNumberAfterChange": 2, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name, int argCount, Evaluator evaluator, List<String> signatures) {\r", "-\t\tCalledMethodTarget result = optionallyFindMethodOnTypedObject(name,argCount,evaluator, true);\r", "+\r", "+\tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name,\r", "+\t\t\tint argCount, Evaluator evaluator, List<String> signatures) throws Exception {\r", "+\t\tCalledMethodTarget result = optionallyFindMethodOnTypedObject(name,\r", "+\t\t\t\targCount, evaluator, true);\r", "-        if (argCount == 0)\r", "-\t\t\treturn findGetterOnTypedObject(name,evaluator);\r", "+\t\t\tif (argCount == 0)\r", "+\t\t\t\treturn findGetterOnTypedObject(name, evaluator);\r", "-\t\tthrow new MissingMethodException(signatures,PlugBoard.lookupTarget.identifiedClassesInSUTChain(subject));\r", "+\t\tthrow new MissingMethodException(signatures, PlugBoard.lookupTarget\r", "+\t\t\t\t.identifiedClassesInSUTChain(subject));\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \r \tpublic CalledMethodTarget findSpecificMethodOrPropertyGetter(String name,\r \t\t\tint argCount, Evaluator evaluator, List<String> signatures) throws Exception", "id": "756ff93d4c9484ebe5ec2811b29b091e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findTheMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 8, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\tpublic CalledMethodTarget findTheMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator) {\r", "+\tpublic CalledMethodTarget findTheMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception {\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic CalledMethodTarget findTheMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception", "id": "a8ca92c3f84c7157c7746a4af4b5cdb2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "13631558f03fd1b7164f22bfcb061221", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}