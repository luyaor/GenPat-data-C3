{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 11, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tprivate CalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType) {\r", "+\tprivate ICalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType) {\r", "-\t\t\tOption<CalledMethodTarget> targetOption = typedObject.new_findSpecificMethod(methodName,argCount,evaluator);\r", "+\t\t\tOption<ICalledMethodTarget> targetOption = typedObject.new_findSpecificMethod(methodName,argCount,evaluator);\r", "-\t\tthrow new MissingMethodException(signatures(\"public \"+returnType+\" \"+methodName+\"(\"+arg+\") { }\"),scopeOf(evaluator).possibleClasses());\r", "+\t\tthrow new MissingMethodException(signatures(\"public \"+returnType+\" \"+methodName+\"(\"+arg+\") { }\"),evaluator.getScope().possibleClasses());\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate ICalledMethodTarget findMethodOnSut(String methodName, int argCount, Evaluator evaluator, String arg, String returnType)", "id": "6b1356b9f123da7f530c1f4dfdb6a828", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, String propertyName, boolean considerContext)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 12, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic CalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, String propertyName, boolean considerContext) {\r", "-\t\tCalledMethodTarget target;\r", "+\tpublic ICalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, String propertyName, boolean considerContext) {\r", "+\t\tICalledMethodTarget target;\r", "-\t\t\tpossibleClasses = scopeOf(evaluator).possibleClasses();\r", "+\t\t\tpossibleClasses = evaluator.getScope().possibleClasses();\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic ICalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, String propertyName, boolean considerContext)", "id": "782bf977bdcc6d369ce7c3762babe622", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "b35584394bc172e459fab9df3afd7027", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}