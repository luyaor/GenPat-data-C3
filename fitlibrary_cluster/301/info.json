{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainCheckTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(i);\r", "-\t\t\tCell cell2 = row.cell(i+1);\r", "+\t\t\tCell cell = row.elementAt(i);\r", "+\t\t\tCell cell2 = row.elementAt(i+1);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "id": "1c9cc8f6bc22a51b76fbf1533680a350", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     protected void processRow(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/collection/map/MapSetUpTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            theMap.put(keyParser.parseTyped(row.cell(0),testResults).getSubject(),\r", "-            \t\tvalueParser.parseTyped(row.cell(1),testResults).getSubject());\r", "+            theMap.put(keyParser.parseTyped(row.elementAt(0),testResults).getSubject(),\r", "+            \t\tvalueParser.parseTyped(row.elementAt(1),testResults).getSubject());\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     protected void processRow(Row row, TestResults testResults) throws Exception", "id": "300410c64cce418f6409ae48b4b48dbc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r     protected final List<MethodTarget[]> bindGettersForAllActuals(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 12, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-                String propertyName = camelCase(row.cell(i).text(this));\r", "+                String propertyName = camelCase(row.elementAt(i).text(this));\r", "-\t\t\t\trow.cell(i).error(testResults,new NoSuchPropertyException(\r", "+\t\t\t\trow.elementAt(i).error(testResults,new NoSuchPropertyException(\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     protected final List<MethodTarget[]> bindGettersForAllActuals(Row row, TestResults testResults) throws Exception", "id": "456305ef89c33c6c4c2512dc87fc8b7b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     private Object getObject(Row row, int cellNo, Object initialObject, TestResults testResults)", "fileName": "src/fitlibraryGeneric/traverse/ReferenceTraverse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell nextCell = row.cell(cellNo+1);\r", "+            Cell nextCell = row.elementAt(cellNo+1);\r", "-        return getReferencedObject(row.cell(cellNo),object,last,testResults);\r", "+        return getReferencedObject(row.elementAt(cellNo),object,last,testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private Object getObject(Row row, int cellNo, Object initialObject, TestResults testResults)", "id": "4b795919eb26fbe7541579dd03d51f4d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainInjectionTraverse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-    \t\tCell cell = row.cell(i);\r", "+    \t\tCell cell = row.elementAt(i);\r", "-    \t\t\tCell nextCell = row.cell(i+1);\r", "+    \t\t\tCell nextCell = row.elementAt(i+1);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "5738f2ca151c598b0c9fc53f9ce70f09", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 25, "signatureBeforeChange": "\r \tpublic void color(Row row, boolean right, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/closure/CalledMethodTarget.java", "methodNumberAfterChange": 25, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.cell(0).passOrFail(testResults,right);\r", "+\t\t\trow.elementAt(0).passOrFail(testResults,right);\r", "-\t\t\t\trow.cell(i).passOrFail(testResults,right);\r", "+\t\t\t\trow.elementAt(i).passOrFail(testResults,right);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void color(Row row, boolean right, TestResults testResults) throws Exception", "id": "7c754a155b873a1693b5f1a9959f91e5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r     @Override\r \tpublic boolean equals(Object object)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 17, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            if (!cell(i).equals(other.cell(i)))\r", "+            if (!elementAt(i).equals(other.elementAt(i)))\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     @Override\r \tpublic boolean equals(Object object)", "id": "7d551b397d4cada7a2c850ef15b5ddd3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CombinationTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tObject arg1 = firstParser.parseTyped(row.cell(0),testResults).getSubject();\r", "+\t\t\tObject arg1 = firstParser.parseTyped(row.elementAt(0),testResults).getSubject();\r", "-                methodTarget.checkResult(row.cell(i),result,true,false, testResults);\r", "+                methodTarget.checkResult(row.elementAt(i),result,true,false, testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "88a26d9ca450e480d26878171fbf50f0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectSetUpTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(i);\r", "+\t\t\tCell cell = row.elementAt(i);\r", "-\t\t\t\t\t\tcallSetter(target, row.cell(i+1), testResults);\r", "+\t\t\t\t\t\tcallSetter(target, row.elementAt(i+1), testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void processRow(Row row, TestResults testResults)", "id": "95bf8f42f324bdee686f9e71c7d0b5b6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     private void bindFirstRowToTargetsForObject(Object element, Row firstRow, Row row, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 3, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-            Cell cell = firstRow.cell(i);\r", "+            Cell cell = firstRow.elementAt(i);\r", "-                    row.cell(i).error(testResults,e);\r", "+                    row.elementAt(i).error(testResults,e);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private void bindFirstRowToTargetsForObject(Object element, Row firstRow, Row row, TestResults testResults)", "id": "bbdc059fbfc95d0074a1a21d11d5806f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 77, "signatureBeforeChange": "\r \tpublic void expectedTestResults(RowOnParse row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 77, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.cell(0).pass(testResults);\r", "+\t\t\trow.elementAt(0).pass(testResults);\r", "-\t\t\trow.cell(0).fail(testResults,results,this);\r", "+\t\t\trow.elementAt(0).fail(testResults,results,this);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void expectedTestResults(RowOnParse row, TestResults testResults) throws Exception", "id": "c6a7be68e074eca7e8484e64a7ab54c6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     private boolean cellsMatch(Object[] actual, Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/GridTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-        \tif (!cellMatches(actual[i], row.cell(i),testResults))\r", "+        \tif (!cellMatches(actual[i], row.elementAt(i),testResults))\r", "-        \trow.cell(cellNo).fail(testResults);\r", "+        \trow.elementAt(cellNo).fail(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r     private boolean cellsMatch(Object[] actual, Row row, TestResults testResults)", "id": "dd8f5b5c73a33cdd3ba611859bf51948", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 38, "signatureBeforeChange": "\r \t@Override\r \tpublic void removeCell(int i)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 37, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tcell(i-1).parse().more = null;\r", "-\t\tcell(i-1).parse().trailer = \"\";\r", "+\t\telementAt(i-1).parse().more = null;\r", "+\t\telementAt(i-1).parse().trailer = \"\";\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Override\r \tpublic void removeCell(int i)", "id": "e1ba686aeee03fd354fd06fc411d01e6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "e1825dc42b89d7c6e05226323434e5e2", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}