{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \r   public void testCopyAndAppendLastRowShouldLeaveTheTableAsItIsIfTotalRowsAreLessThanThree() throws Exception", "fileName": "src/fit/decorator/util/TableTest.java", "methodNumberAfterChange": 18, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void testCopyAndAppendLastRowShouldLeaveTheTableAsItIsIfTotalRowsAreLessThanThree() throws Exception {\r", "-    String fitPage = \"<table><tr><td>eg.Division</td></tr>\"\r", "-      + \"<tr><td>numerator</td><td>denominator</td><td>quotient()</td></tr></table>\";\r", "-    table = new Table(fitPage);\r", "-    table.copyAndAppendLastRow(4);\r", "-    assertTable(fitPage);\r", "-  }\r", "+\tpublic void testCopyAndAppendLastRowShouldLeaveTheTableAsItIsIfTotalRowsAreLessThanThree()\r", "+\t\t\tthrows Exception {\r", "+\t\tString fitPage2 = \"<table><tr><td>eg.Division</td></tr>\"\r", "+\t\t\t\t+ \"<tr><td>numerator</td><td>denominator</td><td>quotient()</td></tr></table>\";\r", "+\t\ttable = new Table(fitPage2);\r", "+\t\ttable.copyAndAppendLastRow(4);\r", "+\t\tassertTable(fitPage2);\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tpublic void testCopyAndAppendLastRowShouldLeaveTheTableAsItIsIfTotalRowsAreLessThanThree()\r \t\t\tthrows Exception", "id": "8b8ac8c6728b4f387f0be0a7cfc53cca", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r   public void testRunShouldMeasureTimeTakenToExecuteDoTableMethodOnGivenFixture() throws Exception", "fileName": "src/fit/decorator/performance/MaxTimeTest.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void testRunShouldMeasureTimeTakenToExecuteDoTableMethodOnGivenFixture() throws Exception {\r", "-    String fitPage = \"<table><tr><td>eg.Division</td></tr>\"\r", "-      + \"<tr><td>numerator</td><td>denominator</td><td>quotient()</td></tr>\"\r", "-      + \"<tr><td>100</td><td>4</td><td>25</td></tr></table>\";\r", "-    MaxTime fixture = new MaxTime(stopWatch);\r", "-    fixture.run(new ColumnFixture(), new Parse(fitPage));\r", "-    assertEquals(ELAPSED, ((Long) fixture.summary.get(MaxTime.ACTUAL_TIME_TAKEN)).longValue());\r", "-  }\r", "+\tpublic void testRunShouldMeasureTimeTakenToExecuteDoTableMethodOnGivenFixture()\r", "+\t\t\tthrows Exception {\r", "+\t\tString fitPage = \"<table><tr><td>eg.Division</td></tr>\"\r", "+\t\t\t\t+ \"<tr><td>numerator</td><td>denominator</td><td>quotient()</td></tr>\"\r", "+\t\t\t\t+ \"<tr><td>100</td><td>4</td><td>25</td></tr></table>\";\r", "+\t\tMaxTime fixture = new MaxTime(stopWatch);\r", "+\t\tfixture.run(new ColumnFixture(), new Parse(fitPage));\r", "+\t\tassertEquals(ELAPSED,\r", "+\t\t\t\t((Long) fixture.summary\r", "+\t\t\t\t\t\t.get(TimeBasedFixtureDecorator.ACTUAL_TIME_TAKEN))\r", "+\t\t\t\t\t\t.longValue());\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tpublic void testRunShouldMeasureTimeTakenToExecuteDoTableMethodOnGivenFixture()\r \t\t\tthrows Exception", "id": "8f3a66bca876135012e0f8ef57e548ff", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "a4ef5ea3a2d45d573cad5fced6b76bd6", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}