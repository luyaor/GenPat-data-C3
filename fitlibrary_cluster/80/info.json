{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \r \tprivate void runStorytest(Tables tables)", "fileName": "src/fitlibrary/suite/BatchFitLibrarySingleStep.java", "methodNumberAfterChange": 0, "commitBeforeChange": "d12d5e6196b5f1255b0419761d9c3de85d1c3d44", "diff": ["-\r", "-\tprivate void runStorytest(Tables tables) {\r", "-\t\tfinal ArrayBlockingQueue<ReportAction> reportQueue = new ArrayBlockingQueue<ReportAction>(\r", "-\t\t\t\t5);\r", "-\t\tDoFlowActor actor = new DoFlowActor(doFlow, reportQueue,tableListener.getTestResults());\r", "-\t\tfor (int t = 0; t < tables.size(); t++)\r", "-\t\t\tactor.addTable(tables.at(t));\r", "-\t\tactor.endStorytest();\r", "-\r", "+\tpublic DoFlowActor actor(ArrayBlockingQueue<ReportAction> reportQueue, TestResults testResults) {\r", "+\t\tDoFlowActor actor = new DoFlowActor(doFlow,reportQueue,testResults);\r", "-\t\tSystem.out.println(\"Running actor3 version\");\r", "-\t\ttry {\r", "-\t\t\twhile (true) {\r", "-\t\t\t\tReportAction action;\r", "-\t\t\t\taction = reportQueue.take();\r", "-\t\t\t\taction.run(tableListener);\r", "-\t\t\t\tif (action.isDone()) {\r", "-\t\t\t\t\tSystem.out.println(\"Finished actor version\");\r", "-\t\t\t\t\treturn;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} catch (InterruptedException e) {\r", "-\t\t\tSystem.out.println(\"Finished actor version: \"+e);\r", "-\t\t}\r", "+\t\treturn actor;\r"], "commitAfterChange": "a3ae9d648f5a9065636c2668ccd32d098a4ba7e0", "signatureAfterChange": "\r \tpublic DoFlowActor actor(ArrayBlockingQueue<ReportAction> reportQueue, TestResults testResults)", "id": "225c981beb05c18237a7b23725c216f8", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic TestResults doTables(Tables tables)", "fileName": "src/fitlibrary/suite/FitLibraryServerSingleStep.java", "methodNumberAfterChange": 1, "commitBeforeChange": "a3ae9d648f5a9065636c2668ccd32d098a4ba7e0", "diff": ["-\tpublic TestResults doTables(Tables tables) {\r", "-\t\tfinal ArrayBlockingQueue<ReportAction> reportQueue = new ArrayBlockingQueue<ReportAction>(\r", "-\t\t\t\t5);\r", "-\t\tTableListener tableListener = new TableListener(reportListener);\r", "-\t\t\r", "-\t\tDoFlowActor actor = batching.actor(reportQueue,tableListener.getTestResults());\r", "+\tpublic TestResults doTables(Tables tables) {\r", "-\t\tactor.endStorytest();\r", "-\r", "-\t\t\r", "-\t\tSystem.out.println(\"Running actor10 version\");\r", "-\t\ttry {\r", "-\t\t\twhile (true) {\r", "-\t\t\t\tReportAction action;\r", "-\t\t\t\taction = reportQueue.take();\r", "-\t\t\t\taction.run(tableListener);\r", "-\t\t\t\tif (action.isDone()) {\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} catch (InterruptedException e) {\r", "-\t\t\t//\r", "-\t\t}\r", "-\t\tSystem.out.println(\"Finished actor version\");\r", "-\t\treturn tableListener.getTestResults();\r", "+\t\treturn suiteTestResults;\r"], "commitAfterChange": "518e99c9f7b6c64d5a5074be1c02393175904652", "signatureAfterChange": "\r \r \tpublic TestResults doTables(Tables tables)", "id": "a616ce0aa1f3b9e432c92f601f0273c9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "3c8058d0a5fe92de287669b0842fdc7e", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}