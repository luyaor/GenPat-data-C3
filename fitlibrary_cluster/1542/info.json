{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "   private void interpretFollowingTables(Parse tables)", "fileName": "src/fit/Fixture.java", "methodNumberAfterChange": 7, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  /* Added by Rick */", "-  private void interpretFollowingTables(Parse tables) {", "-    listener.tableFinished(tables);", "-    tables = tables.more;", "-    while (tables != null) {", "-      Parse heading = tables.at(0, 0, 0);", "+\t/* Added by Rick */", "+\tprivate void interpretFollowingTables(Parse tablesInitial) {", "+\t\tParse tables = tablesInitial;", "+\t\tlistener.tableFinished(tables);", "+\t\ttables = tables.more;", "+\t\twhile (tables != null) {", "+\t\t\tParse heading = tables.at(0, 0, 0);", "-      if (forcedAbort) ignore(heading);  //Semaphores: ignore on failed lock", "-      else if (heading != null) {", "-        try {", "-          Fixture fixture = getLinkedFixtureWithArgs(tables);", "-          fixture.doTable(tables);", "-        } catch (Throwable e) {", "-          exception(heading, e);", "-        }", "-      }", "-      listener.tableFinished(tables);", "-      tables = tables.more;", "-    }", "-  }", "+\t\t\tif (forcedAbort)", "+\t\t\t\tignore(heading); // Semaphores: ignore on failed lock", "+\t\t\telse if (heading != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\tFixture fixture = getLinkedFixtureWithArgs(tables);", "+\t\t\t\t\tfixture.doTable(tables);", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\texception(heading, e);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tlistener.tableFinished(tables);", "+\t\t\ttables = tables.more;", "+\t\t}", "+\t}"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": " \tprivate void interpretFollowingTables(Parse tablesInitial)", "id": "987c164133557d2e72568f714e1f5ab9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r   public void doTable(Parse table)", "fileName": "src/fit/decorator/FixtureDecorator.java", "methodNumberAfterChange": 0, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void doTable(Parse table) {\r", "-    if (table.parts.more == null) {\r", "-      return;\r", "-    }\r", "-    validateDecoratorInput(table);\r", "-    Parse actualHeader = table.parts.more.parts;\r", "-    String encapsulatedFixtureName = actualHeader.text();\r", "-    super.summary.put(ENCAPSULATED_FIXTURE_NAME, encapsulatedFixtureName);\r", "-    Fixture fixture = loadFixture(actualHeader, encapsulatedFixtureName);\r", "-    if (fixture != null) {\r", "-      execute(fixture, table);\r", "-      super.summary.putAll(fixture.summary);\r", "-      counts.tally(fixture.counts);\r", "-    }\r", "-  }\r", "+\t@Override\r", "+\tpublic void doTable(Parse table) {\r", "+\t\tif (table.parts.more == null) {\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\tvalidateDecoratorInput(table);\r", "+\t\tParse actualHeader = table.parts.more.parts;\r", "+\t\tString encapsulatedFixtureName = actualHeader.text();\r", "+\t\tsuper.summary.put(ENCAPSULATED_FIXTURE_NAME, encapsulatedFixtureName);\r", "+\t\tFixture fixture = loadFixture(actualHeader, encapsulatedFixtureName);\r", "+\t\tif (fixture != null) {\r", "+\t\t\texecute(fixture, table);\r", "+\t\t\tsuper.summary.putAll(fixture.summary);\r", "+\t\t\tcounts.tally(fixture.counts);\r", "+\t\t}\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tpublic void doTable(Parse table)", "id": "daa1c06e3af5d33cebde4ef3d3404117", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "9ebf291061e604872a761454d931d36c", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}