{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void runStorytest(Tables tables, TableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 1, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic void runStorytest(Tables tables, TableListener tableListener) {\r", "+\tpublic void runStorytest(Tables tables, ITableListener tableListener) {\r", "+\t\tTestResults testResults = tableListener.getTestResults();\r", "+\t\t\tif (current == this && table.isPlainTextTable()) {\r", "+\t\t\t\tPlainTextAnalyser plainTextAnalyser = new PlainTextAnalyser(runtime,TemporaryPlugBoardForRuntime.definedActionsRepository());\r", "+\t\t\t\tplainTextAnalyser.analyseAndReplaceRowsIn(table, testResults);\r", "+\t\t\t}\r", "-\t\t\tcurrent.runTable(table, tableListener);\r", "-\t\t\tpopLocalSut(table,tableListener);\r", "+\t\t\tcurrent.runTable(table,tableListener);\r", "+\t\t\tif (t < tables.size() - 1)\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.row(0), testResults);\r", "+\t\t\telse\r", "+\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.row(0), testResults);\r", "+\t\t\truntime.addAccumulatedFoldingText(table);\r", "-\t\ttearDownFlowObject(tables, tableListener);\r", "-\t\t// Could return whether we hit a suite fixture...\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "id": "c66eb28ffe457f394f224a0f0ca5f8e1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 1, "commitBeforeChange": "fa4a5893982c4c7ff77fba66e14647e6fb29f452", "diff": ["-\t\t\tboolean plainTextFailed = false;\r", "-\t\t\tif (current == this && table.isPlainTextTable()) {\r", "-\t\t\t\tPlainTextAnalyser plainTextAnalyser = new PlainTextAnalyser(runtime,TemporaryPlugBoardForRuntime.definedActionsRepository());\r", "-\t\t\t\tTestResults testResults2 = TestResultsFactory.testResults();\r", "-\t\t\t\tplainTextAnalyser.analyseAndReplaceRowsIn(table, testResults2);\r", "-\t\t\t\tplainTextFailed = testResults2.problems();\r", "-\t\t\t\ttestResults.add(testResults2);\r", "-\t\t\t}\r", "-\t\t\tif (domainCheck != null)\r", "-\t\t\t\thandleDomainPhases(table);\r", "-\t\t\tif (!plainTextFailed)\r", "-\t\t\t\tcurrent.runTable(table,testResults);\r", "-\t\t\tif (t < tables.size() - 1) {\r", "-\t\t\t\ttearDown(scopeStack.poppedAtEndOfTable(), table.at(0), testResults);\r", "-\t\t\t\tlogger.trace(\"Finished table\");\r", "-\t\t\t} else {\r", "-\t\t\t\ttearDown(scopeStack.poppedAtEndOfStorytest(), table.at(0), testResults);\r", "-\t\t\t\tlogger.trace(\"Finished table and storytest\");\r", "-\t\t\t}\r", "-\t\t\truntime.addAccumulatedFoldingText(table);\r", "+\t\t\trunSingleTable(testResults, table);\r", "+\t\t\tif (t < tables.size() - 1)\r", "+\t\t\t\tfinishTable(table, testResults);\r", "+\t\t\telse\r", "+\t\t\t\tfinishLastTable(table, testResults);\r", "+\t\t\taddAccumulatedFoldingText(table);\r", "+\t\tlogger.trace(\"Finished storytest\");\r", "+\t}\r"], "commitAfterChange": "5024b668ff9944890338ffa045341039c3567f63", "signatureAfterChange": "\r \tpublic void runStorytest(Tables tables, ITableListener tableListener)", "id": "dbbd2f3e6e47d83eddd29fac06fe9b4a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "c9f620467f62ef6b2262992f6326db37", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}