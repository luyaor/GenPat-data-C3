{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 79, "signatureBeforeChange": "\r \tpublic void optionally(RowOnParse row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 79, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t    Object result = callMethodInRow(row,testResults, true,row.cell(0));\r", "+\t\t    Object result = callMethodInRow(row,testResults, true,row.elementAt(0));\r", "-\t\t\trow.cell(0).error(testResults,e);\r", "+\t\t\trow.elementAt(0).error(testResults,e);\r", "-\t\trow.cell(0).pass(testResults);\r", "+\t\trow.elementAt(0).pass(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void optionally(RowOnParse row, TestResults testResults) throws Exception", "id": "127c784d7db3897a353d4ea62c915850", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectCheckTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\tCell cell = row.cell(i);\r", "+\t\t\tCell cell = row.elementAt(i);\r", "-\t\t\t\tcheckClass(testResults, cell, row.cell(i+1));\r", "+\t\t\t\tcheckClass(testResults, cell, row.elementAt(i+1));\r", "-\t\t\t\t\ttarget.invokeAndCheck(TableFactory.row(),row.cell(i+1),testResults,false);\r", "+\t\t\t\t\ttarget.invokeAndCheck(TableFactory.row(),row.elementAt(i+1),testResults,false);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "id": "1a37020ed1c1297a7a19000b4cfe9087", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": " \t@Test \tpublic void evenUpRowsChangesLastCellColumnSpanToMatchOtherRowsColumnSpan() throws Exception", "fileName": "test/fitlibrary/table/TestTable.java", "methodNumberAfterChange": 1, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tassertThat(row1.cell(0).getColumnSpan(),is(4));", "-\t\tassertThat(row2.cell(0).getColumnSpan(),is(1));", "-\t\tassertThat(row2.cell(1).getColumnSpan(),is(3));", "+\t\tassertThat(row1.elementAt(0).getColumnSpan(),is(4));", "+\t\tassertThat(row2.elementAt(0).getColumnSpan(),is(1));", "+\t\tassertThat(row2.elementAt(1).getColumnSpan(),is(3));"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": " \t@Test \tpublic void evenUpRowsChangesLastCellColumnSpanToMatchOtherRowsColumnSpan() throws Exception", "id": "24374b1c423d3635ef0d73fc1fd61f3d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic static Row mapOddBalls(Row row, Evaluator evaluator)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 5, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\trow.cell(0).setText(\"add named\");\r", "-\t\t\trow.cell(1).setText(row.text(3,evaluator));\r", "-\t\t\trow.cell(2).setText(className);\r", "+\t\t\trow.elementAt(0).setText(\"add named\");\r", "+\t\t\trow.elementAt(1).setText(row.text(3,evaluator));\r", "+\t\t\trow.elementAt(2).setText(className);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tpublic static Row mapOddBalls(Row row, Evaluator evaluator)", "id": "5f7aa3f53b7c2872f36088576b14f938", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate Row analyse(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/PlainTextAnalyser.java", "methodNumberAfterChange": 2, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\tString textCall = row.cell(0).fullText();\r", "+\t\tString textCall = row.elementAt(0).fullText();\r", "-\t\t\trow.cell(0).error(testResults, \"Unknown action\");\r", "+\t\t\trow.elementAt(0).error(testResults, \"Unknown action\");\r", "-\t\t\trow.cell(0).error(testResults, \"Ambiguous action (see details in logs after table)\");\r", "+\t\t\trow.elementAt(0).error(testResults, \"Ambiguous action (see details in logs after table)\");\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate Row analyse(Row row, TestResults testResults)", "id": "78057e1fbc46dca71928b7351908e1e1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tprivate void colourReport(Row row, TestResults testResults, TestResults subTestResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-\t\t\t\t\trow.cell(i).error(testResults, new FitLibraryException(\"\"));\r", "+\t\t\t\t\trow.elementAt(i).error(testResults, new FitLibraryException(\"\"));\r", "-\t\t\t\t\trow.cell(i).fail(testResults);\r", "+\t\t\t\t\trow.elementAt(i).fail(testResults);\r", "-\t\t\t\t\trow.cell(i).pass(testResults);\r", "+\t\t\t\t\trow.elementAt(i).pass(testResults);\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \tprivate void colourReport(Row row, TestResults testResults, TestResults subTestResults)", "id": "9c729e28930f0445b12ae466e8c40a19", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "67cd16815bf6741ce0eddbd4298cccd1", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}