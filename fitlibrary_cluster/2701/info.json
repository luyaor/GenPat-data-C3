{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \tpublic void interpretWithinScope(Table table, Evaluator evaluator, TestResults testResults)", "fileName": "src/fitlibrary/traverse/Traverse.java", "methodNumberAfterChange": 18, "commitBeforeChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "diff": ["-\tpublic void interpretWithinScope(Table table, Evaluator evaluator, TestResults testResults) {\r", "-\t\tsetRuntimeContext(evaluator.getRuntimeContext());\r", "-\t\tIScope scope = scopeOf(evaluator);\r", "+\tpublic void interpretWithinScope(Table table, RuntimeContextInternal runtime, TestResults testResults) {\r", "+\t\tsetRuntimeContext(runtime);\r", "+\t\tIScope scope = runtime.getScope();\r"], "commitAfterChange": "e4ab562e1e827e062d1be5204027041002fec975", "signatureAfterChange": "\r \tpublic void interpretWithinScope(Table table, RuntimeContextInternal runtime, TestResults testResults)", "id": "39a484aa04be97299ff698ac3e7d3713", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t\r \tpublic static ActionSignature create(Row row, int from, int upTo,\r \t\t\tboolean doStyle, Evaluator evaluator)", "fileName": "src/fitlibrary/closure/ActionSignature.java", "methodNumberAfterChange": 4, "commitBeforeChange": "767f6cb947a46bb148e39b288dc9b54a99aee022", "diff": ["-\t\t\tboolean doStyle, Evaluator evaluator) {\r", "+\t\t\tboolean doStyle, RuntimeContextInternal runtime) {\r", "-\t\t\treturn new ActionSignature(row.text(from, evaluator), upTo-from-1,evaluator.getRuntimeContext());\r", "-\t\tStringBuilder name = new StringBuilder(row.text(from, evaluator));\r", "+\t\t\treturn new ActionSignature(row.text(from, runtime), upTo-from-1,runtime);\r", "+\t\tStringBuilder name = new StringBuilder(row.text(from, runtime));\r", "-\t\t\tname.append(\" \").append(row.text(i, evaluator));\r", "-\t\treturn new ActionSignature(name.toString(), (upTo - from) / 2,evaluator.getRuntimeContext());\r", "+\t\t\tname.append(\" \").append(row.text(i, runtime));\r", "+\t\treturn new ActionSignature(name.toString(), (upTo - from) / 2,runtime);\r"], "commitAfterChange": "1d44b64cbd6fe822c03990c564745b178a53b359", "signatureAfterChange": "\r \t\r \tpublic static ActionSignature create(Row row, int from, int upTo,\r \t\t\tboolean doStyle, RuntimeContextInternal runtime)", "id": "9d6495a3e9e74e5eee61bda49729196b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "e5b4ffc6b535b5974cfccd6ed85b96ef", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}