{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tpublic String differences(String actual, String expected)", "fileName": "src/fitlibrary/diff/StringDifferencingStandard.java", "methodNumberAfterChange": 1, "commitBeforeChange": "aa7e035202af44c59ac4b9611ab51754bfc767f1", "diff": ["-\t\tif (actual.length() < 5 || expected.length() < 5)\r", "+\t\tif (actual.length() < 6 || expected.length() < 6)\r", "-\t\tStringBuilder s = new StringBuilder();\r", "+\t\tStringBuilder s = new StringBuilder(\"<hr>\");\r", "-\t\tint sameButOneCount = 0;\r", "-\t\tint sameMax = 0;\r", "+\t\tint sameButTwoCount = 0;\r", "+\t\tint sameMaxLength = 0;\r", "-\t\t\t\t\tif (length == 1)\r", "-\t\t\t\t\t\tsameButOneCount++;\r", "-\t\t\t\t\tsameMax = Math.max(sameMax,length);\r", "+\t\t\t\t\tif (length <= 2)\r", "+\t\t\t\t\t\tsameButTwoCount++;\r", "+\t\t\t\t\tsameMaxLength = Math.max(sameMaxLength,length);\r", "-\t\tif (sameButOneCount * 10 > sameCount && sameMax < 3)\r", "-\t\t\treturn \"\";\r", "-\t\t\tresult = result.replace(\"  \",visibleSpace()+visibleSpace()); //.replaceAll(\"&nbsp\",\"<font color='blue'>&Delta;</font>\");\r", "-\t\treturn \"<hr>\" + result + TableElementOnParse.label(\"diff\");\r", "+\t\t\tresult = result.replace(\"  \",visibleSpace()+visibleSpace());\r", "+\t\telse if (sameButTwoCount * 10 > sameCount && sameMaxLength < 3)\r", "+\t\t\treturn \"\";\r", "+\t\treturn result + TableElementOnParse.label(\"diff\");\r"], "commitAfterChange": "0c95be0b15a91849d3e53045090b616f855d42ad", "signatureAfterChange": "\r \tpublic String differences(String actual, String expected)", "id": "667e3ed53dbf04fab2e4303aba5399c7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \r \tprivate static void run(String[] args) throws ParseException, IOException", "fileName": "src/fitlibrary/runner/FolderRunnerTest.java", "methodNumberAfterChange": 1, "commitBeforeChange": "c9a02fbef6bcaff0b0f1bdcd96e45453e110ead4", "diff": ["-\t\tReport report = new FolderRunner(args).run();\r", "+\t\tFolderRunner folderRunner = new FolderRunner(args);\r", "+\t\tfinal StringBuilder sbOut = new StringBuilder();\r", "+\t\tfinal StringBuilder sbErr = new StringBuilder();\r", "+\t\tfolderRunner.addTestListener(new StoryTestListener() {\r", "+\t\t\t@Override\r", "+\t\t\tpublic void testComplete(boolean failing, String pageCounts, String assertionCounts) {\r", "+\t\t\t\t//\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void suiteComplete() {\r", "+\t\t\t\t//\r", "+\t\t\t}\r", "+\t\t\t@Override\r", "+\t\t\tpublic void reportOutput(String name, String out, String output) {\r", "+\t\t\t\tif (output.isEmpty())\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\tif (out.equals(\"out\"))\r", "+\t\t\t\t\tsbOut.append(name+\": \"+\": \"+output); // sysout is temporarily redirected\r", "+\t\t\t\telse\r", "+\t\t\t\t\tsbErr.append(name+\": \"+\": \"+output); // syserr is temporarily redirected\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\tReport report = folderRunner.run();\r", "+        System.out.print(sbOut);\r", "+        System.err.print(sbErr);\r"], "commitAfterChange": "d5585b9bd9597ec67ca4eaebd1dd7d580af72cbc", "signatureAfterChange": "\r \r \tprivate static void run(String[] args) throws ParseException, IOException", "id": "dd1a4d5c1bbe820f0c4cf7fe895c862f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "76211e1026eef760fc64ca264e0d1140", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}