{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 3, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-\t\tTypedObject result = null;\r", "-\t\tfor (int rowNo = 1; rowNo < table.size(); rowNo++) {\r", "-\t\t\tRow row = table.at(rowNo);\r", "-\t\t\tif (getRuntimeContext().isAbandoned(testResults))\r", "-\t\t\t\trow.ignore(testResults);\r", "-\t\t\telse\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tresult = interpretRow(row,testResults,null);\r", "-\t\t\t\t\tif (result != null) {\r", "-\t\t\t\t\t\tObject subject = result.getSubject();\r", "-\t\t\t\t\t\tif (subject instanceof DoEvaluator) {\r", "-\t\t\t\t\t\t\tDoEvaluator doEvaluator = (DoEvaluator)subject;\r", "-\t\t\t\t\t\t\tdoEvaluator.setRuntimeContext(runtimeContext);\r", "-\t\t\t\t\t\t\tdoEvaluator.interpretInFlow(TableFactory.table(row),testResults);\r", "-\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t} else if (subject instanceof Evaluator) {\r", "-\t\t\t\t\t\t\tEvaluator evaluator = (Evaluator)subject;\r", "-\t\t\t\t\t\t\tevaluator.setRuntimeContext(runtimeContext);\r", "-\t\t\t\t\t\t\tinterpretEvaluator(evaluator,TableFactory.table(row),testResults);\r", "-\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t} else if (subject instanceof Fixture) {\r", "-\t\t\t\t\t\t\tgetFitHandler().doTable((Fixture) subject, TableFactory.table(row),testResults,this);\r", "-\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} catch (Exception ex) {\r", "-\t\t\t\t\trow.error(testResults,ex);\r", "-\t\t\t\t}\r", "-\t\t}\r", "-\t\tif (result == null)\r", "-\t\t\treturn null;\r", "-\t\treturn result.getSubject();\r", "-\t}\r", "+\t\t// Now handled by DoFlow\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "b4caa4d9f19dfc5106dda4a0c5f4cd8f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 3, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\t\tif (testResults.isAbandoned())\r", "+\t\t\tif (getRuntimeContext().isAbandoned(testResults))\r", "-\t\t\t\t\tif (result instanceof DoEvaluator) {\r", "-\t\t\t\t\t\tDoEvaluator doEvaluator = (DoEvaluator)result;\r", "-\t\t\t\t\t\tdoEvaluator.setRuntimeContext(runtimeContext);\r", "-\t\t\t\t\t\tdoEvaluator.interpretInFlow(new Table(row),testResults);\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t} else if (result instanceof Evaluator) {\r", "-\t\t\t\t\t\tEvaluator evaluator = (Evaluator)result;\r", "-\t\t\t\t\t\tevaluator.setRuntimeContext(runtimeContext);\r", "-\t\t\t\t\t\tinterpretEvaluator(evaluator,new Table(row),testResults);\r", "-\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t} else if (result instanceof Fixture) {\r", "-\t\t\t\t\t\tgetFitHandler().doTable(result, new Table(row),testResults,this);\r", "-\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tif (result != null) {\r", "+\t\t\t\t\t\tObject subject = result.getSubject();\r", "+\t\t\t\t\t\tif (subject instanceof DoEvaluator) {\r", "+\t\t\t\t\t\t\tDoEvaluator doEvaluator = (DoEvaluator)subject;\r", "+\t\t\t\t\t\t\tdoEvaluator.setRuntimeContext(runtimeContext);\r", "+\t\t\t\t\t\t\tdoEvaluator.interpretInFlow(new TableOnParse(row),testResults);\r", "+\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t} else if (subject instanceof Evaluator) {\r", "+\t\t\t\t\t\t\tEvaluator evaluator = (Evaluator)subject;\r", "+\t\t\t\t\t\t\tevaluator.setRuntimeContext(runtimeContext);\r", "+\t\t\t\t\t\t\tinterpretEvaluator(evaluator,new TableOnParse(row),testResults);\r", "+\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t} else if (subject instanceof Fixture) {\r", "+\t\t\t\t\t\t\tgetFitHandler().doTable(subject, new TableOnParse(row),testResults,this);\r", "+\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t}\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "e5019f7f56a3384859b3d08aee5be804", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "0c11ecefa23f3e9089abdeb89a51014b", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}