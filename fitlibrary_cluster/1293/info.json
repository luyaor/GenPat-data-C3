{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r     protected Option<TypedObject> trySequenceCall(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["+\t}\r", "+\tpublic DoTraverseInterpreter(Object sut, boolean sequencing) {\r", "+\t\tsuper(sut);\r", "+\t\tthis.sequencing = sequencing;\r", "+\t\tthis.dispatchRowInFlow = new DispatchRowInFlow(this, sequencing);\r", "-    }\r", "-    protected Option<TypedObject> trySequenceCall(Row row, TestResults testResults) throws Exception {\r", "-    \tif (sequencing)\r", "-    \t\treturn None.none();\r", "-    \tsequencing = true;\r", "-    \ttry {\r", "-    \t\treturn interpretSimpleRow(row, testResults, createDoCallers(row));\r", "-    \t} finally {\r", "-    \t\tsequencing = false;\r", "-    \t}\r", "-    }\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic DoTraverseInterpreter(Object sut, boolean sequencing)", "id": "8f0961ced15ac985cdeb9f3f7b319f84", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tprivate void pushSut(Object sut, Table table, TestResults testResults)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 12, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["+\tprivate void pushOnScope(TypedObject typedResult, Row row, TestResults testResults) {\r", "+\t\tscopeStack.push(typedResult);\r", "+\t\tcallSetUpSutChain(typedResult.getSubject(), row, testResults);\r", "-\tprivate void pushSut(Object sut, Table table, TestResults testResults) {\r", "-\t\tObject currentSut = flowEvaluator.getSystemUnderTest();\r", "-\t\tif (currentSut != null)\r", "-\t\t\ttableStack.push(flowEvaluator.getTypedSystemUnderTest());\r", "-\t\tflowEvaluator.setSystemUnderTest(sut); // This will take account of any sut being type-wrapped.\r", "-\t\tcallSetUpSutChain(sut, table, testResults);\r", "-\t\tif (currentSut != null && currentSut == suiteFixture)\r", "-\t\t\tflowEvaluator.setRuntimeContext(suiteFixture.getCopyOfRuntimeContext());\r", "-\t}\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \tprivate void pushOnScope(TypedObject typedResult, Row row, TestResults testResults)", "id": "cdf51145e72ef770a6f5ef3a01325b5f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "605884013b52cc168e232211f2305e66", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}