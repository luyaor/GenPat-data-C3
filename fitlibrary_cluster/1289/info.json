{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprotected void addTableToBetterShowDifferences(Parse table, Parse actual, Parse expected)", "fileName": "src/fitlibrary/spec/SpecifyFixture.java", "methodNumberAfterChange": 22, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t}\r", "-\tprotected void addTableToBetterShowDifferences(Parse table, Parse actual, Parse expected) {\r", "-\t\tParse end = table.last();\r", "-\t\tParse cells1 = new Parse(\"td\",\"fitlibrary.CommentFixture\",null,null);\r", "-\t\tParse cells2 = new Parse(\"td\",\"actual\",null,new Parse(\"td\",\"expected\",null,null));\r", "-\t\tParse cells3 = new Parse(\"td\",show(actual),null,new Parse(\"td\",show(expected),null,null));\r", "-\t\tParse rows = new Parse(\"tr\",\"\",cells1 ,new Parse(\"tr\",\"\",cells2 ,new Parse(\"tr\",\"\",cells3 ,null)));\r", "-\t\tend.more = new Parse(\"table\",\"\",rows ,null);\r", "-\t}\r", "+\t\t}\r", "+\t\tprivate String optionalEscapedRow(String actualText, String expectedText) {\r", "+\t\t\tString actualEscaped = escape(actualText);\r", "+\t\t\tString expectedEscaped = escape(expectedText);\r", "+\t\t\tif (actualEscaped.equals(actualText) && expectedEscaped.equals(expectedText))\r", "+\t\t\t\treturn \"\";\r", "+\t\t\treturn row(actualEscaped,expectedEscaped);\r", "+\t\t}\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t\tprivate String optionalEscapedRow(String actualText, String expectedText)", "id": "3ebb2e209e1170547a3f070a9837c5e6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \tprivate static boolean equalTags(Parse p1, Parse p2)", "fileName": "src/fitlibrary/spec/SpecifyFixture.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["+\r", "+\tprivate boolean equals(String actual, String expected) {\r", "+\t\tString canonicalActual = canonical(actual);\r", "+\t\tString canonicalExpected = canonical(expected);\r", "+\t\t\r", "+\t\tif (\"IGNORE\".equals(canonicalExpected))\r", "+\t\tint start = canonicalExpected.indexOf(stackTrace);\r", "+\t\tif (start >= 0)\r", "+\t\t\treturn canonicalActual.startsWith(canonicalExpected.substring(0,start+stackTrace.length()));\r", "+\t\tString fitLabel = \"<span class=\\\"fit_label\\\">\";\r", "+\t\tstart = canonicalExpected.indexOf(fitLabel);\r", "+\t\tif (start >= 0)\r", "+\t\t\treturn canonicalActual.startsWith(canonicalExpected.substring(0,start+fitLabel.length()));\r", "+\t\treturn canonicalActual.equals(canonicalExpected);\r", "+\t}\r", "-\t}\r", "-\tprivate static boolean equalTags(Parse p1, Parse p2) {\r", "-\t\treturn p1.tag.equals(p2.tag);\r", "-\t}\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \r \tprivate boolean equals(String actual, String expected)", "id": "5412cd02872bd60e83b1ccea1c1ac78c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "e2105621d9292703ec6238562d3b0d58", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}