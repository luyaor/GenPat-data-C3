{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tprivate void expectTwoRowsInFirstCellOfTable()", "fileName": "test/fitlibrary/flow/TestDoFlowWithNestedTables.java", "methodNumberAfterChange": 1, "commitBeforeChange": "681d5f08a03cb8efaa429831112a5d45fa950ef3", "diff": ["-\t\t\tallowing(cell1).hasEmbeddedTable(); will(returnValue(false));\r", "+\t\t\tallowing(cell1).hasEmbeddedTables(); will(returnValue(false));\r", "-\t\t\tallowing(cell2).hasEmbeddedTable(); will(returnValue(true));\r", "+\t\t\tallowing(cell2).hasEmbeddedTables(); will(returnValue(true));\r", "-\t\t\tallowing(innerCell).hasEmbeddedTable(); will(returnValue(false));\r", "+\t\t\tallowing(innerCell).hasEmbeddedTables(); will(returnValue(false));\r"], "commitAfterChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "signatureAfterChange": "\r \tprivate void expectTwoRowsInFirstCellOfTable()", "id": "0e6c8e53620215356e83eb8e2a42de63", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r \tprivate void startTable()", "fileName": "test/fitlibrary/flow/DoFlowOnTableDriver.java", "methodNumberAfterChange": 12, "commitBeforeChange": "3e49a68db9f888715cfae72403c05f9f5d45b868", "diff": ["-\t\t\tallowing(tableListener).getTestResults();\r", "-\t\t\t   will(returnValue(testResults));\r", "-\t\t\tallowing(runtime).getResolver();\r", "-\t\t\t   will(returnValue(resolver));\r", "+\t\t\tallowing(tableListener).getTestResults(); will(returnValue(testResults));\r", "+\t\t\tallowing(runtime).getResolver(); will(returnValue(resolver));\r", "+\t\t\tallowing(runtime).getConfiguration(); will(returnValue(config));\r", "+\t\t\tallowing(config).isAddTimings(); will(returnValue(false));\r"], "commitAfterChange": "e141a91176343498f8b104bfcec7615e7ba3e1f0", "signatureAfterChange": "\r \tprivate void startTable()", "id": "9726d0e479872625c35834a40ca4452a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t@Test\r \tpublic void validButLazy() throws Exception", "fileName": "test/fitlibrary/closure/TestSpecialCaller.java", "methodNumberAfterChange": 3, "commitBeforeChange": "44a0e3700bd1d17cff7e5d246ad3da64c81df532", "diff": ["-\t\t\tallowing(specialMethod).getReturnType();will(returnValue(Option.class));\r", "-\t\t\tone(specialMethod).invoke(with(any(Object[].class)));will(returnValue(option));\r", "-\t\t\tone(option).isSome();will(returnValue(true));\r", "-\t\t\tone(option).get();will(returnValue(lazySpecial));\r", "+\t\t\tallowing(specialMethod).getReturnType();will(returnValue(TwoStageSpecial.class));\r", "+\t\t\tone(specialMethod).invoke(with(any(Object[].class)));will(returnValue(lazySpecial));\r"], "commitAfterChange": "9069de478dc17e7793f2685307ecb6fa153f06e7", "signatureAfterChange": "\r \t@Test\r \tpublic void validButLazy() throws Exception", "id": "ea303343e2a85bf864c1ae020e07c394", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "f1f0444b2ba20eb69340ce19ada55ece", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL"]}