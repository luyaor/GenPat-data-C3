{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic EnsureExpectations() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestEnsure.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t\tpublic EnsureExpectations() throws Exception", "id": "05e452f28c90903ca8de10a034739b5e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/caller/DoActionCaller.java", "methodNumberAfterChange": 2, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tTypedObject typedResult = target.invokeTyped(row.rowFrom(1),testResults);\r", "+\t\t\tTypedObject typedResult = target.invokeTyped(row.elementsFrom(1),testResults);\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults) throws Exception", "id": "638309251c046b290b9be1f3f9d2a33b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 18, "signatureBeforeChange": "\r \tpublic ICalledMethodTarget findMethodFromRow(Row row, int from, int extrasCellsOnEnd) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 18, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\treturn findMethodByActionName(row.rowFrom(from), row.size() - from - extrasCellsOnEnd - 1);\r", "+\t\treturn findMethodByActionName(row.elementsFrom(from), row.size() - from - extrasCellsOnEnd - 1);\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \tpublic ICalledMethodTarget findMethodFromRow(Row row, int from, int extrasCellsOnEnd) throws Exception", "id": "678522578e83d3dd3e55889677b24571", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestSet.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(3);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(3);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "id": "6b44fcd8e9ea599fabc54c3e7dbe8730", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic NotExpectations() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestNot.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t\tpublic NotExpectations() throws Exception", "id": "7543f5ccda18e9c11c45cc060dae99dc", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 24, "signatureBeforeChange": "\r \tprotected Object callMethodInRow(Row row, TestResults testResults, boolean catchError, Cell operatorCell) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 24, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\treturn findMethodFromRow222(row,1, 2).invokeForSpecial(row.rowFrom(2),testResults,catchError,operatorCell);\r", "+\t\treturn findMethodFromRow222(row,1, 2).invokeForSpecial(row.elementsFrom(2),testResults,catchError,operatorCell);\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \tprotected Object callMethodInRow(Row row, TestResults testResults, boolean catchError, Cell operatorCell) throws Exception", "id": "844d78c39a84992196314166b0d3c5a6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestSetSymbolNamed.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(3);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(3);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t\tpublic SetExpectations(String eq) throws Exception", "id": "91aa5704dddf1c32ea222aa9accbaa52", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void worksOK() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestCheck.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t@Test\r \tpublic void worksOK() throws Exception", "id": "abb4a2eee718421de3d5ffbf07cf6bda", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsLogged() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestLog.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsLogged() throws Exception", "id": "b2bb752149d84ff71e350a21a64dd374", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowAfter.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "id": "d2bff787983d2963bcce4183b35c5c1e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShow.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShown() throws Exception", "id": "f0a59f438485c26a35c4f6de757854f1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t@Test\r \tpublic void textIsShownEscaped() throws Exception", "fileName": "test/fitlibrary/traverse/workflow/special/TestShowEscaped.java", "methodNumberAfterChange": 0, "commitBeforeChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "diff": ["-\t\t\tallowing(initialRow).rowFrom(2);will(returnValue(subRow));\r", "+\t\t\tallowing(initialRow).elementsFrom(2);will(returnValue(subRow));\r"], "commitAfterChange": "6995fe6e345fefee56693ac626ad939f91fb7522", "signatureAfterChange": "\r \t@Test\r \tpublic void textIsShownEscaped() throws Exception", "id": "fc8553ab72777dfd5f4d57583be7cea3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "adb87e0f2d421060635383e87bacb00b", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}