{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r     @Override\r \tpublic Cell at(int i)", "fileName": "src/fitlibrary/table/RowOnList.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-    \t\tthrow new MissingCellsException(\"\");\r", "+    \t\tthrow new MissingCellsException(\"at \"+i);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     @Override\r \tpublic Cell at(int i)", "id": "8590c59b93a9b1000f98a53ce804ce3c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \tprivate String possibleSeq(Row row)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 16, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tString result = ExtendedCamelCase.camel(row.text(0, this))+\"(\";\r", "+\t\tString result = \"public Type \"+ExtendedCamelCase.camel(row.text(0, this))+\"(\";\r", "-\t\t\tresult += \"p1\";\r", "+\t\t\tresult += \"Type p1\";\r", "-\t\t\tresult += \", p\"+i;\r", "-\t\treturn result+\")\";\r", "+\t\t\tresult += \", Type p\"+i;\r", "+\t\treturn result+\") {}\";\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tprivate String possibleSeq(Row row)", "id": "b39a3ce3a8b8b457561a736922f0d59f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "4f47fcc4fe091ab172654838602b3bed", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}