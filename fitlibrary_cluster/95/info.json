{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \r   public void testSetupDecoratorMustThrowInvalidInputExceptionIfMaxTimeIsNotSpecified() throws ParseException", "fileName": "src/fit/decorator/performance/MaxTimeTest.java", "methodNumberAfterChange": 1, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void testSetupDecoratorMustThrowInvalidInputExceptionIfMaxTimeIsNotSpecified() throws ParseException {\r", "-    try {\r", "-      decorator.setupDecorator(new String[0]);\r", "-      fail(\"Should blow up \");\r", "-    } catch (InvalidInputException e) {\r", "-      // expected\r", "-    }\r", "-  }\r", "+\tpublic void testSetupDecoratorMustThrowInvalidInputExceptionIfMaxTimeIsNotSpecified() {\r", "+\t\ttry {\r", "+\t\t\tdecorator.setupDecorator(new String[0]);\r", "+\t\t\tfail(\"Should blow up \");\r", "+\t\t} catch (InvalidInputException e) {\r", "+\t\t\t// expected\r", "+\t\t}\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tpublic void testSetupDecoratorMustThrowInvalidInputExceptionIfMaxTimeIsNotSpecified()", "id": "1165d96af10fb4ef5a608097dc96feb1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \r   public void testSetupDecoratorMustThrowInvalidInputExceptionIfTimeRangeIsNotSpecified() throws ParseException", "fileName": "src/fit/decorator/performance/TimeRangeTest.java", "methodNumberAfterChange": 2, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public void testSetupDecoratorMustThrowInvalidInputExceptionIfTimeRangeIsNotSpecified() throws ParseException {\r", "-    try {\r", "-      decorator.setupDecorator(new String[]\r", "-        {\"10\"});\r", "-      fail(\"Should blow up \");\r", "-    } catch (InvalidInputException e) {\r", "-      // expected\r", "-    }\r", "-  }\r", "+\tpublic void testSetupDecoratorMustThrowInvalidInputExceptionIfTimeRangeIsNotSpecified() {\r", "+\t\ttry {\r", "+\t\t\tdecorator.setupDecorator(new String[] { \"10\" });\r", "+\t\t\tfail(\"Should blow up \");\r", "+\t\t} catch (InvalidInputException e) {\r", "+\t\t\t// expected\r", "+\t\t}\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \tpublic void testSetupDecoratorMustThrowInvalidInputExceptionIfTimeRangeIsNotSpecified()", "id": "d05098d24be6f0e5c97e7e22830220ae", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "a38eba00e1dc412618f4781420497c42", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}