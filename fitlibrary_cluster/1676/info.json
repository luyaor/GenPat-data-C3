{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \r \t@Before\r \tpublic void createDoFlow()", "fileName": "test/fitlibrary/flow/TestDoFlowWithNestedTables.java", "methodNumberAfterChange": 0, "commitBeforeChange": "441d5688763570bf9a676799b77c2d483b043423", "diff": ["+\t\t\toneOf(scopeStack).setAbandon(false);\r", "-\t\t\tallowing(flowEvaluator).getRuntimeContext(); will(returnValue(runtime));\r", "+\t\t\toneOf(runtime).setStopOnError(false);\r", "+\t\t\toneOf(runtime).reset();\r", "+\t\t\toneOf(runtime).setCurrentTable(table1);\r", "+\t\t\toneOf(runtime).pushTestResults(with(any(TestResults.class)));\r", "+\t\t\tallowing(runtime).isAbandoned(with(any(TestResults.class))); will(returnValue(false));\r", "+\t\t\toneOf(runtime).setCurrentRow(row1);\r", "+\t\t\toneOf(runtime).setCurrentRow(innerRow1);\r", "+\t\t\toneOf(runtime).popTestResults();\r", "+\t\t\toneOf(runtime).addAccumulatedFoldingText(table1);\r", "-\t\tdoFlow = new DoFlow(flowEvaluator,scopeStack,runtime);\r", "+\t\tdoFlow = new DoFlow(flowEvaluator,scopeStack,runtime,setUpTearDown);\r"], "commitAfterChange": "70b9358616a949679d07e6fedd212fb1df2467e5", "signatureAfterChange": "\r \r \t@Before\r \tpublic void createDoFlow()", "id": "1b15ce64b86cef790d36a812a5f49aa9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \t@Before\r \tpublic void createDoFlow()", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 0, "commitBeforeChange": "441d5688763570bf9a676799b77c2d483b043423", "diff": ["-//\t\t\toneOf(flowEvaluator).setRuntimeContext(with(aNonNull(RuntimeContextInternal.class)));\r", "+\t\t\toneOf(scopeStack).setAbandon(false);\r", "+\t\t\toneOf(runtime).setStopOnError(false);\r", "+\t\t\toneOf(runtime).reset();\r", "+\t\t\texactly(2).of(runtime).setCurrentTable(table1);\r", "+\t\t\texactly(2).of(runtime).pushTestResults(with(any(TestResults.class)));\r", "+\t\t\tallowing(runtime).isAbandoned(with(any(TestResults.class))); will(returnValue(false));\r", "+\t\t\texactly(2).of(runtime).setCurrentRow(row1);\r", "+\t\t\texactly(2).of(runtime).setCurrentRow(row2);\r", "+\t\t\texactly(2).of(runtime).popTestResults();\r", "+\t\t\texactly(2).of(runtime).addAccumulatedFoldingText(table1);\r", "-\t\t\tallowing(flowEvaluator).getRuntimeContext(); will(returnValue(runtime));\r", "-\t\tdoFlow = new DoFlow(flowEvaluator,scopeStack,runtime);\r", "+\t\tdoFlow = new DoFlow(flowEvaluator,scopeStack,runtime,setUpTearDown);\r"], "commitAfterChange": "70b9358616a949679d07e6fedd212fb1df2467e5", "signatureAfterChange": "\r \t\r \t@Before\r \tpublic void createDoFlow()", "id": "68d10561079655cbe58d64369f6d9554", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "55029bfffdc94de8a5c415e974e45da4", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"]}