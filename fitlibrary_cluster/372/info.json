{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 45, "signatureBeforeChange": "\r \tpublic void is(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 45, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void is(TestResults testResults, final Row row) throws Exception", "id": "001ed89be4ba7d4faf83f7fa448dab85", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tCalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator);", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator);\r", "-\tCalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator);\r", "+\tICalledMethodTarget findMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator);\r", "+\tICalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator);", "id": "0466a54d44d9fd44b13d46fa8ec0fc6c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \tCalledMethodTarget findSpecialMethod(Evaluator evaluator, String name);", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 0, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\tCalledMethodTarget findSpecialMethod(Evaluator evaluator, String name);\r", "+\tICalledMethodTarget findSpecialMethod(Evaluator evaluator, String name);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tICalledMethodTarget findSpecialMethod(Evaluator evaluator, String name);", "id": "1f7dd9d6e4f76ab0b63c76af87d4bc61", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 71, "signatureBeforeChange": "\r \tpublic void showEscaped(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 71, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,1, 2);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,1, 2);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void showEscaped(Row row, TestResults testResults) throws Exception", "id": "2494c510a57ee4d5e467fbe32fc09ede", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tCalledMethodTarget findMethodOrGetter(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception;", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception;\r", "-\tCalledMethodTarget findMethodOrGetter(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception;\r", "+\tICalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception;\r", "+\tICalledMethodTarget findMethodOrGetter(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception;\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findMethodOrGetter(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception;", "id": "2c1eed948fbcd1e2ba1d52aee243c925", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 69, "signatureBeforeChange": "\r \tpublic void show(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 69, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,1, 2);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,1, 2);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void show(Row row, TestResults testResults) throws Exception", "id": "31a69078ebac3c517d9598ba99fb62c2", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 65, "signatureBeforeChange": "\r \tpublic void becomes(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 65, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void becomes(TestResults testResults, final Row row) throws Exception", "id": "32535686a8cc602173ce0a18d56c3503", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 47, "signatureBeforeChange": "\r \tpublic void isNot(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 47, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void isNot(TestResults testResults, final Row row) throws Exception", "id": "331326014a7f08baf5d01ad7b5eb97ae", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r \tCalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, \r \t\t\tString propertyName, boolean considerContext);", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 8, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType);\r", "-\tCalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, \r", "+\tICalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType);\r", "+\tICalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, \r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findGetterUpContextsToo(TypedObject typedObject, Evaluator evaluator, \r \t\t\tString propertyName, boolean considerContext);", "id": "3bf1236157f03b50d67fe57a6a35ce49", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tprivate void header(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\t\t\t\tCalledMethodTarget target = PlugBoard.lookupTarget.findGetterOnSut(fn,this,\"Rule\");\r", "+\t\t\t\t\tICalledMethodTarget target = PlugBoard.lookupTarget.findGetterOnSut(fn,this,\"Rule\");\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate void header(Table table, TestResults testResults)", "id": "44d139738b57f229c4fb24f63bc89380", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 56, "signatureBeforeChange": "\r \t@SuppressWarnings(\"unchecked\")\r \tprivate void comparison(TestResults testResults, final Row row,\r \t\t\tComparison compare)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 56, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \t@SuppressWarnings(\"unchecked\")\r \tprivate void comparison(TestResults testResults, final Row row,\r \t\t\tComparison compare)", "id": "4e77a0f3bfbfbb5cd0de8cccff129462", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 70, "signatureBeforeChange": "\r \tpublic void showAfter(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 70, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,1, 2);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,1, 2);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void showAfter(Row row, TestResults testResults) throws Exception", "id": "4fef1d0e3004758a9090959473e0ee95", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectCheckTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\t\t\t\tCalledMethodTarget target = PlugBoard.lookupTarget.findGetterOnSut(cell.text(this),this,\"Type\");\r", "+\t\t\t\t\tICalledMethodTarget target = PlugBoard.lookupTarget.findGetterOnSut(cell.text(this),this,\"Type\");\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "id": "52bc10e2d151336fbcd8e4ada7bc89a3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 62, "signatureBeforeChange": "\r \tpublic void contains(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 62, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void contains(TestResults testResults, final Row row) throws Exception", "id": "5572e32d9057eb6f905ba783d3c168a3", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 14, "signatureBeforeChange": "\r \t\r \tOption<CalledMethodTarget> new_findSpecificMethod(String methodName,\r \t\t\tint argCount, Evaluator evaluator);", "fileName": "src/fitlibrary/typed/TypedObject.java", "methodNumberAfterChange": 14, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tOption<CalledMethodTarget> new_findSpecificMethod(String methodName,\r", "+\tOption<ICalledMethodTarget> new_findSpecificMethod(String methodName,\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t\r \tOption<ICalledMethodTarget> new_findSpecificMethod(String methodName,\r \t\t\tint argCount, Evaluator evaluator);", "id": "5a86bb537b34987bf4efd84a717663a1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r     public void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainInjectionTraverse.java", "methodNumberAfterChange": 6, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-    \t\t\tCalledMethodTarget target = PlugBoard.lookupTarget.findSetterOnSut(cell.text(this), this);\r", "+    \t\t\tICalledMethodTarget target = PlugBoard.lookupTarget.findSetterOnSut(cell.text(this), this);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     public void processRow(Row row, TestResults testResults)", "id": "5a9440db23018848a01e4557b478141d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic CalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator) {\r", "+\tpublic ICalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic ICalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator)", "id": "614becd63da11f6df45fa0d0a5e9d39c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic CalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception {\r", "+\tpublic ICalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic ICalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception", "id": "66d7eb27782dfd51c5afa754a07f4036", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r \tpublic CalledMethodTarget target()", "fileName": "src/fitlibrary/collection/CollectionSetUpTraverse.java", "methodNumberAfterChange": 11, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic CalledMethodTarget target() {\r", "+\tpublic ICalledMethodTarget target() {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic ICalledMethodTarget target()", "id": "698e704f2199df35eed4326af045665d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 13, "signatureBeforeChange": "\r \t\tpublic OutputColumnTarget(CalledMethodTarget target)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 13, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tpublic OutputColumnTarget(CalledMethodTarget target) {\r", "+\t\tpublic OutputColumnTarget(ICalledMethodTarget target) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t\tpublic OutputColumnTarget(ICalledMethodTarget target)", "id": "6a1417b3b75be569381f6010bacd552f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \tpublic CalledMethodTarget new_optionallyFindGetterOnTypedObject(String propertyName, Evaluator evaluator);", "fileName": "src/fitlibrary/typed/TypedObject.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic CalledMethodTarget new_optionallyFindGetterOnTypedObject(String propertyName, Evaluator evaluator);\r", "+\tpublic ICalledMethodTarget new_optionallyFindGetterOnTypedObject(String propertyName, Evaluator evaluator);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic ICalledMethodTarget new_optionallyFindGetterOnTypedObject(String propertyName, Evaluator evaluator);", "id": "6a84af5c1ce506d0023a8f682e7fc277", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 10, "signatureBeforeChange": "\r \t\tpublic InputColumnTarget(CalledMethodTarget target)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 10, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tpublic InputColumnTarget(CalledMethodTarget target) {\r", "+\t\tpublic InputColumnTarget(ICalledMethodTarget target) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t\tpublic InputColumnTarget(ICalledMethodTarget target)", "id": "7576fa89f185a73c4d3ba2c89644ec5a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 12, "signatureBeforeChange": "\r     private CalledMethodTarget getGetterTarget(Cell cell, String name, Object sut, boolean considerContext, TestResults testResults)", "fileName": "src/fitlibraryGeneric/traverse/ReferenceTraverse.java", "methodNumberAfterChange": 12, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-    private CalledMethodTarget getGetterTarget(Cell cell, String name, Object sut, boolean considerContext, TestResults testResults) {\r", "+    private ICalledMethodTarget getGetterTarget(Cell cell, String name, Object sut, boolean considerContext, TestResults testResults) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     private ICalledMethodTarget getGetterTarget(Cell cell, String name, Object sut, boolean considerContext, TestResults testResults)", "id": "77aa8aed26ab624c90a03feba69b9b6f", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 60, "signatureBeforeChange": "\r \tpublic void eventuallyMatches(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 60, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void eventuallyMatches(TestResults testResults, final Row row) throws Exception", "id": "7a28404a799d78a0d302cd63a145e679", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainCheckTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\t\t    \tCalledMethodTarget target = PlugBoard.lookupTarget.findGetterOnSut(cell.text(this),this,\"Type\");\r", "+\t\t\t    \tICalledMethodTarget target = PlugBoard.lookupTarget.findGetterOnSut(cell.text(this),this,\"Type\");\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "id": "82a72ce130c4dc4419e05b8f0c906c76", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r     private Object getPropertyOfObject(Cell cell, Object object, boolean last, TestResults testResults)", "fileName": "src/fitlibraryGeneric/traverse/ReferenceTraverse.java", "methodNumberAfterChange": 8, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-            CalledMethodTarget target = getGetterTarget(cell,name,object,last,testResults);\r", "+            ICalledMethodTarget target = getGetterTarget(cell,name,object,last,testResults);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     private Object getPropertyOfObject(Cell cell, Object object, boolean last, TestResults testResults)", "id": "855fa09db55b74578243996bc83eca67", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 63, "signatureBeforeChange": "\r \tpublic void eventuallyContains(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 63, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void eventuallyContains(TestResults testResults, final Row row) throws Exception", "id": "880c7541a40c5dda23ca93d17f78ac41", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r     private void bindFirstRowToTargetsForObject(Object element, Row firstRow, Row row, TestResults testResults)", "fileName": "src/fitlibraryGeneric/list/ListSetUpTraverse2.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-        targets = new CalledMethodTarget[firstRow.size()];\r", "+        targets = new ICalledMethodTarget[firstRow.size()];\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     private void bindFirstRowToTargetsForObject(Object element, Row firstRow, Row row, TestResults testResults)", "id": "8a7692d4dc6cb2b954402dbfe08847fa", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r     public void bindFirstRowToTarget(Row row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/function/CalculateTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-                        CalledMethodTarget target = PlugBoard.lookupTarget.findMethodOrGetter(methodName, arguments, \"TypeOfResult\", this);\r", "+                        ICalledMethodTarget target = PlugBoard.lookupTarget.findMethodOrGetter(methodName, arguments, \"TypeOfResult\", this);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     public void bindFirstRowToTarget(Row row, TestResults testResults)", "id": "8b08580f090bd1abd99a2102b74a0ff5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r \tpublic CalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType)", "fileName": "src/fitlibrary/closure/LookupMethodTargetStandard.java", "methodNumberAfterChange": 10, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tpublic CalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType) {\r", "+\tpublic ICalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic ICalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType)", "id": "96cf111c9ef8078342536f15a1293dac", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \tprivate static void callSetter(CalledMethodTarget target, Cell nextCell, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectSetUpTraverse.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tprivate static void callSetter(CalledMethodTarget target, Cell nextCell, TestResults testResults) {\r", "+\tprivate static void callSetter(ICalledMethodTarget target, Cell nextCell, TestResults testResults) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tprivate static void callSetter(ICalledMethodTarget target, Cell nextCell, TestResults testResults)", "id": "9f770364c005892fea733fb60a02dbb4", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 14, "signatureBeforeChange": "\r     @SuppressWarnings(\"unchecked\")\r \tprotected CalledMethodTarget bindPropertyGetterForTypedObject(String name, TypedObject typedObject)", "fileName": "src/fitlibrary/collection/CollectionTraverse.java", "methodNumberAfterChange": 14, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tprotected CalledMethodTarget bindPropertyGetterForTypedObject(String name, TypedObject typedObject) {\r", "+\tprotected ICalledMethodTarget bindPropertyGetterForTypedObject(String name, TypedObject typedObject) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r     @SuppressWarnings(\"unchecked\")\r \tprotected ICalledMethodTarget bindPropertyGetterForTypedObject(String name, TypedObject typedObject)", "id": "a84ee105082709391b49fcd5bb4e29b9", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectSetUpTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\t\t\t\t\tCalledMethodTarget target = PlugBoard.lookupTarget.findSetterOnSut(cell.text(this), this);\r", "+\t\t\t\t\t\tICalledMethodTarget target = PlugBoard.lookupTarget.findSetterOnSut(cell.text(this), this);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic void processRow(Row row, TestResults testResults)", "id": "b7efa1c24fa6d9cd84d6c1815a1fe162", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 7, "signatureBeforeChange": "\r \r \t\tpublic ColumnTarget(CalledMethodTarget target)", "fileName": "src/fitlibrary/traverse/function/RuleTable.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tpublic ColumnTarget(CalledMethodTarget target) {\r", "+\t\tpublic ColumnTarget(ICalledMethodTarget target) {\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \r \t\tpublic ColumnTarget(ICalledMethodTarget target)", "id": "b8a9e08d327809b0bd030044961eff7e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 64, "signatureBeforeChange": "\r \tpublic void doesNotContain(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 64, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void doesNotContain(TestResults testResults, final Row row) throws Exception", "id": "b8f9f2ec7c002a11ed3318cef83f120d", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \tCalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType);", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 7, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator);\r", "-\tCalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType);\r", "+\tICalledMethodTarget findSetterOnSut(String propertyName, Evaluator evaluator);\r", "+\tICalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findGetterOnSut(String propertyName, Evaluator evaluator, String returnType);", "id": "cdcebecac843f93edd3c5647b71ce540", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 61, "signatureBeforeChange": "\r \tpublic void doesNotMatch(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 61, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void doesNotMatch(TestResults testResults, final Row row) throws Exception", "id": "e1ab9d07f74e38551db2efcf9f1e326b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 59, "signatureBeforeChange": "\r \tpublic void matches(TestResults testResults, final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 59, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,0,less);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,0,less);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void matches(TestResults testResults, final Row row) throws Exception", "id": "e5247d2c797c97df3e978793be1dda65", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tCalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception;", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findMethodInEverySecondCell(Evaluator evaluator, Row row, int allArgs) throws Exception;\r", "-\tCalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception;\r", "+\tICalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception;\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findTheMethodMapped(String name, int argCount, Evaluator evaluator) throws Exception;", "id": "e5dbc4825838895306d050580c82b53c", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "\r \tCalledMethodTarget findMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator);", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findMethodOrGetter(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception;\r", "-\tCalledMethodTarget findMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator);\r", "+\tICalledMethodTarget findMethodOrGetter(String name, List<String> methodArgs, String returnType, Evaluator evaluator) throws Exception;\r", "+\tICalledMethodTarget findMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findMethod(String name, List<String> methodArgs, String returnType, Evaluator evaluator);", "id": "e7d26b5253ca0adaa284609fea3cf669", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 79, "signatureBeforeChange": "\r \tpublic void log(Row row, TestResults testResults) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/DoTraverse.java", "methodNumberAfterChange": 79, "commitBeforeChange": "2d301584c2e3f6bff95df3a23d038d3c26d71f76", "diff": ["-\t\t\tCalledMethodTarget target = findMethodFromRow(row,1, 2);\r", "+\t\t\tICalledMethodTarget target = findMethodFromRow(row,1, 2);\r"], "commitAfterChange": "12148fc44971a9675907d16fb4f5c02ec935596d", "signatureAfterChange": "\r \tpublic void log(Row row, TestResults testResults) throws Exception", "id": "ef0e969ffe11688dc6530e5073bb71b6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \t\tCalledMethodTarget createCalledMethodTarget(Closure closure, Evaluator evaluator);", "fileName": "src/fitlibraryGeneric/typed/GenericTypedObject.java", "methodNumberAfterChange": 5, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t\tCalledMethodTarget createCalledMethodTarget(Closure closure, Evaluator evaluator);\r", "+\t\tICalledMethodTarget createCalledMethodTarget(Closure closure, Evaluator evaluator);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \t\tICalledMethodTarget createCalledMethodTarget(Closure closure, Evaluator evaluator);", "id": "f205e6e38d42d4150f71a8d4fddbfc50", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \tCalledMethodTarget findPostfixSpecialMethod(Evaluator evaluator, String name);", "fileName": "src/fitlibrary/closure/LookupMethodTarget.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\tCalledMethodTarget findPostfixSpecialMethod(Evaluator evaluator, String name);\r", "+\tICalledMethodTarget findPostfixSpecialMethod(Evaluator evaluator, String name);\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tICalledMethodTarget findPostfixSpecialMethod(Evaluator evaluator, String name);", "id": "f506e1ae079b9148497549e92fc2806a", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "277dc8ac26e93417bfb62ce8bbe6289d", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"]}