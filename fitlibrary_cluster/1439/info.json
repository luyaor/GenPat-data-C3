{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic Object interpretWholeTable(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 5, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t\t\t\tinterpretEvaluator((Evaluator)result, table, testResults);\r", "+\t\t\t\tEvaluator evaluator = (Evaluator)result;\r", "+\t\t\t\tevaluator.setRuntimeContext(runtimeContext);\r", "+\t\t\t\tinterpretEvaluator(evaluator, table, testResults);\r", "-\t\t\t} else if (getAlienTraverseHandler().isAlienTraverse(result)) {\r", "-\t\t\t\tgetAlienTraverseHandler().doTable(result,table,testResults,this);\r", "-\t\t\t} else // do the rest of the table with this traverse\r", "+\t\t\t}\r", "+\t\t\tif (result instanceof Fixture)\r", "+\t\t\t\tgetFitHandler().doTable(result,table,testResults,this);\r", "+\t\t\telse // do the rest of the table with this traverse\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \tpublic Object interpretWholeTable(Table table, TestResults testResults)", "id": "04b6d5f902157a095a4c4118e100e334", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 0, "signatureBeforeChange": "\r \t\r \tpublic DoFlow(FlowEvaluator flowEvaluator)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 0, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic DoFlow(FlowEvaluator flowEvaluator) {\r", "+\tpublic DoFlow(FlowEvaluator flowEvaluator, IScopeStack scopeStack, RuntimeContextInternal runtime) {\r", "-\t\tdoAutoWrapper = new DoAutoWrapper(flowEvaluator);\r", "-\t\tflowEvaluator.setRuntimeContext(runtimeContext);\r", "-\t\truntimeContext.setDynamicVariable(Traverse.FITNESSE_URL_KEY,FitServerBridge.FITNESSE_URL);\r", "-\t\truntimeContext.setObjectCollector(this);\r", "+\t\tthis.scopeStack = scopeStack;\r", "+\t\tthis.runtime = runtime;\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t\r \tpublic DoFlow(FlowEvaluator flowEvaluator, IScopeStack scopeStack, RuntimeContextInternal runtime)", "id": "629851fc8177e80763c6bab58baeb0a5", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/DoTraverseInterpreter.java", "methodNumberAfterChange": 3, "commitBeforeChange": "fc8e697e0b6ce0d0c19d98f2b34d0b0b9e21ffaa", "diff": ["-\t\t\t\t\t\tDoEvaluator resultingEvaluator = (DoEvaluator)result;\r", "-\t\t\t\t\t\tresultingEvaluator.setRuntimeContext(runtimeContext);\r", "-\t\t\t\t\t\tresultingEvaluator.setUp(table, testResults);\r", "-\t\t\t\t\t\tresultingEvaluator.interpretInFlow(new Table(row),testResults);\r", "-\t\t\t\t\t\tresultingEvaluator.tearDown(table, testResults);\r", "+\t\t\t\t\t\tDoEvaluator doEvaluator = (DoEvaluator)result;\r", "+\t\t\t\t\t\tdoEvaluator.setRuntimeContext(runtimeContext);\r", "+\t\t\t\t\t\tdoEvaluator.interpretInFlow(new Table(row),testResults);\r", "-\t\t\t\t\t\tinterpretEvaluator((Evaluator)result,new Table(row),testResults);\r", "+\t\t\t\t\t\tEvaluator evaluator = (Evaluator)result;\r", "+\t\t\t\t\t\tevaluator.setRuntimeContext(runtimeContext);\r", "+\t\t\t\t\t\tinterpretEvaluator(evaluator,new Table(row),testResults);\r", "-\t\t\t\t\t} else if (getAlienTraverseHandler().isAlienTraverse(result)) {\r", "-\t\t\t\t\t\tgetAlienTraverseHandler().doTable(result, new Table(row),testResults,this);\r", "+\t\t\t\t\t} else if (result instanceof Fixture) {\r", "+\t\t\t\t\t\tgetFitHandler().doTable(result, new Table(row),testResults,this);\r"], "commitAfterChange": "0fcaf42e2a6c9a3f5f224f6ee86c84fd493c8818", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "cd8a7b7e282af1b148dc7db7065ac623", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "7dad653f3ba729f755df958d5be6be5e", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}