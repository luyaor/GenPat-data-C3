{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainCheckTraverse.java", "methodNumberAfterChange": 5, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\t\t    \ttarget.invokeAndCheck(new RowOnParse(),cell2,testResults,false);\r", "+\t\t\t    \ttarget.invokeAndCheck(TableFactory.row(),cell2,testResults,false);\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tprivate void processRow(Row row, TestResults testResults)", "id": "0598547de2f007b7a8a96fbc2f1b6c18", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \tpublic void callSuiteTearDown(Object suiteFixture, TestResults testResults)", "fileName": "src/fitlibrary/flow/SetUpTearDown.java", "methodNumberAfterChange": 3, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\tcallMethod(suiteFixture,\"suiteTearDown\",new RowOnParse(\"a\"),testResults);\r", "+\t\tcallMethod(suiteFixture,\"suiteTearDown\",TableFactory.row(\"a\"),testResults);\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic void callSuiteTearDown(Object suiteFixture, TestResults testResults)", "id": "8bd7a380e922e3a3b28f2a06d23d5583", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "fileName": "src/fitlibrary/object/DomainObjectCheckTraverse.java", "methodNumberAfterChange": 4, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\t\t\t\ttarget.invokeAndCheck(new RowOnParse(),row.cell(i+1),testResults,false);\r", "+\t\t\t\t\ttarget.invokeAndCheck(TableFactory.row(),row.cell(i+1),testResults,false);\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic void interpret(Row row, TestResults testResults)", "id": "e23d51d551aa91b72a472a276940c3db", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "909781f7bf732f73edf20fce3ef41a56", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}