{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r     public RowOnParse(String... ss)", "fileName": "src/fitlibrary/table/RowOnParse.java", "methodNumberAfterChange": 38, "commitBeforeChange": "360766661a8ffa74da803b868c7287cb9ef515ab", "diff": ["-    public RowOnParse(String... ss) {\r", "-    \tthis();\r", "-    \tfor (String s : ss)\r", "-    \t\taddCell(s);\r", "-    }\r", "+\t@Override\r", "+\tpublic Iterator<Cell> iterator() {\r", "+\t\tList<Cell> list = new ArrayList<Cell>();\r", "+\t\tfor (int i = 0; i < size(); i++)\r", "+\t\t\tlist.add(elementAt(i));\r", "+\t\treturn list.iterator();\r", "+\t}\r"], "commitAfterChange": "82ea1ae4b8bc2afce333bb1224107b9b59ed21c5", "signatureAfterChange": "\r \t@Override\r \tpublic Iterator<Cell> iterator()", "id": "440bfa77fd559324b72c8ca20f4c5198", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 11, "signatureBeforeChange": "\r \tpublic Tables deepCopy()", "fileName": "src/fitlibrary/table/TablesOnParse.java", "methodNumberAfterChange": 11, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-\t\treturn new TablesOnParse(ParseUtility.copyParse(parse));\r", "+\t\tTables copy = TableFactory.tables();\r", "+\t\tfor (int i = 0; i < size(); i++)\r", "+\t\t\tcopy.add(table(i).copy());\r", "+\t\treturn copy;\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic Tables deepCopy()", "id": "4ac54c717bf5f3ae19a9907c2ac377ce", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 9, "signatureBeforeChange": "\r     public void missing(TestResults testResults)", "fileName": "src/fitlibrary/table/TableOnParse.java", "methodNumberAfterChange": 33, "commitBeforeChange": "a31639422a830880e68972b09ea7debebd2f084e", "diff": ["-    public void missing(TestResults testResults) {\r", "-        row(firstErrorRow).missing(testResults);\r", "-    }\r", "+\tpublic Table copy() {\r", "+\t\tTable copy = TableFactory.table();\r", "+\t\tfor (int i = 0; i < size(); i++)\r", "+\t\t\tcopy.addRow(row(i).copy());\r", "+\t\tcopy.setLeader(getLeader());\r", "+\t\tcopy.setTrailer(getTrailer());\r", "+\t\treturn copy;\r", "+\t}\r"], "commitAfterChange": "2c6fd716f0ddbc6f8d43a941ccbb30e98b026f07", "signatureAfterChange": "\r \tpublic Table copy()", "id": "eddb72c405f2c0f25bca0772b1a48c4e", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "274138c1d58d45395d52dd952f21acb2", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}