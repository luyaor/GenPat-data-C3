{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 5, "signatureBeforeChange": "\r \tpublic TwoStageSpecial log(final Row row) throws Exception", "fileName": "src/fitlibrary/traverse/workflow/special/PrefixSpecialAction.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e9b167853c810372fec881bd87655bfdf7a0e704", "diff": ["-\t}\r", "-\t\treturn show(row,PrefixSpecialAction.ShowSyle.LOGGED);\r", "-\t}\r", "+\t\tlogger.trace(\"Calling log()\");\r", "+\t\t\t\t\tlogger.trace(\"Calling \"+target);\r", "+\t\t\t\t\treportBoolean(result, row.at(1), testResults);\r", "+\t\t\t\t\treport(target.getResultString(result));\r", "+\t\t\tprivate void report(String text) {\r", "+\t\t\t\tactionContext.logMessage(text);\r", "+\t}\r"], "commitAfterChange": "3ce874ef3b0aa2d7354fe1659a67b0bd9777787a", "signatureAfterChange": "\r \tpublic TwoStageSpecial log(final Row row) throws Exception", "id": "51ebeb6b40aa3b587a1239f6fc3cd22b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \tpublic void runTable(Table table, ITableListener tableListener)", "fileName": "src/fitlibrary/flow/DoFlow.java", "methodNumberAfterChange": 4, "commitBeforeChange": "8655c08986fab4cb3523c8934e8765739689b282", "diff": ["-\t\t\t    \t\t} else if (subject instanceof CollectionSetUpTraverse || subject instanceof SetUpFixture) {\r", "-\t\t\t    \t\t\thandleOtherEvaluator(typedResult,(Evaluator)subject, row, testResults);\r", "-\t\t\t    \t\t\treturn;// have finished table\r", "-\t\t\t    \t\t} else if (subject instanceof DoEvaluator) {\r", "-\t\t\t    \t\t\tpushOnScope(typedResult,row,testResults);\r", "-\t\t\t    \t\t} else if (subject instanceof Evaluator) { // Calculate, etc\r", "-\t\t\t    \t\t\thandleOtherEvaluator(typedResult,(Evaluator)subject, row, testResults);\r", "-\t\t\t    \t\t\treturn; // have finished table\r", "-\t\t\t    \t\t} else if (subject instanceof Fixture) {\r", "-\t\t\t    \t\t\tflowEvaluator.fitHandler().doTable((Fixture) subject,TableFactory.table(row),testResults,flowEvaluator);\r", "-\t\t\t    \t\t\treturn; // have finished table\r", "-\t\t\t    \t\t}\r", "+\t\t\t    \t\t} else {\r", "+\t\t\t\t\t\t\tTable restOfTable = rowNo == 0 ? table : table.fromAt(rowNo);\r", "+\t\t\t\t\t\t\tif (subject instanceof CollectionSetUpTraverse || subject instanceof SetUpFixture) {\r", "+\t\t\t\t\t\t\t\thandleOtherEvaluator(typedResult,(Evaluator)subject, row, restOfTable,testResults);\r", "+\t\t\t\t\t\t\t\tif (restOfTable != table)\r", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < restOfTable.size(); i++)\r", "+\t\t\t\t\t\t\t\t\t\ttable.replaceAt(rowNo+i, restOfTable.at(i));\r", "+\t\t\t\t\t\t\t\treturn;// have finished table\r", "+\t\t\t\t\t\t\t} else if (subject instanceof DoEvaluator) {\r", "+\t\t\t\t\t\t\t\tpushOnScope(typedResult,row,testResults);\r", "+\t\t\t\t\t\t\t} else if (subject instanceof Evaluator) { // Calculate, etc\r", "+\t\t\t\t\t\t\t\thandleOtherEvaluator(typedResult,(Evaluator)subject, row, restOfTable, testResults);\r", "+\t\t\t\t\t\t\t\tif (restOfTable != table)\r", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < restOfTable.size(); i++)\r", "+\t\t\t\t\t\t\t\t\t\ttable.replaceAt(rowNo+i, restOfTable.at(i));\r", "+\t\t\t\t\t\t\t\treturn; // have finished table\r", "+\t\t\t\t\t\t\t} else if (subject instanceof Fixture) {\r", "+\t\t\t\t\t\t\t\tTable remainingTable = restOfTable.asTableOnParse();\r", "+\t\t\t\t\t\t\t\tflowEvaluator.fitHandler().doTable((Fixture) subject,remainingTable,testResults,flowEvaluator);\r", "+\t\t\t\t\t\t\t\tif (restOfTable != table)\r", "+\t\t\t\t\t\t\t\t\tfor (int i = 0; i < remainingTable.size(); i++)\r", "+\t\t\t\t\t\t\t\t\t\ttable.replaceAt(rowNo+i, remainingTable.at(i));\r", "+\t\t\t\t\t\t\t\treturn; // have finished table\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r"], "commitAfterChange": "45cd4c7886612af0bbcf0d9d5705be6bd83dc738", "signatureAfterChange": "\r \tpublic void runTable(Table table, ITableListener tableListener)", "id": "bea7036173d0946c3ebb367218dd58e1", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "8785a2b5392714ca8e908f8b2dbd2aa3", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_DBSCAN"]}