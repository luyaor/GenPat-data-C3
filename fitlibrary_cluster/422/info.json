{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 6, "signatureBeforeChange": "    public int compareTo(Number obj)", "fileName": "src/fit/ScientificDouble.java", "methodNumberAfterChange": 6, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public int compareTo(Number obj) {", "-    double other = obj.doubleValue();", "-    double diff = value - other;", "-    if (diff < -precision) return -1;", "-    if (diff > precision) return 1;", "-    if (Double.isNaN(value) && Double.isNaN(other)) return 0;", "-    if (Double.isNaN(value)) return 1;", "-    if (Double.isNaN(other)) return -1;", "-    return 0;", "-  }", "+\t@Override", "+\tpublic int compareTo(Number obj) {", "+\t\tdouble other = obj.doubleValue();", "+\t\tdouble diff = value - other;", "+\t\tif (diff < -precision)", "+\t\t\treturn -1;", "+\t\tif (diff > precision)", "+\t\t\treturn 1;", "+\t\tif (Double.isNaN(value) && Double.isNaN(other))", "+\t\t\treturn 0;", "+\t\tif (Double.isNaN(value))", "+\t\t\treturn 1;", "+\t\tif (Double.isNaN(other))", "+\t\t\treturn -1;", "+\t\treturn 0;", "+\t}"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "  \t@Override \tpublic int compareTo(Number obj)", "id": "af0a08cd3593f274af7918698c80e6f6", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \r   public boolean equals(Object other)", "fileName": "src/fit/decorator/util/Delta.java", "methodNumberAfterChange": 2, "commitBeforeChange": "ab046d65905e417d3e94904fed3739580da01753", "diff": ["-  public boolean equals(Object other) {\r", "-    if (this == other) {\r", "-      return true;\r", "-    }\r", "-    if (null == other) {\r", "-      return false;\r", "-    }\r", "-    if (!this.getClass().getName().equals(other.getClass().getName())) {\r", "-      return false;\r", "-    }\r", "-    return this.dataType.equals(((Delta) other).dataType) && this.value.equals(((Delta) other).value);\r", "-  }\r", "+\t@Override\r", "+\tpublic boolean equals(Object other) {\r", "+\t\tif (this == other) {\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t\tif (null == other) {\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\tif (!this.getClass().getName().equals(other.getClass().getName())) {\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\treturn this.dataType.equals(((Delta) other).dataType)\r", "+\t\t\t\t&& this.value.equals(((Delta) other).value);\r", "+\t}\r"], "commitAfterChange": "ccec4a1da96e4230996fd3f45653be59c64dac88", "signatureAfterChange": "\r \r \t@Override\r \tpublic boolean equals(Object other)", "id": "d33460425bde0708c6b37dc35c59d710", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "fc7a491ed2b3bcc24235fb0478f982c6", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"]}