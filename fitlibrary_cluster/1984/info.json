{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r     public Object interpret(Table table, TestResults testResults)", "fileName": "src/fitlibrary/DefineAction.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-    \tif (table.elementAt(1).size() != 1)\r", "+    \tif (table.at(1).size() != 1)\r", "-    \tif (hasClass && table.elementAt(2).size() != 1)\r", "+    \tif (hasClass && table.at(2).size() != 1)\r", "-    \tif (!table.elementAt(bodyRow).elementAt(0).hasEmbeddedTables())\r", "+    \tif (!table.at(bodyRow).at(0).hasEmbeddedTables())\r", "-    \t\twikiClassName = table.elementAt(1).text(0,this);\r", "-    \tprocessDefinition(table.elementAt(1).elementAt(0).getEmbeddedTables(), testResults);\r", "+    \t\twikiClassName = table.at(1).text(0,this);\r", "+    \tprocessDefinition(table.at(1).at(0).getEmbeddedTables(), testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r     public Object interpret(Table table, TestResults testResults)", "id": "0d86e37b1f8715006b4fb0a0c1cfdcc7", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 8, "signatureBeforeChange": "\r \t@Test\r \tpublic void rowOfTwoHasSizeOf2()", "fileName": "test/fitlibrary/matcher/TestTableBuilderForTests.java", "methodNumberAfterChange": 9, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\tRowBuilder rowBuilder = row().\r", "-\t\t\twith(cell(),cell());\r", "-\t\tRow row = rowBuilder.expect(context);\r", "+\t\tRowBuilder rowBuilder = row().with(cell(),cell());\r", "+\t\tRow row = rowBuilder.mock(context);\r", "-\t\tassertThat(row.last(), is(row.elementAt(1)));\r", "+\t\tassertThat(row.last(), is(row.at(1)));\r", "-\t\tassertThat(iterator.next(), sameInstance(row.elementAt(0)));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(0)));\r", "-\t\tassertThat(iterator.next(), sameInstance(row.elementAt(1)));\r", "+\t\tassertThat(iterator.next(), sameInstance(row.at(1)));\r", "-\t\tassertThat(row.elementAt(0), not(sameInstance(row.elementAt(1))));\r", "+\t\tassertThat(row.at(0), not(sameInstance(row.at(1))));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Test\r \tpublic void rowOfTwoHasSizeOf2()", "id": "650ccb955fe85a39bbdfd8b4301015f0", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 16, "signatureBeforeChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "fileName": "test/fitlibrary/flow/TestDoFlow.java", "methodNumberAfterChange": 16, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-\t\t\tallowing(tables).elementAt(0); will(returnValue(table1));\r", "-\t\t\tallowing(tables).elementAt(1); will(returnValue(table1));\r", "+\t\t\tallowing(tables).at(0); will(returnValue(table1));\r", "+\t\t\tallowing(tables).at(1); will(returnValue(table1));\r", "-\t\t\tallowing(table1).elementAt(0); will(returnValue(row1));\r", "-\t\t\tallowing(table1).elementAt(1); will(returnValue(row2));\r", "-\t\t\tallowing(row1).elementAt(0); will(returnValue(cell1));\r", "+\t\t\tallowing(table1).at(0); will(returnValue(row1));\r", "+\t\t\tallowing(table1).at(1); will(returnValue(row2));\r", "+\t\t\tallowing(row1).at(0); will(returnValue(cell1));\r", "-\t\t\tallowing(row2).elementAt(0); will(returnValue(cell1));\r", "+\t\t\tallowing(row2).at(0); will(returnValue(cell1));\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \tprivate void expectTwoRowsInOneTableAndOneInAnother()", "id": "a732d676bf4516c1023a7fe608e0f147", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/collection/array/ArrayTraverse.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e2da601cf629ddf34f7877021df06bd4f5925d28", "diff": ["-        \ttable.elementAt(0).elementAt(0).pass(testResults);\r", "+        \ttable.at(0).at(0).pass(testResults);\r", "-            Row row = table.elementAt(rowNo);\r", "+            Row row = table.at(rowNo);\r", "-                if (parser.matches(row.elementAt(0),get(arrayIndex),testResults)) {\r", "+                if (parser.matches(row.at(0),get(arrayIndex),testResults)) {\r", "-                    row.elementAt(0).expectedElementMissing(testResults);\r", "+                    row.at(0).expectedElementMissing(testResults);\r", "-            table.elementAt(rowNo).missing(testResults);\r", "+            table.at(rowNo).missing(testResults);\r"], "commitAfterChange": "50412ddfbe4cd56a8db4cfcca0f083c1114f83fe", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "c9e7523f68085a99d92a8cf2b2edcf72", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "8c203bb5ea914a0c605810a68197b273", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["AST_HIERARCHICAL"]}