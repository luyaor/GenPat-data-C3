{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Override\r \tpublic TypedObject run(IRow row, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/DefinedActionCaller.java", "methodNumberAfterChange": 3, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\tpublic TypedObject run(IRow row, TestResults testResults) {\r", "-\t\tCallManager.startCall(parameterSubstitution);\r", "+\tpublic TypedObject run(Row row, TestResults testResults) {\r", "+\t\tDefinedActionCallManager definedActionCallManager = doTraverse.getRuntimeContext().getDefinedActionCallManager();\r", "+\t\tdefinedActionCallManager.startCall(parameterSubstitution);\r", "-\t\t\tCallManager.endCall(parameterSubstitution);\r", "+\t\t\tdefinedActionCallManager.endCall(parameterSubstitution);\r", "-\t\tif (!runtime.toExpandDefinedActions() && CallManager.readyToShow() && !testResults.isAbandoned())\r", "-\t\t\trow.addCell(new Cell(new Tables(CallManager.getShowsTable())));\r", "+\t\tif (!runtime.toExpandDefinedActions() && definedActionCallManager.readyToShow() && !runtime.isAbandoned(testResults))\r", "+\t\t\trow.addCell(new CellOnParse(new TablesOnParse(definedActionCallManager.getShowsTable())));\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t@Override\r \tpublic TypedObject run(Row row, TestResults testResults)", "id": "8e2bcce910d62a05342518cd26f36839", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "fileName": "src/fitlibrary/traverse/workflow/caller/MultiDefinedActionTraverse.java", "methodNumberAfterChange": 1, "commitBeforeChange": "674c9b05d3e6a631948589b0d9b45e3bdb9c0904", "diff": ["-\t\t\tgetRuntimeContext().pushLocal();\r", "+\t\t\tgetRuntimeContext().pushLocalDynamicVariables();\r", "-\t\t\t\tif (testResults.isAbandoned())\r", "+\t\t\t\tif (runtime.isAbandoned(testResults))\r", "-\t\t\t\t\t\tTables body = multiParameterSubstitution.getCopyOfBody();\r", "-\t\t\t\t\t\tTestResults subTestResults = new TestResults(testResults);\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tCallManager.startCall(multiParameterSubstitution);\r", "-\t\t\t\t\t\t\tmultiParameterSubstitution.bind(parameterRow,row,getDynamicVariables(),this);\r", "-\t\t\t\t\t\t\trunBody(body,testResults,subTestResults);\r", "-\t\t\t\t\t\t\tcolourReport(row, testResults, subTestResults);\r", "-\t\t\t\t\t\t} finally {\r", "-\t\t\t\t\t\t\tCallManager.endCall(multiParameterSubstitution);\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tif (runtime.toExpandDefinedActions() || subTestResults.problems() || testResults.isAbandoned())\r", "-\t\t\t\t\t\t\trow.addCell(new Cell(\"Defined action call:\",body));\r", "-\t\t\t\t\t\telse if (CallManager.readyToShow())\r", "-\t\t\t\t\t\t\trow.addCell(new Cell(new Tables(CallManager.getShowsTable())));\r", "+\t\t\t\t\t\trunRow(row, parameterRow, testResults);\r", "-\t\t\tgetRuntimeContext().popLocal();\r", "+\t\t\tgetRuntimeContext().popLocalDynamicVariables();\r"], "commitAfterChange": "a31639422a830880e68972b09ea7debebd2f084e", "signatureAfterChange": "\r \t@Override\r \tpublic Object interpretAfterFirstRow(Table table, TestResults testResults)", "id": "fe4e784487d2d56cb93e95787ad7ad10", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "ca259cc9b291cb28606e9ef1ed795c43", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_DBSCAN"]}