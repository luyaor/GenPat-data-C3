{"members": [{"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 4, "signatureBeforeChange": "\r \t@Test\r \tpublic void binaryPostfixInnerRunsReturningFalse() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 4, "commitBeforeChange": "e4ab562e1e827e062d1be5204027041002fec975", "diff": ["-\t\t\tallowing(evaluator).getRuntimeContext();\r", "-\t\t\twill(returnValue(runtime));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find String\");\r", "-\t\t\twill(returnValue(\"findString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "-\t\t\twill(returnValue(\"showString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "-\t\t\twill(returnValue(\"findDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "-\t\t\twill(returnValue(\"showDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "-\t\t\twill(returnValue(\"findBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "-\t\t\twill(returnValue(\"showBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\" m\");\r", "-\t\t\twill(returnValue(\"m\"));\r"], "commitAfterChange": "08cc4ee7c5f377198d1f5457a45687cb9cba9813", "signatureAfterChange": "\r \t@Test\r \tpublic void binaryPostfixInnerRunsReturningFalse() throws Exception", "id": "34c90f5f83d4391883fb537d11813e02", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 1, "signatureBeforeChange": "\r \t@Test\r \tpublic void binaryPrefixInnerTargetNotFound() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 1, "commitBeforeChange": "e4ab562e1e827e062d1be5204027041002fec975", "diff": ["-\t\t\tallowing(evaluator).getRuntimeContext();\r", "-\t\t\twill(returnValue(runtime));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find String\");\r", "-\t\t\twill(returnValue(\"findString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "-\t\t\twill(returnValue(\"showString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "-\t\t\twill(returnValue(\"findDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "-\t\t\twill(returnValue(\"showDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "-\t\t\twill(returnValue(\"findBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "-\t\t\twill(returnValue(\"showBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\" m\");\r", "-\t\t\twill(returnValue(\"m\"));\r"], "commitAfterChange": "08cc4ee7c5f377198d1f5457a45687cb9cba9813", "signatureAfterChange": "\r \t@Test\r \tpublic void binaryPrefixInnerTargetNotFound() throws Exception", "id": "57233d85b6695257a6f1641ad87dea1b", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 3, "signatureBeforeChange": "\r \t@Test\r \tpublic void binaryPostfixInnerTargetNotFound() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 3, "commitBeforeChange": "e4ab562e1e827e062d1be5204027041002fec975", "diff": ["-\t\t\tallowing(evaluator).getRuntimeContext();\r", "-\t\t\twill(returnValue(runtime));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find String\");\r", "-\t\t\twill(returnValue(\"findString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "-\t\t\twill(returnValue(\"showString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "-\t\t\twill(returnValue(\"findDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "-\t\t\twill(returnValue(\"showDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "-\t\t\twill(returnValue(\"findBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "-\t\t\twill(returnValue(\"showBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\" m\");\r", "-\t\t\twill(returnValue(\"m\"));\r"], "commitAfterChange": "08cc4ee7c5f377198d1f5457a45687cb9cba9813", "signatureAfterChange": "\r \t@Test\r \tpublic void binaryPostfixInnerTargetNotFound() throws Exception", "id": "9a410e48226d023435db97d25b619642", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}, {"repository": "git://git.code.sf.net/p/fitlibrary/fitlibrary", "methodNumberBeforeChange": 2, "signatureBeforeChange": "\r \t@Test\r \tpublic void binaryPrefixInnerRunsReturningTrue() throws Exception", "fileName": "test/fitlibrary/special/TestPositionedTargetWasFound.java", "methodNumberAfterChange": 2, "commitBeforeChange": "e4ab562e1e827e062d1be5204027041002fec975", "diff": ["-\t\t\tallowing(evaluator).getRuntimeContext();\r", "-\t\t\twill(returnValue(runtime));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find String\");\r", "-\t\t\twill(returnValue(\"findString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show String\");\r", "-\t\t\twill(returnValue(\"showString\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find DoAction\");\r", "-\t\t\twill(returnValue(\"findDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show DoAction\");\r", "-\t\t\twill(returnValue(\"showDoAction\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"find boolean\");\r", "-\t\t\twill(returnValue(\"findBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\"show boolean\");\r", "-\t\t\twill(returnValue(\"showBoolean\"));\r", "-\t\t\tallowing(runtime).extendedCamel(\" m\");\r", "-\t\t\twill(returnValue(\"m\"));\r"], "commitAfterChange": "08cc4ee7c5f377198d1f5457a45687cb9cba9813", "signatureAfterChange": "\r \t@Test\r \tpublic void binaryPrefixInnerRunsReturningTrue() throws Exception", "id": "cb12b2ec4ef70dc6b27b7d54b04fef32", "@class": "de.fau.cs.inf2.cthree.data.CodeChange"}], "id": "b80f50ddc54d1367c27f603d86be623f", "@class": "de.fau.cs.inf2.cthree.data.Cluster", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"]}